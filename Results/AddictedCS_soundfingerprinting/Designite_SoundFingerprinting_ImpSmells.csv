Implementation smell,Namespace,Class,File,Method,Description
Long Method,SoundFingerprinting.Utils,TestRunner,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Utils\TestRunner.cs,RunTestScenario,The method has 105 lines of code.
Complex Method,SoundFingerprinting.Audio,LowPassFilter,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\LowPassFilter.cs,FilterAndDownsample,Cyclomatic complexity of the method is 8
Complex Method,SoundFingerprinting.FFT,LomontFFT,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\FFT\LomontFFT.cs,RealFFT,Cyclomatic complexity of the method is 8
Complex Method,SoundFingerprinting.Math,HashConverter,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Math\HashConverter.cs,ToLongs,Cyclomatic complexity of the method is 10
Complex Method,SoundFingerprinting.Math,HashConverter,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Math\HashConverter.cs,ToInts,Cyclomatic complexity of the method is 10
Long Parameter List,SoundFingerprinting.Configuration,DefaultRealtimeQueryConfiguration,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Configuration\DefaultRealtimeQueryConfiguration.cs,DefaultRealtimeQueryConfiguration,The method has 5 parameters. Parameters: successCallback' didNotPassFilterCallback' queryFingerprintsCallback' onError' restoredAfterErrorCallback
Long Parameter List,SoundFingerprinting.Configuration,RealtimeQueryConfiguration,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Configuration\RealtimeQueryConfiguration.cs,RealtimeQueryConfiguration,The method has 13 parameters. Parameters: thresholdVotes' resultEntryFilter' successCallback' didNotPassFilterCallback' queryFingerprintsCallback' errorCallback' restoredAfterErrorCallback' downtimeHashes' stride' permittedGap' downtimeCapturePeriod' millisecondsDelay' clusters
Long Parameter List,SoundFingerprinting.DAO.Data,SubFingerprintData,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\DAO\Data\SubFingerprintData.cs,SubFingerprintData,The method has 6 parameters. Parameters: hashes' sequenceNumber' sequenceAt' clusters' subFingerprintReference' trackReference
Long Parameter List,SoundFingerprinting.DAO.Data,SubFingerprintData,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\DAO\Data\SubFingerprintData.cs,SubFingerprintData,The method has 7 parameters. Parameters: hashes' sequenceNumber' sequenceAt' clusters' subFingerprintReference' trackReference' originalPoint
Long Parameter List,SoundFingerprinting.DAO.Data,TrackData,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\DAO\Data\TrackData.cs,TrackData,The method has 9 parameters. Parameters: isrc' artist' title' album' releaseYear' length' trackReference' metaFields' mediaType
Long Parameter List,SoundFingerprinting.DAO.Data,TrackData,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\DAO\Data\TrackData.cs,TrackData,The method has 7 parameters. Parameters: isrc' artist' title' album' releaseYear' length' trackReference
Long Parameter List,SoundFingerprinting.Data,Frame,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Data\Frame.cs,Frame,The method has 5 parameters. Parameters: imageRowCols' rows' cols' startsAt' sequenceNumber
Long Parameter List,SoundFingerprinting.Data,HashedFingerprint,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Data\HashedFingerprint.cs,HashedFingerprint,The method has 5 parameters. Parameters: hashBins' sequenceNumber' startsAt' clusters' originalPoint
Long Parameter List,SoundFingerprinting.Data,QueryMatch,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Data\QueryMatch.cs,QueryMatch,The method has 10 parameters. Parameters: queryMatchId' trackId' queryMatchLength' queryMatchStartsAt' trackStartsAt' trackMatchStartsAt' confidence' queryLength' matchedAt' trackLength
Long Parameter List,SoundFingerprinting.Data,QueryMatch,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Data\QueryMatch.cs,QueryMatch,The method has 11 parameters. Parameters: queryMatchId' trackId' queryMatchLength' queryMatchStartsAt' trackStartsAt' trackMatchStartsAt' confidence' queryLength' matchedAt' trackLength' meta
Long Parameter List,SoundFingerprinting.Data,TrackInfo,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Data\TrackInfo.cs,TrackInfo,The method has 5 parameters. Parameters: id' title' artist' metaFields' mediaType
Long Parameter List,SoundFingerprinting.FFT,SpectrumService,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\FFT\SpectrumService.cs,ExtractLogBins,The method has 6 parameters. Parameters: spectrum' logFrequenciesIndex' logBins' wdftSize' targetArray' targetIndex
Long Parameter List,SoundFingerprinting.LCS,Coverage,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\LCS\Coverage.cs,Coverage,The method has 5 parameters. Parameters: bestPath' queryLength' trackLength' fingerprintLength' permittedGap
Long Parameter List,SoundFingerprinting.LCS,LongestIncreasingTrackSequence,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\LCS\LongestIncreasingTrackSequence.cs,FindLongestSequence,The method has 5 parameters. Parameters: matches' maxLength' max' maxIndex' permittedGap
Long Parameter List,SoundFingerprinting.Query,ConfidenceCalculator,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Query\ConfidenceCalculator.cs,CalculateConfidence,The method has 5 parameters. Parameters: sourceMatchStartsAt' sourceMatchLength' queryLength' originStartsAt' originLength
Long Parameter List,SoundFingerprinting.Query,ConfidenceCalculator,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Query\ConfidenceCalculator.cs,GetConfidenceForSmallSnippetFoundInLongOrigin,The method has 5 parameters. Parameters: sourceMatchStartsAt' sourceMatchLength' queryLength' originStartsAt' originLength
Long Parameter List,SoundFingerprinting.Query,ConfidenceCalculator,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Query\ConfidenceCalculator.cs,GetConfidenceForSmallSnippetFoundInLongQuery,The method has 5 parameters. Parameters: sourceMatchStartsAt' sourceMatchLength' queryLength' originStartsAt' originLength
Long Parameter List,SoundFingerprinting.Query,ExtendedResultEntry,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Query\ExtendedResultEntry.cs,ExtendedResultEntry,The method has 5 parameters. Parameters: track' coverage' confidence' score' matchedAt
Long Parameter List,SoundFingerprinting.Query,IConfidenceCalculator,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Query\IConfidenceCalculator.cs,CalculateConfidence,The method has 5 parameters. Parameters: sourceMatchStartsAt' sourceMatchLength' queryLength' originStartsAt' originLength
Long Parameter List,SoundFingerprinting.Query,MatchedWith,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Query\MatchedWith.cs,MatchedWith,The method has 5 parameters. Parameters: querySequenceNumber' queryMatchAt' trackSequenceNumber' trackMatchAt' score
Long Parameter List,SoundFingerprinting.Query,MatchedWithExtensions,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Query\MatchedWithExtensions.cs,EstimateCoverage,The method has 5 parameters. Parameters: matchedEntries' queryLength' trackLength' fingerprintLength' permittedGap
Long Parameter List,SoundFingerprinting.Query,QueryResultValidatorService,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Query\QueryResultValidatorService.cs,Validate,The method has 7 parameters. Parameters: result' validationStride' pathToAudioFile' modelService' audioService' topWavelets' thresholdVotes
Long Parameter List,SoundFingerprinting.Query,ResultEntry,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Query\ResultEntry.cs,ResultEntry,The method has 10 parameters. Parameters: track' queryMatchStartsAt' coverageLength' discreteCoverageLength' trackMatchStartsAt' trackStartsAt' confidence' score' queryLength' matchedAt
Long Parameter List,SoundFingerprinting.Utils,QuickSelectAlgorithm,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Utils\QuickSelectAlgorithm.cs,Find,The method has 5 parameters. Parameters: kth' list' indexes' lo' hi
Long Parameter List,SoundFingerprinting.Utils,QuickSelectAlgorithm,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Utils\QuickSelectAlgorithm.cs,Partition,The method has 5 parameters. Parameters: list' indexes' pivotIndex' lo' hi
Long Parameter List,SoundFingerprinting.Utils,TestRunner,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Utils\TestRunner.cs,TestRunner,The method has 7 parameters. Parameters: scenarious' modelService' audioService' tagService' fcb' qcb' pathToResultsFolder
Long Parameter List,SoundFingerprinting.Utils,TestRunner,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Utils\TestRunner.cs,RunTestScenario,The method has 5 parameters. Parameters: folderWithPositives' folderWithNegatives' queryStride' seconds' startAts
Long Parameter List,SoundFingerprinting.Utils,TestRunner,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Utils\TestRunner.cs,GetTestRunnerEventArgsForFinishedTestIteration,The method has 8 parameters. Parameters: queryStride' seconds' startAts' fscore' statistics' iteration' stopwatch' verified
Long Parameter List,SoundFingerprinting.Utils,TestRunner,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Utils\TestRunner.cs,GetTestRunnerEventArgs,The method has 6 parameters. Parameters: truePositives' trueNegatives' falsePositives' falseNegatives' line' verified
Long Parameter List,SoundFingerprinting.Utils,TestRunnerWriter,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Utils\TestRunnerWriter.cs,SaveTestIterationToFolder,The method has 6 parameters. Parameters: sb' resultsFolder' queryStride' insertMetadata' queryLength' startAt
Long Parameter List,SoundFingerprinting.Wavelets,StandardHaarWaveletDecomposition,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Wavelets\StandardHaarWaveletDecomposition.cs,DecompositionRow,The method has 5 parameters. Parameters: array' row' cols' temp' waveletNorm
Long Parameter List,SoundFingerprinting.Wavelets,StandardHaarWaveletDecomposition,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Wavelets\StandardHaarWaveletDecomposition.cs,DecompositionStep,The method has 5 parameters. Parameters: array' h' prefix' temp' waveletNorm
Long Identifier,SoundFingerprinting.Command,QueryCommand,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Command\QueryCommand.cs,,The length of the parameter fingerprintingMethodFromSelector is 32.
Long Identifier,SoundFingerprinting.FFT,SpectrumService,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\FFT\SpectrumService.cs,CutLogarithmizedSpectrum,The length of the parameter strideBetweenConsecutiveImages is 30.
Long Identifier,SoundFingerprinting.InMemory,RAMStorage,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\InMemory\RAMStorage.cs,,The length of the parameter subFingerprintReferenceProvider is 31.
Long Identifier,SoundFingerprinting.LCS,QueryResultCoverageCalculator,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\LCS\QueryResultCoverageCalculator.cs,QueryResultCoverageCalculator,The length of the parameter longestIncreasingTrackSequence is 30.
Long Identifier,SoundFingerprinting.LCS,QueryResultCoverageCalculator,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\LCS\QueryResultCoverageCalculator.cs,,The length of the parameter longestIncreasingTrackSequence is 30.
Long Statement,SoundFingerprinting,ModelService,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\ModelService.cs,Query,The length of the statement  "            return queryHashes.Any() ? SubFingerprintDao.ReadSubFingerprints(queryHashes' config) : Enumerable.Empty<SubFingerprintData>(); " is 127.
Long Statement,SoundFingerprinting,ModelService,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\ModelService.cs,CopyMetaFields,The length of the statement  "            return metaFields == null ? new Dictionary<string' string>() : metaFields.ToDictionary(pair => pair.Key' pair => pair.Value); " is 125.
Long Statement,SoundFingerprinting,QueryFingerprintService,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\QueryFingerprintService.cs,Query,The length of the statement  "            var groupedQueryResults = GetSimilaritiesUsingBatchedStrategy(queryFingerprints' configuration' relativeTo' modelService); " is 122.
Long Statement,SoundFingerprinting,QueryFingerprintService,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\QueryFingerprintService.cs,Query,The length of the statement  "            var resultEntries = queryMath.GetBestCandidates(groupedQueryResults' configuration.MaxTracksToReturn' modelService' configuration); " is 131.
Long Statement,SoundFingerprinting,QueryFingerprintService,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\QueryFingerprintService.cs,GetSimilaritiesUsingBatchedStrategy,The length of the statement  "            var result = modelService.Query(hashedFingerprints.Select(hashedFingerprint => hashedFingerprint.HashBins)' configuration); " is 123.
Long Statement,SoundFingerprinting,QueryFingerprintService,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\QueryFingerprintService.cs,GetSimilaritiesUsingBatchedStrategy,The length of the statement  "                var subFingerprints = result.Where(queryResult => QueryMath.IsCandidatePassingThresholdVotes(queryFingerprint.HashBins' queryResult.Hashes' configuration.ThresholdVotes)); " is 171.
Long Statement,SoundFingerprinting.Audio,SamplesAggregator,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\SamplesAggregator.cs,ReadSamplesFromSource,The length of the statement  "                throw new AudioServiceException($"Could not read requested number of seconds {secondsToRead}' audio file is not that long"); " is 124.
Long Statement,SoundFingerprinting.Audio,SoundFingerprintingAudioService,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\SoundFingerprintingAudioService.cs,CheckInputFileFormat,The length of the statement  "                throw new ArgumentException($"Sample rate of the given file is not supported {format}. Supported sample rates {string.Join("'"' AcceptedSampleRates)}. " " is 152.
Long Statement,SoundFingerprinting.Audio,SoundFingerprintingAudioService,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\SoundFingerprintingAudioService.cs,CheckInputFileFormat,The length of the statement  "                throw new ArgumentException($"Bad file format {format}. Bits per sample ({format.BitsPerSample}) is less than accepted range."); " is 128.
Long Statement,SoundFingerprinting.Audio,SoundFingerprintingAudioService,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\SoundFingerprintingAudioService.cs,CheckInputFileFormat,The length of the statement  "                throw new ArgumentException($"Could not start reading from {startsAt} second' since input file is shorter {format.LengthInSeconds}"); " is 133.
Long Statement,SoundFingerprinting.Audio,SoundFingerprintingAudioService,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\SoundFingerprintingAudioService.cs,GetInts,The length of the statement  "            int normalizer = bytesPerSample == 1 ? 127 : bytesPerSample == 2 ? Int16.MaxValue : bytesPerSample == 3 ? (int)Math.Pow(2' 24) / 2 - 1 : Int32.MaxValue; " is 152.
Long Statement,SoundFingerprinting.Command,FingerprintCommand,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Command\FingerprintCommand.cs,From,The length of the statement  "            createFingerprintsMethod = () => fingerprintService.CreateFingerprintsFromAudioSamples(audioSamples' fingerprintConfiguration); " is 127.
Long Statement,SoundFingerprinting.Command,FingerprintCommand,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Command\FingerprintCommand.cs,From,The length of the statement  "                    AudioSamples audioSamples = audioService.ReadMonoSamplesFromFile(pathToAudioFile' fingerprintConfiguration.SampleRate' secondsToProcess' startAtSecond); " is 152.
Long Statement,SoundFingerprinting.Command,RealtimeQueryCommand,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Command\RealtimeQueryCommand.cs,QueryAndHash,The length of the statement  "            var resultsAggregator = new StatefulRealtimeResultEntryAggregator(configuration.ResultEntryFilter' configuration.PermittedGap); " is 127.
Long Statement,SoundFingerprinting.Command,RealtimeQueryCommand,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Command\RealtimeQueryCommand.cs,ConsumeDowntimeHashes,The length of the statement  "                yield return service.Query(timedHashes.HashedFingerprints' configuration.QueryConfiguration' timedHashes.StartsAt' modelService); " is 129.
Long Statement,SoundFingerprinting.Command,RealtimeQueryCommand,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Command\RealtimeQueryCommand.cs,ConsumeExternalDowntimeHashes,The length of the statement  "                yield return service.Query(downtimeHash.HashedFingerprints' configuration.QueryConfiguration' downtimeHash.StartsAt' modelService); " is 131.
Long Statement,SoundFingerprinting.Data,TimedHashes,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Data\TimedHashes.cs,MergeWith,The length of the statement  "                var result = Merge(hashedFingerprints.OrderBy(h => h.SequenceNumber).ToList()' StartsAt' with.hashedFingerprints.OrderBy(h => h.SequenceNumber).ToList()' with.StartsAt); " is 169.
Long Statement,SoundFingerprinting.FFT,LogUtility,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\FFT\LogUtility.cs,FrequencyToSpectrumIndex,The length of the statement  "            float fraction = frequency / ((float)sampleRate / 2); // N sampled points in time correspond to [0' N/2] frequency range " is 120.
Long Statement,SoundFingerprinting.FFT,LogUtility,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\FFT\LogUtility.cs,GenerateLogFrequenciesDynamicBase,The length of the statement  "            double logBase = Math.Exp(Math.Log((float)configuration.FrequencyRange.Max / configuration.FrequencyRange.Min) / configuration.LogBins); " is 136.
Long Statement,SoundFingerprinting.FFT,LogUtility,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\FFT\LogUtility.cs,GenerateStaticLogFrequencies,The length of the statement  "                indexes[i] = FrequencyToSpectrumIndex(freq' sampleRate' configuration.WdftSize); // Find the start index in array from which to start the summation " is 147.
Long Statement,SoundFingerprinting.FFT,SpectrumService,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\FFT\SpectrumService.cs,CutLogarithmizedSpectrum,The length of the statement  "                Buffer.BlockCopy(logarithmizedSpectrum' sizeof(float) * index * numberOfLogBins' spectralImage'  0' fullLength * sizeof(float)); " is 128.
Long Statement,SoundFingerprinting.FFT,SpectrumService,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\FFT\SpectrumService.cs,CutLogarithmizedSpectrum,The length of the statement  "                spectralImages.Add(new Frame(spectralImage' fingerprintImageLength' (ushort)numberOfLogBins' startsAt' sequenceNumber)); " is 120.
Long Statement,SoundFingerprinting.InMemory,RAMStorage,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\InMemory\RAMStorage.cs,AddTrack,The length of the statement  "            var trackData = new TrackData(track.Id' track.Artist' track.Title' string.Empty' 0' durationInSeconds' trackReference' track.MetaFields' track.MediaType); " is 154.
Long Statement,SoundFingerprinting.InMemory,RAMStorage,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\InMemory\RAMStorage.cs,ReadSubFingerprintByTrackReference,The length of the statement  "            return SubFingerprints.Where(pair => pair.Value.TrackReference.Equals(trackReference)).Select(pair => pair.Value).ToList(); " is 123.
Long Statement,SoundFingerprinting.LCS,QueryResultCoverageCalculator,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\LCS\QueryResultCoverageCalculator.cs,GetCoverages,The length of the statement  "                return merged.Select(sequence => sequence.EstimateCoverage(queryLength' trackData.Length' fingerprintConfiguration.FingerprintLengthInSeconds' configuration.PermittedGap)); " is 172.
Long Statement,SoundFingerprinting.LCS,QueryResultCoverageCalculator,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\LCS\QueryResultCoverageCalculator.cs,GetCoverages,The length of the statement  "            return new[] { matches.EstimateCoverage(queryLength' trackData.Length' fingerprintConfiguration.FingerprintLengthInSeconds' configuration.PermittedGap) }; " is 154.
Long Statement,SoundFingerprinting.LSH,LocalitySensitiveHashingAlgorithm,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\LSH\LocalitySensitiveHashingAlgorithm.cs,HashImage,The length of the statement  "            var extendedMinHashService = extendedMinHashServices.GetOrAdd(width * height' key => new ExtendedMinHashService(new AdaptivePermutations(n' width' height))); " is 157.
Long Statement,SoundFingerprinting.Math,HammingDistanceResultStatistics,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Math\HammingDistanceResultStatistics.cs,ToString,The length of the statement  "                $"True Positives: [{TruePositiveInfo}]' False Negatives: [{FalseNegativesInfo}]' False Positives: [{FalsePositivesInfo}]' True Positives(0.8' 0.9' 0.95' 0.98): [{TruePositivePercentileInfo}]' " " is 193.
Long Statement,SoundFingerprinting.Math,HammingDistanceResultStatistics,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Math\HammingDistanceResultStatistics.cs,ToString,The length of the statement  "                + $"False Negatives(0.8' 0.9' 0.95' 0.98): [{FalseNegativesPercentileInfo}]' False Positives(0.8' 0.9' 0.95' 0.98): [{FalsePositivesPercentileInfo}]"; " is 150.
Long Statement,SoundFingerprinting.Query,GroupedQueryResults,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Query\GroupedQueryResults.cs,Add,The length of the statement  "                var matchedWith = new MatchedWith(queryFingerprint.SequenceNumber' queryFingerprint.StartsAt' resultSubFingerprint.SequenceNumber' resultSubFingerprint.SequenceAt' score); " is 171.
Long Statement,SoundFingerprinting.Query,GroupedQueryResults,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Query\GroupedQueryResults.cs,Add,The length of the statement  "                    sequenceToCandidates.Add(queryFingerprint.SequenceNumber' new Candidates(resultSubFingerprint.TrackReference' matchedWith)); " is 124.
Long Statement,SoundFingerprinting.Query,MatchedWithExtensions,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Query\MatchedWithExtensions.cs,EstimateCoverage,The length of the statement  "            return new Coverage(GetBestReconstructedPath(trackRegion' matches)' queryLength' trackLength' fingerprintLength' permittedGap); " is 127.
Long Statement,SoundFingerprinting.Query,MatchedWithExtensions,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Query\MatchedWithExtensions.cs,ConsecutiveMatchesAreLongerThanTheQuery,The length of the statement  "            return SubFingerprintsToSeconds.MatchLengthToSeconds(sortedMatches[index].TrackMatchAt' sortedMatches[index - 1].TrackMatchAt' fingerprintLengthInSeconds) > queryLength; " is 169.
Long Statement,SoundFingerprinting.Query,PendingResultEntry,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Query\PendingResultEntry.cs,TrackMatchOverlaps,The length of the statement  "            return TrackMatchEndsAt >= next.TrackMatchStartsAt - permittedGap && next.TrackMatchStartsAt + permittedGap >= TrackMatchEndsAt; " is 128.
Long Statement,SoundFingerprinting.Query,PendingResultEntry,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Query\PendingResultEntry.cs,CanSwallow,The length of the statement  "            return Entry.TrackMatchStartsAt <= next.TrackMatchStartsAt && TrackMatchEndsAt >= next.TrackMatchStartsAt + next.CoverageLength; " is 128.
Long Statement,SoundFingerprinting.Query,ResultEntryExtensions,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Query\ResultEntryExtensions.cs,CalculateNewQueryCoverage,The length of the statement  "            if (first.TrackMatchStartsAt <= second.TrackMatchStartsAt && first.TrackMatchStartsAt + first.CoverageLength >= second.TrackMatchStartsAt) " is 138.
Long Statement,SoundFingerprinting.Query,ResultEntryExtensions,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Query\ResultEntryExtensions.cs,CalculateNewMatchLength,The length of the statement  "            if (first.TrackMatchStartsAt + first.DiscreteCoverageLength >= second.TrackMatchStartsAt + second.DiscreteCoverageLength) " is 121.
Long Statement,SoundFingerprinting.Query,ResultEntryExtensions,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Query\ResultEntryExtensions.cs,CalculateNewMatchLength,The length of the statement  "            if (first.TrackMatchStartsAt <= second.TrackMatchStartsAt && first.TrackMatchStartsAt + first.DiscreteCoverageLength >= second.TrackMatchStartsAt) " is 146.
Long Statement,SoundFingerprinting.Query,StatefulRealtimeResultEntryAggregator,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Query\StatefulRealtimeResultEntryAggregator.cs,Consume,The length of the statement  "                var collapsed = CollapseWithNewArrivals(pendingResults' candidates ?? Enumerable.Empty<ResultEntry>()' queryLength' permittedGap); " is 130.
Long Statement,SoundFingerprinting.Query,StatefulRealtimeResultEntryAggregator,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Query\StatefulRealtimeResultEntryAggregator.cs,PurgeCompletedMatches,The length of the statement  "            return new RealtimeQueryResult(completed.Select(entry => entry.Entry).ToList()' cantWaitAnymore.Select(entry => entry.Entry).ToList()); " is 135.
Long Statement,SoundFingerprinting.Utils,TestRunner,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Utils\TestRunner.cs,RunTestScenario,The length of the statement  "                            var foundLine = GetFoundLine(ToTrackString(actualTrack.Artist' actualTrack.Title)' recognizedTrack' isSuccessful' queryResult); " is 127.
Long Statement,SoundFingerprinting.Utils,TestRunner,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Utils\TestRunner.cs,RunTestScenario,The length of the statement  "                            OnTestRunnerEvent(PositiveFoundEvent' GetTestRunnerEventArgs(truePositives' trueNegatives' falsePositives' falseNegatives' foundLine' verified)); " is 145.
Long Statement,SoundFingerprinting.Utils,TestRunner,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Utils\TestRunner.cs,RunTestScenario,The length of the statement  "                TestRunnerWriter.SaveTestIterationToFolder(sb' pathToResultsFolder' queryStride' GetInsertMetadata()' seconds' startAt); " is 120.
Long Statement,SoundFingerprinting.Utils,TestRunner,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Utils\TestRunner.cs,RunTestScenario,The length of the statement  "                var finishedTestIteration = GetTestRunnerEventArgsForFinishedTestIteration(queryStride' seconds' startAts' fscore' stats' iteration' stopwatch' verified); " is 154.
Long Statement,SoundFingerprinting.Utils,TestRunner,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Utils\TestRunner.cs,Insert,The length of the statement  "                                    Message = $"Inserting tracks {Interlocked.Increment(ref inserted)} out of {allFiles.Count}. Track {System.IO.Path.GetFileNameWithoutExtension(file)}" " is 149.
Long Statement,SoundFingerprinting.Utils,TestRunner,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Utils\TestRunner.cs,GetTagsFromFile,The length of the statement  "                throw new Exception($"Could not extract tags from file {path}. Track does not contain enought data to be identified as unique. Currate your input data!"); " is 154.
Magic Number,SoundFingerprinting,ModelServiceInfo,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\ModelServiceInfo.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ SubFingerprintsCount;
Magic Number,SoundFingerprinting,ModelServiceInfo,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\ModelServiceInfo.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (HashCountsInTables != null ? HashCountsInTables.GetHashCode() : 0);
Magic Number,SoundFingerprinting.Audio,AudioSamplesNormalizer,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\AudioSamplesNormalizer.cs,Normalize,The following statement contains a magic number: float rms = (float)Math.Sqrt(squares / (end - start)) * 10;
Magic Number,SoundFingerprinting.Audio,LowPassFilter,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\LowPassFilter.cs,FilterAndDownsample,The following statement contains a magic number: targetSampleRate != 5512
Magic Number,SoundFingerprinting.Audio,LowPassFilter,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\LowPassFilter.cs,FilterAndDownsample,The following statement contains a magic number: switch (sourceSampleRate)              {                  case 48000:                      // 48000 * 7 / 61 is almost 5512                      return ResampleNonIntegerFactor(samples' 7 ' 61' LpFilter336KHz128);                  case 44100:                      return Resample(samples' samples.Length / 8' 8' LpFilter44);                  case 22050:                      return Resample(samples' samples.Length / 4' 4' LpFilter22);                  case 16000:                      // 16000 * 21 / 61 is almost 5512                      return ResampleNonIntegerFactor(samples' 21' 61' LpFilter336KHz128);                  case 11025:                      return Resample(samples' samples.Length / 2' 2' LpFilter11);                  case 8000:                      // 8000 * 9 / 13 is almost 5512                      return ResampleNonIntegerFactor(samples' 9' 13' LpFilter72KHz64);                  case 5512:                      return samples;              }
Magic Number,SoundFingerprinting.Audio,LowPassFilter,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\LowPassFilter.cs,FilterAndDownsample,The following statement contains a magic number: switch (sourceSampleRate)              {                  case 48000:                      // 48000 * 7 / 61 is almost 5512                      return ResampleNonIntegerFactor(samples' 7 ' 61' LpFilter336KHz128);                  case 44100:                      return Resample(samples' samples.Length / 8' 8' LpFilter44);                  case 22050:                      return Resample(samples' samples.Length / 4' 4' LpFilter22);                  case 16000:                      // 16000 * 21 / 61 is almost 5512                      return ResampleNonIntegerFactor(samples' 21' 61' LpFilter336KHz128);                  case 11025:                      return Resample(samples' samples.Length / 2' 2' LpFilter11);                  case 8000:                      // 8000 * 9 / 13 is almost 5512                      return ResampleNonIntegerFactor(samples' 9' 13' LpFilter72KHz64);                  case 5512:                      return samples;              }
Magic Number,SoundFingerprinting.Audio,LowPassFilter,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\LowPassFilter.cs,FilterAndDownsample,The following statement contains a magic number: switch (sourceSampleRate)              {                  case 48000:                      // 48000 * 7 / 61 is almost 5512                      return ResampleNonIntegerFactor(samples' 7 ' 61' LpFilter336KHz128);                  case 44100:                      return Resample(samples' samples.Length / 8' 8' LpFilter44);                  case 22050:                      return Resample(samples' samples.Length / 4' 4' LpFilter22);                  case 16000:                      // 16000 * 21 / 61 is almost 5512                      return ResampleNonIntegerFactor(samples' 21' 61' LpFilter336KHz128);                  case 11025:                      return Resample(samples' samples.Length / 2' 2' LpFilter11);                  case 8000:                      // 8000 * 9 / 13 is almost 5512                      return ResampleNonIntegerFactor(samples' 9' 13' LpFilter72KHz64);                  case 5512:                      return samples;              }
Magic Number,SoundFingerprinting.Audio,LowPassFilter,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\LowPassFilter.cs,FilterAndDownsample,The following statement contains a magic number: switch (sourceSampleRate)              {                  case 48000:                      // 48000 * 7 / 61 is almost 5512                      return ResampleNonIntegerFactor(samples' 7 ' 61' LpFilter336KHz128);                  case 44100:                      return Resample(samples' samples.Length / 8' 8' LpFilter44);                  case 22050:                      return Resample(samples' samples.Length / 4' 4' LpFilter22);                  case 16000:                      // 16000 * 21 / 61 is almost 5512                      return ResampleNonIntegerFactor(samples' 21' 61' LpFilter336KHz128);                  case 11025:                      return Resample(samples' samples.Length / 2' 2' LpFilter11);                  case 8000:                      // 8000 * 9 / 13 is almost 5512                      return ResampleNonIntegerFactor(samples' 9' 13' LpFilter72KHz64);                  case 5512:                      return samples;              }
Magic Number,SoundFingerprinting.Audio,LowPassFilter,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\LowPassFilter.cs,FilterAndDownsample,The following statement contains a magic number: switch (sourceSampleRate)              {                  case 48000:                      // 48000 * 7 / 61 is almost 5512                      return ResampleNonIntegerFactor(samples' 7 ' 61' LpFilter336KHz128);                  case 44100:                      return Resample(samples' samples.Length / 8' 8' LpFilter44);                  case 22050:                      return Resample(samples' samples.Length / 4' 4' LpFilter22);                  case 16000:                      // 16000 * 21 / 61 is almost 5512                      return ResampleNonIntegerFactor(samples' 21' 61' LpFilter336KHz128);                  case 11025:                      return Resample(samples' samples.Length / 2' 2' LpFilter11);                  case 8000:                      // 8000 * 9 / 13 is almost 5512                      return ResampleNonIntegerFactor(samples' 9' 13' LpFilter72KHz64);                  case 5512:                      return samples;              }
Magic Number,SoundFingerprinting.Audio,LowPassFilter,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\LowPassFilter.cs,FilterAndDownsample,The following statement contains a magic number: switch (sourceSampleRate)              {                  case 48000:                      // 48000 * 7 / 61 is almost 5512                      return ResampleNonIntegerFactor(samples' 7 ' 61' LpFilter336KHz128);                  case 44100:                      return Resample(samples' samples.Length / 8' 8' LpFilter44);                  case 22050:                      return Resample(samples' samples.Length / 4' 4' LpFilter22);                  case 16000:                      // 16000 * 21 / 61 is almost 5512                      return ResampleNonIntegerFactor(samples' 21' 61' LpFilter336KHz128);                  case 11025:                      return Resample(samples' samples.Length / 2' 2' LpFilter11);                  case 8000:                      // 8000 * 9 / 13 is almost 5512                      return ResampleNonIntegerFactor(samples' 9' 13' LpFilter72KHz64);                  case 5512:                      return samples;              }
Magic Number,SoundFingerprinting.Audio,LowPassFilter,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\LowPassFilter.cs,FilterAndDownsample,The following statement contains a magic number: switch (sourceSampleRate)              {                  case 48000:                      // 48000 * 7 / 61 is almost 5512                      return ResampleNonIntegerFactor(samples' 7 ' 61' LpFilter336KHz128);                  case 44100:                      return Resample(samples' samples.Length / 8' 8' LpFilter44);                  case 22050:                      return Resample(samples' samples.Length / 4' 4' LpFilter22);                  case 16000:                      // 16000 * 21 / 61 is almost 5512                      return ResampleNonIntegerFactor(samples' 21' 61' LpFilter336KHz128);                  case 11025:                      return Resample(samples' samples.Length / 2' 2' LpFilter11);                  case 8000:                      // 8000 * 9 / 13 is almost 5512                      return ResampleNonIntegerFactor(samples' 9' 13' LpFilter72KHz64);                  case 5512:                      return samples;              }
Magic Number,SoundFingerprinting.Audio,LowPassFilter,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\LowPassFilter.cs,FilterAndDownsample,The following statement contains a magic number: switch (sourceSampleRate)              {                  case 48000:                      // 48000 * 7 / 61 is almost 5512                      return ResampleNonIntegerFactor(samples' 7 ' 61' LpFilter336KHz128);                  case 44100:                      return Resample(samples' samples.Length / 8' 8' LpFilter44);                  case 22050:                      return Resample(samples' samples.Length / 4' 4' LpFilter22);                  case 16000:                      // 16000 * 21 / 61 is almost 5512                      return ResampleNonIntegerFactor(samples' 21' 61' LpFilter336KHz128);                  case 11025:                      return Resample(samples' samples.Length / 2' 2' LpFilter11);                  case 8000:                      // 8000 * 9 / 13 is almost 5512                      return ResampleNonIntegerFactor(samples' 9' 13' LpFilter72KHz64);                  case 5512:                      return samples;              }
Magic Number,SoundFingerprinting.Audio,LowPassFilter,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\LowPassFilter.cs,FilterAndDownsample,The following statement contains a magic number: switch (sourceSampleRate)              {                  case 48000:                      // 48000 * 7 / 61 is almost 5512                      return ResampleNonIntegerFactor(samples' 7 ' 61' LpFilter336KHz128);                  case 44100:                      return Resample(samples' samples.Length / 8' 8' LpFilter44);                  case 22050:                      return Resample(samples' samples.Length / 4' 4' LpFilter22);                  case 16000:                      // 16000 * 21 / 61 is almost 5512                      return ResampleNonIntegerFactor(samples' 21' 61' LpFilter336KHz128);                  case 11025:                      return Resample(samples' samples.Length / 2' 2' LpFilter11);                  case 8000:                      // 8000 * 9 / 13 is almost 5512                      return ResampleNonIntegerFactor(samples' 9' 13' LpFilter72KHz64);                  case 5512:                      return samples;              }
Magic Number,SoundFingerprinting.Audio,LowPassFilter,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\LowPassFilter.cs,FilterAndDownsample,The following statement contains a magic number: switch (sourceSampleRate)              {                  case 48000:                      // 48000 * 7 / 61 is almost 5512                      return ResampleNonIntegerFactor(samples' 7 ' 61' LpFilter336KHz128);                  case 44100:                      return Resample(samples' samples.Length / 8' 8' LpFilter44);                  case 22050:                      return Resample(samples' samples.Length / 4' 4' LpFilter22);                  case 16000:                      // 16000 * 21 / 61 is almost 5512                      return ResampleNonIntegerFactor(samples' 21' 61' LpFilter336KHz128);                  case 11025:                      return Resample(samples' samples.Length / 2' 2' LpFilter11);                  case 8000:                      // 8000 * 9 / 13 is almost 5512                      return ResampleNonIntegerFactor(samples' 9' 13' LpFilter72KHz64);                  case 5512:                      return samples;              }
Magic Number,SoundFingerprinting.Audio,LowPassFilter,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\LowPassFilter.cs,FilterAndDownsample,The following statement contains a magic number: switch (sourceSampleRate)              {                  case 48000:                      // 48000 * 7 / 61 is almost 5512                      return ResampleNonIntegerFactor(samples' 7 ' 61' LpFilter336KHz128);                  case 44100:                      return Resample(samples' samples.Length / 8' 8' LpFilter44);                  case 22050:                      return Resample(samples' samples.Length / 4' 4' LpFilter22);                  case 16000:                      // 16000 * 21 / 61 is almost 5512                      return ResampleNonIntegerFactor(samples' 21' 61' LpFilter336KHz128);                  case 11025:                      return Resample(samples' samples.Length / 2' 2' LpFilter11);                  case 8000:                      // 8000 * 9 / 13 is almost 5512                      return ResampleNonIntegerFactor(samples' 9' 13' LpFilter72KHz64);                  case 5512:                      return samples;              }
Magic Number,SoundFingerprinting.Audio,LowPassFilter,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\LowPassFilter.cs,FilterAndDownsample,The following statement contains a magic number: switch (sourceSampleRate)              {                  case 48000:                      // 48000 * 7 / 61 is almost 5512                      return ResampleNonIntegerFactor(samples' 7 ' 61' LpFilter336KHz128);                  case 44100:                      return Resample(samples' samples.Length / 8' 8' LpFilter44);                  case 22050:                      return Resample(samples' samples.Length / 4' 4' LpFilter22);                  case 16000:                      // 16000 * 21 / 61 is almost 5512                      return ResampleNonIntegerFactor(samples' 21' 61' LpFilter336KHz128);                  case 11025:                      return Resample(samples' samples.Length / 2' 2' LpFilter11);                  case 8000:                      // 8000 * 9 / 13 is almost 5512                      return ResampleNonIntegerFactor(samples' 9' 13' LpFilter72KHz64);                  case 5512:                      return samples;              }
Magic Number,SoundFingerprinting.Audio,LowPassFilter,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\LowPassFilter.cs,FilterAndDownsample,The following statement contains a magic number: switch (sourceSampleRate)              {                  case 48000:                      // 48000 * 7 / 61 is almost 5512                      return ResampleNonIntegerFactor(samples' 7 ' 61' LpFilter336KHz128);                  case 44100:                      return Resample(samples' samples.Length / 8' 8' LpFilter44);                  case 22050:                      return Resample(samples' samples.Length / 4' 4' LpFilter22);                  case 16000:                      // 16000 * 21 / 61 is almost 5512                      return ResampleNonIntegerFactor(samples' 21' 61' LpFilter336KHz128);                  case 11025:                      return Resample(samples' samples.Length / 2' 2' LpFilter11);                  case 8000:                      // 8000 * 9 / 13 is almost 5512                      return ResampleNonIntegerFactor(samples' 9' 13' LpFilter72KHz64);                  case 5512:                      return samples;              }
Magic Number,SoundFingerprinting.Audio,LowPassFilter,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\LowPassFilter.cs,FilterAndDownsample,The following statement contains a magic number: switch (sourceSampleRate)              {                  case 48000:                      // 48000 * 7 / 61 is almost 5512                      return ResampleNonIntegerFactor(samples' 7 ' 61' LpFilter336KHz128);                  case 44100:                      return Resample(samples' samples.Length / 8' 8' LpFilter44);                  case 22050:                      return Resample(samples' samples.Length / 4' 4' LpFilter22);                  case 16000:                      // 16000 * 21 / 61 is almost 5512                      return ResampleNonIntegerFactor(samples' 21' 61' LpFilter336KHz128);                  case 11025:                      return Resample(samples' samples.Length / 2' 2' LpFilter11);                  case 8000:                      // 8000 * 9 / 13 is almost 5512                      return ResampleNonIntegerFactor(samples' 9' 13' LpFilter72KHz64);                  case 5512:                      return samples;              }
Magic Number,SoundFingerprinting.Audio,LowPassFilter,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\LowPassFilter.cs,FilterAndDownsample,The following statement contains a magic number: switch (sourceSampleRate)              {                  case 48000:                      // 48000 * 7 / 61 is almost 5512                      return ResampleNonIntegerFactor(samples' 7 ' 61' LpFilter336KHz128);                  case 44100:                      return Resample(samples' samples.Length / 8' 8' LpFilter44);                  case 22050:                      return Resample(samples' samples.Length / 4' 4' LpFilter22);                  case 16000:                      // 16000 * 21 / 61 is almost 5512                      return ResampleNonIntegerFactor(samples' 21' 61' LpFilter336KHz128);                  case 11025:                      return Resample(samples' samples.Length / 2' 2' LpFilter11);                  case 8000:                      // 8000 * 9 / 13 is almost 5512                      return ResampleNonIntegerFactor(samples' 9' 13' LpFilter72KHz64);                  case 5512:                      return samples;              }
Magic Number,SoundFingerprinting.Audio,LowPassFilter,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\LowPassFilter.cs,FilterAndDownsample,The following statement contains a magic number: switch (sourceSampleRate)              {                  case 48000:                      // 48000 * 7 / 61 is almost 5512                      return ResampleNonIntegerFactor(samples' 7 ' 61' LpFilter336KHz128);                  case 44100:                      return Resample(samples' samples.Length / 8' 8' LpFilter44);                  case 22050:                      return Resample(samples' samples.Length / 4' 4' LpFilter22);                  case 16000:                      // 16000 * 21 / 61 is almost 5512                      return ResampleNonIntegerFactor(samples' 21' 61' LpFilter336KHz128);                  case 11025:                      return Resample(samples' samples.Length / 2' 2' LpFilter11);                  case 8000:                      // 8000 * 9 / 13 is almost 5512                      return ResampleNonIntegerFactor(samples' 9' 13' LpFilter72KHz64);                  case 5512:                      return samples;              }
Magic Number,SoundFingerprinting.Audio,LowPassFilter,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\LowPassFilter.cs,FilterAndDownsample,The following statement contains a magic number: switch (sourceSampleRate)              {                  case 48000:                      // 48000 * 7 / 61 is almost 5512                      return ResampleNonIntegerFactor(samples' 7 ' 61' LpFilter336KHz128);                  case 44100:                      return Resample(samples' samples.Length / 8' 8' LpFilter44);                  case 22050:                      return Resample(samples' samples.Length / 4' 4' LpFilter22);                  case 16000:                      // 16000 * 21 / 61 is almost 5512                      return ResampleNonIntegerFactor(samples' 21' 61' LpFilter336KHz128);                  case 11025:                      return Resample(samples' samples.Length / 2' 2' LpFilter11);                  case 8000:                      // 8000 * 9 / 13 is almost 5512                      return ResampleNonIntegerFactor(samples' 9' 13' LpFilter72KHz64);                  case 5512:                      return samples;              }
Magic Number,SoundFingerprinting.Audio,LowPassFilter,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\LowPassFilter.cs,FilterAndDownsample,The following statement contains a magic number: switch (sourceSampleRate)              {                  case 48000:                      // 48000 * 7 / 61 is almost 5512                      return ResampleNonIntegerFactor(samples' 7 ' 61' LpFilter336KHz128);                  case 44100:                      return Resample(samples' samples.Length / 8' 8' LpFilter44);                  case 22050:                      return Resample(samples' samples.Length / 4' 4' LpFilter22);                  case 16000:                      // 16000 * 21 / 61 is almost 5512                      return ResampleNonIntegerFactor(samples' 21' 61' LpFilter336KHz128);                  case 11025:                      return Resample(samples' samples.Length / 2' 2' LpFilter11);                  case 8000:                      // 8000 * 9 / 13 is almost 5512                      return ResampleNonIntegerFactor(samples' 9' 13' LpFilter72KHz64);                  case 5512:                      return samples;              }
Magic Number,SoundFingerprinting.Audio,LowPassFilter,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\LowPassFilter.cs,FilterAndDownsample,The following statement contains a magic number: switch (sourceSampleRate)              {                  case 48000:                      // 48000 * 7 / 61 is almost 5512                      return ResampleNonIntegerFactor(samples' 7 ' 61' LpFilter336KHz128);                  case 44100:                      return Resample(samples' samples.Length / 8' 8' LpFilter44);                  case 22050:                      return Resample(samples' samples.Length / 4' 4' LpFilter22);                  case 16000:                      // 16000 * 21 / 61 is almost 5512                      return ResampleNonIntegerFactor(samples' 21' 61' LpFilter336KHz128);                  case 11025:                      return Resample(samples' samples.Length / 2' 2' LpFilter11);                  case 8000:                      // 8000 * 9 / 13 is almost 5512                      return ResampleNonIntegerFactor(samples' 9' 13' LpFilter72KHz64);                  case 5512:                      return samples;              }
Magic Number,SoundFingerprinting.Audio,SamplesAggregator,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\SamplesAggregator.cs,GetTotalBytesToRead,The following statement contains a magic number: Math.Abs(secondsToRead) < 0.0001
Magic Number,SoundFingerprinting.Audio,SamplesConverter,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\SamplesConverter.cs,GetFloatSamplesFromByte,The following statement contains a magic number: float[] chunk = new float[bytesRecorded / 4];
Magic Number,SoundFingerprinting.Audio,SamplesConverter,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\SamplesConverter.cs,GetFloatSamplesFromByte,The following statement contains a magic number: startIndex += 4;
Magic Number,SoundFingerprinting.Audio,SoundFingerprintingAudioService,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\SoundFingerprintingAudioService.cs,ToSamples,The following statement contains a magic number: int bytesPerSample = format.BitsPerSample / 8;
Magic Number,SoundFingerprinting.Audio,SoundFingerprintingAudioService,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\SoundFingerprintingAudioService.cs,ToMonoSamples,The following statement contains a magic number: float[] mono = new float[samples.Length / 2];
Magic Number,SoundFingerprinting.Audio,SoundFingerprintingAudioService,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\SoundFingerprintingAudioService.cs,ToMonoSamples,The following statement contains a magic number: mono[k] = (samples[left] + samples[right]) / 2;
Magic Number,SoundFingerprinting.Audio,SoundFingerprintingAudioService,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\SoundFingerprintingAudioService.cs,GetInts,The following statement contains a magic number: int bytesPerSample = format.BitsPerSample / 8;
Magic Number,SoundFingerprinting.Audio,SoundFingerprintingAudioService,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\SoundFingerprintingAudioService.cs,GetInts,The following statement contains a magic number: int normalizer = bytesPerSample == 1 ? 127 : bytesPerSample == 2 ? Int16.MaxValue : bytesPerSample == 3 ? (int)Math.Pow(2' 24) / 2 - 1 : Int32.MaxValue;
Magic Number,SoundFingerprinting.Audio,SoundFingerprintingAudioService,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\SoundFingerprintingAudioService.cs,GetInts,The following statement contains a magic number: int normalizer = bytesPerSample == 1 ? 127 : bytesPerSample == 2 ? Int16.MaxValue : bytesPerSample == 3 ? (int)Math.Pow(2' 24) / 2 - 1 : Int32.MaxValue;
Magic Number,SoundFingerprinting.Audio,SoundFingerprintingAudioService,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\SoundFingerprintingAudioService.cs,GetInts,The following statement contains a magic number: int normalizer = bytesPerSample == 1 ? 127 : bytesPerSample == 2 ? Int16.MaxValue : bytesPerSample == 3 ? (int)Math.Pow(2' 24) / 2 - 1 : Int32.MaxValue;
Magic Number,SoundFingerprinting.Audio,SoundFingerprintingAudioService,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\SoundFingerprintingAudioService.cs,GetInts,The following statement contains a magic number: int normalizer = bytesPerSample == 1 ? 127 : bytesPerSample == 2 ? Int16.MaxValue : bytesPerSample == 3 ? (int)Math.Pow(2' 24) / 2 - 1 : Int32.MaxValue;
Magic Number,SoundFingerprinting.Audio,SoundFingerprintingAudioService,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\SoundFingerprintingAudioService.cs,GetInts,The following statement contains a magic number: int normalizer = bytesPerSample == 1 ? 127 : bytesPerSample == 2 ? Int16.MaxValue : bytesPerSample == 3 ? (int)Math.Pow(2' 24) / 2 - 1 : Int32.MaxValue;
Magic Number,SoundFingerprinting.Audio,SoundFingerprintingAudioService,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\SoundFingerprintingAudioService.cs,GetInts,The following statement contains a magic number: int normalizer = bytesPerSample == 1 ? 127 : bytesPerSample == 2 ? Int16.MaxValue : bytesPerSample == 3 ? (int)Math.Pow(2' 24) / 2 - 1 : Int32.MaxValue;
Magic Number,SoundFingerprinting.Audio,SoundFingerprintingAudioService,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\SoundFingerprintingAudioService.cs,GetSamplesToRead,The following statement contains a magic number: int requestedSamples = Math.Abs(seconds) < 0.001 ? int.MaxValue : (int)seconds * samplesPerSecond;
Magic Number,SoundFingerprinting.Audio,SoundFingerprintingAudioService,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\SoundFingerprintingAudioService.cs,GetSamplesToRead,The following statement contains a magic number: int bytesPerSample = format.BitsPerSample / 8;
Magic Number,SoundFingerprinting.Audio,WaveFormat,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\WaveFormat.cs,FromFile,The following statement contains a magic number: byte[] header = new byte[44];
Magic Number,SoundFingerprinting.Audio,WaveFormat,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\WaveFormat.cs,FromFile,The following statement contains a magic number: fileStream.Read(header' 0' 44) != 44
Magic Number,SoundFingerprinting.Audio,WaveFormat,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\WaveFormat.cs,FromFile,The following statement contains a magic number: fileStream.Read(header' 0' 44) != 44
Magic Number,SoundFingerprinting.Audio,WaveFormat,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\WaveFormat.cs,FromFile,The following statement contains a magic number: short channels = (short)(header[22] | header[23] << 8);
Magic Number,SoundFingerprinting.Audio,WaveFormat,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\WaveFormat.cs,FromFile,The following statement contains a magic number: short channels = (short)(header[22] | header[23] << 8);
Magic Number,SoundFingerprinting.Audio,WaveFormat,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\WaveFormat.cs,FromFile,The following statement contains a magic number: short channels = (short)(header[22] | header[23] << 8);
Magic Number,SoundFingerprinting.Audio,WaveFormat,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\WaveFormat.cs,FromFile,The following statement contains a magic number: int sampleRate = header[24] | header[25] << 8 | header[26] << 16 | header[27] << 24;
Magic Number,SoundFingerprinting.Audio,WaveFormat,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\WaveFormat.cs,FromFile,The following statement contains a magic number: int sampleRate = header[24] | header[25] << 8 | header[26] << 16 | header[27] << 24;
Magic Number,SoundFingerprinting.Audio,WaveFormat,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\WaveFormat.cs,FromFile,The following statement contains a magic number: int sampleRate = header[24] | header[25] << 8 | header[26] << 16 | header[27] << 24;
Magic Number,SoundFingerprinting.Audio,WaveFormat,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\WaveFormat.cs,FromFile,The following statement contains a magic number: int sampleRate = header[24] | header[25] << 8 | header[26] << 16 | header[27] << 24;
Magic Number,SoundFingerprinting.Audio,WaveFormat,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\WaveFormat.cs,FromFile,The following statement contains a magic number: int sampleRate = header[24] | header[25] << 8 | header[26] << 16 | header[27] << 24;
Magic Number,SoundFingerprinting.Audio,WaveFormat,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\WaveFormat.cs,FromFile,The following statement contains a magic number: int sampleRate = header[24] | header[25] << 8 | header[26] << 16 | header[27] << 24;
Magic Number,SoundFingerprinting.Audio,WaveFormat,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\WaveFormat.cs,FromFile,The following statement contains a magic number: int sampleRate = header[24] | header[25] << 8 | header[26] << 16 | header[27] << 24;
Magic Number,SoundFingerprinting.Audio,WaveFormat,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\WaveFormat.cs,FromFile,The following statement contains a magic number: short bitsPerSample = (short)(header[34] | header[35] << 8);
Magic Number,SoundFingerprinting.Audio,WaveFormat,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\WaveFormat.cs,FromFile,The following statement contains a magic number: short bitsPerSample = (short)(header[34] | header[35] << 8);
Magic Number,SoundFingerprinting.Audio,WaveFormat,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\WaveFormat.cs,FromFile,The following statement contains a magic number: short bitsPerSample = (short)(header[34] | header[35] << 8);
Magic Number,SoundFingerprinting.Audio,WaveFormat,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\WaveFormat.cs,FromFile,The following statement contains a magic number: long bytes = fileStream.Length - 44;
Magic Number,SoundFingerprinting.Configuration,DefaultFingerprintConfiguration,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Configuration\DefaultFingerprintConfiguration.cs,DefaultFingerprintConfiguration,The following statement contains a magic number: TopWavelets = 200;
Magic Number,SoundFingerprinting.Configuration,DefaultFingerprintConfiguration,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Configuration\DefaultFingerprintConfiguration.cs,DefaultFingerprintConfiguration,The following statement contains a magic number: SampleRate = 5512;
Magic Number,SoundFingerprinting.Configuration,DefaultFingerprintConfiguration,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Configuration\DefaultFingerprintConfiguration.cs,DefaultFingerprintConfiguration,The following statement contains a magic number: HaarWaveletNorm = System.Math.Sqrt(2);
Magic Number,SoundFingerprinting.Configuration,DefaultHashingConfig,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Configuration\DefaultHashingConfig.cs,DefaultHashingConfig,The following statement contains a magic number: NumberOfLSHTables = 25;
Magic Number,SoundFingerprinting.Configuration,DefaultHashingConfig,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Configuration\DefaultHashingConfig.cs,DefaultHashingConfig,The following statement contains a magic number: NumberOfMinHashesPerTable = 4;
Magic Number,SoundFingerprinting.Configuration,DefaultHashingConfig,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Configuration\DefaultHashingConfig.cs,DefaultHashingConfig,The following statement contains a magic number: Width = 128;
Magic Number,SoundFingerprinting.Configuration,DefaultHashingConfig,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Configuration\DefaultHashingConfig.cs,DefaultHashingConfig,The following statement contains a magic number: Height = 32;
Magic Number,SoundFingerprinting.Configuration,DefaultQueryConfiguration,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Configuration\DefaultQueryConfiguration.cs,DefaultQueryConfiguration,The following statement contains a magic number: MaxTracksToReturn = 25;
Magic Number,SoundFingerprinting.Configuration,DefaultQueryConfiguration,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Configuration\DefaultQueryConfiguration.cs,DefaultQueryConfiguration,The following statement contains a magic number: PermittedGap = 2d;
Magic Number,SoundFingerprinting.Configuration,DefaultSpectrogramConfig,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Configuration\DefaultSpectrogramConfig.cs,DefaultSpectrogramConfig,The following statement contains a magic number: Overlap = 64;
Magic Number,SoundFingerprinting.Configuration,DefaultSpectrogramConfig,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Configuration\DefaultSpectrogramConfig.cs,DefaultSpectrogramConfig,The following statement contains a magic number: WdftSize = 2048;
Magic Number,SoundFingerprinting.Configuration,DefaultSpectrogramConfig,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Configuration\DefaultSpectrogramConfig.cs,DefaultSpectrogramConfig,The following statement contains a magic number: LogBase = 2;
Magic Number,SoundFingerprinting.Configuration,DefaultSpectrogramConfig,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Configuration\DefaultSpectrogramConfig.cs,DefaultSpectrogramConfig,The following statement contains a magic number: LogBins = 32;
Magic Number,SoundFingerprinting.Configuration,DefaultSpectrogramConfig,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Configuration\DefaultSpectrogramConfig.cs,DefaultSpectrogramConfig,The following statement contains a magic number: ImageLength = 128;
Magic Number,SoundFingerprinting.Configuration,DefaultSpectrogramConfig,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Configuration\DefaultSpectrogramConfig.cs,DefaultSpectrogramConfig,The following statement contains a magic number: ScalingFunction = (value' max) =>              {                  float scaled = System.Math.Min(value / max' 1);                  int domain = 255;                  float c = (float)(1 / System.Math.Log(1 + domain));                  return (float)(c * System.Math.Log(1 + scaled * domain));              };
Magic Number,SoundFingerprinting.DAO,CompoundModelReference<T>,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\DAO\CompoundModelReference.cs,GetHashCode,The following statement contains a magic number: var code = 17;
Magic Number,SoundFingerprinting.DAO,CompoundModelReference<T>,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\DAO\CompoundModelReference.cs,GetHashCode,The following statement contains a magic number: code = 31 * code + Prefix.GetHashCode();
Magic Number,SoundFingerprinting.DAO,CompoundModelReference<T>,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\DAO\CompoundModelReference.cs,GetHashCode,The following statement contains a magic number: code = 31 * code + Reference.GetHashCode();
Magic Number,SoundFingerprinting.FFT,LogUtility,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\FFT\LogUtility.cs,FrequencyToSpectrumIndex,The following statement contains a magic number: float fraction = frequency / ((float)sampleRate / 2);
Magic Number,SoundFingerprinting.FFT,LogUtility,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\FFT\LogUtility.cs,FrequencyToSpectrumIndex,The following statement contains a magic number: int index = (int)Math.Round(((spectrumLength / 2) + 1) * fraction);
Magic Number,SoundFingerprinting.FFT,LomontFFT,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\FFT\LomontFFT.cs,TableFFT,The following statement contains a magic number: n /= 2;
Magic Number,SoundFingerprinting.FFT,LomontFFT,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\FFT\LomontFFT.cs,TableFFT,The following statement contains a magic number: var istep = 2 * mmax;
Magic Number,SoundFingerprinting.FFT,LomontFFT,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\FFT\LomontFFT.cs,TableFFT,The following statement contains a magic number: k < 2 * n
Magic Number,SoundFingerprinting.FFT,LomontFFT,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\FFT\LomontFFT.cs,RealFFT,The following statement contains a magic number: var scale = (float)Math.Pow(2.0' (A - 1) / 2.0);
Magic Number,SoundFingerprinting.FFT,LomontFFT,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\FFT\LomontFFT.cs,RealFFT,The following statement contains a magic number: var scale = (float)Math.Pow(2.0' (A - 1) / 2.0);
Magic Number,SoundFingerprinting.FFT,LomontFFT,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\FFT\LomontFFT.cs,RealFFT,The following statement contains a magic number: var theta = B * sign * 2 * Math.PI / n;
Magic Number,SoundFingerprinting.FFT,LomontFFT,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\FFT\LomontFFT.cs,RealFFT,The following statement contains a magic number: var k = n / 2 - j;
Magic Number,SoundFingerprinting.FFT,LomontFFT,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\FFT\LomontFFT.cs,RealFFT,The following statement contains a magic number: var tkr = data[2 * k];
Magic Number,SoundFingerprinting.FFT,LomontFFT,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\FFT\LomontFFT.cs,RealFFT,The following statement contains a magic number: var tki = data[2 * k + 1];
Magic Number,SoundFingerprinting.FFT,LomontFFT,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\FFT\LomontFFT.cs,RealFFT,The following statement contains a magic number: var tjr = data[2 * j];
Magic Number,SoundFingerprinting.FFT,LomontFFT,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\FFT\LomontFFT.cs,RealFFT,The following statement contains a magic number: var tji = data[2 * j + 1];
Magic Number,SoundFingerprinting.FFT,LomontFFT,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\FFT\LomontFFT.cs,RealFFT,The following statement contains a magic number: data[2 * j] = 0.5f * (e + sign * (a + b));
Magic Number,SoundFingerprinting.FFT,LomontFFT,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\FFT\LomontFFT.cs,RealFFT,The following statement contains a magic number: data[2 * j] = 0.5f * (e + sign * (a + b));
Magic Number,SoundFingerprinting.FFT,LomontFFT,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\FFT\LomontFFT.cs,RealFFT,The following statement contains a magic number: data[2 * j + 1] = 0.5f * (f + sign * (d - c));
Magic Number,SoundFingerprinting.FFT,LomontFFT,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\FFT\LomontFFT.cs,RealFFT,The following statement contains a magic number: data[2 * j + 1] = 0.5f * (f + sign * (d - c));
Magic Number,SoundFingerprinting.FFT,LomontFFT,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\FFT\LomontFFT.cs,RealFFT,The following statement contains a magic number: data[2 * k] = 0.5f * (e - sign * (b + a));
Magic Number,SoundFingerprinting.FFT,LomontFFT,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\FFT\LomontFFT.cs,RealFFT,The following statement contains a magic number: data[2 * k] = 0.5f * (e - sign * (b + a));
Magic Number,SoundFingerprinting.FFT,LomontFFT,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\FFT\LomontFFT.cs,RealFFT,The following statement contains a magic number: data[2 * k + 1] = 0.5f * (sign * (d - c) - f);
Magic Number,SoundFingerprinting.FFT,LomontFFT,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\FFT\LomontFFT.cs,RealFFT,The following statement contains a magic number: data[2 * k + 1] = 0.5f * (sign * (d - c) - f);
Magic Number,SoundFingerprinting.FFT,LomontFFT,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\FFT\LomontFFT.cs,RealFFT,The following statement contains a magic number: j <= n / 4
Magic Number,SoundFingerprinting.FFT,LomontFFT,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\FFT\LomontFFT.cs,Scale,The following statement contains a magic number: var scale = (float)Math.Pow(n' (A - 1) / 2.0);
Magic Number,SoundFingerprinting.FFT,LomontFFT,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\FFT\LomontFFT.cs,Scale,The following statement contains a magic number: var scale = (float)Math.Pow(n' -(A + 1) / 2.0);
Magic Number,SoundFingerprinting.FFT,LomontFFT,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\FFT\LomontFFT.cs,Initialize,The following statement contains a magic number: var istep = 2 * mmax;
Magic Number,SoundFingerprinting.FFT,LomontFFT,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\FFT\LomontFFT.cs,Initialize,The following statement contains a magic number: var wpr = (float)Math.Sin(theta / 2);
Magic Number,SoundFingerprinting.FFT,LomontFFT,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\FFT\LomontFFT.cs,Initialize,The following statement contains a magic number: wpr = -2 * wpr * wpr;
Magic Number,SoundFingerprinting.FFT,LomontFFT,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\FFT\LomontFFT.cs,Reverse,The following statement contains a magic number: var top = n / 2;
Magic Number,SoundFingerprinting.FFT,LomontFFT,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\FFT\LomontFFT.cs,Reverse,The following statement contains a magic number: var t = data[j + 2];
Magic Number,SoundFingerprinting.FFT,LomontFFT,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\FFT\LomontFFT.cs,Reverse,The following statement contains a magic number: data[j + 2] = data[k + n];
Magic Number,SoundFingerprinting.FFT,LomontFFT,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\FFT\LomontFFT.cs,Reverse,The following statement contains a magic number: t = data[j + 3];
Magic Number,SoundFingerprinting.FFT,LomontFFT,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\FFT\LomontFFT.cs,Reverse,The following statement contains a magic number: data[j + 3] = data[k + n + 1];
Magic Number,SoundFingerprinting.FFT,LomontFFT,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\FFT\LomontFFT.cs,Reverse,The following statement contains a magic number: t = data[j + n + 2];
Magic Number,SoundFingerprinting.FFT,LomontFFT,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\FFT\LomontFFT.cs,Reverse,The following statement contains a magic number: data[j + n + 2] = data[k + n + 2];
Magic Number,SoundFingerprinting.FFT,LomontFFT,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\FFT\LomontFFT.cs,Reverse,The following statement contains a magic number: data[j + n + 2] = data[k + n + 2];
Magic Number,SoundFingerprinting.FFT,LomontFFT,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\FFT\LomontFFT.cs,Reverse,The following statement contains a magic number: data[k + n + 2] = t;
Magic Number,SoundFingerprinting.FFT,LomontFFT,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\FFT\LomontFFT.cs,Reverse,The following statement contains a magic number: t = data[j + n + 3];
Magic Number,SoundFingerprinting.FFT,LomontFFT,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\FFT\LomontFFT.cs,Reverse,The following statement contains a magic number: data[j + n + 3] = data[k + n + 3];
Magic Number,SoundFingerprinting.FFT,LomontFFT,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\FFT\LomontFFT.cs,Reverse,The following statement contains a magic number: data[j + n + 3] = data[k + n + 3];
Magic Number,SoundFingerprinting.FFT,LomontFFT,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\FFT\LomontFFT.cs,Reverse,The following statement contains a magic number: data[k + n + 3] = t;
Magic Number,SoundFingerprinting.FFT,LomontFFT,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\FFT\LomontFFT.cs,Reverse,The following statement contains a magic number: k += 4;
Magic Number,SoundFingerprinting.FFT,LomontFFT,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\FFT\LomontFFT.cs,Reverse,The following statement contains a magic number: h /= 2;
Magic Number,SoundFingerprinting.FFT,SimpleSpectrumService,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\FFT\SimpleSpectrumService.cs,CreateSpectrogram,The following statement contains a magic number: float[] band = new float[(wdftSize / 2) + 1];
Magic Number,SoundFingerprinting.FFT,SimpleSpectrumService,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\FFT\SimpleSpectrumService.cs,CreateSpectrogram,The following statement contains a magic number: double re = complexSignal[2 * j];
Magic Number,SoundFingerprinting.FFT,SimpleSpectrumService,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\FFT\SimpleSpectrumService.cs,CreateSpectrogram,The following statement contains a magic number: double img = complexSignal[(2 * j) + 1];
Magic Number,SoundFingerprinting.FFT,SimpleSpectrumService,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\FFT\SimpleSpectrumService.cs,CreateSpectrogram,The following statement contains a magic number: re /= (float)wdftSize / 2;
Magic Number,SoundFingerprinting.FFT,SimpleSpectrumService,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\FFT\SimpleSpectrumService.cs,CreateSpectrogram,The following statement contains a magic number: img /= (float)wdftSize / 2;
Magic Number,SoundFingerprinting.FFT,SimpleSpectrumService,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\FFT\SimpleSpectrumService.cs,CreateSpectrogram,The following statement contains a magic number: j < wdftSize / 2
Magic Number,SoundFingerprinting.FFT,SpectrumService,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\FFT\SpectrumService.cs,ExtractLogBins,The following statement contains a magic number: int width = wdftSize / 2;
Magic Number,SoundFingerprinting.FFT,SpectrumService,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\FFT\SpectrumService.cs,ExtractLogBins,The following statement contains a magic number: double re = spectrum[2 * k] / width;
Magic Number,SoundFingerprinting.FFT,SpectrumService,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\FFT\SpectrumService.cs,ExtractLogBins,The following statement contains a magic number: double img = spectrum[(2 * k) + 1] / width;
Magic Number,SoundFingerprinting.Math,HashConverter,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Math\HashConverter.cs,ToLongs,The following statement contains a magic number: bytesPerLong == 2
Magic Number,SoundFingerprinting.Math,HashConverter,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Math\HashConverter.cs,ToInts,The following statement contains a magic number: bytesPerLong == 2
Magic Number,SoundFingerprinting.Math,HashConverter,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Math\HashConverter.cs,GetBytesPerLong,The following statement contains a magic number: bytesPerLong > 8
Magic Number,SoundFingerprinting.Math,SimilarityUtility,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Math\SimilarityUtility.cs,CalculateHammingSimilarity,The following statement contains a magic number: a = a >> 8;
Magic Number,SoundFingerprinting.Math,SimilarityUtility,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Math\SimilarityUtility.cs,CalculateHammingSimilarity,The following statement contains a magic number: b = b >> 8;
Magic Number,SoundFingerprinting.MinHash,AdaptivePermutations,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\MinHash\AdaptivePermutations.cs,AdaptivePermutations,The following statement contains a magic number: int count = width * height * 2;
Magic Number,SoundFingerprinting.MinHash,AdaptivePermutations,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\MinHash\AdaptivePermutations.cs,RandomShuffleInPlace,The following statement contains a magic number: i < array.Length - 2
Magic Number,SoundFingerprinting.MinHash,MinHashService,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\MinHash\MinHashService.cs,ComputeMinHashSignature,The following statement contains a magic number: minHash[i] = 255;
Magic Number,SoundFingerprinting.Query,ResultEntryExtensions,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Query\ResultEntryExtensions.cs,MergeWith,The following statement contains a magic number: double avgConfidence = Math.Min((entry.Confidence + with.Confidence) / 2' 1d);
Magic Number,SoundFingerprinting.Query,ResultEntryExtensions,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Query\ResultEntryExtensions.cs,CalculateNewQueryLength,The following statement contains a magic number: Math.Abs(a.TrackMatchStartsAt - b.TrackMatchStartsAt) < 0.0001
Magic Number,SoundFingerprinting.Utils,FingerprintEncoder,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Utils\FingerprintEncoder.cs,EncodeFingerprint,The following statement contains a magic number: TinyFingerprintSchema schema = new TinyFingerprintSchema(concatenated.Length * 2);
Magic Number,SoundFingerprinting.Utils,FingerprintEncoder,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Utils\FingerprintEncoder.cs,EncodeFingerprint,The following statement contains a magic number: schema.SetTrueAt(index * 2);
Magic Number,SoundFingerprinting.Utils,QuickSelectAlgorithm,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Utils\QuickSelectAlgorithm.cs,Find,The following statement contains a magic number: int mid = lo + ((hi - lo) / 2);
Magic Number,SoundFingerprinting.Utils,TestRunner,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Utils\TestRunner.cs,RunTest,The following statement contains a magic number: switch (action)              {                  case "Insert":                      string folderWithSongs = parameters[1];                      var stride = utils.ToStride(parameters[2]' parameters[3]' parameters[4]);                      DeleteAll();                      var sb = TestRunnerWriter.StartInsert();                      Insert(folderWithSongs' stride' sb);                      TestRunnerWriter.SaveInsertDataToFolder(sb' pathToResultsFolder' stride);                      lastInsertStride = stride;                      break;                  case "Run":                      string folderWithPositives = parameters[1];                      string folderWithNegatives = parameters[2];                      var queryStride = utils.ToStride(parameters[3]' parameters[4]' parameters[5]);                      int seconds = int.Parse(parameters[6]);                      var startAts = ToStartAts(parameters[7]);                      RunTestScenario(folderWithPositives' folderWithNegatives'  queryStride' seconds' startAts);                      break;              }
Magic Number,SoundFingerprinting.Utils,TestRunner,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Utils\TestRunner.cs,RunTest,The following statement contains a magic number: switch (action)              {                  case "Insert":                      string folderWithSongs = parameters[1];                      var stride = utils.ToStride(parameters[2]' parameters[3]' parameters[4]);                      DeleteAll();                      var sb = TestRunnerWriter.StartInsert();                      Insert(folderWithSongs' stride' sb);                      TestRunnerWriter.SaveInsertDataToFolder(sb' pathToResultsFolder' stride);                      lastInsertStride = stride;                      break;                  case "Run":                      string folderWithPositives = parameters[1];                      string folderWithNegatives = parameters[2];                      var queryStride = utils.ToStride(parameters[3]' parameters[4]' parameters[5]);                      int seconds = int.Parse(parameters[6]);                      var startAts = ToStartAts(parameters[7]);                      RunTestScenario(folderWithPositives' folderWithNegatives'  queryStride' seconds' startAts);                      break;              }
Magic Number,SoundFingerprinting.Utils,TestRunner,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Utils\TestRunner.cs,RunTest,The following statement contains a magic number: switch (action)              {                  case "Insert":                      string folderWithSongs = parameters[1];                      var stride = utils.ToStride(parameters[2]' parameters[3]' parameters[4]);                      DeleteAll();                      var sb = TestRunnerWriter.StartInsert();                      Insert(folderWithSongs' stride' sb);                      TestRunnerWriter.SaveInsertDataToFolder(sb' pathToResultsFolder' stride);                      lastInsertStride = stride;                      break;                  case "Run":                      string folderWithPositives = parameters[1];                      string folderWithNegatives = parameters[2];                      var queryStride = utils.ToStride(parameters[3]' parameters[4]' parameters[5]);                      int seconds = int.Parse(parameters[6]);                      var startAts = ToStartAts(parameters[7]);                      RunTestScenario(folderWithPositives' folderWithNegatives'  queryStride' seconds' startAts);                      break;              }
Magic Number,SoundFingerprinting.Utils,TestRunner,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Utils\TestRunner.cs,RunTest,The following statement contains a magic number: switch (action)              {                  case "Insert":                      string folderWithSongs = parameters[1];                      var stride = utils.ToStride(parameters[2]' parameters[3]' parameters[4]);                      DeleteAll();                      var sb = TestRunnerWriter.StartInsert();                      Insert(folderWithSongs' stride' sb);                      TestRunnerWriter.SaveInsertDataToFolder(sb' pathToResultsFolder' stride);                      lastInsertStride = stride;                      break;                  case "Run":                      string folderWithPositives = parameters[1];                      string folderWithNegatives = parameters[2];                      var queryStride = utils.ToStride(parameters[3]' parameters[4]' parameters[5]);                      int seconds = int.Parse(parameters[6]);                      var startAts = ToStartAts(parameters[7]);                      RunTestScenario(folderWithPositives' folderWithNegatives'  queryStride' seconds' startAts);                      break;              }
Magic Number,SoundFingerprinting.Utils,TestRunner,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Utils\TestRunner.cs,RunTest,The following statement contains a magic number: switch (action)              {                  case "Insert":                      string folderWithSongs = parameters[1];                      var stride = utils.ToStride(parameters[2]' parameters[3]' parameters[4]);                      DeleteAll();                      var sb = TestRunnerWriter.StartInsert();                      Insert(folderWithSongs' stride' sb);                      TestRunnerWriter.SaveInsertDataToFolder(sb' pathToResultsFolder' stride);                      lastInsertStride = stride;                      break;                  case "Run":                      string folderWithPositives = parameters[1];                      string folderWithNegatives = parameters[2];                      var queryStride = utils.ToStride(parameters[3]' parameters[4]' parameters[5]);                      int seconds = int.Parse(parameters[6]);                      var startAts = ToStartAts(parameters[7]);                      RunTestScenario(folderWithPositives' folderWithNegatives'  queryStride' seconds' startAts);                      break;              }
Magic Number,SoundFingerprinting.Utils,TestRunner,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Utils\TestRunner.cs,RunTest,The following statement contains a magic number: switch (action)              {                  case "Insert":                      string folderWithSongs = parameters[1];                      var stride = utils.ToStride(parameters[2]' parameters[3]' parameters[4]);                      DeleteAll();                      var sb = TestRunnerWriter.StartInsert();                      Insert(folderWithSongs' stride' sb);                      TestRunnerWriter.SaveInsertDataToFolder(sb' pathToResultsFolder' stride);                      lastInsertStride = stride;                      break;                  case "Run":                      string folderWithPositives = parameters[1];                      string folderWithNegatives = parameters[2];                      var queryStride = utils.ToStride(parameters[3]' parameters[4]' parameters[5]);                      int seconds = int.Parse(parameters[6]);                      var startAts = ToStartAts(parameters[7]);                      RunTestScenario(folderWithPositives' folderWithNegatives'  queryStride' seconds' startAts);                      break;              }
Magic Number,SoundFingerprinting.Utils,TestRunner,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Utils\TestRunner.cs,RunTest,The following statement contains a magic number: switch (action)              {                  case "Insert":                      string folderWithSongs = parameters[1];                      var stride = utils.ToStride(parameters[2]' parameters[3]' parameters[4]);                      DeleteAll();                      var sb = TestRunnerWriter.StartInsert();                      Insert(folderWithSongs' stride' sb);                      TestRunnerWriter.SaveInsertDataToFolder(sb' pathToResultsFolder' stride);                      lastInsertStride = stride;                      break;                  case "Run":                      string folderWithPositives = parameters[1];                      string folderWithNegatives = parameters[2];                      var queryStride = utils.ToStride(parameters[3]' parameters[4]' parameters[5]);                      int seconds = int.Parse(parameters[6]);                      var startAts = ToStartAts(parameters[7]);                      RunTestScenario(folderWithPositives' folderWithNegatives'  queryStride' seconds' startAts);                      break;              }
Magic Number,SoundFingerprinting.Utils,TestRunner,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Utils\TestRunner.cs,RunTest,The following statement contains a magic number: switch (action)              {                  case "Insert":                      string folderWithSongs = parameters[1];                      var stride = utils.ToStride(parameters[2]' parameters[3]' parameters[4]);                      DeleteAll();                      var sb = TestRunnerWriter.StartInsert();                      Insert(folderWithSongs' stride' sb);                      TestRunnerWriter.SaveInsertDataToFolder(sb' pathToResultsFolder' stride);                      lastInsertStride = stride;                      break;                  case "Run":                      string folderWithPositives = parameters[1];                      string folderWithNegatives = parameters[2];                      var queryStride = utils.ToStride(parameters[3]' parameters[4]' parameters[5]);                      int seconds = int.Parse(parameters[6]);                      var startAts = ToStartAts(parameters[7]);                      RunTestScenario(folderWithPositives' folderWithNegatives'  queryStride' seconds' startAts);                      break;              }
Magic Number,SoundFingerprinting.Utils,TestRunner,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Utils\TestRunner.cs,RunTest,The following statement contains a magic number: switch (action)              {                  case "Insert":                      string folderWithSongs = parameters[1];                      var stride = utils.ToStride(parameters[2]' parameters[3]' parameters[4]);                      DeleteAll();                      var sb = TestRunnerWriter.StartInsert();                      Insert(folderWithSongs' stride' sb);                      TestRunnerWriter.SaveInsertDataToFolder(sb' pathToResultsFolder' stride);                      lastInsertStride = stride;                      break;                  case "Run":                      string folderWithPositives = parameters[1];                      string folderWithNegatives = parameters[2];                      var queryStride = utils.ToStride(parameters[3]' parameters[4]' parameters[5]);                      int seconds = int.Parse(parameters[6]);                      var startAts = ToStartAts(parameters[7]);                      RunTestScenario(folderWithPositives' folderWithNegatives'  queryStride' seconds' startAts);                      break;              }
Magic Number,SoundFingerprinting.Utils,TestRunner,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Utils\TestRunner.cs,GetTestRunnerEventArgsForFinishedTestIteration,The following statement contains a magic number: return new TestRunnerEventArgs                  {                      FScore = fscore'                      RowWithDetails =                          new object[]                              {                                  GetInsertMetadata()' queryStride.ToString()' seconds' startAts[iteration]'                                  fscore.Precision' fscore.Recall' fscore.F1'                                   statistics.TruePositiveInfo'                                  statistics.TruePositivePercentileInfo'                                  statistics.FalseNegativesInfo'                                  statistics.FalseNegativesPercentileInfo'                                  statistics.FalsePositivesInfo'                                  statistics.FalsePositivesPercentileInfo'                                  (double)stopwatch.ElapsedMilliseconds / 1000                              }'                      Verified = verified                  };
Magic Number,SoundFingerprinting.Utils,TestRunner,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Utils\TestRunner.cs,Insert,The following statement contains a magic number: sb.AppendLine($"{inserted}'{stopWatch.ElapsedMilliseconds / 1000}");
Magic Number,SoundFingerprinting.Utils,TestRunnerScenarioValidator,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Utils\TestRunnerScenarioValidator.cs,ValidateInsertAction,The following statement contains a magic number: utils.ToStride(parameters[2]' parameters[3]' parameters[4]);
Magic Number,SoundFingerprinting.Utils,TestRunnerScenarioValidator,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Utils\TestRunnerScenarioValidator.cs,ValidateInsertAction,The following statement contains a magic number: utils.ToStride(parameters[2]' parameters[3]' parameters[4]);
Magic Number,SoundFingerprinting.Utils,TestRunnerScenarioValidator,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Utils\TestRunnerScenarioValidator.cs,ValidateInsertAction,The following statement contains a magic number: utils.ToStride(parameters[2]' parameters[3]' parameters[4]);
Magic Number,SoundFingerprinting.Utils,TestRunnerScenarioValidator,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Utils\TestRunnerScenarioValidator.cs,ValidateRunAction,The following statement contains a magic number: string folderWithNegatives = parameters[2];
Magic Number,SoundFingerprinting.Utils,TestRunnerScenarioValidator,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Utils\TestRunnerScenarioValidator.cs,ValidateRunAction,The following statement contains a magic number: utils.ToStride(parameters[3]' parameters[4]' parameters[5]);
Magic Number,SoundFingerprinting.Utils,TestRunnerScenarioValidator,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Utils\TestRunnerScenarioValidator.cs,ValidateRunAction,The following statement contains a magic number: utils.ToStride(parameters[3]' parameters[4]' parameters[5]);
Magic Number,SoundFingerprinting.Utils,TestRunnerScenarioValidator,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Utils\TestRunnerScenarioValidator.cs,ValidateRunAction,The following statement contains a magic number: utils.ToStride(parameters[3]' parameters[4]' parameters[5]);
Magic Number,SoundFingerprinting.Utils,TestRunnerScenarioValidator,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Utils\TestRunnerScenarioValidator.cs,ValidateRunAction,The following statement contains a magic number: _ = int.Parse(parameters[6]);
Magic Number,SoundFingerprinting.Utils,TestRunnerScenarioValidator,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Utils\TestRunnerScenarioValidator.cs,ValidateRunAction,The following statement contains a magic number: utils.ParseInts(parameters[7]' testRunnerConfig.StartAtsSeparator);
Magic Number,SoundFingerprinting.Utils,TestRunnerWriter,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Utils\TestRunnerWriter.cs,FinishTestIteration,The following statement contains a magic number: sb.AppendLine(string.Format("Results: {0}. Elapsed Seconds: {1}"' score' (double)elapsedMiliseconds / 1000));
Magic Number,SoundFingerprinting.Wavelets,StandardHaarWaveletDecomposition,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Wavelets\StandardHaarWaveletDecomposition.cs,DecompositionArray,The following statement contains a magic number: h /= 2;
Magic Number,SoundFingerprinting.Wavelets,StandardHaarWaveletDecomposition,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Wavelets\StandardHaarWaveletDecomposition.cs,DecompositionRow,The following statement contains a magic number: h /= 2;
Magic Number,SoundFingerprinting.Wavelets,StandardHaarWaveletDecomposition,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Wavelets\StandardHaarWaveletDecomposition.cs,DecompositionStep,The following statement contains a magic number: h /= 2;
Magic Number,SoundFingerprinting.Wavelets,StandardHaarWaveletDecomposition,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Wavelets\StandardHaarWaveletDecomposition.cs,DecompositionStep,The following statement contains a magic number: Buffer.BlockCopy(temp' 0' array' prefix * sizeof(float)' sizeof(float) * (h * 2));
Magic Number,SoundFingerprinting.Windows,HanningWindow,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Windows\HanningWindow.cs,WindowInPlace,The following statement contains a magic number: outerspace[i] *= (float)(0.5 * (1 - System.Math.Cos(2 * System.Math.PI * i / (n - 1))));
Magic Number,SoundFingerprinting.Windows,HanningWindow,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Windows\HanningWindow.cs,WindowInPlace,The following statement contains a magic number: outerspace[i] *= (float)(0.5 * (1 - System.Math.Cos(2 * System.Math.PI * i / (n - 1))));
Magic Number,SoundFingerprinting.Windows,HanningWindow,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Windows\HanningWindow.cs,GetWindow,The following statement contains a magic number: array[i] = (float)(0.5 * (1 - System.Math.Cos(2 * System.Math.PI * i / (length - 1))));
Magic Number,SoundFingerprinting.Windows,HanningWindow,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Windows\HanningWindow.cs,GetWindow,The following statement contains a magic number: array[i] = (float)(0.5 * (1 - System.Math.Cos(2 * System.Math.PI * i / (length - 1))));
Missing Default,SoundFingerprinting.Audio,LowPassFilter,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Audio\LowPassFilter.cs,FilterAndDownsample,The following switch statement is missing a default case: switch (sourceSampleRate)              {                  case 48000:                      // 48000 * 7 / 61 is almost 5512                      return ResampleNonIntegerFactor(samples' 7 ' 61' LpFilter336KHz128);                  case 44100:                      return Resample(samples' samples.Length / 8' 8' LpFilter44);                  case 22050:                      return Resample(samples' samples.Length / 4' 4' LpFilter22);                  case 16000:                      // 16000 * 21 / 61 is almost 5512                      return ResampleNonIntegerFactor(samples' 21' 61' LpFilter336KHz128);                  case 11025:                      return Resample(samples' samples.Length / 2' 2' LpFilter11);                  case 8000:                      // 8000 * 9 / 13 is almost 5512                      return ResampleNonIntegerFactor(samples' 9' 13' LpFilter72KHz64);                  case 5512:                      return samples;              }
Missing Default,SoundFingerprinting.Utils,TestRunner,D:\research\architectureSmells\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting\Utils\TestRunner.cs,RunTest,The following switch statement is missing a default case: switch (action)              {                  case "Insert":                      string folderWithSongs = parameters[1];                      var stride = utils.ToStride(parameters[2]' parameters[3]' parameters[4]);                      DeleteAll();                      var sb = TestRunnerWriter.StartInsert();                      Insert(folderWithSongs' stride' sb);                      TestRunnerWriter.SaveInsertDataToFolder(sb' pathToResultsFolder' stride);                      lastInsertStride = stride;                      break;                  case "Run":                      string folderWithPositives = parameters[1];                      string folderWithNegatives = parameters[2];                      var queryStride = utils.ToStride(parameters[3]' parameters[4]' parameters[5]);                      int seconds = int.Parse(parameters[6]);                      var startAts = ToStartAts(parameters[7]);                      RunTestScenario(folderWithPositives' folderWithNegatives'  queryStride' seconds' startAts);                      break;              }
