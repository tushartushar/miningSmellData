Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,SoundFingerprinting.Audio.NAudio,INAudioSourceReader,C:\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio.NAudio\INAudioSourceReader.cs,ReadMonoFromSource,The method has 5 parameters. Parameters: source' sampleRate' secondsToRead' startAtSecond' resamplerQuality
Long Parameter List,SoundFingerprinting.Audio.NAudio,NAudioSourceReader,C:\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio.NAudio\NAudioSourceReader.cs,ReadMonoFromSource,The method has 5 parameters. Parameters: source' sampleRate' secondsToRead' startAtSecond' resamplerQuality
Long Statement,SoundFingerprinting.Audio.NAudio,NAudioSourceReader,C:\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio.NAudio\NAudioSourceReader.cs,ReadMonoFromSource,The length of the statement  "                    return samplesAggregator.ReadSamplesFromSource(new NAudioSamplesProviderAdapter(waveToSampleProvider)' secondsToRead' sampleRate); " is 130.
Long Statement,SoundFingerprinting.Audio.NAudio,NAudioStreamingUrlReader,C:\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio.NAudio\NAudioStreamingUrlReader.cs,ReadMonoSamples,The length of the statement  "            // The issue has been addressed here: http://stackoverflow.com/questions/22385783/aac-stream-resampled-incorrectly though not yet resolved " is 138.
Long Statement,SoundFingerprinting.Audio.NAudio,NAudioStreamingUrlReader,C:\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio.NAudio\NAudioStreamingUrlReader.cs,ReadMonoSamples,The length of the statement  "            float[] stereoSamples = reader.ReadMonoFromSource(url' sampleRate' secondsToRead * 2 /*for stereo request twice as much data as for mono*/' startAtSecond: 0' resamplerQuality: DefaultResamplerQuality); " is 201.
Magic Number,SoundFingerprinting.Audio.NAudio,BlockingQueueSamplesProvider,C:\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio.NAudio\BlockingQueueSamplesProvider.cs,GetNextSamples,The following statement contains a magic number: try              {                  float[] samples = producer.Take();                  Array.Copy(samples' buffer' samples.Length);                  return samples.Length * 4;              }              catch (InvalidOperationException e)              {                  // thrown when collection is marked as not allowing more additions                  Trace.WriteLine(e.Message);              }
Magic Number,SoundFingerprinting.Audio.NAudio,NAudioStreamingUrlReader,C:\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio.NAudio\NAudioStreamingUrlReader.cs,ReadMonoSamples,The following statement contains a magic number: float[] stereoSamples = reader.ReadMonoFromSource(url' sampleRate' secondsToRead * 2 /*for stereo request twice as much data as for mono*/' startAtSecond: 0' resamplerQuality: DefaultResamplerQuality);
Magic Number,SoundFingerprinting.Audio.NAudio,NAudioStreamingUrlReader,C:\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio.NAudio\NAudioStreamingUrlReader.cs,ConvertStereoSamplesToMono,The following statement contains a magic number: float[] monoSamples = new float[stereoSamples.Length / 2];
Magic Number,SoundFingerprinting.Audio.NAudio,NAudioStreamingUrlReader,C:\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio.NAudio\NAudioStreamingUrlReader.cs,ConvertStereoSamplesToMono,The following statement contains a magic number: for (int i = 0; i < stereoSamples.Length; i += 2)              {                  float sum = stereoSamples[i] + stereoSamples[i + 1];                  if (sum > short.MaxValue)                  {                      sum = short.MaxValue;                  }                    monoSamples[i / 2] = sum / 2;              }
Magic Number,SoundFingerprinting.Audio.NAudio,NAudioStreamingUrlReader,C:\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio.NAudio\NAudioStreamingUrlReader.cs,ConvertStereoSamplesToMono,The following statement contains a magic number: for (int i = 0; i < stereoSamples.Length; i += 2)              {                  float sum = stereoSamples[i] + stereoSamples[i + 1];                  if (sum > short.MaxValue)                  {                      sum = short.MaxValue;                  }                    monoSamples[i / 2] = sum / 2;              }
Magic Number,SoundFingerprinting.Audio.NAudio,NAudioStreamingUrlReader,C:\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio.NAudio\NAudioStreamingUrlReader.cs,ConvertStereoSamplesToMono,The following statement contains a magic number: for (int i = 0; i < stereoSamples.Length; i += 2)              {                  float sum = stereoSamples[i] + stereoSamples[i + 1];                  if (sum > short.MaxValue)                  {                      sum = short.MaxValue;                  }                    monoSamples[i / 2] = sum / 2;              }
