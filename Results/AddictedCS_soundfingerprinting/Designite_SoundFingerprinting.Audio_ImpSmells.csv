Implementation smell,Namespace,Class,File,Method,Description
Long Statement,SoundFingerprinting.Audio,ContinuousStreamSamplesProvider,C:\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio\ContinuousStreamSamplesProvider.cs,GetNextSamples,The length of the statement  "                Thread.Sleep(MillisecondsTimeout); // lame but required to fill the buffer from continuous stream' either microphone or url " is 123.
Long Statement,SoundFingerprinting.Audio,SamplesAggregator,C:\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio\SamplesAggregator.cs,ReadSamplesFromSource,The length of the statement  "                throw new AudioServiceException("Could not read requested number of seconds " + secondsToRead + "' audio file is not that long"); " is 129.
Magic Number,SoundFingerprinting.Audio,AudioSamplesNormalizer,C:\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio\AudioSamplesNormalizer.cs,NormalizeInPlace,The following statement contains a magic number: float rms = (float)Math.Sqrt(squares / samples.Length) * 10;
Magic Number,SoundFingerprinting.Audio,SamplesAggregator,C:\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio\SamplesAggregator.cs,GetTotalBytesToRead,The following statement contains a magic number: if (Math.Abs(secondsToRead) < 0.0001)              {                  return int.MaxValue;              }
Magic Number,SoundFingerprinting.Audio,SamplesConverter,C:\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio\SamplesConverter.cs,GetFloatSamplesFromByte,The following statement contains a magic number: float[] chunk = new float[bytesRecorded / 4];
Magic Number,SoundFingerprinting.Audio,SamplesConverter,C:\repos\AddictedCS_soundfingerprinting\src\SoundFingerprinting.Audio\SamplesConverter.cs,GetFloatSamplesFromByte,The following statement contains a magic number: while (startIndex < bytesRecorded)              {                  chunk[floatSampleIndex++] = BitConverter.ToSingle(buffer' startIndex);                  startIndex += 4;              }
