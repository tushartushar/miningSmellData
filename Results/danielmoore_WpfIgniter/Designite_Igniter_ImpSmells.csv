Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Igniter.Behaviors,DirectoryResourcesBehavior,C:\repos\danielmoore_WpfIgniter\Igniter\Behaviors\DirectoryResourcesBehavior.cs,GetAssemblyNameAndPart,The method has 5 parameters. Parameters: uri' partName' assemblyName' assemblyVersion' assemblyKey
Long Parameter List,Igniter,BindableBase,C:\repos\danielmoore_WpfIgniter\Igniter\BindableBase.cs,SetProperty,The method has 6 parameters. Parameters: backingStore' value' onChanged' onChanging' coerceValue' propertyName
Long Parameter List,Igniter.Composition,ViewFactory,C:\repos\danielmoore_WpfIgniter\Igniter\Composition\ViewFactory.cs,Create,The method has 6 parameters. Parameters: viewType' view' viewModelType' viewModel' viewCreationStrategy' viewModelCreationStrategy
Long Identifier,Igniter.Behaviors,ItemPositionBehavior,C:\repos\danielmoore_WpfIgniter\Igniter\Behaviors\ItemPositionBehavior.cs,,The length of the parameter ItemPositionManagerPropertyKey is 30.
Long Identifier,Igniter.Behaviors,DirectoryResourcesBehavior,C:\repos\danielmoore_WpfIgniter\Igniter\Behaviors\DirectoryResourcesBehavior.cs,,The length of the parameter GetAssemblyNameAndPartMethodInfo is 32.
Long Identifier,Igniter.Composition,ViewFactory,C:\repos\danielmoore_WpfIgniter\Igniter\Composition\ViewFactory.cs,,The length of the parameter DefaultViewModelCreationStrategy is 32.
Long Statement,Igniter.Behaviors,PropertySetter,C:\repos\danielmoore_WpfIgniter\Igniter\Behaviors\PropertySetter.cs,ReceiveMarkupExtension,The length of the statement  "            eventArgs.Handled = SetPropertyHelper.TryReceiveMarkupExtension(eventArgs.MarkupExtension' eventArgs.ServiceProvider' out value); " is 129.
Long Statement,Igniter.Behaviors,SwitchPropertyCase,C:\repos\danielmoore_WpfIgniter\Igniter\Behaviors\SwitchPropertyCase.cs,ReceiveMarkupExtension,The length of the statement  "            eventArgs.Handled = SetPropertyHelper.TryReceiveMarkupExtension(eventArgs.MarkupExtension' eventArgs.ServiceProvider' out value); " is 129.
Long Statement,Igniter.Behaviors,DirectoryResourcesBehavior,C:\repos\danielmoore_WpfIgniter\Igniter\Behaviors\DirectoryResourcesBehavior.cs,ResolveDirectoryUri,The length of the statement  "            var directory = Directory.OriginalString.EndsWith("/") ? Directory : new Uri(Directory.OriginalString + '/'' UriKind.RelativeOrAbsolute); " is 137.
Long Statement,Igniter,DependencyObjectExtensions,C:\repos\danielmoore_WpfIgniter\Igniter\DependencyObjectExtensions.cs,SubscribeToDependencyPropertyChanges,The length of the statement  "                BindingOperations.SetBinding(proxy' EventProxy.ValueProperty' new Binding { Path = new PropertyPath("(0)"' property)' Source = source }); " is 137.
Long Statement,Igniter,DependencyObjectExtensions,C:\repos\danielmoore_WpfIgniter\Igniter\DependencyObjectExtensions.cs,GetDependencyPropertyChanges,The length of the statement  "            return Observable.Create<object>(o => SubscribeToDependencyPropertyChanges(source' property' (s' e) => o.OnNext(e.NewValue))); " is 126.
Long Statement,Igniter,ExpressionUtil,C:\repos\danielmoore_WpfIgniter\Igniter\ExpressionUtil.cs,GetPropertyName,The length of the statement  "            if (propertyInfo == null || propertyInfo.DeclaringType == null || !propertyInfo.DeclaringType.IsAssignableFrom(typeof(TSource))) " is 128.
Long Statement,Igniter.Core,SwitchCaseEvaluator,C:\repos\danielmoore_WpfIgniter\Igniter\Core\SwitchCaseEvaluator.cs,GetDefaultEqualityComparer,The length of the statement  "            return (IEqualityComparer)typeof(EqualityComparer<>).MakeGenericType(type).InvokeMember("Default"' flags' null' null' null); " is 124.
Long Statement,Igniter.Core,WeakEvent<TDelegate>,C:\repos\danielmoore_WpfIgniter\Igniter\Core\WeakEvent.cs,GetTarget,The length of the statement  "            if (@delegate.Target != null && Attribute.IsDefined(@delegate.Method.DeclaringType' typeof(CompilerGeneratedAttribute))) " is 120.
Empty Catch Block,Igniter.Core,CommandBase,C:\repos\danielmoore_WpfIgniter\Igniter\Core\CommandBase.cs,TryConvert,The method has an empty catch block.
Empty Catch Block,Igniter.Core,SwitchCaseEvaluator,C:\repos\danielmoore_WpfIgniter\Igniter\Core\SwitchCaseEvaluator.cs,TryConvert,The method has an empty catch block.
Magic Number,Igniter.Behaviors,DirectoryResourcesBehavior,C:\repos\danielmoore_WpfIgniter\Igniter\Behaviors\DirectoryResourcesBehavior.cs,GetAssemblyNameAndPart,The following statement contains a magic number: assemblyName = (string)args[2];
Magic Number,Igniter.Behaviors,DirectoryResourcesBehavior,C:\repos\danielmoore_WpfIgniter\Igniter\Behaviors\DirectoryResourcesBehavior.cs,GetAssemblyNameAndPart,The following statement contains a magic number: assemblyVersion = (string)args[3];
Magic Number,Igniter.Behaviors,DirectoryResourcesBehavior,C:\repos\danielmoore_WpfIgniter\Igniter\Behaviors\DirectoryResourcesBehavior.cs,GetAssemblyNameAndPart,The following statement contains a magic number: assemblyKey = (string)args[4];
Magic Number,Igniter.Core,Watcher<T>,C:\repos\danielmoore_WpfIgniter\Igniter\Core\ExpressionWatcher.cs,GetMemberChain,The following statement contains a magic number: var members = new Stack<MemberInfo>(16);
Magic Number,Igniter.Core,PropertyChainEqualityComparer,C:\repos\danielmoore_WpfIgniter\Igniter\Core\ExpressionWatcher.cs,GetHashCode,The following statement contains a magic number: var hash = 17;
Magic Number,Igniter.Core,PropertyChainEqualityComparer,C:\repos\danielmoore_WpfIgniter\Igniter\Core\ExpressionWatcher.cs,GetHashCode,The following statement contains a magic number: while (true)                      {                          switch (node.NodeType)                          {                              case ExpressionType.Constant:                                  var constantExpr = (ConstantExpression)node;                                    return hash * 31 + (constantExpr.Value != null ? constantExpr.Value.GetHashCode() : 0);                                case ExpressionType.MemberAccess:                                  var memberExpr = (MemberExpression)node;                                    hash = hash * 31 + memberExpr.Member.GetHashCode();                                    node = memberExpr.Expression;                                  break;                                default:                                  throw new InvalidOperationException(node.NodeType.ToString());                          }                      }
Magic Number,Igniter.Core,PropertyChainEqualityComparer,C:\repos\danielmoore_WpfIgniter\Igniter\Core\ExpressionWatcher.cs,GetHashCode,The following statement contains a magic number: while (true)                      {                          switch (node.NodeType)                          {                              case ExpressionType.Constant:                                  var constantExpr = (ConstantExpression)node;                                    return hash * 31 + (constantExpr.Value != null ? constantExpr.Value.GetHashCode() : 0);                                case ExpressionType.MemberAccess:                                  var memberExpr = (MemberExpression)node;                                    hash = hash * 31 + memberExpr.Member.GetHashCode();                                    node = memberExpr.Expression;                                  break;                                default:                                  throw new InvalidOperationException(node.NodeType.ToString());                          }                      }
Magic Number,Igniter.Core,ExpressionCommandBase,C:\repos\danielmoore_WpfIgniter\Igniter\Core\ExpressionCommandBase.cs,ExpressionCommandBase,The following statement contains a magic number: for (int i = 0; i < count; i++)              {                  var args = new object[] {i' null' null};                  getKeyValuePairMethodInfo.Invoke(metadataMap' args);                    metadata = (PropertyMetadata)args[2];                    propertyChangedCallbackField.SetValue(metadata' metadata.PropertyChangedCallback + OnButtonBaseCommandParameterChanged);              }
Magic Number,Igniter.Core,WeakEvent<TDelegate>,C:\repos\danielmoore_WpfIgniter\Igniter\Core\WeakEvent.cs,GetInvocationList,The following statement contains a magic number: if (!_delegates.TryGetValue(target' out invocationList))              {                  _delegates.Add(target' invocationList = new List<TDelegate>(5));                  _invocationLists.Add(new WeakReference(invocationList));              }
Magic Number,Igniter.Composition,ViewElement,C:\repos\danielmoore_WpfIgniter\Igniter\Composition\ViewElement.cs,CreateView,The following statement contains a magic number: try              {                  var viewFactory = GetViewFactory(this);                    if (viewFactory == null)                      throw new InvalidOperationException("No ViewFactory has been set.");                    CreationStrategy viewCreationStrategy = ViewCreationStrategy'                      viewModelCreationStrategy = ViewModelCreationStrategy;                    view = View;                  var viewModel = ViewModel;                    if (_isCreated)                  {                      if (view != null && !recreationOptions.HasFlag(RecreationOptions.RecreateView))                          viewCreationStrategy = CreationStrategy.Inject;                        if (viewModel != null && !recreationOptions.HasFlag(RecreationOptions.RecreateViewModel))                          viewCreationStrategy = CreationStrategy.Inject;                  }                    viewFactory.Create(ViewType' ref view' ViewModelType' ref viewModel' viewCreationStrategy' viewModelCreationStrategy);              }              catch (Exception error)              {                  view = new TextBox                  {                      BorderBrush = Brushes.Red'                      BorderThickness = new Thickness(10)'                      IsReadOnly = true'                      AcceptsReturn = true'                      AcceptsTab = true'                      HorizontalScrollBarVisibility = ScrollBarVisibility.Auto'                      VerticalScrollBarVisibility = ScrollBarVisibility.Auto'                      FontFamily = new FontFamily("Consolas' Courier New' Monospaced")'                      Text = error.ToString()                  };              }
Missing Default,Igniter.Core,BindingListWatcher,C:\repos\danielmoore_WpfIgniter\Igniter\Core\ExpressionWatcher.cs,OnNotifierListChanged,The following switch statement is missing a default case: switch (e.ListChangedType)                  {                      case ListChangedType.ItemAdded:                      case ListChangedType.ItemDeleted:                      case ListChangedType.ItemMoved:                      case ListChangedType.Reset:                          OnChanged();                          break;                  }
