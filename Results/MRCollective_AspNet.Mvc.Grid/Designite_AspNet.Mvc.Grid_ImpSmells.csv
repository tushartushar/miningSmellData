Implementation smell,Namespace,Class,File,Method,Description
Long Statement,AspNet.Mvc.Grid,GridExtensions,C:\repos\MRCollective_AspNet.Mvc.Grid\AspNet.Mvc.Grid\GridExtensions.cs,Grid,The length of the statement  "		throw new InvalidOperationException (string.Format ("Item in ViewData with key '{0}' is not an IEnumerable of '{1}'."' viewDataKey' typeof(T).Name)); " is 149.
Long Statement,AspNet.Mvc.Grid,GridRenderer,C:\repos\MRCollective_AspNet.Mvc.Grid\AspNet.Mvc.Grid\GridRenderer.cs,BaseRenderRowStart,The length of the statement  "	bool rendered = GridModel.Sections.Row.StartSectionRenderer (rowData' new RenderingContext (Writer' Context' _engines)); " is 120.
Long Statement,AspNet.Mvc.Grid,HtmlTableGridRenderer,C:\repos\MRCollective_AspNet.Mvc.Grid\AspNet.Mvc.Grid\HtmlTableGridRenderer.cs,RenderHeaderText,The length of the statement  "			sortOptions.Direction = (GridModel.SortOptions.Direction == SortDirection.Ascending) ? SortDirection.Descending : SortDirection.Ascending; " is 138.
Long Statement,AspNet.Mvc.Grid,HtmlTableGridRenderer,C:\repos\MRCollective_AspNet.Mvc.Grid\AspNet.Mvc.Grid\HtmlTableGridRenderer.cs,RenderHeaderText,The length of the statement  "		var link = HtmlHelper.GenerateLink (Context.RequestContext' RouteTable.Routes' column.DisplayName' null' null' null' routeValues' null); " is 136.
Long Statement,AspNet.Mvc.Grid,HtmlTableGridRenderer,C:\repos\MRCollective_AspNet.Mvc.Grid\AspNet.Mvc.Grid\HtmlTableGridRenderer.cs,GenerateSortColumnName,The length of the statement  "	//If the property name cannot be inferred (ie the expression is not a MemberExpression) then try the display name instead. " is 122.
Long Statement,AspNet.Mvc.Grid,HtmlTableGridRenderer,C:\repos\MRCollective_AspNet.Mvc.Grid\AspNet.Mvc.Grid\HtmlTableGridRenderer.cs,RenderHeadStart,The length of the statement  "	string attributes = BuildHtmlAttributes (GridModel.Sections.HeaderRow.Attributes (new GridRowViewData<T> (null' false))); " is 121.
Long Statement,AspNet.Mvc.Grid,PaginationExtensions,C:\repos\MRCollective_AspNet.Mvc.Grid\AspNet.Mvc.Grid\PaginationExtensions.cs,Pager,The length of the statement  "		throw new InvalidOperationException (string.Format ("Item in ViewData with key '{0}' is not an IPagination."' viewDataKey)); " is 124.
Long Statement,AspNet.Mvc.Grid.Sorting,SortExtensions,C:\repos\MRCollective_AspNet.Mvc.Grid\AspNet.Mvc.Grid\Sorting\SortExtensions.cs,OrderBy,The length of the statement  "		throw new InvalidOperationException (string.Format ("Could not find a property called '{0}' on type {1}"' propertyName' type)); " is 127.
Virtual Method Call from Constructor,AspNet.Mvc.Grid,GridModel,C:\repos\MRCollective_AspNet.Mvc.Grid\AspNet.Mvc.Grid\GridModel.cs,GridModel,The constructor "GridModel" calls a virtual method "CreateColumnBuilder".
Magic Number,AspNet.Mvc.Grid,GridRenderer,C:\repos\MRCollective_AspNet.Mvc.Grid\AspNet.Mvc.Grid\GridRenderer.cs,RenderItem,The following statement contains a magic number: foreach (var column in VisibleColumns ()) {  	//A custom item section has been specified - render it and continue to the next iteration.  	#pragma  	// TODO: CustomItemRenderer is obsolete in favour of custom columns. Remove this after next release.  	if (column.CustomItemRenderer != null) {  		column.CustomItemRenderer (new RenderingContext (Writer' Context' _engines)' rowData.Item);  		continue;  	}  	#pragma  	RenderStartCell (column' rowData);  	RenderCellValue (column' rowData);  	RenderEndCell ();  }  
Magic Number,AspNet.Mvc.Grid,GridRenderer,C:\repos\MRCollective_AspNet.Mvc.Grid\AspNet.Mvc.Grid\GridRenderer.cs,RenderItem,The following statement contains a magic number: foreach (var column in VisibleColumns ()) {  	//A custom item section has been specified - render it and continue to the next iteration.  	#pragma  	// TODO: CustomItemRenderer is obsolete in favour of custom columns. Remove this after next release.  	if (column.CustomItemRenderer != null) {  		column.CustomItemRenderer (new RenderingContext (Writer' Context' _engines)' rowData.Item);  		continue;  	}  	#pragma  	RenderStartCell (column' rowData);  	RenderCellValue (column' rowData);  	RenderEndCell ();  }  
Magic Number,AspNet.Mvc.Grid,GridRenderer,C:\repos\MRCollective_AspNet.Mvc.Grid\AspNet.Mvc.Grid\GridRenderer.cs,RenderItem,The following statement contains a magic number: foreach (var column in VisibleColumns ()) {  	//A custom item section has been specified - render it and continue to the next iteration.  	#pragma  	// TODO: CustomItemRenderer is obsolete in favour of custom columns. Remove this after next release.  	if (column.CustomItemRenderer != null) {  		column.CustomItemRenderer (new RenderingContext (Writer' Context' _engines)' rowData.Item);  		continue;  	}  	#pragma  	RenderStartCell (column' rowData);  	RenderCellValue (column' rowData);  	RenderEndCell ();  }  
Magic Number,AspNet.Mvc.Grid,GridRenderer,C:\repos\MRCollective_AspNet.Mvc.Grid\AspNet.Mvc.Grid\GridRenderer.cs,RenderItem,The following statement contains a magic number: foreach (var column in VisibleColumns ()) {  	//A custom item section has been specified - render it and continue to the next iteration.  	#pragma  	// TODO: CustomItemRenderer is obsolete in favour of custom columns. Remove this after next release.  	if (column.CustomItemRenderer != null) {  		column.CustomItemRenderer (new RenderingContext (Writer' Context' _engines)' rowData.Item);  		continue;  	}  	#pragma  	RenderStartCell (column' rowData);  	RenderCellValue (column' rowData);  	RenderEndCell ();  }  
Magic Number,AspNet.Mvc.Grid,GridRenderer,C:\repos\MRCollective_AspNet.Mvc.Grid\AspNet.Mvc.Grid\GridRenderer.cs,RenderHeader,The following statement contains a magic number: foreach (var column in VisibleColumns ()) {  	//Allow for custom header overrides.  	#pragma  	if (column.CustomHeaderRenderer != null) {  		column.CustomHeaderRenderer (new RenderingContext (Writer' Context' _engines));  	}  	#pragma  	else {  		RenderHeaderCellStart (column);  		RenderHeaderText (column);  		RenderHeaderCellEnd ();  	}  }  
Magic Number,AspNet.Mvc.Grid,GridRenderer,C:\repos\MRCollective_AspNet.Mvc.Grid\AspNet.Mvc.Grid\GridRenderer.cs,RenderHeader,The following statement contains a magic number: foreach (var column in VisibleColumns ()) {  	//Allow for custom header overrides.  	#pragma  	if (column.CustomHeaderRenderer != null) {  		column.CustomHeaderRenderer (new RenderingContext (Writer' Context' _engines));  	}  	#pragma  	else {  		RenderHeaderCellStart (column);  		RenderHeaderText (column);  		RenderHeaderCellEnd ();  	}  }  
Magic Number,AspNet.Mvc.Grid,GridRenderer,C:\repos\MRCollective_AspNet.Mvc.Grid\AspNet.Mvc.Grid\GridRenderer.cs,RenderHeader,The following statement contains a magic number: foreach (var column in VisibleColumns ()) {  	//Allow for custom header overrides.  	#pragma  	if (column.CustomHeaderRenderer != null) {  		column.CustomHeaderRenderer (new RenderingContext (Writer' Context' _engines));  	}  	#pragma  	else {  		RenderHeaderCellStart (column);  		RenderHeaderText (column);  		RenderHeaderCellEnd ();  	}  }  
Magic Number,AspNet.Mvc.Grid,GridRenderer,C:\repos\MRCollective_AspNet.Mvc.Grid\AspNet.Mvc.Grid\GridRenderer.cs,RenderHeader,The following statement contains a magic number: foreach (var column in VisibleColumns ()) {  	//Allow for custom header overrides.  	#pragma  	if (column.CustomHeaderRenderer != null) {  		column.CustomHeaderRenderer (new RenderingContext (Writer' Context' _engines));  	}  	#pragma  	else {  		RenderHeaderCellStart (column);  		RenderHeaderText (column);  		RenderHeaderCellEnd ();  	}  }  
Magic Number,AspNet.Mvc.Grid,GridRenderer,C:\repos\MRCollective_AspNet.Mvc.Grid\AspNet.Mvc.Grid\GridRenderer.cs,RenderHeader,The following statement contains a magic number: if (column.CustomHeaderRenderer != null) {  	column.CustomHeaderRenderer (new RenderingContext (Writer' Context' _engines));  }  #pragma  else {  	RenderHeaderCellStart (column);  	RenderHeaderText (column);  	RenderHeaderCellEnd ();  }  
Magic Number,AspNet.Mvc.Grid,GridRenderer,C:\repos\MRCollective_AspNet.Mvc.Grid\AspNet.Mvc.Grid\GridRenderer.cs,RenderHeader,The following statement contains a magic number: if (column.CustomHeaderRenderer != null) {  	column.CustomHeaderRenderer (new RenderingContext (Writer' Context' _engines));  }  #pragma  else {  	RenderHeaderCellStart (column);  	RenderHeaderText (column);  	RenderHeaderCellEnd ();  }  
