Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Shayan.Data,Constants,C:\repos\Ashna_Shayan-Dental\ShayanData\Other Models\Constants.cs,GetDocumentTypeTitle,Cyclomatic complexity of the method is 8
Complex Method,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,Validate,Cyclomatic complexity of the method is 8
Complex Method,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,ValidateInputLength,Cyclomatic complexity of the method is 9
Complex Method,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,ValidateInputType,Cyclomatic complexity of the method is 8
Complex Method,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,Validate,Cyclomatic complexity of the method is 9
Long Parameter List,Shayan.Data,DataLayer,C:\repos\Ashna_Shayan-Dental\ShayanData\DataLayer(shabnam).cs,isInRange,The method has 7 parameters.
Long Parameter List,Shayan.Data,AccountantEntity,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityModel.Designer.cs,CreateAccountantEntity,The method has 5 parameters.
Long Parameter List,Shayan.Data,AccountantPagesCounter,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityModel.Designer.cs,CreateAccountantPagesCounter,The method has 8 parameters.
Long Parameter List,Shayan.Data,ChequeReception,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityModel.Designer.cs,CreateChequeReception,The method has 10 parameters.
Long Parameter List,Shayan.Data,DocumentStickyNote,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityModel.Designer.cs,CreateDocumentStickyNote,The method has 5 parameters.
Long Parameter List,Shayan.Data,Employee,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityModel.Designer.cs,CreateEmployee,The method has 10 parameters.
Long Parameter List,Shayan.Data,LabratoryService,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityModel.Designer.cs,CreateLabratoryService,The method has 12 parameters.
Long Parameter List,Shayan.Data,MoneyReception,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityModel.Designer.cs,CreateMoneyReception,The method has 5 parameters.
Long Parameter List,Shayan.Data,Patient,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityModel.Designer.cs,CreatePatient,The method has 20 parameters.
Long Parameter List,Shayan.Data,PatientDocument,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityModel.Designer.cs,CreatePatientDocument,The method has 5 parameters.
Long Parameter List,Shayan.Data,ReceptionDocument,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityModel.Designer.cs,CreateReceptionDocument,The method has 8 parameters.
Long Parameter List,Shayan.Data,Role,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityModel.Designer.cs,CreateRole,The method has 38 parameters.
Long Parameter List,Shayan.Data,Timming,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityModel.Designer.cs,CreateTimming,The method has 5 parameters.
Long Parameter List,Shayan.Data,UserSettings,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityModel.Designer.cs,CreateUserSettings,The method has 7 parameters.
Long Parameter List,Shayan.Data,Visit,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityModel.Designer.cs,CreateVisit,The method has 7 parameters.
Long Parameter List,Shayan.Data,VisitService,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityModel.Designer.cs,CreateVisitService,The method has 7 parameters.
Long Parameter List,Shayan.Data,VisitServiceInsurance,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityModel.Designer.cs,CreateVisitServiceInsurance,The method has 6 parameters.
Long Statement,Shayan.Data,DataLayer,C:\repos\Ashna_Shayan-Dental\ShayanData\DataLayer(shabnam).cs,GetPatientsPhone,The length of the statement  "		p = context.ObjectStateManager.GetObjectStateEntries (EntityState.Added | EntityState.Modified | EntityState.Unchanged).Select (e => e.Entity).OfType<Patient> ().ToArray (); " is 173.
Long Statement,Shayan.Data,DataLayer,C:\repos\Ashna_Shayan-Dental\ShayanData\DataLayer(shabnam).cs,getLabServices,The length of the statement  "		return context.ObjectStateManager.GetObjectStateEntries (EntityState.Added | EntityState.Modified | EntityState.Unchanged).Select (e => e.Entity).OfType<LabratoryService> ().ToArray (); " is 185.
Long Statement,Shayan.Data,DataLayer,C:\repos\Ashna_Shayan-Dental\ShayanData\DataLayer(shabnam).cs,isInRange,The length of the statement  "		return DayOfWeek1 == DayOfWeek2 && ((from1.TimeOfDay < from2.TimeOfDay && to1.TimeOfDay > from2.TimeOfDay) || (from1.TimeOfDay < to2.TimeOfDay && to1.TimeOfDay > to2.TimeOfDay)); " is 178.
Long Statement,Shayan.Data,DataLayer,C:\repos\Ashna_Shayan-Dental\ShayanData\DataLayer(shabnam).cs,isInRange,The length of the statement  "		return DayOfWeek1 == DayOfWeek2 && ((from1.TimeOfDay <= from2.TimeOfDay && to1.TimeOfDay >= from2.TimeOfDay) && (from1.TimeOfDay <= to2.TimeOfDay && to1.TimeOfDay >= to2.TimeOfDay)); " is 182.
Long Statement,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,Validate,The length of the statement  "		Methods.ShowStandardMsgBox (FormMessageType.Error' RscError.ValidationTitle' "لطفا پرداخت کننده مورد نظر خود را مشخص بفرمایید."); " is 129.
Long Statement,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,Validate,The length of the statement  "		Methods.ShowStandardMsgBox (FormMessageType.Error' RscError.ValidationTitle' "لطفا فهرستی از دریافتی ها را مشخص بفرمایید."); " is 124.
Long Statement,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,Validate,The length of the statement  "		Methods.ShowStandardMsgBox (FormMessageType.Error' RscError.ValidationTitle' "لطفا تاریخ صحیحی را برای برگه مشخص بفرمایید."); " is 125.
Long Statement,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,Validate,The length of the statement  "		Methods.ShowStandardMsgBox (FormMessageType.Error' RscError.ValidationTitle' "لطفا تاریخ وصول را به دقت مشخص بفرمایید."); " is 121.
Long Statement,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,Validate,The length of the statement  "		Methods.ShowStandardMsgBox (FormMessageType.Error' RscError.ValidationTitle' "لطفا تاریخ صحیحی را برای دریافت چک مشخص بفرمایید."); " is 130.
Long Statement,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,Validate,The length of the statement  "	if (!(chequeReception.Status == (int)ChequeStatus.Invalid || chequeReception.Status == (int)ChequeStatus.Returned) && chequeReception.RecieverId == 0) { " is 152.
Long Statement,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,Validate,The length of the statement  "		Methods.ShowStandardMsgBox (FormMessageType.Error' RscError.ValidationTitle' "لطفا تاریخ صحیحی را برای دریافت نقدی مشخص بفرمایید."); " is 132.
Long Statement,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,Validate,The length of the statement  "		Methods.ShowStandardMsgBox (FormMessageType.Error' RscError.ValidationTitle' "لطفا دریافت کننده مورد نظر خود را مشخص بفرمایید."); " is 129.
Long Statement,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,Validate,The length of the statement  "		Methods.ShowStandardMsgBox (FormMessageType.Error' RscError.ValidationTitle' "لطفا فهرستی از پرداختی ها را مشخص بفرمایید."); " is 124.
Long Statement,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,Validate,The length of the statement  "		Methods.ShowStandardMsgBox (FormMessageType.Error' RscError.ValidationTitle' "لطفا تاریخ صحیحی را برای برگه مشخص بفرمایید."); " is 125.
Long Statement,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,Validate,The length of the statement  "		Methods.ShowStandardMsgBox (FormMessageType.Error' RscError.ValidationTitle' "لطفا تاریخ صحیحی را برای پرداخت نقدی مشخص بفرمایید."); " is 132.
Long Statement,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,Validate,The length of the statement  "		Methods.ShowStandardMsgBox (FormMessageType.Error' RscError.ValidationTitle' "لطفا تعداد برگه های دسته چک را مشخص بفرمایید."); " is 126.
Long Statement,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,Validate,The length of the statement  "		Methods.ShowStandardMsgBox (FormMessageType.Error' RscError.ValidationTitle' "لطفا حساب بانکی و سریال چک را به درستی و به دقت مشخص بفرمایید."); " is 143.
Long Statement,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,Validate,The length of the statement  "		Methods.ShowStandardMsgBox (FormMessageType.Error' RscError.ValidationTitle' "از برگه چک مشخص شده، پیش تر استفاده شده است."); " is 125.
Long Statement,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,Validate,The length of the statement  "		Methods.ShowStandardMsgBox (FormMessageType.Error' RscError.ValidationTitle' "لطفا تاریخ وصول را به دقت مشخص بفرمایید."); " is 121.
Long Statement,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,Validate,The length of the statement  "		Methods.ShowStandardMsgBox (FormMessageType.Error' RscError.ValidationTitle' "لطفا تاریخ صحیحی را برای پرداخت چک مشخص بفرمایید."); " is 130.
Long Statement,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,Validate,The length of the statement  "		Methods.ShowStandardMsgBox (FormMessageType.Error' RscError.ValidationTitle' "تنها می توانید حساب های معین و تفضیلی مشخص بفرمایید."); " is 133.
Long Statement,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,Validate,The length of the statement  "		Methods.ShowStandardMsgBox (FormMessageType.Error' RscError.ValidationTitle' "قبلا موجودیتی با این کد ساخته شده است. در وارد نمودن کد دقت کنید."); " is 146.
Magic Number,Shayan.Data,Bank,C:\repos\Ashna_Shayan-Dental\ShayanData\Database Models\Bank.cs,Bank,The following statement contains a magic number: _accountantEntity = new AccountantEntity () {  	Value = 0'  	PrefixCode = "100120"'  	Type = 3'  	Code = ""'  	IsReadOnly = true'  	Parent = 36  };  
Magic Number,Shayan.Data,Bank,C:\repos\Ashna_Shayan-Dental\ShayanData\Database Models\Bank.cs,Bank,The following statement contains a magic number: _accountantEntity = new AccountantEntity () {  	Value = 0'  	PrefixCode = "100120"'  	Type = 3'  	Code = ""'  	IsReadOnly = true'  	Parent = 36  };  
Magic Number,Shayan.Data,Bank,C:\repos\Ashna_Shayan-Dental\ShayanData\Database Models\Bank.cs,SetPart,The following statement contains a magic number: _accountantEntity.Name = string.Format ("{0}-{1}-{2}"' parts [0]' parts [1]' parts [2]);  
Magic Number,Shayan.Data,Bank,C:\repos\Ashna_Shayan-Dental\ShayanData\Database Models\Bank.cs,SetAccountNumber,The following statement contains a magic number: SetPart (2' value);  
Magic Number,Shayan.Data,Bank,C:\repos\Ashna_Shayan-Dental\ShayanData\Database Models\Bank.cs,GetAccountNumber,The following statement contains a magic number: return GetPart (2);  
Magic Number,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,ValidateInputLength,The following statement contains a magic number: if (inputType == InputType.Title && input.Length > 30) {  	return false;  }  else if (inputType == InputType.Name && input.Length > 30) {  	return false;  }  else if (inputType == InputType.Address && input.Length > 100) {  	return false;  }  else if (inputType == InputType.PhoneNumber && input.Length > 15) {  	return false;  }  else if (inputType == InputType.Description && input.Length > 256) {  	return false;  }  else if (inputType == InputType.Opinion && input.Length > 1000) {  	return false;  }  else if (inputType == InputType.Sms && input.Length > 600) {  	return false;  }  else if (inputType == InputType.Code && input.Length > 30) {  	return false;  }  
Magic Number,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,ValidateInputLength,The following statement contains a magic number: if (inputType == InputType.Title && input.Length > 30) {  	return false;  }  else if (inputType == InputType.Name && input.Length > 30) {  	return false;  }  else if (inputType == InputType.Address && input.Length > 100) {  	return false;  }  else if (inputType == InputType.PhoneNumber && input.Length > 15) {  	return false;  }  else if (inputType == InputType.Description && input.Length > 256) {  	return false;  }  else if (inputType == InputType.Opinion && input.Length > 1000) {  	return false;  }  else if (inputType == InputType.Sms && input.Length > 600) {  	return false;  }  else if (inputType == InputType.Code && input.Length > 30) {  	return false;  }  
Magic Number,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,ValidateInputLength,The following statement contains a magic number: if (inputType == InputType.Title && input.Length > 30) {  	return false;  }  else if (inputType == InputType.Name && input.Length > 30) {  	return false;  }  else if (inputType == InputType.Address && input.Length > 100) {  	return false;  }  else if (inputType == InputType.PhoneNumber && input.Length > 15) {  	return false;  }  else if (inputType == InputType.Description && input.Length > 256) {  	return false;  }  else if (inputType == InputType.Opinion && input.Length > 1000) {  	return false;  }  else if (inputType == InputType.Sms && input.Length > 600) {  	return false;  }  else if (inputType == InputType.Code && input.Length > 30) {  	return false;  }  
Magic Number,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,ValidateInputLength,The following statement contains a magic number: if (inputType == InputType.Title && input.Length > 30) {  	return false;  }  else if (inputType == InputType.Name && input.Length > 30) {  	return false;  }  else if (inputType == InputType.Address && input.Length > 100) {  	return false;  }  else if (inputType == InputType.PhoneNumber && input.Length > 15) {  	return false;  }  else if (inputType == InputType.Description && input.Length > 256) {  	return false;  }  else if (inputType == InputType.Opinion && input.Length > 1000) {  	return false;  }  else if (inputType == InputType.Sms && input.Length > 600) {  	return false;  }  else if (inputType == InputType.Code && input.Length > 30) {  	return false;  }  
Magic Number,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,ValidateInputLength,The following statement contains a magic number: if (inputType == InputType.Title && input.Length > 30) {  	return false;  }  else if (inputType == InputType.Name && input.Length > 30) {  	return false;  }  else if (inputType == InputType.Address && input.Length > 100) {  	return false;  }  else if (inputType == InputType.PhoneNumber && input.Length > 15) {  	return false;  }  else if (inputType == InputType.Description && input.Length > 256) {  	return false;  }  else if (inputType == InputType.Opinion && input.Length > 1000) {  	return false;  }  else if (inputType == InputType.Sms && input.Length > 600) {  	return false;  }  else if (inputType == InputType.Code && input.Length > 30) {  	return false;  }  
Magic Number,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,ValidateInputLength,The following statement contains a magic number: if (inputType == InputType.Title && input.Length > 30) {  	return false;  }  else if (inputType == InputType.Name && input.Length > 30) {  	return false;  }  else if (inputType == InputType.Address && input.Length > 100) {  	return false;  }  else if (inputType == InputType.PhoneNumber && input.Length > 15) {  	return false;  }  else if (inputType == InputType.Description && input.Length > 256) {  	return false;  }  else if (inputType == InputType.Opinion && input.Length > 1000) {  	return false;  }  else if (inputType == InputType.Sms && input.Length > 600) {  	return false;  }  else if (inputType == InputType.Code && input.Length > 30) {  	return false;  }  
Magic Number,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,ValidateInputLength,The following statement contains a magic number: if (inputType == InputType.Title && input.Length > 30) {  	return false;  }  else if (inputType == InputType.Name && input.Length > 30) {  	return false;  }  else if (inputType == InputType.Address && input.Length > 100) {  	return false;  }  else if (inputType == InputType.PhoneNumber && input.Length > 15) {  	return false;  }  else if (inputType == InputType.Description && input.Length > 256) {  	return false;  }  else if (inputType == InputType.Opinion && input.Length > 1000) {  	return false;  }  else if (inputType == InputType.Sms && input.Length > 600) {  	return false;  }  else if (inputType == InputType.Code && input.Length > 30) {  	return false;  }  
Magic Number,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,ValidateInputLength,The following statement contains a magic number: if (inputType == InputType.Title && input.Length > 30) {  	return false;  }  else if (inputType == InputType.Name && input.Length > 30) {  	return false;  }  else if (inputType == InputType.Address && input.Length > 100) {  	return false;  }  else if (inputType == InputType.PhoneNumber && input.Length > 15) {  	return false;  }  else if (inputType == InputType.Description && input.Length > 256) {  	return false;  }  else if (inputType == InputType.Opinion && input.Length > 1000) {  	return false;  }  else if (inputType == InputType.Sms && input.Length > 600) {  	return false;  }  else if (inputType == InputType.Code && input.Length > 30) {  	return false;  }  
Magic Number,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,ValidateInputLength,The following statement contains a magic number: if (inputType == InputType.Name && input.Length > 30) {  	return false;  }  else if (inputType == InputType.Address && input.Length > 100) {  	return false;  }  else if (inputType == InputType.PhoneNumber && input.Length > 15) {  	return false;  }  else if (inputType == InputType.Description && input.Length > 256) {  	return false;  }  else if (inputType == InputType.Opinion && input.Length > 1000) {  	return false;  }  else if (inputType == InputType.Sms && input.Length > 600) {  	return false;  }  else if (inputType == InputType.Code && input.Length > 30) {  	return false;  }  
Magic Number,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,ValidateInputLength,The following statement contains a magic number: if (inputType == InputType.Name && input.Length > 30) {  	return false;  }  else if (inputType == InputType.Address && input.Length > 100) {  	return false;  }  else if (inputType == InputType.PhoneNumber && input.Length > 15) {  	return false;  }  else if (inputType == InputType.Description && input.Length > 256) {  	return false;  }  else if (inputType == InputType.Opinion && input.Length > 1000) {  	return false;  }  else if (inputType == InputType.Sms && input.Length > 600) {  	return false;  }  else if (inputType == InputType.Code && input.Length > 30) {  	return false;  }  
Magic Number,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,ValidateInputLength,The following statement contains a magic number: if (inputType == InputType.Name && input.Length > 30) {  	return false;  }  else if (inputType == InputType.Address && input.Length > 100) {  	return false;  }  else if (inputType == InputType.PhoneNumber && input.Length > 15) {  	return false;  }  else if (inputType == InputType.Description && input.Length > 256) {  	return false;  }  else if (inputType == InputType.Opinion && input.Length > 1000) {  	return false;  }  else if (inputType == InputType.Sms && input.Length > 600) {  	return false;  }  else if (inputType == InputType.Code && input.Length > 30) {  	return false;  }  
Magic Number,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,ValidateInputLength,The following statement contains a magic number: if (inputType == InputType.Name && input.Length > 30) {  	return false;  }  else if (inputType == InputType.Address && input.Length > 100) {  	return false;  }  else if (inputType == InputType.PhoneNumber && input.Length > 15) {  	return false;  }  else if (inputType == InputType.Description && input.Length > 256) {  	return false;  }  else if (inputType == InputType.Opinion && input.Length > 1000) {  	return false;  }  else if (inputType == InputType.Sms && input.Length > 600) {  	return false;  }  else if (inputType == InputType.Code && input.Length > 30) {  	return false;  }  
Magic Number,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,ValidateInputLength,The following statement contains a magic number: if (inputType == InputType.Name && input.Length > 30) {  	return false;  }  else if (inputType == InputType.Address && input.Length > 100) {  	return false;  }  else if (inputType == InputType.PhoneNumber && input.Length > 15) {  	return false;  }  else if (inputType == InputType.Description && input.Length > 256) {  	return false;  }  else if (inputType == InputType.Opinion && input.Length > 1000) {  	return false;  }  else if (inputType == InputType.Sms && input.Length > 600) {  	return false;  }  else if (inputType == InputType.Code && input.Length > 30) {  	return false;  }  
Magic Number,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,ValidateInputLength,The following statement contains a magic number: if (inputType == InputType.Name && input.Length > 30) {  	return false;  }  else if (inputType == InputType.Address && input.Length > 100) {  	return false;  }  else if (inputType == InputType.PhoneNumber && input.Length > 15) {  	return false;  }  else if (inputType == InputType.Description && input.Length > 256) {  	return false;  }  else if (inputType == InputType.Opinion && input.Length > 1000) {  	return false;  }  else if (inputType == InputType.Sms && input.Length > 600) {  	return false;  }  else if (inputType == InputType.Code && input.Length > 30) {  	return false;  }  
Magic Number,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,ValidateInputLength,The following statement contains a magic number: if (inputType == InputType.Name && input.Length > 30) {  	return false;  }  else if (inputType == InputType.Address && input.Length > 100) {  	return false;  }  else if (inputType == InputType.PhoneNumber && input.Length > 15) {  	return false;  }  else if (inputType == InputType.Description && input.Length > 256) {  	return false;  }  else if (inputType == InputType.Opinion && input.Length > 1000) {  	return false;  }  else if (inputType == InputType.Sms && input.Length > 600) {  	return false;  }  else if (inputType == InputType.Code && input.Length > 30) {  	return false;  }  
Magic Number,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,ValidateInputLength,The following statement contains a magic number: if (inputType == InputType.Address && input.Length > 100) {  	return false;  }  else if (inputType == InputType.PhoneNumber && input.Length > 15) {  	return false;  }  else if (inputType == InputType.Description && input.Length > 256) {  	return false;  }  else if (inputType == InputType.Opinion && input.Length > 1000) {  	return false;  }  else if (inputType == InputType.Sms && input.Length > 600) {  	return false;  }  else if (inputType == InputType.Code && input.Length > 30) {  	return false;  }  
Magic Number,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,ValidateInputLength,The following statement contains a magic number: if (inputType == InputType.Address && input.Length > 100) {  	return false;  }  else if (inputType == InputType.PhoneNumber && input.Length > 15) {  	return false;  }  else if (inputType == InputType.Description && input.Length > 256) {  	return false;  }  else if (inputType == InputType.Opinion && input.Length > 1000) {  	return false;  }  else if (inputType == InputType.Sms && input.Length > 600) {  	return false;  }  else if (inputType == InputType.Code && input.Length > 30) {  	return false;  }  
Magic Number,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,ValidateInputLength,The following statement contains a magic number: if (inputType == InputType.Address && input.Length > 100) {  	return false;  }  else if (inputType == InputType.PhoneNumber && input.Length > 15) {  	return false;  }  else if (inputType == InputType.Description && input.Length > 256) {  	return false;  }  else if (inputType == InputType.Opinion && input.Length > 1000) {  	return false;  }  else if (inputType == InputType.Sms && input.Length > 600) {  	return false;  }  else if (inputType == InputType.Code && input.Length > 30) {  	return false;  }  
Magic Number,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,ValidateInputLength,The following statement contains a magic number: if (inputType == InputType.Address && input.Length > 100) {  	return false;  }  else if (inputType == InputType.PhoneNumber && input.Length > 15) {  	return false;  }  else if (inputType == InputType.Description && input.Length > 256) {  	return false;  }  else if (inputType == InputType.Opinion && input.Length > 1000) {  	return false;  }  else if (inputType == InputType.Sms && input.Length > 600) {  	return false;  }  else if (inputType == InputType.Code && input.Length > 30) {  	return false;  }  
Magic Number,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,ValidateInputLength,The following statement contains a magic number: if (inputType == InputType.Address && input.Length > 100) {  	return false;  }  else if (inputType == InputType.PhoneNumber && input.Length > 15) {  	return false;  }  else if (inputType == InputType.Description && input.Length > 256) {  	return false;  }  else if (inputType == InputType.Opinion && input.Length > 1000) {  	return false;  }  else if (inputType == InputType.Sms && input.Length > 600) {  	return false;  }  else if (inputType == InputType.Code && input.Length > 30) {  	return false;  }  
Magic Number,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,ValidateInputLength,The following statement contains a magic number: if (inputType == InputType.Address && input.Length > 100) {  	return false;  }  else if (inputType == InputType.PhoneNumber && input.Length > 15) {  	return false;  }  else if (inputType == InputType.Description && input.Length > 256) {  	return false;  }  else if (inputType == InputType.Opinion && input.Length > 1000) {  	return false;  }  else if (inputType == InputType.Sms && input.Length > 600) {  	return false;  }  else if (inputType == InputType.Code && input.Length > 30) {  	return false;  }  
Magic Number,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,ValidateInputLength,The following statement contains a magic number: if (inputType == InputType.PhoneNumber && input.Length > 15) {  	return false;  }  else if (inputType == InputType.Description && input.Length > 256) {  	return false;  }  else if (inputType == InputType.Opinion && input.Length > 1000) {  	return false;  }  else if (inputType == InputType.Sms && input.Length > 600) {  	return false;  }  else if (inputType == InputType.Code && input.Length > 30) {  	return false;  }  
Magic Number,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,ValidateInputLength,The following statement contains a magic number: if (inputType == InputType.PhoneNumber && input.Length > 15) {  	return false;  }  else if (inputType == InputType.Description && input.Length > 256) {  	return false;  }  else if (inputType == InputType.Opinion && input.Length > 1000) {  	return false;  }  else if (inputType == InputType.Sms && input.Length > 600) {  	return false;  }  else if (inputType == InputType.Code && input.Length > 30) {  	return false;  }  
Magic Number,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,ValidateInputLength,The following statement contains a magic number: if (inputType == InputType.PhoneNumber && input.Length > 15) {  	return false;  }  else if (inputType == InputType.Description && input.Length > 256) {  	return false;  }  else if (inputType == InputType.Opinion && input.Length > 1000) {  	return false;  }  else if (inputType == InputType.Sms && input.Length > 600) {  	return false;  }  else if (inputType == InputType.Code && input.Length > 30) {  	return false;  }  
Magic Number,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,ValidateInputLength,The following statement contains a magic number: if (inputType == InputType.PhoneNumber && input.Length > 15) {  	return false;  }  else if (inputType == InputType.Description && input.Length > 256) {  	return false;  }  else if (inputType == InputType.Opinion && input.Length > 1000) {  	return false;  }  else if (inputType == InputType.Sms && input.Length > 600) {  	return false;  }  else if (inputType == InputType.Code && input.Length > 30) {  	return false;  }  
Magic Number,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,ValidateInputLength,The following statement contains a magic number: if (inputType == InputType.PhoneNumber && input.Length > 15) {  	return false;  }  else if (inputType == InputType.Description && input.Length > 256) {  	return false;  }  else if (inputType == InputType.Opinion && input.Length > 1000) {  	return false;  }  else if (inputType == InputType.Sms && input.Length > 600) {  	return false;  }  else if (inputType == InputType.Code && input.Length > 30) {  	return false;  }  
Magic Number,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,ValidateInputLength,The following statement contains a magic number: if (inputType == InputType.Description && input.Length > 256) {  	return false;  }  else if (inputType == InputType.Opinion && input.Length > 1000) {  	return false;  }  else if (inputType == InputType.Sms && input.Length > 600) {  	return false;  }  else if (inputType == InputType.Code && input.Length > 30) {  	return false;  }  
Magic Number,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,ValidateInputLength,The following statement contains a magic number: if (inputType == InputType.Description && input.Length > 256) {  	return false;  }  else if (inputType == InputType.Opinion && input.Length > 1000) {  	return false;  }  else if (inputType == InputType.Sms && input.Length > 600) {  	return false;  }  else if (inputType == InputType.Code && input.Length > 30) {  	return false;  }  
Magic Number,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,ValidateInputLength,The following statement contains a magic number: if (inputType == InputType.Description && input.Length > 256) {  	return false;  }  else if (inputType == InputType.Opinion && input.Length > 1000) {  	return false;  }  else if (inputType == InputType.Sms && input.Length > 600) {  	return false;  }  else if (inputType == InputType.Code && input.Length > 30) {  	return false;  }  
Magic Number,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,ValidateInputLength,The following statement contains a magic number: if (inputType == InputType.Description && input.Length > 256) {  	return false;  }  else if (inputType == InputType.Opinion && input.Length > 1000) {  	return false;  }  else if (inputType == InputType.Sms && input.Length > 600) {  	return false;  }  else if (inputType == InputType.Code && input.Length > 30) {  	return false;  }  
Magic Number,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,ValidateInputLength,The following statement contains a magic number: if (inputType == InputType.Opinion && input.Length > 1000) {  	return false;  }  else if (inputType == InputType.Sms && input.Length > 600) {  	return false;  }  else if (inputType == InputType.Code && input.Length > 30) {  	return false;  }  
Magic Number,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,ValidateInputLength,The following statement contains a magic number: if (inputType == InputType.Opinion && input.Length > 1000) {  	return false;  }  else if (inputType == InputType.Sms && input.Length > 600) {  	return false;  }  else if (inputType == InputType.Code && input.Length > 30) {  	return false;  }  
Magic Number,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,ValidateInputLength,The following statement contains a magic number: if (inputType == InputType.Opinion && input.Length > 1000) {  	return false;  }  else if (inputType == InputType.Sms && input.Length > 600) {  	return false;  }  else if (inputType == InputType.Code && input.Length > 30) {  	return false;  }  
Magic Number,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,ValidateInputLength,The following statement contains a magic number: if (inputType == InputType.Sms && input.Length > 600) {  	return false;  }  else if (inputType == InputType.Code && input.Length > 30) {  	return false;  }  
Magic Number,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,ValidateInputLength,The following statement contains a magic number: if (inputType == InputType.Sms && input.Length > 600) {  	return false;  }  else if (inputType == InputType.Code && input.Length > 30) {  	return false;  }  
Magic Number,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,ValidateInputLength,The following statement contains a magic number: if (inputType == InputType.Code && input.Length > 30) {  	return false;  }  
Magic Number,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,ValidateInputType,The following statement contains a magic number: if (inputType == InputType.PhoneNumber || inputType == InputType.Code) {  	Regex regexNotNumber = new Regex ("[^0-9]");  	Regex regexPhoneNumber = new Regex ("[0-9]*");  	return !regexNotNumber.IsMatch (input) && regexPhoneNumber.IsMatch (input);  }  else if (inputType == InputType.Percent) {  	if (input.StartsWith ("00"))  		return false;  	double output = 0;  	bool result = double.TryParse (input' out output);  	if (result) {  		result = output <= 100 && output >= 0;  	}  	return result;  }  else if (inputType == InputType.Double) {  	if (input.StartsWith ("00"))  		return false;  	double output = 0;  	bool result = double.TryParse (input' out output);  	if (result) {  		result = output >= 0;  	}  	return result;  }  else if (inputType == InputType.Integer) {  	if (input.StartsWith ("00"))  		return false;  	int output = 0;  	bool result = int.TryParse (input' out output);  	if (result) {  		result = output >= 0;  	}  	return result;  }  
Magic Number,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,ValidateInputType,The following statement contains a magic number: if (inputType == InputType.Percent) {  	if (input.StartsWith ("00"))  		return false;  	double output = 0;  	bool result = double.TryParse (input' out output);  	if (result) {  		result = output <= 100 && output >= 0;  	}  	return result;  }  else if (inputType == InputType.Double) {  	if (input.StartsWith ("00"))  		return false;  	double output = 0;  	bool result = double.TryParse (input' out output);  	if (result) {  		result = output >= 0;  	}  	return result;  }  else if (inputType == InputType.Integer) {  	if (input.StartsWith ("00"))  		return false;  	int output = 0;  	bool result = int.TryParse (input' out output);  	if (result) {  		result = output >= 0;  	}  	return result;  }  
Magic Number,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,ValidateInputType,The following statement contains a magic number: if (result) {  	result = output <= 100 && output >= 0;  }  
Magic Number,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,ValidateInputType,The following statement contains a magic number: result = output <= 100 && output >= 0;  
Magic Number,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,Validate,The following statement contains a magic number: if (receptionDocument.Date.Year > 2020 || receptionDocument.Date.Year < 2000) {  	Methods.ShowStandardMsgBox (FormMessageType.Error' RscError.ValidationTitle' "لطفا تاریخ صحیحی را برای برگه مشخص بفرمایید.");  	return false;  }  
Magic Number,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,Validate,The following statement contains a magic number: if (receptionDocument.Date.Year > 2020 || receptionDocument.Date.Year < 2000) {  	Methods.ShowStandardMsgBox (FormMessageType.Error' RscError.ValidationTitle' "لطفا تاریخ صحیحی را برای برگه مشخص بفرمایید.");  	return false;  }  
Magic Number,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,Validate,The following statement contains a magic number: if (chequeReception.DueDate.Year > 2020 || chequeReception.DueDate.Year < 2000) {  	Methods.ShowStandardMsgBox (FormMessageType.Error' RscError.ValidationTitle' "لطفا تاریخ وصول را به دقت مشخص بفرمایید.");  	return false;  }  
Magic Number,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,Validate,The following statement contains a magic number: if (chequeReception.DueDate.Year > 2020 || chequeReception.DueDate.Year < 2000) {  	Methods.ShowStandardMsgBox (FormMessageType.Error' RscError.ValidationTitle' "لطفا تاریخ وصول را به دقت مشخص بفرمایید.");  	return false;  }  
Magic Number,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,Validate,The following statement contains a magic number: if (chequeReception.RecieveDate.Year > 2020 || chequeReception.RecieveDate.Year < 2000) {  	Methods.ShowStandardMsgBox (FormMessageType.Error' RscError.ValidationTitle' "لطفا تاریخ صحیحی را برای دریافت چک مشخص بفرمایید.");  	return false;  }  
Magic Number,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,Validate,The following statement contains a magic number: if (chequeReception.RecieveDate.Year > 2020 || chequeReception.RecieveDate.Year < 2000) {  	Methods.ShowStandardMsgBox (FormMessageType.Error' RscError.ValidationTitle' "لطفا تاریخ صحیحی را برای دریافت چک مشخص بفرمایید.");  	return false;  }  
Magic Number,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,Validate,The following statement contains a magic number: if (moneyReception.Date.Year > 2020 || moneyReception.Date.Year < 2000) {  	Methods.ShowStandardMsgBox (FormMessageType.Error' RscError.ValidationTitle' "لطفا تاریخ صحیحی را برای دریافت نقدی مشخص بفرمایید.");  	return false;  }  
Magic Number,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,Validate,The following statement contains a magic number: if (moneyReception.Date.Year > 2020 || moneyReception.Date.Year < 2000) {  	Methods.ShowStandardMsgBox (FormMessageType.Error' RscError.ValidationTitle' "لطفا تاریخ صحیحی را برای دریافت نقدی مشخص بفرمایید.");  	return false;  }  
Magic Number,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,Validate,The following statement contains a magic number: if (paymentDocument.Date.Year > 2020 || paymentDocument.Date.Year < 2000) {  	Methods.ShowStandardMsgBox (FormMessageType.Error' RscError.ValidationTitle' "لطفا تاریخ صحیحی را برای برگه مشخص بفرمایید.");  	return false;  }  
Magic Number,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,Validate,The following statement contains a magic number: if (paymentDocument.Date.Year > 2020 || paymentDocument.Date.Year < 2000) {  	Methods.ShowStandardMsgBox (FormMessageType.Error' RscError.ValidationTitle' "لطفا تاریخ صحیحی را برای برگه مشخص بفرمایید.");  	return false;  }  
Magic Number,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,Validate,The following statement contains a magic number: if (moneyPayment.Date.Year > 2020 || moneyPayment.Date.Year < 2000) {  	Methods.ShowStandardMsgBox (FormMessageType.Error' RscError.ValidationTitle' "لطفا تاریخ صحیحی را برای پرداخت نقدی مشخص بفرمایید.");  	return false;  }  
Magic Number,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,Validate,The following statement contains a magic number: if (moneyPayment.Date.Year > 2020 || moneyPayment.Date.Year < 2000) {  	Methods.ShowStandardMsgBox (FormMessageType.Error' RscError.ValidationTitle' "لطفا تاریخ صحیحی را برای پرداخت نقدی مشخص بفرمایید.");  	return false;  }  
Magic Number,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,Validate,The following statement contains a magic number: if (chequePayment.DueDate.Year > 2020 || chequePayment.DueDate.Year < 2000) {  	Methods.ShowStandardMsgBox (FormMessageType.Error' RscError.ValidationTitle' "لطفا تاریخ وصول را به دقت مشخص بفرمایید.");  	return false;  }  
Magic Number,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,Validate,The following statement contains a magic number: if (chequePayment.DueDate.Year > 2020 || chequePayment.DueDate.Year < 2000) {  	Methods.ShowStandardMsgBox (FormMessageType.Error' RscError.ValidationTitle' "لطفا تاریخ وصول را به دقت مشخص بفرمایید.");  	return false;  }  
Magic Number,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,Validate,The following statement contains a magic number: if (chequePayment.PayDate.Year > 2020 || chequePayment.PayDate.Year < 2000) {  	Methods.ShowStandardMsgBox (FormMessageType.Error' RscError.ValidationTitle' "لطفا تاریخ صحیحی را برای پرداخت چک مشخص بفرمایید.");  	return false;  }  
Magic Number,Shayan.Data,EntityValidation,C:\repos\Ashna_Shayan-Dental\ShayanData\EntityValidation.cs,Validate,The following statement contains a magic number: if (chequePayment.PayDate.Year > 2020 || chequePayment.PayDate.Year < 2000) {  	Methods.ShowStandardMsgBox (FormMessageType.Error' RscError.ValidationTitle' "لطفا تاریخ صحیحی را برای پرداخت چک مشخص بفرمایید.");  	return false;  }  
Magic Number,Shayan.Data,AccessControl,C:\repos\Ashna_Shayan-Dental\ShayanData\Database Models\AccessModel\AccessControl.cs,SetAccessSubType,The following statement contains a magic number: AccessMask = (intmax & AccessMask) + ((int)accessSubType << 3);  
