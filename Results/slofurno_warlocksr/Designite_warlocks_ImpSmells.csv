Implementation smell,Namespace,Class,File,Method,Description
Complex Method,warlocks.Game,WGame,C:\repos\slofurno_warlocksr\warlocks\Game\Game.cs,ProcessCommand,Cyclomatic complexity of the method is 8
Complex Method,warlocks.Game,Ninjarope,C:\repos\slofurno_warlocksr\warlocks\Game\Ninjarope.cs,process,Cyclomatic complexity of the method is 8
Complex Method,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,blowUpObject,Cyclomatic complexity of the method is 8
Complex Method,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,Process,Cyclomatic complexity of the method is 15
Complex Method,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processPhysics,Cyclomatic complexity of the method is 21
Complex Method,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processMovement,Cyclomatic complexity of the method is 16
Complex Method,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,Update,Cyclomatic complexity of the method is 16
Long Parameter List,warlocks.Game,BMAP,C:\repos\slofurno_warlocksr\warlocks\Game\Bitmap.cs,processBitmap,The method has 5 parameters.
Long Parameter List,warlocks.Game,WGame,C:\repos\slofurno_warlocksr\warlocks\Game\Game.cs,ProcessCommand,The method has 7 parameters.
Long Parameter List,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,checkForSpecWormHit,The method has 5 parameters.
Long Statement,warlocks.Game,BMAP,C:\repos\slofurno_warlocksr\warlocks\Game\Bitmap.cs,processBitmap,The length of the statement  "	var palette = _paletteLookup.Keys.Select (x => new Tuple<int' Color> (_paletteLookup [x]' x)).OrderBy (x => x.Item1).Select (x => x.Item2).ToArray (); " is 150.
Long Statement,warlocks.Game,BMAP,C:\repos\slofurno_warlocksr\warlocks\Game\Bitmap.cs,processBitmap,The length of the statement  "	_palette = "[" + String.Join ("'"' palette.Select (x => "{\"r\":" + x.R + "'\"g\":" + x.G + "'\"b\":" + x.B + "'\"a\":" + x.A + "}").ToArray ()) + "]"; " is 151.
Long Statement,warlocks.Game,Command,C:\repos\slofurno_warlocksr\warlocks\Game\Command.cs,TryParse,The length of the statement  "	if (s.Length == 3 && double.TryParse (s [0]' out x) && double.TryParse (s [1]' out y) && int.TryParse (s [2]' out buttons)) { " is 125.
Long Statement,warlocks.Game,WGame,C:\repos\slofurno_warlocksr\warlocks\Game\Game.cs,ProcessCommand,The length of the statement  "		var greet = "{\"id\":" + ws.Id + "'\"width\":" + leveldata.width + "'\"height\":" + leveldata.height + "'\"pixels\":" + leveldata.json + "'\"palette\":" + leveldata._palette + "}"; " is 180.
Long Statement,warlocks.Game,WGame,C:\repos\slofurno_warlocksr\warlocks\Game\Game.cs,ProcessCommand,The length of the statement  "	var update = "{\"worms\":" + worms + "'\"blood\":" + blood + "'\"objects\":" + objects + "'\"pixels\":" + pixels + "'\"splinters\":" + splinters + "}"; " is 151.
Long Statement,warlocks.Game,Ninjarope,C:\repos\slofurno_warlocksr\warlocks\Game\Ninjarope.cs,process,The length of the statement  "		if (ix <= 0 || ix >= game.leveldata.width - 1 || iy <= 0 || iy >= game.leveldata.height - 1 || game.CheckLocation (ix' iy)) { " is 125.
Long Statement,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,blowUpObject,The length of the statement  "		if (w.explosionRadius * w.explosionRadius > (worm.position.X - this.x) * (worm.position.X - this.x) + (worm.position.Y - this.y) * (worm.position.Y - this.y)) { " is 160.
Long Statement,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,ToJson,The length of the statement  "	return "{\"position\":" + this.position.ToJson () + "'\"ninjarope\":" + this.ninjarope.ToJson () + "'\"view\":" + this.view.ToJson () + "'\"id\":" + this.id + "}"; " is 163.
Long Statement,warlocks,Program,C:\repos\slofurno_warlocksr\warlocks\Program.cs,HandleConnection,The length of the statement  "	writer.Write ("HTTP/1.1 101 Switching Protocols\r\nUpgrade: websocket\r\nConnection: Upgrade\r\nSec-WebSocket-Accept: " + challengeresponse + "\r\n\r\n"); " is 154.
Long Statement,warlocks.Socket,WebsocketClient,C:\repos\slofurno_warlocksr\warlocks\Socket\WebsocketClient.cs,UpgradeAsync,The length of the statement  "	writer.Write ("HTTP/1.1 101 Switching Protocols\r\nUpgrade: websocket\r\nConnection: Upgrade\r\nSec-WebSocket-Accept: " + challengeresponse + "\r\n\r\n"); " is 154.
Complex Conditional,warlocks.Game,BMAP,C:\repos\slofurno_warlocksr\warlocks\Game\Bitmap.cs,getPixel,The conditional expression  "x < 0 || y < 0 || x >= _width || y >= _height"  is complex.
Complex Conditional,warlocks.Game,BMAP,C:\repos\slofurno_warlocksr\warlocks\Game\Bitmap.cs,setPixel,The conditional expression  "x < 0 || y < 0 || x >= _width || y >= _height"  is complex.
Complex Conditional,warlocks.Game,BMAP,C:\repos\slofurno_warlocksr\warlocks\Game\Bitmap.cs,inside,The conditional expression  "x < 0 || y < 0 || x >= _width || y >= _height"  is complex.
Complex Conditional,warlocks.Game,Command,C:\repos\slofurno_warlocksr\warlocks\Game\Command.cs,TryParse,The conditional expression  "s.Length == 3 && double.TryParse (s [0]' out x) && double.TryParse (s [1]' out y) && int.TryParse (s [2]' out buttons)"  is complex.
Complex Conditional,warlocks.Game,Ninjarope,C:\repos\slofurno_warlocksr\warlocks\Game\Ninjarope.cs,process,The conditional expression  "ix <= 0 || ix >= game.leveldata.width - 1 || iy <= 0 || iy >= game.leveldata.height - 1 || game.CheckLocation (ix' iy)"  is complex.
Magic Number,warlocks.Game,BMAP,C:\repos\slofurno_warlocksr\warlocks\Game\Bitmap.cs,processBitmap,The following statement contains a magic number: for (int j = 0; j < height; j++) {  	for (int i = 0; i < width; i++) {  		pixelcolor = bitmap.GetPixel (i' j);  		if (!_paletteLookup.TryGetValue (pixelcolor' out key)) {  			_paletteLookup.Add (pixelcolor' _colorCount);  			key = _colorCount;  			_colorCount++;  		}  		_colorData [j * width + i] = key;  		if (pixelcolor.A == 0) {  			_levelData [j * width + i] = 0;  		}  		else if (pixelcolor.A == 255) {  			_levelData [j * width + i] = PIXEL.rock;  		}  		else {  			_levelData [j * width + i] = PIXEL.dirt;  		}  		counter++;  	}  }  
Magic Number,warlocks.Game,BMAP,C:\repos\slofurno_warlocksr\warlocks\Game\Bitmap.cs,processBitmap,The following statement contains a magic number: for (int i = 0; i < width; i++) {  	pixelcolor = bitmap.GetPixel (i' j);  	if (!_paletteLookup.TryGetValue (pixelcolor' out key)) {  		_paletteLookup.Add (pixelcolor' _colorCount);  		key = _colorCount;  		_colorCount++;  	}  	_colorData [j * width + i] = key;  	if (pixelcolor.A == 0) {  		_levelData [j * width + i] = 0;  	}  	else if (pixelcolor.A == 255) {  		_levelData [j * width + i] = PIXEL.rock;  	}  	else {  		_levelData [j * width + i] = PIXEL.dirt;  	}  	counter++;  }  
Magic Number,warlocks.Game,BMAP,C:\repos\slofurno_warlocksr\warlocks\Game\Bitmap.cs,processBitmap,The following statement contains a magic number: if (pixelcolor.A == 0) {  	_levelData [j * width + i] = 0;  }  else if (pixelcolor.A == 255) {  	_levelData [j * width + i] = PIXEL.rock;  }  else {  	_levelData [j * width + i] = PIXEL.dirt;  }  
Magic Number,warlocks.Game,BMAP,C:\repos\slofurno_warlocksr\warlocks\Game\Bitmap.cs,processBitmap,The following statement contains a magic number: if (pixelcolor.A == 255) {  	_levelData [j * width + i] = PIXEL.rock;  }  else {  	_levelData [j * width + i] = PIXEL.dirt;  }  
Magic Number,warlocks.Game,Command,C:\repos\slofurno_warlocksr\warlocks\Game\Command.cs,TryParse,The following statement contains a magic number: if (s.Length == 3 && double.TryParse (s [0]' out x) && double.TryParse (s [1]' out y) && int.TryParse (s [2]' out buttons)) {  	var view = new Vector2 (x' y);  	var command = new Command () {  		Buttons = buttons'  		View = view  	};  	return new CommandResult () {  		Command = command'  		Ok = true  	};  }  else {  	return new CommandResult () {  		Command = null'  		Ok = false  	};  }  
Magic Number,warlocks.Game,Command,C:\repos\slofurno_warlocksr\warlocks\Game\Command.cs,TryParse,The following statement contains a magic number: if (s.Length == 3 && double.TryParse (s [0]' out x) && double.TryParse (s [1]' out y) && int.TryParse (s [2]' out buttons)) {  	var view = new Vector2 (x' y);  	var command = new Command () {  		Buttons = buttons'  		View = view  	};  	return new CommandResult () {  		Command = command'  		Ok = true  	};  }  else {  	return new CommandResult () {  		Command = null'  		Ok = false  	};  }  
Magic Number,warlocks.Game,WGame,C:\repos\slofurno_warlocksr\warlocks\Game\Game.cs,WGame,The following statement contains a magic number: _pixelBuffer = new List<Pixel>[32];  
Magic Number,warlocks.Game,WGame,C:\repos\slofurno_warlocksr\warlocks\Game\Game.cs,WGame,The following statement contains a magic number: _splinterBuffer = new List<SObject>[32];  
Magic Number,warlocks.Game,WGame,C:\repos\slofurno_warlocksr\warlocks\Game\Game.cs,WGame,The following statement contains a magic number: for (int i = 0; i < 32; i++) {  	_pixelBuffer [i] = new List<Pixel> ();  	_splinterBuffer [i] = new List<SObject> ();  }  
Magic Number,warlocks.Game,WGame,C:\repos\slofurno_warlocksr\warlocks\Game\Game.cs,ProcessCommand,The following statement contains a magic number: if ((frame - last) > 31) {  	missedPixels = leveldata._alldirtypixels;  }  else {  	for (var i = last; i < frame; i++) {  		missedPixels.AddRange (_pixelBuffer [i & 31]);  		missedSplinters.AddRange (_splinterBuffer [i & 31]);  	}  }  
Magic Number,warlocks.Game,WGame,C:\repos\slofurno_warlocksr\warlocks\Game\Game.cs,ProcessCommand,The following statement contains a magic number: if ((frame - last) > 31) {  	missedPixels = leveldata._alldirtypixels;  }  else {  	for (var i = last; i < frame; i++) {  		missedPixels.AddRange (_pixelBuffer [i & 31]);  		missedSplinters.AddRange (_splinterBuffer [i & 31]);  	}  }  
Magic Number,warlocks.Game,WGame,C:\repos\slofurno_warlocksr\warlocks\Game\Game.cs,ProcessCommand,The following statement contains a magic number: if ((frame - last) > 31) {  	missedPixels = leveldata._alldirtypixels;  }  else {  	for (var i = last; i < frame; i++) {  		missedPixels.AddRange (_pixelBuffer [i & 31]);  		missedSplinters.AddRange (_splinterBuffer [i & 31]);  	}  }  
Magic Number,warlocks.Game,WGame,C:\repos\slofurno_warlocksr\warlocks\Game\Game.cs,ProcessCommand,The following statement contains a magic number: for (var i = last; i < frame; i++) {  	missedPixels.AddRange (_pixelBuffer [i & 31]);  	missedSplinters.AddRange (_splinterBuffer [i & 31]);  }  
Magic Number,warlocks.Game,WGame,C:\repos\slofurno_warlocksr\warlocks\Game\Game.cs,ProcessCommand,The following statement contains a magic number: for (var i = last; i < frame; i++) {  	missedPixels.AddRange (_pixelBuffer [i & 31]);  	missedSplinters.AddRange (_splinterBuffer [i & 31]);  }  
Magic Number,warlocks.Game,WGame,C:\repos\slofurno_warlocksr\warlocks\Game\Game.cs,ProcessCommand,The following statement contains a magic number: missedPixels.AddRange (_pixelBuffer [i & 31]);  
Magic Number,warlocks.Game,WGame,C:\repos\slofurno_warlocksr\warlocks\Game\Game.cs,ProcessCommand,The following statement contains a magic number: missedSplinters.AddRange (_splinterBuffer [i & 31]);  
Magic Number,warlocks.Game,WGame,C:\repos\slofurno_warlocksr\warlocks\Game\Game.cs,Run,The following statement contains a magic number: while (true) {  	var elapsed = sw.Elapsed.TotalMilliseconds;  	sw.Restart ();  	accumulator += elapsed;  	while (accumulator >= dt) {  		var runtime = new Stopwatch ();  		runtime.Start ();  		accumulator -= dt;  		t += dt;  		var en = _connections.GetEnumerator ();  		while (en.MoveNext ()) {  			ProcessCommand (en.Current' frame);  		}  		Update (frame);  		runtime.Stop ();  		var el = runtime.Elapsed.TotalMilliseconds;  		if (el > 5) {  			var sdfgsdf = "fsd";  		}  		Console.WriteLine (runtime.Elapsed.TotalMilliseconds);  		++frame;  	}  }  
Magic Number,warlocks.Game,WGame,C:\repos\slofurno_warlocksr\warlocks\Game\Game.cs,Run,The following statement contains a magic number: while (accumulator >= dt) {  	var runtime = new Stopwatch ();  	runtime.Start ();  	accumulator -= dt;  	t += dt;  	var en = _connections.GetEnumerator ();  	while (en.MoveNext ()) {  		ProcessCommand (en.Current' frame);  	}  	Update (frame);  	runtime.Stop ();  	var el = runtime.Elapsed.TotalMilliseconds;  	if (el > 5) {  		var sdfgsdf = "fsd";  	}  	Console.WriteLine (runtime.Elapsed.TotalMilliseconds);  	++frame;  }  
Magic Number,warlocks.Game,WGame,C:\repos\slofurno_warlocksr\warlocks\Game\Game.cs,Run,The following statement contains a magic number: if (el > 5) {  	var sdfgsdf = "fsd";  }  
Magic Number,warlocks.Game,Ninjarope,C:\repos\slofurno_warlocksr\warlocks\Game\Ninjarope.cs,process,The following statement contains a magic number: if (isout) {  	x += velX;  	y += velY;  	int ix = (int)x;  	int iy = (int)y;  	double forceX' forceY;  	double diffX = (x - owner.position.X);  	double diffY = (y - owner.position.Y);  	forceX = (diffX * 1.3);  	forceY = (diffY * 1.3);  	double curLen = Math.Sqrt (diffX * diffX + diffY * diffY);  	double springforce = 0;  	if (curLen > length) {  		springforce = (curLen - length);  	}  	double angle = Math.Atan2 (diffY' diffX);  	forceX = Math.Cos (angle) * springforce;  	forceY = Math.Sin (angle) * springforce;  	if (ix <= 0 || ix >= game.leveldata.width - 1 || iy <= 0 || iy >= game.leveldata.height - 1 || game.CheckLocation (ix' iy)) {  		if (!attached) {  			length = (int)(curLen * .7);  			attached = true;  		}  		velX = 0;  		velY = 0;  	}  	else {  		attached = false;  	}  	if (attached) {  		// curLen can't be 0  		if (curLen > length) {  			owner.velocity.X += forceX / curLen;  			owner.velocity.Y += forceY / curLen;  		}  	}  	else {  		//velY += .05; //gravity  		if (curLen > length) {  			//velX -= forceX / curLen;  			//velY -= forceY / curLen;  		}  	}  }  
Magic Number,warlocks.Game,Ninjarope,C:\repos\slofurno_warlocksr\warlocks\Game\Ninjarope.cs,process,The following statement contains a magic number: if (isout) {  	x += velX;  	y += velY;  	int ix = (int)x;  	int iy = (int)y;  	double forceX' forceY;  	double diffX = (x - owner.position.X);  	double diffY = (y - owner.position.Y);  	forceX = (diffX * 1.3);  	forceY = (diffY * 1.3);  	double curLen = Math.Sqrt (diffX * diffX + diffY * diffY);  	double springforce = 0;  	if (curLen > length) {  		springforce = (curLen - length);  	}  	double angle = Math.Atan2 (diffY' diffX);  	forceX = Math.Cos (angle) * springforce;  	forceY = Math.Sin (angle) * springforce;  	if (ix <= 0 || ix >= game.leveldata.width - 1 || iy <= 0 || iy >= game.leveldata.height - 1 || game.CheckLocation (ix' iy)) {  		if (!attached) {  			length = (int)(curLen * .7);  			attached = true;  		}  		velX = 0;  		velY = 0;  	}  	else {  		attached = false;  	}  	if (attached) {  		// curLen can't be 0  		if (curLen > length) {  			owner.velocity.X += forceX / curLen;  			owner.velocity.Y += forceY / curLen;  		}  	}  	else {  		//velY += .05; //gravity  		if (curLen > length) {  			//velX -= forceX / curLen;  			//velY -= forceY / curLen;  		}  	}  }  
Magic Number,warlocks.Game,Ninjarope,C:\repos\slofurno_warlocksr\warlocks\Game\Ninjarope.cs,process,The following statement contains a magic number: if (isout) {  	x += velX;  	y += velY;  	int ix = (int)x;  	int iy = (int)y;  	double forceX' forceY;  	double diffX = (x - owner.position.X);  	double diffY = (y - owner.position.Y);  	forceX = (diffX * 1.3);  	forceY = (diffY * 1.3);  	double curLen = Math.Sqrt (diffX * diffX + diffY * diffY);  	double springforce = 0;  	if (curLen > length) {  		springforce = (curLen - length);  	}  	double angle = Math.Atan2 (diffY' diffX);  	forceX = Math.Cos (angle) * springforce;  	forceY = Math.Sin (angle) * springforce;  	if (ix <= 0 || ix >= game.leveldata.width - 1 || iy <= 0 || iy >= game.leveldata.height - 1 || game.CheckLocation (ix' iy)) {  		if (!attached) {  			length = (int)(curLen * .7);  			attached = true;  		}  		velX = 0;  		velY = 0;  	}  	else {  		attached = false;  	}  	if (attached) {  		// curLen can't be 0  		if (curLen > length) {  			owner.velocity.X += forceX / curLen;  			owner.velocity.Y += forceY / curLen;  		}  	}  	else {  		//velY += .05; //gravity  		if (curLen > length) {  			//velX -= forceX / curLen;  			//velY -= forceY / curLen;  		}  	}  }  
Magic Number,warlocks.Game,Ninjarope,C:\repos\slofurno_warlocksr\warlocks\Game\Ninjarope.cs,process,The following statement contains a magic number: forceX = (diffX * 1.3);  
Magic Number,warlocks.Game,Ninjarope,C:\repos\slofurno_warlocksr\warlocks\Game\Ninjarope.cs,process,The following statement contains a magic number: forceY = (diffY * 1.3);  
Magic Number,warlocks.Game,Ninjarope,C:\repos\slofurno_warlocksr\warlocks\Game\Ninjarope.cs,process,The following statement contains a magic number: if (ix <= 0 || ix >= game.leveldata.width - 1 || iy <= 0 || iy >= game.leveldata.height - 1 || game.CheckLocation (ix' iy)) {  	if (!attached) {  		length = (int)(curLen * .7);  		attached = true;  	}  	velX = 0;  	velY = 0;  }  else {  	attached = false;  }  
Magic Number,warlocks.Game,Ninjarope,C:\repos\slofurno_warlocksr\warlocks\Game\Ninjarope.cs,process,The following statement contains a magic number: if (!attached) {  	length = (int)(curLen * .7);  	attached = true;  }  
Magic Number,warlocks.Game,Ninjarope,C:\repos\slofurno_warlocksr\warlocks\Game\Ninjarope.cs,process,The following statement contains a magic number: length = (int)(curLen * .7);  
Magic Number,warlocks.Game,NObject,C:\repos\slofurno_warlocksr\warlocks\Game\NObject.cs,NObject,The following statement contains a magic number: this.velX = Math.Cos (angle) * 1.5 + velX;  
Magic Number,warlocks.Game,NObject,C:\repos\slofurno_warlocksr\warlocks\Game\NObject.cs,NObject,The following statement contains a magic number: this.velX = Math.Sin (angle) * 1.5 + velY;  
Magic Number,warlocks.Game,NObject,C:\repos\slofurno_warlocksr\warlocks\Game\NObject.cs,Process,The following statement contains a magic number: velY += .1;  
Magic Number,warlocks.Game,Vector2,C:\repos\slofurno_warlocksr\warlocks\Game\Vector2.cs,ComputeLength,The following statement contains a magic number: length = Math.Sqrt (Math.Pow (x' 2) + Math.Pow (y' 2));  
Magic Number,warlocks.Game,Vector2,C:\repos\slofurno_warlocksr\warlocks\Game\Vector2.cs,ComputeLength,The following statement contains a magic number: length = Math.Sqrt (Math.Pow (x' 2) + Math.Pow (y' 2));  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,blowUpObject,The following statement contains a magic number: for (var i = 0; i < w.splinterAmount; i++) {  	double angle = RNG.next (Math.PI * 2);  	var s = new SObject () {  		x = this.x'  		y = this.y'  		velX = Math.Cos (angle)'  		velY = Math.Sin (angle)  	};  	game._splinters.Add (s);  }  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,blowUpObject,The following statement contains a magic number: foreach (var worm in game.wormList) {  	if (w.explosionRadius * w.explosionRadius > (worm.position.X - this.x) * (worm.position.X - this.x) + (worm.position.Y - this.y) * (worm.position.Y - this.y)) {  		for (var i = 0; i < 32; i++) {  			game.bloodlist.Add (new NObject ((int)worm.position.X' (int)worm.position.Y' this.velX / 3' this.velY / 3));  		}  	}  }  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,blowUpObject,The following statement contains a magic number: foreach (var worm in game.wormList) {  	if (w.explosionRadius * w.explosionRadius > (worm.position.X - this.x) * (worm.position.X - this.x) + (worm.position.Y - this.y) * (worm.position.Y - this.y)) {  		for (var i = 0; i < 32; i++) {  			game.bloodlist.Add (new NObject ((int)worm.position.X' (int)worm.position.Y' this.velX / 3' this.velY / 3));  		}  	}  }  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,blowUpObject,The following statement contains a magic number: foreach (var worm in game.wormList) {  	if (w.explosionRadius * w.explosionRadius > (worm.position.X - this.x) * (worm.position.X - this.x) + (worm.position.Y - this.y) * (worm.position.Y - this.y)) {  		for (var i = 0; i < 32; i++) {  			game.bloodlist.Add (new NObject ((int)worm.position.X' (int)worm.position.Y' this.velX / 3' this.velY / 3));  		}  	}  }  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,blowUpObject,The following statement contains a magic number: if (w.explosionRadius * w.explosionRadius > (worm.position.X - this.x) * (worm.position.X - this.x) + (worm.position.Y - this.y) * (worm.position.Y - this.y)) {  	for (var i = 0; i < 32; i++) {  		game.bloodlist.Add (new NObject ((int)worm.position.X' (int)worm.position.Y' this.velX / 3' this.velY / 3));  	}  }  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,blowUpObject,The following statement contains a magic number: if (w.explosionRadius * w.explosionRadius > (worm.position.X - this.x) * (worm.position.X - this.x) + (worm.position.Y - this.y) * (worm.position.Y - this.y)) {  	for (var i = 0; i < 32; i++) {  		game.bloodlist.Add (new NObject ((int)worm.position.X' (int)worm.position.Y' this.velX / 3' this.velY / 3));  	}  }  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,blowUpObject,The following statement contains a magic number: if (w.explosionRadius * w.explosionRadius > (worm.position.X - this.x) * (worm.position.X - this.x) + (worm.position.Y - this.y) * (worm.position.Y - this.y)) {  	for (var i = 0; i < 32; i++) {  		game.bloodlist.Add (new NObject ((int)worm.position.X' (int)worm.position.Y' this.velX / 3' this.velY / 3));  	}  }  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,blowUpObject,The following statement contains a magic number: for (var i = 0; i < 32; i++) {  	game.bloodlist.Add (new NObject ((int)worm.position.X' (int)worm.position.Y' this.velX / 3' this.velY / 3));  }  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,blowUpObject,The following statement contains a magic number: for (var i = 0; i < 32; i++) {  	game.bloodlist.Add (new NObject ((int)worm.position.X' (int)worm.position.Y' this.velX / 3' this.velY / 3));  }  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,blowUpObject,The following statement contains a magic number: for (var i = 0; i < 32; i++) {  	game.bloodlist.Add (new NObject ((int)worm.position.X' (int)worm.position.Y' this.velX / 3' this.velY / 3));  }  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,blowUpObject,The following statement contains a magic number: game.bloodlist.Add (new NObject ((int)worm.position.X' (int)worm.position.Y' this.velX / 3' this.velY / 3));  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,blowUpObject,The following statement contains a magic number: game.bloodlist.Add (new NObject ((int)worm.position.X' (int)worm.position.Y' this.velX / 3' this.velY / 3));  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,Process,The following statement contains a magic number: while (--iter >= 0) {  	var w = Common.Weapons [this.id];  	bool doExplode = false;  	bool bounced = false;  	int inewX = (int)(x + velX);  	int inewY = (int)(y + velY);  	int ix = (int)x;  	int iy = (int)y;  	if (w.Bounce > 0) {  		if (!game.leveldata.inside (inewX' iy) || game.leveldata.getPixel (inewX' iy) != PIXEL.empty) {  			if (w.Bounce != 100) {  				velX = -velX * w.Bounce / 100;  				velY = (velY * 4) / 5;  			}  			else {  				velX = -velX;  			}  			bounced = true;  		}  		if (!game.leveldata.inside (ix' inewY) || game.leveldata.getPixel (ix' inewY) != PIXEL.empty) {  			if (w.Bounce != 100) {  				velY = -velY * w.Bounce / 100;  				velX = (velX * 4) / 5;  				// TODO: Read from EXE  			}  			else {  				velY = -velY;  			}  			bounced = true;  		}  	}  	if (!game.leveldata.inside (inewX' inewY) || game.leveldata.getPixel (inewX' inewY) != PIXEL.empty) {  		if (w.Bounce == 0) {  			doExplode = true;  		}  	}  	else {  		velY += w.gravity;  	}  	foreach (var worm in game.wormList) {  		if ((worm.id != this.firedbyid) && Worm.checkForSpecWormHit (game' inewX' inewY' 6' worm)) {  			for (var i = 0; i < 32; i++) {  				game.bloodlist.Add (new NObject (inewX' inewY' velX / 3' velY / 3));  			}  			doExplode = true;  		}  	}  	if (w.timeToExplosion > 0) {  		--timeLeft;  		if (timeLeft <= 0) {  			doExplode = true;  		}  	}  	y += velY;  	x += velX;  	if (doExplode) {  		blowUpObject (game);  		game.wormobjects.free (this);  	}  }  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,Process,The following statement contains a magic number: while (--iter >= 0) {  	var w = Common.Weapons [this.id];  	bool doExplode = false;  	bool bounced = false;  	int inewX = (int)(x + velX);  	int inewY = (int)(y + velY);  	int ix = (int)x;  	int iy = (int)y;  	if (w.Bounce > 0) {  		if (!game.leveldata.inside (inewX' iy) || game.leveldata.getPixel (inewX' iy) != PIXEL.empty) {  			if (w.Bounce != 100) {  				velX = -velX * w.Bounce / 100;  				velY = (velY * 4) / 5;  			}  			else {  				velX = -velX;  			}  			bounced = true;  		}  		if (!game.leveldata.inside (ix' inewY) || game.leveldata.getPixel (ix' inewY) != PIXEL.empty) {  			if (w.Bounce != 100) {  				velY = -velY * w.Bounce / 100;  				velX = (velX * 4) / 5;  				// TODO: Read from EXE  			}  			else {  				velY = -velY;  			}  			bounced = true;  		}  	}  	if (!game.leveldata.inside (inewX' inewY) || game.leveldata.getPixel (inewX' inewY) != PIXEL.empty) {  		if (w.Bounce == 0) {  			doExplode = true;  		}  	}  	else {  		velY += w.gravity;  	}  	foreach (var worm in game.wormList) {  		if ((worm.id != this.firedbyid) && Worm.checkForSpecWormHit (game' inewX' inewY' 6' worm)) {  			for (var i = 0; i < 32; i++) {  				game.bloodlist.Add (new NObject (inewX' inewY' velX / 3' velY / 3));  			}  			doExplode = true;  		}  	}  	if (w.timeToExplosion > 0) {  		--timeLeft;  		if (timeLeft <= 0) {  			doExplode = true;  		}  	}  	y += velY;  	x += velX;  	if (doExplode) {  		blowUpObject (game);  		game.wormobjects.free (this);  	}  }  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,Process,The following statement contains a magic number: while (--iter >= 0) {  	var w = Common.Weapons [this.id];  	bool doExplode = false;  	bool bounced = false;  	int inewX = (int)(x + velX);  	int inewY = (int)(y + velY);  	int ix = (int)x;  	int iy = (int)y;  	if (w.Bounce > 0) {  		if (!game.leveldata.inside (inewX' iy) || game.leveldata.getPixel (inewX' iy) != PIXEL.empty) {  			if (w.Bounce != 100) {  				velX = -velX * w.Bounce / 100;  				velY = (velY * 4) / 5;  			}  			else {  				velX = -velX;  			}  			bounced = true;  		}  		if (!game.leveldata.inside (ix' inewY) || game.leveldata.getPixel (ix' inewY) != PIXEL.empty) {  			if (w.Bounce != 100) {  				velY = -velY * w.Bounce / 100;  				velX = (velX * 4) / 5;  				// TODO: Read from EXE  			}  			else {  				velY = -velY;  			}  			bounced = true;  		}  	}  	if (!game.leveldata.inside (inewX' inewY) || game.leveldata.getPixel (inewX' inewY) != PIXEL.empty) {  		if (w.Bounce == 0) {  			doExplode = true;  		}  	}  	else {  		velY += w.gravity;  	}  	foreach (var worm in game.wormList) {  		if ((worm.id != this.firedbyid) && Worm.checkForSpecWormHit (game' inewX' inewY' 6' worm)) {  			for (var i = 0; i < 32; i++) {  				game.bloodlist.Add (new NObject (inewX' inewY' velX / 3' velY / 3));  			}  			doExplode = true;  		}  	}  	if (w.timeToExplosion > 0) {  		--timeLeft;  		if (timeLeft <= 0) {  			doExplode = true;  		}  	}  	y += velY;  	x += velX;  	if (doExplode) {  		blowUpObject (game);  		game.wormobjects.free (this);  	}  }  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,Process,The following statement contains a magic number: while (--iter >= 0) {  	var w = Common.Weapons [this.id];  	bool doExplode = false;  	bool bounced = false;  	int inewX = (int)(x + velX);  	int inewY = (int)(y + velY);  	int ix = (int)x;  	int iy = (int)y;  	if (w.Bounce > 0) {  		if (!game.leveldata.inside (inewX' iy) || game.leveldata.getPixel (inewX' iy) != PIXEL.empty) {  			if (w.Bounce != 100) {  				velX = -velX * w.Bounce / 100;  				velY = (velY * 4) / 5;  			}  			else {  				velX = -velX;  			}  			bounced = true;  		}  		if (!game.leveldata.inside (ix' inewY) || game.leveldata.getPixel (ix' inewY) != PIXEL.empty) {  			if (w.Bounce != 100) {  				velY = -velY * w.Bounce / 100;  				velX = (velX * 4) / 5;  				// TODO: Read from EXE  			}  			else {  				velY = -velY;  			}  			bounced = true;  		}  	}  	if (!game.leveldata.inside (inewX' inewY) || game.leveldata.getPixel (inewX' inewY) != PIXEL.empty) {  		if (w.Bounce == 0) {  			doExplode = true;  		}  	}  	else {  		velY += w.gravity;  	}  	foreach (var worm in game.wormList) {  		if ((worm.id != this.firedbyid) && Worm.checkForSpecWormHit (game' inewX' inewY' 6' worm)) {  			for (var i = 0; i < 32; i++) {  				game.bloodlist.Add (new NObject (inewX' inewY' velX / 3' velY / 3));  			}  			doExplode = true;  		}  	}  	if (w.timeToExplosion > 0) {  		--timeLeft;  		if (timeLeft <= 0) {  			doExplode = true;  		}  	}  	y += velY;  	x += velX;  	if (doExplode) {  		blowUpObject (game);  		game.wormobjects.free (this);  	}  }  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,Process,The following statement contains a magic number: while (--iter >= 0) {  	var w = Common.Weapons [this.id];  	bool doExplode = false;  	bool bounced = false;  	int inewX = (int)(x + velX);  	int inewY = (int)(y + velY);  	int ix = (int)x;  	int iy = (int)y;  	if (w.Bounce > 0) {  		if (!game.leveldata.inside (inewX' iy) || game.leveldata.getPixel (inewX' iy) != PIXEL.empty) {  			if (w.Bounce != 100) {  				velX = -velX * w.Bounce / 100;  				velY = (velY * 4) / 5;  			}  			else {  				velX = -velX;  			}  			bounced = true;  		}  		if (!game.leveldata.inside (ix' inewY) || game.leveldata.getPixel (ix' inewY) != PIXEL.empty) {  			if (w.Bounce != 100) {  				velY = -velY * w.Bounce / 100;  				velX = (velX * 4) / 5;  				// TODO: Read from EXE  			}  			else {  				velY = -velY;  			}  			bounced = true;  		}  	}  	if (!game.leveldata.inside (inewX' inewY) || game.leveldata.getPixel (inewX' inewY) != PIXEL.empty) {  		if (w.Bounce == 0) {  			doExplode = true;  		}  	}  	else {  		velY += w.gravity;  	}  	foreach (var worm in game.wormList) {  		if ((worm.id != this.firedbyid) && Worm.checkForSpecWormHit (game' inewX' inewY' 6' worm)) {  			for (var i = 0; i < 32; i++) {  				game.bloodlist.Add (new NObject (inewX' inewY' velX / 3' velY / 3));  			}  			doExplode = true;  		}  	}  	if (w.timeToExplosion > 0) {  		--timeLeft;  		if (timeLeft <= 0) {  			doExplode = true;  		}  	}  	y += velY;  	x += velX;  	if (doExplode) {  		blowUpObject (game);  		game.wormobjects.free (this);  	}  }  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,Process,The following statement contains a magic number: while (--iter >= 0) {  	var w = Common.Weapons [this.id];  	bool doExplode = false;  	bool bounced = false;  	int inewX = (int)(x + velX);  	int inewY = (int)(y + velY);  	int ix = (int)x;  	int iy = (int)y;  	if (w.Bounce > 0) {  		if (!game.leveldata.inside (inewX' iy) || game.leveldata.getPixel (inewX' iy) != PIXEL.empty) {  			if (w.Bounce != 100) {  				velX = -velX * w.Bounce / 100;  				velY = (velY * 4) / 5;  			}  			else {  				velX = -velX;  			}  			bounced = true;  		}  		if (!game.leveldata.inside (ix' inewY) || game.leveldata.getPixel (ix' inewY) != PIXEL.empty) {  			if (w.Bounce != 100) {  				velY = -velY * w.Bounce / 100;  				velX = (velX * 4) / 5;  				// TODO: Read from EXE  			}  			else {  				velY = -velY;  			}  			bounced = true;  		}  	}  	if (!game.leveldata.inside (inewX' inewY) || game.leveldata.getPixel (inewX' inewY) != PIXEL.empty) {  		if (w.Bounce == 0) {  			doExplode = true;  		}  	}  	else {  		velY += w.gravity;  	}  	foreach (var worm in game.wormList) {  		if ((worm.id != this.firedbyid) && Worm.checkForSpecWormHit (game' inewX' inewY' 6' worm)) {  			for (var i = 0; i < 32; i++) {  				game.bloodlist.Add (new NObject (inewX' inewY' velX / 3' velY / 3));  			}  			doExplode = true;  		}  	}  	if (w.timeToExplosion > 0) {  		--timeLeft;  		if (timeLeft <= 0) {  			doExplode = true;  		}  	}  	y += velY;  	x += velX;  	if (doExplode) {  		blowUpObject (game);  		game.wormobjects.free (this);  	}  }  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,Process,The following statement contains a magic number: while (--iter >= 0) {  	var w = Common.Weapons [this.id];  	bool doExplode = false;  	bool bounced = false;  	int inewX = (int)(x + velX);  	int inewY = (int)(y + velY);  	int ix = (int)x;  	int iy = (int)y;  	if (w.Bounce > 0) {  		if (!game.leveldata.inside (inewX' iy) || game.leveldata.getPixel (inewX' iy) != PIXEL.empty) {  			if (w.Bounce != 100) {  				velX = -velX * w.Bounce / 100;  				velY = (velY * 4) / 5;  			}  			else {  				velX = -velX;  			}  			bounced = true;  		}  		if (!game.leveldata.inside (ix' inewY) || game.leveldata.getPixel (ix' inewY) != PIXEL.empty) {  			if (w.Bounce != 100) {  				velY = -velY * w.Bounce / 100;  				velX = (velX * 4) / 5;  				// TODO: Read from EXE  			}  			else {  				velY = -velY;  			}  			bounced = true;  		}  	}  	if (!game.leveldata.inside (inewX' inewY) || game.leveldata.getPixel (inewX' inewY) != PIXEL.empty) {  		if (w.Bounce == 0) {  			doExplode = true;  		}  	}  	else {  		velY += w.gravity;  	}  	foreach (var worm in game.wormList) {  		if ((worm.id != this.firedbyid) && Worm.checkForSpecWormHit (game' inewX' inewY' 6' worm)) {  			for (var i = 0; i < 32; i++) {  				game.bloodlist.Add (new NObject (inewX' inewY' velX / 3' velY / 3));  			}  			doExplode = true;  		}  	}  	if (w.timeToExplosion > 0) {  		--timeLeft;  		if (timeLeft <= 0) {  			doExplode = true;  		}  	}  	y += velY;  	x += velX;  	if (doExplode) {  		blowUpObject (game);  		game.wormobjects.free (this);  	}  }  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,Process,The following statement contains a magic number: while (--iter >= 0) {  	var w = Common.Weapons [this.id];  	bool doExplode = false;  	bool bounced = false;  	int inewX = (int)(x + velX);  	int inewY = (int)(y + velY);  	int ix = (int)x;  	int iy = (int)y;  	if (w.Bounce > 0) {  		if (!game.leveldata.inside (inewX' iy) || game.leveldata.getPixel (inewX' iy) != PIXEL.empty) {  			if (w.Bounce != 100) {  				velX = -velX * w.Bounce / 100;  				velY = (velY * 4) / 5;  			}  			else {  				velX = -velX;  			}  			bounced = true;  		}  		if (!game.leveldata.inside (ix' inewY) || game.leveldata.getPixel (ix' inewY) != PIXEL.empty) {  			if (w.Bounce != 100) {  				velY = -velY * w.Bounce / 100;  				velX = (velX * 4) / 5;  				// TODO: Read from EXE  			}  			else {  				velY = -velY;  			}  			bounced = true;  		}  	}  	if (!game.leveldata.inside (inewX' inewY) || game.leveldata.getPixel (inewX' inewY) != PIXEL.empty) {  		if (w.Bounce == 0) {  			doExplode = true;  		}  	}  	else {  		velY += w.gravity;  	}  	foreach (var worm in game.wormList) {  		if ((worm.id != this.firedbyid) && Worm.checkForSpecWormHit (game' inewX' inewY' 6' worm)) {  			for (var i = 0; i < 32; i++) {  				game.bloodlist.Add (new NObject (inewX' inewY' velX / 3' velY / 3));  			}  			doExplode = true;  		}  	}  	if (w.timeToExplosion > 0) {  		--timeLeft;  		if (timeLeft <= 0) {  			doExplode = true;  		}  	}  	y += velY;  	x += velX;  	if (doExplode) {  		blowUpObject (game);  		game.wormobjects.free (this);  	}  }  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,Process,The following statement contains a magic number: while (--iter >= 0) {  	var w = Common.Weapons [this.id];  	bool doExplode = false;  	bool bounced = false;  	int inewX = (int)(x + velX);  	int inewY = (int)(y + velY);  	int ix = (int)x;  	int iy = (int)y;  	if (w.Bounce > 0) {  		if (!game.leveldata.inside (inewX' iy) || game.leveldata.getPixel (inewX' iy) != PIXEL.empty) {  			if (w.Bounce != 100) {  				velX = -velX * w.Bounce / 100;  				velY = (velY * 4) / 5;  			}  			else {  				velX = -velX;  			}  			bounced = true;  		}  		if (!game.leveldata.inside (ix' inewY) || game.leveldata.getPixel (ix' inewY) != PIXEL.empty) {  			if (w.Bounce != 100) {  				velY = -velY * w.Bounce / 100;  				velX = (velX * 4) / 5;  				// TODO: Read from EXE  			}  			else {  				velY = -velY;  			}  			bounced = true;  		}  	}  	if (!game.leveldata.inside (inewX' inewY) || game.leveldata.getPixel (inewX' inewY) != PIXEL.empty) {  		if (w.Bounce == 0) {  			doExplode = true;  		}  	}  	else {  		velY += w.gravity;  	}  	foreach (var worm in game.wormList) {  		if ((worm.id != this.firedbyid) && Worm.checkForSpecWormHit (game' inewX' inewY' 6' worm)) {  			for (var i = 0; i < 32; i++) {  				game.bloodlist.Add (new NObject (inewX' inewY' velX / 3' velY / 3));  			}  			doExplode = true;  		}  	}  	if (w.timeToExplosion > 0) {  		--timeLeft;  		if (timeLeft <= 0) {  			doExplode = true;  		}  	}  	y += velY;  	x += velX;  	if (doExplode) {  		blowUpObject (game);  		game.wormobjects.free (this);  	}  }  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,Process,The following statement contains a magic number: while (--iter >= 0) {  	var w = Common.Weapons [this.id];  	bool doExplode = false;  	bool bounced = false;  	int inewX = (int)(x + velX);  	int inewY = (int)(y + velY);  	int ix = (int)x;  	int iy = (int)y;  	if (w.Bounce > 0) {  		if (!game.leveldata.inside (inewX' iy) || game.leveldata.getPixel (inewX' iy) != PIXEL.empty) {  			if (w.Bounce != 100) {  				velX = -velX * w.Bounce / 100;  				velY = (velY * 4) / 5;  			}  			else {  				velX = -velX;  			}  			bounced = true;  		}  		if (!game.leveldata.inside (ix' inewY) || game.leveldata.getPixel (ix' inewY) != PIXEL.empty) {  			if (w.Bounce != 100) {  				velY = -velY * w.Bounce / 100;  				velX = (velX * 4) / 5;  				// TODO: Read from EXE  			}  			else {  				velY = -velY;  			}  			bounced = true;  		}  	}  	if (!game.leveldata.inside (inewX' inewY) || game.leveldata.getPixel (inewX' inewY) != PIXEL.empty) {  		if (w.Bounce == 0) {  			doExplode = true;  		}  	}  	else {  		velY += w.gravity;  	}  	foreach (var worm in game.wormList) {  		if ((worm.id != this.firedbyid) && Worm.checkForSpecWormHit (game' inewX' inewY' 6' worm)) {  			for (var i = 0; i < 32; i++) {  				game.bloodlist.Add (new NObject (inewX' inewY' velX / 3' velY / 3));  			}  			doExplode = true;  		}  	}  	if (w.timeToExplosion > 0) {  		--timeLeft;  		if (timeLeft <= 0) {  			doExplode = true;  		}  	}  	y += velY;  	x += velX;  	if (doExplode) {  		blowUpObject (game);  		game.wormobjects.free (this);  	}  }  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,Process,The following statement contains a magic number: while (--iter >= 0) {  	var w = Common.Weapons [this.id];  	bool doExplode = false;  	bool bounced = false;  	int inewX = (int)(x + velX);  	int inewY = (int)(y + velY);  	int ix = (int)x;  	int iy = (int)y;  	if (w.Bounce > 0) {  		if (!game.leveldata.inside (inewX' iy) || game.leveldata.getPixel (inewX' iy) != PIXEL.empty) {  			if (w.Bounce != 100) {  				velX = -velX * w.Bounce / 100;  				velY = (velY * 4) / 5;  			}  			else {  				velX = -velX;  			}  			bounced = true;  		}  		if (!game.leveldata.inside (ix' inewY) || game.leveldata.getPixel (ix' inewY) != PIXEL.empty) {  			if (w.Bounce != 100) {  				velY = -velY * w.Bounce / 100;  				velX = (velX * 4) / 5;  				// TODO: Read from EXE  			}  			else {  				velY = -velY;  			}  			bounced = true;  		}  	}  	if (!game.leveldata.inside (inewX' inewY) || game.leveldata.getPixel (inewX' inewY) != PIXEL.empty) {  		if (w.Bounce == 0) {  			doExplode = true;  		}  	}  	else {  		velY += w.gravity;  	}  	foreach (var worm in game.wormList) {  		if ((worm.id != this.firedbyid) && Worm.checkForSpecWormHit (game' inewX' inewY' 6' worm)) {  			for (var i = 0; i < 32; i++) {  				game.bloodlist.Add (new NObject (inewX' inewY' velX / 3' velY / 3));  			}  			doExplode = true;  		}  	}  	if (w.timeToExplosion > 0) {  		--timeLeft;  		if (timeLeft <= 0) {  			doExplode = true;  		}  	}  	y += velY;  	x += velX;  	if (doExplode) {  		blowUpObject (game);  		game.wormobjects.free (this);  	}  }  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,Process,The following statement contains a magic number: while (--iter >= 0) {  	var w = Common.Weapons [this.id];  	bool doExplode = false;  	bool bounced = false;  	int inewX = (int)(x + velX);  	int inewY = (int)(y + velY);  	int ix = (int)x;  	int iy = (int)y;  	if (w.Bounce > 0) {  		if (!game.leveldata.inside (inewX' iy) || game.leveldata.getPixel (inewX' iy) != PIXEL.empty) {  			if (w.Bounce != 100) {  				velX = -velX * w.Bounce / 100;  				velY = (velY * 4) / 5;  			}  			else {  				velX = -velX;  			}  			bounced = true;  		}  		if (!game.leveldata.inside (ix' inewY) || game.leveldata.getPixel (ix' inewY) != PIXEL.empty) {  			if (w.Bounce != 100) {  				velY = -velY * w.Bounce / 100;  				velX = (velX * 4) / 5;  				// TODO: Read from EXE  			}  			else {  				velY = -velY;  			}  			bounced = true;  		}  	}  	if (!game.leveldata.inside (inewX' inewY) || game.leveldata.getPixel (inewX' inewY) != PIXEL.empty) {  		if (w.Bounce == 0) {  			doExplode = true;  		}  	}  	else {  		velY += w.gravity;  	}  	foreach (var worm in game.wormList) {  		if ((worm.id != this.firedbyid) && Worm.checkForSpecWormHit (game' inewX' inewY' 6' worm)) {  			for (var i = 0; i < 32; i++) {  				game.bloodlist.Add (new NObject (inewX' inewY' velX / 3' velY / 3));  			}  			doExplode = true;  		}  	}  	if (w.timeToExplosion > 0) {  		--timeLeft;  		if (timeLeft <= 0) {  			doExplode = true;  		}  	}  	y += velY;  	x += velX;  	if (doExplode) {  		blowUpObject (game);  		game.wormobjects.free (this);  	}  }  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,Process,The following statement contains a magic number: if (w.Bounce > 0) {  	if (!game.leveldata.inside (inewX' iy) || game.leveldata.getPixel (inewX' iy) != PIXEL.empty) {  		if (w.Bounce != 100) {  			velX = -velX * w.Bounce / 100;  			velY = (velY * 4) / 5;  		}  		else {  			velX = -velX;  		}  		bounced = true;  	}  	if (!game.leveldata.inside (ix' inewY) || game.leveldata.getPixel (ix' inewY) != PIXEL.empty) {  		if (w.Bounce != 100) {  			velY = -velY * w.Bounce / 100;  			velX = (velX * 4) / 5;  			// TODO: Read from EXE  		}  		else {  			velY = -velY;  		}  		bounced = true;  	}  }  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,Process,The following statement contains a magic number: if (w.Bounce > 0) {  	if (!game.leveldata.inside (inewX' iy) || game.leveldata.getPixel (inewX' iy) != PIXEL.empty) {  		if (w.Bounce != 100) {  			velX = -velX * w.Bounce / 100;  			velY = (velY * 4) / 5;  		}  		else {  			velX = -velX;  		}  		bounced = true;  	}  	if (!game.leveldata.inside (ix' inewY) || game.leveldata.getPixel (ix' inewY) != PIXEL.empty) {  		if (w.Bounce != 100) {  			velY = -velY * w.Bounce / 100;  			velX = (velX * 4) / 5;  			// TODO: Read from EXE  		}  		else {  			velY = -velY;  		}  		bounced = true;  	}  }  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,Process,The following statement contains a magic number: if (w.Bounce > 0) {  	if (!game.leveldata.inside (inewX' iy) || game.leveldata.getPixel (inewX' iy) != PIXEL.empty) {  		if (w.Bounce != 100) {  			velX = -velX * w.Bounce / 100;  			velY = (velY * 4) / 5;  		}  		else {  			velX = -velX;  		}  		bounced = true;  	}  	if (!game.leveldata.inside (ix' inewY) || game.leveldata.getPixel (ix' inewY) != PIXEL.empty) {  		if (w.Bounce != 100) {  			velY = -velY * w.Bounce / 100;  			velX = (velX * 4) / 5;  			// TODO: Read from EXE  		}  		else {  			velY = -velY;  		}  		bounced = true;  	}  }  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,Process,The following statement contains a magic number: if (w.Bounce > 0) {  	if (!game.leveldata.inside (inewX' iy) || game.leveldata.getPixel (inewX' iy) != PIXEL.empty) {  		if (w.Bounce != 100) {  			velX = -velX * w.Bounce / 100;  			velY = (velY * 4) / 5;  		}  		else {  			velX = -velX;  		}  		bounced = true;  	}  	if (!game.leveldata.inside (ix' inewY) || game.leveldata.getPixel (ix' inewY) != PIXEL.empty) {  		if (w.Bounce != 100) {  			velY = -velY * w.Bounce / 100;  			velX = (velX * 4) / 5;  			// TODO: Read from EXE  		}  		else {  			velY = -velY;  		}  		bounced = true;  	}  }  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,Process,The following statement contains a magic number: if (w.Bounce > 0) {  	if (!game.leveldata.inside (inewX' iy) || game.leveldata.getPixel (inewX' iy) != PIXEL.empty) {  		if (w.Bounce != 100) {  			velX = -velX * w.Bounce / 100;  			velY = (velY * 4) / 5;  		}  		else {  			velX = -velX;  		}  		bounced = true;  	}  	if (!game.leveldata.inside (ix' inewY) || game.leveldata.getPixel (ix' inewY) != PIXEL.empty) {  		if (w.Bounce != 100) {  			velY = -velY * w.Bounce / 100;  			velX = (velX * 4) / 5;  			// TODO: Read from EXE  		}  		else {  			velY = -velY;  		}  		bounced = true;  	}  }  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,Process,The following statement contains a magic number: if (w.Bounce > 0) {  	if (!game.leveldata.inside (inewX' iy) || game.leveldata.getPixel (inewX' iy) != PIXEL.empty) {  		if (w.Bounce != 100) {  			velX = -velX * w.Bounce / 100;  			velY = (velY * 4) / 5;  		}  		else {  			velX = -velX;  		}  		bounced = true;  	}  	if (!game.leveldata.inside (ix' inewY) || game.leveldata.getPixel (ix' inewY) != PIXEL.empty) {  		if (w.Bounce != 100) {  			velY = -velY * w.Bounce / 100;  			velX = (velX * 4) / 5;  			// TODO: Read from EXE  		}  		else {  			velY = -velY;  		}  		bounced = true;  	}  }  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,Process,The following statement contains a magic number: if (w.Bounce > 0) {  	if (!game.leveldata.inside (inewX' iy) || game.leveldata.getPixel (inewX' iy) != PIXEL.empty) {  		if (w.Bounce != 100) {  			velX = -velX * w.Bounce / 100;  			velY = (velY * 4) / 5;  		}  		else {  			velX = -velX;  		}  		bounced = true;  	}  	if (!game.leveldata.inside (ix' inewY) || game.leveldata.getPixel (ix' inewY) != PIXEL.empty) {  		if (w.Bounce != 100) {  			velY = -velY * w.Bounce / 100;  			velX = (velX * 4) / 5;  			// TODO: Read from EXE  		}  		else {  			velY = -velY;  		}  		bounced = true;  	}  }  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,Process,The following statement contains a magic number: if (w.Bounce > 0) {  	if (!game.leveldata.inside (inewX' iy) || game.leveldata.getPixel (inewX' iy) != PIXEL.empty) {  		if (w.Bounce != 100) {  			velX = -velX * w.Bounce / 100;  			velY = (velY * 4) / 5;  		}  		else {  			velX = -velX;  		}  		bounced = true;  	}  	if (!game.leveldata.inside (ix' inewY) || game.leveldata.getPixel (ix' inewY) != PIXEL.empty) {  		if (w.Bounce != 100) {  			velY = -velY * w.Bounce / 100;  			velX = (velX * 4) / 5;  			// TODO: Read from EXE  		}  		else {  			velY = -velY;  		}  		bounced = true;  	}  }  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,Process,The following statement contains a magic number: if (!game.leveldata.inside (inewX' iy) || game.leveldata.getPixel (inewX' iy) != PIXEL.empty) {  	if (w.Bounce != 100) {  		velX = -velX * w.Bounce / 100;  		velY = (velY * 4) / 5;  	}  	else {  		velX = -velX;  	}  	bounced = true;  }  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,Process,The following statement contains a magic number: if (!game.leveldata.inside (inewX' iy) || game.leveldata.getPixel (inewX' iy) != PIXEL.empty) {  	if (w.Bounce != 100) {  		velX = -velX * w.Bounce / 100;  		velY = (velY * 4) / 5;  	}  	else {  		velX = -velX;  	}  	bounced = true;  }  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,Process,The following statement contains a magic number: if (!game.leveldata.inside (inewX' iy) || game.leveldata.getPixel (inewX' iy) != PIXEL.empty) {  	if (w.Bounce != 100) {  		velX = -velX * w.Bounce / 100;  		velY = (velY * 4) / 5;  	}  	else {  		velX = -velX;  	}  	bounced = true;  }  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,Process,The following statement contains a magic number: if (!game.leveldata.inside (inewX' iy) || game.leveldata.getPixel (inewX' iy) != PIXEL.empty) {  	if (w.Bounce != 100) {  		velX = -velX * w.Bounce / 100;  		velY = (velY * 4) / 5;  	}  	else {  		velX = -velX;  	}  	bounced = true;  }  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,Process,The following statement contains a magic number: if (w.Bounce != 100) {  	velX = -velX * w.Bounce / 100;  	velY = (velY * 4) / 5;  }  else {  	velX = -velX;  }  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,Process,The following statement contains a magic number: if (w.Bounce != 100) {  	velX = -velX * w.Bounce / 100;  	velY = (velY * 4) / 5;  }  else {  	velX = -velX;  }  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,Process,The following statement contains a magic number: if (w.Bounce != 100) {  	velX = -velX * w.Bounce / 100;  	velY = (velY * 4) / 5;  }  else {  	velX = -velX;  }  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,Process,The following statement contains a magic number: if (w.Bounce != 100) {  	velX = -velX * w.Bounce / 100;  	velY = (velY * 4) / 5;  }  else {  	velX = -velX;  }  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,Process,The following statement contains a magic number: velX = -velX * w.Bounce / 100;  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,Process,The following statement contains a magic number: velY = (velY * 4) / 5;  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,Process,The following statement contains a magic number: velY = (velY * 4) / 5;  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,Process,The following statement contains a magic number: if (!game.leveldata.inside (ix' inewY) || game.leveldata.getPixel (ix' inewY) != PIXEL.empty) {  	if (w.Bounce != 100) {  		velY = -velY * w.Bounce / 100;  		velX = (velX * 4) / 5;  		// TODO: Read from EXE  	}  	else {  		velY = -velY;  	}  	bounced = true;  }  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,Process,The following statement contains a magic number: if (!game.leveldata.inside (ix' inewY) || game.leveldata.getPixel (ix' inewY) != PIXEL.empty) {  	if (w.Bounce != 100) {  		velY = -velY * w.Bounce / 100;  		velX = (velX * 4) / 5;  		// TODO: Read from EXE  	}  	else {  		velY = -velY;  	}  	bounced = true;  }  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,Process,The following statement contains a magic number: if (!game.leveldata.inside (ix' inewY) || game.leveldata.getPixel (ix' inewY) != PIXEL.empty) {  	if (w.Bounce != 100) {  		velY = -velY * w.Bounce / 100;  		velX = (velX * 4) / 5;  		// TODO: Read from EXE  	}  	else {  		velY = -velY;  	}  	bounced = true;  }  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,Process,The following statement contains a magic number: if (!game.leveldata.inside (ix' inewY) || game.leveldata.getPixel (ix' inewY) != PIXEL.empty) {  	if (w.Bounce != 100) {  		velY = -velY * w.Bounce / 100;  		velX = (velX * 4) / 5;  		// TODO: Read from EXE  	}  	else {  		velY = -velY;  	}  	bounced = true;  }  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,Process,The following statement contains a magic number: if (w.Bounce != 100) {  	velY = -velY * w.Bounce / 100;  	velX = (velX * 4) / 5;  	// TODO: Read from EXE  }  else {  	velY = -velY;  }  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,Process,The following statement contains a magic number: if (w.Bounce != 100) {  	velY = -velY * w.Bounce / 100;  	velX = (velX * 4) / 5;  	// TODO: Read from EXE  }  else {  	velY = -velY;  }  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,Process,The following statement contains a magic number: if (w.Bounce != 100) {  	velY = -velY * w.Bounce / 100;  	velX = (velX * 4) / 5;  	// TODO: Read from EXE  }  else {  	velY = -velY;  }  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,Process,The following statement contains a magic number: if (w.Bounce != 100) {  	velY = -velY * w.Bounce / 100;  	velX = (velX * 4) / 5;  	// TODO: Read from EXE  }  else {  	velY = -velY;  }  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,Process,The following statement contains a magic number: velY = -velY * w.Bounce / 100;  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,Process,The following statement contains a magic number: velX = (velX * 4) / 5;  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,Process,The following statement contains a magic number: velX = (velX * 4) / 5;  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,Process,The following statement contains a magic number: foreach (var worm in game.wormList) {  	if ((worm.id != this.firedbyid) && Worm.checkForSpecWormHit (game' inewX' inewY' 6' worm)) {  		for (var i = 0; i < 32; i++) {  			game.bloodlist.Add (new NObject (inewX' inewY' velX / 3' velY / 3));  		}  		doExplode = true;  	}  }  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,Process,The following statement contains a magic number: foreach (var worm in game.wormList) {  	if ((worm.id != this.firedbyid) && Worm.checkForSpecWormHit (game' inewX' inewY' 6' worm)) {  		for (var i = 0; i < 32; i++) {  			game.bloodlist.Add (new NObject (inewX' inewY' velX / 3' velY / 3));  		}  		doExplode = true;  	}  }  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,Process,The following statement contains a magic number: foreach (var worm in game.wormList) {  	if ((worm.id != this.firedbyid) && Worm.checkForSpecWormHit (game' inewX' inewY' 6' worm)) {  		for (var i = 0; i < 32; i++) {  			game.bloodlist.Add (new NObject (inewX' inewY' velX / 3' velY / 3));  		}  		doExplode = true;  	}  }  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,Process,The following statement contains a magic number: foreach (var worm in game.wormList) {  	if ((worm.id != this.firedbyid) && Worm.checkForSpecWormHit (game' inewX' inewY' 6' worm)) {  		for (var i = 0; i < 32; i++) {  			game.bloodlist.Add (new NObject (inewX' inewY' velX / 3' velY / 3));  		}  		doExplode = true;  	}  }  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,Process,The following statement contains a magic number: if ((worm.id != this.firedbyid) && Worm.checkForSpecWormHit (game' inewX' inewY' 6' worm)) {  	for (var i = 0; i < 32; i++) {  		game.bloodlist.Add (new NObject (inewX' inewY' velX / 3' velY / 3));  	}  	doExplode = true;  }  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,Process,The following statement contains a magic number: if ((worm.id != this.firedbyid) && Worm.checkForSpecWormHit (game' inewX' inewY' 6' worm)) {  	for (var i = 0; i < 32; i++) {  		game.bloodlist.Add (new NObject (inewX' inewY' velX / 3' velY / 3));  	}  	doExplode = true;  }  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,Process,The following statement contains a magic number: if ((worm.id != this.firedbyid) && Worm.checkForSpecWormHit (game' inewX' inewY' 6' worm)) {  	for (var i = 0; i < 32; i++) {  		game.bloodlist.Add (new NObject (inewX' inewY' velX / 3' velY / 3));  	}  	doExplode = true;  }  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,Process,The following statement contains a magic number: if ((worm.id != this.firedbyid) && Worm.checkForSpecWormHit (game' inewX' inewY' 6' worm)) {  	for (var i = 0; i < 32; i++) {  		game.bloodlist.Add (new NObject (inewX' inewY' velX / 3' velY / 3));  	}  	doExplode = true;  }  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,Process,The following statement contains a magic number: for (var i = 0; i < 32; i++) {  	game.bloodlist.Add (new NObject (inewX' inewY' velX / 3' velY / 3));  }  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,Process,The following statement contains a magic number: for (var i = 0; i < 32; i++) {  	game.bloodlist.Add (new NObject (inewX' inewY' velX / 3' velY / 3));  }  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,Process,The following statement contains a magic number: for (var i = 0; i < 32; i++) {  	game.bloodlist.Add (new NObject (inewX' inewY' velX / 3' velY / 3));  }  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,Process,The following statement contains a magic number: game.bloodlist.Add (new NObject (inewX' inewY' velX / 3' velY / 3));  
Magic Number,warlocks.Game,WObject,C:\repos\slofurno_warlocksr\warlocks\Game\WObject.cs,Process,The following statement contains a magic number: game.bloodlist.Add (new NObject (inewX' inewY' velX / 3' velY / 3));  
Magic Number,warlocks.Game,Projectile,C:\repos\slofurno_warlocksr\warlocks\Game\Warlocks.cs,Projectile,The following statement contains a magic number: this._velocity = 6;  
Magic Number,warlocks.Game,Projectile,C:\repos\slofurno_warlocksr\warlocks\Game\Warlocks.cs,Projectile,The following statement contains a magic number: this.radius = 30;  
Magic Number,warlocks.Game,Projectile,C:\repos\slofurno_warlocksr\warlocks\Game\Warlocks.cs,Projectile,The following statement contains a magic number: this.range = 300;  
Magic Number,warlocks.Game,Common,C:\repos\slofurno_warlocksr\warlocks\Game\Weapon.cs,Common,The following statement contains a magic number: Weapons = new Weapon[] {  	new Weapon () {  		Bounce = 60'  		timeToExplosion = 200'  		Id = 0'  		explosionRadius = 20'  		gravity = .05'  		splinterAmount = 100'  		velocity = 2  	}'  	new Weapon () {  		Bounce = 0'  		Id = 1'  		explosionRadius = 3'  		gravity = 0'  		velocity = 5  	}'  	new Weapon () {  		Bounce = 0'  		timeToExplosion = 40'  		Id = 2'  		explosionRadius = 20'  		gravity = .02'  		splinterAmount = 6'  		velocity = 4  	}'  };  
Magic Number,warlocks.Game,Common,C:\repos\slofurno_warlocksr\warlocks\Game\Weapon.cs,Common,The following statement contains a magic number: Weapons = new Weapon[] {  	new Weapon () {  		Bounce = 60'  		timeToExplosion = 200'  		Id = 0'  		explosionRadius = 20'  		gravity = .05'  		splinterAmount = 100'  		velocity = 2  	}'  	new Weapon () {  		Bounce = 0'  		Id = 1'  		explosionRadius = 3'  		gravity = 0'  		velocity = 5  	}'  	new Weapon () {  		Bounce = 0'  		timeToExplosion = 40'  		Id = 2'  		explosionRadius = 20'  		gravity = .02'  		splinterAmount = 6'  		velocity = 4  	}'  };  
Magic Number,warlocks.Game,Common,C:\repos\slofurno_warlocksr\warlocks\Game\Weapon.cs,Common,The following statement contains a magic number: Weapons = new Weapon[] {  	new Weapon () {  		Bounce = 60'  		timeToExplosion = 200'  		Id = 0'  		explosionRadius = 20'  		gravity = .05'  		splinterAmount = 100'  		velocity = 2  	}'  	new Weapon () {  		Bounce = 0'  		Id = 1'  		explosionRadius = 3'  		gravity = 0'  		velocity = 5  	}'  	new Weapon () {  		Bounce = 0'  		timeToExplosion = 40'  		Id = 2'  		explosionRadius = 20'  		gravity = .02'  		splinterAmount = 6'  		velocity = 4  	}'  };  
Magic Number,warlocks.Game,Common,C:\repos\slofurno_warlocksr\warlocks\Game\Weapon.cs,Common,The following statement contains a magic number: Weapons = new Weapon[] {  	new Weapon () {  		Bounce = 60'  		timeToExplosion = 200'  		Id = 0'  		explosionRadius = 20'  		gravity = .05'  		splinterAmount = 100'  		velocity = 2  	}'  	new Weapon () {  		Bounce = 0'  		Id = 1'  		explosionRadius = 3'  		gravity = 0'  		velocity = 5  	}'  	new Weapon () {  		Bounce = 0'  		timeToExplosion = 40'  		Id = 2'  		explosionRadius = 20'  		gravity = .02'  		splinterAmount = 6'  		velocity = 4  	}'  };  
Magic Number,warlocks.Game,Common,C:\repos\slofurno_warlocksr\warlocks\Game\Weapon.cs,Common,The following statement contains a magic number: Weapons = new Weapon[] {  	new Weapon () {  		Bounce = 60'  		timeToExplosion = 200'  		Id = 0'  		explosionRadius = 20'  		gravity = .05'  		splinterAmount = 100'  		velocity = 2  	}'  	new Weapon () {  		Bounce = 0'  		Id = 1'  		explosionRadius = 3'  		gravity = 0'  		velocity = 5  	}'  	new Weapon () {  		Bounce = 0'  		timeToExplosion = 40'  		Id = 2'  		explosionRadius = 20'  		gravity = .02'  		splinterAmount = 6'  		velocity = 4  	}'  };  
Magic Number,warlocks.Game,Common,C:\repos\slofurno_warlocksr\warlocks\Game\Weapon.cs,Common,The following statement contains a magic number: Weapons = new Weapon[] {  	new Weapon () {  		Bounce = 60'  		timeToExplosion = 200'  		Id = 0'  		explosionRadius = 20'  		gravity = .05'  		splinterAmount = 100'  		velocity = 2  	}'  	new Weapon () {  		Bounce = 0'  		Id = 1'  		explosionRadius = 3'  		gravity = 0'  		velocity = 5  	}'  	new Weapon () {  		Bounce = 0'  		timeToExplosion = 40'  		Id = 2'  		explosionRadius = 20'  		gravity = .02'  		splinterAmount = 6'  		velocity = 4  	}'  };  
Magic Number,warlocks.Game,Common,C:\repos\slofurno_warlocksr\warlocks\Game\Weapon.cs,Common,The following statement contains a magic number: Weapons = new Weapon[] {  	new Weapon () {  		Bounce = 60'  		timeToExplosion = 200'  		Id = 0'  		explosionRadius = 20'  		gravity = .05'  		splinterAmount = 100'  		velocity = 2  	}'  	new Weapon () {  		Bounce = 0'  		Id = 1'  		explosionRadius = 3'  		gravity = 0'  		velocity = 5  	}'  	new Weapon () {  		Bounce = 0'  		timeToExplosion = 40'  		Id = 2'  		explosionRadius = 20'  		gravity = .02'  		splinterAmount = 6'  		velocity = 4  	}'  };  
Magic Number,warlocks.Game,Common,C:\repos\slofurno_warlocksr\warlocks\Game\Weapon.cs,Common,The following statement contains a magic number: Weapons = new Weapon[] {  	new Weapon () {  		Bounce = 60'  		timeToExplosion = 200'  		Id = 0'  		explosionRadius = 20'  		gravity = .05'  		splinterAmount = 100'  		velocity = 2  	}'  	new Weapon () {  		Bounce = 0'  		Id = 1'  		explosionRadius = 3'  		gravity = 0'  		velocity = 5  	}'  	new Weapon () {  		Bounce = 0'  		timeToExplosion = 40'  		Id = 2'  		explosionRadius = 20'  		gravity = .02'  		splinterAmount = 6'  		velocity = 4  	}'  };  
Magic Number,warlocks.Game,Common,C:\repos\slofurno_warlocksr\warlocks\Game\Weapon.cs,Common,The following statement contains a magic number: Weapons = new Weapon[] {  	new Weapon () {  		Bounce = 60'  		timeToExplosion = 200'  		Id = 0'  		explosionRadius = 20'  		gravity = .05'  		splinterAmount = 100'  		velocity = 2  	}'  	new Weapon () {  		Bounce = 0'  		Id = 1'  		explosionRadius = 3'  		gravity = 0'  		velocity = 5  	}'  	new Weapon () {  		Bounce = 0'  		timeToExplosion = 40'  		Id = 2'  		explosionRadius = 20'  		gravity = .02'  		splinterAmount = 6'  		velocity = 4  	}'  };  
Magic Number,warlocks.Game,Common,C:\repos\slofurno_warlocksr\warlocks\Game\Weapon.cs,Common,The following statement contains a magic number: Weapons = new Weapon[] {  	new Weapon () {  		Bounce = 60'  		timeToExplosion = 200'  		Id = 0'  		explosionRadius = 20'  		gravity = .05'  		splinterAmount = 100'  		velocity = 2  	}'  	new Weapon () {  		Bounce = 0'  		Id = 1'  		explosionRadius = 3'  		gravity = 0'  		velocity = 5  	}'  	new Weapon () {  		Bounce = 0'  		timeToExplosion = 40'  		Id = 2'  		explosionRadius = 20'  		gravity = .02'  		splinterAmount = 6'  		velocity = 4  	}'  };  
Magic Number,warlocks.Game,Common,C:\repos\slofurno_warlocksr\warlocks\Game\Weapon.cs,Common,The following statement contains a magic number: Weapons = new Weapon[] {  	new Weapon () {  		Bounce = 60'  		timeToExplosion = 200'  		Id = 0'  		explosionRadius = 20'  		gravity = .05'  		splinterAmount = 100'  		velocity = 2  	}'  	new Weapon () {  		Bounce = 0'  		Id = 1'  		explosionRadius = 3'  		gravity = 0'  		velocity = 5  	}'  	new Weapon () {  		Bounce = 0'  		timeToExplosion = 40'  		Id = 2'  		explosionRadius = 20'  		gravity = .02'  		splinterAmount = 6'  		velocity = 4  	}'  };  
Magic Number,warlocks.Game,Common,C:\repos\slofurno_warlocksr\warlocks\Game\Weapon.cs,Common,The following statement contains a magic number: Weapons = new Weapon[] {  	new Weapon () {  		Bounce = 60'  		timeToExplosion = 200'  		Id = 0'  		explosionRadius = 20'  		gravity = .05'  		splinterAmount = 100'  		velocity = 2  	}'  	new Weapon () {  		Bounce = 0'  		Id = 1'  		explosionRadius = 3'  		gravity = 0'  		velocity = 5  	}'  	new Weapon () {  		Bounce = 0'  		timeToExplosion = 40'  		Id = 2'  		explosionRadius = 20'  		gravity = .02'  		splinterAmount = 6'  		velocity = 4  	}'  };  
Magic Number,warlocks.Game,Common,C:\repos\slofurno_warlocksr\warlocks\Game\Weapon.cs,Common,The following statement contains a magic number: Weapons = new Weapon[] {  	new Weapon () {  		Bounce = 60'  		timeToExplosion = 200'  		Id = 0'  		explosionRadius = 20'  		gravity = .05'  		splinterAmount = 100'  		velocity = 2  	}'  	new Weapon () {  		Bounce = 0'  		Id = 1'  		explosionRadius = 3'  		gravity = 0'  		velocity = 5  	}'  	new Weapon () {  		Bounce = 0'  		timeToExplosion = 40'  		Id = 2'  		explosionRadius = 20'  		gravity = .02'  		splinterAmount = 6'  		velocity = 4  	}'  };  
Magic Number,warlocks.Game,Common,C:\repos\slofurno_warlocksr\warlocks\Game\Weapon.cs,Common,The following statement contains a magic number: Weapons = new Weapon[] {  	new Weapon () {  		Bounce = 60'  		timeToExplosion = 200'  		Id = 0'  		explosionRadius = 20'  		gravity = .05'  		splinterAmount = 100'  		velocity = 2  	}'  	new Weapon () {  		Bounce = 0'  		Id = 1'  		explosionRadius = 3'  		gravity = 0'  		velocity = 5  	}'  	new Weapon () {  		Bounce = 0'  		timeToExplosion = 40'  		Id = 2'  		explosionRadius = 20'  		gravity = .02'  		splinterAmount = 6'  		velocity = 4  	}'  };  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,Worm,The following statement contains a magic number: this.position = new Vector2 (600' 300);  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,Worm,The following statement contains a magic number: this.position = new Vector2 (600' 300);  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processPhysics,The following statement contains a magic number: if (reacts [RF.Up] > 0) {  	velX = (velX / 2);  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processPhysics,The following statement contains a magic number: velX = (velX / 2);  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processPhysics,The following statement contains a magic number: if (velX > 0) {  	if (reacts [RF.Left] > 0) {  		if (velX > 3) {  			velX = -velX / 3;  		}  		else  			velX = 0;  	}  }  else if (velX < 0) {  	if (reacts [RF.Right] > 0) {  		if (velX < -3) {  			velX = -velX / 3;  		}  		else  			velX = 0;  	}  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processPhysics,The following statement contains a magic number: if (velX > 0) {  	if (reacts [RF.Left] > 0) {  		if (velX > 3) {  			velX = -velX / 3;  		}  		else  			velX = 0;  	}  }  else if (velX < 0) {  	if (reacts [RF.Right] > 0) {  		if (velX < -3) {  			velX = -velX / 3;  		}  		else  			velX = 0;  	}  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processPhysics,The following statement contains a magic number: if (velX > 0) {  	if (reacts [RF.Left] > 0) {  		if (velX > 3) {  			velX = -velX / 3;  		}  		else  			velX = 0;  	}  }  else if (velX < 0) {  	if (reacts [RF.Right] > 0) {  		if (velX < -3) {  			velX = -velX / 3;  		}  		else  			velX = 0;  	}  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processPhysics,The following statement contains a magic number: if (velX > 0) {  	if (reacts [RF.Left] > 0) {  		if (velX > 3) {  			velX = -velX / 3;  		}  		else  			velX = 0;  	}  }  else if (velX < 0) {  	if (reacts [RF.Right] > 0) {  		if (velX < -3) {  			velX = -velX / 3;  		}  		else  			velX = 0;  	}  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processPhysics,The following statement contains a magic number: if (reacts [RF.Left] > 0) {  	if (velX > 3) {  		velX = -velX / 3;  	}  	else  		velX = 0;  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processPhysics,The following statement contains a magic number: if (reacts [RF.Left] > 0) {  	if (velX > 3) {  		velX = -velX / 3;  	}  	else  		velX = 0;  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processPhysics,The following statement contains a magic number: if (velX > 3) {  	velX = -velX / 3;  }  else  	velX = 0;  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processPhysics,The following statement contains a magic number: if (velX > 3) {  	velX = -velX / 3;  }  else  	velX = 0;  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processPhysics,The following statement contains a magic number: velX = -velX / 3;  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processPhysics,The following statement contains a magic number: if (velX < 0) {  	if (reacts [RF.Right] > 0) {  		if (velX < -3) {  			velX = -velX / 3;  		}  		else  			velX = 0;  	}  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processPhysics,The following statement contains a magic number: if (velX < 0) {  	if (reacts [RF.Right] > 0) {  		if (velX < -3) {  			velX = -velX / 3;  		}  		else  			velX = 0;  	}  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processPhysics,The following statement contains a magic number: if (reacts [RF.Right] > 0) {  	if (velX < -3) {  		velX = -velX / 3;  	}  	else  		velX = 0;  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processPhysics,The following statement contains a magic number: if (reacts [RF.Right] > 0) {  	if (velX < -3) {  		velX = -velX / 3;  	}  	else  		velX = 0;  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processPhysics,The following statement contains a magic number: if (velX < -3) {  	velX = -velX / 3;  }  else  	velX = 0;  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processPhysics,The following statement contains a magic number: if (velX < -3) {  	velX = -velX / 3;  }  else  	velX = 0;  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processPhysics,The following statement contains a magic number: velX = -velX / 3;  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processPhysics,The following statement contains a magic number: if (velY > 0) {  	if (reacts [RF.Up] > 0) {  		if (velY > 3) {  			velY = -velY / 3;  		}  		else  			velY = 0;  	}  }  else if (velY < 0) {  	if (reacts [RF.Down] > 0) {  		if (velY < -3) {  			velY = -velY / 3;  		}  		else  			velY = 0;  	}  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processPhysics,The following statement contains a magic number: if (velY > 0) {  	if (reacts [RF.Up] > 0) {  		if (velY > 3) {  			velY = -velY / 3;  		}  		else  			velY = 0;  	}  }  else if (velY < 0) {  	if (reacts [RF.Down] > 0) {  		if (velY < -3) {  			velY = -velY / 3;  		}  		else  			velY = 0;  	}  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processPhysics,The following statement contains a magic number: if (velY > 0) {  	if (reacts [RF.Up] > 0) {  		if (velY > 3) {  			velY = -velY / 3;  		}  		else  			velY = 0;  	}  }  else if (velY < 0) {  	if (reacts [RF.Down] > 0) {  		if (velY < -3) {  			velY = -velY / 3;  		}  		else  			velY = 0;  	}  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processPhysics,The following statement contains a magic number: if (velY > 0) {  	if (reacts [RF.Up] > 0) {  		if (velY > 3) {  			velY = -velY / 3;  		}  		else  			velY = 0;  	}  }  else if (velY < 0) {  	if (reacts [RF.Down] > 0) {  		if (velY < -3) {  			velY = -velY / 3;  		}  		else  			velY = 0;  	}  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processPhysics,The following statement contains a magic number: if (reacts [RF.Up] > 0) {  	if (velY > 3) {  		velY = -velY / 3;  	}  	else  		velY = 0;  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processPhysics,The following statement contains a magic number: if (reacts [RF.Up] > 0) {  	if (velY > 3) {  		velY = -velY / 3;  	}  	else  		velY = 0;  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processPhysics,The following statement contains a magic number: if (velY > 3) {  	velY = -velY / 3;  }  else  	velY = 0;  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processPhysics,The following statement contains a magic number: if (velY > 3) {  	velY = -velY / 3;  }  else  	velY = 0;  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processPhysics,The following statement contains a magic number: velY = -velY / 3;  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processPhysics,The following statement contains a magic number: if (velY < 0) {  	if (reacts [RF.Down] > 0) {  		if (velY < -3) {  			velY = -velY / 3;  		}  		else  			velY = 0;  	}  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processPhysics,The following statement contains a magic number: if (velY < 0) {  	if (reacts [RF.Down] > 0) {  		if (velY < -3) {  			velY = -velY / 3;  		}  		else  			velY = 0;  	}  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processPhysics,The following statement contains a magic number: if (reacts [RF.Down] > 0) {  	if (velY < -3) {  		velY = -velY / 3;  	}  	else  		velY = 0;  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processPhysics,The following statement contains a magic number: if (reacts [RF.Down] > 0) {  	if (velY < -3) {  		velY = -velY / 3;  	}  	else  		velY = 0;  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processPhysics,The following statement contains a magic number: if (velY < -3) {  	velY = -velY / 3;  }  else  	velY = 0;  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processPhysics,The following statement contains a magic number: if (velY < -3) {  	velY = -velY / 3;  }  else  	velY = 0;  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processPhysics,The following statement contains a magic number: velY = -velY / 3;  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processPhysics,The following statement contains a magic number: if (reacts [RF.Up] == 0) {  	velY += .2;  	//GRAVITY  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processPhysics,The following statement contains a magic number: velY += .2;  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processPhysics,The following statement contains a magic number: if (velX >= 0) {  	if (reacts [RF.Left] < 2)  		x += velX;  }  else {  	if (reacts [RF.Right] < 2)  		x += velX;  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processPhysics,The following statement contains a magic number: if (velX >= 0) {  	if (reacts [RF.Left] < 2)  		x += velX;  }  else {  	if (reacts [RF.Right] < 2)  		x += velX;  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processPhysics,The following statement contains a magic number: if (reacts [RF.Left] < 2)  	x += velX;  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processPhysics,The following statement contains a magic number: if (reacts [RF.Right] < 2)  	x += velX;  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processPhysics,The following statement contains a magic number: if (velY >= 0) {  	if (reacts [RF.Up] < 2)  		y += velY;  }  else {  	if (reacts [RF.Down] < 2)  		y += velY;  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processPhysics,The following statement contains a magic number: if (velY >= 0) {  	if (reacts [RF.Up] < 2)  		y += velY;  }  else {  	if (reacts [RF.Down] < 2)  		y += velY;  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processPhysics,The following statement contains a magic number: if (reacts [RF.Up] < 2)  	y += velY;  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processPhysics,The following statement contains a magic number: if (reacts [RF.Down] < 2)  	y += velY;  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processMovement,The following statement contains a magic number: if (movable) {  	bool left = (command.Buttons & Buttons.LEFT) == Buttons.LEFT;  	bool right = (command.Buttons & Buttons.RIGHT) == Buttons.RIGHT;  	bool jump = (command.Buttons & Buttons.JUMP) == Buttons.JUMP;  	bool dig = (command.Buttons & Buttons.DIG) == Buttons.DIG;  	bool ropeshoot = (command.Buttons & Buttons.ROPE) == Buttons.ROPE;  	bool up = (command.Buttons & Buttons.UP) == Buttons.UP;  	bool down = (command.Buttons & Buttons.DOWN) == Buttons.DOWN;  	if (left) {  		if (this.velocity.X >= -1.5) {  			this.velocity.X -= 1.5;  		}  	}  	if (right) {  		if (this.velocity.X <= 1.5) {  			this.velocity.X += 1.5;  		}  	}  	if (dig) {  		int digx = (int)(this.position.X + this.view.X * 12);  		int digy = (int)(this.position.Y + this.view.Y * 12);  		int iposx = (int)this.position.X;  		int iposy = (int)this.position.Y;  		game.leveldata.setPixels (digx' digy' 7' 0);  	}  	if (jump) {  		ninjarope.isout = false;  		ninjarope.attached = false;  		if ((reacts [RF.Up] > 0) && (ableToJump)) {  			this.velocity.Y -= 4;  			ableToJump = false;  		}  	}  	else  		ableToJump = true;  	if (ninjarope.isout) {  		if (up)  			ninjarope.length -= 1;  		if (down)  			ninjarope.length += 1;  		if (ninjarope.length < 1)  			ninjarope.length = 1;  		if (ninjarope.length > 600)  			ninjarope.length = 600;  	}  	if (ropeshoot) {  		if (this.ableToRope) {  			this.ableToRope = false;  			ninjarope.isout = true;  			ninjarope.attached = false;  			ninjarope.x = this.position.X;  			ninjarope.y = this.position.Y;  			ninjarope.velX = this.view.X * 4;  			ninjarope.velY = this.view.Y * 4;  			ninjarope.length = 20;  		}  	}  	else {  		this.ableToRope = true;  	}  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processMovement,The following statement contains a magic number: if (movable) {  	bool left = (command.Buttons & Buttons.LEFT) == Buttons.LEFT;  	bool right = (command.Buttons & Buttons.RIGHT) == Buttons.RIGHT;  	bool jump = (command.Buttons & Buttons.JUMP) == Buttons.JUMP;  	bool dig = (command.Buttons & Buttons.DIG) == Buttons.DIG;  	bool ropeshoot = (command.Buttons & Buttons.ROPE) == Buttons.ROPE;  	bool up = (command.Buttons & Buttons.UP) == Buttons.UP;  	bool down = (command.Buttons & Buttons.DOWN) == Buttons.DOWN;  	if (left) {  		if (this.velocity.X >= -1.5) {  			this.velocity.X -= 1.5;  		}  	}  	if (right) {  		if (this.velocity.X <= 1.5) {  			this.velocity.X += 1.5;  		}  	}  	if (dig) {  		int digx = (int)(this.position.X + this.view.X * 12);  		int digy = (int)(this.position.Y + this.view.Y * 12);  		int iposx = (int)this.position.X;  		int iposy = (int)this.position.Y;  		game.leveldata.setPixels (digx' digy' 7' 0);  	}  	if (jump) {  		ninjarope.isout = false;  		ninjarope.attached = false;  		if ((reacts [RF.Up] > 0) && (ableToJump)) {  			this.velocity.Y -= 4;  			ableToJump = false;  		}  	}  	else  		ableToJump = true;  	if (ninjarope.isout) {  		if (up)  			ninjarope.length -= 1;  		if (down)  			ninjarope.length += 1;  		if (ninjarope.length < 1)  			ninjarope.length = 1;  		if (ninjarope.length > 600)  			ninjarope.length = 600;  	}  	if (ropeshoot) {  		if (this.ableToRope) {  			this.ableToRope = false;  			ninjarope.isout = true;  			ninjarope.attached = false;  			ninjarope.x = this.position.X;  			ninjarope.y = this.position.Y;  			ninjarope.velX = this.view.X * 4;  			ninjarope.velY = this.view.Y * 4;  			ninjarope.length = 20;  		}  	}  	else {  		this.ableToRope = true;  	}  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processMovement,The following statement contains a magic number: if (movable) {  	bool left = (command.Buttons & Buttons.LEFT) == Buttons.LEFT;  	bool right = (command.Buttons & Buttons.RIGHT) == Buttons.RIGHT;  	bool jump = (command.Buttons & Buttons.JUMP) == Buttons.JUMP;  	bool dig = (command.Buttons & Buttons.DIG) == Buttons.DIG;  	bool ropeshoot = (command.Buttons & Buttons.ROPE) == Buttons.ROPE;  	bool up = (command.Buttons & Buttons.UP) == Buttons.UP;  	bool down = (command.Buttons & Buttons.DOWN) == Buttons.DOWN;  	if (left) {  		if (this.velocity.X >= -1.5) {  			this.velocity.X -= 1.5;  		}  	}  	if (right) {  		if (this.velocity.X <= 1.5) {  			this.velocity.X += 1.5;  		}  	}  	if (dig) {  		int digx = (int)(this.position.X + this.view.X * 12);  		int digy = (int)(this.position.Y + this.view.Y * 12);  		int iposx = (int)this.position.X;  		int iposy = (int)this.position.Y;  		game.leveldata.setPixels (digx' digy' 7' 0);  	}  	if (jump) {  		ninjarope.isout = false;  		ninjarope.attached = false;  		if ((reacts [RF.Up] > 0) && (ableToJump)) {  			this.velocity.Y -= 4;  			ableToJump = false;  		}  	}  	else  		ableToJump = true;  	if (ninjarope.isout) {  		if (up)  			ninjarope.length -= 1;  		if (down)  			ninjarope.length += 1;  		if (ninjarope.length < 1)  			ninjarope.length = 1;  		if (ninjarope.length > 600)  			ninjarope.length = 600;  	}  	if (ropeshoot) {  		if (this.ableToRope) {  			this.ableToRope = false;  			ninjarope.isout = true;  			ninjarope.attached = false;  			ninjarope.x = this.position.X;  			ninjarope.y = this.position.Y;  			ninjarope.velX = this.view.X * 4;  			ninjarope.velY = this.view.Y * 4;  			ninjarope.length = 20;  		}  	}  	else {  		this.ableToRope = true;  	}  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processMovement,The following statement contains a magic number: if (movable) {  	bool left = (command.Buttons & Buttons.LEFT) == Buttons.LEFT;  	bool right = (command.Buttons & Buttons.RIGHT) == Buttons.RIGHT;  	bool jump = (command.Buttons & Buttons.JUMP) == Buttons.JUMP;  	bool dig = (command.Buttons & Buttons.DIG) == Buttons.DIG;  	bool ropeshoot = (command.Buttons & Buttons.ROPE) == Buttons.ROPE;  	bool up = (command.Buttons & Buttons.UP) == Buttons.UP;  	bool down = (command.Buttons & Buttons.DOWN) == Buttons.DOWN;  	if (left) {  		if (this.velocity.X >= -1.5) {  			this.velocity.X -= 1.5;  		}  	}  	if (right) {  		if (this.velocity.X <= 1.5) {  			this.velocity.X += 1.5;  		}  	}  	if (dig) {  		int digx = (int)(this.position.X + this.view.X * 12);  		int digy = (int)(this.position.Y + this.view.Y * 12);  		int iposx = (int)this.position.X;  		int iposy = (int)this.position.Y;  		game.leveldata.setPixels (digx' digy' 7' 0);  	}  	if (jump) {  		ninjarope.isout = false;  		ninjarope.attached = false;  		if ((reacts [RF.Up] > 0) && (ableToJump)) {  			this.velocity.Y -= 4;  			ableToJump = false;  		}  	}  	else  		ableToJump = true;  	if (ninjarope.isout) {  		if (up)  			ninjarope.length -= 1;  		if (down)  			ninjarope.length += 1;  		if (ninjarope.length < 1)  			ninjarope.length = 1;  		if (ninjarope.length > 600)  			ninjarope.length = 600;  	}  	if (ropeshoot) {  		if (this.ableToRope) {  			this.ableToRope = false;  			ninjarope.isout = true;  			ninjarope.attached = false;  			ninjarope.x = this.position.X;  			ninjarope.y = this.position.Y;  			ninjarope.velX = this.view.X * 4;  			ninjarope.velY = this.view.Y * 4;  			ninjarope.length = 20;  		}  	}  	else {  		this.ableToRope = true;  	}  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processMovement,The following statement contains a magic number: if (movable) {  	bool left = (command.Buttons & Buttons.LEFT) == Buttons.LEFT;  	bool right = (command.Buttons & Buttons.RIGHT) == Buttons.RIGHT;  	bool jump = (command.Buttons & Buttons.JUMP) == Buttons.JUMP;  	bool dig = (command.Buttons & Buttons.DIG) == Buttons.DIG;  	bool ropeshoot = (command.Buttons & Buttons.ROPE) == Buttons.ROPE;  	bool up = (command.Buttons & Buttons.UP) == Buttons.UP;  	bool down = (command.Buttons & Buttons.DOWN) == Buttons.DOWN;  	if (left) {  		if (this.velocity.X >= -1.5) {  			this.velocity.X -= 1.5;  		}  	}  	if (right) {  		if (this.velocity.X <= 1.5) {  			this.velocity.X += 1.5;  		}  	}  	if (dig) {  		int digx = (int)(this.position.X + this.view.X * 12);  		int digy = (int)(this.position.Y + this.view.Y * 12);  		int iposx = (int)this.position.X;  		int iposy = (int)this.position.Y;  		game.leveldata.setPixels (digx' digy' 7' 0);  	}  	if (jump) {  		ninjarope.isout = false;  		ninjarope.attached = false;  		if ((reacts [RF.Up] > 0) && (ableToJump)) {  			this.velocity.Y -= 4;  			ableToJump = false;  		}  	}  	else  		ableToJump = true;  	if (ninjarope.isout) {  		if (up)  			ninjarope.length -= 1;  		if (down)  			ninjarope.length += 1;  		if (ninjarope.length < 1)  			ninjarope.length = 1;  		if (ninjarope.length > 600)  			ninjarope.length = 600;  	}  	if (ropeshoot) {  		if (this.ableToRope) {  			this.ableToRope = false;  			ninjarope.isout = true;  			ninjarope.attached = false;  			ninjarope.x = this.position.X;  			ninjarope.y = this.position.Y;  			ninjarope.velX = this.view.X * 4;  			ninjarope.velY = this.view.Y * 4;  			ninjarope.length = 20;  		}  	}  	else {  		this.ableToRope = true;  	}  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processMovement,The following statement contains a magic number: if (movable) {  	bool left = (command.Buttons & Buttons.LEFT) == Buttons.LEFT;  	bool right = (command.Buttons & Buttons.RIGHT) == Buttons.RIGHT;  	bool jump = (command.Buttons & Buttons.JUMP) == Buttons.JUMP;  	bool dig = (command.Buttons & Buttons.DIG) == Buttons.DIG;  	bool ropeshoot = (command.Buttons & Buttons.ROPE) == Buttons.ROPE;  	bool up = (command.Buttons & Buttons.UP) == Buttons.UP;  	bool down = (command.Buttons & Buttons.DOWN) == Buttons.DOWN;  	if (left) {  		if (this.velocity.X >= -1.5) {  			this.velocity.X -= 1.5;  		}  	}  	if (right) {  		if (this.velocity.X <= 1.5) {  			this.velocity.X += 1.5;  		}  	}  	if (dig) {  		int digx = (int)(this.position.X + this.view.X * 12);  		int digy = (int)(this.position.Y + this.view.Y * 12);  		int iposx = (int)this.position.X;  		int iposy = (int)this.position.Y;  		game.leveldata.setPixels (digx' digy' 7' 0);  	}  	if (jump) {  		ninjarope.isout = false;  		ninjarope.attached = false;  		if ((reacts [RF.Up] > 0) && (ableToJump)) {  			this.velocity.Y -= 4;  			ableToJump = false;  		}  	}  	else  		ableToJump = true;  	if (ninjarope.isout) {  		if (up)  			ninjarope.length -= 1;  		if (down)  			ninjarope.length += 1;  		if (ninjarope.length < 1)  			ninjarope.length = 1;  		if (ninjarope.length > 600)  			ninjarope.length = 600;  	}  	if (ropeshoot) {  		if (this.ableToRope) {  			this.ableToRope = false;  			ninjarope.isout = true;  			ninjarope.attached = false;  			ninjarope.x = this.position.X;  			ninjarope.y = this.position.Y;  			ninjarope.velX = this.view.X * 4;  			ninjarope.velY = this.view.Y * 4;  			ninjarope.length = 20;  		}  	}  	else {  		this.ableToRope = true;  	}  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processMovement,The following statement contains a magic number: if (movable) {  	bool left = (command.Buttons & Buttons.LEFT) == Buttons.LEFT;  	bool right = (command.Buttons & Buttons.RIGHT) == Buttons.RIGHT;  	bool jump = (command.Buttons & Buttons.JUMP) == Buttons.JUMP;  	bool dig = (command.Buttons & Buttons.DIG) == Buttons.DIG;  	bool ropeshoot = (command.Buttons & Buttons.ROPE) == Buttons.ROPE;  	bool up = (command.Buttons & Buttons.UP) == Buttons.UP;  	bool down = (command.Buttons & Buttons.DOWN) == Buttons.DOWN;  	if (left) {  		if (this.velocity.X >= -1.5) {  			this.velocity.X -= 1.5;  		}  	}  	if (right) {  		if (this.velocity.X <= 1.5) {  			this.velocity.X += 1.5;  		}  	}  	if (dig) {  		int digx = (int)(this.position.X + this.view.X * 12);  		int digy = (int)(this.position.Y + this.view.Y * 12);  		int iposx = (int)this.position.X;  		int iposy = (int)this.position.Y;  		game.leveldata.setPixels (digx' digy' 7' 0);  	}  	if (jump) {  		ninjarope.isout = false;  		ninjarope.attached = false;  		if ((reacts [RF.Up] > 0) && (ableToJump)) {  			this.velocity.Y -= 4;  			ableToJump = false;  		}  	}  	else  		ableToJump = true;  	if (ninjarope.isout) {  		if (up)  			ninjarope.length -= 1;  		if (down)  			ninjarope.length += 1;  		if (ninjarope.length < 1)  			ninjarope.length = 1;  		if (ninjarope.length > 600)  			ninjarope.length = 600;  	}  	if (ropeshoot) {  		if (this.ableToRope) {  			this.ableToRope = false;  			ninjarope.isout = true;  			ninjarope.attached = false;  			ninjarope.x = this.position.X;  			ninjarope.y = this.position.Y;  			ninjarope.velX = this.view.X * 4;  			ninjarope.velY = this.view.Y * 4;  			ninjarope.length = 20;  		}  	}  	else {  		this.ableToRope = true;  	}  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processMovement,The following statement contains a magic number: if (movable) {  	bool left = (command.Buttons & Buttons.LEFT) == Buttons.LEFT;  	bool right = (command.Buttons & Buttons.RIGHT) == Buttons.RIGHT;  	bool jump = (command.Buttons & Buttons.JUMP) == Buttons.JUMP;  	bool dig = (command.Buttons & Buttons.DIG) == Buttons.DIG;  	bool ropeshoot = (command.Buttons & Buttons.ROPE) == Buttons.ROPE;  	bool up = (command.Buttons & Buttons.UP) == Buttons.UP;  	bool down = (command.Buttons & Buttons.DOWN) == Buttons.DOWN;  	if (left) {  		if (this.velocity.X >= -1.5) {  			this.velocity.X -= 1.5;  		}  	}  	if (right) {  		if (this.velocity.X <= 1.5) {  			this.velocity.X += 1.5;  		}  	}  	if (dig) {  		int digx = (int)(this.position.X + this.view.X * 12);  		int digy = (int)(this.position.Y + this.view.Y * 12);  		int iposx = (int)this.position.X;  		int iposy = (int)this.position.Y;  		game.leveldata.setPixels (digx' digy' 7' 0);  	}  	if (jump) {  		ninjarope.isout = false;  		ninjarope.attached = false;  		if ((reacts [RF.Up] > 0) && (ableToJump)) {  			this.velocity.Y -= 4;  			ableToJump = false;  		}  	}  	else  		ableToJump = true;  	if (ninjarope.isout) {  		if (up)  			ninjarope.length -= 1;  		if (down)  			ninjarope.length += 1;  		if (ninjarope.length < 1)  			ninjarope.length = 1;  		if (ninjarope.length > 600)  			ninjarope.length = 600;  	}  	if (ropeshoot) {  		if (this.ableToRope) {  			this.ableToRope = false;  			ninjarope.isout = true;  			ninjarope.attached = false;  			ninjarope.x = this.position.X;  			ninjarope.y = this.position.Y;  			ninjarope.velX = this.view.X * 4;  			ninjarope.velY = this.view.Y * 4;  			ninjarope.length = 20;  		}  	}  	else {  		this.ableToRope = true;  	}  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processMovement,The following statement contains a magic number: if (movable) {  	bool left = (command.Buttons & Buttons.LEFT) == Buttons.LEFT;  	bool right = (command.Buttons & Buttons.RIGHT) == Buttons.RIGHT;  	bool jump = (command.Buttons & Buttons.JUMP) == Buttons.JUMP;  	bool dig = (command.Buttons & Buttons.DIG) == Buttons.DIG;  	bool ropeshoot = (command.Buttons & Buttons.ROPE) == Buttons.ROPE;  	bool up = (command.Buttons & Buttons.UP) == Buttons.UP;  	bool down = (command.Buttons & Buttons.DOWN) == Buttons.DOWN;  	if (left) {  		if (this.velocity.X >= -1.5) {  			this.velocity.X -= 1.5;  		}  	}  	if (right) {  		if (this.velocity.X <= 1.5) {  			this.velocity.X += 1.5;  		}  	}  	if (dig) {  		int digx = (int)(this.position.X + this.view.X * 12);  		int digy = (int)(this.position.Y + this.view.Y * 12);  		int iposx = (int)this.position.X;  		int iposy = (int)this.position.Y;  		game.leveldata.setPixels (digx' digy' 7' 0);  	}  	if (jump) {  		ninjarope.isout = false;  		ninjarope.attached = false;  		if ((reacts [RF.Up] > 0) && (ableToJump)) {  			this.velocity.Y -= 4;  			ableToJump = false;  		}  	}  	else  		ableToJump = true;  	if (ninjarope.isout) {  		if (up)  			ninjarope.length -= 1;  		if (down)  			ninjarope.length += 1;  		if (ninjarope.length < 1)  			ninjarope.length = 1;  		if (ninjarope.length > 600)  			ninjarope.length = 600;  	}  	if (ropeshoot) {  		if (this.ableToRope) {  			this.ableToRope = false;  			ninjarope.isout = true;  			ninjarope.attached = false;  			ninjarope.x = this.position.X;  			ninjarope.y = this.position.Y;  			ninjarope.velX = this.view.X * 4;  			ninjarope.velY = this.view.Y * 4;  			ninjarope.length = 20;  		}  	}  	else {  		this.ableToRope = true;  	}  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processMovement,The following statement contains a magic number: if (movable) {  	bool left = (command.Buttons & Buttons.LEFT) == Buttons.LEFT;  	bool right = (command.Buttons & Buttons.RIGHT) == Buttons.RIGHT;  	bool jump = (command.Buttons & Buttons.JUMP) == Buttons.JUMP;  	bool dig = (command.Buttons & Buttons.DIG) == Buttons.DIG;  	bool ropeshoot = (command.Buttons & Buttons.ROPE) == Buttons.ROPE;  	bool up = (command.Buttons & Buttons.UP) == Buttons.UP;  	bool down = (command.Buttons & Buttons.DOWN) == Buttons.DOWN;  	if (left) {  		if (this.velocity.X >= -1.5) {  			this.velocity.X -= 1.5;  		}  	}  	if (right) {  		if (this.velocity.X <= 1.5) {  			this.velocity.X += 1.5;  		}  	}  	if (dig) {  		int digx = (int)(this.position.X + this.view.X * 12);  		int digy = (int)(this.position.Y + this.view.Y * 12);  		int iposx = (int)this.position.X;  		int iposy = (int)this.position.Y;  		game.leveldata.setPixels (digx' digy' 7' 0);  	}  	if (jump) {  		ninjarope.isout = false;  		ninjarope.attached = false;  		if ((reacts [RF.Up] > 0) && (ableToJump)) {  			this.velocity.Y -= 4;  			ableToJump = false;  		}  	}  	else  		ableToJump = true;  	if (ninjarope.isout) {  		if (up)  			ninjarope.length -= 1;  		if (down)  			ninjarope.length += 1;  		if (ninjarope.length < 1)  			ninjarope.length = 1;  		if (ninjarope.length > 600)  			ninjarope.length = 600;  	}  	if (ropeshoot) {  		if (this.ableToRope) {  			this.ableToRope = false;  			ninjarope.isout = true;  			ninjarope.attached = false;  			ninjarope.x = this.position.X;  			ninjarope.y = this.position.Y;  			ninjarope.velX = this.view.X * 4;  			ninjarope.velY = this.view.Y * 4;  			ninjarope.length = 20;  		}  	}  	else {  		this.ableToRope = true;  	}  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processMovement,The following statement contains a magic number: if (movable) {  	bool left = (command.Buttons & Buttons.LEFT) == Buttons.LEFT;  	bool right = (command.Buttons & Buttons.RIGHT) == Buttons.RIGHT;  	bool jump = (command.Buttons & Buttons.JUMP) == Buttons.JUMP;  	bool dig = (command.Buttons & Buttons.DIG) == Buttons.DIG;  	bool ropeshoot = (command.Buttons & Buttons.ROPE) == Buttons.ROPE;  	bool up = (command.Buttons & Buttons.UP) == Buttons.UP;  	bool down = (command.Buttons & Buttons.DOWN) == Buttons.DOWN;  	if (left) {  		if (this.velocity.X >= -1.5) {  			this.velocity.X -= 1.5;  		}  	}  	if (right) {  		if (this.velocity.X <= 1.5) {  			this.velocity.X += 1.5;  		}  	}  	if (dig) {  		int digx = (int)(this.position.X + this.view.X * 12);  		int digy = (int)(this.position.Y + this.view.Y * 12);  		int iposx = (int)this.position.X;  		int iposy = (int)this.position.Y;  		game.leveldata.setPixels (digx' digy' 7' 0);  	}  	if (jump) {  		ninjarope.isout = false;  		ninjarope.attached = false;  		if ((reacts [RF.Up] > 0) && (ableToJump)) {  			this.velocity.Y -= 4;  			ableToJump = false;  		}  	}  	else  		ableToJump = true;  	if (ninjarope.isout) {  		if (up)  			ninjarope.length -= 1;  		if (down)  			ninjarope.length += 1;  		if (ninjarope.length < 1)  			ninjarope.length = 1;  		if (ninjarope.length > 600)  			ninjarope.length = 600;  	}  	if (ropeshoot) {  		if (this.ableToRope) {  			this.ableToRope = false;  			ninjarope.isout = true;  			ninjarope.attached = false;  			ninjarope.x = this.position.X;  			ninjarope.y = this.position.Y;  			ninjarope.velX = this.view.X * 4;  			ninjarope.velY = this.view.Y * 4;  			ninjarope.length = 20;  		}  	}  	else {  		this.ableToRope = true;  	}  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processMovement,The following statement contains a magic number: if (movable) {  	bool left = (command.Buttons & Buttons.LEFT) == Buttons.LEFT;  	bool right = (command.Buttons & Buttons.RIGHT) == Buttons.RIGHT;  	bool jump = (command.Buttons & Buttons.JUMP) == Buttons.JUMP;  	bool dig = (command.Buttons & Buttons.DIG) == Buttons.DIG;  	bool ropeshoot = (command.Buttons & Buttons.ROPE) == Buttons.ROPE;  	bool up = (command.Buttons & Buttons.UP) == Buttons.UP;  	bool down = (command.Buttons & Buttons.DOWN) == Buttons.DOWN;  	if (left) {  		if (this.velocity.X >= -1.5) {  			this.velocity.X -= 1.5;  		}  	}  	if (right) {  		if (this.velocity.X <= 1.5) {  			this.velocity.X += 1.5;  		}  	}  	if (dig) {  		int digx = (int)(this.position.X + this.view.X * 12);  		int digy = (int)(this.position.Y + this.view.Y * 12);  		int iposx = (int)this.position.X;  		int iposy = (int)this.position.Y;  		game.leveldata.setPixels (digx' digy' 7' 0);  	}  	if (jump) {  		ninjarope.isout = false;  		ninjarope.attached = false;  		if ((reacts [RF.Up] > 0) && (ableToJump)) {  			this.velocity.Y -= 4;  			ableToJump = false;  		}  	}  	else  		ableToJump = true;  	if (ninjarope.isout) {  		if (up)  			ninjarope.length -= 1;  		if (down)  			ninjarope.length += 1;  		if (ninjarope.length < 1)  			ninjarope.length = 1;  		if (ninjarope.length > 600)  			ninjarope.length = 600;  	}  	if (ropeshoot) {  		if (this.ableToRope) {  			this.ableToRope = false;  			ninjarope.isout = true;  			ninjarope.attached = false;  			ninjarope.x = this.position.X;  			ninjarope.y = this.position.Y;  			ninjarope.velX = this.view.X * 4;  			ninjarope.velY = this.view.Y * 4;  			ninjarope.length = 20;  		}  	}  	else {  		this.ableToRope = true;  	}  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processMovement,The following statement contains a magic number: if (movable) {  	bool left = (command.Buttons & Buttons.LEFT) == Buttons.LEFT;  	bool right = (command.Buttons & Buttons.RIGHT) == Buttons.RIGHT;  	bool jump = (command.Buttons & Buttons.JUMP) == Buttons.JUMP;  	bool dig = (command.Buttons & Buttons.DIG) == Buttons.DIG;  	bool ropeshoot = (command.Buttons & Buttons.ROPE) == Buttons.ROPE;  	bool up = (command.Buttons & Buttons.UP) == Buttons.UP;  	bool down = (command.Buttons & Buttons.DOWN) == Buttons.DOWN;  	if (left) {  		if (this.velocity.X >= -1.5) {  			this.velocity.X -= 1.5;  		}  	}  	if (right) {  		if (this.velocity.X <= 1.5) {  			this.velocity.X += 1.5;  		}  	}  	if (dig) {  		int digx = (int)(this.position.X + this.view.X * 12);  		int digy = (int)(this.position.Y + this.view.Y * 12);  		int iposx = (int)this.position.X;  		int iposy = (int)this.position.Y;  		game.leveldata.setPixels (digx' digy' 7' 0);  	}  	if (jump) {  		ninjarope.isout = false;  		ninjarope.attached = false;  		if ((reacts [RF.Up] > 0) && (ableToJump)) {  			this.velocity.Y -= 4;  			ableToJump = false;  		}  	}  	else  		ableToJump = true;  	if (ninjarope.isout) {  		if (up)  			ninjarope.length -= 1;  		if (down)  			ninjarope.length += 1;  		if (ninjarope.length < 1)  			ninjarope.length = 1;  		if (ninjarope.length > 600)  			ninjarope.length = 600;  	}  	if (ropeshoot) {  		if (this.ableToRope) {  			this.ableToRope = false;  			ninjarope.isout = true;  			ninjarope.attached = false;  			ninjarope.x = this.position.X;  			ninjarope.y = this.position.Y;  			ninjarope.velX = this.view.X * 4;  			ninjarope.velY = this.view.Y * 4;  			ninjarope.length = 20;  		}  	}  	else {  		this.ableToRope = true;  	}  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processMovement,The following statement contains a magic number: if (left) {  	if (this.velocity.X >= -1.5) {  		this.velocity.X -= 1.5;  	}  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processMovement,The following statement contains a magic number: if (left) {  	if (this.velocity.X >= -1.5) {  		this.velocity.X -= 1.5;  	}  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processMovement,The following statement contains a magic number: if (this.velocity.X >= -1.5) {  	this.velocity.X -= 1.5;  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processMovement,The following statement contains a magic number: if (this.velocity.X >= -1.5) {  	this.velocity.X -= 1.5;  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processMovement,The following statement contains a magic number: this.velocity.X -= 1.5;  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processMovement,The following statement contains a magic number: if (right) {  	if (this.velocity.X <= 1.5) {  		this.velocity.X += 1.5;  	}  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processMovement,The following statement contains a magic number: if (right) {  	if (this.velocity.X <= 1.5) {  		this.velocity.X += 1.5;  	}  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processMovement,The following statement contains a magic number: if (this.velocity.X <= 1.5) {  	this.velocity.X += 1.5;  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processMovement,The following statement contains a magic number: if (this.velocity.X <= 1.5) {  	this.velocity.X += 1.5;  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processMovement,The following statement contains a magic number: this.velocity.X += 1.5;  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processMovement,The following statement contains a magic number: if (dig) {  	int digx = (int)(this.position.X + this.view.X * 12);  	int digy = (int)(this.position.Y + this.view.Y * 12);  	int iposx = (int)this.position.X;  	int iposy = (int)this.position.Y;  	game.leveldata.setPixels (digx' digy' 7' 0);  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processMovement,The following statement contains a magic number: if (dig) {  	int digx = (int)(this.position.X + this.view.X * 12);  	int digy = (int)(this.position.Y + this.view.Y * 12);  	int iposx = (int)this.position.X;  	int iposy = (int)this.position.Y;  	game.leveldata.setPixels (digx' digy' 7' 0);  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processMovement,The following statement contains a magic number: if (dig) {  	int digx = (int)(this.position.X + this.view.X * 12);  	int digy = (int)(this.position.Y + this.view.Y * 12);  	int iposx = (int)this.position.X;  	int iposy = (int)this.position.Y;  	game.leveldata.setPixels (digx' digy' 7' 0);  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processMovement,The following statement contains a magic number: game.leveldata.setPixels (digx' digy' 7' 0);  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processMovement,The following statement contains a magic number: if (jump) {  	ninjarope.isout = false;  	ninjarope.attached = false;  	if ((reacts [RF.Up] > 0) && (ableToJump)) {  		this.velocity.Y -= 4;  		ableToJump = false;  	}  }  else  	ableToJump = true;  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processMovement,The following statement contains a magic number: if ((reacts [RF.Up] > 0) && (ableToJump)) {  	this.velocity.Y -= 4;  	ableToJump = false;  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processMovement,The following statement contains a magic number: this.velocity.Y -= 4;  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processMovement,The following statement contains a magic number: if (ninjarope.isout) {  	if (up)  		ninjarope.length -= 1;  	if (down)  		ninjarope.length += 1;  	if (ninjarope.length < 1)  		ninjarope.length = 1;  	if (ninjarope.length > 600)  		ninjarope.length = 600;  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processMovement,The following statement contains a magic number: if (ninjarope.isout) {  	if (up)  		ninjarope.length -= 1;  	if (down)  		ninjarope.length += 1;  	if (ninjarope.length < 1)  		ninjarope.length = 1;  	if (ninjarope.length > 600)  		ninjarope.length = 600;  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processMovement,The following statement contains a magic number: if (ninjarope.length > 600)  	ninjarope.length = 600;  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processMovement,The following statement contains a magic number: if (ninjarope.length > 600)  	ninjarope.length = 600;  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processMovement,The following statement contains a magic number: ninjarope.length = 600;  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processMovement,The following statement contains a magic number: if (ropeshoot) {  	if (this.ableToRope) {  		this.ableToRope = false;  		ninjarope.isout = true;  		ninjarope.attached = false;  		ninjarope.x = this.position.X;  		ninjarope.y = this.position.Y;  		ninjarope.velX = this.view.X * 4;  		ninjarope.velY = this.view.Y * 4;  		ninjarope.length = 20;  	}  }  else {  	this.ableToRope = true;  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processMovement,The following statement contains a magic number: if (ropeshoot) {  	if (this.ableToRope) {  		this.ableToRope = false;  		ninjarope.isout = true;  		ninjarope.attached = false;  		ninjarope.x = this.position.X;  		ninjarope.y = this.position.Y;  		ninjarope.velX = this.view.X * 4;  		ninjarope.velY = this.view.Y * 4;  		ninjarope.length = 20;  	}  }  else {  	this.ableToRope = true;  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processMovement,The following statement contains a magic number: if (ropeshoot) {  	if (this.ableToRope) {  		this.ableToRope = false;  		ninjarope.isout = true;  		ninjarope.attached = false;  		ninjarope.x = this.position.X;  		ninjarope.y = this.position.Y;  		ninjarope.velX = this.view.X * 4;  		ninjarope.velY = this.view.Y * 4;  		ninjarope.length = 20;  	}  }  else {  	this.ableToRope = true;  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processMovement,The following statement contains a magic number: if (this.ableToRope) {  	this.ableToRope = false;  	ninjarope.isout = true;  	ninjarope.attached = false;  	ninjarope.x = this.position.X;  	ninjarope.y = this.position.Y;  	ninjarope.velX = this.view.X * 4;  	ninjarope.velY = this.view.Y * 4;  	ninjarope.length = 20;  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processMovement,The following statement contains a magic number: if (this.ableToRope) {  	this.ableToRope = false;  	ninjarope.isout = true;  	ninjarope.attached = false;  	ninjarope.x = this.position.X;  	ninjarope.y = this.position.Y;  	ninjarope.velX = this.view.X * 4;  	ninjarope.velY = this.view.Y * 4;  	ninjarope.length = 20;  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processMovement,The following statement contains a magic number: if (this.ableToRope) {  	this.ableToRope = false;  	ninjarope.isout = true;  	ninjarope.attached = false;  	ninjarope.x = this.position.X;  	ninjarope.y = this.position.Y;  	ninjarope.velX = this.view.X * 4;  	ninjarope.velY = this.view.Y * 4;  	ninjarope.length = 20;  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processMovement,The following statement contains a magic number: ninjarope.velX = this.view.X * 4;  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processMovement,The following statement contains a magic number: ninjarope.velY = this.view.Y * 4;  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,processMovement,The following statement contains a magic number: ninjarope.length = 20;  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,Update,The following statement contains a magic number: for (int i = 0; i < 4; i++) {  	calculateReactionForce (game' iNextX' iNextY' i);  	// Yes' Liero does this in every iteration. Keep it this way.  	if (iNextX < 4) {  		reacts [RF.Right] += 5;  	}  	else if (iNextX > game.leveldata.width - 5) {  		reacts [RF.Left] += 5;  	}  	if (iNextY < 5) {  		reacts [RF.Down] += 5;  	}  	else {  		if (iNextY > game.leveldata.height - 6) {  			reacts [RF.Up] += 5;  		}  	}  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,Update,The following statement contains a magic number: for (int i = 0; i < 4; i++) {  	calculateReactionForce (game' iNextX' iNextY' i);  	// Yes' Liero does this in every iteration. Keep it this way.  	if (iNextX < 4) {  		reacts [RF.Right] += 5;  	}  	else if (iNextX > game.leveldata.width - 5) {  		reacts [RF.Left] += 5;  	}  	if (iNextY < 5) {  		reacts [RF.Down] += 5;  	}  	else {  		if (iNextY > game.leveldata.height - 6) {  			reacts [RF.Up] += 5;  		}  	}  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,Update,The following statement contains a magic number: for (int i = 0; i < 4; i++) {  	calculateReactionForce (game' iNextX' iNextY' i);  	// Yes' Liero does this in every iteration. Keep it this way.  	if (iNextX < 4) {  		reacts [RF.Right] += 5;  	}  	else if (iNextX > game.leveldata.width - 5) {  		reacts [RF.Left] += 5;  	}  	if (iNextY < 5) {  		reacts [RF.Down] += 5;  	}  	else {  		if (iNextY > game.leveldata.height - 6) {  			reacts [RF.Up] += 5;  		}  	}  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,Update,The following statement contains a magic number: for (int i = 0; i < 4; i++) {  	calculateReactionForce (game' iNextX' iNextY' i);  	// Yes' Liero does this in every iteration. Keep it this way.  	if (iNextX < 4) {  		reacts [RF.Right] += 5;  	}  	else if (iNextX > game.leveldata.width - 5) {  		reacts [RF.Left] += 5;  	}  	if (iNextY < 5) {  		reacts [RF.Down] += 5;  	}  	else {  		if (iNextY > game.leveldata.height - 6) {  			reacts [RF.Up] += 5;  		}  	}  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,Update,The following statement contains a magic number: for (int i = 0; i < 4; i++) {  	calculateReactionForce (game' iNextX' iNextY' i);  	// Yes' Liero does this in every iteration. Keep it this way.  	if (iNextX < 4) {  		reacts [RF.Right] += 5;  	}  	else if (iNextX > game.leveldata.width - 5) {  		reacts [RF.Left] += 5;  	}  	if (iNextY < 5) {  		reacts [RF.Down] += 5;  	}  	else {  		if (iNextY > game.leveldata.height - 6) {  			reacts [RF.Up] += 5;  		}  	}  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,Update,The following statement contains a magic number: for (int i = 0; i < 4; i++) {  	calculateReactionForce (game' iNextX' iNextY' i);  	// Yes' Liero does this in every iteration. Keep it this way.  	if (iNextX < 4) {  		reacts [RF.Right] += 5;  	}  	else if (iNextX > game.leveldata.width - 5) {  		reacts [RF.Left] += 5;  	}  	if (iNextY < 5) {  		reacts [RF.Down] += 5;  	}  	else {  		if (iNextY > game.leveldata.height - 6) {  			reacts [RF.Up] += 5;  		}  	}  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,Update,The following statement contains a magic number: for (int i = 0; i < 4; i++) {  	calculateReactionForce (game' iNextX' iNextY' i);  	// Yes' Liero does this in every iteration. Keep it this way.  	if (iNextX < 4) {  		reacts [RF.Right] += 5;  	}  	else if (iNextX > game.leveldata.width - 5) {  		reacts [RF.Left] += 5;  	}  	if (iNextY < 5) {  		reacts [RF.Down] += 5;  	}  	else {  		if (iNextY > game.leveldata.height - 6) {  			reacts [RF.Up] += 5;  		}  	}  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,Update,The following statement contains a magic number: for (int i = 0; i < 4; i++) {  	calculateReactionForce (game' iNextX' iNextY' i);  	// Yes' Liero does this in every iteration. Keep it this way.  	if (iNextX < 4) {  		reacts [RF.Right] += 5;  	}  	else if (iNextX > game.leveldata.width - 5) {  		reacts [RF.Left] += 5;  	}  	if (iNextY < 5) {  		reacts [RF.Down] += 5;  	}  	else {  		if (iNextY > game.leveldata.height - 6) {  			reacts [RF.Up] += 5;  		}  	}  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,Update,The following statement contains a magic number: for (int i = 0; i < 4; i++) {  	calculateReactionForce (game' iNextX' iNextY' i);  	// Yes' Liero does this in every iteration. Keep it this way.  	if (iNextX < 4) {  		reacts [RF.Right] += 5;  	}  	else if (iNextX > game.leveldata.width - 5) {  		reacts [RF.Left] += 5;  	}  	if (iNextY < 5) {  		reacts [RF.Down] += 5;  	}  	else {  		if (iNextY > game.leveldata.height - 6) {  			reacts [RF.Up] += 5;  		}  	}  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,Update,The following statement contains a magic number: if (iNextX < 4) {  	reacts [RF.Right] += 5;  }  else if (iNextX > game.leveldata.width - 5) {  	reacts [RF.Left] += 5;  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,Update,The following statement contains a magic number: if (iNextX < 4) {  	reacts [RF.Right] += 5;  }  else if (iNextX > game.leveldata.width - 5) {  	reacts [RF.Left] += 5;  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,Update,The following statement contains a magic number: if (iNextX < 4) {  	reacts [RF.Right] += 5;  }  else if (iNextX > game.leveldata.width - 5) {  	reacts [RF.Left] += 5;  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,Update,The following statement contains a magic number: if (iNextX < 4) {  	reacts [RF.Right] += 5;  }  else if (iNextX > game.leveldata.width - 5) {  	reacts [RF.Left] += 5;  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,Update,The following statement contains a magic number: reacts [RF.Right] += 5;  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,Update,The following statement contains a magic number: if (iNextX > game.leveldata.width - 5) {  	reacts [RF.Left] += 5;  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,Update,The following statement contains a magic number: if (iNextX > game.leveldata.width - 5) {  	reacts [RF.Left] += 5;  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,Update,The following statement contains a magic number: reacts [RF.Left] += 5;  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,Update,The following statement contains a magic number: if (iNextY < 5) {  	reacts [RF.Down] += 5;  }  else {  	if (iNextY > game.leveldata.height - 6) {  		reacts [RF.Up] += 5;  	}  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,Update,The following statement contains a magic number: if (iNextY < 5) {  	reacts [RF.Down] += 5;  }  else {  	if (iNextY > game.leveldata.height - 6) {  		reacts [RF.Up] += 5;  	}  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,Update,The following statement contains a magic number: if (iNextY < 5) {  	reacts [RF.Down] += 5;  }  else {  	if (iNextY > game.leveldata.height - 6) {  		reacts [RF.Up] += 5;  	}  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,Update,The following statement contains a magic number: if (iNextY < 5) {  	reacts [RF.Down] += 5;  }  else {  	if (iNextY > game.leveldata.height - 6) {  		reacts [RF.Up] += 5;  	}  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,Update,The following statement contains a magic number: reacts [RF.Down] += 5;  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,Update,The following statement contains a magic number: if (iNextY > game.leveldata.height - 6) {  	reacts [RF.Up] += 5;  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,Update,The following statement contains a magic number: if (iNextY > game.leveldata.height - 6) {  	reacts [RF.Up] += 5;  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,Update,The following statement contains a magic number: reacts [RF.Up] += 5;  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,Update,The following statement contains a magic number: if (reacts [RF.Down] < 2) {  	if (reacts [RF.Up] > 0) {  		if (reacts [RF.Left] > 0 || reacts [RF.Right] > 0) {  			//Low or none push down'  			//Push up and  			//Push left or right  			position.Y -= 1;  			newposition.Y = position.Y + velocity.Y;  			iNextY = (int)newposition.Y;  			calculateReactionForce (game' iNextX' iNextY' RF.Left);  			calculateReactionForce (game' iNextX' iNextY' RF.Right);  		}  	}  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,Update,The following statement contains a magic number: if (reacts [RF.Up] < 2) {  	if (reacts [RF.Down] > 0) {  		if (reacts [RF.Left] > 0 || reacts [RF.Right] > 0) {  			//Low or none push up'  			//Push down and  			//Push left or right  			position.Y += 1;  			newposition.Y = position.Y + velocity.Y;  			iNextY = (int)newposition.Y;  			calculateReactionForce (game' iNextX' iNextY' RF.Left);  			calculateReactionForce (game' iNextX' iNextY' RF.Right);  		}  	}  }  
Magic Number,warlocks.Game,Worm,C:\repos\slofurno_warlocksr\warlocks\Game\Worm.cs,fire,The following statement contains a magic number: this.weapondelayleft = 5;  
Magic Number,warlocks,Program,C:\repos\slofurno_warlocksr\warlocks\Program.cs,HandleConnection,The following statement contains a magic number: testbytes [0] = 129;  
Magic Number,warlocks,Program,C:\repos\slofurno_warlocksr\warlocks\Program.cs,HandleConnection,The following statement contains a magic number: Array.Copy (bt' 0' testbytes' 2' len);  
Magic Number,warlocks.Socket,Websocket,C:\repos\slofurno_warlocksr\warlocks\Socket\Websocket.cs,Write,The following statement contains a magic number: if (len > max) {  	sizeflag++;  	headersize += 6;  }  
Magic Number,warlocks.Socket,Websocket,C:\repos\slofurno_warlocksr\warlocks\Socket\Websocket.cs,Write,The following statement contains a magic number: headersize += 6;  
Magic Number,warlocks.Socket,Websocket,C:\repos\slofurno_warlocksr\warlocks\Socket\Websocket.cs,Write,The following statement contains a magic number: buffer [0] = 129;  
Magic Number,warlocks.Socket,Websocket,C:\repos\slofurno_warlocksr\warlocks\Socket\Websocket.cs,Write,The following statement contains a magic number: if (len > max) {  	buffer [2] = 0;  	buffer [3] = 0;  	buffer [4] = 0;  	buffer [5] = 0;  	buffer [6] = 0;  	buffer [7] = (byte)((len >> 16) & 255);  }  
Magic Number,warlocks.Socket,Websocket,C:\repos\slofurno_warlocksr\warlocks\Socket\Websocket.cs,Write,The following statement contains a magic number: if (len > max) {  	buffer [2] = 0;  	buffer [3] = 0;  	buffer [4] = 0;  	buffer [5] = 0;  	buffer [6] = 0;  	buffer [7] = (byte)((len >> 16) & 255);  }  
Magic Number,warlocks.Socket,Websocket,C:\repos\slofurno_warlocksr\warlocks\Socket\Websocket.cs,Write,The following statement contains a magic number: if (len > max) {  	buffer [2] = 0;  	buffer [3] = 0;  	buffer [4] = 0;  	buffer [5] = 0;  	buffer [6] = 0;  	buffer [7] = (byte)((len >> 16) & 255);  }  
Magic Number,warlocks.Socket,Websocket,C:\repos\slofurno_warlocksr\warlocks\Socket\Websocket.cs,Write,The following statement contains a magic number: if (len > max) {  	buffer [2] = 0;  	buffer [3] = 0;  	buffer [4] = 0;  	buffer [5] = 0;  	buffer [6] = 0;  	buffer [7] = (byte)((len >> 16) & 255);  }  
Magic Number,warlocks.Socket,Websocket,C:\repos\slofurno_warlocksr\warlocks\Socket\Websocket.cs,Write,The following statement contains a magic number: if (len > max) {  	buffer [2] = 0;  	buffer [3] = 0;  	buffer [4] = 0;  	buffer [5] = 0;  	buffer [6] = 0;  	buffer [7] = (byte)((len >> 16) & 255);  }  
Magic Number,warlocks.Socket,Websocket,C:\repos\slofurno_warlocksr\warlocks\Socket\Websocket.cs,Write,The following statement contains a magic number: if (len > max) {  	buffer [2] = 0;  	buffer [3] = 0;  	buffer [4] = 0;  	buffer [5] = 0;  	buffer [6] = 0;  	buffer [7] = (byte)((len >> 16) & 255);  }  
Magic Number,warlocks.Socket,Websocket,C:\repos\slofurno_warlocksr\warlocks\Socket\Websocket.cs,Write,The following statement contains a magic number: if (len > max) {  	buffer [2] = 0;  	buffer [3] = 0;  	buffer [4] = 0;  	buffer [5] = 0;  	buffer [6] = 0;  	buffer [7] = (byte)((len >> 16) & 255);  }  
Magic Number,warlocks.Socket,Websocket,C:\repos\slofurno_warlocksr\warlocks\Socket\Websocket.cs,Write,The following statement contains a magic number: if (len > max) {  	buffer [2] = 0;  	buffer [3] = 0;  	buffer [4] = 0;  	buffer [5] = 0;  	buffer [6] = 0;  	buffer [7] = (byte)((len >> 16) & 255);  }  
Magic Number,warlocks.Socket,Websocket,C:\repos\slofurno_warlocksr\warlocks\Socket\Websocket.cs,Write,The following statement contains a magic number: buffer [2] = 0;  
Magic Number,warlocks.Socket,Websocket,C:\repos\slofurno_warlocksr\warlocks\Socket\Websocket.cs,Write,The following statement contains a magic number: buffer [3] = 0;  
Magic Number,warlocks.Socket,Websocket,C:\repos\slofurno_warlocksr\warlocks\Socket\Websocket.cs,Write,The following statement contains a magic number: buffer [4] = 0;  
Magic Number,warlocks.Socket,Websocket,C:\repos\slofurno_warlocksr\warlocks\Socket\Websocket.cs,Write,The following statement contains a magic number: buffer [5] = 0;  
Magic Number,warlocks.Socket,Websocket,C:\repos\slofurno_warlocksr\warlocks\Socket\Websocket.cs,Write,The following statement contains a magic number: buffer [6] = 0;  
Magic Number,warlocks.Socket,Websocket,C:\repos\slofurno_warlocksr\warlocks\Socket\Websocket.cs,Write,The following statement contains a magic number: buffer [7] = (byte)((len >> 16) & 255);  
Magic Number,warlocks.Socket,Websocket,C:\repos\slofurno_warlocksr\warlocks\Socket\Websocket.cs,Write,The following statement contains a magic number: buffer [7] = (byte)((len >> 16) & 255);  
Magic Number,warlocks.Socket,Websocket,C:\repos\slofurno_warlocksr\warlocks\Socket\Websocket.cs,Write,The following statement contains a magic number: buffer [7] = (byte)((len >> 16) & 255);  
Magic Number,warlocks.Socket,Websocket,C:\repos\slofurno_warlocksr\warlocks\Socket\Websocket.cs,Write,The following statement contains a magic number: buffer [headersize - 2] = (byte)((len >> 8) & 255);  
Magic Number,warlocks.Socket,Websocket,C:\repos\slofurno_warlocksr\warlocks\Socket\Websocket.cs,Write,The following statement contains a magic number: buffer [headersize - 2] = (byte)((len >> 8) & 255);  
Magic Number,warlocks.Socket,Websocket,C:\repos\slofurno_warlocksr\warlocks\Socket\Websocket.cs,Write,The following statement contains a magic number: buffer [headersize - 2] = (byte)((len >> 8) & 255);  
Magic Number,warlocks.Socket,Websocket,C:\repos\slofurno_warlocksr\warlocks\Socket\Websocket.cs,Write,The following statement contains a magic number: buffer [headersize - 1] = (byte)(len & 255);  
Magic Number,warlocks.Socket,Websocket,C:\repos\slofurno_warlocksr\warlocks\Socket\Websocket.cs,ReadFrame,The following statement contains a magic number: read = _rw.Read (header' 0' 6);  
Magic Number,warlocks.Socket,Websocket,C:\repos\slofurno_warlocksr\warlocks\Socket\Websocket.cs,ReadFrame,The following statement contains a magic number: if (read != 6) {  	var wtf = "m8";  }  
Magic Number,warlocks.Socket,Websocket,C:\repos\slofurno_warlocksr\warlocks\Socket\Websocket.cs,ReadFrame,The following statement contains a magic number: if (opcode == 8) {  	//closing  }  
Magic Number,warlocks.Socket,Websocket,C:\repos\slofurno_warlocksr\warlocks\Socket\Websocket.cs,ReadFrame,The following statement contains a magic number: for (var i = 0; i < length; i++) {  	body [i] ^= header [2 + (i & 3)];  }  
Magic Number,warlocks.Socket,Websocket,C:\repos\slofurno_warlocksr\warlocks\Socket\Websocket.cs,ReadFrame,The following statement contains a magic number: for (var i = 0; i < length; i++) {  	body [i] ^= header [2 + (i & 3)];  }  
Magic Number,warlocks.Socket,Websocket,C:\repos\slofurno_warlocksr\warlocks\Socket\Websocket.cs,ReadFrame,The following statement contains a magic number: body [i] ^= header [2 + (i & 3)];  
Magic Number,warlocks.Socket,Websocket,C:\repos\slofurno_warlocksr\warlocks\Socket\Websocket.cs,ReadFrame,The following statement contains a magic number: body [i] ^= header [2 + (i & 3)];  
