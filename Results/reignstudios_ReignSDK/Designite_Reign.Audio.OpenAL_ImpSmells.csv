Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Reign.Audio.OpenAL,AL,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Audio.OpenAL\AL.cs,BufferData,The method has 5 parameters. Parameters: bid' format' data' size' freq
Long Parameter List,Reign.Audio.OpenAL,AL,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Audio.OpenAL\AL.cs,Source3f,The method has 5 parameters. Parameters: sid' param' value1' value2' value3
Long Parameter List,Reign.Audio.OpenAL,SoundWAV,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Audio.OpenAL\SoundWAV.cs,New,The method has 5 parameters. Parameters: parent' fileName' instanceCount' looped' loadedCallback
Long Parameter List,Reign.Audio.OpenAL,SoundWAV,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Audio.OpenAL\SoundWAV.cs,SoundWAV,The method has 5 parameters. Parameters: parent' fileName' instanceCount' looped' loadedCallback
Long Parameter List,Reign.Audio.OpenAL,SoundWAV,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Audio.OpenAL\SoundWAV.cs,init,The method has 5 parameters. Parameters: parent' stream' instanceCount' looped' loadedCallback
Magic Number,Reign.Audio.OpenAL,SoundWAV,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Audio.OpenAL\SoundWAV.cs,init,The following statement contains a magic number: channels == 2
Magic Number,Reign.Audio.OpenAL,SoundWAV,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Audio.OpenAL\SoundWAV.cs,init,The following statement contains a magic number: bitDepth == 16
Missing Default,Reign.Audio.OpenAL,SoundWAVInstance,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Audio.OpenAL\SoundWAV.cs,Update,The following switch statement is missing a default case: switch (playingState) 			{ 				case AL.PLAYING: State = SoundStates.Playing; break; 				case AL.PAUSED: State = SoundStates.Paused; break; 				case AL.STOPPED: State = SoundStates.Stopped; break; 			}
