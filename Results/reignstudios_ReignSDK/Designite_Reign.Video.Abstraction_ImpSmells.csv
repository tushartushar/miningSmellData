Implementation smell,Namespace,Class,File,Method,Description
Long Method,Reign.Video.Abstraction,HardwareMeshProcessor,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\HardwareMeshProcessor.cs,HardwareMeshProcessor,The method has 144 lines of code.
Long Method,Reign.Video.Abstraction,Mesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\Mesh.cs,initData,The method has 129 lines of code.
Long Method,Reign.Video.Abstraction,Model,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\Model.cs,init,The method has 145 lines of code.
Long Method,Reign.Video.Abstraction,SoftwareMesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareMesh.cs,SoftwareMesh,The method has 200 lines of code.
Complex Method,Reign.Video.Abstraction,Font,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Font.cs,draw,Cyclomatic complexity of the method is 8
Complex Method,Reign.Video.Abstraction,TriangleProcessor,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\HardwareMeshProcessor.cs,TriangleProcessor,Cyclomatic complexity of the method is 10
Complex Method,Reign.Video.Abstraction,HardwareMeshProcessor,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\HardwareMeshProcessor.cs,HardwareMeshProcessor,Cyclomatic complexity of the method is 33
Complex Method,Reign.Video.Abstraction,InstanceObjectArmature,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\InstanceModel\InstanceObjectArmature.cs,linkObjects,Cyclomatic complexity of the method is 10
Complex Method,Reign.Video.Abstraction,Mesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\Mesh.cs,Mesh,Cyclomatic complexity of the method is 12
Complex Method,Reign.Video.Abstraction,Mesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\Mesh.cs,initData,Cyclomatic complexity of the method is 19
Complex Method,Reign.Video.Abstraction,Model,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\Model.cs,init,Cyclomatic complexity of the method is 21
Complex Method,Reign.Video.Abstraction,Model,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\Model.cs,handleFoundValueBinder,Cyclomatic complexity of the method is 11
Complex Method,Reign.Video.Abstraction,Model,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\Model.cs,Save,Cyclomatic complexity of the method is 11
Complex Method,Reign.Video.Abstraction,Object,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\Object.cs,linkObjects,Cyclomatic complexity of the method is 10
Complex Method,Reign.Video.Abstraction,SoftwareMesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareMesh.cs,SoftwareMesh,Cyclomatic complexity of the method is 33
Complex Method,Reign.Video.Abstraction,SoftwareMesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareMesh.cs,RotateGeometry,Cyclomatic complexity of the method is 8
Complex Method,Reign.Video.Abstraction,SoftwareModel,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareModel.cs,init,Cyclomatic complexity of the method is 16
Complex Method,Reign.Video.Abstraction,SoftwareObject,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareObject.cs,SoftwareObject,Cyclomatic complexity of the method is 11
Complex Method,Reign.Video.Abstraction,SoftwareObject,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareObject.cs,linkObjects,Cyclomatic complexity of the method is 9
Long Parameter List,Reign.Video.Abstraction,VertexBufferAPI,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Buffers\VertexBuffer.cs,New,The method has 5 parameters. Parameters: parent' bufferLayoutDesc' usage' topology' vertices
Long Parameter List,Reign.Video.Abstraction,VertexBufferAPI,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Buffers\VertexBuffer.cs,New,The method has 6 parameters. Parameters: parent' bufferLayoutDesc' usage' topology' vertices' indices
Long Parameter List,Reign.Video.Abstraction,VertexBufferAPI,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Buffers\VertexBuffer.cs,New,The method has 7 parameters. Parameters: videoType' parent' bufferLayoutDesc' usage' topology' vertices' indices
Long Parameter List,Reign.Video.Abstraction,DepthStencilAPI,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\DepthStencil.cs,New,The method has 5 parameters. Parameters: videoType' parent' width' height' format
Long Parameter List,Reign.Video.Abstraction,Font,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Font.cs,Font,The method has 5 parameters. Parameters: parent' shader' texture' metricsFileName' loadedCallback
Long Parameter List,Reign.Video.Abstraction,Font,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Font.cs,init,The method has 5 parameters. Parameters: shader' texture' stream' metricsFileName' loadedCallback
Long Parameter List,Reign.Video.Abstraction,Font,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Font.cs,Draw,The method has 6 parameters. Parameters: text' position' color' size' centeredX' centeredY
Long Parameter List,Reign.Video.Abstraction,Font,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Font.cs,draw,The method has 7 parameters. Parameters: text' textureSize' position' color' size' centeredX' centeredY
Long Parameter List,Reign.Video.Abstraction,Font,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Font.cs,drawCharacter,The method has 5 parameters. Parameters: position' size' positionUV' sizeUV' color
Long Parameter List,Reign.Video.Abstraction,VertexProcessor,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\HardwareMeshProcessor.cs,VertexProcessor,The method has 5 parameters. Parameters: vertex' colors' normals' uvs' mesh
Long Parameter List,Reign.Video.Abstraction,TriangleProcessor,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\HardwareMeshProcessor.cs,TriangleProcessor,The method has 5 parameters. Parameters: triangle' mesh' loadColors' loadUVs' loadNormals
Long Parameter List,Reign.Video.Abstraction,Mesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\Mesh.cs,initData,The method has 7 parameters. Parameters: softwareMesh' loadColors' loadUVs' loadNormals' elements' vertices' indices
Long Parameter List,Reign.Video.Abstraction,Mesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\Mesh.cs,Write,The method has 6 parameters. Parameters: writer' softwareModel' softwareMesh' loadColors' loadUVs' loadNormals
Long Parameter List,Reign.Video.Abstraction,Model,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\Model.cs,Model,The method has 12 parameters. Parameters: parent' filename' contentDirectory' materialTypes' value1BinderTypes' value2BinderTypes' value3BinderTypes' value4BinderTypes' textureBinderTypes' fileExtOverrides' classicInstanceCount' loadedCallback
Long Parameter List,Reign.Video.Abstraction,Model,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\Model.cs,Model,The method has 15 parameters. Parameters: parent' softwareModel' loadColors' loadUVs' loadNormals' contentDirectory' materialTypes' value1BinderTypes' value2BinderTypes' value3BinderTypes' value4BinderTypes' textureBinderTypes' fileExtOverrides' classicInstanceCount' loadedCallback
Long Parameter List,Reign.Video.Abstraction,Model,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\Model.cs,init,The method has 12 parameters. Parameters: filename' stream' contentDirectory' materialTypes' value1BinderTypes' value2BinderTypes' value3BinderTypes' value4BinderTypes' textureBinderTypes' fileExtOverrides' classicInstanceCount' loadedCallback
Long Parameter List,Reign.Video.Abstraction,Model,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\Model.cs,bindTypes,The method has 6 parameters. Parameters: material' values' binders' contentDirectory' fileExtOverrides' handleFoundBinder
Long Parameter List,Reign.Video.Abstraction,Model,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\Model.cs,handleFoundValueBinder,The method has 6 parameters. Parameters: material' materialField' values' binder' contentDirectory' fileExtOverrides
Long Parameter List,Reign.Video.Abstraction,Model,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\Model.cs,handleFoundTextureBinder,The method has 6 parameters. Parameters: material' materialField' values' binder' contentDirectory' fileExtOverrides
Long Parameter List,Reign.Video.Abstraction,Model,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\Model.cs,Save,The method has 6 parameters. Parameters: filename' compress' softwareModel' loadColors' loadUVs' loadNormals
Long Parameter List,Reign.Video.Abstraction,Model,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\Model.cs,Save,The method has 6 parameters. Parameters: stream' compress' softwareModel' loadColors' loadUVs' loadNormals
Long Parameter List,Reign.Video.Abstraction,ShaderAPI,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Shader.cs,New,The method has 6 parameters. Parameters: parent' filename' shaderVersion' vsQuality' psQuality' loadedCallback
Long Parameter List,Reign.Video.Abstraction,ShaderAPI,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Shader.cs,New,The method has 7 parameters. Parameters: videoType' parent' filename' shaderVersion' vsQuality' psQuality' loadedCallback
Long Parameter List,Reign.Video.Abstraction,RenderTargetAPI,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Textures\RenderTarget.cs,New,The method has 12 parameters. Parameters: videoType' parent' filename' width' height' generateMipmaps' multiSampleType' surfaceFormat' depthStencilFormat' renderTargetUsage' usage' loadedCallback
Long Parameter List,Reign.Video.Abstraction,RenderTargetAPI,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Textures\RenderTarget.cs,New,The method has 9 parameters. Parameters: parent' width' height' multiSampleType' surfaceFormat' depthStencilFormat' renderTargetUsage' usage' loadedCallback
Long Parameter List,Reign.Video.Abstraction,RenderTargetAPI,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Textures\RenderTarget.cs,New,The method has 12 parameters. Parameters: videoType' parent' image' width' height' generateMipmaps' multiSampleType' surfaceFormat' depthStencilFormat' renderTargetUsage' usage' loadedCallback
Long Parameter List,Reign.Video.Abstraction,Texture2DAPI,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Textures\Texture2D.cs,New,The method has 5 parameters. Parameters: parent' filename' generateMipmaps' usage' loadedCallback
Long Parameter List,Reign.Video.Abstraction,Texture2DAPI,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Textures\Texture2D.cs,New,The method has 11 parameters. Parameters: videoType' parent' filename' width' height' generateMipmaps' multiSampleType' surfaceFormat' renderTargetUsage' usage' loadedCallback
Long Parameter List,Reign.Video.Abstraction,Texture2DAPI,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Textures\Texture2D.cs,New,The method has 10 parameters. Parameters: parent' image' width' height' generateMipmaps' multiSampleType' surfaceFormat' renderTargetUsage' usage' loadedCallback
Long Parameter List,Reign.Video.Abstraction,Texture2DAPI,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Textures\Texture2D.cs,New,The method has 11 parameters. Parameters: videoType' parent' image' width' height' generateMipmaps' multiSampleType' surfaceFormat' renderTargetUsage' usage' loadedCallback
Long Parameter List,Reign.Video.Abstraction,VideoAPI,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Video.cs,New,The method has 6 parameters. Parameters: videoTypeFlags' videoType' parent' application' depthStencilFormats' vSync
Long Parameter List,Reign.Video.Abstraction,ViewPortAPI,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\ViewPort.cs,New,The method has 5 parameters. Parameters: parent' x' y' width' height
Long Parameter List,Reign.Video.Abstraction,ViewPortAPI,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\ViewPort.cs,New,The method has 6 parameters. Parameters: videoType' parent' x' y' width' height
Long Statement,Reign.Video.Abstraction,VertexBufferAPI,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Buffers\VertexBuffer.cs,New,The length of the statement  "			if (videoType == VideoTypes.D3D9) api = new D3D9.VertexBuffer(parent' bufferLayoutDesc' usage' topology' vertices' indices);" is 124.
Long Statement,Reign.Video.Abstraction,VertexBufferAPI,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Buffers\VertexBuffer.cs,New,The length of the statement  "			if (videoType == VideoTypes.D3D11) api = new D3D11.VertexBuffer(parent' bufferLayoutDesc' usage' topology' vertices' indices);" is 126.
Long Statement,Reign.Video.Abstraction,VertexBufferAPI,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Buffers\VertexBuffer.cs,New,The length of the statement  "			if (videoType == VideoTypes.OpenGL) api = new OpenGL.VertexBuffer(parent' bufferLayoutDesc' usage' topology' vertices' indices);" is 128.
Long Statement,Reign.Video.Abstraction,VertexBufferAPI,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Buffers\VertexBuffer.cs,New,The length of the statement  "			if (videoType == VideoTypes.XNA) api = new XNA.VertexBuffer(parent' bufferLayoutDesc' usage' topology' vertices' indices);" is 122.
Long Statement,Reign.Video.Abstraction,VertexBufferAPI,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Buffers\VertexBuffer.cs,New,The length of the statement  "			if (videoType == VideoTypes.Vita) api = new Vita.VertexBuffer(parent' bufferLayoutDesc' usage' topology' vertices' indices);" is 124.
Long Statement,Reign.Video.Abstraction,Font,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Font.cs,init,The length of the statement  "					Characters[i] = new Character(character.Key' new Vector2(character.X' character.Y)' new Vector2(character.Width' character.Height));" is 132.
Long Statement,Reign.Video.Abstraction,Font,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Font.cs,init,The length of the statement  "				vertexBuffer = VertexBufferAPI.New(this' layoutDesc' BufferUsages.Default' VertexBufferTopologys.Triangle' Vertices' Indices);" is 126.
Long Statement,Reign.Video.Abstraction,Mesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\Mesh.cs,initData,The length of the statement  "							elements.Add(new BufferLayoutElement(BufferLayoutElementTypes.Vector4' BufferLayoutElementUsages.Color' 0' colorCount' vertFloatCount));" is 136.
Long Statement,Reign.Video.Abstraction,Mesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\Mesh.cs,initData,The length of the statement  "							elements.Add(new BufferLayoutElement(BufferLayoutElementTypes.Vector3' BufferLayoutElementUsages.Normal' 0' normalCount' vertFloatCount));" is 138.
Long Statement,Reign.Video.Abstraction,Mesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\Mesh.cs,initData,The length of the statement  "							elements.Add(new BufferLayoutElement(BufferLayoutElementTypes.Vector2' BufferLayoutElementUsages.UV' 0' uvCount' vertFloatCount));" is 130.
Long Statement,Reign.Video.Abstraction,Model,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\Model.cs,init,The length of the statement  "				if (reader.ReadInt32() != Streams.MakeFourCC('R'' 'M'' 'F'' 'T')) Debug.ThrowError("Error"' "Not a ReignModel file: " + filename);" is 130.
Long Statement,Reign.Video.Abstraction,Model,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\Model.cs,bindTypes,The length of the statement  "					if (materialField == null) Debug.ThrowError("Model"' "Shader material field name does not exist: " + binder.ShaderMaterialFieldName);" is 133.
Long Statement,Reign.Video.Abstraction,Model,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\Model.cs,bindTypes,The length of the statement  "					if (handleFoundBinder != null) handleFoundBinder(material' materialField' values' binder' contentDirectory' fileExtOverrides);" is 126.
Long Statement,Reign.Video.Abstraction,Model,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\Model.cs,handleFoundTextureBinder,The length of the statement  "				if (fileExtOverrides.ContainsKey(ext)) textureFileName = Streams.GetFileNameWithoutExt(textureFileName) + fileExtOverrides[ext];" is 128.
Long Statement,Reign.Video.Abstraction,SoftwareObject,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareObject.cs,linkObjects,The length of the statement  "				if (ArmatureObject == null) Debug.ThrowError("SoftwareObject"' "Failed to find ArmatureObject: " + o.ArmatureObject.Name);" is 122.
Long Statement,Reign.Video.Abstraction,ShaderAPI,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Shader.cs,New,The length of the statement  "			return New(VideoAPI.DefaultAPI' parent' filename' shaderVersion' ShaderFloatingPointQuality.High' ShaderFloatingPointQuality.Low' loadedCallback);" is 146.
Long Statement,Reign.Video.Abstraction,ShaderAPI,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Shader.cs,New,The length of the statement  "			if (videoType == VideoTypes.D3D9) api = new D3D9.Shader(parent' filename' shaderVersion' vsQuality' psQuality' loadedCallback);" is 127.
Long Statement,Reign.Video.Abstraction,ShaderAPI,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Shader.cs,New,The length of the statement  "			if (videoType == VideoTypes.D3D11) api = new D3D11.Shader(parent' filename' shaderVersion' vsQuality' psQuality' loadedCallback);" is 129.
Long Statement,Reign.Video.Abstraction,ShaderAPI,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Shader.cs,New,The length of the statement  "			if (videoType == VideoTypes.OpenGL) api = new OpenGL.Shader(parent' filename' shaderVersion' vsQuality' psQuality' loadedCallback);" is 131.
Long Statement,Reign.Video.Abstraction,ShaderAPI,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Shader.cs,New,The length of the statement  "			if (videoType == VideoTypes.XNA) api = new XNA.Shader(parent' filename' shaderVersion' vsQuality' psQuality' loadedCallback);" is 125.
Long Statement,Reign.Video.Abstraction,ShaderAPI,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Shader.cs,New,The length of the statement  "			if (videoType == VideoTypes.Vita) api = new Vita.Shader(parent' filename' shaderVersion' vsQuality' psQuality' loadedCallback);" is 127.
Long Statement,Reign.Video.Abstraction,RenderTargetAPI,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Textures\RenderTarget.cs,New,The length of the statement  "			if (videoType == VideoTypes.D3D9) api = new D3D9.RenderTarget(parent' filename' width' height' generateMipmaps' multiSampleType' surfaceFormat' depthStencilFormat' renderTargetUsage' usage' loadedCallback);" is 206.
Long Statement,Reign.Video.Abstraction,RenderTargetAPI,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Textures\RenderTarget.cs,New,The length of the statement  "			if (videoType == VideoTypes.D3D11) api = new D3D11.RenderTarget(parent' filename' width' height' generateMipmaps' multiSampleType' surfaceFormat' depthStencilFormat' renderTargetUsage' usage' loadedCallback);" is 208.
Long Statement,Reign.Video.Abstraction,RenderTargetAPI,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Textures\RenderTarget.cs,New,The length of the statement  "			if (videoType == VideoTypes.OpenGL) api = new OpenGL.RenderTarget(parent' filename' width' height' generateMipmaps' multiSampleType' surfaceFormat' depthStencilFormat' renderTargetUsage' usage' loadedCallback);" is 210.
Long Statement,Reign.Video.Abstraction,RenderTargetAPI,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Textures\RenderTarget.cs,New,The length of the statement  "			if (videoType == VideoTypes.XNA) api = new XNA.RenderTarget(parent' filename' width' height' generateMipmaps' multiSampleType' surfaceFormat' depthStencilFormat' renderTargetUsage' usage' loadedCallback);" is 204.
Long Statement,Reign.Video.Abstraction,RenderTargetAPI,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Textures\RenderTarget.cs,New,The length of the statement  "			if (videoType == VideoTypes.Vita) api = new Vita.RenderTarget(parent' filename' width' height' generateMipmaps' multiSampleType' surfaceFormat' depthStencilFormat' renderTargetUsage' usage' loadedCallback);" is 206.
Long Statement,Reign.Video.Abstraction,RenderTargetAPI,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Textures\RenderTarget.cs,New,The length of the statement  "			return New(VideoAPI.DefaultAPI' parent' (Image)null' width' height' false' multiSampleType' surfaceFormat' depthStencilFormat' renderTargetUsage' usage' loadedCallback);" is 169.
Long Statement,Reign.Video.Abstraction,RenderTargetAPI,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Textures\RenderTarget.cs,New,The length of the statement  "			if (videoType == VideoTypes.D3D9) api = new D3D9.RenderTarget(parent' image' width' height' generateMipmaps' multiSampleType' surfaceFormat' depthStencilFormat' renderTargetUsage' usage' loadedCallback);" is 203.
Long Statement,Reign.Video.Abstraction,RenderTargetAPI,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Textures\RenderTarget.cs,New,The length of the statement  "			if (videoType == VideoTypes.D3D11) api = new D3D11.RenderTarget(parent' image' width' height' generateMipmaps' multiSampleType' surfaceFormat' depthStencilFormat' renderTargetUsage' usage' loadedCallback);" is 205.
Long Statement,Reign.Video.Abstraction,RenderTargetAPI,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Textures\RenderTarget.cs,New,The length of the statement  "			if (videoType == VideoTypes.OpenGL) api = new OpenGL.RenderTarget(parent' image' width' height' generateMipmaps' multiSampleType' surfaceFormat' depthStencilFormat' renderTargetUsage' usage' loadedCallback);" is 207.
Long Statement,Reign.Video.Abstraction,RenderTargetAPI,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Textures\RenderTarget.cs,New,The length of the statement  "			if (videoType == VideoTypes.XNA) api = new XNA.RenderTarget(parent' image' width' height' generateMipmaps' multiSampleType' surfaceFormat' depthStencilFormat' renderTargetUsage' usage' loadedCallback);" is 201.
Long Statement,Reign.Video.Abstraction,RenderTargetAPI,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Textures\RenderTarget.cs,New,The length of the statement  "			if (videoType == VideoTypes.Vita) api = new Vita.RenderTarget(parent' image' width' height' generateMipmaps' multiSampleType' surfaceFormat' depthStencilFormat' renderTargetUsage' usage' loadedCallback);" is 203.
Long Statement,Reign.Video.Abstraction,Texture2DAPI,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Textures\Texture2D.cs,New,The length of the statement  "			return New(VideoAPI.DefaultAPI' parent' filename' 0' 0' false' MultiSampleTypes.None' SurfaceFormats.Defualt' RenderTargetUsage.PlatformDefault' BufferUsages.Default' loadedCallback);" is 183.
Long Statement,Reign.Video.Abstraction,Texture2DAPI,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Textures\Texture2D.cs,New,The length of the statement  "			return New(VideoAPI.DefaultAPI' parent' filename' 0' 0' generateMipmaps' MultiSampleTypes.None' SurfaceFormats.Defualt' RenderTargetUsage.PlatformDefault' usage' loadedCallback);" is 178.
Long Statement,Reign.Video.Abstraction,Texture2DAPI,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Textures\Texture2D.cs,New,The length of the statement  "			if (videoType == VideoTypes.D3D9) api = new D3D9.Texture2D(parent' filename' width' height' generateMipmaps' multiSampleType' surfaceFormat' renderTargetUsage' usage' loadedCallback);" is 183.
Long Statement,Reign.Video.Abstraction,Texture2DAPI,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Textures\Texture2D.cs,New,The length of the statement  "			if (videoType == VideoTypes.D3D11) api = new D3D11.Texture2D(parent' filename' width' height' generateMipmaps' multiSampleType' surfaceFormat' renderTargetUsage' usage' loadedCallback);" is 185.
Long Statement,Reign.Video.Abstraction,Texture2DAPI,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Textures\Texture2D.cs,New,The length of the statement  "			if (videoType == VideoTypes.OpenGL) api = new OpenGL.Texture2D(parent' filename' width' height' generateMipmaps' multiSampleType' surfaceFormat' renderTargetUsage' usage' loadedCallback);" is 187.
Long Statement,Reign.Video.Abstraction,Texture2DAPI,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Textures\Texture2D.cs,New,The length of the statement  "			if (videoType == VideoTypes.XNA) api = new XNA.Texture2D(parent' filename' width' height' generateMipmaps' multiSampleType' surfaceFormat' renderTargetUsage' usage' loadedCallback);" is 181.
Long Statement,Reign.Video.Abstraction,Texture2DAPI,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Textures\Texture2D.cs,New,The length of the statement  "			if (videoType == VideoTypes.Vita) api = new Vita.Texture2D(parent' filename' width' height' generateMipmaps' multiSampleType' surfaceFormat' renderTargetUsage' usage' loadedCallback);" is 183.
Long Statement,Reign.Video.Abstraction,Texture2DAPI,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Textures\Texture2D.cs,New,The length of the statement  "			return New(VideoAPI.DefaultAPI' parent' image' width' height' generateMipmaps' multiSampleType' surfaceFormat' renderTargetUsage' usage' loadedCallback);" is 153.
Long Statement,Reign.Video.Abstraction,Texture2DAPI,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Textures\Texture2D.cs,New,The length of the statement  "			if (videoType == VideoTypes.D3D9) api = new D3D9.Texture2D(parent' image' width' height' generateMipmaps' multiSampleType' surfaceFormat' renderTargetUsage' usage' loadedCallback);" is 180.
Long Statement,Reign.Video.Abstraction,Texture2DAPI,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Textures\Texture2D.cs,New,The length of the statement  "			if (videoType == VideoTypes.D3D11) api = new D3D11.Texture2D(parent' image' width' height' generateMipmaps' multiSampleType' surfaceFormat' renderTargetUsage' usage' loadedCallback);" is 182.
Long Statement,Reign.Video.Abstraction,Texture2DAPI,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Textures\Texture2D.cs,New,The length of the statement  "			if (videoType == VideoTypes.OpenGL) api = new OpenGL.Texture2D(parent' image' width' height' generateMipmaps' multiSampleType' surfaceFormat' renderTargetUsage' usage' loadedCallback);" is 184.
Long Statement,Reign.Video.Abstraction,Texture2DAPI,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Textures\Texture2D.cs,New,The length of the statement  "			if (videoType == VideoTypes.XNA) api = new XNA.Texture2D(parent' image' width' height' generateMipmaps' multiSampleType' surfaceFormat' renderTargetUsage' usage' loadedCallback);" is 178.
Long Statement,Reign.Video.Abstraction,Texture2DAPI,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Textures\Texture2D.cs,New,The length of the statement  "			if (videoType == VideoTypes.Vita) api = new Vita.Texture2D(parent' image' width' height' generateMipmaps' multiSampleType' surfaceFormat' renderTargetUsage' usage' loadedCallback);" is 180.
Virtual Method Call from Constructor,Reign.Video.Abstraction,Mesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\Mesh.cs,Mesh,The constructor "Mesh" calls a virtual method "Dispose".
Magic Number,Reign.Video.Abstraction,Font,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Font.cs,init,The following statement contains a magic number: var Indices = new int[6] 				{ 					0' 1' 2' 					0' 2' 3 				};
Magic Number,Reign.Video.Abstraction,Font,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Font.cs,init,The following statement contains a magic number: var Indices = new int[6] 				{ 					0' 1' 2' 					0' 2' 3 				};
Magic Number,Reign.Video.Abstraction,Font,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Font.cs,init,The following statement contains a magic number: var Indices = new int[6] 				{ 					0' 1' 2' 					0' 2' 3 				};
Magic Number,Reign.Video.Abstraction,Font,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Font.cs,init,The following statement contains a magic number: var Indices = new int[6] 				{ 					0' 1' 2' 					0' 2' 3 				};
Magic Number,Reign.Video.Abstraction,Font,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Font.cs,init,The following statement contains a magic number: var Vertices = new float[8] 				{ 					0' 0' 					0' 1' 					1' 1' 					1' 0' 				};
Magic Number,Reign.Video.Abstraction,Font,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Font.cs,CharacterIndex,The following statement contains a magic number: int i = ((int)@char) - 32;
Magic Number,Reign.Video.Abstraction,Font,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Font.cs,draw,The following statement contains a magic number: centeredLoc *= .5f;
Magic Number,Reign.Video.Abstraction,TriangleProcessor,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\HardwareMeshProcessor.cs,TriangleProcessor,The following statement contains a magic number: var colors = new Vector4[3][];
Magic Number,Reign.Video.Abstraction,TriangleProcessor,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\HardwareMeshProcessor.cs,TriangleProcessor,The following statement contains a magic number: colors[2][i] = colorComponent[2];
Magic Number,Reign.Video.Abstraction,TriangleProcessor,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\HardwareMeshProcessor.cs,TriangleProcessor,The following statement contains a magic number: colors[2][i] = colorComponent[2];
Magic Number,Reign.Video.Abstraction,TriangleProcessor,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\HardwareMeshProcessor.cs,TriangleProcessor,The following statement contains a magic number: var normals = new Vector3[3][];
Magic Number,Reign.Video.Abstraction,TriangleProcessor,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\HardwareMeshProcessor.cs,TriangleProcessor,The following statement contains a magic number: normals[2][i] = normalComponent[2];
Magic Number,Reign.Video.Abstraction,TriangleProcessor,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\HardwareMeshProcessor.cs,TriangleProcessor,The following statement contains a magic number: normals[2][i] = normalComponent[2];
Magic Number,Reign.Video.Abstraction,TriangleProcessor,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\HardwareMeshProcessor.cs,TriangleProcessor,The following statement contains a magic number: var uvs = new Vector2[3][];
Magic Number,Reign.Video.Abstraction,TriangleProcessor,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\HardwareMeshProcessor.cs,TriangleProcessor,The following statement contains a magic number: uvs[2][i] = normalComponent[2];
Magic Number,Reign.Video.Abstraction,TriangleProcessor,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\HardwareMeshProcessor.cs,TriangleProcessor,The following statement contains a magic number: uvs[2][i] = normalComponent[2];
Magic Number,Reign.Video.Abstraction,TriangleProcessor,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\HardwareMeshProcessor.cs,TriangleProcessor,The following statement contains a magic number: var vertex3 = new VertexProcessor(triangle.Verticies[2]' colors[2]' normals[2]' uvs[2]' mesh);
Magic Number,Reign.Video.Abstraction,TriangleProcessor,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\HardwareMeshProcessor.cs,TriangleProcessor,The following statement contains a magic number: var vertex3 = new VertexProcessor(triangle.Verticies[2]' colors[2]' normals[2]' uvs[2]' mesh);
Magic Number,Reign.Video.Abstraction,TriangleProcessor,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\HardwareMeshProcessor.cs,TriangleProcessor,The following statement contains a magic number: var vertex3 = new VertexProcessor(triangle.Verticies[2]' colors[2]' normals[2]' uvs[2]' mesh);
Magic Number,Reign.Video.Abstraction,TriangleProcessor,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\HardwareMeshProcessor.cs,TriangleProcessor,The following statement contains a magic number: var vertex3 = new VertexProcessor(triangle.Verticies[2]' colors[2]' normals[2]' uvs[2]' mesh);
Magic Number,Reign.Video.Abstraction,TriangleProcessor,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\HardwareMeshProcessor.cs,TriangleProcessor,The following statement contains a magic number: Verticies = new VertexProcessor[3] {vertex1' vertex2' vertex3};
Magic Number,Reign.Video.Abstraction,HardwareMeshProcessor,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\HardwareMeshProcessor.cs,HardwareMeshProcessor,The following statement contains a magic number: const float tolerance = .002f;
Magic Number,Reign.Video.Abstraction,HardwareMeshProcessor,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\HardwareMeshProcessor.cs,HardwareMeshProcessor,The following statement contains a magic number: vi2 != 3
Magic Number,Reign.Video.Abstraction,HardwareMeshProcessor,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\HardwareMeshProcessor.cs,HardwareMeshProcessor,The following statement contains a magic number: vi != 3
Magic Number,Reign.Video.Abstraction,Mesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\Mesh.cs,initData,The following statement contains a magic number: switch (softwareMesh.Dimensions) 			{ 				case 2: 					posElementType = BufferLayoutElementTypes.Vector2; 					posFloatCount = 2; 					break;  				case 3: 					posElementType = BufferLayoutElementTypes.Vector3; 					posFloatCount = 3; 					break; 			}
Magic Number,Reign.Video.Abstraction,Mesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\Mesh.cs,initData,The following statement contains a magic number: switch (softwareMesh.Dimensions) 			{ 				case 2: 					posElementType = BufferLayoutElementTypes.Vector2; 					posFloatCount = 2; 					break;  				case 3: 					posElementType = BufferLayoutElementTypes.Vector3; 					posFloatCount = 3; 					break; 			}
Magic Number,Reign.Video.Abstraction,Mesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\Mesh.cs,initData,The following statement contains a magic number: switch (softwareMesh.Dimensions) 			{ 				case 2: 					posElementType = BufferLayoutElementTypes.Vector2; 					posFloatCount = 2; 					break;  				case 3: 					posElementType = BufferLayoutElementTypes.Vector3; 					posFloatCount = 3; 					break; 			}
Magic Number,Reign.Video.Abstraction,Mesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\Mesh.cs,initData,The following statement contains a magic number: switch (softwareMesh.Dimensions) 			{ 				case 2: 					posElementType = BufferLayoutElementTypes.Vector2; 					posFloatCount = 2; 					break;  				case 3: 					posElementType = BufferLayoutElementTypes.Vector3; 					posFloatCount = 3; 					break; 			}
Magic Number,Reign.Video.Abstraction,Mesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\Mesh.cs,initData,The following statement contains a magic number: switch (key.Key) 				{ 					case TriangleComponentKeyTypes.ColorComponents: 						if (loadColors) 						{ 							elements.Add(new BufferLayoutElement(BufferLayoutElementTypes.Vector4' BufferLayoutElementUsages.Color' 0' colorCount' vertFloatCount)); 							vertFloatCount += 4; 							++colorCount; 						} 						break;  					case TriangleComponentKeyTypes.NormalComponents: 						if (loadNormals) 						{ 							elements.Add(new BufferLayoutElement(BufferLayoutElementTypes.Vector3' BufferLayoutElementUsages.Normal' 0' normalCount' vertFloatCount)); 							vertFloatCount += 3; 							++normalCount; 						} 						break;  					case TriangleComponentKeyTypes.UVComponents: 						if (loadUVs) 						{ 							elements.Add(new BufferLayoutElement(BufferLayoutElementTypes.Vector2' BufferLayoutElementUsages.UV' 0' uvCount' vertFloatCount)); 							vertFloatCount += 2; 							++uvCount; 						} 						break; 				}
Magic Number,Reign.Video.Abstraction,Mesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\Mesh.cs,initData,The following statement contains a magic number: switch (key.Key) 				{ 					case TriangleComponentKeyTypes.ColorComponents: 						if (loadColors) 						{ 							elements.Add(new BufferLayoutElement(BufferLayoutElementTypes.Vector4' BufferLayoutElementUsages.Color' 0' colorCount' vertFloatCount)); 							vertFloatCount += 4; 							++colorCount; 						} 						break;  					case TriangleComponentKeyTypes.NormalComponents: 						if (loadNormals) 						{ 							elements.Add(new BufferLayoutElement(BufferLayoutElementTypes.Vector3' BufferLayoutElementUsages.Normal' 0' normalCount' vertFloatCount)); 							vertFloatCount += 3; 							++normalCount; 						} 						break;  					case TriangleComponentKeyTypes.UVComponents: 						if (loadUVs) 						{ 							elements.Add(new BufferLayoutElement(BufferLayoutElementTypes.Vector2' BufferLayoutElementUsages.UV' 0' uvCount' vertFloatCount)); 							vertFloatCount += 2; 							++uvCount; 						} 						break; 				}
Magic Number,Reign.Video.Abstraction,Mesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\Mesh.cs,initData,The following statement contains a magic number: switch (key.Key) 				{ 					case TriangleComponentKeyTypes.ColorComponents: 						if (loadColors) 						{ 							elements.Add(new BufferLayoutElement(BufferLayoutElementTypes.Vector4' BufferLayoutElementUsages.Color' 0' colorCount' vertFloatCount)); 							vertFloatCount += 4; 							++colorCount; 						} 						break;  					case TriangleComponentKeyTypes.NormalComponents: 						if (loadNormals) 						{ 							elements.Add(new BufferLayoutElement(BufferLayoutElementTypes.Vector3' BufferLayoutElementUsages.Normal' 0' normalCount' vertFloatCount)); 							vertFloatCount += 3; 							++normalCount; 						} 						break;  					case TriangleComponentKeyTypes.UVComponents: 						if (loadUVs) 						{ 							elements.Add(new BufferLayoutElement(BufferLayoutElementTypes.Vector2' BufferLayoutElementUsages.UV' 0' uvCount' vertFloatCount)); 							vertFloatCount += 2; 							++uvCount; 						} 						break; 				}
Magic Number,Reign.Video.Abstraction,Mesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\Mesh.cs,initData,The following statement contains a magic number: switch (element.Usage) 					{ 						case BufferLayoutElementUsages.Position: 							vertices[vi] = vertex.Positions[posIndex].X; 							vertices[vi+1] = vertex.Positions[posIndex].Y; 							if (posFloatCount == 3) vertices[vi+2] = vertex.Positions[posIndex].Z; 							vi += posFloatCount; 							++posIndex; 							break;  						case BufferLayoutElementUsages.Color: 							if (loadColors) 							{ 								vertices[vi] = vertex.Colors[uvIndex].X; 								vertices[vi+1] = vertex.Colors[uvIndex].Y; 								vi += 4; 								++colorIndex; 							} 							break;  						case BufferLayoutElementUsages.Normal: 							if (loadNormals) 							{ 								vertices[vi] = vertex.Normals[normIndex].X; 								vertices[vi+1] = vertex.Normals[normIndex].Y; 								vertices[vi+2] = vertex.Normals[normIndex].Z; 								vi += 3; 								++normIndex; 							} 							break;  						case BufferLayoutElementUsages.UV: 							if (loadUVs) 							{ 								vertices[vi] = vertex.UVs[uvIndex].X; 								vertices[vi+1] = vertex.UVs[uvIndex].Y; 								vi += 2; 								++uvIndex; 							} 							break; 					}
Magic Number,Reign.Video.Abstraction,Mesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\Mesh.cs,initData,The following statement contains a magic number: switch (element.Usage) 					{ 						case BufferLayoutElementUsages.Position: 							vertices[vi] = vertex.Positions[posIndex].X; 							vertices[vi+1] = vertex.Positions[posIndex].Y; 							if (posFloatCount == 3) vertices[vi+2] = vertex.Positions[posIndex].Z; 							vi += posFloatCount; 							++posIndex; 							break;  						case BufferLayoutElementUsages.Color: 							if (loadColors) 							{ 								vertices[vi] = vertex.Colors[uvIndex].X; 								vertices[vi+1] = vertex.Colors[uvIndex].Y; 								vi += 4; 								++colorIndex; 							} 							break;  						case BufferLayoutElementUsages.Normal: 							if (loadNormals) 							{ 								vertices[vi] = vertex.Normals[normIndex].X; 								vertices[vi+1] = vertex.Normals[normIndex].Y; 								vertices[vi+2] = vertex.Normals[normIndex].Z; 								vi += 3; 								++normIndex; 							} 							break;  						case BufferLayoutElementUsages.UV: 							if (loadUVs) 							{ 								vertices[vi] = vertex.UVs[uvIndex].X; 								vertices[vi+1] = vertex.UVs[uvIndex].Y; 								vi += 2; 								++uvIndex; 							} 							break; 					}
Magic Number,Reign.Video.Abstraction,Mesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\Mesh.cs,initData,The following statement contains a magic number: switch (element.Usage) 					{ 						case BufferLayoutElementUsages.Position: 							vertices[vi] = vertex.Positions[posIndex].X; 							vertices[vi+1] = vertex.Positions[posIndex].Y; 							if (posFloatCount == 3) vertices[vi+2] = vertex.Positions[posIndex].Z; 							vi += posFloatCount; 							++posIndex; 							break;  						case BufferLayoutElementUsages.Color: 							if (loadColors) 							{ 								vertices[vi] = vertex.Colors[uvIndex].X; 								vertices[vi+1] = vertex.Colors[uvIndex].Y; 								vi += 4; 								++colorIndex; 							} 							break;  						case BufferLayoutElementUsages.Normal: 							if (loadNormals) 							{ 								vertices[vi] = vertex.Normals[normIndex].X; 								vertices[vi+1] = vertex.Normals[normIndex].Y; 								vertices[vi+2] = vertex.Normals[normIndex].Z; 								vi += 3; 								++normIndex; 							} 							break;  						case BufferLayoutElementUsages.UV: 							if (loadUVs) 							{ 								vertices[vi] = vertex.UVs[uvIndex].X; 								vertices[vi+1] = vertex.UVs[uvIndex].Y; 								vi += 2; 								++uvIndex; 							} 							break; 					}
Magic Number,Reign.Video.Abstraction,Mesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\Mesh.cs,initData,The following statement contains a magic number: switch (element.Usage) 					{ 						case BufferLayoutElementUsages.Position: 							vertices[vi] = vertex.Positions[posIndex].X; 							vertices[vi+1] = vertex.Positions[posIndex].Y; 							if (posFloatCount == 3) vertices[vi+2] = vertex.Positions[posIndex].Z; 							vi += posFloatCount; 							++posIndex; 							break;  						case BufferLayoutElementUsages.Color: 							if (loadColors) 							{ 								vertices[vi] = vertex.Colors[uvIndex].X; 								vertices[vi+1] = vertex.Colors[uvIndex].Y; 								vi += 4; 								++colorIndex; 							} 							break;  						case BufferLayoutElementUsages.Normal: 							if (loadNormals) 							{ 								vertices[vi] = vertex.Normals[normIndex].X; 								vertices[vi+1] = vertex.Normals[normIndex].Y; 								vertices[vi+2] = vertex.Normals[normIndex].Z; 								vi += 3; 								++normIndex; 							} 							break;  						case BufferLayoutElementUsages.UV: 							if (loadUVs) 							{ 								vertices[vi] = vertex.UVs[uvIndex].X; 								vertices[vi+1] = vertex.UVs[uvIndex].Y; 								vi += 2; 								++uvIndex; 							} 							break; 					}
Magic Number,Reign.Video.Abstraction,Mesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\Mesh.cs,initData,The following statement contains a magic number: switch (element.Usage) 					{ 						case BufferLayoutElementUsages.Position: 							vertices[vi] = vertex.Positions[posIndex].X; 							vertices[vi+1] = vertex.Positions[posIndex].Y; 							if (posFloatCount == 3) vertices[vi+2] = vertex.Positions[posIndex].Z; 							vi += posFloatCount; 							++posIndex; 							break;  						case BufferLayoutElementUsages.Color: 							if (loadColors) 							{ 								vertices[vi] = vertex.Colors[uvIndex].X; 								vertices[vi+1] = vertex.Colors[uvIndex].Y; 								vi += 4; 								++colorIndex; 							} 							break;  						case BufferLayoutElementUsages.Normal: 							if (loadNormals) 							{ 								vertices[vi] = vertex.Normals[normIndex].X; 								vertices[vi+1] = vertex.Normals[normIndex].Y; 								vertices[vi+2] = vertex.Normals[normIndex].Z; 								vi += 3; 								++normIndex; 							} 							break;  						case BufferLayoutElementUsages.UV: 							if (loadUVs) 							{ 								vertices[vi] = vertex.UVs[uvIndex].X; 								vertices[vi+1] = vertex.UVs[uvIndex].Y; 								vi += 2; 								++uvIndex; 							} 							break; 					}
Magic Number,Reign.Video.Abstraction,Mesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\Mesh.cs,initData,The following statement contains a magic number: switch (element.Usage) 					{ 						case BufferLayoutElementUsages.Position: 							vertices[vi] = vertex.Positions[posIndex].X; 							vertices[vi+1] = vertex.Positions[posIndex].Y; 							if (posFloatCount == 3) vertices[vi+2] = vertex.Positions[posIndex].Z; 							vi += posFloatCount; 							++posIndex; 							break;  						case BufferLayoutElementUsages.Color: 							if (loadColors) 							{ 								vertices[vi] = vertex.Colors[uvIndex].X; 								vertices[vi+1] = vertex.Colors[uvIndex].Y; 								vi += 4; 								++colorIndex; 							} 							break;  						case BufferLayoutElementUsages.Normal: 							if (loadNormals) 							{ 								vertices[vi] = vertex.Normals[normIndex].X; 								vertices[vi+1] = vertex.Normals[normIndex].Y; 								vertices[vi+2] = vertex.Normals[normIndex].Z; 								vi += 3; 								++normIndex; 							} 							break;  						case BufferLayoutElementUsages.UV: 							if (loadUVs) 							{ 								vertices[vi] = vertex.UVs[uvIndex].X; 								vertices[vi+1] = vertex.UVs[uvIndex].Y; 								vi += 2; 								++uvIndex; 							} 							break; 					}
Magic Number,Reign.Video.Abstraction,Mesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\Mesh.cs,initData,The following statement contains a magic number: indices = new int[meshProcessor.Triangles.Count * 3];
Magic Number,Reign.Video.Abstraction,Mesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\Mesh.cs,initData,The following statement contains a magic number: indices[ti+2] = triangle.Verticies[2].Index;
Magic Number,Reign.Video.Abstraction,Mesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\Mesh.cs,initData,The following statement contains a magic number: indices[ti+2] = triangle.Verticies[2].Index;
Magic Number,Reign.Video.Abstraction,Mesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\Mesh.cs,initData,The following statement contains a magic number: ti += 3;
Magic Number,Reign.Video.Abstraction,SoftwareFCurve,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareAction.cs,SoftwareFCurve,The following statement contains a magic number: int i2 = 0' loop = values.Length / 2;
Magic Number,Reign.Video.Abstraction,SoftwareFCurve,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareAction.cs,SoftwareFCurve,The following statement contains a magic number: i2 += 2;
Magic Number,Reign.Video.Abstraction,SoftwareBone,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareArmature.cs,SoftwareBone,The following statement contains a magic number: Position = new Vector3(bone.Position.Values[0]' bone.Position.Values[1]' bone.Position.Values[2]);
Magic Number,Reign.Video.Abstraction,SoftwareBone,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareArmature.cs,SoftwareBone,The following statement contains a magic number: Rotation = new Matrix3 			( 				new Vector3(bone.Rotation.Values[0]' bone.Rotation.Values[1]' bone.Rotation.Values[2])' 				new Vector3(bone.Rotation.Values[3]' bone.Rotation.Values[4]' bone.Rotation.Values[5])' 				new Vector3(bone.Rotation.Values[6]' bone.Rotation.Values[7]' bone.Rotation.Values[8]) 			);
Magic Number,Reign.Video.Abstraction,SoftwareBone,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareArmature.cs,SoftwareBone,The following statement contains a magic number: Rotation = new Matrix3 			( 				new Vector3(bone.Rotation.Values[0]' bone.Rotation.Values[1]' bone.Rotation.Values[2])' 				new Vector3(bone.Rotation.Values[3]' bone.Rotation.Values[4]' bone.Rotation.Values[5])' 				new Vector3(bone.Rotation.Values[6]' bone.Rotation.Values[7]' bone.Rotation.Values[8]) 			);
Magic Number,Reign.Video.Abstraction,SoftwareBone,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareArmature.cs,SoftwareBone,The following statement contains a magic number: Rotation = new Matrix3 			( 				new Vector3(bone.Rotation.Values[0]' bone.Rotation.Values[1]' bone.Rotation.Values[2])' 				new Vector3(bone.Rotation.Values[3]' bone.Rotation.Values[4]' bone.Rotation.Values[5])' 				new Vector3(bone.Rotation.Values[6]' bone.Rotation.Values[7]' bone.Rotation.Values[8]) 			);
Magic Number,Reign.Video.Abstraction,SoftwareBone,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareArmature.cs,SoftwareBone,The following statement contains a magic number: Rotation = new Matrix3 			( 				new Vector3(bone.Rotation.Values[0]' bone.Rotation.Values[1]' bone.Rotation.Values[2])' 				new Vector3(bone.Rotation.Values[3]' bone.Rotation.Values[4]' bone.Rotation.Values[5])' 				new Vector3(bone.Rotation.Values[6]' bone.Rotation.Values[7]' bone.Rotation.Values[8]) 			);
Magic Number,Reign.Video.Abstraction,SoftwareBone,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareArmature.cs,SoftwareBone,The following statement contains a magic number: Rotation = new Matrix3 			( 				new Vector3(bone.Rotation.Values[0]' bone.Rotation.Values[1]' bone.Rotation.Values[2])' 				new Vector3(bone.Rotation.Values[3]' bone.Rotation.Values[4]' bone.Rotation.Values[5])' 				new Vector3(bone.Rotation.Values[6]' bone.Rotation.Values[7]' bone.Rotation.Values[8]) 			);
Magic Number,Reign.Video.Abstraction,SoftwareBone,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareArmature.cs,SoftwareBone,The following statement contains a magic number: Rotation = new Matrix3 			( 				new Vector3(bone.Rotation.Values[0]' bone.Rotation.Values[1]' bone.Rotation.Values[2])' 				new Vector3(bone.Rotation.Values[3]' bone.Rotation.Values[4]' bone.Rotation.Values[5])' 				new Vector3(bone.Rotation.Values[6]' bone.Rotation.Values[7]' bone.Rotation.Values[8]) 			);
Magic Number,Reign.Video.Abstraction,SoftwareBone,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareArmature.cs,SoftwareBone,The following statement contains a magic number: Rotation = new Matrix3 			( 				new Vector3(bone.Rotation.Values[0]' bone.Rotation.Values[1]' bone.Rotation.Values[2])' 				new Vector3(bone.Rotation.Values[3]' bone.Rotation.Values[4]' bone.Rotation.Values[5])' 				new Vector3(bone.Rotation.Values[6]' bone.Rotation.Values[7]' bone.Rotation.Values[8]) 			);
Magic Number,Reign.Video.Abstraction,SoftwareEdge,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareEdge.cs,SoftwareEdge,The following statement contains a magic number: Verticies = new SoftwareVertex[2] {vertex1' vertex2};
Magic Number,Reign.Video.Abstraction,SoftwareMaterial,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareMaterial.cs,SoftwareMaterial,The following statement contains a magic number: switch (input.Values.Length) 					{ 						case 1: Values1.Add(input.ID' input.Values[0]); break; 						case 2: Values2.Add(input.ID' new Vector2(input.Values[0]' input.Values[1])); break; 						case 3: Values3.Add(input.ID' new Vector3(input.Values[0]' input.Values[1]' input.Values[2])); break; 						case 4: Values4.Add(input.ID' new Vector4(input.Values[0]' input.Values[1]' input.Values[2]' input.Values[3])); break; 					}
Magic Number,Reign.Video.Abstraction,SoftwareMaterial,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareMaterial.cs,SoftwareMaterial,The following statement contains a magic number: switch (input.Values.Length) 					{ 						case 1: Values1.Add(input.ID' input.Values[0]); break; 						case 2: Values2.Add(input.ID' new Vector2(input.Values[0]' input.Values[1])); break; 						case 3: Values3.Add(input.ID' new Vector3(input.Values[0]' input.Values[1]' input.Values[2])); break; 						case 4: Values4.Add(input.ID' new Vector4(input.Values[0]' input.Values[1]' input.Values[2]' input.Values[3])); break; 					}
Magic Number,Reign.Video.Abstraction,SoftwareMaterial,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareMaterial.cs,SoftwareMaterial,The following statement contains a magic number: switch (input.Values.Length) 					{ 						case 1: Values1.Add(input.ID' input.Values[0]); break; 						case 2: Values2.Add(input.ID' new Vector2(input.Values[0]' input.Values[1])); break; 						case 3: Values3.Add(input.ID' new Vector3(input.Values[0]' input.Values[1]' input.Values[2])); break; 						case 4: Values4.Add(input.ID' new Vector4(input.Values[0]' input.Values[1]' input.Values[2]' input.Values[3])); break; 					}
Magic Number,Reign.Video.Abstraction,SoftwareMaterial,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareMaterial.cs,SoftwareMaterial,The following statement contains a magic number: switch (input.Values.Length) 					{ 						case 1: Values1.Add(input.ID' input.Values[0]); break; 						case 2: Values2.Add(input.ID' new Vector2(input.Values[0]' input.Values[1])); break; 						case 3: Values3.Add(input.ID' new Vector3(input.Values[0]' input.Values[1]' input.Values[2])); break; 						case 4: Values4.Add(input.ID' new Vector4(input.Values[0]' input.Values[1]' input.Values[2]' input.Values[3])); break; 					}
Magic Number,Reign.Video.Abstraction,SoftwareMaterial,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareMaterial.cs,SoftwareMaterial,The following statement contains a magic number: switch (input.Values.Length) 					{ 						case 1: Values1.Add(input.ID' input.Values[0]); break; 						case 2: Values2.Add(input.ID' new Vector2(input.Values[0]' input.Values[1])); break; 						case 3: Values3.Add(input.ID' new Vector3(input.Values[0]' input.Values[1]' input.Values[2])); break; 						case 4: Values4.Add(input.ID' new Vector4(input.Values[0]' input.Values[1]' input.Values[2]' input.Values[3])); break; 					}
Magic Number,Reign.Video.Abstraction,SoftwareMaterial,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareMaterial.cs,SoftwareMaterial,The following statement contains a magic number: switch (input.Values.Length) 					{ 						case 1: Values1.Add(input.ID' input.Values[0]); break; 						case 2: Values2.Add(input.ID' new Vector2(input.Values[0]' input.Values[1])); break; 						case 3: Values3.Add(input.ID' new Vector3(input.Values[0]' input.Values[1]' input.Values[2])); break; 						case 4: Values4.Add(input.ID' new Vector4(input.Values[0]' input.Values[1]' input.Values[2]' input.Values[3])); break; 					}
Magic Number,Reign.Video.Abstraction,SoftwareMesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareMesh.cs,SoftwareMesh,The following statement contains a magic number: var vertexPostions = new Vector3[channel.Values.Length / 3];
Magic Number,Reign.Video.Abstraction,SoftwareMesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareMesh.cs,SoftwareMesh,The following statement contains a magic number: vertexPostions[i3] = new Vector3(positions[i2]' positions[i2+1]' positions[i2+2]);
Magic Number,Reign.Video.Abstraction,SoftwareMesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareMesh.cs,SoftwareMesh,The following statement contains a magic number: i2 += 3;
Magic Number,Reign.Video.Abstraction,SoftwareMesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareMesh.cs,SoftwareMesh,The following statement contains a magic number: channel.Step == 3
Magic Number,Reign.Video.Abstraction,SoftwareMesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareMesh.cs,SoftwareMesh,The following statement contains a magic number: int loop = step - 2;
Magic Number,Reign.Video.Abstraction,SoftwareMesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareMesh.cs,SoftwareMesh,The following statement contains a magic number: int vi2 = vi + 1' vi3 = vi + 2;
Magic Number,Reign.Video.Abstraction,SoftwareMesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareMesh.cs,SoftwareMesh,The following statement contains a magic number: int cii = colorIndices[vi] * 3' cii2 = colorIndices[vi2] * 3' cii3 = colorIndices[vi3] * 3;
Magic Number,Reign.Video.Abstraction,SoftwareMesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareMesh.cs,SoftwareMesh,The following statement contains a magic number: int cii = colorIndices[vi] * 3' cii2 = colorIndices[vi2] * 3' cii3 = colorIndices[vi3] * 3;
Magic Number,Reign.Video.Abstraction,SoftwareMesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareMesh.cs,SoftwareMesh,The following statement contains a magic number: int cii = colorIndices[vi] * 3' cii2 = colorIndices[vi2] * 3' cii3 = colorIndices[vi3] * 3;
Magic Number,Reign.Video.Abstraction,SoftwareMesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareMesh.cs,SoftwareMesh,The following statement contains a magic number: triangleColors.Add(new TriangleColorComponent 							( 								new Vector4(colors[cii]' colors[cii+1]' colors[cii+2]' colors[cii+3])' 								new Vector4(colors[cii2]' colors[cii2+1]' colors[cii2+2]' colors[cii2+3])' 								new Vector4(colors[cii3]' colors[cii3+1]' colors[cii3+2]' colors[cii3+3])) 							);
Magic Number,Reign.Video.Abstraction,SoftwareMesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareMesh.cs,SoftwareMesh,The following statement contains a magic number: triangleColors.Add(new TriangleColorComponent 							( 								new Vector4(colors[cii]' colors[cii+1]' colors[cii+2]' colors[cii+3])' 								new Vector4(colors[cii2]' colors[cii2+1]' colors[cii2+2]' colors[cii2+3])' 								new Vector4(colors[cii3]' colors[cii3+1]' colors[cii3+2]' colors[cii3+3])) 							);
Magic Number,Reign.Video.Abstraction,SoftwareMesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareMesh.cs,SoftwareMesh,The following statement contains a magic number: triangleColors.Add(new TriangleColorComponent 							( 								new Vector4(colors[cii]' colors[cii+1]' colors[cii+2]' colors[cii+3])' 								new Vector4(colors[cii2]' colors[cii2+1]' colors[cii2+2]' colors[cii2+3])' 								new Vector4(colors[cii3]' colors[cii3+1]' colors[cii3+2]' colors[cii3+3])) 							);
Magic Number,Reign.Video.Abstraction,SoftwareMesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareMesh.cs,SoftwareMesh,The following statement contains a magic number: triangleColors.Add(new TriangleColorComponent 							( 								new Vector4(colors[cii]' colors[cii+1]' colors[cii+2]' colors[cii+3])' 								new Vector4(colors[cii2]' colors[cii2+1]' colors[cii2+2]' colors[cii2+3])' 								new Vector4(colors[cii3]' colors[cii3+1]' colors[cii3+2]' colors[cii3+3])) 							);
Magic Number,Reign.Video.Abstraction,SoftwareMesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareMesh.cs,SoftwareMesh,The following statement contains a magic number: triangleColors.Add(new TriangleColorComponent 							( 								new Vector4(colors[cii]' colors[cii+1]' colors[cii+2]' colors[cii+3])' 								new Vector4(colors[cii2]' colors[cii2+1]' colors[cii2+2]' colors[cii2+3])' 								new Vector4(colors[cii3]' colors[cii3+1]' colors[cii3+2]' colors[cii3+3])) 							);
Magic Number,Reign.Video.Abstraction,SoftwareMesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareMesh.cs,SoftwareMesh,The following statement contains a magic number: triangleColors.Add(new TriangleColorComponent 							( 								new Vector4(colors[cii]' colors[cii+1]' colors[cii+2]' colors[cii+3])' 								new Vector4(colors[cii2]' colors[cii2+1]' colors[cii2+2]' colors[cii2+3])' 								new Vector4(colors[cii3]' colors[cii3+1]' colors[cii3+2]' colors[cii3+3])) 							);
Magic Number,Reign.Video.Abstraction,SoftwareMesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareMesh.cs,SoftwareMesh,The following statement contains a magic number: int nii = normalIndices[vi] * 3' nii2 = normalIndices[vi2] * 3' nii3 = normalIndices[vi3] * 3;
Magic Number,Reign.Video.Abstraction,SoftwareMesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareMesh.cs,SoftwareMesh,The following statement contains a magic number: int nii = normalIndices[vi] * 3' nii2 = normalIndices[vi2] * 3' nii3 = normalIndices[vi3] * 3;
Magic Number,Reign.Video.Abstraction,SoftwareMesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareMesh.cs,SoftwareMesh,The following statement contains a magic number: int nii = normalIndices[vi] * 3' nii2 = normalIndices[vi2] * 3' nii3 = normalIndices[vi3] * 3;
Magic Number,Reign.Video.Abstraction,SoftwareMesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareMesh.cs,SoftwareMesh,The following statement contains a magic number: triangleNormals.Add(new TriangleNormalComponent 							( 								new Vector3(normals[nii]' normals[nii+1]' normals[nii+2])' 								new Vector3(normals[nii2]' normals[nii2+1]' normals[nii2+2])' 								new Vector3(normals[nii3]' normals[nii3+1]' normals[nii3+2])) 							);
Magic Number,Reign.Video.Abstraction,SoftwareMesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareMesh.cs,SoftwareMesh,The following statement contains a magic number: triangleNormals.Add(new TriangleNormalComponent 							( 								new Vector3(normals[nii]' normals[nii+1]' normals[nii+2])' 								new Vector3(normals[nii2]' normals[nii2+1]' normals[nii2+2])' 								new Vector3(normals[nii3]' normals[nii3+1]' normals[nii3+2])) 							);
Magic Number,Reign.Video.Abstraction,SoftwareMesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareMesh.cs,SoftwareMesh,The following statement contains a magic number: triangleNormals.Add(new TriangleNormalComponent 							( 								new Vector3(normals[nii]' normals[nii+1]' normals[nii+2])' 								new Vector3(normals[nii2]' normals[nii2+1]' normals[nii2+2])' 								new Vector3(normals[nii3]' normals[nii3+1]' normals[nii3+2])) 							);
Magic Number,Reign.Video.Abstraction,SoftwareMesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareMesh.cs,SoftwareMesh,The following statement contains a magic number: int uii = uvIndices[vi] * 2' uii2 = uvIndices[vi2] * 2' uii3 = uvIndices[vi3] * 2;
Magic Number,Reign.Video.Abstraction,SoftwareMesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareMesh.cs,SoftwareMesh,The following statement contains a magic number: int uii = uvIndices[vi] * 2' uii2 = uvIndices[vi2] * 2' uii3 = uvIndices[vi3] * 2;
Magic Number,Reign.Video.Abstraction,SoftwareMesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareMesh.cs,SoftwareMesh,The following statement contains a magic number: int uii = uvIndices[vi] * 2' uii2 = uvIndices[vi2] * 2' uii3 = uvIndices[vi3] * 2;
Magic Number,Reign.Video.Abstraction,SoftwareMesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareMesh.cs,SoftwareMesh,The following statement contains a magic number: positionStep == 3
Magic Number,Reign.Video.Abstraction,SoftwareObject,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareObject.cs,SoftwareObject,The following statement contains a magic number: switch (input.Type) 				{ 					case "EulerRotation": Rotation = new Vector3(input.Values[0]' input.Values[1]' input.Values[2]); break; 					case "Scale": Scale = new Vector3(input.Values[0]' input.Values[1]' input.Values[2]); break; 					case "Position": Position = new Vector3(input.Values[0]' input.Values[1]' input.Values[2]); break; 					default: Debug.ThrowError("SoftwareMesh"' "Unsuported Transform Type: " + input.Type); break; 				}
Magic Number,Reign.Video.Abstraction,SoftwareObject,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareObject.cs,SoftwareObject,The following statement contains a magic number: switch (input.Type) 				{ 					case "EulerRotation": Rotation = new Vector3(input.Values[0]' input.Values[1]' input.Values[2]); break; 					case "Scale": Scale = new Vector3(input.Values[0]' input.Values[1]' input.Values[2]); break; 					case "Position": Position = new Vector3(input.Values[0]' input.Values[1]' input.Values[2]); break; 					default: Debug.ThrowError("SoftwareMesh"' "Unsuported Transform Type: " + input.Type); break; 				}
Magic Number,Reign.Video.Abstraction,SoftwareObject,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareObject.cs,SoftwareObject,The following statement contains a magic number: switch (input.Type) 				{ 					case "EulerRotation": Rotation = new Vector3(input.Values[0]' input.Values[1]' input.Values[2]); break; 					case "Scale": Scale = new Vector3(input.Values[0]' input.Values[1]' input.Values[2]); break; 					case "Position": Position = new Vector3(input.Values[0]' input.Values[1]' input.Values[2]); break; 					default: Debug.ThrowError("SoftwareMesh"' "Unsuported Transform Type: " + input.Type); break; 				}
Magic Number,Reign.Video.Abstraction,TriangleNormalComponent,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareTriangle.cs,TriangleNormalComponent,The following statement contains a magic number: Normals = new Vector3[3] {normal1' normal2' normal3};
Magic Number,Reign.Video.Abstraction,TriangleUVComponent,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareTriangle.cs,TriangleUVComponent,The following statement contains a magic number: UVs = new Vector2[3] {uv1' uv2' uv3};
Magic Number,Reign.Video.Abstraction,TriangleColorComponent,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareTriangle.cs,TriangleColorComponent,The following statement contains a magic number: Colors = new Vector4[3] {color1' color2' color3};
Magic Number,Reign.Video.Abstraction,SoftwareTriangle,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareTriangle.cs,SoftwareTriangle,The following statement contains a magic number: Verticies = new SoftwareVertex[3] {vertex1' vertex2' vertex3};
Magic Number,Reign.Video.Abstraction,SoftwareTriangle,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareTriangle.cs,SoftwareTriangle,The following statement contains a magic number: vertex3.TraingleIndex.Add(2);
Missing Default,Reign.Video.Abstraction,HardwareMeshProcessor,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\HardwareMeshProcessor.cs,HardwareMeshProcessor,The following switch statement is missing a default case: switch (key.Key) 				{ 					case VertexComponentKeyTypes.Positions: 						var vertexComponents = mesh.VetexComponents[key.Value]; 						if (vertexComponents.GetType() == typeof(Vector3[])) 						{ 							positions.Add((Vector3[])vertexComponents); 						} 						else if (vertexComponents.GetType() == typeof(Vector2[])) 						{ 							var verts = (Vector2[])vertexComponents; 							var newVerts = new Vector3[verts.Length]; 							for (int i = 0; i != verts.Length; ++i) newVerts[i] = new Vector3(verts[i].X' verts[i].Y' 0); 							positions.Add(newVerts); 						} 						else 						{ 							Debug.ThrowError("HardwareMeshProcessor"' "Unsuported VectorComponent type"); 						} 						break; 				}
Missing Default,Reign.Video.Abstraction,HardwareMeshProcessor,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\HardwareMeshProcessor.cs,HardwareMeshProcessor,The following switch statement is missing a default case: switch (key.Key) 				{ 					case TriangleComponentKeyTypes.ColorComponents: 						if (loadColors) colorComponents.Add((TriangleColorComponent[])mesh.TriangleComponents[key.Value]); 						break;  					case TriangleComponentKeyTypes.NormalComponents: 						if (loadNormals) normalComponents.Add((TriangleNormalComponent[])mesh.TriangleComponents[key.Value]); 						break;  					case TriangleComponentKeyTypes.UVComponents: 						if (loadUVs) uvComponents.Add((TriangleUVComponent[])mesh.TriangleComponents[key.Value]); 						break; 				}
Missing Default,Reign.Video.Abstraction,Mesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\Mesh.cs,initData,The following switch statement is missing a default case: switch (softwareMesh.Dimensions) 			{ 				case 2: 					posElementType = BufferLayoutElementTypes.Vector2; 					posFloatCount = 2; 					break;  				case 3: 					posElementType = BufferLayoutElementTypes.Vector3; 					posFloatCount = 3; 					break; 			}
Missing Default,Reign.Video.Abstraction,Mesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\Mesh.cs,initData,The following switch statement is missing a default case: switch (key.Key) 				{ 					case VertexComponentKeyTypes.Positions: 						elements.Add(new BufferLayoutElement(posElementType' BufferLayoutElementUsages.Position' 0' posCount' vertFloatCount)); 						vertFloatCount += posFloatCount; 						++posCount; 						break; 				}
Missing Default,Reign.Video.Abstraction,Mesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\Mesh.cs,initData,The following switch statement is missing a default case: switch (key.Key) 				{ 					case TriangleComponentKeyTypes.ColorComponents: 						if (loadColors) 						{ 							elements.Add(new BufferLayoutElement(BufferLayoutElementTypes.Vector4' BufferLayoutElementUsages.Color' 0' colorCount' vertFloatCount)); 							vertFloatCount += 4; 							++colorCount; 						} 						break;  					case TriangleComponentKeyTypes.NormalComponents: 						if (loadNormals) 						{ 							elements.Add(new BufferLayoutElement(BufferLayoutElementTypes.Vector3' BufferLayoutElementUsages.Normal' 0' normalCount' vertFloatCount)); 							vertFloatCount += 3; 							++normalCount; 						} 						break;  					case TriangleComponentKeyTypes.UVComponents: 						if (loadUVs) 						{ 							elements.Add(new BufferLayoutElement(BufferLayoutElementTypes.Vector2' BufferLayoutElementUsages.UV' 0' uvCount' vertFloatCount)); 							vertFloatCount += 2; 							++uvCount; 						} 						break; 				}
Missing Default,Reign.Video.Abstraction,Mesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\Mesh.cs,initData,The following switch statement is missing a default case: switch (element.Usage) 					{ 						case BufferLayoutElementUsages.Position: 							vertices[vi] = vertex.Positions[posIndex].X; 							vertices[vi+1] = vertex.Positions[posIndex].Y; 							if (posFloatCount == 3) vertices[vi+2] = vertex.Positions[posIndex].Z; 							vi += posFloatCount; 							++posIndex; 							break;  						case BufferLayoutElementUsages.Color: 							if (loadColors) 							{ 								vertices[vi] = vertex.Colors[uvIndex].X; 								vertices[vi+1] = vertex.Colors[uvIndex].Y; 								vi += 4; 								++colorIndex; 							} 							break;  						case BufferLayoutElementUsages.Normal: 							if (loadNormals) 							{ 								vertices[vi] = vertex.Normals[normIndex].X; 								vertices[vi+1] = vertex.Normals[normIndex].Y; 								vertices[vi+2] = vertex.Normals[normIndex].Z; 								vi += 3; 								++normIndex; 							} 							break;  						case BufferLayoutElementUsages.UV: 							if (loadUVs) 							{ 								vertices[vi] = vertex.UVs[uvIndex].X; 								vertices[vi+1] = vertex.UVs[uvIndex].Y; 								vi += 2; 								++uvIndex; 							} 							break; 					}
Missing Default,Reign.Video.Abstraction,SoftwareFCurve,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareAction.cs,SoftwareFCurve,The following switch statement is missing a default case: switch (types[i]) 				{ 					case 'B': interpolationType = InterpolationTypes.Bezier; break; 					case 'L': interpolationType = InterpolationTypes.Linear; break; 					case 'C': interpolationType = InterpolationTypes.Constant; break; 				}
Missing Default,Reign.Video.Abstraction,SoftwareMaterial,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareMaterial.cs,SoftwareMaterial,The following switch statement is missing a default case: switch (input.Values.Length) 					{ 						case 1: Values1.Add(input.ID' input.Values[0]); break; 						case 2: Values2.Add(input.ID' new Vector2(input.Values[0]' input.Values[1])); break; 						case 3: Values3.Add(input.ID' new Vector3(input.Values[0]' input.Values[1]' input.Values[2])); break; 						case 4: Values4.Add(input.ID' new Vector4(input.Values[0]' input.Values[1]' input.Values[2]' input.Values[3])); break; 					}
Missing Default,Reign.Video.Abstraction,SoftwareMesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareMesh.cs,SoftwareMesh,The following switch statement is missing a default case: switch (channel.ID) 				{ 					case "Position": hasPositionData = true; break; 					case "Color": colors = channel.Values; break; 					case "Normal": normals = channel.Values; break; 					case "UV": uvs = channel.Values; break; 				}
Missing Default,Reign.Video.Abstraction,SoftwareMesh,C:\research\architectureSmells\repos\reignstudios_ReignSDK\Platforms\Common\Reign.Video.API\Model\SoftwareModel\SoftwareMesh.cs,SoftwareMesh,The following switch statement is missing a default case: switch (index.ID) 				{ 					case "Position": positionIndices = index.Values; break; 					case "Color": colorIndices = index.Values; break; 					case "Normal": normalIndices = index.Values; break; 					case "UV": uvIndices = index.Values; break; 				}
