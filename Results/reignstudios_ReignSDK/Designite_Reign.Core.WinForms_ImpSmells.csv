Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Reign.Core.WinForms,Platform,C:\repos\reignstudios_ReignSDK\Platforms\Win32\Reign.Core.WinForms\Platform.cs,PeekMessage,The method has 5 parameters. Parameters: msg' hWnd' messageFilterMin' messageFilterMax' flags
Long Statement,Reign.Core.WinForms,WinFormApplication,C:\repos\reignstudios_ReignSDK\Platforms\Win32\Reign.Core.WinForms\WinFormApplication.cs,Init,The length of the statement  "					if (s == null) Debug.ThrowError("WinFormApplication"' "Cannot find icon file.\nYou must use this nameing convention: {MyAppNam}.IconFileName.png"); " is 147.
Missing Default,Reign.Core.WinForms,WinFormApplication,C:\repos\reignstudios_ReignSDK\Platforms\Win32\Reign.Core.WinForms\WinFormApplication.cs,Init,The following switch statement is missing a default case: switch (desc.StartPosition)  			{  				case ApplicationStartPositions.Default: StartPosition = FormStartPosition.WindowsDefaultLocation; break;  				case ApplicationStartPositions.CenterCurrentScreen: StartPosition = FormStartPosition.CenterScreen; break;  			}
Missing Default,Reign.Core.WinForms,WinFormApplication,C:\repos\reignstudios_ReignSDK\Platforms\Win32\Reign.Core.WinForms\WinFormApplication.cs,Init,The following switch statement is missing a default case: switch (desc.Type)  			{  				case ApplicationTypes.Box:  					FormBorderStyle = FormBorderStyle.None; break;    				case ApplicationTypes.Frame:  					FormBorderStyle = FormBorderStyle.FixedDialog;  					MaximizeBox = false;  					break;    				case ApplicationTypes.FrameSizable:  					FormBorderStyle = FormBorderStyle.Sizable; break;  			}
Missing Default,Reign.Core.WinForms,WinFormApplication,C:\repos\reignstudios_ReignSDK\Platforms\Win32\Reign.Core.WinForms\WinFormApplication.cs,mouseDownEvent,The following switch statement is missing a default case: switch (e.Button)  			{  				case MouseButtons.Left: theEvent.Type = ApplicationEventTypes.LeftMouseDown; break;  				case MouseButtons.Middle: theEvent.Type = ApplicationEventTypes.MiddleMouseDown; break;  				case MouseButtons.Right: theEvent.Type = ApplicationEventTypes.RightMouseDown; break;  			}
Missing Default,Reign.Core.WinForms,WinFormApplication,C:\repos\reignstudios_ReignSDK\Platforms\Win32\Reign.Core.WinForms\WinFormApplication.cs,mouseUpEvent,The following switch statement is missing a default case: switch (e.Button)  			{  				case MouseButtons.Left: theEvent.Type = ApplicationEventTypes.LeftMouseUp; break;  				case MouseButtons.Middle: theEvent.Type = ApplicationEventTypes.MiddleMouseUp; break;  				case MouseButtons.Right: theEvent.Type = ApplicationEventTypes.RightMouseUp; break;  			}
