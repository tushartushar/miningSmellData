Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,MvcSolution.Services,ImageService,C:\repos\leotsai_mvcsolution\MvcSolution.Services\Implementations\ImageService.cs,SaveImageAndReturnKey,The method has 5 parameters. Parameters: type' file' userId' key' cropCenter
Long Parameter List,MvcSolution.Services,ImageService,C:\repos\leotsai_mvcsolution\MvcSolution.Services\Implementations\ImageService.cs,SaveImageAndReturnKey,The method has 6 parameters. Parameters: type' fileName' inputStream' userId' key' cropCenter
Magic Number,MvcSolution.Services,ImageService,C:\repos\leotsai_mvcsolution\MvcSolution.Services\Implementations\ImageService.cs,SaveImageAndReturnKey,The following statement contains a magic number: try              {                  using (var inputImage = System.Drawing.Image.FromStream(inputStream))                  {                      this.TryRotateImage(inputImage);                      var sizedImage = cropCenter ? inputImage.CropCenter(500) : inputImage.ToSize(new Size(1024' 768));                      using (sizedImage)                      {                          sizedImage.SaveToFileInQuality(physicalPath' format);                          image.Width = sizedImage.Width;                          image.Height = sizedImage.Height;                      }                  }              }              catch              {                  throw new KnownException("Invalid image file");              }
Magic Number,MvcSolution.Services,ImageService,C:\repos\leotsai_mvcsolution\MvcSolution.Services\Implementations\ImageService.cs,SaveImageAndReturnKey,The following statement contains a magic number: try              {                  using (var inputImage = System.Drawing.Image.FromStream(inputStream))                  {                      this.TryRotateImage(inputImage);                      var sizedImage = cropCenter ? inputImage.CropCenter(500) : inputImage.ToSize(new Size(1024' 768));                      using (sizedImage)                      {                          sizedImage.SaveToFileInQuality(physicalPath' format);                          image.Width = sizedImage.Width;                          image.Height = sizedImage.Height;                      }                  }              }              catch              {                  throw new KnownException("Invalid image file");              }
Magic Number,MvcSolution.Services,ImageService,C:\repos\leotsai_mvcsolution\MvcSolution.Services\Implementations\ImageService.cs,SaveImageAndReturnKey,The following statement contains a magic number: try              {                  using (var inputImage = System.Drawing.Image.FromStream(inputStream))                  {                      this.TryRotateImage(inputImage);                      var sizedImage = cropCenter ? inputImage.CropCenter(500) : inputImage.ToSize(new Size(1024' 768));                      using (sizedImage)                      {                          sizedImage.SaveToFileInQuality(physicalPath' format);                          image.Width = sizedImage.Width;                          image.Height = sizedImage.Height;                      }                  }              }              catch              {                  throw new KnownException("Invalid image file");              }
Magic Number,MvcSolution.Services,ImageService,C:\repos\leotsai_mvcsolution\MvcSolution.Services\Implementations\ImageService.cs,TryRotateImage,The following statement contains a magic number: try              {                  if (inputImage.PropertyIdList.Contains(0x0112))                  {                      var pro = inputImage.GetPropertyItem(0x0112);                      if (pro != null && pro.Value[0] == 6 && pro.Value[1] == 0)                      {                          inputImage.RotateFlip(RotateFlipType.Rotate90FlipNone);                      }                  }              }              catch (Exception ex)              {                  LogHelper.TryLog("ImageService.TryRotateImage"' ex);              }
