Implementation smell,Namespace,Class,File,Method,Description
Complex Method,MvcSolution.Services,ImageService,F:\newReposMay17\leotsai_mvcsolution\MvcSolution.Services\Implementations\ImageService.cs,SaveImageAndReturnKey,Cyclomatic complexity of the method is 10
Long Parameter List,MvcSolution.Services,ImageService,F:\newReposMay17\leotsai_mvcsolution\MvcSolution.Services\Implementations\ImageService.cs,SaveImageAndReturnKey,The method has 5 parameters.
Long Parameter List,MvcSolution.Services,ImageService,F:\newReposMay17\leotsai_mvcsolution\MvcSolution.Services\Implementations\ImageService.cs,SaveImageAndReturnKey,The method has 6 parameters.
Long Statement,MvcSolution.Services,SettingContext,F:\newReposMay17\leotsai_mvcsolution\MvcSolution.Services\Settings\SettingContext.cs,GetValues,The length of the statement  "	return this.GetType ().GetProperties ().Where (x => x.CanRead && x.CanWrite && !excludes.Contains (x.Name)).OrderBy (x => x.Name).ToDictionary (x => x.Name' x => x.GetValue (this)); " is 181.
Magic Number,MvcSolution.Services,ImageService,F:\newReposMay17\leotsai_mvcsolution\MvcSolution.Services\Implementations\ImageService.cs,SaveImageAndReturnKey,The following statement contains a magic number: try {  	using (var inputImage = System.Drawing.Image.FromStream (inputStream)) {  		this.TryRotateImage (inputImage);  		var sizedImage = cropCenter ? inputImage.CropCenter (500) : inputImage.ToSize (new Size (1024' 768));  		using (sizedImage) {  			sizedImage.SaveToFileInQuality (physicalPath' format);  			image.Width = sizedImage.Width;  			image.Height = sizedImage.Height;  		}  	}  } catch {  	throw new KnownException ("Invalid image file");  }  
Magic Number,MvcSolution.Services,ImageService,F:\newReposMay17\leotsai_mvcsolution\MvcSolution.Services\Implementations\ImageService.cs,SaveImageAndReturnKey,The following statement contains a magic number: try {  	using (var inputImage = System.Drawing.Image.FromStream (inputStream)) {  		this.TryRotateImage (inputImage);  		var sizedImage = cropCenter ? inputImage.CropCenter (500) : inputImage.ToSize (new Size (1024' 768));  		using (sizedImage) {  			sizedImage.SaveToFileInQuality (physicalPath' format);  			image.Width = sizedImage.Width;  			image.Height = sizedImage.Height;  		}  	}  } catch {  	throw new KnownException ("Invalid image file");  }  
Magic Number,MvcSolution.Services,ImageService,F:\newReposMay17\leotsai_mvcsolution\MvcSolution.Services\Implementations\ImageService.cs,SaveImageAndReturnKey,The following statement contains a magic number: try {  	using (var inputImage = System.Drawing.Image.FromStream (inputStream)) {  		this.TryRotateImage (inputImage);  		var sizedImage = cropCenter ? inputImage.CropCenter (500) : inputImage.ToSize (new Size (1024' 768));  		using (sizedImage) {  			sizedImage.SaveToFileInQuality (physicalPath' format);  			image.Width = sizedImage.Width;  			image.Height = sizedImage.Height;  		}  	}  } catch {  	throw new KnownException ("Invalid image file");  }  
Magic Number,MvcSolution.Services,ImageService,F:\newReposMay17\leotsai_mvcsolution\MvcSolution.Services\Implementations\ImageService.cs,SaveImageAndReturnKey,The following statement contains a magic number: using (var inputImage = System.Drawing.Image.FromStream (inputStream)) {  	this.TryRotateImage (inputImage);  	var sizedImage = cropCenter ? inputImage.CropCenter (500) : inputImage.ToSize (new Size (1024' 768));  	using (sizedImage) {  		sizedImage.SaveToFileInQuality (physicalPath' format);  		image.Width = sizedImage.Width;  		image.Height = sizedImage.Height;  	}  }  
Magic Number,MvcSolution.Services,ImageService,F:\newReposMay17\leotsai_mvcsolution\MvcSolution.Services\Implementations\ImageService.cs,SaveImageAndReturnKey,The following statement contains a magic number: using (var inputImage = System.Drawing.Image.FromStream (inputStream)) {  	this.TryRotateImage (inputImage);  	var sizedImage = cropCenter ? inputImage.CropCenter (500) : inputImage.ToSize (new Size (1024' 768));  	using (sizedImage) {  		sizedImage.SaveToFileInQuality (physicalPath' format);  		image.Width = sizedImage.Width;  		image.Height = sizedImage.Height;  	}  }  
Magic Number,MvcSolution.Services,ImageService,F:\newReposMay17\leotsai_mvcsolution\MvcSolution.Services\Implementations\ImageService.cs,SaveImageAndReturnKey,The following statement contains a magic number: using (var inputImage = System.Drawing.Image.FromStream (inputStream)) {  	this.TryRotateImage (inputImage);  	var sizedImage = cropCenter ? inputImage.CropCenter (500) : inputImage.ToSize (new Size (1024' 768));  	using (sizedImage) {  		sizedImage.SaveToFileInQuality (physicalPath' format);  		image.Width = sizedImage.Width;  		image.Height = sizedImage.Height;  	}  }  
Magic Number,MvcSolution.Services,ImageService,F:\newReposMay17\leotsai_mvcsolution\MvcSolution.Services\Implementations\ImageService.cs,TryRotateImage,The following statement contains a magic number: try {  	if (inputImage.PropertyIdList.Contains (0x0112)) {  		var pro = inputImage.GetPropertyItem (0x0112);  		if (pro != null && pro.Value [0] == 6 && pro.Value [1] == 0) {  			inputImage.RotateFlip (RotateFlipType.Rotate90FlipNone);  		}  	}  } catch (Exception ex) {  	Logger.Error ("ImageService.TryRotateImage"' ex);  }  
Magic Number,MvcSolution.Services,ImageService,F:\newReposMay17\leotsai_mvcsolution\MvcSolution.Services\Implementations\ImageService.cs,TryRotateImage,The following statement contains a magic number: if (inputImage.PropertyIdList.Contains (0x0112)) {  	var pro = inputImage.GetPropertyItem (0x0112);  	if (pro != null && pro.Value [0] == 6 && pro.Value [1] == 0) {  		inputImage.RotateFlip (RotateFlipType.Rotate90FlipNone);  	}  }  
Magic Number,MvcSolution.Services,ImageService,F:\newReposMay17\leotsai_mvcsolution\MvcSolution.Services\Implementations\ImageService.cs,TryRotateImage,The following statement contains a magic number: if (pro != null && pro.Value [0] == 6 && pro.Value [1] == 0) {  	inputImage.RotateFlip (RotateFlipType.Rotate90FlipNone);  }  
