Implementation smell,Namespace,Class,File,Method,Description
Long Statement,LongDataTests,LongDataTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\LongDataTests\LongDataTests.cs,CreateOuterModel,The length of the statement  "                obj.Items.Add(new MyModelInner { Id = i' SomeString = "a long string that will be repeated lots and lots of times in the output data" }); " is 137.
Long Statement,LongDataTests,LongDataTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\LongDataTests\LongDataTests.cs,CanSerializeLongData,The length of the statement  "                Log.WriteLine($"Wrote: {COUNT} in {file.Length >> 20} MiB ({file.Length / COUNT} each)' {watch.ElapsedMilliseconds}ms"); " is 120.
Magic Number,LongDataTests,LongDataTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\LongDataTests\LongDataTests.cs,CanSerializeLongData,The following statement contains a magic number: const int COUNT = 50000000;
Magic Number,LongDataTests,LongDataTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\LongDataTests\LongDataTests.cs,CanSerializeLongData,The following statement contains a magic number: Log.WriteLine($"Wrote: {COUNT} in {file.Length >> 20} MiB ({file.Length / COUNT} each)' {watch.ElapsedMilliseconds}ms");
Magic Number,LongDataTests,LongDataTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\LongDataTests\LongDataTests.cs,CanSerializeLongData,The following statement contains a magic number: Log.WriteLine($"Verifying {file.Length >> 20} MiB...");
Magic Number,LongDataTests,LongDataTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\LongDataTests\LongDataTests.cs,CanSerializeLongData,The following statement contains a magic number: Assert.Equal(2' state.ReadFieldHeader());
Magic Number,LongDataTests,LongDataTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\LongDataTests\LongDataTests.cs,CanSerializeLongData,The following statement contains a magic number: Log.WriteLine($"Verified {file.Length >> 20} MiB in {watch.ElapsedMilliseconds}ms");
Magic Number,LongDataTests,LongDataTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\LongDataTests\LongDataTests.cs,CanSerializeLongData,The following statement contains a magic number: Log.WriteLine($"Deserializing {file.Length >> 20} MiB");
Magic Number,LongDataTests,MyModelInner,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\LongDataTests\LongDataTests.cs,GetHashCode,The following statement contains a magic number: int hash = -12323424;
Magic Number,LongDataTests,MyModelInner,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\LongDataTests\LongDataTests.cs,GetHashCode,The following statement contains a magic number: hash = (hash * -17) + Id.GetHashCode();
Magic Number,LongDataTests,MyModelInner,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\LongDataTests\LongDataTests.cs,GetHashCode,The following statement contains a magic number: return (hash * -17) + (SomeString?.GetHashCode() ?? 0);
Magic Number,LongDataTests,MyModelOuter,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\LongDataTests\LongDataTests.cs,GetHashCode,The following statement contains a magic number: int hash = -12323424;
Magic Number,LongDataTests,MyModelOuter,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\LongDataTests\LongDataTests.cs,GetHashCode,The following statement contains a magic number: hash = (hash * -17) + Items.Count.GetHashCode();
Magic Number,LongDataTests,MyModelOuter,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\LongDataTests\LongDataTests.cs,GetHashCode,The following statement contains a magic number: hash = (hash * -17) + (item?.GetHashCode() ?? 0);
Magic Number,LongDataTests,MyModelWrapper,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\LongDataTests\LongDataTests.cs,GetHashCode,The following statement contains a magic number: const int hash = -12323424;
Magic Number,LongDataTests,MyModelWrapper,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\LongDataTests\LongDataTests.cs,GetHashCode,The following statement contains a magic number: return (hash * -17) + (Group?.GetHashCode() ?? 0);
