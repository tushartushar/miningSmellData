Implementation smell,Namespace,Class,File,Method,Description
Long Method,Metro_DevRig,MainPage,C:\repos\mgravell_protobuf-net\assorted\Metro_DevRig\MainPage.xaml.cs,ReadProto,The method has 102 lines of code.
Long Statement,Metro_DevRig,MainPage,C:\repos\mgravell_protobuf-net\assorted\Metro_DevRig\MainPage.xaml.cs,ReadProto,The length of the statement  "                perfStats.AppendLine().AppendLine().AppendLine("DataContractSerializer:").AppendFormat("WriteObject x {0}: {1:###'###}ms' {2:###'###} bytes"' loop' watch.ElapsedMilliseconds' buffer.Length); " is 190.
Long Statement,Metro_DevRig,MainPage,C:\repos\mgravell_protobuf-net\assorted\Metro_DevRig\MainPage.xaml.cs,ReadProto,The length of the statement  "                perfStats.AppendLine().AppendLine().AppendLine("XmlSerializer:").AppendFormat("Serialize x {0}: {1:###'###}ms' {2:###'###} bytes"' loop' watch.ElapsedMilliseconds' buffer.Length); " is 179.
Long Statement,Metro_DevRig,MainPage,C:\repos\mgravell_protobuf-net\assorted\Metro_DevRig\MainPage.xaml.cs,ReadProto,The length of the statement  "                perfStats.AppendLine().AppendLine().AppendLine("protobuf-net").AppendFormat("Serialize x {0}: {1:###'###}ms' {2:###'###} bytes"' loop' watch.ElapsedMilliseconds' buffer.Length); " is 177.
Long Statement,Metro_DevRig,MainPage,C:\repos\mgravell_protobuf-net\assorted\Metro_DevRig\MainPage.xaml.cs,ReadProto,The length of the statement  "                perfStats.AppendLine().AppendLine().AppendLine("protobuf-net (runtime)").AppendFormat("Serialize x {0}: {1:###'###}ms' {2:###'###} bytes"' loop' watch.ElapsedMilliseconds' buffer.Length); " is 187.
Magic Number,Metro_DevRig,MainPage,C:\repos\mgravell_protobuf-net\assorted\Metro_DevRig\MainPage.xaml.cs,ReadProto,The following statement contains a magic number: using (var buffer = new MemoryStream())              {                  const int loop = 50;                  var watch = Stopwatch.StartNew();                  for (int i = 0; i < loop; i++)                  {                      buffer.SetLength(0);                      dcs.WriteObject(buffer' dal);                  }                  watch.Stop();                  perfStats.AppendLine().AppendLine().AppendLine("DataContractSerializer:").AppendFormat("WriteObject x {0}: {1:###'###}ms' {2:###'###} bytes"' loop' watch.ElapsedMilliseconds' buffer.Length);                    watch = Stopwatch.StartNew();                  for (int i = 0; i < loop; i++)                  {                      buffer.Position = 0;                      dcs.ReadObject(buffer);                  }                  watch.Stop();                  perfStats.AppendLine().AppendFormat("ReadObject x {0}: {1:###'###}ms"' loop' watch.ElapsedMilliseconds);                    watch = Stopwatch.StartNew();                  for (int i = 0; i < loop; i++)                  {                      buffer.SetLength(0);                      xs.Serialize(buffer' dal);                  }                  watch.Stop();                  perfStats.AppendLine().AppendLine().AppendLine("XmlSerializer:").AppendFormat("Serialize x {0}: {1:###'###}ms' {2:###'###} bytes"' loop' watch.ElapsedMilliseconds' buffer.Length);                    watch = Stopwatch.StartNew();                  for (int i = 0; i < loop; i++)                  {                      buffer.Position = 0;                      xs.Deserialize(buffer);                  }                  watch.Stop();                  perfStats.AppendLine().AppendFormat("Deserialize x {0}: {1:###'###}ms"' loop' watch.ElapsedMilliseconds);                    watch = Stopwatch.StartNew();                  for (int i = 0; i < loop; i++)                  {                      buffer.SetLength(0);                      ser.Serialize(buffer' dal);                  }                  watch.Stop();                  perfStats.AppendLine().AppendLine().AppendLine("protobuf-net").AppendFormat("Serialize x {0}: {1:###'###}ms' {2:###'###} bytes"' loop' watch.ElapsedMilliseconds' buffer.Length);                    watch = Stopwatch.StartNew();                  for (int i = 0; i < loop; i++)                  {                      buffer.Position = 0;                      ser.Deserialize(buffer' null' typeof(DAL.DatabaseCompat));                  }                  watch.Stop();                  perfStats.AppendLine().AppendFormat("Deserialize x {0}: {1:###'###}ms"' loop' watch.ElapsedMilliseconds);                    watch = Stopwatch.StartNew();                  for (int i = 0; i < loop; i++)                  {                      buffer.SetLength(0);                      Serializer.Serialize(buffer' dal);                  }                  watch.Stop();                  perfStats.AppendLine().AppendLine().AppendLine("protobuf-net (runtime)").AppendFormat("Serialize x {0}: {1:###'###}ms' {2:###'###} bytes"' loop' watch.ElapsedMilliseconds' buffer.Length);                    watch = Stopwatch.StartNew();                  for (int i = 0; i < loop; i++)                  {                      buffer.Position = 0;                      Serializer.Deserialize<DAL.DatabaseCompat>(buffer);                  }                  watch.Stop();                  perfStats.AppendLine().AppendFormat("Deserialize x {0}: {1:###'###}ms"' loop' watch.ElapsedMilliseconds);                                 }
Magic Number,Metro_DevRig,MainPage,C:\repos\mgravell_protobuf-net\assorted\Metro_DevRig\MainPage.xaml.cs,ReadProto,The following statement contains a magic number: SM2Stats stats = new SM2Stats              {                  acqreps = 1'                  difficultyhistory =  {                      new DiffHistPair { date = 123' values = { 3.4f }}                  }              };
