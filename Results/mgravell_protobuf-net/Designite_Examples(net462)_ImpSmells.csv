Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,AreEqual,Cyclomatic complexity of the method is 9
Complex Method,Proto,ProtoBufModalSerializer,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO9151111b.cs,Init,Cyclomatic complexity of the method is 9
Long Parameter List,Examples,Program,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Program.cs,CheckBytes,The method has 5 parameters. Parameters: output' item' model' hex' expected
Long Parameter List,Examples.Issues,SO16838287,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO16838287.cs,Execute,The method has 5 parameters. Parameters: model' size' offset' count' caption
Long Statement,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,TestOverwriteVersusAppend,The length of the statement  "            clone = (WithAndWithoutOverwrite)model.Compile("TestOverwriteVersusAppendTypeModel"' "TestOverwriteVersusAppend.dll").DeepClone(orig); " is 134.
Long Statement,Examples,Callbacks,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Callbacks.cs,Test,The length of the statement  "                    Assert.Equal(ctorExpected + ";OnSerializing;OnSerialized;OnSerializing;OnSerialized"' cs.History); //' "orig after" + mode); " is 124.
Long Statement,Examples,TestDetectMissing,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\DetectMissing.cs,TestViaXmlProtoSet,The length of the statement  "            DetectMissing dm3 = (DetectMissing)model.Compile().DeepClone(new DetectMissing { FooSpecified = true' BarSpecified = true }); " is 125.
Long Statement,Examples,Extensibility,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Extensibility.cs,TestReadShouldUseProperty,The length of the statement  "            Assert.Null(hi); // this is the current behaviour when reading against a tag that is a regular field' not an extension field " is 124.
Long Statement,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentFixedLength,The length of the statement  "            Serializer.SerializeWithLengthPrefix<IMLParent>(ms' a = InheritanceMidLevel.CreateChild(123' 456' 789)' PrefixStyle.Fixed32); " is 125.
Long Statement,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentFixedLength,The length of the statement  "            Serializer.SerializeWithLengthPrefix<IMLParent>(ms' b = InheritanceMidLevel.CreateChild(100' 200' 300)' PrefixStyle.Fixed32); " is 125.
Long Statement,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentFixedLength,The length of the statement  "            Serializer.SerializeWithLengthPrefix<IMLParent>(ms' c = InheritanceMidLevel.CreateChild(400' 500' 600)' PrefixStyle.Fixed32); " is 125.
Long Statement,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128Tag,The length of the statement  "            Serializer.SerializeWithLengthPrefix<IMLParent>(ms' a = InheritanceMidLevel.CreateChild(123' 456' 789)' PrefixStyle.Base128' 3); " is 128.
Long Statement,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128Tag,The length of the statement  "            Serializer.SerializeWithLengthPrefix<IMLParent>(ms' b = InheritanceMidLevel.CreateChild(100' 200' 300)' PrefixStyle.Base128' 3); " is 128.
Long Statement,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128Tag,The length of the statement  "            Serializer.SerializeWithLengthPrefix<IMLParent>(ms' c = InheritanceMidLevel.CreateChild(400' 500' 600)' PrefixStyle.Base128' 3); " is 128.
Long Statement,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128NoTag,The length of the statement  "            Serializer.SerializeWithLengthPrefix<IMLParent>(ms' a = InheritanceMidLevel.CreateChild(123' 456' 789)' PrefixStyle.Base128' 0); " is 128.
Long Statement,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128NoTag,The length of the statement  "            Serializer.SerializeWithLengthPrefix<IMLParent>(ms' b = InheritanceMidLevel.CreateChild(100' 200' 300)' PrefixStyle.Base128' 0); " is 128.
Long Statement,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128NoTag,The length of the statement  "            Serializer.SerializeWithLengthPrefix<IMLParent>(ms' c = InheritanceMidLevel.CreateChild(400' 500' 600)' PrefixStyle.Base128' 0); " is 128.
Long Statement,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildFixedLength,The length of the statement  "            Serializer.SerializeWithLengthPrefix<IMLChild>(ms' a = InheritanceMidLevel.CreateChild(123' 456' 789)' PrefixStyle.Fixed32); " is 124.
Long Statement,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildFixedLength,The length of the statement  "            Serializer.SerializeWithLengthPrefix<IMLChild>(ms' b = InheritanceMidLevel.CreateChild(100' 200' 300)' PrefixStyle.Fixed32); " is 124.
Long Statement,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildFixedLength,The length of the statement  "            Serializer.SerializeWithLengthPrefix<IMLChild>(ms' c = InheritanceMidLevel.CreateChild(400' 500' 600)' PrefixStyle.Fixed32); " is 124.
Long Statement,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128Tag,The length of the statement  "            Serializer.SerializeWithLengthPrefix<IMLChild>(ms' a = InheritanceMidLevel.CreateChild(123' 456' 789)' PrefixStyle.Base128' 3); " is 127.
Long Statement,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128Tag,The length of the statement  "            Serializer.SerializeWithLengthPrefix<IMLChild>(ms' b = InheritanceMidLevel.CreateChild(100' 200' 300)' PrefixStyle.Base128' 3); " is 127.
Long Statement,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128Tag,The length of the statement  "            Serializer.SerializeWithLengthPrefix<IMLChild>(ms' c = InheritanceMidLevel.CreateChild(400' 500' 600)' PrefixStyle.Base128' 3); " is 127.
Long Statement,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128NoTag,The length of the statement  "            Serializer.SerializeWithLengthPrefix<IMLChild>(ms' a = InheritanceMidLevel.CreateChild(123' 456' 789)' PrefixStyle.Base128' 0); " is 127.
Long Statement,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128NoTag,The length of the statement  "            Serializer.SerializeWithLengthPrefix<IMLChild>(ms' b = InheritanceMidLevel.CreateChild(100' 200' 300)' PrefixStyle.Base128' 0); " is 127.
Long Statement,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128NoTag,The length of the statement  "            Serializer.SerializeWithLengthPrefix<IMLChild>(ms' c = InheritanceMidLevel.CreateChild(400' 500' 600)' PrefixStyle.Base128' 0); " is 127.
Long Statement,Examples,MultiTypesWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\MultiTypesWithLengthPrefix.cs,TestRoundTripMultiTypes,The length of the statement  "            Assert.Equal("0A-02-08-7B-12-06-0A-04-46-72-65-64-1A-05-0A-03-61-62-63-22-0E-0A-0C-31-32-20-4C-61-6D-62-20-4C-61-6E-65"' hex); " is 126.
Long Statement,Examples,MultiTypesWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\MultiTypesWithLengthPrefix.cs,ReadNext,The length of the statement  "            if (Serializer.NonGeneric.TryDeserializeWithLengthPrefix(stream' PrefixStyle.Base128' field => typeLookup[field]' out object obj)) " is 130.
Long Statement,Examples,NonPublic_Compile,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\NonPublic_Compile.cs,IndirectlyPrivateTypeShouldFail,The length of the statement  "            }' "Non-public type cannot be used with full dll compilation: Examples.NonPublic_Compile+NonPublicWrapper+IndirectlyPrivateType"); " is 130.
Long Statement,Examples,NonPublic_Compile,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\NonPublic_Compile.cs,PrivateCallbackShouldFail,The length of the statement  "            }' "Non-public member cannot be used with full dll compilation: Examples.NonPublic_Compile+PrivateCallback.OnDeserialize"); " is 123.
Long Statement,Examples,NonPublic_Compile,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\NonPublic_Compile.cs,PrivateConditionalSetShouldFail,The length of the statement  "            }' "Non-public member cannot be used with full dll compilation: Examples.NonPublic_Compile+PrivateConditional.ShouldSerializeFoo"); " is 131.
Long Statement,Examples,PrimativeTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Primatives.cs,TestDecimal,The length of the statement  "            p.TestDecimalDefault = decimal.Parse("0.000"' CultureInfo.InvariantCulture); // p.TestDecimalTwos = p.TestDecimalZigZag = " is 121.
Long Statement,Examples,PrimativeTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Primatives.cs,TestDecimal,The length of the statement  "            p.TestDecimalDefault = decimal.Parse("1.000"' CultureInfo.InvariantCulture ); //p.TestDecimalTwos = p.TestDecimalZigZag =  " is 121.
Long Statement,Examples,PrimativeTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Primatives.cs,TestNonEmptyUriWithDefaultAllCompilationModes,The length of the statement  "            var compiled = model.Compile("TestNonEmptyUriWithDefaultAllCompilationModes"' "TestNonEmptyUriWithDefaultAllCompilationModes.dll"); " is 131.
Long Statement,Examples,Tuples,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Tuples.cs,Check,The length of the statement  "                123' new[] { Tuple.Create(1' 2' 3' 4' 5' 6' 7' new List<Tuple<float' float>> { Tuple.Create(1F'2F) })' Tuple.Create(9' 10' 11' 12' 13' 14' 15' new List<Tuple<float' float>> { Tuple.Create(3F'4F) }) }' true); " is 207.
Long Statement,Examples,Tuples,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Tuples.cs,Check,The length of the statement  "            var clone = (Tuple<int' Tuple<int' int' int' int' int' int' int' Tuple<List<Tuple<float' float>>>>[]' bool>)model.DeepClone(obj); " is 129.
Long Statement,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyDateTimeBehaviors,The length of the statement  "            Verify(model' new DateTime(2019' 9' 27' 10' 25' 32' 123' DateTimeKind.Unspecified)' "0A-09-08-B6-E7-88-A4-AE-5B-10-04"); " is 120.
Long Statement,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyDateTimeBehaviors,The length of the statement  "            Verify(model' new DateTime(2019' 9' 27' 10' 25' 32' 123' DateTimeKind.Local)' "0A-0B-08-B6-E7-88-A4-AE-5B-10-04-18-02"); " is 120.
Long Statement,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyDateTimeBehaviors,The length of the statement  "            Verify(model' new DateTime(2019' 9' 27' 10' 25' 32' 123' DateTimeKind.Unspecified)' "0A-09-08-B6-E7-88-A4-AE-5B-10-04"); " is 120.
Long Statement,Examples.Issues,Issue192,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue192.cs,SerializeDeepList,The length of the statement  "            }' "Nested or jagged lists' arrays and maps are not supported: System.Collections.Generic.List`1[Examples.Issues.Issue192+SomeType][]"); " is 136.
Long Statement,Examples.Issues,Issue192,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue192.cs,DeserializeDeepList,The length of the statement  "            }' "Nested or jagged lists' arrays and maps are not supported: System.Collections.Generic.List`1[Examples.Issues.Issue192+SomeType][]"); " is 136.
Long Statement,Examples.Issues,Issue192,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue192.cs,SerializeWrappedDeepList,The length of the statement  "            }' "Nested or jagged lists' arrays and maps are not supported: System.Collections.Generic.List`1[Examples.Issues.Issue192+SomeType][]"); " is 136.
Long Statement,Examples.Issues,Issue297,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue297.cs,TestSomeNewType,The length of the statement  "            Node<SomeNewType> tree = new Node<SomeNewType>.RootNode("abc"' new SomeNewType { Items = { new MyDto { Value = 1 } }})' clone; " is 126.
Long Statement,Examples.Issues,Issue80,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue80.cs,Execute,The length of the statement  "            Assert.True(ProtoBuf.Serializer.TryReadLengthPrefix(textStream.GetBuffer()' 0' 5' ProtoBuf.PrefixStyle.Fixed32' out int len32_1)' "len32 - buffer"); " is 148.
Long Statement,Examples.Issues,Issue80,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue80.cs,Execute,The length of the statement  "            Assert.True(ProtoBuf.Serializer.TryReadLengthPrefix(textStream' ProtoBuf.PrefixStyle.Fixed32' out int len32_2)' "len32 - stream"); " is 130.
Long Statement,Examples.Issues,Issue80,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue80.cs,Execute,The length of the statement  "            Assert.True(ProtoBuf.Serializer.TryReadLengthPrefix(textStream.GetBuffer()' 0' 5' ProtoBuf.PrefixStyle.Base128' out int len128_1)); //' "len128 - buffer"); " is 155.
Long Statement,Examples.Issues,Issue80,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue80.cs,Execute,The length of the statement  "            Assert.True(ProtoBuf.Serializer.TryReadLengthPrefix(textStream' ProtoBuf.PrefixStyle.Base128' out int len128_2)); //' "len128 - stream"); " is 137.
Long Statement,Examples.Issues,SO11564914,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO11564914.cs,SerializeFromProtobufCSharpPortShouldGiveUsefulMessage,The length of the statement  "            }' "Are you mixing protobuf-net and protobuf-csharp-port? See https://stackoverflow.com/q/11564914/23354; type: Examples.Issues.SO11564914+BlockHeader"); " is 153.
Long Statement,Examples.Issues,SO11564914,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO11564914.cs,DeserializeFromProtobufCSharpPortShouldGiveUsefulMessage,The length of the statement  "            }' "Are you mixing protobuf-net and protobuf-csharp-port? See https://stackoverflow.com/q/11564914/23354; type: Examples.Issues.SO11564914+BlockHeader"); " is 153.
Long Statement,Examples.Issues,SO14540862,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO14540862.cs,Execute,The length of the statement  "            var reflectionGenericMethodInfo = reflectionMethods.First<MethodInfo>(method => method.Name == "SerializeWithLengthPrefix"); " is 124.
Long Statement,Examples.Issues,SO18277323,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18277323.cs,ExecuteSimple,The length of the statement  "            Assert.Equal("1A-13-0A-11-0A-03-61-62-63-12-0A-0A-03-64-65-66-12-03-67-68-69-08-01-12-02-6F-6B"' BitConverter.ToString(ms.GetBuffer()' 0' (int)ms.Length)); " is 155.
Long Statement,Examples.Issues,SO18277323,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18277323.cs,ExecuteCustom,The length of the statement  "            Assert.Equal("1B-0B-0A-03-61-62-63-13-0A-03-64-65-66-12-03-67-68-69-14-0C-1C-08-01-12-02-6F-6B"' BitConverter.ToString(ms.GetBuffer()' 0' (int)ms.Length)); " is 155.
Long Statement,Examples.Issues,SO18650486,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18650486.cs,ExecuteImpl,The length of the statement  "                        Trace.WriteLine(string.Format("{5}\tCycle {0}: {1:N2} ms - avg: {2:N2} ms - min: {3:N2} - max: {4:N2}"' i' elapsed' currentAverage' min' max' caption)); " is 152.
Long Statement,Examples.Issues,SO18650486,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18650486.cs,ExecuteImpl,The length of the statement  "            Trace.WriteLine(string.Format("{5}\tComplete {0}: avg: {2:N2} ms - min: {3:N2} - max: {4:N2}"' complete' 0' average / complete' min' max' caption)); " is 148.
Long Statement,Examples.Issues,SO6109616,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO6109616.cs,Execute,The length of the statement  "                // in v1' comparable to Serializer.NonGeneric.SerializeWithLengthPrefix(ms' b' PrefixStyle.Base128' typeToTag[b.GetType()]); " is 124.
Long Statement,Examples.Issues,SO6109616,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO6109616.cs,Execute,The length of the statement  "                // in v1' comparable to Serializer.NonGeneric.TryDeserializeWithLengthPrefix(ms' PrefixStyle.Base128' key => tagToType[key]' out b2); " is 133.
Long Statement,Examples.Issues,SO6407130,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO6407130.cs,Execute,The length of the statement  "            Assert.Equal("Types with surrogates cannot be used in inheritance hierarchies: Examples.Issues.SO6407130+ASurrogate"' ex.Message); " is 130.
Long Statement,Examples.Issues,SO7719000,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO7719000.cs,Execute,The length of the statement  "            Assert.Equal("Tuple-based types cannot be used in inheritance hierarchies: Examples.Issues.SO7719000+SomeMessage"' ex.Message); " is 127.
Long Statement,Examples.Issues,SO7719000,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO7719000.cs,RunTest,The length of the statement  "                typeModel.SerializeWithLengthPrefix(ms' new SomeMessage(new Descriptor(new SomeEvent { SomeField = testValue }))' null' prefixStyle' 0); " is 136.
Long Statement,Examples.Issues,SO7793527,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO7793527.cs,ProtobufNet_SupportsNakedEnumerables_ButMustBeAddable,The length of the statement  "            Assert.Equal("For repeated data declared as System.Collections.Generic.IEnumerable`1[Examples.Issues.SO7793527+Bar]' the *underlying* collection (Examples.Issues.SO7793527+Bar[]) must implement ICollection<T> and must not declare itself read-only; alternative (more exotic) collections can be used' but must be declared using their well-known form (for example' a member could be declared as ImmutableHashSet<T>)"' ex.Message); " is 427.
Long Statement,Examples.Issues,SO9151111,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO9151111.cs,TestManualConstuctionClosedType,The length of the statement  "            // In runtime this class is build (with specific TDATA) and Serialized. When I'm adding this type to runtime modal : (error) " is 124.
Long Statement,DAL,Order,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\NWind\DataContext.cs,Initialize,The length of the statement  "            this._Lines = new EntitySet<OrderLine>(new Action<OrderLine>(this.attach_Lines)' new Action<OrderLine>(this.detach_Lines)); " is 123.
Long Statement,Examples.TestNumbers,SignTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\TestNumbers\NumberTests.cs,TestSignTwosComplementInt32_m1,The length of the statement  "            Assert.True(Program.CheckBytes(Output' new TwosComplementInt32 { Foo = -1 }' 0x08' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0x01)' "-1"); " is 150.
Long Statement,Examples.TestNumbers,SignTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\TestNumbers\NumberTests.cs,TestSignTwosComplementInt32_m2,The length of the statement  "            Assert.True(Program.CheckBytes(new TwosComplementInt32 { Foo = -2 }' 0x08' 0xFE' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0x01)' "-2"); " is 142.
Magic Number,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,DeserializeBusyArray_Untyped,The following statement contains a magic number: var arr = new Foo[3] { new Foo()' new Foo()' new Foo() };
Magic Number,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,DeserializeBusyArray_Untyped,The following statement contains a magic number: Assert.Equal(3' foo.Length);
Magic Number,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,DeserializeBusyArray_Typed,The following statement contains a magic number: var arr = new Foo[3] { new Foo()' new Foo()' new Foo() };
Magic Number,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,DeserializeBusyArray_Typed,The following statement contains a magic number: Assert.Equal(3' foo.Length);
Magic Number,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,TestOverwriteVersusAppend,The following statement contains a magic number: var orig = new WithAndWithoutOverwrite { Append = new[] {7'8}' Overwrite = new[] { 9'10}};
Magic Number,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,TestOverwriteVersusAppend,The following statement contains a magic number: var orig = new WithAndWithoutOverwrite { Append = new[] {7'8}' Overwrite = new[] { 9'10}};
Magic Number,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,TestOverwriteVersusAppend,The following statement contains a magic number: var orig = new WithAndWithoutOverwrite { Append = new[] {7'8}' Overwrite = new[] { 9'10}};
Magic Number,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,TestOverwriteVersusAppend,The following statement contains a magic number: var orig = new WithAndWithoutOverwrite { Append = new[] {7'8}' Overwrite = new[] { 9'10}};
Magic Number,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,TestOverwriteVersusAppend,The following statement contains a magic number: Assert.True(clone.Overwrite.SequenceEqual(new[] { 9' 10 })' "Overwrite' Runtime");
Magic Number,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,TestOverwriteVersusAppend,The following statement contains a magic number: Assert.True(clone.Overwrite.SequenceEqual(new[] { 9' 10 })' "Overwrite' Runtime");
Magic Number,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,TestOverwriteVersusAppend,The following statement contains a magic number: Assert.True(clone.Append.SequenceEqual(new[] { 1' 2' 3' 7' 8 })' "Append' Runtime");
Magic Number,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,TestOverwriteVersusAppend,The following statement contains a magic number: Assert.True(clone.Append.SequenceEqual(new[] { 1' 2' 3' 7' 8 })' "Append' Runtime");
Magic Number,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,TestOverwriteVersusAppend,The following statement contains a magic number: Assert.True(clone.Append.SequenceEqual(new[] { 1' 2' 3' 7' 8 })' "Append' Runtime");
Magic Number,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,TestOverwriteVersusAppend,The following statement contains a magic number: Assert.True(clone.Append.SequenceEqual(new[] { 1' 2' 3' 7' 8 })' "Append' Runtime");
Magic Number,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,TestOverwriteVersusAppend,The following statement contains a magic number: Assert.True(clone.Overwrite.SequenceEqual(new[] { 9' 10 })' "Overwrite' CompileInPlace");
Magic Number,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,TestOverwriteVersusAppend,The following statement contains a magic number: Assert.True(clone.Overwrite.SequenceEqual(new[] { 9' 10 })' "Overwrite' CompileInPlace");
Magic Number,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,TestOverwriteVersusAppend,The following statement contains a magic number: Assert.True(clone.Append.SequenceEqual(new[] { 1' 2' 3' 7' 8 })' "Append' CompileInPlace");
Magic Number,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,TestOverwriteVersusAppend,The following statement contains a magic number: Assert.True(clone.Append.SequenceEqual(new[] { 1' 2' 3' 7' 8 })' "Append' CompileInPlace");
Magic Number,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,TestOverwriteVersusAppend,The following statement contains a magic number: Assert.True(clone.Append.SequenceEqual(new[] { 1' 2' 3' 7' 8 })' "Append' CompileInPlace");
Magic Number,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,TestOverwriteVersusAppend,The following statement contains a magic number: Assert.True(clone.Append.SequenceEqual(new[] { 1' 2' 3' 7' 8 })' "Append' CompileInPlace");
Magic Number,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,TestOverwriteVersusAppend,The following statement contains a magic number: Assert.True(clone.Overwrite.SequenceEqual(new[] { 9' 10 })' "Overwrite' CompileToFile");
Magic Number,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,TestOverwriteVersusAppend,The following statement contains a magic number: Assert.True(clone.Overwrite.SequenceEqual(new[] { 9' 10 })' "Overwrite' CompileToFile");
Magic Number,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,TestOverwriteVersusAppend,The following statement contains a magic number: Assert.True(clone.Append.SequenceEqual(new[] { 1' 2' 3' 7' 8 })' "Append' CompileToFile");
Magic Number,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,TestOverwriteVersusAppend,The following statement contains a magic number: Assert.True(clone.Append.SequenceEqual(new[] { 1' 2' 3' 7' 8 })' "Append' CompileToFile");
Magic Number,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,TestOverwriteVersusAppend,The following statement contains a magic number: Assert.True(clone.Append.SequenceEqual(new[] { 1' 2' 3' 7' 8 })' "Append' CompileToFile");
Magic Number,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,TestOverwriteVersusAppend,The following statement contains a magic number: Assert.True(clone.Append.SequenceEqual(new[] { 1' 2' 3' 7' 8 })' "Append' CompileToFile");
Magic Number,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,TestOverwriteVersusAppend,The following statement contains a magic number: Assert.True(clone.Overwrite.SequenceEqual(new[] { 9' 10 })' "Overwrite' Compile");
Magic Number,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,TestOverwriteVersusAppend,The following statement contains a magic number: Assert.True(clone.Overwrite.SequenceEqual(new[] { 9' 10 })' "Overwrite' Compile");
Magic Number,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,TestOverwriteVersusAppend,The following statement contains a magic number: Assert.True(clone.Append.SequenceEqual(new[] { 1' 2' 3' 7' 8 })' "Append' Compile");
Magic Number,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,TestOverwriteVersusAppend,The following statement contains a magic number: Assert.True(clone.Append.SequenceEqual(new[] { 1' 2' 3' 7' 8 })' "Append' Compile");
Magic Number,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,TestOverwriteVersusAppend,The following statement contains a magic number: Assert.True(clone.Append.SequenceEqual(new[] { 1' 2' 3' 7' 8 })' "Append' Compile");
Magic Number,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,TestOverwriteVersusAppend,The following statement contains a magic number: Assert.True(clone.Append.SequenceEqual(new[] { 1' 2' 3' 7' 8 })' "Append' Compile");
Magic Number,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,TestDirectSkipConstructor,The following statement contains a magic number: Assert.Equal(42' obj.Value);
Magic Number,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,TestSkipConstructor,The following statement contains a magic number: var orig = new WithSkipConstructor { Values = new[] { 4' 5 } };
Magic Number,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,TestSkipConstructor,The following statement contains a magic number: var orig = new WithSkipConstructor { Values = new[] { 4' 5 } };
Magic Number,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,TestSkipConstructor,The following statement contains a magic number: Assert.True(clone.Values.SequenceEqual(new[] { 4' 5 })' "Runtime");
Magic Number,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,TestSkipConstructor,The following statement contains a magic number: Assert.True(clone.Values.SequenceEqual(new[] { 4' 5 })' "Runtime");
Magic Number,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,TestSkipConstructor,The following statement contains a magic number: Assert.True(clone.Values.SequenceEqual(new[] { 4' 5 })' "CompileInPlace");
Magic Number,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,TestSkipConstructor,The following statement contains a magic number: Assert.True(clone.Values.SequenceEqual(new[] { 4' 5 })' "CompileInPlace");
Magic Number,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,TestSkipConstructor,The following statement contains a magic number: Assert.True(clone.Values.SequenceEqual(new[] { 4' 5 })' "Compile");
Magic Number,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,TestSkipConstructor,The following statement contains a magic number: Assert.True(clone.Values.SequenceEqual(new[] { 4' 5 })' "Compile");
Magic Number,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,TestMultidimArray,The following statement contains a magic number: Assert.Throws<NotSupportedException>(() =>              {                  MultiDim md = new MultiDim { Values = new int[1' 2] { { 3' 4 } } };                  Serializer.DeepClone(md);              });
Magic Number,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,TestMultidimArray,The following statement contains a magic number: Assert.Throws<NotSupportedException>(() =>              {                  MultiDim md = new MultiDim { Values = new int[1' 2] { { 3' 4 } } };                  Serializer.DeepClone(md);              });
Magic Number,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,TestMultidimArray,The following statement contains a magic number: Assert.Throws<NotSupportedException>(() =>              {                  MultiDim md = new MultiDim { Values = new int[1' 2] { { 3' 4 } } };                  Serializer.DeepClone(md);              });
Magic Number,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,TestObjectArray,The following statement contains a magic number: Node node = new Node              {                  Key = 27'                  Nodes = new[] {                      new Node { Key = 1 }'                      new Node { Key = 3 } }              };
Magic Number,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,TestObjectArray,The following statement contains a magic number: Node node = new Node              {                  Key = 27'                  Nodes = new[] {                      new Node { Key = 1 }'                      new Node { Key = 3 } }              };
Magic Number,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,TestEmptyArray,The following statement contains a magic number: Node node = new Node              {                  Key = 27'                  Nodes = new Node[0]              };
Magic Number,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,TestNullArray,The following statement contains a magic number: Node node = new Node              {                  Key = 27'                  Nodes = null              };
Magic Number,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,TestDuplicateNonRecursive,The following statement contains a magic number: Node child = new Node { Key = 17 };
Magic Number,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,TestDuplicateRecursive,The following statement contains a magic number: Assert.Throws<ProtoException>(() =>              {                  Node child = new Node { Key = 17 };                  Node parent = new Node { Nodes = new[] { child' child' child } };                  child.Nodes = new[] { parent };                  VerifyNodeTree(parent);              });
Magic Number,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,TestNestedArray,The following statement contains a magic number: Node node = new Node              {                  Key = 27'                  Nodes = new[] {                      new Node {                          Key = 19'                          Nodes = new[] {                              new Node {Key = 1}'                              new Node {Key = 14}'                          }'                      }'                      new Node {                          Key = 3                      }'                      new Node {                          Key = 3'                          Nodes = new[] {                              new Node {Key = 234}                          }                      }                  }              };
Magic Number,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,TestNestedArray,The following statement contains a magic number: Node node = new Node              {                  Key = 27'                  Nodes = new[] {                      new Node {                          Key = 19'                          Nodes = new[] {                              new Node {Key = 1}'                              new Node {Key = 14}'                          }'                      }'                      new Node {                          Key = 3                      }'                      new Node {                          Key = 3'                          Nodes = new[] {                              new Node {Key = 234}                          }                      }                  }              };
Magic Number,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,TestNestedArray,The following statement contains a magic number: Node node = new Node              {                  Key = 27'                  Nodes = new[] {                      new Node {                          Key = 19'                          Nodes = new[] {                              new Node {Key = 1}'                              new Node {Key = 14}'                          }'                      }'                      new Node {                          Key = 3                      }'                      new Node {                          Key = 3'                          Nodes = new[] {                              new Node {Key = 234}                          }                      }                  }              };
Magic Number,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,TestNestedArray,The following statement contains a magic number: Node node = new Node              {                  Key = 27'                  Nodes = new[] {                      new Node {                          Key = 19'                          Nodes = new[] {                              new Node {Key = 1}'                              new Node {Key = 14}'                          }'                      }'                      new Node {                          Key = 3                      }'                      new Node {                          Key = 3'                          Nodes = new[] {                              new Node {Key = 234}                          }                      }                  }              };
Magic Number,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,TestNestedArray,The following statement contains a magic number: Node node = new Node              {                  Key = 27'                  Nodes = new[] {                      new Node {                          Key = 19'                          Nodes = new[] {                              new Node {Key = 1}'                              new Node {Key = 14}'                          }'                      }'                      new Node {                          Key = 3                      }'                      new Node {                          Key = 3'                          Nodes = new[] {                              new Node {Key = 234}                          }                      }                  }              };
Magic Number,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,TestNestedArray,The following statement contains a magic number: Node node = new Node              {                  Key = 27'                  Nodes = new[] {                      new Node {                          Key = 19'                          Nodes = new[] {                              new Node {Key = 1}'                              new Node {Key = 14}'                          }'                      }'                      new Node {                          Key = 3                      }'                      new Node {                          Key = 3'                          Nodes = new[] {                              new Node {Key = 234}                          }                      }                  }              };
Magic Number,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,TestStringArray,The following statement contains a magic number: Assert.Equal(3' clone.Count);
Magic Number,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,TestStringArray,The following statement contains a magic number: Assert.Equal(3' clone.Count);
Magic Number,Examples,ArrayTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Arrays.cs,TestEmptyArrays,The following statement contains a magic number: t.ValInt = 128;
Magic Number,Examples,TestAutoFields,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoFields.cs,TestIgnore,The following statement contains a magic number: IgnorePOCO foo = new IgnorePOCO                               {                                   IgnoreDirect = 1'                                   IgnoreIndirect = 2'                                   IncludeDirect = 3'                                   IncludeIndirect = 4                               }'                         bar = Serializer.DeepClone(foo);
Magic Number,Examples,TestAutoFields,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoFields.cs,TestIgnore,The following statement contains a magic number: IgnorePOCO foo = new IgnorePOCO                               {                                   IgnoreDirect = 1'                                   IgnoreIndirect = 2'                                   IncludeDirect = 3'                                   IncludeIndirect = 4                               }'                         bar = Serializer.DeepClone(foo);
Magic Number,Examples,TestAutoFields,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoFields.cs,TestIgnore,The following statement contains a magic number: IgnorePOCO foo = new IgnorePOCO                               {                                   IgnoreDirect = 1'                                   IgnoreIndirect = 2'                                   IncludeDirect = 3'                                   IncludeIndirect = 4                               }'                         bar = Serializer.DeepClone(foo);
Magic Number,Examples,TestAutoFields,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoFields.cs,TestAllFields,The following statement contains a magic number: ImplicitFieldPOCO foo = new ImplicitFieldPOCO                                      {                                          D_public = 100'                                          E_private = 101'                                          F_ignoreDirect = 102'                                          G_ignoreIndirect = 103'                                          H_nonSerialized = 104'                                          X_explicitField = 105'                                          Z_explicitProperty = 106                                        };
Magic Number,Examples,TestAutoFields,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoFields.cs,TestAllFields,The following statement contains a magic number: ImplicitFieldPOCO foo = new ImplicitFieldPOCO                                      {                                          D_public = 100'                                          E_private = 101'                                          F_ignoreDirect = 102'                                          G_ignoreIndirect = 103'                                          H_nonSerialized = 104'                                          X_explicitField = 105'                                          Z_explicitProperty = 106                                        };
Magic Number,Examples,TestAutoFields,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoFields.cs,TestAllFields,The following statement contains a magic number: ImplicitFieldPOCO foo = new ImplicitFieldPOCO                                      {                                          D_public = 100'                                          E_private = 101'                                          F_ignoreDirect = 102'                                          G_ignoreIndirect = 103'                                          H_nonSerialized = 104'                                          X_explicitField = 105'                                          Z_explicitProperty = 106                                        };
Magic Number,Examples,TestAutoFields,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoFields.cs,TestAllFields,The following statement contains a magic number: ImplicitFieldPOCO foo = new ImplicitFieldPOCO                                      {                                          D_public = 100'                                          E_private = 101'                                          F_ignoreDirect = 102'                                          G_ignoreIndirect = 103'                                          H_nonSerialized = 104'                                          X_explicitField = 105'                                          Z_explicitProperty = 106                                        };
Magic Number,Examples,TestAutoFields,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoFields.cs,TestAllFields,The following statement contains a magic number: ImplicitFieldPOCO foo = new ImplicitFieldPOCO                                      {                                          D_public = 100'                                          E_private = 101'                                          F_ignoreDirect = 102'                                          G_ignoreIndirect = 103'                                          H_nonSerialized = 104'                                          X_explicitField = 105'                                          Z_explicitProperty = 106                                        };
Magic Number,Examples,TestAutoFields,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoFields.cs,TestAllFields,The following statement contains a magic number: ImplicitFieldPOCO foo = new ImplicitFieldPOCO                                      {                                          D_public = 100'                                          E_private = 101'                                          F_ignoreDirect = 102'                                          G_ignoreIndirect = 103'                                          H_nonSerialized = 104'                                          X_explicitField = 105'                                          Z_explicitProperty = 106                                        };
Magic Number,Examples,TestAutoFields,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoFields.cs,TestAllFields,The following statement contains a magic number: ImplicitFieldPOCO foo = new ImplicitFieldPOCO                                      {                                          D_public = 100'                                          E_private = 101'                                          F_ignoreDirect = 102'                                          G_ignoreIndirect = 103'                                          H_nonSerialized = 104'                                          X_explicitField = 105'                                          Z_explicitProperty = 106                                        };
Magic Number,Examples,TestAutoFields,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoFields.cs,TestAllFields,The following statement contains a magic number: Assert.Equal(100' foo.D_public);
Magic Number,Examples,TestAutoFields,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoFields.cs,TestAllFields,The following statement contains a magic number: Assert.Equal(101' foo.E_private);
Magic Number,Examples,TestAutoFields,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoFields.cs,TestAllFields,The following statement contains a magic number: Assert.Equal(102' foo.F_ignoreDirect);
Magic Number,Examples,TestAutoFields,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoFields.cs,TestAllFields,The following statement contains a magic number: Assert.Equal(103' foo.G_ignoreIndirect);
Magic Number,Examples,TestAutoFields,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoFields.cs,TestAllFields,The following statement contains a magic number: Assert.Equal(104' foo.H_nonSerialized);
Magic Number,Examples,TestAutoFields,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoFields.cs,TestAllFields,The following statement contains a magic number: Assert.Equal(105' foo.X_explicitField);
Magic Number,Examples,TestAutoFields,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoFields.cs,TestAllFields,The following statement contains a magic number: Assert.Equal(106' foo.Z_explicitProperty);
Magic Number,Examples,TestAutoFields,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoFields.cs,TestAllFields,The following statement contains a magic number: Assert.Equal(100' bar.D_public);
Magic Number,Examples,TestAutoFields,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoFields.cs,TestAllFields,The following statement contains a magic number: Assert.Equal(101' bar.E_private);
Magic Number,Examples,TestAutoFields,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoFields.cs,TestAllFields,The following statement contains a magic number: Assert.Equal(105' bar.X_explicitField);
Magic Number,Examples,TestAutoFields,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoFields.cs,TestAllFields,The following statement contains a magic number: Assert.Equal(106' bar.Z_explicitProperty);
Magic Number,Examples,TestAutoFields,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoFields.cs,TestAllFields,The following statement contains a magic number: Assert.Equal(100' equiv.D);
Magic Number,Examples,TestAutoFields,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoFields.cs,TestAllFields,The following statement contains a magic number: Assert.Equal(101' equiv.E);
Magic Number,Examples,TestAutoFields,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoFields.cs,TestAllFields,The following statement contains a magic number: Assert.Equal(105' equiv.X);
Magic Number,Examples,TestAutoFields,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoFields.cs,TestAllFields,The following statement contains a magic number: Assert.Equal(106' equiv.Z);
Magic Number,Examples,TestAutoFields,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoFields.cs,TestAllPublic,The following statement contains a magic number: ImplicitPublicPOCO foo = new ImplicitPublicPOCO                                       { ImplicitField = 101' ExplicitNonPublic = 102' IgnoreDirect = 103'                                       IgnoreIndirect = 104' ImplicitNonPublic = 105' ImplicitProperty = 106};
Magic Number,Examples,TestAutoFields,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoFields.cs,TestAllPublic,The following statement contains a magic number: ImplicitPublicPOCO foo = new ImplicitPublicPOCO                                       { ImplicitField = 101' ExplicitNonPublic = 102' IgnoreDirect = 103'                                       IgnoreIndirect = 104' ImplicitNonPublic = 105' ImplicitProperty = 106};
Magic Number,Examples,TestAutoFields,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoFields.cs,TestAllPublic,The following statement contains a magic number: ImplicitPublicPOCO foo = new ImplicitPublicPOCO                                       { ImplicitField = 101' ExplicitNonPublic = 102' IgnoreDirect = 103'                                       IgnoreIndirect = 104' ImplicitNonPublic = 105' ImplicitProperty = 106};
Magic Number,Examples,TestAutoFields,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoFields.cs,TestAllPublic,The following statement contains a magic number: ImplicitPublicPOCO foo = new ImplicitPublicPOCO                                       { ImplicitField = 101' ExplicitNonPublic = 102' IgnoreDirect = 103'                                       IgnoreIndirect = 104' ImplicitNonPublic = 105' ImplicitProperty = 106};
Magic Number,Examples,TestAutoFields,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoFields.cs,TestAllPublic,The following statement contains a magic number: ImplicitPublicPOCO foo = new ImplicitPublicPOCO                                       { ImplicitField = 101' ExplicitNonPublic = 102' IgnoreDirect = 103'                                       IgnoreIndirect = 104' ImplicitNonPublic = 105' ImplicitProperty = 106};
Magic Number,Examples,TestAutoFields,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoFields.cs,TestAllPublic,The following statement contains a magic number: ImplicitPublicPOCO foo = new ImplicitPublicPOCO                                       { ImplicitField = 101' ExplicitNonPublic = 102' IgnoreDirect = 103'                                       IgnoreIndirect = 104' ImplicitNonPublic = 105' ImplicitProperty = 106};
Magic Number,Examples,TestAutoFields,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoFields.cs,TestAllPublic,The following statement contains a magic number: Assert.Equal(101' foo.ImplicitField);
Magic Number,Examples,TestAutoFields,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoFields.cs,TestAllPublic,The following statement contains a magic number: Assert.Equal(102' foo.ExplicitNonPublic);
Magic Number,Examples,TestAutoFields,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoFields.cs,TestAllPublic,The following statement contains a magic number: Assert.Equal(103' foo.IgnoreDirect);
Magic Number,Examples,TestAutoFields,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoFields.cs,TestAllPublic,The following statement contains a magic number: Assert.Equal(104' foo.IgnoreIndirect);
Magic Number,Examples,TestAutoFields,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoFields.cs,TestAllPublic,The following statement contains a magic number: Assert.Equal(105' foo.ImplicitNonPublic);
Magic Number,Examples,TestAutoFields,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoFields.cs,TestAllPublic,The following statement contains a magic number: Assert.Equal(106' foo.ImplicitProperty);
Magic Number,Examples,TestAutoFields,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoFields.cs,TestAllPublic,The following statement contains a magic number: Assert.Equal(101' bar.ImplicitField);
Magic Number,Examples,TestAutoFields,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoFields.cs,TestAllPublic,The following statement contains a magic number: Assert.Equal(102' bar.ExplicitNonPublic);
Magic Number,Examples,TestAutoFields,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoFields.cs,TestAllPublic,The following statement contains a magic number: Assert.Equal(106' bar.ImplicitProperty);
Magic Number,Examples,TestAutoFields,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoFields.cs,TestAllPublic,The following statement contains a magic number: Assert.Equal(101' equiv.ImplicitField);
Magic Number,Examples,TestAutoFields,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoFields.cs,TestAllPublic,The following statement contains a magic number: Assert.Equal(102' equiv.ExplicitNonPublic);
Magic Number,Examples,TestAutoFields,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoFields.cs,TestAllPublic,The following statement contains a magic number: Assert.Equal(106' equiv.ImplicitProperty);
Magic Number,Examples,AutoTuple,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoTuple.cs,TestHasTuplesWrapped,The following statement contains a magic number: var obj = new HasTuples {Value = new BasicTuple(123' "abc")};
Magic Number,Examples,AutoTuple,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoTuple.cs,TestHasTuplesWrapped,The following statement contains a magic number: Assert.Equal(123' clone.Value.Foo);
Magic Number,Examples,AutoTuple,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoTuple.cs,TestHasTuplesWrapped,The following statement contains a magic number: Assert.Equal(123' clone.Value.Foo);
Magic Number,Examples,AutoTuple,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoTuple.cs,TestHasTuplesWrapped,The following statement contains a magic number: Assert.Equal(123' clone.Value.Foo);
Magic Number,Examples,AutoTuple,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoTuple.cs,TestHasTuplesNaked,The following statement contains a magic number: var obj = new BasicTuple(123' "abc");
Magic Number,Examples,AutoTuple,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoTuple.cs,TestHasTuplesNaked,The following statement contains a magic number: Assert.Equal(123' clone.Foo);
Magic Number,Examples,AutoTuple,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoTuple.cs,TestHasTuplesNaked,The following statement contains a magic number: Assert.Equal(123' clone.Foo);
Magic Number,Examples,AutoTuple,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoTuple.cs,TestHasTuplesNaked,The following statement contains a magic number: Assert.Equal(123' clone.Foo);
Magic Number,Examples,AutoTuple,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoTuple.cs,TestHasTuplesReversedOrderNaked,The following statement contains a magic number: var obj = new BasicTupleReversedOrder("abc"' 123);
Magic Number,Examples,AutoTuple,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoTuple.cs,TestHasTuplesReversedOrderNaked,The following statement contains a magic number: Assert.Equal(123' clone.Foo);
Magic Number,Examples,AutoTuple,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoTuple.cs,TestHasTuplesReversedOrderNaked,The following statement contains a magic number: Assert.Equal(123' clone.Foo);
Magic Number,Examples,AutoTuple,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoTuple.cs,TestHasTuplesReversedOrderNaked,The following statement contains a magic number: Assert.Equal(123' clone.Foo);
Magic Number,Examples,AutoTuple,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoTuple.cs,TestInbuiltTupleNaked,The following statement contains a magic number: var obj = Tuple.Create(123' "abc");
Magic Number,Examples,AutoTuple,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoTuple.cs,TestInbuiltTupleNaked,The following statement contains a magic number: Assert.Equal(123' clone.Item1);
Magic Number,Examples,AutoTuple,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoTuple.cs,TestInbuiltTupleNaked,The following statement contains a magic number: Assert.Equal(123' clone.Item1);
Magic Number,Examples,AutoTuple,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoTuple.cs,TestInbuiltTupleNaked,The following statement contains a magic number: Assert.Equal(123' clone.Item1);
Magic Number,Examples,AutoTuple,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoTuple.cs,TestAnonTypeAsTuple,The following statement contains a magic number: var obj = new {Foo = 123' Bar = "abc"};
Magic Number,Examples,AutoTuple,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoTuple.cs,TestAnonTypeAsTuple,The following statement contains a magic number: Assert.Equal(123' clone.Foo);
Magic Number,Examples,AutoTuple,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\AutoTuple.cs,TestAnonTypeAsTuple,The following statement contains a magic number: Assert.Equal(123' clone.Foo);
Magic Number,Examples,Callbacks,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Callbacks.cs,TestStructSimple,The following statement contains a magic number: Assert.Equal(6' CallbackStructSimple.BeforeSerializeCount - beforeSer);
Magic Number,Examples,Callbacks,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Callbacks.cs,TestStructSimple,The following statement contains a magic number: Assert.Equal(6' CallbackStructSimple.AfterSerializeCount - afterSer);
Magic Number,Examples,ComparisonToNDCS,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ComparisonToNDCS.cs,GetTestData,The following statement contains a magic number: var rand = new Random(12345);
Magic Number,Examples,ComparisonToNDCS,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ComparisonToNDCS.cs,GetTestData,The following statement contains a magic number: List<BasicDto> list = new List<BasicDto>(300000);
Magic Number,Examples,ComparisonToNDCS,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ComparisonToNDCS.cs,GetTestData,The following statement contains a magic number: basicDto.Foo = new DateTime(rand.Next(1980' 2020)' rand.Next(1' 13)'                                              rand.Next(1' 29)' rand.Next(0' 24)'                                              rand.Next(0' 60)' rand.Next(0' 60));
Magic Number,Examples,ComparisonToNDCS,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ComparisonToNDCS.cs,GetTestData,The following statement contains a magic number: basicDto.Foo = new DateTime(rand.Next(1980' 2020)' rand.Next(1' 13)'                                              rand.Next(1' 29)' rand.Next(0' 24)'                                              rand.Next(0' 60)' rand.Next(0' 60));
Magic Number,Examples,ComparisonToNDCS,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ComparisonToNDCS.cs,GetTestData,The following statement contains a magic number: basicDto.Foo = new DateTime(rand.Next(1980' 2020)' rand.Next(1' 13)'                                              rand.Next(1' 29)' rand.Next(0' 24)'                                              rand.Next(0' 60)' rand.Next(0' 60));
Magic Number,Examples,ComparisonToNDCS,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ComparisonToNDCS.cs,GetTestData,The following statement contains a magic number: basicDto.Foo = new DateTime(rand.Next(1980' 2020)' rand.Next(1' 13)'                                              rand.Next(1' 29)' rand.Next(0' 24)'                                              rand.Next(0' 60)' rand.Next(0' 60));
Magic Number,Examples,ComparisonToNDCS,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ComparisonToNDCS.cs,GetTestData,The following statement contains a magic number: basicDto.Foo = new DateTime(rand.Next(1980' 2020)' rand.Next(1' 13)'                                              rand.Next(1' 29)' rand.Next(0' 24)'                                              rand.Next(0' 60)' rand.Next(0' 60));
Magic Number,Examples,ComparisonToNDCS,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ComparisonToNDCS.cs,GetTestData,The following statement contains a magic number: basicDto.Foo = new DateTime(rand.Next(1980' 2020)' rand.Next(1' 13)'                                              rand.Next(1' 29)' rand.Next(0' 24)'                                              rand.Next(0' 60)' rand.Next(0' 60));
Magic Number,Examples,ComparisonToNDCS,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ComparisonToNDCS.cs,GetTestData,The following statement contains a magic number: basicDto.Foo = new DateTime(rand.Next(1980' 2020)' rand.Next(1' 13)'                                              rand.Next(1' 29)' rand.Next(0' 24)'                                              rand.Next(0' 60)' rand.Next(0' 60));
Magic Number,Examples,ComparisonToNDCS,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ComparisonToNDCS.cs,GetTestData,The following statement contains a magic number: i < 300000
Magic Number,Examples,DataMemberOffset,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\DataMemberOffset.cs,TestOffset,The following statement contains a magic number: DMO_First first = new DMO_First {Foo = 12};
Magic Number,Examples,TestWeCanTurnOffNonProtoMarkers,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\DataMemberOffset.cs,TypeWithProtosAndDataContract_UseAny_ShouldSerializeBoth,The following statement contains a magic number: var orig = new TypeWithProtosAndDataContract_UseAny { Foo = 123' Bar = 456 };
Magic Number,Examples,TestWeCanTurnOffNonProtoMarkers,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\DataMemberOffset.cs,TypeWithProtosAndDataContract_UseAny_ShouldSerializeBoth,The following statement contains a magic number: var orig = new TypeWithProtosAndDataContract_UseAny { Foo = 123' Bar = 456 };
Magic Number,Examples,TestWeCanTurnOffNonProtoMarkers,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\DataMemberOffset.cs,TypeWithProtosAndDataContract_UseAny_ShouldSerializeBoth,The following statement contains a magic number: Assert.Equal(123' clone.Foo);
Magic Number,Examples,TestWeCanTurnOffNonProtoMarkers,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\DataMemberOffset.cs,TypeWithProtosAndDataContract_UseAny_ShouldSerializeBoth,The following statement contains a magic number: Assert.Equal(456' clone.Bar);
Magic Number,Examples,TestWeCanTurnOffNonProtoMarkers,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\DataMemberOffset.cs,TypeWithProtosAndDataContract_UseProtoOnly_ShouldSerializeFooOnly,The following statement contains a magic number: var orig = new TypeWithProtosAndDataContract_UseProtoOnly { Foo = 123' Bar = 456 };
Magic Number,Examples,TestWeCanTurnOffNonProtoMarkers,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\DataMemberOffset.cs,TypeWithProtosAndDataContract_UseProtoOnly_ShouldSerializeFooOnly,The following statement contains a magic number: var orig = new TypeWithProtosAndDataContract_UseProtoOnly { Foo = 123' Bar = 456 };
Magic Number,Examples,TestWeCanTurnOffNonProtoMarkers,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\DataMemberOffset.cs,TypeWithProtosAndDataContract_UseProtoOnly_ShouldSerializeFooOnly,The following statement contains a magic number: Assert.Equal(123' clone.Foo);
Magic Number,Examples,TestDetectMissing,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\DetectMissing.cs,TestDefaults,The following statement contains a magic number: Assert.Equal(5' dm.Foo);
Magic Number,Examples,TestDetectMissing,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\DetectMissing.cs,TestSetValuesToDefaults,The following statement contains a magic number: dm.Foo = 5;
Magic Number,Examples,TestDetectMissing,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\DetectMissing.cs,TestSetValuesToDefaults,The following statement contains a magic number: Assert.Equal(5' dm.Foo);
Magic Number,Examples,TestDetectMissing,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\DetectMissing.cs,TestSetValuesToNewValues,The following statement contains a magic number: dm.Foo = 7;
Magic Number,Examples,TestDetectMissing,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\DetectMissing.cs,TestSetValuesToNewValues,The following statement contains a magic number: Assert.Equal(7' dm.Foo);
Magic Number,Examples,TestDetectMissing,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\DetectMissing.cs,TestSetSpecified,The following statement contains a magic number: Assert.Equal(5' dm.Foo);
Magic Number,Examples,TestDetectMissing,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\DetectMissing.cs,TestResetSpecified,The following statement contains a magic number: dm.Foo = 27;
Magic Number,Examples,TestDetectMissing,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\DetectMissing.cs,TestResetSpecified,The following statement contains a magic number: Assert.Equal(5' dm.Foo);
Magic Number,Examples,TestDetectMissing,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\DetectMissing.cs,TestComponentModelReset,The following statement contains a magic number: DetectMissing dm = new DetectMissing { Foo = 37' Bar = "fgjh" };
Magic Number,Examples,ExtendedTimeTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ExtendedTimeTests.cs,TickPrecisionTimeSpanTest,The following statement contains a magic number: TimeSpan ts = KnownTimeWithTicks - new DateTime(2008' 1' 1);
Magic Number,Examples,ExtendedTimeTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ExtendedTimeTests.cs,TestDateTimeTicks,The following statement contains a magic number: i < 500
Magic Number,Examples,ExtendedTimeTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ExtendedTimeTests.cs,TestFixedOnly,The following statement contains a magic number: var when = new DateTime(2010' 05' 17' 8' 30' 0);
Magic Number,Examples,ExtendedTimeTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ExtendedTimeTests.cs,TestFixedOnly,The following statement contains a magic number: var when = new DateTime(2010' 05' 17' 8' 30' 0);
Magic Number,Examples,ExtendedTimeTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ExtendedTimeTests.cs,TestFixedOnly,The following statement contains a magic number: var when = new DateTime(2010' 05' 17' 8' 30' 0);
Magic Number,Examples,ExtendedTimeTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ExtendedTimeTests.cs,TestFixedOnly,The following statement contains a magic number: var when = new DateTime(2010' 05' 17' 8' 30' 0);
Magic Number,Examples,ExtendedTimeTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ExtendedTimeTests.cs,TestFixedOnly,The following statement contains a magic number: var when = new DateTime(2010' 05' 17' 8' 30' 0);
Magic Number,Examples,ExtendedTimeTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ExtendedTimeTests.cs,TestDate,The following statement contains a magic number: bits[0] = 9;
Magic Number,Examples,Extensibility,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Extensibility.cs,TestExpectedMakeFromScratchOutput,The following statement contains a magic number: var canHaz = new CanHazData {                  A = "abc"' B = 456.7F' C = 123              };
Magic Number,Examples,Extensibility,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Extensibility.cs,TestExpectedMakeFromScratchOutput,The following statement contains a magic number: var canHaz = new CanHazData {                  A = "abc"' B = 456.7F' C = 123              };
Magic Number,Examples,Extensibility,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Extensibility.cs,MakeFromScratch,The following statement contains a magic number: model.Add(typeof(CanHazData)' true)[3].IsStrict = true;
Magic Number,Examples,Extensibility,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Extensibility.cs,MakeFromScratchImpl,The following statement contains a magic number: Extensible.AppendValue(model' obj' 2' DataFormat.Default' 456.7F);
Magic Number,Examples,Extensibility,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Extensibility.cs,MakeFromScratchImpl,The following statement contains a magic number: Extensible.AppendValue(model' obj' 2' DataFormat.Default' 456.7F);
Magic Number,Examples,Extensibility,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Extensibility.cs,MakeFromScratchImpl,The following statement contains a magic number: Extensible.AppendValue(model' obj' 3' DataFormat.FixedSize' 123);
Magic Number,Examples,Extensibility,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Extensibility.cs,MakeFromScratchImpl,The following statement contains a magic number: Extensible.AppendValue(model' obj' 3' DataFormat.FixedSize' 123);
Magic Number,Examples,Extensibility,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Extensibility.cs,MakeFromScratchImpl,The following statement contains a magic number: Assert.Equal(456.7F' clone.B);
Magic Number,Examples,Extensibility,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Extensibility.cs,MakeFromScratchImpl,The following statement contains a magic number: Assert.Equal(123' clone.C);
Magic Number,Examples,Extensibility,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Extensibility.cs,GetBigObject,The following statement contains a magic number: return new BiggerObject              {                  Bof = "BOF"'                  SomeBlob = new byte[] { 0x01' 0x02' 0x03' 0x04' 0x05 }'                  SomeDouble = double.MaxValue / 2'                  SomeFloat = float.MinValue / 2'                  SomeInt32 = (int.MaxValue / 3) * 2'                  SomeString = "abcdefghijklmnopqrstuvwxyz"'                  Eof = "EOF"              };
Magic Number,Examples,Extensibility,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Extensibility.cs,GetBigObject,The following statement contains a magic number: return new BiggerObject              {                  Bof = "BOF"'                  SomeBlob = new byte[] { 0x01' 0x02' 0x03' 0x04' 0x05 }'                  SomeDouble = double.MaxValue / 2'                  SomeFloat = float.MinValue / 2'                  SomeInt32 = (int.MaxValue / 3) * 2'                  SomeString = "abcdefghijklmnopqrstuvwxyz"'                  Eof = "EOF"              };
Magic Number,Examples,Extensibility,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Extensibility.cs,GetBigObject,The following statement contains a magic number: return new BiggerObject              {                  Bof = "BOF"'                  SomeBlob = new byte[] { 0x01' 0x02' 0x03' 0x04' 0x05 }'                  SomeDouble = double.MaxValue / 2'                  SomeFloat = float.MinValue / 2'                  SomeInt32 = (int.MaxValue / 3) * 2'                  SomeString = "abcdefghijklmnopqrstuvwxyz"'                  Eof = "EOF"              };
Magic Number,Examples,Extensibility,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Extensibility.cs,GetBigObject,The following statement contains a magic number: return new BiggerObject              {                  Bof = "BOF"'                  SomeBlob = new byte[] { 0x01' 0x02' 0x03' 0x04' 0x05 }'                  SomeDouble = double.MaxValue / 2'                  SomeFloat = float.MinValue / 2'                  SomeInt32 = (int.MaxValue / 3) * 2'                  SomeString = "abcdefghijklmnopqrstuvwxyz"'                  Eof = "EOF"              };
Magic Number,Examples,Extensibility,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Extensibility.cs,TestReadExt,The following statement contains a magic number: bool hasValue = Extensible.TryGetValue<float>(small' 3' out var val);
Magic Number,Examples,Extensibility,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Extensibility.cs,TestReadExt,The following statement contains a magic number: hasValue = Extensible.TryGetValue<float>(small' 1000' out val);
Magic Number,Examples,Extensibility,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Extensibility.cs,TestWriteExt,The following statement contains a magic number: const float SOME_VALUE = 987.65F;
Magic Number,Examples,Extensibility,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Extensibility.cs,TestWriteExt,The following statement contains a magic number: Extensible.AppendValue<float>(obj' 3' SOME_VALUE);
Magic Number,Examples,Extensibility,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Extensibility.cs,TestWriteExt,The following statement contains a magic number: Assert.Equal(5' raw.Length);
Magic Number,Examples,Extensibility,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Extensibility.cs,TestWriteExt,The following statement contains a magic number: Assert.Equal((3 << 3) | 5' raw[0]);
Magic Number,Examples,Extensibility,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Extensibility.cs,TestWriteExt,The following statement contains a magic number: Assert.Equal((3 << 3) | 5' raw[0]);
Magic Number,Examples,Extensibility,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Extensibility.cs,TestWriteExt,The following statement contains a magic number: Assert.Equal((3 << 3) | 5' raw[0]);
Magic Number,Examples,Extensibility,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Extensibility.cs,TestWriteExt,The following statement contains a magic number: Assert.Equal(tmp[1]' raw[2]);
Magic Number,Examples,Extensibility,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Extensibility.cs,TestWriteExt,The following statement contains a magic number: Assert.Equal(tmp[2]' raw[3]);
Magic Number,Examples,Extensibility,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Extensibility.cs,TestWriteExt,The following statement contains a magic number: Assert.Equal(tmp[2]' raw[3]);
Magic Number,Examples,Extensibility,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Extensibility.cs,TestWriteExt,The following statement contains a magic number: Assert.Equal(tmp[3]' raw[4]);
Magic Number,Examples,Extensibility,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Extensibility.cs,TestWriteExt,The following statement contains a magic number: Assert.Equal(tmp[3]' raw[4]);
Magic Number,Examples,Extensibility,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Extensibility.cs,TestWriteExt,The following statement contains a magic number: float readBack = Extensible.GetValue<float>(obj' 3);
Magic Number,Examples,Fields,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Fields.cs,TestWcfSerializesDataContractAsExpected,The following statement contains a magic number: WcfWithFields obj = new WcfWithFields { Foo = 123' Bar = "abc" }' clone;
Magic Number,Examples,Fields,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Fields.cs,TestProtoSerializesDataContractAsExpected,The following statement contains a magic number: WcfWithFields obj = new WcfWithFields { Foo = 123' Bar = "abc" }'                  clone = Serializer.DeepClone(obj);
Magic Number,Examples,Fields,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Fields.cs,TestProtoSerializesProtoContractAsExpected,The following statement contains a magic number: ProtoWithFields obj = new ProtoWithFields { Foo = 123' Bar = "abc" }'                  clone = Serializer.DeepClone(obj);
Magic Number,Examples,GuidTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\GuidTests.cs,TestPartialWithGuid,The following statement contains a magic number: Assert.Equal(21' Measure(user));
Magic Number,Examples,GuidTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\GuidTests.cs,TestPartialWithGuid,The following statement contains a magic number: Assert.Equal(21' Measure(user));
Magic Number,Examples,GuidTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\GuidTests.cs,TestGuidWithCrazyDefault,The following statement contains a magic number: Assert.Equal(21' Measure(user));
Magic Number,Examples,GuidTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\GuidTests.cs,TestGuidWithCrazyDefault,The following statement contains a magic number: Assert.Equal(3' Measure(user));
Magic Number,Examples,GuidTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\GuidTests.cs,TestGuidWithCrazyDefault,The following statement contains a magic number: Assert.Equal(21' Measure(user));
Magic Number,Examples,GuidTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\GuidTests.cs,TestGuidWithCrazyDefault,The following statement contains a magic number: Assert.Equal(3' Measure(user));
Magic Number,Examples,GuidTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\GuidTests.cs,TestNonEmptyGuid,The following statement contains a magic number: Assert.Equal(20' ms.Length);
Magic Number,Examples,ImmutableCollections,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ImmutableCollections.cs,TestDictionaryImpl,The following statement contains a magic number: var values = new Dictionary<int' string> { { 1' "a" }' { 2' "b" }' { 3' "c" }' { 4' "d" } };
Magic Number,Examples,ImmutableCollections,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ImmutableCollections.cs,TestDictionaryImpl,The following statement contains a magic number: var values = new Dictionary<int' string> { { 1' "a" }' { 2' "b" }' { 3' "c" }' { 4' "d" } };
Magic Number,Examples,ImmutableCollections,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ImmutableCollections.cs,TestDictionaryImpl,The following statement contains a magic number: var values = new Dictionary<int' string> { { 1' "a" }' { 2' "b" }' { 3' "c" }' { 4' "d" } };
Magic Number,Examples,ImmutableCollections,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ImmutableCollections.cs,TestDictionaryImpl,The following statement contains a magic number: Assert.Equal(4' clone.Dictionary.Count);
Magic Number,Examples,ImmutableCollections,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ImmutableCollections.cs,TestDictionaryImpl,The following statement contains a magic number: Assert.Equal("b"' clone.Dictionary[2]);
Magic Number,Examples,ImmutableCollections,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ImmutableCollections.cs,TestDictionaryImpl,The following statement contains a magic number: Assert.Equal("c"' clone.Dictionary[3]);
Magic Number,Examples,ImmutableCollections,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ImmutableCollections.cs,TestDictionaryImpl,The following statement contains a magic number: Assert.Equal("d"' clone.Dictionary[4]);
Magic Number,Examples,ImmutableCollections,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ImmutableCollections.cs,TestListImpl,The following statement contains a magic number: int[] values = { 1' 2' 3' 4 };
Magic Number,Examples,ImmutableCollections,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ImmutableCollections.cs,TestListImpl,The following statement contains a magic number: int[] values = { 1' 2' 3' 4 };
Magic Number,Examples,ImmutableCollections,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ImmutableCollections.cs,TestListImpl,The following statement contains a magic number: int[] values = { 1' 2' 3' 4 };
Magic Number,Examples,ImmutableCollections,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ImmutableCollections.cs,TestListImpl,The following statement contains a magic number: AssertSequence(new[] { 1' 2' 3' 4 }' clone.List' caption);
Magic Number,Examples,ImmutableCollections,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ImmutableCollections.cs,TestListImpl,The following statement contains a magic number: AssertSequence(new[] { 1' 2' 3' 4 }' clone.List' caption);
Magic Number,Examples,ImmutableCollections,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ImmutableCollections.cs,TestListImpl,The following statement contains a magic number: AssertSequence(new[] { 1' 2' 3' 4 }' clone.List' caption);
Magic Number,Examples,ImmutableCollections,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ImmutableCollections.cs,TestListImpl,The following statement contains a magic number: AssertSequence(new[] { 1' 2' 3' 4' 1' 2' 3' 4 }' clone.List' caption);
Magic Number,Examples,ImmutableCollections,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ImmutableCollections.cs,TestListImpl,The following statement contains a magic number: AssertSequence(new[] { 1' 2' 3' 4' 1' 2' 3' 4 }' clone.List' caption);
Magic Number,Examples,ImmutableCollections,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ImmutableCollections.cs,TestListImpl,The following statement contains a magic number: AssertSequence(new[] { 1' 2' 3' 4' 1' 2' 3' 4 }' clone.List' caption);
Magic Number,Examples,ImmutableCollections,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ImmutableCollections.cs,TestListImpl,The following statement contains a magic number: AssertSequence(new[] { 1' 2' 3' 4' 1' 2' 3' 4 }' clone.List' caption);
Magic Number,Examples,ImmutableCollections,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ImmutableCollections.cs,TestListImpl,The following statement contains a magic number: AssertSequence(new[] { 1' 2' 3' 4' 1' 2' 3' 4 }' clone.List' caption);
Magic Number,Examples,ImmutableCollections,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ImmutableCollections.cs,TestListImpl,The following statement contains a magic number: AssertSequence(new[] { 1' 2' 3' 4' 1' 2' 3' 4 }' clone.List' caption);
Magic Number,Examples,ImmutableCollections,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ImmutableCollections.cs,TestHashSetImpl,The following statement contains a magic number: var obj = new T { HashSet = ImmutableHashSet.Create(1' 3' 2) };
Magic Number,Examples,ImmutableCollections,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ImmutableCollections.cs,TestHashSetImpl,The following statement contains a magic number: var obj = new T { HashSet = ImmutableHashSet.Create(1' 3' 2) };
Magic Number,Examples,ImmutableCollections,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ImmutableCollections.cs,TestHashSetImpl,The following statement contains a magic number: Assert.Equal(3' clone.HashSet.Count);
Magic Number,Examples,ImmutableCollections,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ImmutableCollections.cs,TestHashSetImpl,The following statement contains a magic number: Assert.Contains(2' clone.HashSet);
Magic Number,Examples,ImmutableCollections,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ImmutableCollections.cs,TestHashSetImpl,The following statement contains a magic number: Assert.Contains(3' clone.HashSet);
Magic Number,Examples,ImmutableCollections,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ImmutableCollections.cs,TestSortedSetImpl,The following statement contains a magic number: var obj = new T { SortedSet = ImmutableSortedSet.Create(1' 3' 2) };
Magic Number,Examples,ImmutableCollections,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ImmutableCollections.cs,TestSortedSetImpl,The following statement contains a magic number: var obj = new T { SortedSet = ImmutableSortedSet.Create(1' 3' 2) };
Magic Number,Examples,ImmutableCollections,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ImmutableCollections.cs,TestSortedSetImpl,The following statement contains a magic number: AssertSequence(new[] { 1' 2' 3 }' clone.SortedSet' caption);
Magic Number,Examples,ImmutableCollections,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ImmutableCollections.cs,TestSortedSetImpl,The following statement contains a magic number: AssertSequence(new[] { 1' 2' 3 }' clone.SortedSet' caption);
Magic Number,Examples,ImmutableCollections,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ImmutableCollections.cs,TestSortedDictionaryImpl,The following statement contains a magic number: var dict = new Dictionary<int'string> {                  {1'"a"}'                  {3'"c"}'                  {2'"b"}              };
Magic Number,Examples,ImmutableCollections,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ImmutableCollections.cs,TestSortedDictionaryImpl,The following statement contains a magic number: var dict = new Dictionary<int'string> {                  {1'"a"}'                  {3'"c"}'                  {2'"b"}              };
Magic Number,Examples,ImmutableCollections,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ImmutableCollections.cs,TestSortedDictionaryImpl,The following statement contains a magic number: Assert.Equal(3' clone.SortedDictionary.Count);
Magic Number,Examples,ImmutableCollections,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ImmutableCollections.cs,TestSortedDictionaryImpl,The following statement contains a magic number: Assert.Equal("b"' clone.SortedDictionary[2]);
Magic Number,Examples,ImmutableCollections,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ImmutableCollections.cs,TestSortedDictionaryImpl,The following statement contains a magic number: Assert.Equal("c"' clone.SortedDictionary[3]);
Magic Number,Examples,ImmutableCollections,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ImmutableCollections.cs,TestSortedDictionaryImpl,The following statement contains a magic number: AssertSequence(new[] { 1' 2' 3 }' clone.SortedDictionary.Keys' caption);
Magic Number,Examples,ImmutableCollections,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ImmutableCollections.cs,TestSortedDictionaryImpl,The following statement contains a magic number: AssertSequence(new[] { 1' 2' 3 }' clone.SortedDictionary.Keys' caption);
Magic Number,Examples,InheritanceMidLevel,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\InheritanceMidLevel.cs,CreateChild,The following statement contains a magic number: return new IMLChild { ChildProperty = 123' ParentProperty = 456' RootProperty = 789 };
Magic Number,Examples,InheritanceMidLevel,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\InheritanceMidLevel.cs,CreateChild,The following statement contains a magic number: return new IMLChild { ChildProperty = 123' ParentProperty = 456' RootProperty = 789 };
Magic Number,Examples,InheritanceMidLevel,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\InheritanceMidLevel.cs,CreateChild,The following statement contains a magic number: return new IMLChild { ChildProperty = 123' ParentProperty = 456' RootProperty = 789 };
Magic Number,Examples,InheritanceMidLevel,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\InheritanceMidLevel.cs,CreateChild,The following statement contains a magic number: return CreateChild(789' 456' 123);
Magic Number,Examples,InheritanceMidLevel,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\InheritanceMidLevel.cs,CreateChild,The following statement contains a magic number: return CreateChild(789' 456' 123);
Magic Number,Examples,InheritanceMidLevel,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\InheritanceMidLevel.cs,CreateChild,The following statement contains a magic number: return CreateChild(789' 456' 123);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadIndividuallyFixedLength,The following statement contains a magic number: Assert.Equal(8' CheckIndividually(0' PrefixStyle.Fixed32' -2'-1'0'1'2'3'4'5));
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadIndividuallyFixedLength,The following statement contains a magic number: Assert.Equal(8' CheckIndividually(0' PrefixStyle.Fixed32' -2'-1'0'1'2'3'4'5));
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadIndividuallyFixedLength,The following statement contains a magic number: Assert.Equal(8' CheckIndividually(0' PrefixStyle.Fixed32' -2'-1'0'1'2'3'4'5));
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadIndividuallyFixedLength,The following statement contains a magic number: Assert.Equal(8' CheckIndividually(0' PrefixStyle.Fixed32' -2'-1'0'1'2'3'4'5));
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadIndividuallyFixedLength,The following statement contains a magic number: Assert.Equal(8' CheckIndividually(0' PrefixStyle.Fixed32' -2'-1'0'1'2'3'4'5));
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadIndividuallyFixedLength,The following statement contains a magic number: Assert.Equal(8' CheckIndividually(0' PrefixStyle.Fixed32' -2'-1'0'1'2'3'4'5));
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadIndividuallyBase128NoTag,The following statement contains a magic number: Assert.Equal(8' CheckIndividually(0' PrefixStyle.Base128' -2' -1' 0' 1' 2' 3' 4' 5));
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadIndividuallyBase128NoTag,The following statement contains a magic number: Assert.Equal(8' CheckIndividually(0' PrefixStyle.Base128' -2' -1' 0' 1' 2' 3' 4' 5));
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadIndividuallyBase128NoTag,The following statement contains a magic number: Assert.Equal(8' CheckIndividually(0' PrefixStyle.Base128' -2' -1' 0' 1' 2' 3' 4' 5));
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadIndividuallyBase128NoTag,The following statement contains a magic number: Assert.Equal(8' CheckIndividually(0' PrefixStyle.Base128' -2' -1' 0' 1' 2' 3' 4' 5));
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadIndividuallyBase128NoTag,The following statement contains a magic number: Assert.Equal(8' CheckIndividually(0' PrefixStyle.Base128' -2' -1' 0' 1' 2' 3' 4' 5));
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadIndividuallyBase128NoTag,The following statement contains a magic number: Assert.Equal(8' CheckIndividually(0' PrefixStyle.Base128' -2' -1' 0' 1' 2' 3' 4' 5));
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadIndividuallyBase128Tag,The following statement contains a magic number: Assert.Equal(8' CheckIndividually(2' PrefixStyle.Base128' -2' -1' 0' 1' 2' 3' 4' 5));
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadIndividuallyBase128Tag,The following statement contains a magic number: Assert.Equal(8' CheckIndividually(2' PrefixStyle.Base128' -2' -1' 0' 1' 2' 3' 4' 5));
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadIndividuallyBase128Tag,The following statement contains a magic number: Assert.Equal(8' CheckIndividually(2' PrefixStyle.Base128' -2' -1' 0' 1' 2' 3' 4' 5));
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadIndividuallyBase128Tag,The following statement contains a magic number: Assert.Equal(8' CheckIndividually(2' PrefixStyle.Base128' -2' -1' 0' 1' 2' 3' 4' 5));
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadIndividuallyBase128Tag,The following statement contains a magic number: Assert.Equal(8' CheckIndividually(2' PrefixStyle.Base128' -2' -1' 0' 1' 2' 3' 4' 5));
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadIndividuallyBase128Tag,The following statement contains a magic number: Assert.Equal(8' CheckIndividually(2' PrefixStyle.Base128' -2' -1' 0' 1' 2' 3' 4' 5));
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadIndividuallyBase128Tag,The following statement contains a magic number: Assert.Equal(8' CheckIndividually(2' PrefixStyle.Base128' -2' -1' 0' 1' 2' 3' 4' 5));
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingFixedLength,The following statement contains a magic number: Assert.Equal(8' CheckStreaming(0' PrefixStyle.Fixed32' -2' -1' 0' 1' 2' 3' 4' 5));
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingFixedLength,The following statement contains a magic number: Assert.Equal(8' CheckStreaming(0' PrefixStyle.Fixed32' -2' -1' 0' 1' 2' 3' 4' 5));
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingFixedLength,The following statement contains a magic number: Assert.Equal(8' CheckStreaming(0' PrefixStyle.Fixed32' -2' -1' 0' 1' 2' 3' 4' 5));
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingFixedLength,The following statement contains a magic number: Assert.Equal(8' CheckStreaming(0' PrefixStyle.Fixed32' -2' -1' 0' 1' 2' 3' 4' 5));
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingFixedLength,The following statement contains a magic number: Assert.Equal(8' CheckStreaming(0' PrefixStyle.Fixed32' -2' -1' 0' 1' 2' 3' 4' 5));
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingFixedLength,The following statement contains a magic number: Assert.Equal(8' CheckStreaming(0' PrefixStyle.Fixed32' -2' -1' 0' 1' 2' 3' 4' 5));
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingBase128NoTag,The following statement contains a magic number: Assert.Equal(8' CheckStreaming(0' PrefixStyle.Base128' -2' -1' 0' 1' 2' 3' 4' 5));
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingBase128NoTag,The following statement contains a magic number: Assert.Equal(8' CheckStreaming(0' PrefixStyle.Base128' -2' -1' 0' 1' 2' 3' 4' 5));
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingBase128NoTag,The following statement contains a magic number: Assert.Equal(8' CheckStreaming(0' PrefixStyle.Base128' -2' -1' 0' 1' 2' 3' 4' 5));
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingBase128NoTag,The following statement contains a magic number: Assert.Equal(8' CheckStreaming(0' PrefixStyle.Base128' -2' -1' 0' 1' 2' 3' 4' 5));
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingBase128NoTag,The following statement contains a magic number: Assert.Equal(8' CheckStreaming(0' PrefixStyle.Base128' -2' -1' 0' 1' 2' 3' 4' 5));
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingBase128NoTag,The following statement contains a magic number: Assert.Equal(8' CheckStreaming(0' PrefixStyle.Base128' -2' -1' 0' 1' 2' 3' 4' 5));
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingBase128Tag,The following statement contains a magic number: Assert.Equal(8' CheckStreaming(2' PrefixStyle.Base128' -2' -1' 0' 1' 2' 3' 4' 5));
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingBase128Tag,The following statement contains a magic number: Assert.Equal(8' CheckStreaming(2' PrefixStyle.Base128' -2' -1' 0' 1' 2' 3' 4' 5));
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingBase128Tag,The following statement contains a magic number: Assert.Equal(8' CheckStreaming(2' PrefixStyle.Base128' -2' -1' 0' 1' 2' 3' 4' 5));
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingBase128Tag,The following statement contains a magic number: Assert.Equal(8' CheckStreaming(2' PrefixStyle.Base128' -2' -1' 0' 1' 2' 3' 4' 5));
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingBase128Tag,The following statement contains a magic number: Assert.Equal(8' CheckStreaming(2' PrefixStyle.Base128' -2' -1' 0' 1' 2' 3' 4' 5));
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingBase128Tag,The following statement contains a magic number: Assert.Equal(8' CheckStreaming(2' PrefixStyle.Base128' -2' -1' 0' 1' 2' 3' 4' 5));
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingBase128Tag,The following statement contains a magic number: Assert.Equal(8' CheckStreaming(2' PrefixStyle.Base128' -2' -1' 0' 1' 2' 3' 4' 5));
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentFixedLength,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent>(ms' a = InheritanceMidLevel.CreateChild(123' 456' 789)' PrefixStyle.Fixed32);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentFixedLength,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent>(ms' a = InheritanceMidLevel.CreateChild(123' 456' 789)' PrefixStyle.Fixed32);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentFixedLength,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent>(ms' a = InheritanceMidLevel.CreateChild(123' 456' 789)' PrefixStyle.Fixed32);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentFixedLength,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent>(ms' b = InheritanceMidLevel.CreateChild(100' 200' 300)' PrefixStyle.Fixed32);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentFixedLength,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent>(ms' b = InheritanceMidLevel.CreateChild(100' 200' 300)' PrefixStyle.Fixed32);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentFixedLength,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent>(ms' b = InheritanceMidLevel.CreateChild(100' 200' 300)' PrefixStyle.Fixed32);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentFixedLength,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent>(ms' c = InheritanceMidLevel.CreateChild(400' 500' 600)' PrefixStyle.Fixed32);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentFixedLength,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent>(ms' c = InheritanceMidLevel.CreateChild(400' 500' 600)' PrefixStyle.Fixed32);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentFixedLength,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent>(ms' c = InheritanceMidLevel.CreateChild(400' 500' 600)' PrefixStyle.Fixed32);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentFixedLength,The following statement contains a magic number: Assert.Equal(3' list.Count);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentFixedLength,The following statement contains a magic number: InheritanceMidLevel.CheckParent(c' list[2]);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128Tag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent>(ms' a = InheritanceMidLevel.CreateChild(123' 456' 789)' PrefixStyle.Base128' 3);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128Tag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent>(ms' a = InheritanceMidLevel.CreateChild(123' 456' 789)' PrefixStyle.Base128' 3);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128Tag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent>(ms' a = InheritanceMidLevel.CreateChild(123' 456' 789)' PrefixStyle.Base128' 3);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128Tag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent>(ms' a = InheritanceMidLevel.CreateChild(123' 456' 789)' PrefixStyle.Base128' 3);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128Tag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent>(ms' b = InheritanceMidLevel.CreateChild(100' 200' 300)' PrefixStyle.Base128' 3);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128Tag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent>(ms' b = InheritanceMidLevel.CreateChild(100' 200' 300)' PrefixStyle.Base128' 3);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128Tag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent>(ms' b = InheritanceMidLevel.CreateChild(100' 200' 300)' PrefixStyle.Base128' 3);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128Tag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent>(ms' b = InheritanceMidLevel.CreateChild(100' 200' 300)' PrefixStyle.Base128' 3);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128Tag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent>(ms' c = InheritanceMidLevel.CreateChild(400' 500' 600)' PrefixStyle.Base128' 3);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128Tag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent>(ms' c = InheritanceMidLevel.CreateChild(400' 500' 600)' PrefixStyle.Base128' 3);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128Tag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent>(ms' c = InheritanceMidLevel.CreateChild(400' 500' 600)' PrefixStyle.Base128' 3);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128Tag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent>(ms' c = InheritanceMidLevel.CreateChild(400' 500' 600)' PrefixStyle.Base128' 3);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128Tag,The following statement contains a magic number: var list = Serializer.DeserializeItems<IMLParent>(ms' PrefixStyle.Base128' 3).ToList();
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128Tag,The following statement contains a magic number: Assert.Equal(3' list.Count);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128Tag,The following statement contains a magic number: InheritanceMidLevel.CheckParent(c' list[2]);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128NoTag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent>(ms' a = InheritanceMidLevel.CreateChild(123' 456' 789)' PrefixStyle.Base128' 0);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128NoTag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent>(ms' a = InheritanceMidLevel.CreateChild(123' 456' 789)' PrefixStyle.Base128' 0);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128NoTag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent>(ms' a = InheritanceMidLevel.CreateChild(123' 456' 789)' PrefixStyle.Base128' 0);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128NoTag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent>(ms' b = InheritanceMidLevel.CreateChild(100' 200' 300)' PrefixStyle.Base128' 0);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128NoTag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent>(ms' b = InheritanceMidLevel.CreateChild(100' 200' 300)' PrefixStyle.Base128' 0);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128NoTag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent>(ms' b = InheritanceMidLevel.CreateChild(100' 200' 300)' PrefixStyle.Base128' 0);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128NoTag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent>(ms' c = InheritanceMidLevel.CreateChild(400' 500' 600)' PrefixStyle.Base128' 0);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128NoTag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent>(ms' c = InheritanceMidLevel.CreateChild(400' 500' 600)' PrefixStyle.Base128' 0);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128NoTag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLParent>(ms' c = InheritanceMidLevel.CreateChild(400' 500' 600)' PrefixStyle.Base128' 0);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128NoTag,The following statement contains a magic number: Assert.Equal(3' list.Count);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingParentBase128NoTag,The following statement contains a magic number: InheritanceMidLevel.CheckParent(c' list[2]);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildFixedLength,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild>(ms' a = InheritanceMidLevel.CreateChild(123' 456' 789)' PrefixStyle.Fixed32);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildFixedLength,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild>(ms' a = InheritanceMidLevel.CreateChild(123' 456' 789)' PrefixStyle.Fixed32);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildFixedLength,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild>(ms' a = InheritanceMidLevel.CreateChild(123' 456' 789)' PrefixStyle.Fixed32);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildFixedLength,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild>(ms' b = InheritanceMidLevel.CreateChild(100' 200' 300)' PrefixStyle.Fixed32);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildFixedLength,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild>(ms' b = InheritanceMidLevel.CreateChild(100' 200' 300)' PrefixStyle.Fixed32);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildFixedLength,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild>(ms' b = InheritanceMidLevel.CreateChild(100' 200' 300)' PrefixStyle.Fixed32);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildFixedLength,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild>(ms' c = InheritanceMidLevel.CreateChild(400' 500' 600)' PrefixStyle.Fixed32);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildFixedLength,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild>(ms' c = InheritanceMidLevel.CreateChild(400' 500' 600)' PrefixStyle.Fixed32);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildFixedLength,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild>(ms' c = InheritanceMidLevel.CreateChild(400' 500' 600)' PrefixStyle.Fixed32);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildFixedLength,The following statement contains a magic number: Assert.Equal(3' list.Count);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildFixedLength,The following statement contains a magic number: InheritanceMidLevel.CheckChild(c' list[2]);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128Tag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild>(ms' a = InheritanceMidLevel.CreateChild(123' 456' 789)' PrefixStyle.Base128' 3);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128Tag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild>(ms' a = InheritanceMidLevel.CreateChild(123' 456' 789)' PrefixStyle.Base128' 3);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128Tag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild>(ms' a = InheritanceMidLevel.CreateChild(123' 456' 789)' PrefixStyle.Base128' 3);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128Tag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild>(ms' a = InheritanceMidLevel.CreateChild(123' 456' 789)' PrefixStyle.Base128' 3);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128Tag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild>(ms' b = InheritanceMidLevel.CreateChild(100' 200' 300)' PrefixStyle.Base128' 3);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128Tag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild>(ms' b = InheritanceMidLevel.CreateChild(100' 200' 300)' PrefixStyle.Base128' 3);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128Tag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild>(ms' b = InheritanceMidLevel.CreateChild(100' 200' 300)' PrefixStyle.Base128' 3);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128Tag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild>(ms' b = InheritanceMidLevel.CreateChild(100' 200' 300)' PrefixStyle.Base128' 3);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128Tag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild>(ms' c = InheritanceMidLevel.CreateChild(400' 500' 600)' PrefixStyle.Base128' 3);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128Tag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild>(ms' c = InheritanceMidLevel.CreateChild(400' 500' 600)' PrefixStyle.Base128' 3);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128Tag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild>(ms' c = InheritanceMidLevel.CreateChild(400' 500' 600)' PrefixStyle.Base128' 3);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128Tag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild>(ms' c = InheritanceMidLevel.CreateChild(400' 500' 600)' PrefixStyle.Base128' 3);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128Tag,The following statement contains a magic number: var list = Serializer.DeserializeItems<IMLChild>(ms' PrefixStyle.Base128' 3).ToList();
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128Tag,The following statement contains a magic number: Assert.Equal(3' list.Count);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128Tag,The following statement contains a magic number: InheritanceMidLevel.CheckChild(c' list[2]);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128NoTag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild>(ms' a = InheritanceMidLevel.CreateChild(123' 456' 789)' PrefixStyle.Base128' 0);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128NoTag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild>(ms' a = InheritanceMidLevel.CreateChild(123' 456' 789)' PrefixStyle.Base128' 0);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128NoTag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild>(ms' a = InheritanceMidLevel.CreateChild(123' 456' 789)' PrefixStyle.Base128' 0);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128NoTag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild>(ms' b = InheritanceMidLevel.CreateChild(100' 200' 300)' PrefixStyle.Base128' 0);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128NoTag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild>(ms' b = InheritanceMidLevel.CreateChild(100' 200' 300)' PrefixStyle.Base128' 0);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128NoTag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild>(ms' b = InheritanceMidLevel.CreateChild(100' 200' 300)' PrefixStyle.Base128' 0);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128NoTag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild>(ms' c = InheritanceMidLevel.CreateChild(400' 500' 600)' PrefixStyle.Base128' 0);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128NoTag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild>(ms' c = InheritanceMidLevel.CreateChild(400' 500' 600)' PrefixStyle.Base128' 0);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128NoTag,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix<IMLChild>(ms' c = InheritanceMidLevel.CreateChild(400' 500' 600)' PrefixStyle.Base128' 0);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128NoTag,The following statement contains a magic number: Assert.Equal(3' list.Count);
Magic Number,Examples,ItemsWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ItemsWithLengthPrefix.cs,ReadStreamingChildBase128NoTag,The following statement contains a magic number: InheritanceMidLevel.CheckChild(c' list[2]);
Magic Number,Examples,ListsWithInheritance,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListsWithInheritance.cs,TestBasicRoundtripViaDataClass,The following statement contains a magic number: Assert.Equal(3' clone.Parties.Count);
Magic Number,Examples,ListsWithInheritance,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListsWithInheritance.cs,TestBasicRoundtripViaDataClass,The following statement contains a magic number: Assert.Equal(typeof(Creditor)' clone.Parties[2].GetType());
Magic Number,Examples,ListsWithInheritance,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListsWithInheritance.cs,TestBasicRoundtripOfNakedList,The following statement contains a magic number: Assert.Equal(3' clone.Count);
Magic Number,Examples,ListsWithInheritance,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListsWithInheritance.cs,TestBasicRoundtripOfNakedList,The following statement contains a magic number: Assert.Equal(typeof(Creditor)' clone[2].GetType());
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,ListOfByteArray,The following statement contains a magic number: var data = new List<byte[]> {                  new byte[] {0'1'2'3'4}'                  new byte[] {5'6'7}'                  new byte[] {8'9'10}'                  new byte[] {}              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,ListOfByteArray,The following statement contains a magic number: var data = new List<byte[]> {                  new byte[] {0'1'2'3'4}'                  new byte[] {5'6'7}'                  new byte[] {8'9'10}'                  new byte[] {}              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,ListOfByteArray,The following statement contains a magic number: var data = new List<byte[]> {                  new byte[] {0'1'2'3'4}'                  new byte[] {5'6'7}'                  new byte[] {8'9'10}'                  new byte[] {}              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,ListOfByteArray,The following statement contains a magic number: var data = new List<byte[]> {                  new byte[] {0'1'2'3'4}'                  new byte[] {5'6'7}'                  new byte[] {8'9'10}'                  new byte[] {}              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,ListOfByteArray,The following statement contains a magic number: var data = new List<byte[]> {                  new byte[] {0'1'2'3'4}'                  new byte[] {5'6'7}'                  new byte[] {8'9'10}'                  new byte[] {}              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,ListOfByteArray,The following statement contains a magic number: var data = new List<byte[]> {                  new byte[] {0'1'2'3'4}'                  new byte[] {5'6'7}'                  new byte[] {8'9'10}'                  new byte[] {}              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,ListOfByteArray,The following statement contains a magic number: var data = new List<byte[]> {                  new byte[] {0'1'2'3'4}'                  new byte[] {5'6'7}'                  new byte[] {8'9'10}'                  new byte[] {}              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,ListOfByteArray,The following statement contains a magic number: var data = new List<byte[]> {                  new byte[] {0'1'2'3'4}'                  new byte[] {5'6'7}'                  new byte[] {8'9'10}'                  new byte[] {}              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,ListOfByteArray,The following statement contains a magic number: var data = new List<byte[]> {                  new byte[] {0'1'2'3'4}'                  new byte[] {5'6'7}'                  new byte[] {8'9'10}'                  new byte[] {}              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,ListOfByteArray,The following statement contains a magic number: Assert.Equal(4' clone.Count);
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,ListOfByteArray,The following statement contains a magic number: Assert.True(data[2].SequenceEqual(clone[2]));
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,ListOfByteArray,The following statement contains a magic number: Assert.True(data[2].SequenceEqual(clone[2]));
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,ListOfByteArray,The following statement contains a magic number: Assert.True(data[3].SequenceEqual(clone[3]));
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,ListOfByteArray,The following statement contains a magic number: Assert.True(data[3].SequenceEqual(clone[3]));
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,JaggedByteArray,The following statement contains a magic number: var data = new[] {                  new byte[] {0'1'2'3'4}'                  new byte[] {5'6'7}'                  new byte[] {8'9'10}              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,JaggedByteArray,The following statement contains a magic number: var data = new[] {                  new byte[] {0'1'2'3'4}'                  new byte[] {5'6'7}'                  new byte[] {8'9'10}              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,JaggedByteArray,The following statement contains a magic number: var data = new[] {                  new byte[] {0'1'2'3'4}'                  new byte[] {5'6'7}'                  new byte[] {8'9'10}              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,JaggedByteArray,The following statement contains a magic number: var data = new[] {                  new byte[] {0'1'2'3'4}'                  new byte[] {5'6'7}'                  new byte[] {8'9'10}              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,JaggedByteArray,The following statement contains a magic number: var data = new[] {                  new byte[] {0'1'2'3'4}'                  new byte[] {5'6'7}'                  new byte[] {8'9'10}              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,JaggedByteArray,The following statement contains a magic number: var data = new[] {                  new byte[] {0'1'2'3'4}'                  new byte[] {5'6'7}'                  new byte[] {8'9'10}              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,JaggedByteArray,The following statement contains a magic number: var data = new[] {                  new byte[] {0'1'2'3'4}'                  new byte[] {5'6'7}'                  new byte[] {8'9'10}              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,JaggedByteArray,The following statement contains a magic number: var data = new[] {                  new byte[] {0'1'2'3'4}'                  new byte[] {5'6'7}'                  new byte[] {8'9'10}              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,JaggedByteArray,The following statement contains a magic number: var data = new[] {                  new byte[] {0'1'2'3'4}'                  new byte[] {5'6'7}'                  new byte[] {8'9'10}              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,JaggedByteArray,The following statement contains a magic number: Assert.Equal(3' clone.Length);
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,JaggedByteArray,The following statement contains a magic number: Assert.True(data[2].SequenceEqual(clone[2]));
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,JaggedByteArray,The following statement contains a magic number: Assert.True(data[2].SequenceEqual(clone[2]));
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestUnpackedIntListLayout,The following statement contains a magic number: EntityWithUnpackedInts item = new EntityWithUnpackedInts {                  Items = {1'2'3'4'5'1000}              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestUnpackedIntListLayout,The following statement contains a magic number: EntityWithUnpackedInts item = new EntityWithUnpackedInts {                  Items = {1'2'3'4'5'1000}              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestUnpackedIntListLayout,The following statement contains a magic number: EntityWithUnpackedInts item = new EntityWithUnpackedInts {                  Items = {1'2'3'4'5'1000}              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestUnpackedIntListLayout,The following statement contains a magic number: EntityWithUnpackedInts item = new EntityWithUnpackedInts {                  Items = {1'2'3'4'5'1000}              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestUnpackedIntListLayout,The following statement contains a magic number: EntityWithUnpackedInts item = new EntityWithUnpackedInts {                  Items = {1'2'3'4'5'1000}              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestUnpackedIntListLayout,The following statement contains a magic number: Assert.True(Program.CheckBytes(item' 08' 01' 08' 02' 08' 03' 08' 04' 08' 05' 08' 0xE8' 07));
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestUnpackedIntListLayout,The following statement contains a magic number: Assert.True(Program.CheckBytes(item' 08' 01' 08' 02' 08' 03' 08' 04' 08' 05' 08' 0xE8' 07));
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestUnpackedIntListLayout,The following statement contains a magic number: Assert.True(Program.CheckBytes(item' 08' 01' 08' 02' 08' 03' 08' 04' 08' 05' 08' 0xE8' 07));
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestUnpackedIntListLayout,The following statement contains a magic number: Assert.True(Program.CheckBytes(item' 08' 01' 08' 02' 08' 03' 08' 04' 08' 05' 08' 0xE8' 07));
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestUnpackedIntListLayout,The following statement contains a magic number: Assert.True(Program.CheckBytes(item' 08' 01' 08' 02' 08' 03' 08' 04' 08' 05' 08' 0xE8' 07));
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestUnpackedIntListLayout,The following statement contains a magic number: Assert.True(Program.CheckBytes(item' 08' 01' 08' 02' 08' 03' 08' 04' 08' 05' 08' 0xE8' 07));
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestUnpackedIntListLayout,The following statement contains a magic number: Assert.True(Program.CheckBytes(item' 08' 01' 08' 02' 08' 03' 08' 04' 08' 05' 08' 0xE8' 07));
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestUnpackedIntListLayout,The following statement contains a magic number: Assert.True(Program.CheckBytes(item' 08' 01' 08' 02' 08' 03' 08' 04' 08' 05' 08' 0xE8' 07));
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestUnpackedIntListLayout,The following statement contains a magic number: Assert.True(Program.CheckBytes(item' 08' 01' 08' 02' 08' 03' 08' 04' 08' 05' 08' 0xE8' 07));
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestUnpackedIntListLayout,The following statement contains a magic number: Assert.True(Program.CheckBytes(item' 08' 01' 08' 02' 08' 03' 08' 04' 08' 05' 08' 0xE8' 07));
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestUnpackedIntListLayout,The following statement contains a magic number: Assert.True(Program.CheckBytes(item' 08' 01' 08' 02' 08' 03' 08' 04' 08' 05' 08' 0xE8' 07));
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestUnpackedIntArrayLayout,The following statement contains a magic number: EntityWithUnpackedInts item = new EntityWithUnpackedInts              {                  ItemArray = new int[] { 1' 2' 3' 4' 5' 1000 }              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestUnpackedIntArrayLayout,The following statement contains a magic number: EntityWithUnpackedInts item = new EntityWithUnpackedInts              {                  ItemArray = new int[] { 1' 2' 3' 4' 5' 1000 }              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestUnpackedIntArrayLayout,The following statement contains a magic number: EntityWithUnpackedInts item = new EntityWithUnpackedInts              {                  ItemArray = new int[] { 1' 2' 3' 4' 5' 1000 }              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestUnpackedIntArrayLayout,The following statement contains a magic number: EntityWithUnpackedInts item = new EntityWithUnpackedInts              {                  ItemArray = new int[] { 1' 2' 3' 4' 5' 1000 }              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestUnpackedIntArrayLayout,The following statement contains a magic number: EntityWithUnpackedInts item = new EntityWithUnpackedInts              {                  ItemArray = new int[] { 1' 2' 3' 4' 5' 1000 }              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestUnpackedIntArrayLayout,The following statement contains a magic number: Assert.True(Program.CheckBytes(item' 0x18' 01' 0x18' 02' 0x18' 03' 0x18' 04' 0x18' 05' 0x18' 0xE8' 07));
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestUnpackedIntArrayLayout,The following statement contains a magic number: Assert.True(Program.CheckBytes(item' 0x18' 01' 0x18' 02' 0x18' 03' 0x18' 04' 0x18' 05' 0x18' 0xE8' 07));
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestUnpackedIntArrayLayout,The following statement contains a magic number: Assert.True(Program.CheckBytes(item' 0x18' 01' 0x18' 02' 0x18' 03' 0x18' 04' 0x18' 05' 0x18' 0xE8' 07));
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestUnpackedIntArrayLayout,The following statement contains a magic number: Assert.True(Program.CheckBytes(item' 0x18' 01' 0x18' 02' 0x18' 03' 0x18' 04' 0x18' 05' 0x18' 0xE8' 07));
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestUnpackedIntArrayLayout,The following statement contains a magic number: Assert.True(Program.CheckBytes(item' 0x18' 01' 0x18' 02' 0x18' 03' 0x18' 04' 0x18' 05' 0x18' 0xE8' 07));
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestUnpackedIntCustomLayout,The following statement contains a magic number: EntityWithUnpackedInts item = new EntityWithUnpackedInts              {                  Custom = new CustomEnumerable { 1' 2' 3' 4' 5' 1000 }              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestUnpackedIntCustomLayout,The following statement contains a magic number: EntityWithUnpackedInts item = new EntityWithUnpackedInts              {                  Custom = new CustomEnumerable { 1' 2' 3' 4' 5' 1000 }              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestUnpackedIntCustomLayout,The following statement contains a magic number: EntityWithUnpackedInts item = new EntityWithUnpackedInts              {                  Custom = new CustomEnumerable { 1' 2' 3' 4' 5' 1000 }              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestUnpackedIntCustomLayout,The following statement contains a magic number: EntityWithUnpackedInts item = new EntityWithUnpackedInts              {                  Custom = new CustomEnumerable { 1' 2' 3' 4' 5' 1000 }              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestUnpackedIntCustomLayout,The following statement contains a magic number: EntityWithUnpackedInts item = new EntityWithUnpackedInts              {                  Custom = new CustomEnumerable { 1' 2' 3' 4' 5' 1000 }              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestUnpackedIntCustomLayout,The following statement contains a magic number: Assert.True(Program.CheckBytes(item' 0x20' 01' 0x20' 02' 0x20' 03' 0x20' 04' 0x20' 05' 0x20' 0xE8' 07));
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestUnpackedIntCustomLayout,The following statement contains a magic number: Assert.True(Program.CheckBytes(item' 0x20' 01' 0x20' 02' 0x20' 03' 0x20' 04' 0x20' 05' 0x20' 0xE8' 07));
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestUnpackedIntCustomLayout,The following statement contains a magic number: Assert.True(Program.CheckBytes(item' 0x20' 01' 0x20' 02' 0x20' 03' 0x20' 04' 0x20' 05' 0x20' 0xE8' 07));
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestUnpackedIntCustomLayout,The following statement contains a magic number: Assert.True(Program.CheckBytes(item' 0x20' 01' 0x20' 02' 0x20' 03' 0x20' 04' 0x20' 05' 0x20' 0xE8' 07));
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestUnpackedIntCustomLayout,The following statement contains a magic number: Assert.True(Program.CheckBytes(item' 0x20' 01' 0x20' 02' 0x20' 03' 0x20' 04' 0x20' 05' 0x20' 0xE8' 07));
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestPackedIntListLayout,The following statement contains a magic number: EntityWithPackedInts item = new EntityWithPackedInts              {                  List = { 1' 2' 3' 4' 5' 1000}              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestPackedIntListLayout,The following statement contains a magic number: EntityWithPackedInts item = new EntityWithPackedInts              {                  List = { 1' 2' 3' 4' 5' 1000}              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestPackedIntListLayout,The following statement contains a magic number: EntityWithPackedInts item = new EntityWithPackedInts              {                  List = { 1' 2' 3' 4' 5' 1000}              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestPackedIntListLayout,The following statement contains a magic number: EntityWithPackedInts item = new EntityWithPackedInts              {                  List = { 1' 2' 3' 4' 5' 1000}              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestPackedIntListLayout,The following statement contains a magic number: EntityWithPackedInts item = new EntityWithPackedInts              {                  List = { 1' 2' 3' 4' 5' 1000}              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestPackedIntListLayout,The following statement contains a magic number: Assert.True(Program.CheckBytes(item' 0x0A' 07' 01' 02' 03' 04' 05' 0xE8' 07));
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestPackedIntListLayout,The following statement contains a magic number: Assert.True(Program.CheckBytes(item' 0x0A' 07' 01' 02' 03' 04' 05' 0xE8' 07));
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestPackedIntListLayout,The following statement contains a magic number: Assert.True(Program.CheckBytes(item' 0x0A' 07' 01' 02' 03' 04' 05' 0xE8' 07));
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestPackedIntListLayout,The following statement contains a magic number: Assert.True(Program.CheckBytes(item' 0x0A' 07' 01' 02' 03' 04' 05' 0xE8' 07));
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestPackedIntListLayout,The following statement contains a magic number: Assert.True(Program.CheckBytes(item' 0x0A' 07' 01' 02' 03' 04' 05' 0xE8' 07));
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestPackedIntListLayout,The following statement contains a magic number: Assert.True(Program.CheckBytes(item' 0x0A' 07' 01' 02' 03' 04' 05' 0xE8' 07));
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestPackedIntArrayLayout,The following statement contains a magic number: EntityWithPackedInts item = new EntityWithPackedInts              {                  ItemArray = new int[] { 1' 2' 3' 4' 5' 1000 }              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestPackedIntArrayLayout,The following statement contains a magic number: EntityWithPackedInts item = new EntityWithPackedInts              {                  ItemArray = new int[] { 1' 2' 3' 4' 5' 1000 }              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestPackedIntArrayLayout,The following statement contains a magic number: EntityWithPackedInts item = new EntityWithPackedInts              {                  ItemArray = new int[] { 1' 2' 3' 4' 5' 1000 }              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestPackedIntArrayLayout,The following statement contains a magic number: EntityWithPackedInts item = new EntityWithPackedInts              {                  ItemArray = new int[] { 1' 2' 3' 4' 5' 1000 }              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestPackedIntArrayLayout,The following statement contains a magic number: EntityWithPackedInts item = new EntityWithPackedInts              {                  ItemArray = new int[] { 1' 2' 3' 4' 5' 1000 }              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestPackedIntArrayLayout,The following statement contains a magic number: Assert.True(Program.CheckBytes(item' 0x1A' 07' 01' 02' 03' 04' 05' 0xE8' 07));
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestPackedIntArrayLayout,The following statement contains a magic number: Assert.True(Program.CheckBytes(item' 0x1A' 07' 01' 02' 03' 04' 05' 0xE8' 07));
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestPackedIntArrayLayout,The following statement contains a magic number: Assert.True(Program.CheckBytes(item' 0x1A' 07' 01' 02' 03' 04' 05' 0xE8' 07));
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestPackedIntArrayLayout,The following statement contains a magic number: Assert.True(Program.CheckBytes(item' 0x1A' 07' 01' 02' 03' 04' 05' 0xE8' 07));
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestPackedIntArrayLayout,The following statement contains a magic number: Assert.True(Program.CheckBytes(item' 0x1A' 07' 01' 02' 03' 04' 05' 0xE8' 07));
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestPackedIntArrayLayout,The following statement contains a magic number: Assert.True(Program.CheckBytes(item' 0x1A' 07' 01' 02' 03' 04' 05' 0xE8' 07));
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestPackedIntCustomLayout,The following statement contains a magic number: EntityWithPackedInts item = new EntityWithPackedInts              {                  Custom = new CustomEnumerable { 1' 2' 3' 4' 5' 1000 }              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestPackedIntCustomLayout,The following statement contains a magic number: EntityWithPackedInts item = new EntityWithPackedInts              {                  Custom = new CustomEnumerable { 1' 2' 3' 4' 5' 1000 }              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestPackedIntCustomLayout,The following statement contains a magic number: EntityWithPackedInts item = new EntityWithPackedInts              {                  Custom = new CustomEnumerable { 1' 2' 3' 4' 5' 1000 }              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestPackedIntCustomLayout,The following statement contains a magic number: EntityWithPackedInts item = new EntityWithPackedInts              {                  Custom = new CustomEnumerable { 1' 2' 3' 4' 5' 1000 }              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestPackedIntCustomLayout,The following statement contains a magic number: EntityWithPackedInts item = new EntityWithPackedInts              {                  Custom = new CustomEnumerable { 1' 2' 3' 4' 5' 1000 }              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,SerializePackedDeserializeUnpacked,The following statement contains a magic number: EntityWithPackedInts item = new EntityWithPackedInts              {                  List = { 1' 2' 3' 4' 5' 1000 }              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,SerializePackedDeserializeUnpacked,The following statement contains a magic number: EntityWithPackedInts item = new EntityWithPackedInts              {                  List = { 1' 2' 3' 4' 5' 1000 }              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,SerializePackedDeserializeUnpacked,The following statement contains a magic number: EntityWithPackedInts item = new EntityWithPackedInts              {                  List = { 1' 2' 3' 4' 5' 1000 }              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,SerializePackedDeserializeUnpacked,The following statement contains a magic number: EntityWithPackedInts item = new EntityWithPackedInts              {                  List = { 1' 2' 3' 4' 5' 1000 }              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,SerializePackedDeserializeUnpacked,The following statement contains a magic number: EntityWithPackedInts item = new EntityWithPackedInts              {                  List = { 1' 2' 3' 4' 5' 1000 }              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,SerializeUnpackedSerializePacked,The following statement contains a magic number: EntityWithUnpackedInts item = new EntityWithUnpackedInts              {                  Items = { 1' 2' 3' 4' 5' 1000 }              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,SerializeUnpackedSerializePacked,The following statement contains a magic number: EntityWithUnpackedInts item = new EntityWithUnpackedInts              {                  Items = { 1' 2' 3' 4' 5' 1000 }              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,SerializeUnpackedSerializePacked,The following statement contains a magic number: EntityWithUnpackedInts item = new EntityWithUnpackedInts              {                  Items = { 1' 2' 3' 4' 5' 1000 }              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,SerializeUnpackedSerializePacked,The following statement contains a magic number: EntityWithUnpackedInts item = new EntityWithUnpackedInts              {                  Items = { 1' 2' 3' 4' 5' 1000 }              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,SerializeUnpackedSerializePacked,The following statement contains a magic number: EntityWithUnpackedInts item = new EntityWithUnpackedInts              {                  Items = { 1' 2' 3' 4' 5' 1000 }              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,UnpackedNullOrEmptyListDeserializesAsNull,The following statement contains a magic number: item.ItemsNoDefault.Add(123);
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,UnpackedNullOrEmptyListDeserializesAsNull,The following statement contains a magic number: Assert.Equal(123' clone.ItemsNoDefault[0]);
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,PackedEmptyListDeserializesAsEmpty,The following statement contains a magic number: item.ListNoDefault.Add(123);
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,PackedEmptyListDeserializesAsEmpty,The following statement contains a magic number: Assert.Equal(123' clone.ListNoDefault[0]);
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,UnpackedNullOrEmptyArrayDeserializesAsNull,The following statement contains a magic number: item.ItemArray = new int[1] { 123 };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,UnpackedNullOrEmptyArrayDeserializesAsNull,The following statement contains a magic number: Assert.Equal(123' clone.ItemArray[0]);
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,PackedEmptyArrayDeserializesAsEmpty,The following statement contains a magic number: item.ItemArray = new int[1] { 123 };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,PackedEmptyArrayDeserializesAsEmpty,The following statement contains a magic number: Assert.Equal(123' clone.ItemArray[0]);
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,UnpackedNullOrEmptyCustomDeserializesAsNull,The following statement contains a magic number: item.Custom.Add(123);
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,UnpackedNullOrEmptyCustomDeserializesAsNull,The following statement contains a magic number: Assert.Equal(123' item.Custom.Single());
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,PackedEmptyCustomDeserializesAsEmpty,The following statement contains a magic number: item.Custom.Add(123);
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,PackedEmptyCustomDeserializesAsEmpty,The following statement contains a magic number: Assert.Equal(123' item.Custom.Single());
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestNonEmtpyBasicListOfEntity,The following statement contains a magic number: Assert.Equal(2' clone.Count);
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestNonEmptyMyListOfEntity,The following statement contains a magic number: Assert.Equal(2' clone.Count);
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,ReadWriteMapWorks,The following statement contains a magic number: MapSerializer.CreateDictionary<int'string>().WriteMap(ref writer' 4' default' data' keyFeatures' default);
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,ReadWriteMapWorks,The following statement contains a magic number: switch(field)                      {                          case 4:                              data = MapSerializer.CreateDictionary<int' string>().ReadMap(ref reader' default' data' keyFeatures' default);                              break;                          default:                              reader.SkipField();                              break;                      }
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,ReadWriteMapWorks,The following statement contains a magic number: Assert.Equal(3' data.Count);
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestCompositeDictionary,The following statement contains a magic number: DictionaryTestEntity obj = new DictionaryTestEntity              {                  Foo = "bar"'                  Stuff =                  {                      {"abc"' CompositeType.Create(123)}'                      {"def"' CompositeType.Create(DateTime.Today)}'                      {"ghi"' CompositeType.Create("hello world")}'                  }              }' clone = Serializer.DeepClone(obj);
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestCompositeDictionary,The following statement contains a magic number: Assert.Equal(3' clone.Stuff.Count);
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestCompositeDictionary,The following statement contains a magic number: Assert.Equal(123' clone.Stuff["abc"].Value);
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestListBytes,The following statement contains a magic number: List<Test3> list = new List<Test3> { new Test3 { C = new Test1 { A= 150} } };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestListContents,The following statement contains a magic number: List<Test3> list = new List<Test3>              {                  new Test3 { C = new Test1 { A = 123}}'                  new Test3 { C = new Test1 { A = 456}}'                  new Test3 { C = new Test1 { A = 789}}              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestListContents,The following statement contains a magic number: List<Test3> list = new List<Test3>              {                  new Test3 { C = new Test1 { A = 123}}'                  new Test3 { C = new Test1 { A = 456}}'                  new Test3 { C = new Test1 { A = 789}}              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestListContents,The following statement contains a magic number: List<Test3> list = new List<Test3>              {                  new Test3 { C = new Test1 { A = 123}}'                  new Test3 { C = new Test1 { A = 456}}'                  new Test3 { C = new Test1 { A = 789}}              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestEnumerableBytes,The following statement contains a magic number: Test3Enumerable list = new Test3Enumerable { new Test3 { C = new Test1 { A = 150 } } };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestEnumerableContents,The following statement contains a magic number: Test3Enumerable items = new Test3Enumerable              {                  new Test3 { C = new Test1 { A = 123}}'                  new Test3 { C = new Test1 { A = 456}}'                  new Test3 { C = new Test1 { A = 789}}              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestEnumerableContents,The following statement contains a magic number: Test3Enumerable items = new Test3Enumerable              {                  new Test3 { C = new Test1 { A = 123}}'                  new Test3 { C = new Test1 { A = 456}}'                  new Test3 { C = new Test1 { A = 789}}              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestEnumerableContents,The following statement contains a magic number: Test3Enumerable items = new Test3Enumerable              {                  new Test3 { C = new Test1 { A = 123}}'                  new Test3 { C = new Test1 { A = 456}}'                  new Test3 { C = new Test1 { A = 789}}              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestArrayBytes,The following statement contains a magic number: Test3[] list = new Test3[] { new Test3 { C = new Test1 { A = 150 } } };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestArrayContents,The following statement contains a magic number: Test3[] arr = new Test3[]              {                  new Test3 { C = new Test1 { A = 123}}'                  new Test3 { C = new Test1 { A = 456}}'                  new Test3 { C = new Test1 { A = 789}}              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestArrayContents,The following statement contains a magic number: Test3[] arr = new Test3[]              {                  new Test3 { C = new Test1 { A = 123}}'                  new Test3 { C = new Test1 { A = 456}}'                  new Test3 { C = new Test1 { A = 789}}              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestArrayContents,The following statement contains a magic number: Test3[] arr = new Test3[]              {                  new Test3 { C = new Test1 { A = 123}}'                  new Test3 { C = new Test1 { A = 456}}'                  new Test3 { C = new Test1 { A = 789}}              };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestPackedListDateTime,The following statement contains a magic number: var obj = new ListOfDateTime { Items = { new DateTime(2000' 1' 1) } };
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestPackedListDateTime,The following statement contains a magic number: Assert.Equal(new DateTime(2000' 1' 1)' single);
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,TestPackedCustomOfSubMessage,The following statement contains a magic number: Assert.Equal(3' clone.Items.Count);
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,CheckNakedLinkedListCanRoundtrip,The following statement contains a magic number: Assert.Equal(2' clone.Count);
Magic Number,Examples,ListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ListTests.cs,CheckWrappedLinkedListCanRoundtrip,The following statement contains a magic number: Assert.Equal(2' clone.Items.Count);
Magic Number,Examples,MultiTypesWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\MultiTypesWithLengthPrefix.cs,TestRoundTripMultiTypes,The following statement contains a magic number: WriteNext(ms' 123);
Magic Number,Examples,MultiTypesWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\MultiTypesWithLengthPrefix.cs,TestRoundTripMultiTypes,The following statement contains a magic number: Assert.Equal(4' ms.Position);
Magic Number,Examples,MultiTypesWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\MultiTypesWithLengthPrefix.cs,TestRoundTripMultiTypes,The following statement contains a magic number: Assert.Equal(12' ms.Position);
Magic Number,Examples,MultiTypesWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\MultiTypesWithLengthPrefix.cs,TestRoundTripMultiTypes,The following statement contains a magic number: Assert.Equal(19' ms.Position);
Magic Number,Examples,MultiTypesWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\MultiTypesWithLengthPrefix.cs,TestRoundTripMultiTypes,The following statement contains a magic number: Assert.Equal(35' ms.Position);
Magic Number,Examples,MultiTypesWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\MultiTypesWithLengthPrefix.cs,TestRoundTripMultiTypes,The following statement contains a magic number: Assert.Equal(123' ReadNext(ms));
Magic Number,Examples,MultiTypesWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\MultiTypesWithLengthPrefix.cs,TestRoundTripMultiTypes,The following statement contains a magic number: Assert.Equal(4' ms.Position);
Magic Number,Examples,MultiTypesWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\MultiTypesWithLengthPrefix.cs,TestRoundTripMultiTypes,The following statement contains a magic number: Assert.Equal(12' ms.Position);
Magic Number,Examples,MultiTypesWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\MultiTypesWithLengthPrefix.cs,TestRoundTripMultiTypes,The following statement contains a magic number: Assert.Equal(19' ms.Position);
Magic Number,Examples,MultiTypesWithLengthPrefix,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\MultiTypesWithLengthPrefix.cs,TestRoundTripMultiTypes,The following statement contains a magic number: Assert.Equal(35' ms.Position);
Magic Number,Examples,NonGeneric,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\NonGeneric.cs,TestDeepClone,The following statement contains a magic number: NonGenericBasic ngb = new NonGenericBasic { Value = 123 }'                  clone = (NonGenericBasic) Serializer.NonGeneric.DeepClone(ngb);
Magic Number,Examples,NonGeneric,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\NonGeneric.cs,TestManualCloneViaSerializeDeserialize,The following statement contains a magic number: NonGenericBasic ngb = new NonGenericBasic { Value = 123 }' clone;
Magic Number,Examples,NonSeekableStreams,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\NonSeekableStreams.cs,ShouldNotRequireSeeking,The following statement contains a magic number: const int EXPECTED = 830;
Magic Number,Examples,OptionalData,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\OptionalData.cs,TestImplicitDefaultZero,The following statement contains a magic number: Test<ImplicitDefaultZero>(3F' 5);
Magic Number,Examples,OptionalData,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\OptionalData.cs,TestImplicitDefaultZero,The following statement contains a magic number: Test<ImplicitDefaultZero>(3F' 5);
Magic Number,Examples,OptionalData,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\OptionalData.cs,TestImplicitDefaultZero,The following statement contains a magic number: Test<ImplicitDefaultZero>(5F' 5);
Magic Number,Examples,OptionalData,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\OptionalData.cs,TestImplicitDefaultZero,The following statement contains a magic number: Test<ImplicitDefaultZero>(5F' 5);
Magic Number,Examples,OptionalData,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\OptionalData.cs,TestExplicitDefaultZero,The following statement contains a magic number: Test<ExplicitDefaultZero>(3F' 5);
Magic Number,Examples,OptionalData,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\OptionalData.cs,TestExplicitDefaultZero,The following statement contains a magic number: Test<ExplicitDefaultZero>(3F' 5);
Magic Number,Examples,OptionalData,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\OptionalData.cs,TestExplicitDefaultZero,The following statement contains a magic number: Test<ExplicitDefaultZero>(5F' 5);
Magic Number,Examples,OptionalData,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\OptionalData.cs,TestExplicitDefaultZero,The following statement contains a magic number: Test<ExplicitDefaultZero>(5F' 5);
Magic Number,Examples,OptionalData,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\OptionalData.cs,TestExplicitDefaultFive,The following statement contains a magic number: Test<ExplicitDefaultFive>(0F' 5);
Magic Number,Examples,OptionalData,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\OptionalData.cs,TestExplicitDefaultFive,The following statement contains a magic number: Test<ExplicitDefaultFive>(3F' 5);
Magic Number,Examples,OptionalData,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\OptionalData.cs,TestExplicitDefaultFive,The following statement contains a magic number: Test<ExplicitDefaultFive>(3F' 5);
Magic Number,Examples,OptionalData,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\OptionalData.cs,TestExplicitDefaultFive,The following statement contains a magic number: Test<ExplicitDefaultFive>(5F' 0);
Magic Number,Examples,OptionalData,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\OptionalData.cs,ExplicitDefaultFivePrivateField,The following statement contains a magic number: Test<ExplicitDefaultFivePrivateField>(0F' 5);
Magic Number,Examples,OptionalData,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\OptionalData.cs,ExplicitDefaultFivePrivateField,The following statement contains a magic number: Test<ExplicitDefaultFivePrivateField>(3F' 5);
Magic Number,Examples,OptionalData,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\OptionalData.cs,ExplicitDefaultFivePrivateField,The following statement contains a magic number: Test<ExplicitDefaultFivePrivateField>(3F' 5);
Magic Number,Examples,OptionalData,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\OptionalData.cs,ExplicitDefaultFivePrivateField,The following statement contains a magic number: Test<ExplicitDefaultFivePrivateField>(5F' 0);
Magic Number,Examples,OptionalData,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\OptionalData.cs,TestRequiredImplicitZero,The following statement contains a magic number: Test<RequiredImplicitZero>(0F'5);
Magic Number,Examples,OptionalData,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\OptionalData.cs,TestRequiredImplicitZero,The following statement contains a magic number: Test<RequiredImplicitZero>(3F' 5);
Magic Number,Examples,OptionalData,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\OptionalData.cs,TestRequiredImplicitZero,The following statement contains a magic number: Test<RequiredImplicitZero>(3F' 5);
Magic Number,Examples,OptionalData,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\OptionalData.cs,TestRequiredImplicitZero,The following statement contains a magic number: Test<RequiredImplicitZero>(5F' 5);
Magic Number,Examples,OptionalData,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\OptionalData.cs,TestRequiredImplicitZero,The following statement contains a magic number: Test<RequiredImplicitZero>(5F' 5);
Magic Number,Examples,OptionalData,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\OptionalData.cs,TestRequiredExplicitZero,The following statement contains a magic number: Test<RequiredExplicitZero>(0F' 5);
Magic Number,Examples,OptionalData,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\OptionalData.cs,TestRequiredExplicitZero,The following statement contains a magic number: Test<RequiredExplicitZero>(3F' 5);
Magic Number,Examples,OptionalData,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\OptionalData.cs,TestRequiredExplicitZero,The following statement contains a magic number: Test<RequiredExplicitZero>(3F' 5);
Magic Number,Examples,OptionalData,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\OptionalData.cs,TestRequiredExplicitZero,The following statement contains a magic number: Test<RequiredExplicitZero>(5F' 5);
Magic Number,Examples,OptionalData,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\OptionalData.cs,TestRequiredExplicitZero,The following statement contains a magic number: Test<RequiredExplicitZero>(5F' 5);
Magic Number,Examples,OptionalData,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\OptionalData.cs,TestRequiredExplicitFive,The following statement contains a magic number: Test<RequiredExplicitFive>(0F' 5);
Magic Number,Examples,OptionalData,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\OptionalData.cs,TestRequiredExplicitFive,The following statement contains a magic number: Test<RequiredExplicitFive>(3F' 5);
Magic Number,Examples,OptionalData,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\OptionalData.cs,TestRequiredExplicitFive,The following statement contains a magic number: Test<RequiredExplicitFive>(3F' 5);
Magic Number,Examples,OptionalData,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\OptionalData.cs,TestRequiredExplicitFive,The following statement contains a magic number: Test<RequiredExplicitFive>(5F' 5);
Magic Number,Examples,OptionalData,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\OptionalData.cs,TestRequiredExplicitFive,The following statement contains a magic number: Test<RequiredExplicitFive>(5F' 5);
Magic Number,Examples,ExplicitDefaultFive,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\OptionalData.cs,ExplicitDefaultFive,The following statement contains a magic number: Value = 5F;
Magic Number,Examples,ExplicitDefaultFivePrivateField,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\OptionalData.cs,ExplicitDefaultFivePrivateField,The following statement contains a magic number: value = 5F;
Magic Number,Examples,RequiredExplicitFive,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\OptionalData.cs,RequiredExplicitFive,The following statement contains a magic number: Value = 5F;
Magic Number,Examples,PEVerify,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\PEVerify.cs,AssertValid,The following statement contains a magic number: proc.WaitForExit(10000)
Magic Number,Examples,Pipeline,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Pipeline.cs,TestEnumerable,The following statement contains a magic number: Assert.Equal(5' clone.SubData.Count);
Magic Number,Examples,Pipeline,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Pipeline.cs,TestEnumerable,The following statement contains a magic number: Assert.Equal(1 + 2 + 3 + 4 + 5' clone.SubData.Sum);
Magic Number,Examples,Pipeline,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Pipeline.cs,TestEnumerable,The following statement contains a magic number: Assert.Equal(1 + 2 + 3 + 4 + 5' clone.SubData.Sum);
Magic Number,Examples,Pipeline,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Pipeline.cs,TestEnumerable,The following statement contains a magic number: Assert.Equal(1 + 2 + 3 + 4 + 5' clone.SubData.Sum);
Magic Number,Examples,Pipeline,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Pipeline.cs,TestEnumerable,The following statement contains a magic number: Assert.Equal(1 + 2 + 3 + 4 + 5' clone.SubData.Sum);
Magic Number,Examples,Pipeline,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Pipeline.cs,TestEnumerableGroup,The following statement contains a magic number: Assert.Equal(5' clone.Wrapper.SubData.Count);
Magic Number,Examples,Pipeline,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Pipeline.cs,TestEnumerableGroup,The following statement contains a magic number: Assert.Equal(1 + 2 + 3 + 4 + 5' clone.Wrapper.SubData.Sum);
Magic Number,Examples,Pipeline,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Pipeline.cs,TestEnumerableGroup,The following statement contains a magic number: Assert.Equal(1 + 2 + 3 + 4 + 5' clone.Wrapper.SubData.Sum);
Magic Number,Examples,Pipeline,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Pipeline.cs,TestEnumerableGroup,The following statement contains a magic number: Assert.Equal(1 + 2 + 3 + 4 + 5' clone.Wrapper.SubData.Sum);
Magic Number,Examples,Pipeline,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Pipeline.cs,TestEnumerableGroup,The following statement contains a magic number: Assert.Equal(1 + 2 + 3 + 4 + 5' clone.Wrapper.SubData.Sum);
Magic Number,Examples,Pipeline,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Pipeline.cs,NWindPipeline,The following statement contains a magic number: Assert.Equal(830' orderCount);
Magic Number,Examples,Pipeline,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Pipeline.cs,NWindPipeline,The following statement contains a magic number: Assert.Equal(2155' lineCount);
Magic Number,Examples,Pipeline,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Pipeline.cs,NWindPipeline,The following statement contains a magic number: Assert.Equal(51317' unitCount);
Magic Number,Examples,Pipeline,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Pipeline.cs,NWindPipeline,The following statement contains a magic number: Assert.Equal(1354458.59M' value);
Magic Number,Examples,EnumData,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Pipeline.cs,GetEnumerator,The following statement contains a magic number: yield return 2;
Magic Number,Examples,EnumData,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Pipeline.cs,GetEnumerator,The following statement contains a magic number: yield return 3;
Magic Number,Examples,EnumData,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Pipeline.cs,GetEnumerator,The following statement contains a magic number: yield return 4;
Magic Number,Examples,EnumData,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Pipeline.cs,GetEnumerator,The following statement contains a magic number: yield return 5;
Magic Number,Examples,PrimativeTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Primatives.cs,TestDateTimeZero,The following statement contains a magic number: Primatives p = new Primatives { TestDateTime = new DateTime(1970'1'1) };
Magic Number,Examples,PrimativeTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Primatives.cs,TestDateTimeOrigin,The following statement contains a magic number: DateTime origin = new DateTime(1970' 1' 1);
Magic Number,Examples,PrimativeTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Primatives.cs,TestDateTimeOrigin,The following statement contains a magic number: Assert.Equal(2' len);
Magic Number,Examples,PrimativeTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Primatives.cs,TestDateTimeOrigin,The following statement contains a magic number: Assert.Equal(4' len);
Magic Number,Examples,PrimativeTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Primatives.cs,TestDateTimeOrigin,The following statement contains a magic number: Assert.Equal(4' len);
Magic Number,Examples,PrimativeTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Primatives.cs,TestTimeSpan36Hours,The following statement contains a magic number: TimeSpan ts = new TimeSpan(36' 0' 0);
Magic Number,Examples,PrimativeTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Primatives.cs,TestTimeSpan36Hours,The following statement contains a magic number: Assert.Equal(6' len);
Magic Number,Examples,PrimativeTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Primatives.cs,TestTimeSpanMinus3Hours,The following statement contains a magic number: TimeSpan ts = new TimeSpan(0' -3' 0);
Magic Number,Examples,PrimativeTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Primatives.cs,TestTimeSpanMinus3Hours,The following statement contains a magic number: Assert.Equal(6' len);
Magic Number,Examples,PrimativeTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Primatives.cs,TestTimeSpanMinValue,The following statement contains a magic number: Assert.Equal(6' len);
Magic Number,Examples,PrimativeTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Primatives.cs,TestTimeSpanMaxValue,The following statement contains a magic number: Assert.Equal(6' len);
Magic Number,Examples,PrimativeTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Primatives.cs,TestValueTimeUnit,The following statement contains a magic number: Assert.Equal(new TimeSpan(4' 0' 0)' ts.HowLong);
Magic Number,Examples,PrimativeTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Primatives.cs,TestTimeSpanGrouped,The following statement contains a magic number: PrimativeGrouped p = new PrimativeGrouped { HowLong = TimeSpan.FromSeconds(123456)};
Magic Number,Examples,PrimativeTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Primatives.cs,TestTimeSpanGroupedWrapped,The following statement contains a magic number: PrimativeGroupedWrapper p = new PrimativeGroupedWrapper { Child = { HowLong = TimeSpan.FromSeconds(123456) } };
Magic Number,Examples,PrimativeTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Primatives.cs,TestTimeSpanNonGroupedWrapped,The following statement contains a magic number: PrimativeNonGroupedWrapper p = new PrimativeNonGroupedWrapper { Child = { HowLong = TimeSpan.FromSeconds(123456) } };
Magic Number,Examples,PrimativeTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Primatives.cs,TestDecimalGrouped,The following statement contains a magic number: PrimativeGrouped p = new PrimativeGrouped { HowMuch = 123.4567M };
Magic Number,Examples,PrimativeTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Primatives.cs,TestDecimalGroupedWrapped,The following statement contains a magic number: PrimativeGroupedWrapper p = new PrimativeGroupedWrapper { Child = { HowMuch = 123.4567M } };
Magic Number,Examples,PrimativeTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Primatives.cs,TestDecimalNonGroupedWrapped,The following statement contains a magic number: PrimativeNonGroupedWrapper p = new PrimativeNonGroupedWrapper { Child = { HowMuch = 123.4567M } };
Magic Number,Examples,PrimativeTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Primatives.cs,TestDecimalUnits,The following statement contains a magic number: Assert.Equal(29M' p.TestDecimalDefault);
Magic Number,Examples,PrimativeTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Primatives.cs,TestDecimalExtremes,The following statement contains a magic number: p.TestDecimalDefault = decimal.MaxValue - 1234.5M;
Magic Number,Examples,PrimativeTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Primatives.cs,TestDecimalExtremes,The following statement contains a magic number: p.TestDecimalDefault = decimal.MinValue + 1234.5M;
Magic Number,Examples,PrimativeTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Primatives.cs,TestDecimalExtremes,The following statement contains a magic number: p.TestDecimalDefault = 0.00000000000000000000000123M;
Magic Number,Examples,PrimativeTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Primatives.cs,TestDecimal,The following statement contains a magic number: p.TestDecimalDefault = 123456.789M;
Magic Number,Examples,PrimativeTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Primatives.cs,TestDecimal,The following statement contains a magic number: p.TestDecimalDefault = -123456.789M;
Magic Number,Examples,PrimativeTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Primatives.cs,TestByteTwos,The following statement contains a magic number: i < 8
Magic Number,Examples,PrimativeTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Primatives.cs,TestSByteTwos,The following statement contains a magic number: i < 7
Magic Number,Examples,PrimativeTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Primatives.cs,TestSByteTwos,The following statement contains a magic number: i < 7
Magic Number,Examples,PrimativeTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Primatives.cs,TestSByteZigZag,The following statement contains a magic number: i < 7
Magic Number,Examples,PrimativeTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Primatives.cs,TestSByteZigZag,The following statement contains a magic number: i < 7
Magic Number,Examples,Primatives,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Primatives.cs,Primatives,The following statement contains a magic number: TestDecimalDefault = 29M;
Magic Number,Examples,Primatives,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Primatives.cs,Primatives,The following statement contains a magic number: TestDateTime = new DateTime(2008' 1' 1);
Magic Number,Examples,PrimativeSerializationTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\PrimativeSerializationTests.cs,TestInt32,The following statement contains a magic number: Random rand = new Random(123456);
Magic Number,Examples,PrimativeSerializationTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\PrimativeSerializationTests.cs,TestInt32,The following statement contains a magic number: i < 10000
Magic Number,Examples,PrimativeSerializationTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\PrimativeSerializationTests.cs,TestString,The following statement contains a magic number: Random rand = new Random(123456);
Magic Number,Examples,PrimativeSerializationTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\PrimativeSerializationTests.cs,TestString,The following statement contains a magic number: i < 10000
Magic Number,Examples,PrimativeSerializationTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\PrimativeSerializationTests.cs,TestDouble,The following statement contains a magic number: Random rand = new Random(123456);
Magic Number,Examples,PrimativeSerializationTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\PrimativeSerializationTests.cs,TestDouble,The following statement contains a magic number: i < 10000
Magic Number,Examples,ShadowSetters,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ShadowSetters.cs,RoundTripWithShadow,The following statement contains a magic number: orig.SetNoSetter(123);
Magic Number,Examples,ShadowSetters,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ShadowSetters.cs,RoundTripWithShadow,The following statement contains a magic number: orig.SetSetterWeDontWantToInvoke(456);
Magic Number,Examples,ShadowSetters,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ShadowSetters.cs,RoundTripWithShadow,The following statement contains a magic number: orig.SetterWithUnrelatedSet = 789;
Magic Number,Examples,ShadowSetters,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ShadowSetters.cs,RoundTripWithShadow,The following statement contains a magic number: Assert.Equal(123' clone.NoSetter);
Magic Number,Examples,ShadowSetters,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ShadowSetters.cs,RoundTripWithShadow,The following statement contains a magic number: Assert.Equal(456' clone.SetterWeDontWantToInvoke);
Magic Number,Examples,ShadowSetters,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ShadowSetters.cs,RoundTripWithShadow,The following statement contains a magic number: Assert.Equal(789' clone.SetterWithUnrelatedSet);
Magic Number,Examples,StupidlyComplexModel,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\StupidlyComplexModel.cs,TimeStupidlyComplexModel,The following statement contains a magic number: TimeModel<StupidlyComplexModel>(5' Test);
Magic Number,Examples,StupidlyComplexModel,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\StupidlyComplexModel.cs,TimeSimpleModel,The following statement contains a magic number: TimeModel<SimpleModel>(100);
Magic Number,Examples,StupidlyComplexModel,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\StupidlyComplexModel.cs,Test,The following statement contains a magic number: var orig = new Outer {                  Value500 = new Inner500 { Value = 123 }'                  Value501 = new Inner501 { Value = 456 }              };
Magic Number,Examples,StupidlyComplexModel,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\StupidlyComplexModel.cs,Test,The following statement contains a magic number: var orig = new Outer {                  Value500 = new Inner500 { Value = 123 }'                  Value501 = new Inner501 { Value = 456 }              };
Magic Number,Examples,StupidlyComplexModel,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\StupidlyComplexModel.cs,Test,The following statement contains a magic number: Assert.Equal(123' orig.Value500.Value);
Magic Number,Examples,StupidlyComplexModel,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\StupidlyComplexModel.cs,Test,The following statement contains a magic number: Assert.Equal(123' clone.Value500.Value);
Magic Number,Examples,StupidlyComplexModel,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\StupidlyComplexModel.cs,Test,The following statement contains a magic number: Assert.Equal(456' orig.Value501.Value);
Magic Number,Examples,StupidlyComplexModel,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\StupidlyComplexModel.cs,Test,The following statement contains a magic number: Assert.Equal(456' clone.Value501.Value);
Magic Number,Examples,StupidlyComplexModel,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\StupidlyComplexModel.cs,Test,The following statement contains a magic number: Assert.Equal(123' clone500.Value);
Magic Number,Examples,StupidlyComplexModel,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\StupidlyComplexModel.cs,Test,The following statement contains a magic number: Assert.Equal(456' clone501.Value);
Magic Number,Examples,TagInference,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\TagInference.cs,TestTagWithInferenceRoundtrip,The following statement contains a magic number: TagData data = new TagData              {                  Bravo = 15'                  Charlie = 17'                  Delta = 4'                  Zulu = 9              };
Magic Number,Examples,TagInference,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\TagInference.cs,TestTagWithInferenceRoundtrip,The following statement contains a magic number: TagData data = new TagData              {                  Bravo = 15'                  Charlie = 17'                  Delta = 4'                  Zulu = 9              };
Magic Number,Examples,TagInference,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\TagInference.cs,TestTagWithInferenceRoundtrip,The following statement contains a magic number: TagData data = new TagData              {                  Bravo = 15'                  Charlie = 17'                  Delta = 4'                  Zulu = 9              };
Magic Number,Examples,TagInference,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\TagInference.cs,TestTagWithInferenceRoundtrip,The following statement contains a magic number: TagData data = new TagData              {                  Bravo = 15'                  Charlie = 17'                  Delta = 4'                  Zulu = 9              };
Magic Number,Examples,TagInference,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\TagInference.cs,TestTagWithInferenceBinary,The following statement contains a magic number: TagData data = new TagData              {                  Bravo = 15'                  Charlie = 17'                  Delta = 4'                  Zulu = 9              };
Magic Number,Examples,TagInference,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\TagInference.cs,TestTagWithInferenceBinary,The following statement contains a magic number: TagData data = new TagData              {                  Bravo = 15'                  Charlie = 17'                  Delta = 4'                  Zulu = 9              };
Magic Number,Examples,TagInference,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\TagInference.cs,TestTagWithInferenceBinary,The following statement contains a magic number: TagData data = new TagData              {                  Bravo = 15'                  Charlie = 17'                  Delta = 4'                  Zulu = 9              };
Magic Number,Examples,TagInference,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\TagInference.cs,TestTagWithInferenceBinary,The following statement contains a magic number: TagData data = new TagData              {                  Bravo = 15'                  Charlie = 17'                  Delta = 4'                  Zulu = 9              };
Magic Number,Examples,TagInference,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\TagInference.cs,RoundTripWithImplicitFields,The following statement contains a magic number: var obj = new WithImplicitFields {X = 123' Y = "abc"};
Magic Number,Examples,TagInference,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\TagInference.cs,RoundTripWithImplicitFields,The following statement contains a magic number: Assert.Equal(123' clone.X);
Magic Number,Examples,TraceError,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\TraceError.cs,TestTrace,The following statement contains a magic number: TraceErrorData ed = new TraceErrorData { Foo = 12' Bar = "abcdefghijklmnopqrstuvwxyz" };
Magic Number,Examples,TraceError,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\TraceError.cs,TestTrace,The following statement contains a magic number: Assert.Equal(30' ms.Length);
Magic Number,Examples,TraceError,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\TraceError.cs,TestTrace,The following statement contains a magic number: ms2.Write(buffer' 0' (int)ms.Length - 5);
Magic Number,Examples,Tuples,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Tuples.cs,Check,The following statement contains a magic number: var obj = Tuple.Create(                  123' new[] { Tuple.Create(1' 2' 3' 4' 5' 6' 7' new List<Tuple<float' float>> { Tuple.Create(1F'2F) })' Tuple.Create(9' 10' 11' 12' 13' 14' 15' new List<Tuple<float' float>> { Tuple.Create(3F'4F) }) }' true);
Magic Number,Examples,Tuples,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Tuples.cs,Check,The following statement contains a magic number: var obj = Tuple.Create(                  123' new[] { Tuple.Create(1' 2' 3' 4' 5' 6' 7' new List<Tuple<float' float>> { Tuple.Create(1F'2F) })' Tuple.Create(9' 10' 11' 12' 13' 14' 15' new List<Tuple<float' float>> { Tuple.Create(3F'4F) }) }' true);
Magic Number,Examples,Tuples,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Tuples.cs,Check,The following statement contains a magic number: var obj = Tuple.Create(                  123' new[] { Tuple.Create(1' 2' 3' 4' 5' 6' 7' new List<Tuple<float' float>> { Tuple.Create(1F'2F) })' Tuple.Create(9' 10' 11' 12' 13' 14' 15' new List<Tuple<float' float>> { Tuple.Create(3F'4F) }) }' true);
Magic Number,Examples,Tuples,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Tuples.cs,Check,The following statement contains a magic number: var obj = Tuple.Create(                  123' new[] { Tuple.Create(1' 2' 3' 4' 5' 6' 7' new List<Tuple<float' float>> { Tuple.Create(1F'2F) })' Tuple.Create(9' 10' 11' 12' 13' 14' 15' new List<Tuple<float' float>> { Tuple.Create(3F'4F) }) }' true);
Magic Number,Examples,Tuples,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Tuples.cs,Check,The following statement contains a magic number: var obj = Tuple.Create(                  123' new[] { Tuple.Create(1' 2' 3' 4' 5' 6' 7' new List<Tuple<float' float>> { Tuple.Create(1F'2F) })' Tuple.Create(9' 10' 11' 12' 13' 14' 15' new List<Tuple<float' float>> { Tuple.Create(3F'4F) }) }' true);
Magic Number,Examples,Tuples,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Tuples.cs,Check,The following statement contains a magic number: var obj = Tuple.Create(                  123' new[] { Tuple.Create(1' 2' 3' 4' 5' 6' 7' new List<Tuple<float' float>> { Tuple.Create(1F'2F) })' Tuple.Create(9' 10' 11' 12' 13' 14' 15' new List<Tuple<float' float>> { Tuple.Create(3F'4F) }) }' true);
Magic Number,Examples,Tuples,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Tuples.cs,Check,The following statement contains a magic number: var obj = Tuple.Create(                  123' new[] { Tuple.Create(1' 2' 3' 4' 5' 6' 7' new List<Tuple<float' float>> { Tuple.Create(1F'2F) })' Tuple.Create(9' 10' 11' 12' 13' 14' 15' new List<Tuple<float' float>> { Tuple.Create(3F'4F) }) }' true);
Magic Number,Examples,Tuples,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Tuples.cs,Check,The following statement contains a magic number: var obj = Tuple.Create(                  123' new[] { Tuple.Create(1' 2' 3' 4' 5' 6' 7' new List<Tuple<float' float>> { Tuple.Create(1F'2F) })' Tuple.Create(9' 10' 11' 12' 13' 14' 15' new List<Tuple<float' float>> { Tuple.Create(3F'4F) }) }' true);
Magic Number,Examples,Tuples,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Tuples.cs,Check,The following statement contains a magic number: var obj = Tuple.Create(                  123' new[] { Tuple.Create(1' 2' 3' 4' 5' 6' 7' new List<Tuple<float' float>> { Tuple.Create(1F'2F) })' Tuple.Create(9' 10' 11' 12' 13' 14' 15' new List<Tuple<float' float>> { Tuple.Create(3F'4F) }) }' true);
Magic Number,Examples,Tuples,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Tuples.cs,Check,The following statement contains a magic number: var obj = Tuple.Create(                  123' new[] { Tuple.Create(1' 2' 3' 4' 5' 6' 7' new List<Tuple<float' float>> { Tuple.Create(1F'2F) })' Tuple.Create(9' 10' 11' 12' 13' 14' 15' new List<Tuple<float' float>> { Tuple.Create(3F'4F) }) }' true);
Magic Number,Examples,Tuples,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Tuples.cs,Check,The following statement contains a magic number: var obj = Tuple.Create(                  123' new[] { Tuple.Create(1' 2' 3' 4' 5' 6' 7' new List<Tuple<float' float>> { Tuple.Create(1F'2F) })' Tuple.Create(9' 10' 11' 12' 13' 14' 15' new List<Tuple<float' float>> { Tuple.Create(3F'4F) }) }' true);
Magic Number,Examples,Tuples,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Tuples.cs,Check,The following statement contains a magic number: var obj = Tuple.Create(                  123' new[] { Tuple.Create(1' 2' 3' 4' 5' 6' 7' new List<Tuple<float' float>> { Tuple.Create(1F'2F) })' Tuple.Create(9' 10' 11' 12' 13' 14' 15' new List<Tuple<float' float>> { Tuple.Create(3F'4F) }) }' true);
Magic Number,Examples,Tuples,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Tuples.cs,Check,The following statement contains a magic number: var obj = Tuple.Create(                  123' new[] { Tuple.Create(1' 2' 3' 4' 5' 6' 7' new List<Tuple<float' float>> { Tuple.Create(1F'2F) })' Tuple.Create(9' 10' 11' 12' 13' 14' 15' new List<Tuple<float' float>> { Tuple.Create(3F'4F) }) }' true);
Magic Number,Examples,Tuples,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Tuples.cs,Check,The following statement contains a magic number: var obj = Tuple.Create(                  123' new[] { Tuple.Create(1' 2' 3' 4' 5' 6' 7' new List<Tuple<float' float>> { Tuple.Create(1F'2F) })' Tuple.Create(9' 10' 11' 12' 13' 14' 15' new List<Tuple<float' float>> { Tuple.Create(3F'4F) }) }' true);
Magic Number,Examples,Tuples,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Tuples.cs,Check,The following statement contains a magic number: var obj = Tuple.Create(                  123' new[] { Tuple.Create(1' 2' 3' 4' 5' 6' 7' new List<Tuple<float' float>> { Tuple.Create(1F'2F) })' Tuple.Create(9' 10' 11' 12' 13' 14' 15' new List<Tuple<float' float>> { Tuple.Create(3F'4F) }) }' true);
Magic Number,Examples,Tuples,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Tuples.cs,Check,The following statement contains a magic number: var obj = Tuple.Create(                  123' new[] { Tuple.Create(1' 2' 3' 4' 5' 6' 7' new List<Tuple<float' float>> { Tuple.Create(1F'2F) })' Tuple.Create(9' 10' 11' 12' 13' 14' 15' new List<Tuple<float' float>> { Tuple.Create(3F'4F) }) }' true);
Magic Number,Examples,Tuples,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Tuples.cs,Check,The following statement contains a magic number: var obj = Tuple.Create(                  123' new[] { Tuple.Create(1' 2' 3' 4' 5' 6' 7' new List<Tuple<float' float>> { Tuple.Create(1F'2F) })' Tuple.Create(9' 10' 11' 12' 13' 14' 15' new List<Tuple<float' float>> { Tuple.Create(3F'4F) }) }' true);
Magic Number,Examples,Tuples,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Tuples.cs,Check,The following statement contains a magic number: Assert.Equal(123' clone.Item1);
Magic Number,Examples,Tuples,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Tuples.cs,Check,The following statement contains a magic number: Assert.Equal(2' clone.Item2.Length);
Magic Number,Examples,Tuples,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Tuples.cs,Check,The following statement contains a magic number: Assert.Equal(2' clone.Item2[0].Item2);
Magic Number,Examples,Tuples,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Tuples.cs,Check,The following statement contains a magic number: Assert.Equal(3' clone.Item2[0].Item3);
Magic Number,Examples,Tuples,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Tuples.cs,Check,The following statement contains a magic number: Assert.Equal(4' clone.Item2[0].Item4);
Magic Number,Examples,Tuples,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Tuples.cs,Check,The following statement contains a magic number: Assert.Equal(5' clone.Item2[0].Item5);
Magic Number,Examples,Tuples,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Tuples.cs,Check,The following statement contains a magic number: Assert.Equal(6' clone.Item2[0].Item6);
Magic Number,Examples,Tuples,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Tuples.cs,Check,The following statement contains a magic number: Assert.Equal(7' clone.Item2[0].Item7);
Magic Number,Examples,Tuples,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Tuples.cs,Check,The following statement contains a magic number: Assert.Equal(Tuple.Create(1F'2F)' clone.Item2[0].Rest.Item1.Single());
Magic Number,Examples,Tuples,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Tuples.cs,Check,The following statement contains a magic number: Assert.Equal(9' clone.Item2[1].Item1);
Magic Number,Examples,Tuples,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Tuples.cs,Check,The following statement contains a magic number: Assert.Equal(10' clone.Item2[1].Item2);
Magic Number,Examples,Tuples,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Tuples.cs,Check,The following statement contains a magic number: Assert.Equal(11' clone.Item2[1].Item3);
Magic Number,Examples,Tuples,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Tuples.cs,Check,The following statement contains a magic number: Assert.Equal(12' clone.Item2[1].Item4);
Magic Number,Examples,Tuples,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Tuples.cs,Check,The following statement contains a magic number: Assert.Equal(13' clone.Item2[1].Item5);
Magic Number,Examples,Tuples,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Tuples.cs,Check,The following statement contains a magic number: Assert.Equal(14' clone.Item2[1].Item6);
Magic Number,Examples,Tuples,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Tuples.cs,Check,The following statement contains a magic number: Assert.Equal(15' clone.Item2[1].Item7);
Magic Number,Examples,Tuples,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Tuples.cs,Check,The following statement contains a magic number: Assert.Equal(Tuple.Create(3F' 4F)' clone.Item2[1].Rest.Item1.Single());
Magic Number,Examples,Tuples,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Tuples.cs,Check,The following statement contains a magic number: Assert.Equal(Tuple.Create(3F' 4F)' clone.Item2[1].Rest.Item1.Single());
Magic Number,Examples,Tuples,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Tuples.cs,TestInt_IntArray_Dictionary,The following statement contains a magic number: var data = new Dictionary<int' int[]> { { 1' new[] { 2' 3 } }' { 4' new[] { 5' 6' 7 } } };
Magic Number,Examples,Tuples,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Tuples.cs,TestInt_IntArray_Dictionary,The following statement contains a magic number: var data = new Dictionary<int' int[]> { { 1' new[] { 2' 3 } }' { 4' new[] { 5' 6' 7 } } };
Magic Number,Examples,Tuples,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Tuples.cs,TestInt_IntArray_Dictionary,The following statement contains a magic number: var data = new Dictionary<int' int[]> { { 1' new[] { 2' 3 } }' { 4' new[] { 5' 6' 7 } } };
Magic Number,Examples,Tuples,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Tuples.cs,TestInt_IntArray_Dictionary,The following statement contains a magic number: var data = new Dictionary<int' int[]> { { 1' new[] { 2' 3 } }' { 4' new[] { 5' 6' 7 } } };
Magic Number,Examples,Tuples,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Tuples.cs,TestInt_IntArray_Dictionary,The following statement contains a magic number: var data = new Dictionary<int' int[]> { { 1' new[] { 2' 3 } }' { 4' new[] { 5' 6' 7 } } };
Magic Number,Examples,Tuples,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Tuples.cs,TestInt_IntArray_Dictionary,The following statement contains a magic number: var data = new Dictionary<int' int[]> { { 1' new[] { 2' 3 } }' { 4' new[] { 5' 6' 7 } } };
Magic Number,Examples,Tuples,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Tuples.cs,TestInt_IntArray_Dictionary,The following statement contains a magic number: Assert.Equal(2' clone.Count);
Magic Number,Examples,Tuples,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Tuples.cs,TestInt_IntArray_Dictionary,The following statement contains a magic number: Assert.True(clone[1].SequenceEqual(new[] { 2' 3 }));
Magic Number,Examples,Tuples,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Tuples.cs,TestInt_IntArray_Dictionary,The following statement contains a magic number: Assert.True(clone[1].SequenceEqual(new[] { 2' 3 }));
Magic Number,Examples,Tuples,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Tuples.cs,TestInt_IntArray_Dictionary,The following statement contains a magic number: Assert.True(clone[4].SequenceEqual(new[] { 5' 6' 7 }));
Magic Number,Examples,Tuples,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Tuples.cs,TestInt_IntArray_Dictionary,The following statement contains a magic number: Assert.True(clone[4].SequenceEqual(new[] { 5' 6' 7 }));
Magic Number,Examples,Tuples,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Tuples.cs,TestInt_IntArray_Dictionary,The following statement contains a magic number: Assert.True(clone[4].SequenceEqual(new[] { 5' 6' 7 }));
Magic Number,Examples,Tuples,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Tuples.cs,TestInt_IntArray_Dictionary,The following statement contains a magic number: Assert.True(clone[4].SequenceEqual(new[] { 5' 6' 7 }));
Magic Number,Examples,Tuples,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Tuples.cs,TestMonoKeyValuePair,The following statement contains a magic number: var original = new WithQuasiMutableTuple {Value = new QuasiMutableTuple(123' "abc")};
Magic Number,Examples,Tuples,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Tuples.cs,TestMonoKeyValuePair,The following statement contains a magic number: Assert.Equal(123' clone.Value.Foo);
Magic Number,Examples,TypeTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Type.cs,ShouldRoundtripTypeWithoutEvent,The following statement contains a magic number: byte[] expected = new byte[Encoding.UTF8.GetByteCount(s) + 2];
Magic Number,Examples,TypeTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Type.cs,ShouldRoundtripTypeWithoutEvent,The following statement contains a magic number: Encoding.UTF8.GetBytes(s' 0' s.Length' expected' 2);
Magic Number,Examples,TypeTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Type.cs,ShouldRoundtripTypeWithEvent,The following statement contains a magic number: byte[] expected = new byte[Encoding.UTF8.GetByteCount(s) + 2];
Magic Number,Examples,TypeTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Type.cs,ShouldRoundtripTypeWithEvent,The following statement contains a magic number: Encoding.UTF8.GetBytes(s' 0' s.Length' expected' 2);
Magic Number,Examples,TypeFactory,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\TypeFactory.cs,TestInternal,The following statement contains a magic number: Check(model' null' 42' "Runtime");
Magic Number,Examples,TypeFactory,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\TypeFactory.cs,TestInternal,The following statement contains a magic number: Check(model' null' 42' "CompileInPlace");
Magic Number,Examples,TypeFactory,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\TypeFactory.cs,TestInternal,The following statement contains a magic number: Check(model.Compile()' null' 42' "Compile");
Magic Number,Examples,TypeFactory,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\TypeFactory.cs,TestExternal,The following statement contains a magic number: var ctx = new SerializationContext {Context = 12345};
Magic Number,Examples,TypeFactory,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\TypeFactory.cs,TestExternal,The following statement contains a magic number: Check(model' ctx' 12345' "Runtime");
Magic Number,Examples,TypeFactory,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\TypeFactory.cs,TestExternal,The following statement contains a magic number: Check(model' ctx' 12345' "CompileInPlace");
Magic Number,Examples,TypeFactory,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\TypeFactory.cs,TestExternal,The following statement contains a magic number: Check(model.Compile()' ctx' 12345' "Compile");
Magic Number,Examples,TypeFactory,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\TypeFactory.cs,Check,The following statement contains a magic number: CanHazFactory orig = new CanHazFactory {Foo = 123' Bar = 456}' clone;
Magic Number,Examples,TypeFactory,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\TypeFactory.cs,Check,The following statement contains a magic number: CanHazFactory orig = new CanHazFactory {Foo = 123' Bar = 456}' clone;
Magic Number,Examples,TypeFactory,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\TypeFactory.cs,Check,The following statement contains a magic number: Assert.Equal(123' orig.Foo);
Magic Number,Examples,TypeFactory,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\TypeFactory.cs,Check,The following statement contains a magic number: Assert.Equal(456' orig.Bar);
Magic Number,Examples,TypeFactory,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\TypeFactory.cs,Check,The following statement contains a magic number: Assert.Equal(123' clone.Foo);
Magic Number,Examples,TypeFactory,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\TypeFactory.cs,Check,The following statement contains a magic number: Assert.Equal(456' clone.Bar);
Magic Number,Examples,CanHazFactory,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\TypeFactory.cs,MagicMaker,The following statement contains a magic number: return new CanHazFactory {MagicNumber = 42};
Magic Number,Examples,UnwrappedOuters,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\UnwrappedOuters.cs,TestNakedByteArray,The following statement contains a magic number: Random rand = new Random(12345);
Magic Number,Examples,UnwrappedOuters,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\UnwrappedOuters.cs,TestNakedByteArray,The following statement contains a magic number: byte[] data = new byte[100]' clone;
Magic Number,Examples,UnwrappedOuters,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\UnwrappedOuters.cs,TestNakedString,The following statement contains a magic number: Random rand = new Random(12345);
Magic Number,Examples,UnwrappedOuters,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\UnwrappedOuters.cs,TestNakedString,The following statement contains a magic number: byte[] data = new byte[100]' clone;
Magic Number,Examples,ValueWrapperTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ValueWrapper.cs,TestInt32,The following statement contains a magic number: Assert.True(Program.CheckBytes(new FieldData {Value = 123}'                                               GetBytes(new Int32Simple {Value = 123}))' "Int32");
Magic Number,Examples,ValueWrapperTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ValueWrapper.cs,TestInt32,The following statement contains a magic number: Assert.True(Program.CheckBytes(new FieldData {Value = 123}'                                               GetBytes(new Int32Simple {Value = 123}))' "Int32");
Magic Number,Examples,ValueWrapperTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ValueWrapper.cs,TestInt32,The following statement contains a magic number: Assert.Equal(123' Serializer.DeepClone(new FieldData(123)).Value);
Magic Number,Examples,ValueWrapperTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ValueWrapper.cs,TestInt32,The following statement contains a magic number: Assert.Equal(123' Serializer.DeepClone(new FieldData(123)).Value);
Magic Number,Examples,ValueWrapperTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ValueWrapper.cs,TestSingle,The following statement contains a magic number: Assert.True(Program.CheckBytes(new FieldData {Value = 123.45F}'                                               GetBytes(new SingleSimple {Value = 123.45F}))' "Single");
Magic Number,Examples,ValueWrapperTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ValueWrapper.cs,TestSingle,The following statement contains a magic number: Assert.True(Program.CheckBytes(new FieldData {Value = 123.45F}'                                               GetBytes(new SingleSimple {Value = 123.45F}))' "Single");
Magic Number,Examples,ValueWrapperTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ValueWrapper.cs,TestSingle,The following statement contains a magic number: Assert.Equal(123.45F' Serializer.DeepClone(new FieldData(123.45F)).Value);
Magic Number,Examples,ValueWrapperTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ValueWrapper.cs,TestSingle,The following statement contains a magic number: Assert.Equal(123.45F' Serializer.DeepClone(new FieldData(123.45F)).Value);
Magic Number,Examples,ValueWrapperTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ValueWrapper.cs,TestDouble,The following statement contains a magic number: Assert.True(Program.CheckBytes(new FieldData { Value = 123.45 }'                  GetBytes(new DoubleSimple { Value = 123.45 }))' "Double");
Magic Number,Examples,ValueWrapperTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ValueWrapper.cs,TestDouble,The following statement contains a magic number: Assert.True(Program.CheckBytes(new FieldData { Value = 123.45 }'                  GetBytes(new DoubleSimple { Value = 123.45 }))' "Double");
Magic Number,Examples,ValueWrapperTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ValueWrapper.cs,TestDouble,The following statement contains a magic number: Assert.Equal(123.45' Serializer.DeepClone(new FieldData(123.45)).Value);
Magic Number,Examples,ValueWrapperTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ValueWrapper.cs,TestDouble,The following statement contains a magic number: Assert.Equal(123.45' Serializer.DeepClone(new FieldData(123.45)).Value);
Magic Number,Examples,ValueWrapperTestsViaNullable,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ValueWrapper.cs,TestInt32,The following statement contains a magic number: Assert.True(Program.CheckBytes(new FieldDataViaNullable {Value = 123}'                                               GetBytes(new Int32Simple {Value = 123}))' "Int32");
Magic Number,Examples,ValueWrapperTestsViaNullable,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ValueWrapper.cs,TestInt32,The following statement contains a magic number: Assert.True(Program.CheckBytes(new FieldDataViaNullable {Value = 123}'                                               GetBytes(new Int32Simple {Value = 123}))' "Int32");
Magic Number,Examples,ValueWrapperTestsViaNullable,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ValueWrapper.cs,TestInt32,The following statement contains a magic number: Assert.Equal(123' Serializer.DeepClone(new FieldDataViaNullable(123)).Value);
Magic Number,Examples,ValueWrapperTestsViaNullable,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ValueWrapper.cs,TestInt32,The following statement contains a magic number: Assert.Equal(123' Serializer.DeepClone(new FieldDataViaNullable(123)).Value);
Magic Number,Examples,ValueWrapperTestsViaNullable,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ValueWrapper.cs,TestSingle,The following statement contains a magic number: Assert.True(Program.CheckBytes(new FieldDataViaNullable {Value = 123.45F}'                                               GetBytes(new SingleSimple {Value = 123.45F}))' "Single");
Magic Number,Examples,ValueWrapperTestsViaNullable,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ValueWrapper.cs,TestSingle,The following statement contains a magic number: Assert.True(Program.CheckBytes(new FieldDataViaNullable {Value = 123.45F}'                                               GetBytes(new SingleSimple {Value = 123.45F}))' "Single");
Magic Number,Examples,ValueWrapperTestsViaNullable,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ValueWrapper.cs,TestSingle,The following statement contains a magic number: Assert.Equal(123.45F' Serializer.DeepClone(new FieldDataViaNullable(123.45F)).Value);
Magic Number,Examples,ValueWrapperTestsViaNullable,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ValueWrapper.cs,TestSingle,The following statement contains a magic number: Assert.Equal(123.45F' Serializer.DeepClone(new FieldDataViaNullable(123.45F)).Value);
Magic Number,Examples,ValueWrapperTestsViaNullable,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ValueWrapper.cs,TestDouble,The following statement contains a magic number: Assert.True(Program.CheckBytes(new FieldDataViaNullable { Value = 123.45 }'                  GetBytes(new DoubleSimple { Value = 123.45 }))' "Double");
Magic Number,Examples,ValueWrapperTestsViaNullable,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ValueWrapper.cs,TestDouble,The following statement contains a magic number: Assert.True(Program.CheckBytes(new FieldDataViaNullable { Value = 123.45 }'                  GetBytes(new DoubleSimple { Value = 123.45 }))' "Double");
Magic Number,Examples,ValueWrapperTestsViaNullable,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ValueWrapper.cs,TestDouble,The following statement contains a magic number: Assert.Equal(123.45' Serializer.DeepClone(new FieldDataViaNullable(123.45)).Value);
Magic Number,Examples,ValueWrapperTestsViaNullable,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\ValueWrapper.cs,TestDouble,The following statement contains a magic number: Assert.Equal(123.45' Serializer.DeepClone(new FieldDataViaNullable(123.45)).Value);
Magic Number,Examples.DesignIdeas,InheritanceTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\DesignIdeas\Inheritance.cs,InheritanceBaseType,The following statement contains a magic number: SomeBase sb = new SomeBase {Test = 12345};
Magic Number,Examples.DesignIdeas,InheritanceTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\DesignIdeas\Inheritance.cs,InheritanceSub1,The following statement contains a magic number: SomeBase sb = new Sub1 { Test = 12345' Foo = "abc" };
Magic Number,Examples.DesignIdeas,InheritanceTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\DesignIdeas\Inheritance.cs,InheritanceSub2,The following statement contains a magic number: SomeBase sb = new Sub2 { Test = 12345' Bar = 123.45F};
Magic Number,Examples.DesignIdeas,InheritanceTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\DesignIdeas\Inheritance.cs,InheritanceSub2,The following statement contains a magic number: SomeBase sb = new Sub2 { Test = 12345' Bar = 123.45F};
Magic Number,Examples.DesignIdeas,InheritanceTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\DesignIdeas\Inheritance.cs,InheritanceCheckBytesCorrectOrder,The following statement contains a magic number: SomeBase sb = new Sub1 { Test = 12345' Foo = "abc" };
Magic Number,Examples.DesignIdeas,InheritanceTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\DesignIdeas\Inheritance.cs,InheritanceCheckBytesWrongOrder,The following statement contains a magic number: Assert.Equal(12345' clone.Test);
Magic Number,Examples.DesignIdeas,EnumTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\EnumTests.cs,TestNegEnumnotDefinedNeg,The following statement contains a magic number: TestNegEnumImpl((NegEnum)(-2));
Magic Number,Examples.DesignIdeas,EnumTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\EnumTests.cs,TestNegEnumnotDefinedPos,The following statement contains a magic number: TestNegEnumImpl((NegEnum)2);
Magic Number,Examples.DesignIdeas,EnumTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\EnumTests.cs,RoundTripTopLevelContract,The following statement contains a magic number: Assert.True(Program.CheckBytes(value' 8' 3));
Magic Number,Examples.DesignIdeas,EnumTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\EnumTests.cs,RoundTripTopLevelContract,The following statement contains a magic number: Assert.True(Program.CheckBytes(value' 8' 3));
Magic Number,Examples.DesignIdeas,EnumTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\EnumTests.cs,RoundTripTopLevelNullableContract,The following statement contains a magic number: Assert.True(Program.CheckBytes(value' 8' 3));
Magic Number,Examples.DesignIdeas,EnumTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\EnumTests.cs,RoundTripTopLevelNullableContract,The following statement contains a magic number: Assert.True(Program.CheckBytes(value' 8' 3));
Magic Number,Examples.DesignIdeas,EnumTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\EnumTests.cs,RoundTripTopLevelNoContract,The following statement contains a magic number: Assert.True(Program.CheckBytes(value' 8' 3));
Magic Number,Examples.DesignIdeas,EnumTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\EnumTests.cs,RoundTripTopLevelNoContract,The following statement contains a magic number: Assert.True(Program.CheckBytes(value' 8' 3));
Magic Number,Examples.DesignIdeas,EnumTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\EnumTests.cs,RoundTripTopLevelNullableNoContract,The following statement contains a magic number: Assert.True(Program.CheckBytes(value' 8' 3));
Magic Number,Examples.DesignIdeas,EnumTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\EnumTests.cs,RoundTripTopLevelNullableNoContract,The following statement contains a magic number: Assert.True(Program.CheckBytes(value' 8' 3));
Magic Number,Examples.Dictionary,DictionaryTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\DictionaryTests.cs,TestNestedDictionaryWithStrings,The following statement contains a magic number: obj.Data[4] = "def";
Magic Number,Examples.Dictionary,DictionaryTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\DictionaryTests.cs,TestNestedDictionaryWithStrings,The following statement contains a magic number: obj.Data[7] = "abc";
Magic Number,Examples.Dictionary,DictionaryTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\DictionaryTests.cs,TestNestedDictionaryWithSimpleData,The following statement contains a magic number: obj.Data[0] = new SimpleData(5);
Magic Number,Examples.Dictionary,DictionaryTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\DictionaryTests.cs,TestNestedDictionaryWithSimpleData,The following statement contains a magic number: obj.Data[4] = new SimpleData(72);
Magic Number,Examples.Dictionary,DictionaryTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\DictionaryTests.cs,TestNestedDictionaryWithSimpleData,The following statement contains a magic number: obj.Data[4] = new SimpleData(72);
Magic Number,Examples.Dictionary,DictionaryTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\DictionaryTests.cs,TestNestedDictionaryWithSimpleData,The following statement contains a magic number: obj.Data[7] = new SimpleData(72);
Magic Number,Examples.Dictionary,DictionaryTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\DictionaryTests.cs,TestNestedDictionaryWithSimpleData,The following statement contains a magic number: obj.Data[7] = new SimpleData(72);
Magic Number,Examples.Dictionary,DictionaryTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\DictionaryTests.cs,RoundtripDictionary,The following statement contains a magic number: var lookup = new Dictionary<int' string>              {                  [0] = "abc"'                  [4] = "def"'                  [7] = "abc"              };
Magic Number,Examples.Dictionary,DictionaryTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\DictionaryTests.cs,RoundtripDictionary,The following statement contains a magic number: var lookup = new Dictionary<int' string>              {                  [0] = "abc"'                  [4] = "def"'                  [7] = "abc"              };
Magic Number,Examples.Dictionary,EmptyDictionaryTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\DictionaryTests.cs,NonEmptyDictionaryShouldDeserialize,The following statement contains a magic number: var data = new Dictionary<string' int> { { "abc"' 123 } };
Magic Number,Examples.Dictionary,EmptyDictionaryTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\DictionaryTests.cs,NonEmptyDictionaryShouldDeserialize,The following statement contains a magic number: Assert.Equal(123' clone["abc"]);
Magic Number,Examples.Dictionary,EmptyDictionaryTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\DictionaryTests.cs,NonEmptyDictionaryShouldDeserializeViaInterface,The following statement contains a magic number: var data = new Dictionary<string' int> { { "abc"' 123 } };
Magic Number,Examples.Dictionary,EmptyDictionaryTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\DictionaryTests.cs,NonEmptyDictionaryShouldDeserializeViaInterface,The following statement contains a magic number: Assert.Equal(123' clone["abc"]);
Magic Number,Examples.Dictionary,NestedDictionaryTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\DictionaryTests.cs,CheckNested,The following statement contains a magic number: Assert.Equal(2' data.Keys.Count);
Magic Number,Examples.Dictionary,NestedDictionaryTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\DictionaryTests.cs,CheckNested,The following statement contains a magic number: Assert.Equal(2' inner.Keys.Count);
Magic Number,Examples.Dictionary,NestedDictionaryTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\DictionaryTests.cs,CheckPerformanceNotInsanelyBad,The following statement contains a magic number: var o1 = new PropsViaProperties { Field1 = 123' Field2 = 456' Field3 = 789 };
Magic Number,Examples.Dictionary,NestedDictionaryTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\DictionaryTests.cs,CheckPerformanceNotInsanelyBad,The following statement contains a magic number: var o1 = new PropsViaProperties { Field1 = 123' Field2 = 456' Field3 = 789 };
Magic Number,Examples.Dictionary,NestedDictionaryTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\DictionaryTests.cs,CheckPerformanceNotInsanelyBad,The following statement contains a magic number: var o1 = new PropsViaProperties { Field1 = 123' Field2 = 456' Field3 = 789 };
Magic Number,Examples.Dictionary,NestedDictionaryTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\DictionaryTests.cs,CheckPerformanceNotInsanelyBad,The following statement contains a magic number: var o2 = new PropsViaDictionaryDefault()              {                  Values = new List<KeyValuePair> {                  new KeyValuePair {Key = "Field1"' Value =123 }'                  new KeyValuePair {Key = "Field2"' Value =456 }'                  new KeyValuePair {Key = "Field2"' Value =789 }'              }              };
Magic Number,Examples.Dictionary,NestedDictionaryTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\DictionaryTests.cs,CheckPerformanceNotInsanelyBad,The following statement contains a magic number: var o2 = new PropsViaDictionaryDefault()              {                  Values = new List<KeyValuePair> {                  new KeyValuePair {Key = "Field1"' Value =123 }'                  new KeyValuePair {Key = "Field2"' Value =456 }'                  new KeyValuePair {Key = "Field2"' Value =789 }'              }              };
Magic Number,Examples.Dictionary,NestedDictionaryTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\DictionaryTests.cs,CheckPerformanceNotInsanelyBad,The following statement contains a magic number: var o2 = new PropsViaDictionaryDefault()              {                  Values = new List<KeyValuePair> {                  new KeyValuePair {Key = "Field1"' Value =123 }'                  new KeyValuePair {Key = "Field2"' Value =456 }'                  new KeyValuePair {Key = "Field2"' Value =789 }'              }              };
Magic Number,Examples.Dictionary,NestedDictionaryTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\DictionaryTests.cs,CheckPerformanceNotInsanelyBad,The following statement contains a magic number: var o3 = new PropsViaDictionaryGrouped()              {                  Values = new List<KeyValuePair> {                  new KeyValuePair {Key = "Field1"' Value =123 }'                  new KeyValuePair {Key = "Field2"' Value =456 }'                  new KeyValuePair {Key = "Field2"' Value =789 }'              }              };
Magic Number,Examples.Dictionary,NestedDictionaryTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\DictionaryTests.cs,CheckPerformanceNotInsanelyBad,The following statement contains a magic number: var o3 = new PropsViaDictionaryGrouped()              {                  Values = new List<KeyValuePair> {                  new KeyValuePair {Key = "Field1"' Value =123 }'                  new KeyValuePair {Key = "Field2"' Value =456 }'                  new KeyValuePair {Key = "Field2"' Value =789 }'              }              };
Magic Number,Examples.Dictionary,NestedDictionaryTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\DictionaryTests.cs,CheckPerformanceNotInsanelyBad,The following statement contains a magic number: var o3 = new PropsViaDictionaryGrouped()              {                  Values = new List<KeyValuePair> {                  new KeyValuePair {Key = "Field1"' Value =123 }'                  new KeyValuePair {Key = "Field2"' Value =456 }'                  new KeyValuePair {Key = "Field2"' Value =789 }'              }              };
Magic Number,ProtoBuf,DiscriminatedUnions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\DiscriminatedUnions.cs,BasicUsage,The following statement contains a magic number: union = new DiscriminatedUnion32(4' 42);
Magic Number,ProtoBuf,DiscriminatedUnions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\DiscriminatedUnions.cs,BasicUsage,The following statement contains a magic number: union = new DiscriminatedUnion32(4' 42);
Magic Number,ProtoBuf,DiscriminatedUnions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\DiscriminatedUnions.cs,BasicUsage,The following statement contains a magic number: Assert.True(union.Is(4));
Magic Number,ProtoBuf,DiscriminatedUnions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\DiscriminatedUnions.cs,BasicUsage,The following statement contains a magic number: Assert.Equal(4' union.Discriminator);
Magic Number,ProtoBuf,DiscriminatedUnions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\DiscriminatedUnions.cs,BasicUsage,The following statement contains a magic number: Assert.Equal(42' union.Int32);
Magic Number,ProtoBuf,DiscriminatedUnions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\DiscriminatedUnions.cs,BasicUsage,The following statement contains a magic number: DiscriminatedUnion32.Reset(ref union' 3);
Magic Number,ProtoBuf,DiscriminatedUnions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\DiscriminatedUnions.cs,BasicUsage,The following statement contains a magic number: Assert.True(union.Is(4));
Magic Number,ProtoBuf,DiscriminatedUnions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\DiscriminatedUnions.cs,BasicUsage,The following statement contains a magic number: Assert.Equal(4' union.Discriminator);
Magic Number,ProtoBuf,DiscriminatedUnions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\DiscriminatedUnions.cs,BasicUsage,The following statement contains a magic number: Assert.Equal(42' union.Int32);
Magic Number,ProtoBuf,DiscriminatedUnions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\DiscriminatedUnions.cs,BasicUsage,The following statement contains a magic number: DiscriminatedUnion32.Reset(ref union' 4);
Magic Number,ProtoBuf,DiscriminatedUnions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\DiscriminatedUnions.cs,BasicUsage,The following statement contains a magic number: Assert.False(union.Is(4));
Magic Number,ProtoBuf,PartialClasses,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\PartialClasses.cs,TestPartial,The following statement contains a magic number: PartialData orig = new PartialData {                  Name = "abcdefghijklmnopqrstuvwxyz"'                  Number = 1234'                  When = new DateTime(2008'1'1)'                  HowMuchNotSerialized = 123.456M              }'  clone = Serializer.DeepClone(orig);
Magic Number,ProtoBuf,PartialClasses,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\PartialClasses.cs,TestPartial,The following statement contains a magic number: PartialData orig = new PartialData {                  Name = "abcdefghijklmnopqrstuvwxyz"'                  Number = 1234'                  When = new DateTime(2008'1'1)'                  HowMuchNotSerialized = 123.456M              }'  clone = Serializer.DeepClone(orig);
Magic Number,ProtoBuf,PartialClasses,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\PartialClasses.cs,TestPartial,The following statement contains a magic number: PartialData orig = new PartialData {                  Name = "abcdefghijklmnopqrstuvwxyz"'                  Number = 1234'                  When = new DateTime(2008'1'1)'                  HowMuchNotSerialized = 123.456M              }'  clone = Serializer.DeepClone(orig);
Magic Number,ProtoBuf,PartialClasses,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\PartialClasses.cs,TestSubClass,The following statement contains a magic number: SubClassData orig = new SubClassData              {                  Name = "abcdefghijklmnopqrstuvwxyz"'                  Number = 1234'                  When = new DateTime(2008' 1' 1)'                  HowMuchNotSerialized = 123.456M              }' clone = (SubClassData)Serializer.DeepClone<PartialData>(orig);
Magic Number,ProtoBuf,PartialClasses,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\PartialClasses.cs,TestSubClass,The following statement contains a magic number: SubClassData orig = new SubClassData              {                  Name = "abcdefghijklmnopqrstuvwxyz"'                  Number = 1234'                  When = new DateTime(2008' 1' 1)'                  HowMuchNotSerialized = 123.456M              }' clone = (SubClassData)Serializer.DeepClone<PartialData>(orig);
Magic Number,ProtoBuf,PartialClasses,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\PartialClasses.cs,TestSubClass,The following statement contains a magic number: SubClassData orig = new SubClassData              {                  Name = "abcdefghijklmnopqrstuvwxyz"'                  Number = 1234'                  When = new DateTime(2008' 1' 1)'                  HowMuchNotSerialized = 123.456M              }' clone = (SubClassData)Serializer.DeepClone<PartialData>(orig);
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyListTimeSpan,The following statement contains a magic number: var list = new List<TimeSpan>          {              new TimeSpan(2010' 2' 1)'              new TimeSpan(9' 3' 10' 30' 32)'          };
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyListTimeSpan,The following statement contains a magic number: var list = new List<TimeSpan>          {              new TimeSpan(2010' 2' 1)'              new TimeSpan(9' 3' 10' 30' 32)'          };
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyListTimeSpan,The following statement contains a magic number: var list = new List<TimeSpan>          {              new TimeSpan(2010' 2' 1)'              new TimeSpan(9' 3' 10' 30' 32)'          };
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyListTimeSpan,The following statement contains a magic number: var list = new List<TimeSpan>          {              new TimeSpan(2010' 2' 1)'              new TimeSpan(9' 3' 10' 30' 32)'          };
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyListTimeSpan,The following statement contains a magic number: var list = new List<TimeSpan>          {              new TimeSpan(2010' 2' 1)'              new TimeSpan(9' 3' 10' 30' 32)'          };
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyListTimeSpan,The following statement contains a magic number: var list = new List<TimeSpan>          {              new TimeSpan(2010' 2' 1)'              new TimeSpan(9' 3' 10' 30' 32)'          };
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyListTimeSpan,The following statement contains a magic number: var list = new List<TimeSpan>          {              new TimeSpan(2010' 2' 1)'              new TimeSpan(9' 3' 10' 30' 32)'          };
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyListTimeSpan,The following statement contains a magic number: Assert.Equal(2' clone.Count);
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyListDateTime,The following statement contains a magic number: var list = new List<DateTime>              {                  new DateTime(2010' 2' 1)'                  new DateTime(2019' 9' 3' 10' 30' 32)'              };
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyListDateTime,The following statement contains a magic number: var list = new List<DateTime>              {                  new DateTime(2010' 2' 1)'                  new DateTime(2019' 9' 3' 10' 30' 32)'              };
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyListDateTime,The following statement contains a magic number: var list = new List<DateTime>              {                  new DateTime(2010' 2' 1)'                  new DateTime(2019' 9' 3' 10' 30' 32)'              };
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyListDateTime,The following statement contains a magic number: var list = new List<DateTime>              {                  new DateTime(2010' 2' 1)'                  new DateTime(2019' 9' 3' 10' 30' 32)'              };
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyListDateTime,The following statement contains a magic number: var list = new List<DateTime>              {                  new DateTime(2010' 2' 1)'                  new DateTime(2019' 9' 3' 10' 30' 32)'              };
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyListDateTime,The following statement contains a magic number: var list = new List<DateTime>              {                  new DateTime(2010' 2' 1)'                  new DateTime(2019' 9' 3' 10' 30' 32)'              };
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyListDateTime,The following statement contains a magic number: var list = new List<DateTime>              {                  new DateTime(2010' 2' 1)'                  new DateTime(2019' 9' 3' 10' 30' 32)'              };
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyListDateTime,The following statement contains a magic number: var list = new List<DateTime>              {                  new DateTime(2010' 2' 1)'                  new DateTime(2019' 9' 3' 10' 30' 32)'              };
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyListDateTime,The following statement contains a magic number: Assert.Equal(2' clone.Count);
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyTimeSpanBehaviors,The following statement contains a magic number: Verify(model' new TimeSpan(32' 10' 25' 32' 123)' "0A-08-08-B6-C7-C1-F0-14-10-04");
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyTimeSpanBehaviors,The following statement contains a magic number: Verify(model' new TimeSpan(32' 10' 25' 32' 123)' "0A-08-08-B6-C7-C1-F0-14-10-04");
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyTimeSpanBehaviors,The following statement contains a magic number: Verify(model' new TimeSpan(32' 10' 25' 32' 123)' "0A-08-08-B6-C7-C1-F0-14-10-04");
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyTimeSpanBehaviors,The following statement contains a magic number: Verify(model' new TimeSpan(32' 10' 25' 32' 123)' "0A-08-08-B6-C7-C1-F0-14-10-04");
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyTimeSpanBehaviors,The following statement contains a magic number: Verify(model' new TimeSpan(32' 10' 25' 32' 123)' "0A-08-08-B6-C7-C1-F0-14-10-04");
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyTimeSpanBehaviors,The following statement contains a magic number: Verify(model' new TimeSpan(32' 10' 25' 32' 123)' "0A-08-08-B6-C7-C1-F0-14-10-04");
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyTimeSpanBehaviors,The following statement contains a magic number: Verify(model' new TimeSpan(32' 10' 25' 32' 123)' "0A-08-08-B6-C7-C1-F0-14-10-04");
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyTimeSpanBehaviors,The following statement contains a magic number: Verify(model' new TimeSpan(32' 10' 25' 32' 123)' "0A-08-08-B6-C7-C1-F0-14-10-04");
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyTimeSpanBehaviors,The following statement contains a magic number: Verify(model' new TimeSpan(32' 10' 25' 32' 123)' "0A-08-08-B6-C7-C1-F0-14-10-04");
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyTimeSpanBehaviors,The following statement contains a magic number: Verify(model' new TimeSpan(32' 10' 25' 32' 123)' "0A-08-08-B6-C7-C1-F0-14-10-04");
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyDateTimeBehaviors,The following statement contains a magic number: Verify(model' new DateTime(2019' 9' 27' 10' 25' 32' 123' DateTimeKind.Utc)' "0A-09-08-B6-E7-88-A4-AE-5B-10-04");
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyDateTimeBehaviors,The following statement contains a magic number: Verify(model' new DateTime(2019' 9' 27' 10' 25' 32' 123' DateTimeKind.Utc)' "0A-09-08-B6-E7-88-A4-AE-5B-10-04");
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyDateTimeBehaviors,The following statement contains a magic number: Verify(model' new DateTime(2019' 9' 27' 10' 25' 32' 123' DateTimeKind.Utc)' "0A-09-08-B6-E7-88-A4-AE-5B-10-04");
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyDateTimeBehaviors,The following statement contains a magic number: Verify(model' new DateTime(2019' 9' 27' 10' 25' 32' 123' DateTimeKind.Utc)' "0A-09-08-B6-E7-88-A4-AE-5B-10-04");
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyDateTimeBehaviors,The following statement contains a magic number: Verify(model' new DateTime(2019' 9' 27' 10' 25' 32' 123' DateTimeKind.Utc)' "0A-09-08-B6-E7-88-A4-AE-5B-10-04");
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyDateTimeBehaviors,The following statement contains a magic number: Verify(model' new DateTime(2019' 9' 27' 10' 25' 32' 123' DateTimeKind.Utc)' "0A-09-08-B6-E7-88-A4-AE-5B-10-04");
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyDateTimeBehaviors,The following statement contains a magic number: Verify(model' new DateTime(2019' 9' 27' 10' 25' 32' 123' DateTimeKind.Utc)' "0A-09-08-B6-E7-88-A4-AE-5B-10-04");
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyDateTimeBehaviors,The following statement contains a magic number: Verify(model' new DateTime(2019' 9' 27' 10' 25' 32' 123' DateTimeKind.Local)' "0A-09-08-B6-E7-88-A4-AE-5B-10-04");
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyDateTimeBehaviors,The following statement contains a magic number: Verify(model' new DateTime(2019' 9' 27' 10' 25' 32' 123' DateTimeKind.Local)' "0A-09-08-B6-E7-88-A4-AE-5B-10-04");
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyDateTimeBehaviors,The following statement contains a magic number: Verify(model' new DateTime(2019' 9' 27' 10' 25' 32' 123' DateTimeKind.Local)' "0A-09-08-B6-E7-88-A4-AE-5B-10-04");
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyDateTimeBehaviors,The following statement contains a magic number: Verify(model' new DateTime(2019' 9' 27' 10' 25' 32' 123' DateTimeKind.Local)' "0A-09-08-B6-E7-88-A4-AE-5B-10-04");
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyDateTimeBehaviors,The following statement contains a magic number: Verify(model' new DateTime(2019' 9' 27' 10' 25' 32' 123' DateTimeKind.Local)' "0A-09-08-B6-E7-88-A4-AE-5B-10-04");
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyDateTimeBehaviors,The following statement contains a magic number: Verify(model' new DateTime(2019' 9' 27' 10' 25' 32' 123' DateTimeKind.Local)' "0A-09-08-B6-E7-88-A4-AE-5B-10-04");
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyDateTimeBehaviors,The following statement contains a magic number: Verify(model' new DateTime(2019' 9' 27' 10' 25' 32' 123' DateTimeKind.Local)' "0A-09-08-B6-E7-88-A4-AE-5B-10-04");
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyDateTimeBehaviors,The following statement contains a magic number: Verify(model' new DateTime(2019' 9' 27' 10' 25' 32' 123' DateTimeKind.Unspecified)' "0A-09-08-B6-E7-88-A4-AE-5B-10-04");
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyDateTimeBehaviors,The following statement contains a magic number: Verify(model' new DateTime(2019' 9' 27' 10' 25' 32' 123' DateTimeKind.Unspecified)' "0A-09-08-B6-E7-88-A4-AE-5B-10-04");
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyDateTimeBehaviors,The following statement contains a magic number: Verify(model' new DateTime(2019' 9' 27' 10' 25' 32' 123' DateTimeKind.Unspecified)' "0A-09-08-B6-E7-88-A4-AE-5B-10-04");
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyDateTimeBehaviors,The following statement contains a magic number: Verify(model' new DateTime(2019' 9' 27' 10' 25' 32' 123' DateTimeKind.Unspecified)' "0A-09-08-B6-E7-88-A4-AE-5B-10-04");
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyDateTimeBehaviors,The following statement contains a magic number: Verify(model' new DateTime(2019' 9' 27' 10' 25' 32' 123' DateTimeKind.Unspecified)' "0A-09-08-B6-E7-88-A4-AE-5B-10-04");
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyDateTimeBehaviors,The following statement contains a magic number: Verify(model' new DateTime(2019' 9' 27' 10' 25' 32' 123' DateTimeKind.Unspecified)' "0A-09-08-B6-E7-88-A4-AE-5B-10-04");
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyDateTimeBehaviors,The following statement contains a magic number: Verify(model' new DateTime(2019' 9' 27' 10' 25' 32' 123' DateTimeKind.Unspecified)' "0A-09-08-B6-E7-88-A4-AE-5B-10-04");
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyDateTimeBehaviors,The following statement contains a magic number: Verify(model' new DateTime(2019' 9' 27' 10' 25' 32' 123' DateTimeKind.Utc)' "0A-0B-08-B6-E7-88-A4-AE-5B-10-04-18-01");
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyDateTimeBehaviors,The following statement contains a magic number: Verify(model' new DateTime(2019' 9' 27' 10' 25' 32' 123' DateTimeKind.Utc)' "0A-0B-08-B6-E7-88-A4-AE-5B-10-04-18-01");
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyDateTimeBehaviors,The following statement contains a magic number: Verify(model' new DateTime(2019' 9' 27' 10' 25' 32' 123' DateTimeKind.Utc)' "0A-0B-08-B6-E7-88-A4-AE-5B-10-04-18-01");
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyDateTimeBehaviors,The following statement contains a magic number: Verify(model' new DateTime(2019' 9' 27' 10' 25' 32' 123' DateTimeKind.Utc)' "0A-0B-08-B6-E7-88-A4-AE-5B-10-04-18-01");
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyDateTimeBehaviors,The following statement contains a magic number: Verify(model' new DateTime(2019' 9' 27' 10' 25' 32' 123' DateTimeKind.Utc)' "0A-0B-08-B6-E7-88-A4-AE-5B-10-04-18-01");
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyDateTimeBehaviors,The following statement contains a magic number: Verify(model' new DateTime(2019' 9' 27' 10' 25' 32' 123' DateTimeKind.Utc)' "0A-0B-08-B6-E7-88-A4-AE-5B-10-04-18-01");
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyDateTimeBehaviors,The following statement contains a magic number: Verify(model' new DateTime(2019' 9' 27' 10' 25' 32' 123' DateTimeKind.Utc)' "0A-0B-08-B6-E7-88-A4-AE-5B-10-04-18-01");
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyDateTimeBehaviors,The following statement contains a magic number: Verify(model' new DateTime(2019' 9' 27' 10' 25' 32' 123' DateTimeKind.Local)' "0A-0B-08-B6-E7-88-A4-AE-5B-10-04-18-02");
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyDateTimeBehaviors,The following statement contains a magic number: Verify(model' new DateTime(2019' 9' 27' 10' 25' 32' 123' DateTimeKind.Local)' "0A-0B-08-B6-E7-88-A4-AE-5B-10-04-18-02");
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyDateTimeBehaviors,The following statement contains a magic number: Verify(model' new DateTime(2019' 9' 27' 10' 25' 32' 123' DateTimeKind.Local)' "0A-0B-08-B6-E7-88-A4-AE-5B-10-04-18-02");
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyDateTimeBehaviors,The following statement contains a magic number: Verify(model' new DateTime(2019' 9' 27' 10' 25' 32' 123' DateTimeKind.Local)' "0A-0B-08-B6-E7-88-A4-AE-5B-10-04-18-02");
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyDateTimeBehaviors,The following statement contains a magic number: Verify(model' new DateTime(2019' 9' 27' 10' 25' 32' 123' DateTimeKind.Local)' "0A-0B-08-B6-E7-88-A4-AE-5B-10-04-18-02");
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyDateTimeBehaviors,The following statement contains a magic number: Verify(model' new DateTime(2019' 9' 27' 10' 25' 32' 123' DateTimeKind.Local)' "0A-0B-08-B6-E7-88-A4-AE-5B-10-04-18-02");
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyDateTimeBehaviors,The following statement contains a magic number: Verify(model' new DateTime(2019' 9' 27' 10' 25' 32' 123' DateTimeKind.Local)' "0A-0B-08-B6-E7-88-A4-AE-5B-10-04-18-02");
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyDateTimeBehaviors,The following statement contains a magic number: Verify(model' new DateTime(2019' 9' 27' 10' 25' 32' 123' DateTimeKind.Unspecified)' "0A-09-08-B6-E7-88-A4-AE-5B-10-04");
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyDateTimeBehaviors,The following statement contains a magic number: Verify(model' new DateTime(2019' 9' 27' 10' 25' 32' 123' DateTimeKind.Unspecified)' "0A-09-08-B6-E7-88-A4-AE-5B-10-04");
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyDateTimeBehaviors,The following statement contains a magic number: Verify(model' new DateTime(2019' 9' 27' 10' 25' 32' 123' DateTimeKind.Unspecified)' "0A-09-08-B6-E7-88-A4-AE-5B-10-04");
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyDateTimeBehaviors,The following statement contains a magic number: Verify(model' new DateTime(2019' 9' 27' 10' 25' 32' 123' DateTimeKind.Unspecified)' "0A-09-08-B6-E7-88-A4-AE-5B-10-04");
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyDateTimeBehaviors,The following statement contains a magic number: Verify(model' new DateTime(2019' 9' 27' 10' 25' 32' 123' DateTimeKind.Unspecified)' "0A-09-08-B6-E7-88-A4-AE-5B-10-04");
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyDateTimeBehaviors,The following statement contains a magic number: Verify(model' new DateTime(2019' 9' 27' 10' 25' 32' 123' DateTimeKind.Unspecified)' "0A-09-08-B6-E7-88-A4-AE-5B-10-04");
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,LegacyDateTimeBehaviors,The following statement contains a magic number: Verify(model' new DateTime(2019' 9' 27' 10' 25' 32' 123' DateTimeKind.Unspecified)' "0A-09-08-B6-E7-88-A4-AE-5B-10-04");
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,TestInt32Array,The following statement contains a magic number: var orig = new[] { 1' 2 };
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,TestByteArray,The following statement contains a magic number: var orig = new byte[] { 0' 1' 2' 4' 5 };
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,TestByteArray,The following statement contains a magic number: var orig = new byte[] { 0' 1' 2' 4' 5 };
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,TestByteArray,The following statement contains a magic number: var orig = new byte[] { 0' 1' 2' 4' 5 };
Magic Number,Examples.Issues,AssortedGoLiveRegressions,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\AssortedGoLiveRegressions.cs,TestFooList,The following statement contains a magic number: var orig = new List<Foo> { new Foo() { Count = 12' Name = "abc" } };
Magic Number,Examples.Issues,Issue124,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue124.cs,RoundtripTypeWithColor,The following statement contains a magic number: var orig = new TypeWithColor              {                  Color = new Color { A = 1' R = 2' G = 3' B = 4 }              };
Magic Number,Examples.Issues,Issue124,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue124.cs,RoundtripTypeWithColor,The following statement contains a magic number: var orig = new TypeWithColor              {                  Color = new Color { A = 1' R = 2' G = 3' B = 4 }              };
Magic Number,Examples.Issues,Issue124,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue124.cs,RoundtripTypeWithColor,The following statement contains a magic number: var orig = new TypeWithColor              {                  Color = new Color { A = 1' R = 2' G = 3' B = 4 }              };
Magic Number,Examples.Issues,Issue124,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue124.cs,RoundtripTypeWithColor,The following statement contains a magic number: Assert.Equal(2' clone.Color.R);
Magic Number,Examples.Issues,Issue124,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue124.cs,RoundtripTypeWithColor,The following statement contains a magic number: Assert.Equal(3' clone.Color.G);
Magic Number,Examples.Issues,Issue124,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue124.cs,RoundtripTypeWithColor,The following statement contains a magic number: Assert.Equal(4' clone.Color.B);
Magic Number,Examples.Issues,Issue152,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue152.cs,ExecuteWithOverwrite,The following statement contains a magic number: var a1 = new IntArray { Arr = new int[] { 5' 6' 7 }' List = new List<int> { 8' 9' 10 } };
Magic Number,Examples.Issues,Issue152,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue152.cs,ExecuteWithOverwrite,The following statement contains a magic number: var a1 = new IntArray { Arr = new int[] { 5' 6' 7 }' List = new List<int> { 8' 9' 10 } };
Magic Number,Examples.Issues,Issue152,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue152.cs,ExecuteWithOverwrite,The following statement contains a magic number: var a1 = new IntArray { Arr = new int[] { 5' 6' 7 }' List = new List<int> { 8' 9' 10 } };
Magic Number,Examples.Issues,Issue152,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue152.cs,ExecuteWithOverwrite,The following statement contains a magic number: var a1 = new IntArray { Arr = new int[] { 5' 6' 7 }' List = new List<int> { 8' 9' 10 } };
Magic Number,Examples.Issues,Issue152,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue152.cs,ExecuteWithOverwrite,The following statement contains a magic number: var a1 = new IntArray { Arr = new int[] { 5' 6' 7 }' List = new List<int> { 8' 9' 10 } };
Magic Number,Examples.Issues,Issue152,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue152.cs,ExecuteWithOverwrite,The following statement contains a magic number: var a1 = new IntArray { Arr = new int[] { 5' 6' 7 }' List = new List<int> { 8' 9' 10 } };
Magic Number,Examples.Issues,Issue152,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue152.cs,ExecuteWithOverwrite,The following statement contains a magic number: model.Add(typeof(IntArray)' true)[2].OverwriteList = true;
Magic Number,Examples.Issues,Issue152,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue152.cs,ExecuteWithOverwrite,The following statement contains a magic number: AssertSequence(clone.Arr' "Runtime:Arr"' 5' 6' 7);
Magic Number,Examples.Issues,Issue152,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue152.cs,ExecuteWithOverwrite,The following statement contains a magic number: AssertSequence(clone.Arr' "Runtime:Arr"' 5' 6' 7);
Magic Number,Examples.Issues,Issue152,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue152.cs,ExecuteWithOverwrite,The following statement contains a magic number: AssertSequence(clone.Arr' "Runtime:Arr"' 5' 6' 7);
Magic Number,Examples.Issues,Issue152,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue152.cs,ExecuteWithOverwrite,The following statement contains a magic number: AssertSequence(clone.List' "Runtime:List"' 8' 9' 10);
Magic Number,Examples.Issues,Issue152,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue152.cs,ExecuteWithOverwrite,The following statement contains a magic number: AssertSequence(clone.List' "Runtime:List"' 8' 9' 10);
Magic Number,Examples.Issues,Issue152,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue152.cs,ExecuteWithOverwrite,The following statement contains a magic number: AssertSequence(clone.List' "Runtime:List"' 8' 9' 10);
Magic Number,Examples.Issues,Issue152,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue152.cs,ExecuteWithOverwrite,The following statement contains a magic number: AssertSequence(clone.Arr' "CompileInPlace:Arr"' 5' 6' 7);
Magic Number,Examples.Issues,Issue152,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue152.cs,ExecuteWithOverwrite,The following statement contains a magic number: AssertSequence(clone.Arr' "CompileInPlace:Arr"' 5' 6' 7);
Magic Number,Examples.Issues,Issue152,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue152.cs,ExecuteWithOverwrite,The following statement contains a magic number: AssertSequence(clone.Arr' "CompileInPlace:Arr"' 5' 6' 7);
Magic Number,Examples.Issues,Issue152,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue152.cs,ExecuteWithOverwrite,The following statement contains a magic number: AssertSequence(clone.List' "CompileInPlace:List"' 8' 9' 10);
Magic Number,Examples.Issues,Issue152,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue152.cs,ExecuteWithOverwrite,The following statement contains a magic number: AssertSequence(clone.List' "CompileInPlace:List"' 8' 9' 10);
Magic Number,Examples.Issues,Issue152,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue152.cs,ExecuteWithOverwrite,The following statement contains a magic number: AssertSequence(clone.List' "CompileInPlace:List"' 8' 9' 10);
Magic Number,Examples.Issues,Issue152,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue152.cs,ExecuteWithOverwrite,The following statement contains a magic number: AssertSequence(clone.Arr' "Compile:Arr"' 5' 6' 7);
Magic Number,Examples.Issues,Issue152,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue152.cs,ExecuteWithOverwrite,The following statement contains a magic number: AssertSequence(clone.Arr' "Compile:Arr"' 5' 6' 7);
Magic Number,Examples.Issues,Issue152,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue152.cs,ExecuteWithOverwrite,The following statement contains a magic number: AssertSequence(clone.Arr' "Compile:Arr"' 5' 6' 7);
Magic Number,Examples.Issues,Issue152,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue152.cs,ExecuteWithOverwrite,The following statement contains a magic number: AssertSequence(clone.List' "Compile:List"' 8' 9' 10);
Magic Number,Examples.Issues,Issue152,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue152.cs,ExecuteWithOverwrite,The following statement contains a magic number: AssertSequence(clone.List' "Compile:List"' 8' 9' 10);
Magic Number,Examples.Issues,Issue152,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue152.cs,ExecuteWithOverwrite,The following statement contains a magic number: AssertSequence(clone.List' "Compile:List"' 8' 9' 10);
Magic Number,Examples.Issues,Issue152,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: var a1 = new IntArray { Arr = new int[] { 5' 6' 7 }' List = new List<int> { 8' 9' 10 } };
Magic Number,Examples.Issues,Issue152,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: var a1 = new IntArray { Arr = new int[] { 5' 6' 7 }' List = new List<int> { 8' 9' 10 } };
Magic Number,Examples.Issues,Issue152,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: var a1 = new IntArray { Arr = new int[] { 5' 6' 7 }' List = new List<int> { 8' 9' 10 } };
Magic Number,Examples.Issues,Issue152,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: var a1 = new IntArray { Arr = new int[] { 5' 6' 7 }' List = new List<int> { 8' 9' 10 } };
Magic Number,Examples.Issues,Issue152,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: var a1 = new IntArray { Arr = new int[] { 5' 6' 7 }' List = new List<int> { 8' 9' 10 } };
Magic Number,Examples.Issues,Issue152,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: var a1 = new IntArray { Arr = new int[] { 5' 6' 7 }' List = new List<int> { 8' 9' 10 } };
Magic Number,Examples.Issues,Issue152,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: model.Add(typeof(IntArray)' true)[2].OverwriteList = false;
Magic Number,Examples.Issues,Issue152,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: AssertSequence(clone.Arr' "Runtime:Arr"' 1' 2' 5' 6' 7);
Magic Number,Examples.Issues,Issue152,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: AssertSequence(clone.Arr' "Runtime:Arr"' 1' 2' 5' 6' 7);
Magic Number,Examples.Issues,Issue152,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: AssertSequence(clone.Arr' "Runtime:Arr"' 1' 2' 5' 6' 7);
Magic Number,Examples.Issues,Issue152,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: AssertSequence(clone.Arr' "Runtime:Arr"' 1' 2' 5' 6' 7);
Magic Number,Examples.Issues,Issue152,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: AssertSequence(clone.List' "Runtime:List"' 3' 4' 8' 9' 10);
Magic Number,Examples.Issues,Issue152,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: AssertSequence(clone.List' "Runtime:List"' 3' 4' 8' 9' 10);
Magic Number,Examples.Issues,Issue152,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: AssertSequence(clone.List' "Runtime:List"' 3' 4' 8' 9' 10);
Magic Number,Examples.Issues,Issue152,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: AssertSequence(clone.List' "Runtime:List"' 3' 4' 8' 9' 10);
Magic Number,Examples.Issues,Issue152,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: AssertSequence(clone.List' "Runtime:List"' 3' 4' 8' 9' 10);
Magic Number,Examples.Issues,Issue152,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: AssertSequence(clone.Arr' "CompileInPlace:Arr"' 1' 2' 5' 6' 7);
Magic Number,Examples.Issues,Issue152,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: AssertSequence(clone.Arr' "CompileInPlace:Arr"' 1' 2' 5' 6' 7);
Magic Number,Examples.Issues,Issue152,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: AssertSequence(clone.Arr' "CompileInPlace:Arr"' 1' 2' 5' 6' 7);
Magic Number,Examples.Issues,Issue152,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: AssertSequence(clone.Arr' "CompileInPlace:Arr"' 1' 2' 5' 6' 7);
Magic Number,Examples.Issues,Issue152,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: AssertSequence(clone.List' "CompileInPlace:List"' 3' 4' 8' 9' 10);
Magic Number,Examples.Issues,Issue152,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: AssertSequence(clone.List' "CompileInPlace:List"' 3' 4' 8' 9' 10);
Magic Number,Examples.Issues,Issue152,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: AssertSequence(clone.List' "CompileInPlace:List"' 3' 4' 8' 9' 10);
Magic Number,Examples.Issues,Issue152,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: AssertSequence(clone.List' "CompileInPlace:List"' 3' 4' 8' 9' 10);
Magic Number,Examples.Issues,Issue152,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: AssertSequence(clone.List' "CompileInPlace:List"' 3' 4' 8' 9' 10);
Magic Number,Examples.Issues,Issue152,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: AssertSequence(clone.Arr' "Compile:Arr"' 1' 2' 5' 6' 7);
Magic Number,Examples.Issues,Issue152,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: AssertSequence(clone.Arr' "Compile:Arr"' 1' 2' 5' 6' 7);
Magic Number,Examples.Issues,Issue152,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: AssertSequence(clone.Arr' "Compile:Arr"' 1' 2' 5' 6' 7);
Magic Number,Examples.Issues,Issue152,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: AssertSequence(clone.Arr' "Compile:Arr"' 1' 2' 5' 6' 7);
Magic Number,Examples.Issues,Issue152,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: AssertSequence(clone.List' "Compile:List"' 3' 4' 8' 9' 10);
Magic Number,Examples.Issues,Issue152,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: AssertSequence(clone.List' "Compile:List"' 3' 4' 8' 9' 10);
Magic Number,Examples.Issues,Issue152,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: AssertSequence(clone.List' "Compile:List"' 3' 4' 8' 9' 10);
Magic Number,Examples.Issues,Issue152,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: AssertSequence(clone.List' "Compile:List"' 3' 4' 8' 9' 10);
Magic Number,Examples.Issues,Issue152,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue152.cs,ExecuteWithAppend,The following statement contains a magic number: AssertSequence(clone.List' "Compile:List"' 3' 4' 8' 9' 10);
Magic Number,Examples.Issues,Issue184,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue184.cs,CantSubclassLists,The following statement contains a magic number: Program.ExpectFailure<ArgumentException>(() =>              {                  var model = RuntimeTypeModel.Create();                  model.Add(typeof(IList<int>)' false).AddSubType(5' typeof(List<int>));                  model[typeof(IList<int>)].UseConstructor = false;                  model.CompileInPlace();              }' "Repeated data (a list' collection' etc) has inbuilt behaviour and cannot be subclassed");
Magic Number,Examples.Issues,Issue184,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue184.cs,ListAsSubclass,The following statement contains a magic number: Program.ExpectFailure<ArgumentException>(() =>              {                  var m = RuntimeTypeModel.Create();                  m.Add(typeof(IMobileObject)' false).AddSubType(1' typeof(A)).AddSubType(2' typeof(MobileList<int>));                  m.CompileInPlace();              }' "Repeated data (a list' collection' etc) has inbuilt behaviour and cannot be used as a subclass");
Magic Number,Examples.Issues,C,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue185.cs,PopulateRun,The following statement contains a magic number: Unknown = new O(43);
Magic Number,Examples.Issues,Issue185,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue185.cs,Test,The following statement contains a magic number: Assert.Equal(43' c.Unknown.N);
Magic Number,Examples.Issues,Issue199,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue199.cs,Test,The following statement contains a magic number: Assert.Equal(2' ms.Length);
Magic Number,Examples.Issues,Issue202,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue202.cs,Execute,The following statement contains a magic number: Assert.Equal(18' bpp.Length);
Magic Number,Examples.Issues,Issue243,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue243.cs,RunTestNonNull,The following statement contains a magic number: l.Int32List = new List<int?>(new int?[] { 2' 3 });
Magic Number,Examples.Issues,Issue243,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue243.cs,RunTestNonNull,The following statement contains a magic number: l.Int32List = new List<int?>(new int?[] { 2' 3 });
Magic Number,Examples.Issues,Issue243,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue243.cs,RunTestNonNull,The following statement contains a magic number: l.Int32Array = new int?[] {4' 5};
Magic Number,Examples.Issues,Issue243,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue243.cs,RunTestNonNull,The following statement contains a magic number: l.Int32Array = new int?[] {4' 5};
Magic Number,Examples.Issues,Issue243,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue243.cs,RunTestNull,The following statement contains a magic number: l.Int32List = new List<int?>(new int?[] { 2' null' 3 });
Magic Number,Examples.Issues,Issue243,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue243.cs,RunTestNull,The following statement contains a magic number: l.Int32List = new List<int?>(new int?[] { 2' null' 3 });
Magic Number,Examples.Issues,Issue243,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue243.cs,RunTestNull,The following statement contains a magic number: l.Int32Array = new int?[] { 4' null' 5' null };
Magic Number,Examples.Issues,Issue243,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue243.cs,RunTestNull,The following statement contains a magic number: l.Int32Array = new int?[] { 4' null' 5' null };
Magic Number,Examples.Issues,Issue26,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue26.cs,RoundTripCStation,The following statement contains a magic number: Station cs = new Station(1'2)'                  clone = Serializer.DeepClone(cs);
Magic Number,Examples.Issues,Issue26,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue26.cs,RoundTripCListStations,The following statement contains a magic number: StationList list = new StationList              {                  Stations =                  {                      new Station(1'2)'                      new Station(3'4)                  }              }' clone = Serializer.DeepClone(list);
Magic Number,Examples.Issues,Issue26,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue26.cs,RoundTripCListStations,The following statement contains a magic number: StationList list = new StationList              {                  Stations =                  {                      new Station(1'2)'                      new Station(3'4)                  }              }' clone = Serializer.DeepClone(list);
Magic Number,Examples.Issues,Issue26,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue26.cs,RoundTripCListStations,The following statement contains a magic number: StationList list = new StationList              {                  Stations =                  {                      new Station(1'2)'                      new Station(3'4)                  }              }' clone = Serializer.DeepClone(list);
Magic Number,Examples.Issues,Issue26,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue26.cs,RoundTripCListStations,The following statement contains a magic number: Assert.Equal(2' clone.Stations.Count);
Magic Number,Examples.Issues,Issue26,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue26.cs,RoundTripCListStations,The following statement contains a magic number: Assert.Equal(2' clone.Stations[0].Ticket);
Magic Number,Examples.Issues,Issue26,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue26.cs,RoundTripCListStations,The following statement contains a magic number: Assert.Equal(3' clone.Stations[1].Number);
Magic Number,Examples.Issues,Issue26,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue26.cs,RoundTripCListStations,The following statement contains a magic number: Assert.Equal(4' clone.Stations[1].Ticket);
Magic Number,Examples.Issues,Issue26,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue26.cs,CheckMeaningfulErrorIfNoParameterlessCtor,The following statement contains a magic number: Program.ExpectFailure<ProtoException>(() =>              {                  WithoutParameterlessCtor obj = new WithoutParameterlessCtor(123);                  Serializer.DeepClone(obj);              }' "No parameterless constructor found for Examples.Issues.WithoutParameterlessCtor");
Magic Number,Examples.Issues,Issue26,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue26.cs,CheckMeaningfulErrorIfNoParameterlessCtor_Interface,The following statement contains a magic number: Program.ExpectFailure<ProtoException>(() =>              {                  HazGenericInterface obj = new HazGenericInterface { Data = new Foo(12) };                  Serializer.DeepClone(obj);              }' "No parameterless constructor found for Examples.Issues.Issue26+Foo");
Magic Number,Examples.Issues,Issue26,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue26.cs,TestMergeWithoutParameterlessCtor,The following statement contains a magic number: WithoutParameterlessCtor obj = new WithoutParameterlessCtor(123)'                  clone = new WithoutParameterlessCtor(456);
Magic Number,Examples.Issues,Issue26,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue26.cs,TestMergeWithoutParameterlessCtor,The following statement contains a magic number: WithoutParameterlessCtor obj = new WithoutParameterlessCtor(123)'                  clone = new WithoutParameterlessCtor(456);
Magic Number,Examples.Issues,Issue264,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue264.cs,TestNakedDecimals,The following statement contains a magic number: Test(123.45M);
Magic Number,Examples.Issues,Issue264,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue264.cs,TestNakedDoubles,The following statement contains a magic number: Test(123.45D);
Magic Number,Examples.Issues,Issue264,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue264.cs,TestNakedFloats,The following statement contains a magic number: Test(123.45F);
Magic Number,Examples.Issues,Issue265,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue265.cs,VerifyThatIntsAreHandledAppropriatelyForComparison,The following statement contains a magic number: var orig = new int[] {3' 4' 5};
Magic Number,Examples.Issues,Issue265,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue265.cs,VerifyThatIntsAreHandledAppropriatelyForComparison,The following statement contains a magic number: var orig = new int[] {3' 4' 5};
Magic Number,Examples.Issues,Issue265,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue265.cs,VerifyThatIntsAreHandledAppropriatelyForComparison,The following statement contains a magic number: var orig = new int[] {3' 4' 5};
Magic Number,Examples.Issues,Issue297,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue297.cs,TestInt32,The following statement contains a magic number: children.Add(new Node<int>("abc/def"' 2));
Magic Number,Examples.Issues,Issue297,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue297.cs,TestInt32,The following statement contains a magic number: children.Add(new Node<int>("abc/ghi"' 3));
Magic Number,Examples.Issues,Issue297,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue297.cs,TestInt32,The following statement contains a magic number: Assert.Equal(2' tree.GetChildren().Count);
Magic Number,Examples.Issues,Issue297,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue297.cs,TestInt32,The following statement contains a magic number: Assert.Equal(2' children.Count);
Magic Number,Examples.Issues,Issue297,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue297.cs,TestInt32,The following statement contains a magic number: Assert.Equal(2' children[0].Value);
Magic Number,Examples.Issues,Issue297,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue297.cs,TestInt32,The following statement contains a magic number: Assert.Equal(3' children[1].Value);
Magic Number,Examples.Issues,Issue297,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue297.cs,Issue297,The following statement contains a magic number: RuntimeTypeModel.Default.Add(typeof(Node<int>)' true).AddSubType(4' typeof(Node<int>.RootNode));
Magic Number,Examples.Issues,Issue297,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue297.cs,Issue297,The following statement contains a magic number: RuntimeTypeModel.Default.Add(typeof(Node<MyDto>)' true).AddSubType(4' typeof(Node<MyDto>.RootNode));
Magic Number,Examples.Issues,Issue297,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue297.cs,Issue297,The following statement contains a magic number: RuntimeTypeModel.Default.Add(typeof(Node<SomeNewType>)' true).AddSubType(4' typeof(Node<SomeNewType>.RootNode));
Magic Number,Examples.Issues,Issue297,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue297.cs,TestMyDTO,The following statement contains a magic number: children.Add(new Node<MyDto>("abc/def"' new MyDto { Value =  2}));
Magic Number,Examples.Issues,Issue297,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue297.cs,TestMyDTO,The following statement contains a magic number: children.Add(new Node<MyDto>("abc/ghi"' new MyDto { Value =  3}));
Magic Number,Examples.Issues,Issue297,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue297.cs,TestMyDTO,The following statement contains a magic number: Assert.Equal(2' tree.GetChildren().Count);
Magic Number,Examples.Issues,Issue297,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue297.cs,TestMyDTO,The following statement contains a magic number: Assert.Equal(2' children.Count);
Magic Number,Examples.Issues,Issue297,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue297.cs,TestMyDTO,The following statement contains a magic number: Assert.Equal(2' children[0].Value.Value);
Magic Number,Examples.Issues,Issue297,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue297.cs,TestMyDTO,The following statement contains a magic number: Assert.Equal(3' children[1].Value.Value);
Magic Number,Examples.Issues,Issue297,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue297.cs,TestListMyDTO,The following statement contains a magic number: Program.ExpectFailure<NullReferenceException>(() =>              {                  Node<List<MyDto>> tree = new Node<List<MyDto>>.RootNode("abc"' new List<MyDto> { new MyDto { Value = 1 } })' clone;                  var children = tree.GetChildren();                  children.Add(new Node<List<MyDto>>("abc/def"' new List<MyDto> { new MyDto { Value = 2 } }));                  children.Add(new Node<List<MyDto>>("abc/ghi"' new List<MyDto> { new MyDto { Value = 3 } }));                  Assert.Equal(2' tree.GetChildren().Count);                    using (var ms = new MemoryStream())                  {                      Serializer.Serialize(ms' tree);                      Assert.True(1 > 0); // I always get these args the wrong way around' so always check!                      Assert.True(ms.Length > 0); //' "stream length");                      ms.Position = 0;                      clone = Serializer.Deserialize<Node<List<MyDto>>>(ms);                  }                    Assert.Equal("abc"' clone.Key);                  Assert.Equal(1' clone.Value.Single().Value);                  children = clone.GetChildren();                  Assert.Equal(2' children.Count);                    Assert.False(children[0].HasChildren);                  Assert.Equal("abc/def"' children[0].Key);                  Assert.Equal(2' children[0].Value.Single().Value);                    Assert.False(children[1].HasChildren);                  Assert.Equal("abc/ghi"' children[1].Key);                  Assert.Equal(3' children[1].Value.Single().Value);              }' "Nested or jagged lists and arrays are not supported");
Magic Number,Examples.Issues,Issue297,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue297.cs,TestListMyDTO,The following statement contains a magic number: Program.ExpectFailure<NullReferenceException>(() =>              {                  Node<List<MyDto>> tree = new Node<List<MyDto>>.RootNode("abc"' new List<MyDto> { new MyDto { Value = 1 } })' clone;                  var children = tree.GetChildren();                  children.Add(new Node<List<MyDto>>("abc/def"' new List<MyDto> { new MyDto { Value = 2 } }));                  children.Add(new Node<List<MyDto>>("abc/ghi"' new List<MyDto> { new MyDto { Value = 3 } }));                  Assert.Equal(2' tree.GetChildren().Count);                    using (var ms = new MemoryStream())                  {                      Serializer.Serialize(ms' tree);                      Assert.True(1 > 0); // I always get these args the wrong way around' so always check!                      Assert.True(ms.Length > 0); //' "stream length");                      ms.Position = 0;                      clone = Serializer.Deserialize<Node<List<MyDto>>>(ms);                  }                    Assert.Equal("abc"' clone.Key);                  Assert.Equal(1' clone.Value.Single().Value);                  children = clone.GetChildren();                  Assert.Equal(2' children.Count);                    Assert.False(children[0].HasChildren);                  Assert.Equal("abc/def"' children[0].Key);                  Assert.Equal(2' children[0].Value.Single().Value);                    Assert.False(children[1].HasChildren);                  Assert.Equal("abc/ghi"' children[1].Key);                  Assert.Equal(3' children[1].Value.Single().Value);              }' "Nested or jagged lists and arrays are not supported");
Magic Number,Examples.Issues,Issue297,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue297.cs,TestListMyDTO,The following statement contains a magic number: Program.ExpectFailure<NullReferenceException>(() =>              {                  Node<List<MyDto>> tree = new Node<List<MyDto>>.RootNode("abc"' new List<MyDto> { new MyDto { Value = 1 } })' clone;                  var children = tree.GetChildren();                  children.Add(new Node<List<MyDto>>("abc/def"' new List<MyDto> { new MyDto { Value = 2 } }));                  children.Add(new Node<List<MyDto>>("abc/ghi"' new List<MyDto> { new MyDto { Value = 3 } }));                  Assert.Equal(2' tree.GetChildren().Count);                    using (var ms = new MemoryStream())                  {                      Serializer.Serialize(ms' tree);                      Assert.True(1 > 0); // I always get these args the wrong way around' so always check!                      Assert.True(ms.Length > 0); //' "stream length");                      ms.Position = 0;                      clone = Serializer.Deserialize<Node<List<MyDto>>>(ms);                  }                    Assert.Equal("abc"' clone.Key);                  Assert.Equal(1' clone.Value.Single().Value);                  children = clone.GetChildren();                  Assert.Equal(2' children.Count);                    Assert.False(children[0].HasChildren);                  Assert.Equal("abc/def"' children[0].Key);                  Assert.Equal(2' children[0].Value.Single().Value);                    Assert.False(children[1].HasChildren);                  Assert.Equal("abc/ghi"' children[1].Key);                  Assert.Equal(3' children[1].Value.Single().Value);              }' "Nested or jagged lists and arrays are not supported");
Magic Number,Examples.Issues,Issue297,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue297.cs,TestListMyDTO,The following statement contains a magic number: Program.ExpectFailure<NullReferenceException>(() =>              {                  Node<List<MyDto>> tree = new Node<List<MyDto>>.RootNode("abc"' new List<MyDto> { new MyDto { Value = 1 } })' clone;                  var children = tree.GetChildren();                  children.Add(new Node<List<MyDto>>("abc/def"' new List<MyDto> { new MyDto { Value = 2 } }));                  children.Add(new Node<List<MyDto>>("abc/ghi"' new List<MyDto> { new MyDto { Value = 3 } }));                  Assert.Equal(2' tree.GetChildren().Count);                    using (var ms = new MemoryStream())                  {                      Serializer.Serialize(ms' tree);                      Assert.True(1 > 0); // I always get these args the wrong way around' so always check!                      Assert.True(ms.Length > 0); //' "stream length");                      ms.Position = 0;                      clone = Serializer.Deserialize<Node<List<MyDto>>>(ms);                  }                    Assert.Equal("abc"' clone.Key);                  Assert.Equal(1' clone.Value.Single().Value);                  children = clone.GetChildren();                  Assert.Equal(2' children.Count);                    Assert.False(children[0].HasChildren);                  Assert.Equal("abc/def"' children[0].Key);                  Assert.Equal(2' children[0].Value.Single().Value);                    Assert.False(children[1].HasChildren);                  Assert.Equal("abc/ghi"' children[1].Key);                  Assert.Equal(3' children[1].Value.Single().Value);              }' "Nested or jagged lists and arrays are not supported");
Magic Number,Examples.Issues,Issue297,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue297.cs,TestListMyDTO,The following statement contains a magic number: Program.ExpectFailure<NullReferenceException>(() =>              {                  Node<List<MyDto>> tree = new Node<List<MyDto>>.RootNode("abc"' new List<MyDto> { new MyDto { Value = 1 } })' clone;                  var children = tree.GetChildren();                  children.Add(new Node<List<MyDto>>("abc/def"' new List<MyDto> { new MyDto { Value = 2 } }));                  children.Add(new Node<List<MyDto>>("abc/ghi"' new List<MyDto> { new MyDto { Value = 3 } }));                  Assert.Equal(2' tree.GetChildren().Count);                    using (var ms = new MemoryStream())                  {                      Serializer.Serialize(ms' tree);                      Assert.True(1 > 0); // I always get these args the wrong way around' so always check!                      Assert.True(ms.Length > 0); //' "stream length");                      ms.Position = 0;                      clone = Serializer.Deserialize<Node<List<MyDto>>>(ms);                  }                    Assert.Equal("abc"' clone.Key);                  Assert.Equal(1' clone.Value.Single().Value);                  children = clone.GetChildren();                  Assert.Equal(2' children.Count);                    Assert.False(children[0].HasChildren);                  Assert.Equal("abc/def"' children[0].Key);                  Assert.Equal(2' children[0].Value.Single().Value);                    Assert.False(children[1].HasChildren);                  Assert.Equal("abc/ghi"' children[1].Key);                  Assert.Equal(3' children[1].Value.Single().Value);              }' "Nested or jagged lists and arrays are not supported");
Magic Number,Examples.Issues,Issue297,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue297.cs,TestListMyDTO,The following statement contains a magic number: Program.ExpectFailure<NullReferenceException>(() =>              {                  Node<List<MyDto>> tree = new Node<List<MyDto>>.RootNode("abc"' new List<MyDto> { new MyDto { Value = 1 } })' clone;                  var children = tree.GetChildren();                  children.Add(new Node<List<MyDto>>("abc/def"' new List<MyDto> { new MyDto { Value = 2 } }));                  children.Add(new Node<List<MyDto>>("abc/ghi"' new List<MyDto> { new MyDto { Value = 3 } }));                  Assert.Equal(2' tree.GetChildren().Count);                    using (var ms = new MemoryStream())                  {                      Serializer.Serialize(ms' tree);                      Assert.True(1 > 0); // I always get these args the wrong way around' so always check!                      Assert.True(ms.Length > 0); //' "stream length");                      ms.Position = 0;                      clone = Serializer.Deserialize<Node<List<MyDto>>>(ms);                  }                    Assert.Equal("abc"' clone.Key);                  Assert.Equal(1' clone.Value.Single().Value);                  children = clone.GetChildren();                  Assert.Equal(2' children.Count);                    Assert.False(children[0].HasChildren);                  Assert.Equal("abc/def"' children[0].Key);                  Assert.Equal(2' children[0].Value.Single().Value);                    Assert.False(children[1].HasChildren);                  Assert.Equal("abc/ghi"' children[1].Key);                  Assert.Equal(3' children[1].Value.Single().Value);              }' "Nested or jagged lists and arrays are not supported");
Magic Number,Examples.Issues,Issue297,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue297.cs,TestSomeNewType,The following statement contains a magic number: children.Add(new Node<SomeNewType>("abc/def"' new SomeNewType { Items = { new MyDto { Value = 2 } } }));
Magic Number,Examples.Issues,Issue297,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue297.cs,TestSomeNewType,The following statement contains a magic number: children.Add(new Node<SomeNewType>("abc/ghi"' new SomeNewType { Items = { new MyDto { Value = 3 } } }));
Magic Number,Examples.Issues,Issue297,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue297.cs,TestSomeNewType,The following statement contains a magic number: Assert.Equal(2' tree.GetChildren().Count);
Magic Number,Examples.Issues,Issue297,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue297.cs,TestSomeNewType,The following statement contains a magic number: Assert.Equal(2' children.Count);
Magic Number,Examples.Issues,Issue297,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue297.cs,TestSomeNewType,The following statement contains a magic number: Assert.Equal(2' children[0].Value.Items.Single().Value);
Magic Number,Examples.Issues,Issue297,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue297.cs,TestSomeNewType,The following statement contains a magic number: Assert.Equal(3' children[1].Value.Items.Single().Value);
Magic Number,Examples.Issues,Issue354,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue354.cs,TestRegularStackQueue,The following statement contains a magic number: orig.Stack.Push(2);
Magic Number,Examples.Issues,Issue354,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue354.cs,TestRegularStackQueue,The following statement contains a magic number: orig.Queue.Enqueue(3);
Magic Number,Examples.Issues,Issue354,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue354.cs,TestRegularStackQueue,The following statement contains a magic number: orig.Queue.Enqueue(4);
Magic Number,Examples.Issues,Issue354,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue354.cs,TestRegular,The following statement contains a magic number: Assert.Equal(2' data.Queue.Count);
Magic Number,Examples.Issues,Issue354,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue354.cs,TestRegular,The following statement contains a magic number: Assert.Equal(2' data.Stack.Count);
Magic Number,Examples.Issues,Issue354,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue354.cs,TestRegular,The following statement contains a magic number: Assert.Equal(3' data.Queue.Dequeue());
Magic Number,Examples.Issues,Issue354,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue354.cs,TestRegular,The following statement contains a magic number: Assert.Equal(4' data.Queue.Dequeue());
Magic Number,Examples.Issues,Issue354,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue354.cs,TestRegular,The following statement contains a magic number: Assert.Equal(2' data.Stack.Pop());
Magic Number,Examples.Issues,Issue354,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue354.cs,CreateData,The following statement contains a magic number: data.Queue.Enqueue(2);
Magic Number,Examples.Issues,Issue354,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue354.cs,CreateData,The following statement contains a magic number: data.Dictionary.AddOrUpdate(2' "def"' (x' y) => y);
Magic Number,Examples.Issues,Issue354,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue354.cs,CreateData,The following statement contains a magic number: data.Stack.Push(2);
Magic Number,Examples.Issues,Issue354,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue354.cs,TestData,The following statement contains a magic number: Assert.Equal(2' data.Queue.Count);
Magic Number,Examples.Issues,Issue354,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue354.cs,TestData,The following statement contains a magic number: Assert.Equal(2' val);
Magic Number,Examples.Issues,Issue354,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue354.cs,TestData,The following statement contains a magic number: Assert.Equal(2' data.Bag.Count);
Magic Number,Examples.Issues,Issue354,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue354.cs,TestData,The following statement contains a magic number: Assert.Equal(2' data.Dictionary.Count);
Magic Number,Examples.Issues,Issue354,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue354.cs,TestData,The following statement contains a magic number: Assert.True(data.Dictionary.TryGetValue(2' out s));
Magic Number,Examples.Issues,Issue354,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue354.cs,TestData,The following statement contains a magic number: Assert.Equal(2' data.Stack.Count);
Magic Number,Examples.Issues,Issue354,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue354.cs,TestData,The following statement contains a magic number: Assert.Equal(2' val);
Magic Number,Examples.Issues,Issue354,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue354.cs,CreateImmutableData,The following statement contains a magic number: data.Queue = data.Queue.Enqueue(2);
Magic Number,Examples.Issues,Issue354,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue354.cs,CreateImmutableData,The following statement contains a magic number: data.Dictionary = data.Dictionary.SetItem(2' "def");
Magic Number,Examples.Issues,Issue354,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue354.cs,CreateImmutableData,The following statement contains a magic number: data.Stack = data.Stack.Push(2);
Magic Number,Examples.Issues,Issue354,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue354.cs,CreateImmutableData,The following statement contains a magic number: data.List = data.List.Add(42);
Magic Number,Examples.Issues,Issue354,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue354.cs,CreateImmutableData,The following statement contains a magic number: data.List = data.List.Add(43);
Magic Number,Examples.Issues,Issue354,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue354.cs,TestData,The following statement contains a magic number: Assert.Equal(2' val);
Magic Number,Examples.Issues,Issue354,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue354.cs,TestData,The following statement contains a magic number: Assert.Equal(2' data.Set.Count);
Magic Number,Examples.Issues,Issue354,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue354.cs,TestData,The following statement contains a magic number: Assert.Equal(2' data.Dictionary.Count);
Magic Number,Examples.Issues,Issue354,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue354.cs,TestData,The following statement contains a magic number: Assert.True(data.Dictionary.TryGetValue(2' out s));
Magic Number,Examples.Issues,Issue354,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue354.cs,TestData,The following statement contains a magic number: Assert.Equal(2' val);
Magic Number,Examples.Issues,Issue354,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue354.cs,TestData,The following statement contains a magic number: Assert.Equal(2' data.List.Count);
Magic Number,Examples.Issues,Issue354,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue354.cs,TestData,The following statement contains a magic number: Assert.Equal(42' data.List[0]);
Magic Number,Examples.Issues,Issue354,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue354.cs,TestData,The following statement contains a magic number: Assert.Equal(43' data.List[1]);
Magic Number,Examples.Issues,Issue367,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue367.cs,LockContention_DTO,The following statement contains a magic number: var tasks = new List<Task>(50000);
Magic Number,Examples.Issues,Issue367,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue367.cs,LockContention_DTO,The following statement contains a magic number: i < 50000
Magic Number,Examples.Issues,Issue367,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue367.cs,LockContention_DTO,The following statement contains a magic number: Assert.True(1 <= 2);
Magic Number,Examples.Issues,Issue367,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue367.cs,LockContention_DTO,The following statement contains a magic number: Assert.True(model.LockCount <= 50);
Magic Number,Examples.Issues,Issue367,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue367.cs,LockContention_BasicType,The following statement contains a magic number: var tasks = new List<Task>(50000);
Magic Number,Examples.Issues,Issue367,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue367.cs,LockContention_BasicType,The following statement contains a magic number: i < 50000
Magic Number,Examples.Issues,Issue367,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue367.cs,LockContention_BasicType,The following statement contains a magic number: Assert.True(1 <= 2);
Magic Number,Examples.Issues,Issue367,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue367.cs,LockContention_BasicType,The following statement contains a magic number: Assert.True(model.LockCount <= 50);
Magic Number,Examples.Issues,Issue367,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue367.cs,LockContention_Dictionary,The following statement contains a magic number: var tasks = new List<Task>(50000);
Magic Number,Examples.Issues,Issue367,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue367.cs,LockContention_Dictionary,The following statement contains a magic number: Dictionary<string' int> d = new Dictionary<string' int>              {                  { "abc"' 123}' {"def"' 456}              };
Magic Number,Examples.Issues,Issue367,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue367.cs,LockContention_Dictionary,The following statement contains a magic number: Dictionary<string' int> d = new Dictionary<string' int>              {                  { "abc"' 123}' {"def"' 456}              };
Magic Number,Examples.Issues,Issue367,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue367.cs,LockContention_Dictionary,The following statement contains a magic number: i < 50000
Magic Number,Examples.Issues,Issue367,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue367.cs,LockContention_Dictionary,The following statement contains a magic number: Assert.True(1 <= 2);
Magic Number,Examples.Issues,Issue367,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue367.cs,LockContention_Dictionary,The following statement contains a magic number: Assert.True(model.LockCount <= 50);
Magic Number,Examples.Issues,Issue374,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue374.cs,ReadLengthPrefixProducesCorrectLengthComparedToStreamPosition,The following statement contains a magic number: const int arraySize = 7000 * 100;
Magic Number,Examples.Issues,Issue374,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue374.cs,ReadLengthPrefixProducesCorrectLengthComparedToStreamPosition,The following statement contains a magic number: const int arraySize = 7000 * 100;
Magic Number,Examples.Issues,Issue408,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue408.cs,ConfigureTypeModel,The following statement contains a magic number: metaType.AddField(2' "X");
Magic Number,Examples.Issues,Issue408,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue408.cs,ConfigureTypeModel,The following statement contains a magic number: metaType.AddField(3' "Y");
Magic Number,Examples.Issues,Issue408,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue408.cs,TestBoxedValueType,The following statement contains a magic number: var obj = new Container              {                  Value = new Point {X = 42' Y = 9001}              };
Magic Number,Examples.Issues,Issue408,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue408.cs,TestBoxedValueType,The following statement contains a magic number: var obj = new Container              {                  Value = new Point {X = 42' Y = 9001}              };
Magic Number,Examples.Issues,Issue408,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue408.cs,TestBoxedValueType,The following statement contains a magic number: Assert.Equal(42' point.X);
Magic Number,Examples.Issues,Issue408,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue408.cs,TestBoxedValueType,The following statement contains a magic number: Assert.Equal(9001' point.Y);
Magic Number,Examples.Issues,Issue408,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue408.cs,TestPoint,The following statement contains a magic number: var obj = new Point {X = 1' Y = 2};
Magic Number,Examples.Issues,Issue408,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue408.cs,TestPoint,The following statement contains a magic number: Assert.Equal(2' point.Y);
Magic Number,Examples.Issues,Issue54,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue54.cs,TestNestedLists,The following statement contains a magic number: Test54 obj = new Test54                  {                      Lists =                          new Dictionary<float' List<int>> {                  {123.45F' new List<int> {1'2'3}}'                  {678.90F' new List<int> {4'5'6}}'                  }                  }' clone = model.DeepClone(obj);
Magic Number,Examples.Issues,Issue54,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue54.cs,TestNestedLists,The following statement contains a magic number: Test54 obj = new Test54                  {                      Lists =                          new Dictionary<float' List<int>> {                  {123.45F' new List<int> {1'2'3}}'                  {678.90F' new List<int> {4'5'6}}'                  }                  }' clone = model.DeepClone(obj);
Magic Number,Examples.Issues,Issue54,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue54.cs,TestNestedLists,The following statement contains a magic number: Test54 obj = new Test54                  {                      Lists =                          new Dictionary<float' List<int>> {                  {123.45F' new List<int> {1'2'3}}'                  {678.90F' new List<int> {4'5'6}}'                  }                  }' clone = model.DeepClone(obj);
Magic Number,Examples.Issues,Issue54,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue54.cs,TestNestedLists,The following statement contains a magic number: Test54 obj = new Test54                  {                      Lists =                          new Dictionary<float' List<int>> {                  {123.45F' new List<int> {1'2'3}}'                  {678.90F' new List<int> {4'5'6}}'                  }                  }' clone = model.DeepClone(obj);
Magic Number,Examples.Issues,Issue54,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue54.cs,TestNestedLists,The following statement contains a magic number: Test54 obj = new Test54                  {                      Lists =                          new Dictionary<float' List<int>> {                  {123.45F' new List<int> {1'2'3}}'                  {678.90F' new List<int> {4'5'6}}'                  }                  }' clone = model.DeepClone(obj);
Magic Number,Examples.Issues,Issue54,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue54.cs,TestNestedLists,The following statement contains a magic number: Test54 obj = new Test54                  {                      Lists =                          new Dictionary<float' List<int>> {                  {123.45F' new List<int> {1'2'3}}'                  {678.90F' new List<int> {4'5'6}}'                  }                  }' clone = model.DeepClone(obj);
Magic Number,Examples.Issues,Issue54,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue54.cs,TestNestedLists,The following statement contains a magic number: Test54 obj = new Test54                  {                      Lists =                          new Dictionary<float' List<int>> {                  {123.45F' new List<int> {1'2'3}}'                  {678.90F' new List<int> {4'5'6}}'                  }                  }' clone = model.DeepClone(obj);
Magic Number,Examples.Issues,Issue62,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue62.cs,RunTest,The following statement contains a magic number: Random rand = new Random(123456);
Magic Number,Examples.Issues,Issue62,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue62.cs,RunTest,The following statement contains a magic number: CacheItem ci = new CacheItem                  {                      Id = rand.Next(10000)'                      AnotherNumber = rand.Next(10000)                  };
Magic Number,Examples.Issues,Issue62,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue62.cs,RunTest,The following statement contains a magic number: CacheItem ci = new CacheItem                  {                      Id = rand.Next(10000)'                      AnotherNumber = rand.Next(10000)                  };
Magic Number,Examples.Issues,Issue62,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue62.cs,RunTest,The following statement contains a magic number: int tail = rand.Next(1' 50);
Magic Number,Examples.Issues,Issue62,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue62.cs,RunTest,The following statement contains a magic number: j < 100
Magic Number,Examples.Issues,Issue62,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue62.cs,RunTest,The following statement contains a magic number: i < 40
Magic Number,Examples.Issues,Issue62,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue62.cs,NextString,The following statement contains a magic number: int len = random.Next(4' 10);
Magic Number,Examples.Issues,Issue62,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue62.cs,NextString,The following statement contains a magic number: int len = random.Next(4' 10);
Magic Number,Examples.Issues,Issue70,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue70.cs,SerializeWithLengthPrefixShouldWorkWithBase128,The following statement contains a magic number: var original = new Strange { Foo = "abc"' Bar = 123 };
Magic Number,Examples.Issues,Issue70,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue70.cs,SerializeWithLengthPrefixShouldWorkWithFixed32,The following statement contains a magic number: var original = new Strange { Foo = "abc"' Bar = 123 };
Magic Number,Examples.Issues,Issue80,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue80.cs,Execute,The following statement contains a magic number: Assert.True(ProtoBuf.Serializer.TryReadLengthPrefix(textStream.GetBuffer()' 0' 5' ProtoBuf.PrefixStyle.Fixed32' out int len32_1)' "len32 - buffer");
Magic Number,Examples.Issues,Issue80,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue80.cs,Execute,The following statement contains a magic number: Assert.True(ProtoBuf.Serializer.TryReadLengthPrefix(textStream.GetBuffer()' 0' 5' ProtoBuf.PrefixStyle.Base128' out int len128_1));
Magic Number,Examples.Issues,SO11080108,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO11080108.cs,Execute,The following statement contains a magic number: byte[] buffer = { 9' 8' 5' 26' 5' 24' 238' 98' 32' 1 };
Magic Number,Examples.Issues,SO11080108,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO11080108.cs,Execute,The following statement contains a magic number: byte[] buffer = { 9' 8' 5' 26' 5' 24' 238' 98' 32' 1 };
Magic Number,Examples.Issues,SO11080108,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO11080108.cs,Execute,The following statement contains a magic number: byte[] buffer = { 9' 8' 5' 26' 5' 24' 238' 98' 32' 1 };
Magic Number,Examples.Issues,SO11080108,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO11080108.cs,Execute,The following statement contains a magic number: byte[] buffer = { 9' 8' 5' 26' 5' 24' 238' 98' 32' 1 };
Magic Number,Examples.Issues,SO11080108,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO11080108.cs,Execute,The following statement contains a magic number: byte[] buffer = { 9' 8' 5' 26' 5' 24' 238' 98' 32' 1 };
Magic Number,Examples.Issues,SO11080108,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO11080108.cs,Execute,The following statement contains a magic number: byte[] buffer = { 9' 8' 5' 26' 5' 24' 238' 98' 32' 1 };
Magic Number,Examples.Issues,SO11080108,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO11080108.cs,Execute,The following statement contains a magic number: byte[] buffer = { 9' 8' 5' 26' 5' 24' 238' 98' 32' 1 };
Magic Number,Examples.Issues,SO11080108,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO11080108.cs,Execute,The following statement contains a magic number: byte[] buffer = { 9' 8' 5' 26' 5' 24' 238' 98' 32' 1 };
Magic Number,Examples.Issues,SO11080108,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO11080108.cs,Execute,The following statement contains a magic number: byte[] buffer = { 9' 8' 5' 26' 5' 24' 238' 98' 32' 1 };
Magic Number,Examples.Issues,SO11080108,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO11080108.cs,Execute,The following statement contains a magic number: Assert.Equal(5' resp.Type);
Magic Number,Examples.Issues,SO11080108,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO11080108.cs,Execute,The following statement contains a magic number: Assert.Equal(12654' resp.v3dDelta[0].ask);
Magic Number,Examples.Issues,SO11317045,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO11317045.cs,Execute,The following statement contains a magic number: b.Data = new List<byte[]>              {                  Enumerable.Range(0' 1999).Select(v => (byte)v).ToArray()'                  Enumerable.Range(2000' 3999).Select(v => (byte)v).ToArray()'              };
Magic Number,Examples.Issues,SO11317045,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO11317045.cs,Execute,The following statement contains a magic number: b.Data = new List<byte[]>              {                  Enumerable.Range(0' 1999).Select(v => (byte)v).ToArray()'                  Enumerable.Range(2000' 3999).Select(v => (byte)v).ToArray()'              };
Magic Number,Examples.Issues,SO11317045,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO11317045.cs,Execute,The following statement contains a magic number: b.Data = new List<byte[]>              {                  Enumerable.Range(0' 1999).Select(v => (byte)v).ToArray()'                  Enumerable.Range(2000' 3999).Select(v => (byte)v).ToArray()'              };
Magic Number,Examples.Issues,SO11641262,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO11641262.cs,Execute,The following statement contains a magic number: model.Add(typeof (FooData)' true)                  .AddSubType(1' typeof (FooData<string>))                  .AddSubType(2' typeof (FooData<int>))                  .AddSubType(3' typeof (FooData<SomeOtherType>));
Magic Number,Examples.Issues,SO11641262,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO11641262.cs,Execute,The following statement contains a magic number: model.Add(typeof (FooData)' true)                  .AddSubType(1' typeof (FooData<string>))                  .AddSubType(2' typeof (FooData<int>))                  .AddSubType(3' typeof (FooData<SomeOtherType>));
Magic Number,Examples.Issues,SO11656439,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO11656439.cs,CheckContractSubclass,The following statement contains a magic number: Assert.True(2 > 0);
Magic Number,Examples.Issues,SO11730610,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO11730610.cs,Execute,The following statement contains a magic number: var resp = new SomeResponse              {                  Rows = new List<SomeClassRow>                  {                      new SomeClassRow { Name = "abc"' SomeId = 123' Value = 456 }'                      new SomeClassRow { Name = "def"' SomeId = 789' Value = 101112}'                      new SomeClassRow { Name = "ghi"' SomeId = 131415' Value = 161718}'                  }              };
Magic Number,Examples.Issues,SO11730610,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO11730610.cs,Execute,The following statement contains a magic number: var resp = new SomeResponse              {                  Rows = new List<SomeClassRow>                  {                      new SomeClassRow { Name = "abc"' SomeId = 123' Value = 456 }'                      new SomeClassRow { Name = "def"' SomeId = 789' Value = 101112}'                      new SomeClassRow { Name = "ghi"' SomeId = 131415' Value = 161718}'                  }              };
Magic Number,Examples.Issues,SO11730610,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO11730610.cs,Execute,The following statement contains a magic number: var resp = new SomeResponse              {                  Rows = new List<SomeClassRow>                  {                      new SomeClassRow { Name = "abc"' SomeId = 123' Value = 456 }'                      new SomeClassRow { Name = "def"' SomeId = 789' Value = 101112}'                      new SomeClassRow { Name = "ghi"' SomeId = 131415' Value = 161718}'                  }              };
Magic Number,Examples.Issues,SO11730610,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO11730610.cs,Execute,The following statement contains a magic number: var resp = new SomeResponse              {                  Rows = new List<SomeClassRow>                  {                      new SomeClassRow { Name = "abc"' SomeId = 123' Value = 456 }'                      new SomeClassRow { Name = "def"' SomeId = 789' Value = 101112}'                      new SomeClassRow { Name = "ghi"' SomeId = 131415' Value = 161718}'                  }              };
Magic Number,Examples.Issues,SO11730610,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO11730610.cs,Execute,The following statement contains a magic number: var resp = new SomeResponse              {                  Rows = new List<SomeClassRow>                  {                      new SomeClassRow { Name = "abc"' SomeId = 123' Value = 456 }'                      new SomeClassRow { Name = "def"' SomeId = 789' Value = 101112}'                      new SomeClassRow { Name = "ghi"' SomeId = 131415' Value = 161718}'                  }              };
Magic Number,Examples.Issues,SO11730610,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO11730610.cs,Execute,The following statement contains a magic number: var resp = new SomeResponse              {                  Rows = new List<SomeClassRow>                  {                      new SomeClassRow { Name = "abc"' SomeId = 123' Value = 456 }'                      new SomeClassRow { Name = "def"' SomeId = 789' Value = 101112}'                      new SomeClassRow { Name = "ghi"' SomeId = 131415' Value = 161718}'                  }              };
Magic Number,Examples.Issues,SO11730610,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO11730610.cs,Execute,The following statement contains a magic number: ((IDataRow) resp.Rows[1]).Evil = 2;
Magic Number,Examples.Issues,SO11730610,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO11730610.cs,Execute,The following statement contains a magic number: ((IDataRow) resp.Rows[2]).Evil = 3;
Magic Number,Examples.Issues,SO11730610,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO11730610.cs,Execute,The following statement contains a magic number: ((IDataRow) resp.Rows[2]).Evil = 3;
Magic Number,Examples.Issues,SO11730610,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO11730610.cs,Execute,The following statement contains a magic number: Assert.Equal(3' clone.Rows.Count);
Magic Number,Examples.Issues,SO11730610,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO11730610.cs,Execute,The following statement contains a magic number: Assert.Equal(456' clone.Rows[0].Value);
Magic Number,Examples.Issues,SO11730610,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO11730610.cs,Execute,The following statement contains a magic number: Assert.Equal(131415' clone.Rows[2].SomeId);
Magic Number,Examples.Issues,SO11730610,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO11730610.cs,Execute,The following statement contains a magic number: Assert.Equal(131415' clone.Rows[2].SomeId);
Magic Number,Examples.Issues,SO11730610,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO11730610.cs,Execute,The following statement contains a magic number: Assert.Equal(2' ((IDataRow) resp.Rows[1]).Evil);
Magic Number,Examples.Issues,SO11730610,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO11730610.cs,Execute,The following statement contains a magic number: Assert.Equal(3' ((IDataRow) resp.Rows[2]).Evil);
Magic Number,Examples.Issues,SO11730610,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO11730610.cs,Execute,The following statement contains a magic number: Assert.Equal(3' ((IDataRow) resp.Rows[2]).Evil);
Magic Number,Examples.Issues,SO11896228,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO11896228.cs,AnonymousTypesCanRoundTrip,The following statement contains a magic number: var obj = new {X = 123' Y = "abc"};
Magic Number,Examples.Issues,SO11896228,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO11896228.cs,AnonymousTypesCanRoundTrip,The following statement contains a magic number: Assert.Equal(123' clone.X);
Magic Number,Examples.Issues,SO11896228,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO11896228.cs,AnonymousTypesAreEquivalent_Auto,The following statement contains a magic number: var obj = new { X = 123' Y = "abc" };
Magic Number,Examples.Issues,SO11896228,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO11896228.cs,AnonymousTypesAreEquivalent_Auto,The following statement contains a magic number: Assert.Equal(123' clone.X);
Magic Number,Examples.Issues,SO11896228,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO11896228.cs,AnonymousTypesAreEquivalent_Manual,The following statement contains a magic number: var obj = new { X = 123' Y = "abc" };
Magic Number,Examples.Issues,SO11896228,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO11896228.cs,TestAnonTypeEquiv,The following statement contains a magic number: Assert.Equal(123' clone.X);
Magic Number,Examples.Issues,SO13162642,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO13162642.cs,Execute,The following statement contains a magic number: Serializer.Serialize<IEnumerable<DTO>>(f' GenerateData(1000000));
Magic Number,Examples.Issues,SO13162642,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO13162642.cs,ExecuteWorkaround,The following statement contains a magic number: GenerateData(1000000)
Magic Number,Examples.Issues,SO13162642,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO13162642.cs,GenerateData,The following statement contains a magic number: var dto = new DTO { Data = new byte[1101] };
Magic Number,Examples.Issues,SO13275299,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO13275299.cs,ExecSystemDrawing,The following statement contains a magic number: var obj = new Foo              {                  Points = new List<System.Drawing.Point>                  {                      new System.Drawing.Point(1'2)'                      new System.Drawing.Point(3'4)'                      new System.Drawing.Point(5'6)'                  }              };
Magic Number,Examples.Issues,SO13275299,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO13275299.cs,ExecSystemDrawing,The following statement contains a magic number: var obj = new Foo              {                  Points = new List<System.Drawing.Point>                  {                      new System.Drawing.Point(1'2)'                      new System.Drawing.Point(3'4)'                      new System.Drawing.Point(5'6)'                  }              };
Magic Number,Examples.Issues,SO13275299,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO13275299.cs,ExecSystemDrawing,The following statement contains a magic number: var obj = new Foo              {                  Points = new List<System.Drawing.Point>                  {                      new System.Drawing.Point(1'2)'                      new System.Drawing.Point(3'4)'                      new System.Drawing.Point(5'6)'                  }              };
Magic Number,Examples.Issues,SO13275299,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO13275299.cs,ExecSystemDrawing,The following statement contains a magic number: var obj = new Foo              {                  Points = new List<System.Drawing.Point>                  {                      new System.Drawing.Point(1'2)'                      new System.Drawing.Point(3'4)'                      new System.Drawing.Point(5'6)'                  }              };
Magic Number,Examples.Issues,SO13275299,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO13275299.cs,ExecSystemDrawing,The following statement contains a magic number: var obj = new Foo              {                  Points = new List<System.Drawing.Point>                  {                      new System.Drawing.Point(1'2)'                      new System.Drawing.Point(3'4)'                      new System.Drawing.Point(5'6)'                  }              };
Magic Number,Examples.Issues,SO13275299,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO13275299.cs,ExecSystemDrawing,The following statement contains a magic number: Assert.Equal(3' clone.Points.Count);
Magic Number,Examples.Issues,SO13275299,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO13275299.cs,ExecSystemDrawing,The following statement contains a magic number: Assert.Equal(2' clone.Points[0].Y);
Magic Number,Examples.Issues,SO13275299,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO13275299.cs,ExecSystemDrawing,The following statement contains a magic number: Assert.Equal(3' clone.Points[1].X);
Magic Number,Examples.Issues,SO13275299,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO13275299.cs,ExecSystemDrawing,The following statement contains a magic number: Assert.Equal(4' clone.Points[1].Y);
Magic Number,Examples.Issues,SO13275299,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO13275299.cs,ExecSystemDrawing,The following statement contains a magic number: Assert.Equal(5' clone.Points[2].X);
Magic Number,Examples.Issues,SO13275299,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO13275299.cs,ExecSystemDrawing,The following statement contains a magic number: Assert.Equal(5' clone.Points[2].X);
Magic Number,Examples.Issues,SO13275299,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO13275299.cs,ExecSystemDrawing,The following statement contains a magic number: Assert.Equal(6' clone.Points[2].Y);
Magic Number,Examples.Issues,SO13275299,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO13275299.cs,ExecSystemDrawing,The following statement contains a magic number: Assert.Equal(6' clone.Points[2].Y);
Magic Number,Examples.Issues,SO13275299,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO13275299.cs,ExecSystemWindows,The following statement contains a magic number: var obj = new Bar              {                  Points = new List<System.Windows.Point>                  {                      new System.Windows.Point(1'2)'                      new System.Windows.Point(3'4)'                      new System.Windows.Point(5'6)'                  }              };
Magic Number,Examples.Issues,SO13275299,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO13275299.cs,ExecSystemWindows,The following statement contains a magic number: var obj = new Bar              {                  Points = new List<System.Windows.Point>                  {                      new System.Windows.Point(1'2)'                      new System.Windows.Point(3'4)'                      new System.Windows.Point(5'6)'                  }              };
Magic Number,Examples.Issues,SO13275299,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO13275299.cs,ExecSystemWindows,The following statement contains a magic number: var obj = new Bar              {                  Points = new List<System.Windows.Point>                  {                      new System.Windows.Point(1'2)'                      new System.Windows.Point(3'4)'                      new System.Windows.Point(5'6)'                  }              };
Magic Number,Examples.Issues,SO13275299,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO13275299.cs,ExecSystemWindows,The following statement contains a magic number: var obj = new Bar              {                  Points = new List<System.Windows.Point>                  {                      new System.Windows.Point(1'2)'                      new System.Windows.Point(3'4)'                      new System.Windows.Point(5'6)'                  }              };
Magic Number,Examples.Issues,SO13275299,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO13275299.cs,ExecSystemWindows,The following statement contains a magic number: var obj = new Bar              {                  Points = new List<System.Windows.Point>                  {                      new System.Windows.Point(1'2)'                      new System.Windows.Point(3'4)'                      new System.Windows.Point(5'6)'                  }              };
Magic Number,Examples.Issues,SO13275299,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO13275299.cs,ExecSystemWindows,The following statement contains a magic number: Assert.Equal(3' clone.Points.Count);
Magic Number,Examples.Issues,SO13275299,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO13275299.cs,ExecSystemWindows,The following statement contains a magic number: Assert.Equal(2' clone.Points[0].Y);
Magic Number,Examples.Issues,SO13275299,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO13275299.cs,ExecSystemWindows,The following statement contains a magic number: Assert.Equal(3' clone.Points[1].X);
Magic Number,Examples.Issues,SO13275299,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO13275299.cs,ExecSystemWindows,The following statement contains a magic number: Assert.Equal(4' clone.Points[1].Y);
Magic Number,Examples.Issues,SO13275299,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO13275299.cs,ExecSystemWindows,The following statement contains a magic number: Assert.Equal(5' clone.Points[2].X);
Magic Number,Examples.Issues,SO13275299,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO13275299.cs,ExecSystemWindows,The following statement contains a magic number: Assert.Equal(5' clone.Points[2].X);
Magic Number,Examples.Issues,SO13275299,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO13275299.cs,ExecSystemWindows,The following statement contains a magic number: Assert.Equal(6' clone.Points[2].Y);
Magic Number,Examples.Issues,SO13275299,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO13275299.cs,ExecSystemWindows,The following statement contains a magic number: Assert.Equal(6' clone.Points[2].Y);
Magic Number,Examples.Issues,SO13783894,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO13783894.cs,ConfigureBasicEnum,The following statement contains a magic number: Assert.Equal(2' clone1.Value);
Magic Number,Examples.Issues,SO13783894,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO13783894.cs,ConfigureBasicEnum,The following statement contains a magic number: Assert.Equal(3' clone2.Value);
Magic Number,Examples.Issues,SO13783894,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO13783894.cs,ConfigureExplicitEnumValuesAtRuntime,The following statement contains a magic number: mt.SetEnumValues(new[]              {// these **do not** change the serialized values                  new EnumMember(1' "Default")'                  new EnumMember((MyEnum)10' "Foo")'              });
Magic Number,Examples.Issues,SO13783894,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO13783894.cs,ConfigureExplicitEnumValuesAtRuntime,The following statement contains a magic number: Assert.Equal(2' clone1.Value);
Magic Number,Examples.Issues,SO13783894,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO13783894.cs,ConfigureExplicitEnumValuesAtRuntime,The following statement contains a magic number: Assert.Equal(3' clone2.Value);
Magic Number,Examples.Issues,SO14020284,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO14020284.cs,ExecuteImpl,The following statement contains a magic number: model.Serialize(ms' new EncapsulatedOuter { X = 123' Inner = new EncapsulatedInner { Y = 456 } });
Magic Number,Examples.Issues,SO14020284,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO14020284.cs,ExecuteImpl,The following statement contains a magic number: model.Serialize(ms' new EncapsulatedOuter { X = 123' Inner = new EncapsulatedInner { Y = 456 } });
Magic Number,Examples.Issues,SO14020284,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO14020284.cs,ExecuteImpl,The following statement contains a magic number: Assert.Equal(123' obj.X);
Magic Number,Examples.Issues,SO14020284,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO14020284.cs,ExecuteImpl,The following statement contains a magic number: Assert.Equal(456' obj.Y);
Magic Number,Examples.Issues,SO14048958,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO14048958.cs,Execute,The following statement contains a magic number: Assert.Equal(3' ms.Length);
Magic Number,Examples.Issues,SO14532116,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO14532116.cs,Execute,The following statement contains a magic number: Assert.Equal(oldCount + 3' newCount);
Magic Number,Examples.Issues,SO14532116,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO14532116.cs,Test,The following statement contains a magic number: var obj = Foo.Create(123);
Magic Number,Examples.Issues,SO14532116,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO14532116.cs,Test,The following statement contains a magic number: Assert.Equal(123' clone.X);
Magic Number,Examples.Issues,SO14540862,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO14540862.cs,Execute,The following statement contains a magic number: Assert.Equal(37' (int)reflectionStream.Length);
Magic Number,Examples.Issues,SO14540862,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO14540862.cs,Execute,The following statement contains a magic number: Assert.Equal(37' (int)getTypeStream.Length);
Magic Number,Examples.Issues,SO16756104,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO16756104.cs,TestNullableDoubleList,The following statement contains a magic number: Program.ExpectFailure<NullReferenceException>(() =>              {                  var list = new List<double?> { 1' null' 2 };                  Serializer.DeepClone(list);              });
Magic Number,Examples.Issues,SO16756104,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO16756104.cs,TestNullableInt32List,The following statement contains a magic number: Program.ExpectFailure<NullReferenceException>(() =>              {                  var list = new List<int?> { 1' null' 2 };                  Serializer.DeepClone(list);              });
Magic Number,Examples.Issues,SO16797650,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO16797650.cs,AddSubtypeAtRuntime,The following statement contains a magic number: messageBase.AddSubType(10' typeof(Echo));
Magic Number,Examples.Issues,SO16797650,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO16797650.cs,AddSubtypeAtRuntime,The following statement contains a magic number: messageBase.AddSubType(11' typeof(Foo));
Magic Number,Examples.Issues,SO16797650,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO16797650.cs,AddSubtypeAtRuntime,The following statement contains a magic number: messageBase.AddSubType(12' typeof(Bar));
Magic Number,Examples.Issues,SO16838287,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO16838287.cs,ExecuteRuntime,The following statement contains a magic number: Program.ExpectFailure<NotSupportedException>(() =>              {                  var model = GetModel();                  Execute(model' 20' 0' 20' "Runtime");                  Execute(model' 1' 0' 18' "Runtime");              });
Magic Number,Examples.Issues,SO16838287,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO16838287.cs,ExecuteRuntime,The following statement contains a magic number: Program.ExpectFailure<NotSupportedException>(() =>              {                  var model = GetModel();                  Execute(model' 20' 0' 20' "Runtime");                  Execute(model' 1' 0' 18' "Runtime");              });
Magic Number,Examples.Issues,SO16838287,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO16838287.cs,ExecuteRuntime,The following statement contains a magic number: Program.ExpectFailure<NotSupportedException>(() =>              {                  var model = GetModel();                  Execute(model' 20' 0' 20' "Runtime");                  Execute(model' 1' 0' 18' "Runtime");              });
Magic Number,Examples.Issues,SO16838287,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO16838287.cs,ExecuteCompileInPlace,The following statement contains a magic number: Program.ExpectFailure<NotSupportedException>(() =>              {                  var model = GetModel();                  model.CompileInPlace();                  Execute(model' 20' 0' 20' "CompileInPlace");                  Execute(model' 1' 0' 18' "CompileInPlace");              });
Magic Number,Examples.Issues,SO16838287,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO16838287.cs,ExecuteCompileInPlace,The following statement contains a magic number: Program.ExpectFailure<NotSupportedException>(() =>              {                  var model = GetModel();                  model.CompileInPlace();                  Execute(model' 20' 0' 20' "CompileInPlace");                  Execute(model' 1' 0' 18' "CompileInPlace");              });
Magic Number,Examples.Issues,SO16838287,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO16838287.cs,ExecuteCompileInPlace,The following statement contains a magic number: Program.ExpectFailure<NotSupportedException>(() =>              {                  var model = GetModel();                  model.CompileInPlace();                  Execute(model' 20' 0' 20' "CompileInPlace");                  Execute(model' 1' 0' 18' "CompileInPlace");              });
Magic Number,Examples.Issues,SO16838287,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO16838287.cs,ExecuteCompile,The following statement contains a magic number: Program.ExpectFailure<NotSupportedException>(() =>              {                  var model = GetModel();                  var compiled = model.Compile();                  Execute(compiled' 20' 0' 20' "Compile");                  Execute(compiled' 1' 0' 18' "Compile");              });
Magic Number,Examples.Issues,SO16838287,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO16838287.cs,ExecuteCompile,The following statement contains a magic number: Program.ExpectFailure<NotSupportedException>(() =>              {                  var model = GetModel();                  var compiled = model.Compile();                  Execute(compiled' 20' 0' 20' "Compile");                  Execute(compiled' 1' 0' 18' "Compile");              });
Magic Number,Examples.Issues,SO16838287,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO16838287.cs,ExecuteCompile,The following statement contains a magic number: Program.ExpectFailure<NotSupportedException>(() =>              {                  var model = GetModel();                  var compiled = model.Compile();                  Execute(compiled' 20' 0' 20' "Compile");                  Execute(compiled' 1' 0' 18' "Compile");              });
Magic Number,Examples.Issues,SO16838287,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO16838287.cs,Execute,The following statement contains a magic number: new Random(1234).NextBytes(data);
Magic Number,Examples.Issues,SO18650486,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18650486.cs,Execute,The following statement contains a magic number: const int OuterLoop = 5;
Magic Number,Examples.Issues,SO18650486,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18650486.cs,ExecuteImpl,The following statement contains a magic number: const int InnerLoop = 1000;
Magic Number,Examples.Issues,SO18650486,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18650486.cs,ExecuteImpl,The following statement contains a magic number: Parallel.For(0' count' i =>              {                  var classThree = Create();                  var counter = Stopwatch.StartNew();                  using (var ms = new MemoryStream())                  {                      for (int j = 0; j < InnerLoop; j++)                      {                          ms.SetLength(0);                          model.Serialize(ms' classThree);                          ms.Position = 0;  #pragma warning disable CS0618                          var des = model.Deserialize(ms' null' typeof(ClassThree));  #pragma warning restore CS0618                          var aaa = des;                      }                      counter.Stop();                  }                                      var elapsed = counter.Elapsed.TotalMilliseconds;                  double currentAverage;                  lock (lockObj)                  {                      complete++;                      average += elapsed;                      var oldMin = min;                      min = Math.Min(min' elapsed);                      max = Math.Max(max' elapsed);                      currentAverage = average / complete;                      if (min != oldMin || (complete % 500) == 0)                      {                          Trace.WriteLine(string.Format("{5}\tCycle {0}: {1:N2} ms - avg: {2:N2} ms - min: {3:N2} - max: {4:N2}"' i' elapsed' currentAverage' min' max' caption));                      }                  }                              });
Magic Number,Examples.Issues,SO18650486,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18650486.cs,Create,The following statement contains a magic number: var classOne = new ClassSix()              {                  // properties                  p_i1 = -123'                  p_i2 = 456'                  p_l1 = -456'                  p_l2 = 123'                  p_s = "str"'                  p_f = 12.34f'                  p_d = 56.78d'                  p_bl = true'                  p_dt = DateTime.Now.AddMonths(-1)'                  p_m = 90.12m'                  p_b1 = 12'                  p_b2 = -34'                  p_c = 'c''                  p_s1 = -21'                  p_s2 = 43'                  p_ts = new TimeSpan(12' 34' 56)'                  p_id = Guid.NewGuid()'                  p_uri = new Uri("http://www.google.com")'                  p_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  p_t = typeof(ClassTwo)'                  p_sa = new[] { "aaa"' "bbb"' "ccc" }'                  p_ia = new[] { 7' 4' 9 }'                  p_e1 = EnumOne.Three'                  p_e2 = EnumTwo.One | EnumTwo.Two'                  p_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })'                  // fields                  f_i1 = -123'                  f_i2 = 456'                  f_l1 = -456'                  f_l2 = 123'                  f_s = "str"'                  f_f = 12.34f'                  f_d = 56.78d'                  f_bl = true'                  f_dt = DateTime.Now.AddMonths(-1)'                  f_m = 90.12m'                  f_b1 = 12'                  f_b2 = -34'                  f_c = 'c''                  f_s1 = -21'                  f_s2 = 43'                  f_ts = new TimeSpan(12' 34' 56)'                  f_id = Guid.NewGuid()'                  f_uri = new Uri("http://www.google.com")'                  f_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  f_t = typeof(ClassTwo)'                  f_sa = new[] { "aaa"' "bbb"' "ccc" }'                  f_ia = new[] { 7' 4' 9 }'                  f_e1 = EnumOne.Three'                  f_e2 = EnumTwo.One | EnumTwo.Two'                  f_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })              };
Magic Number,Examples.Issues,SO18650486,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18650486.cs,Create,The following statement contains a magic number: var classOne = new ClassSix()              {                  // properties                  p_i1 = -123'                  p_i2 = 456'                  p_l1 = -456'                  p_l2 = 123'                  p_s = "str"'                  p_f = 12.34f'                  p_d = 56.78d'                  p_bl = true'                  p_dt = DateTime.Now.AddMonths(-1)'                  p_m = 90.12m'                  p_b1 = 12'                  p_b2 = -34'                  p_c = 'c''                  p_s1 = -21'                  p_s2 = 43'                  p_ts = new TimeSpan(12' 34' 56)'                  p_id = Guid.NewGuid()'                  p_uri = new Uri("http://www.google.com")'                  p_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  p_t = typeof(ClassTwo)'                  p_sa = new[] { "aaa"' "bbb"' "ccc" }'                  p_ia = new[] { 7' 4' 9 }'                  p_e1 = EnumOne.Three'                  p_e2 = EnumTwo.One | EnumTwo.Two'                  p_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })'                  // fields                  f_i1 = -123'                  f_i2 = 456'                  f_l1 = -456'                  f_l2 = 123'                  f_s = "str"'                  f_f = 12.34f'                  f_d = 56.78d'                  f_bl = true'                  f_dt = DateTime.Now.AddMonths(-1)'                  f_m = 90.12m'                  f_b1 = 12'                  f_b2 = -34'                  f_c = 'c''                  f_s1 = -21'                  f_s2 = 43'                  f_ts = new TimeSpan(12' 34' 56)'                  f_id = Guid.NewGuid()'                  f_uri = new Uri("http://www.google.com")'                  f_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  f_t = typeof(ClassTwo)'                  f_sa = new[] { "aaa"' "bbb"' "ccc" }'                  f_ia = new[] { 7' 4' 9 }'                  f_e1 = EnumOne.Three'                  f_e2 = EnumTwo.One | EnumTwo.Two'                  f_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })              };
Magic Number,Examples.Issues,SO18650486,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18650486.cs,Create,The following statement contains a magic number: var classOne = new ClassSix()              {                  // properties                  p_i1 = -123'                  p_i2 = 456'                  p_l1 = -456'                  p_l2 = 123'                  p_s = "str"'                  p_f = 12.34f'                  p_d = 56.78d'                  p_bl = true'                  p_dt = DateTime.Now.AddMonths(-1)'                  p_m = 90.12m'                  p_b1 = 12'                  p_b2 = -34'                  p_c = 'c''                  p_s1 = -21'                  p_s2 = 43'                  p_ts = new TimeSpan(12' 34' 56)'                  p_id = Guid.NewGuid()'                  p_uri = new Uri("http://www.google.com")'                  p_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  p_t = typeof(ClassTwo)'                  p_sa = new[] { "aaa"' "bbb"' "ccc" }'                  p_ia = new[] { 7' 4' 9 }'                  p_e1 = EnumOne.Three'                  p_e2 = EnumTwo.One | EnumTwo.Two'                  p_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })'                  // fields                  f_i1 = -123'                  f_i2 = 456'                  f_l1 = -456'                  f_l2 = 123'                  f_s = "str"'                  f_f = 12.34f'                  f_d = 56.78d'                  f_bl = true'                  f_dt = DateTime.Now.AddMonths(-1)'                  f_m = 90.12m'                  f_b1 = 12'                  f_b2 = -34'                  f_c = 'c''                  f_s1 = -21'                  f_s2 = 43'                  f_ts = new TimeSpan(12' 34' 56)'                  f_id = Guid.NewGuid()'                  f_uri = new Uri("http://www.google.com")'                  f_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  f_t = typeof(ClassTwo)'                  f_sa = new[] { "aaa"' "bbb"' "ccc" }'                  f_ia = new[] { 7' 4' 9 }'                  f_e1 = EnumOne.Three'                  f_e2 = EnumTwo.One | EnumTwo.Two'                  f_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })              };
Magic Number,Examples.Issues,SO18650486,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18650486.cs,Create,The following statement contains a magic number: var classOne = new ClassSix()              {                  // properties                  p_i1 = -123'                  p_i2 = 456'                  p_l1 = -456'                  p_l2 = 123'                  p_s = "str"'                  p_f = 12.34f'                  p_d = 56.78d'                  p_bl = true'                  p_dt = DateTime.Now.AddMonths(-1)'                  p_m = 90.12m'                  p_b1 = 12'                  p_b2 = -34'                  p_c = 'c''                  p_s1 = -21'                  p_s2 = 43'                  p_ts = new TimeSpan(12' 34' 56)'                  p_id = Guid.NewGuid()'                  p_uri = new Uri("http://www.google.com")'                  p_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  p_t = typeof(ClassTwo)'                  p_sa = new[] { "aaa"' "bbb"' "ccc" }'                  p_ia = new[] { 7' 4' 9 }'                  p_e1 = EnumOne.Three'                  p_e2 = EnumTwo.One | EnumTwo.Two'                  p_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })'                  // fields                  f_i1 = -123'                  f_i2 = 456'                  f_l1 = -456'                  f_l2 = 123'                  f_s = "str"'                  f_f = 12.34f'                  f_d = 56.78d'                  f_bl = true'                  f_dt = DateTime.Now.AddMonths(-1)'                  f_m = 90.12m'                  f_b1 = 12'                  f_b2 = -34'                  f_c = 'c''                  f_s1 = -21'                  f_s2 = 43'                  f_ts = new TimeSpan(12' 34' 56)'                  f_id = Guid.NewGuid()'                  f_uri = new Uri("http://www.google.com")'                  f_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  f_t = typeof(ClassTwo)'                  f_sa = new[] { "aaa"' "bbb"' "ccc" }'                  f_ia = new[] { 7' 4' 9 }'                  f_e1 = EnumOne.Three'                  f_e2 = EnumTwo.One | EnumTwo.Two'                  f_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })              };
Magic Number,Examples.Issues,SO18650486,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18650486.cs,Create,The following statement contains a magic number: var classOne = new ClassSix()              {                  // properties                  p_i1 = -123'                  p_i2 = 456'                  p_l1 = -456'                  p_l2 = 123'                  p_s = "str"'                  p_f = 12.34f'                  p_d = 56.78d'                  p_bl = true'                  p_dt = DateTime.Now.AddMonths(-1)'                  p_m = 90.12m'                  p_b1 = 12'                  p_b2 = -34'                  p_c = 'c''                  p_s1 = -21'                  p_s2 = 43'                  p_ts = new TimeSpan(12' 34' 56)'                  p_id = Guid.NewGuid()'                  p_uri = new Uri("http://www.google.com")'                  p_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  p_t = typeof(ClassTwo)'                  p_sa = new[] { "aaa"' "bbb"' "ccc" }'                  p_ia = new[] { 7' 4' 9 }'                  p_e1 = EnumOne.Three'                  p_e2 = EnumTwo.One | EnumTwo.Two'                  p_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })'                  // fields                  f_i1 = -123'                  f_i2 = 456'                  f_l1 = -456'                  f_l2 = 123'                  f_s = "str"'                  f_f = 12.34f'                  f_d = 56.78d'                  f_bl = true'                  f_dt = DateTime.Now.AddMonths(-1)'                  f_m = 90.12m'                  f_b1 = 12'                  f_b2 = -34'                  f_c = 'c''                  f_s1 = -21'                  f_s2 = 43'                  f_ts = new TimeSpan(12' 34' 56)'                  f_id = Guid.NewGuid()'                  f_uri = new Uri("http://www.google.com")'                  f_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  f_t = typeof(ClassTwo)'                  f_sa = new[] { "aaa"' "bbb"' "ccc" }'                  f_ia = new[] { 7' 4' 9 }'                  f_e1 = EnumOne.Three'                  f_e2 = EnumTwo.One | EnumTwo.Two'                  f_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })              };
Magic Number,Examples.Issues,SO18650486,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18650486.cs,Create,The following statement contains a magic number: var classOne = new ClassSix()              {                  // properties                  p_i1 = -123'                  p_i2 = 456'                  p_l1 = -456'                  p_l2 = 123'                  p_s = "str"'                  p_f = 12.34f'                  p_d = 56.78d'                  p_bl = true'                  p_dt = DateTime.Now.AddMonths(-1)'                  p_m = 90.12m'                  p_b1 = 12'                  p_b2 = -34'                  p_c = 'c''                  p_s1 = -21'                  p_s2 = 43'                  p_ts = new TimeSpan(12' 34' 56)'                  p_id = Guid.NewGuid()'                  p_uri = new Uri("http://www.google.com")'                  p_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  p_t = typeof(ClassTwo)'                  p_sa = new[] { "aaa"' "bbb"' "ccc" }'                  p_ia = new[] { 7' 4' 9 }'                  p_e1 = EnumOne.Three'                  p_e2 = EnumTwo.One | EnumTwo.Two'                  p_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })'                  // fields                  f_i1 = -123'                  f_i2 = 456'                  f_l1 = -456'                  f_l2 = 123'                  f_s = "str"'                  f_f = 12.34f'                  f_d = 56.78d'                  f_bl = true'                  f_dt = DateTime.Now.AddMonths(-1)'                  f_m = 90.12m'                  f_b1 = 12'                  f_b2 = -34'                  f_c = 'c''                  f_s1 = -21'                  f_s2 = 43'                  f_ts = new TimeSpan(12' 34' 56)'                  f_id = Guid.NewGuid()'                  f_uri = new Uri("http://www.google.com")'                  f_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  f_t = typeof(ClassTwo)'                  f_sa = new[] { "aaa"' "bbb"' "ccc" }'                  f_ia = new[] { 7' 4' 9 }'                  f_e1 = EnumOne.Three'                  f_e2 = EnumTwo.One | EnumTwo.Two'                  f_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })              };
Magic Number,Examples.Issues,SO18650486,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18650486.cs,Create,The following statement contains a magic number: var classOne = new ClassSix()              {                  // properties                  p_i1 = -123'                  p_i2 = 456'                  p_l1 = -456'                  p_l2 = 123'                  p_s = "str"'                  p_f = 12.34f'                  p_d = 56.78d'                  p_bl = true'                  p_dt = DateTime.Now.AddMonths(-1)'                  p_m = 90.12m'                  p_b1 = 12'                  p_b2 = -34'                  p_c = 'c''                  p_s1 = -21'                  p_s2 = 43'                  p_ts = new TimeSpan(12' 34' 56)'                  p_id = Guid.NewGuid()'                  p_uri = new Uri("http://www.google.com")'                  p_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  p_t = typeof(ClassTwo)'                  p_sa = new[] { "aaa"' "bbb"' "ccc" }'                  p_ia = new[] { 7' 4' 9 }'                  p_e1 = EnumOne.Three'                  p_e2 = EnumTwo.One | EnumTwo.Two'                  p_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })'                  // fields                  f_i1 = -123'                  f_i2 = 456'                  f_l1 = -456'                  f_l2 = 123'                  f_s = "str"'                  f_f = 12.34f'                  f_d = 56.78d'                  f_bl = true'                  f_dt = DateTime.Now.AddMonths(-1)'                  f_m = 90.12m'                  f_b1 = 12'                  f_b2 = -34'                  f_c = 'c''                  f_s1 = -21'                  f_s2 = 43'                  f_ts = new TimeSpan(12' 34' 56)'                  f_id = Guid.NewGuid()'                  f_uri = new Uri("http://www.google.com")'                  f_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  f_t = typeof(ClassTwo)'                  f_sa = new[] { "aaa"' "bbb"' "ccc" }'                  f_ia = new[] { 7' 4' 9 }'                  f_e1 = EnumOne.Three'                  f_e2 = EnumTwo.One | EnumTwo.Two'                  f_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })              };
Magic Number,Examples.Issues,SO18650486,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18650486.cs,Create,The following statement contains a magic number: var classOne = new ClassSix()              {                  // properties                  p_i1 = -123'                  p_i2 = 456'                  p_l1 = -456'                  p_l2 = 123'                  p_s = "str"'                  p_f = 12.34f'                  p_d = 56.78d'                  p_bl = true'                  p_dt = DateTime.Now.AddMonths(-1)'                  p_m = 90.12m'                  p_b1 = 12'                  p_b2 = -34'                  p_c = 'c''                  p_s1 = -21'                  p_s2 = 43'                  p_ts = new TimeSpan(12' 34' 56)'                  p_id = Guid.NewGuid()'                  p_uri = new Uri("http://www.google.com")'                  p_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  p_t = typeof(ClassTwo)'                  p_sa = new[] { "aaa"' "bbb"' "ccc" }'                  p_ia = new[] { 7' 4' 9 }'                  p_e1 = EnumOne.Three'                  p_e2 = EnumTwo.One | EnumTwo.Two'                  p_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })'                  // fields                  f_i1 = -123'                  f_i2 = 456'                  f_l1 = -456'                  f_l2 = 123'                  f_s = "str"'                  f_f = 12.34f'                  f_d = 56.78d'                  f_bl = true'                  f_dt = DateTime.Now.AddMonths(-1)'                  f_m = 90.12m'                  f_b1 = 12'                  f_b2 = -34'                  f_c = 'c''                  f_s1 = -21'                  f_s2 = 43'                  f_ts = new TimeSpan(12' 34' 56)'                  f_id = Guid.NewGuid()'                  f_uri = new Uri("http://www.google.com")'                  f_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  f_t = typeof(ClassTwo)'                  f_sa = new[] { "aaa"' "bbb"' "ccc" }'                  f_ia = new[] { 7' 4' 9 }'                  f_e1 = EnumOne.Three'                  f_e2 = EnumTwo.One | EnumTwo.Two'                  f_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })              };
Magic Number,Examples.Issues,SO18650486,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18650486.cs,Create,The following statement contains a magic number: var classOne = new ClassSix()              {                  // properties                  p_i1 = -123'                  p_i2 = 456'                  p_l1 = -456'                  p_l2 = 123'                  p_s = "str"'                  p_f = 12.34f'                  p_d = 56.78d'                  p_bl = true'                  p_dt = DateTime.Now.AddMonths(-1)'                  p_m = 90.12m'                  p_b1 = 12'                  p_b2 = -34'                  p_c = 'c''                  p_s1 = -21'                  p_s2 = 43'                  p_ts = new TimeSpan(12' 34' 56)'                  p_id = Guid.NewGuid()'                  p_uri = new Uri("http://www.google.com")'                  p_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  p_t = typeof(ClassTwo)'                  p_sa = new[] { "aaa"' "bbb"' "ccc" }'                  p_ia = new[] { 7' 4' 9 }'                  p_e1 = EnumOne.Three'                  p_e2 = EnumTwo.One | EnumTwo.Two'                  p_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })'                  // fields                  f_i1 = -123'                  f_i2 = 456'                  f_l1 = -456'                  f_l2 = 123'                  f_s = "str"'                  f_f = 12.34f'                  f_d = 56.78d'                  f_bl = true'                  f_dt = DateTime.Now.AddMonths(-1)'                  f_m = 90.12m'                  f_b1 = 12'                  f_b2 = -34'                  f_c = 'c''                  f_s1 = -21'                  f_s2 = 43'                  f_ts = new TimeSpan(12' 34' 56)'                  f_id = Guid.NewGuid()'                  f_uri = new Uri("http://www.google.com")'                  f_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  f_t = typeof(ClassTwo)'                  f_sa = new[] { "aaa"' "bbb"' "ccc" }'                  f_ia = new[] { 7' 4' 9 }'                  f_e1 = EnumOne.Three'                  f_e2 = EnumTwo.One | EnumTwo.Two'                  f_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })              };
Magic Number,Examples.Issues,SO18650486,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18650486.cs,Create,The following statement contains a magic number: var classOne = new ClassSix()              {                  // properties                  p_i1 = -123'                  p_i2 = 456'                  p_l1 = -456'                  p_l2 = 123'                  p_s = "str"'                  p_f = 12.34f'                  p_d = 56.78d'                  p_bl = true'                  p_dt = DateTime.Now.AddMonths(-1)'                  p_m = 90.12m'                  p_b1 = 12'                  p_b2 = -34'                  p_c = 'c''                  p_s1 = -21'                  p_s2 = 43'                  p_ts = new TimeSpan(12' 34' 56)'                  p_id = Guid.NewGuid()'                  p_uri = new Uri("http://www.google.com")'                  p_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  p_t = typeof(ClassTwo)'                  p_sa = new[] { "aaa"' "bbb"' "ccc" }'                  p_ia = new[] { 7' 4' 9 }'                  p_e1 = EnumOne.Three'                  p_e2 = EnumTwo.One | EnumTwo.Two'                  p_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })'                  // fields                  f_i1 = -123'                  f_i2 = 456'                  f_l1 = -456'                  f_l2 = 123'                  f_s = "str"'                  f_f = 12.34f'                  f_d = 56.78d'                  f_bl = true'                  f_dt = DateTime.Now.AddMonths(-1)'                  f_m = 90.12m'                  f_b1 = 12'                  f_b2 = -34'                  f_c = 'c''                  f_s1 = -21'                  f_s2 = 43'                  f_ts = new TimeSpan(12' 34' 56)'                  f_id = Guid.NewGuid()'                  f_uri = new Uri("http://www.google.com")'                  f_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  f_t = typeof(ClassTwo)'                  f_sa = new[] { "aaa"' "bbb"' "ccc" }'                  f_ia = new[] { 7' 4' 9 }'                  f_e1 = EnumOne.Three'                  f_e2 = EnumTwo.One | EnumTwo.Two'                  f_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })              };
Magic Number,Examples.Issues,SO18650486,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18650486.cs,Create,The following statement contains a magic number: var classOne = new ClassSix()              {                  // properties                  p_i1 = -123'                  p_i2 = 456'                  p_l1 = -456'                  p_l2 = 123'                  p_s = "str"'                  p_f = 12.34f'                  p_d = 56.78d'                  p_bl = true'                  p_dt = DateTime.Now.AddMonths(-1)'                  p_m = 90.12m'                  p_b1 = 12'                  p_b2 = -34'                  p_c = 'c''                  p_s1 = -21'                  p_s2 = 43'                  p_ts = new TimeSpan(12' 34' 56)'                  p_id = Guid.NewGuid()'                  p_uri = new Uri("http://www.google.com")'                  p_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  p_t = typeof(ClassTwo)'                  p_sa = new[] { "aaa"' "bbb"' "ccc" }'                  p_ia = new[] { 7' 4' 9 }'                  p_e1 = EnumOne.Three'                  p_e2 = EnumTwo.One | EnumTwo.Two'                  p_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })'                  // fields                  f_i1 = -123'                  f_i2 = 456'                  f_l1 = -456'                  f_l2 = 123'                  f_s = "str"'                  f_f = 12.34f'                  f_d = 56.78d'                  f_bl = true'                  f_dt = DateTime.Now.AddMonths(-1)'                  f_m = 90.12m'                  f_b1 = 12'                  f_b2 = -34'                  f_c = 'c''                  f_s1 = -21'                  f_s2 = 43'                  f_ts = new TimeSpan(12' 34' 56)'                  f_id = Guid.NewGuid()'                  f_uri = new Uri("http://www.google.com")'                  f_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  f_t = typeof(ClassTwo)'                  f_sa = new[] { "aaa"' "bbb"' "ccc" }'                  f_ia = new[] { 7' 4' 9 }'                  f_e1 = EnumOne.Three'                  f_e2 = EnumTwo.One | EnumTwo.Two'                  f_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })              };
Magic Number,Examples.Issues,SO18650486,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18650486.cs,Create,The following statement contains a magic number: var classOne = new ClassSix()              {                  // properties                  p_i1 = -123'                  p_i2 = 456'                  p_l1 = -456'                  p_l2 = 123'                  p_s = "str"'                  p_f = 12.34f'                  p_d = 56.78d'                  p_bl = true'                  p_dt = DateTime.Now.AddMonths(-1)'                  p_m = 90.12m'                  p_b1 = 12'                  p_b2 = -34'                  p_c = 'c''                  p_s1 = -21'                  p_s2 = 43'                  p_ts = new TimeSpan(12' 34' 56)'                  p_id = Guid.NewGuid()'                  p_uri = new Uri("http://www.google.com")'                  p_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  p_t = typeof(ClassTwo)'                  p_sa = new[] { "aaa"' "bbb"' "ccc" }'                  p_ia = new[] { 7' 4' 9 }'                  p_e1 = EnumOne.Three'                  p_e2 = EnumTwo.One | EnumTwo.Two'                  p_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })'                  // fields                  f_i1 = -123'                  f_i2 = 456'                  f_l1 = -456'                  f_l2 = 123'                  f_s = "str"'                  f_f = 12.34f'                  f_d = 56.78d'                  f_bl = true'                  f_dt = DateTime.Now.AddMonths(-1)'                  f_m = 90.12m'                  f_b1 = 12'                  f_b2 = -34'                  f_c = 'c''                  f_s1 = -21'                  f_s2 = 43'                  f_ts = new TimeSpan(12' 34' 56)'                  f_id = Guid.NewGuid()'                  f_uri = new Uri("http://www.google.com")'                  f_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  f_t = typeof(ClassTwo)'                  f_sa = new[] { "aaa"' "bbb"' "ccc" }'                  f_ia = new[] { 7' 4' 9 }'                  f_e1 = EnumOne.Three'                  f_e2 = EnumTwo.One | EnumTwo.Two'                  f_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })              };
Magic Number,Examples.Issues,SO18650486,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18650486.cs,Create,The following statement contains a magic number: var classOne = new ClassSix()              {                  // properties                  p_i1 = -123'                  p_i2 = 456'                  p_l1 = -456'                  p_l2 = 123'                  p_s = "str"'                  p_f = 12.34f'                  p_d = 56.78d'                  p_bl = true'                  p_dt = DateTime.Now.AddMonths(-1)'                  p_m = 90.12m'                  p_b1 = 12'                  p_b2 = -34'                  p_c = 'c''                  p_s1 = -21'                  p_s2 = 43'                  p_ts = new TimeSpan(12' 34' 56)'                  p_id = Guid.NewGuid()'                  p_uri = new Uri("http://www.google.com")'                  p_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  p_t = typeof(ClassTwo)'                  p_sa = new[] { "aaa"' "bbb"' "ccc" }'                  p_ia = new[] { 7' 4' 9 }'                  p_e1 = EnumOne.Three'                  p_e2 = EnumTwo.One | EnumTwo.Two'                  p_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })'                  // fields                  f_i1 = -123'                  f_i2 = 456'                  f_l1 = -456'                  f_l2 = 123'                  f_s = "str"'                  f_f = 12.34f'                  f_d = 56.78d'                  f_bl = true'                  f_dt = DateTime.Now.AddMonths(-1)'                  f_m = 90.12m'                  f_b1 = 12'                  f_b2 = -34'                  f_c = 'c''                  f_s1 = -21'                  f_s2 = 43'                  f_ts = new TimeSpan(12' 34' 56)'                  f_id = Guid.NewGuid()'                  f_uri = new Uri("http://www.google.com")'                  f_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  f_t = typeof(ClassTwo)'                  f_sa = new[] { "aaa"' "bbb"' "ccc" }'                  f_ia = new[] { 7' 4' 9 }'                  f_e1 = EnumOne.Three'                  f_e2 = EnumTwo.One | EnumTwo.Two'                  f_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })              };
Magic Number,Examples.Issues,SO18650486,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18650486.cs,Create,The following statement contains a magic number: var classOne = new ClassSix()              {                  // properties                  p_i1 = -123'                  p_i2 = 456'                  p_l1 = -456'                  p_l2 = 123'                  p_s = "str"'                  p_f = 12.34f'                  p_d = 56.78d'                  p_bl = true'                  p_dt = DateTime.Now.AddMonths(-1)'                  p_m = 90.12m'                  p_b1 = 12'                  p_b2 = -34'                  p_c = 'c''                  p_s1 = -21'                  p_s2 = 43'                  p_ts = new TimeSpan(12' 34' 56)'                  p_id = Guid.NewGuid()'                  p_uri = new Uri("http://www.google.com")'                  p_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  p_t = typeof(ClassTwo)'                  p_sa = new[] { "aaa"' "bbb"' "ccc" }'                  p_ia = new[] { 7' 4' 9 }'                  p_e1 = EnumOne.Three'                  p_e2 = EnumTwo.One | EnumTwo.Two'                  p_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })'                  // fields                  f_i1 = -123'                  f_i2 = 456'                  f_l1 = -456'                  f_l2 = 123'                  f_s = "str"'                  f_f = 12.34f'                  f_d = 56.78d'                  f_bl = true'                  f_dt = DateTime.Now.AddMonths(-1)'                  f_m = 90.12m'                  f_b1 = 12'                  f_b2 = -34'                  f_c = 'c''                  f_s1 = -21'                  f_s2 = 43'                  f_ts = new TimeSpan(12' 34' 56)'                  f_id = Guid.NewGuid()'                  f_uri = new Uri("http://www.google.com")'                  f_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  f_t = typeof(ClassTwo)'                  f_sa = new[] { "aaa"' "bbb"' "ccc" }'                  f_ia = new[] { 7' 4' 9 }'                  f_e1 = EnumOne.Three'                  f_e2 = EnumTwo.One | EnumTwo.Two'                  f_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })              };
Magic Number,Examples.Issues,SO18650486,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18650486.cs,Create,The following statement contains a magic number: var classOne = new ClassSix()              {                  // properties                  p_i1 = -123'                  p_i2 = 456'                  p_l1 = -456'                  p_l2 = 123'                  p_s = "str"'                  p_f = 12.34f'                  p_d = 56.78d'                  p_bl = true'                  p_dt = DateTime.Now.AddMonths(-1)'                  p_m = 90.12m'                  p_b1 = 12'                  p_b2 = -34'                  p_c = 'c''                  p_s1 = -21'                  p_s2 = 43'                  p_ts = new TimeSpan(12' 34' 56)'                  p_id = Guid.NewGuid()'                  p_uri = new Uri("http://www.google.com")'                  p_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  p_t = typeof(ClassTwo)'                  p_sa = new[] { "aaa"' "bbb"' "ccc" }'                  p_ia = new[] { 7' 4' 9 }'                  p_e1 = EnumOne.Three'                  p_e2 = EnumTwo.One | EnumTwo.Two'                  p_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })'                  // fields                  f_i1 = -123'                  f_i2 = 456'                  f_l1 = -456'                  f_l2 = 123'                  f_s = "str"'                  f_f = 12.34f'                  f_d = 56.78d'                  f_bl = true'                  f_dt = DateTime.Now.AddMonths(-1)'                  f_m = 90.12m'                  f_b1 = 12'                  f_b2 = -34'                  f_c = 'c''                  f_s1 = -21'                  f_s2 = 43'                  f_ts = new TimeSpan(12' 34' 56)'                  f_id = Guid.NewGuid()'                  f_uri = new Uri("http://www.google.com")'                  f_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  f_t = typeof(ClassTwo)'                  f_sa = new[] { "aaa"' "bbb"' "ccc" }'                  f_ia = new[] { 7' 4' 9 }'                  f_e1 = EnumOne.Three'                  f_e2 = EnumTwo.One | EnumTwo.Two'                  f_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })              };
Magic Number,Examples.Issues,SO18650486,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18650486.cs,Create,The following statement contains a magic number: var classOne = new ClassSix()              {                  // properties                  p_i1 = -123'                  p_i2 = 456'                  p_l1 = -456'                  p_l2 = 123'                  p_s = "str"'                  p_f = 12.34f'                  p_d = 56.78d'                  p_bl = true'                  p_dt = DateTime.Now.AddMonths(-1)'                  p_m = 90.12m'                  p_b1 = 12'                  p_b2 = -34'                  p_c = 'c''                  p_s1 = -21'                  p_s2 = 43'                  p_ts = new TimeSpan(12' 34' 56)'                  p_id = Guid.NewGuid()'                  p_uri = new Uri("http://www.google.com")'                  p_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  p_t = typeof(ClassTwo)'                  p_sa = new[] { "aaa"' "bbb"' "ccc" }'                  p_ia = new[] { 7' 4' 9 }'                  p_e1 = EnumOne.Three'                  p_e2 = EnumTwo.One | EnumTwo.Two'                  p_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })'                  // fields                  f_i1 = -123'                  f_i2 = 456'                  f_l1 = -456'                  f_l2 = 123'                  f_s = "str"'                  f_f = 12.34f'                  f_d = 56.78d'                  f_bl = true'                  f_dt = DateTime.Now.AddMonths(-1)'                  f_m = 90.12m'                  f_b1 = 12'                  f_b2 = -34'                  f_c = 'c''                  f_s1 = -21'                  f_s2 = 43'                  f_ts = new TimeSpan(12' 34' 56)'                  f_id = Guid.NewGuid()'                  f_uri = new Uri("http://www.google.com")'                  f_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  f_t = typeof(ClassTwo)'                  f_sa = new[] { "aaa"' "bbb"' "ccc" }'                  f_ia = new[] { 7' 4' 9 }'                  f_e1 = EnumOne.Three'                  f_e2 = EnumTwo.One | EnumTwo.Two'                  f_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })              };
Magic Number,Examples.Issues,SO18650486,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18650486.cs,Create,The following statement contains a magic number: var classOne = new ClassSix()              {                  // properties                  p_i1 = -123'                  p_i2 = 456'                  p_l1 = -456'                  p_l2 = 123'                  p_s = "str"'                  p_f = 12.34f'                  p_d = 56.78d'                  p_bl = true'                  p_dt = DateTime.Now.AddMonths(-1)'                  p_m = 90.12m'                  p_b1 = 12'                  p_b2 = -34'                  p_c = 'c''                  p_s1 = -21'                  p_s2 = 43'                  p_ts = new TimeSpan(12' 34' 56)'                  p_id = Guid.NewGuid()'                  p_uri = new Uri("http://www.google.com")'                  p_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  p_t = typeof(ClassTwo)'                  p_sa = new[] { "aaa"' "bbb"' "ccc" }'                  p_ia = new[] { 7' 4' 9 }'                  p_e1 = EnumOne.Three'                  p_e2 = EnumTwo.One | EnumTwo.Two'                  p_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })'                  // fields                  f_i1 = -123'                  f_i2 = 456'                  f_l1 = -456'                  f_l2 = 123'                  f_s = "str"'                  f_f = 12.34f'                  f_d = 56.78d'                  f_bl = true'                  f_dt = DateTime.Now.AddMonths(-1)'                  f_m = 90.12m'                  f_b1 = 12'                  f_b2 = -34'                  f_c = 'c''                  f_s1 = -21'                  f_s2 = 43'                  f_ts = new TimeSpan(12' 34' 56)'                  f_id = Guid.NewGuid()'                  f_uri = new Uri("http://www.google.com")'                  f_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  f_t = typeof(ClassTwo)'                  f_sa = new[] { "aaa"' "bbb"' "ccc" }'                  f_ia = new[] { 7' 4' 9 }'                  f_e1 = EnumOne.Three'                  f_e2 = EnumTwo.One | EnumTwo.Two'                  f_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })              };
Magic Number,Examples.Issues,SO18650486,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18650486.cs,Create,The following statement contains a magic number: var classOne = new ClassSix()              {                  // properties                  p_i1 = -123'                  p_i2 = 456'                  p_l1 = -456'                  p_l2 = 123'                  p_s = "str"'                  p_f = 12.34f'                  p_d = 56.78d'                  p_bl = true'                  p_dt = DateTime.Now.AddMonths(-1)'                  p_m = 90.12m'                  p_b1 = 12'                  p_b2 = -34'                  p_c = 'c''                  p_s1 = -21'                  p_s2 = 43'                  p_ts = new TimeSpan(12' 34' 56)'                  p_id = Guid.NewGuid()'                  p_uri = new Uri("http://www.google.com")'                  p_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  p_t = typeof(ClassTwo)'                  p_sa = new[] { "aaa"' "bbb"' "ccc" }'                  p_ia = new[] { 7' 4' 9 }'                  p_e1 = EnumOne.Three'                  p_e2 = EnumTwo.One | EnumTwo.Two'                  p_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })'                  // fields                  f_i1 = -123'                  f_i2 = 456'                  f_l1 = -456'                  f_l2 = 123'                  f_s = "str"'                  f_f = 12.34f'                  f_d = 56.78d'                  f_bl = true'                  f_dt = DateTime.Now.AddMonths(-1)'                  f_m = 90.12m'                  f_b1 = 12'                  f_b2 = -34'                  f_c = 'c''                  f_s1 = -21'                  f_s2 = 43'                  f_ts = new TimeSpan(12' 34' 56)'                  f_id = Guid.NewGuid()'                  f_uri = new Uri("http://www.google.com")'                  f_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  f_t = typeof(ClassTwo)'                  f_sa = new[] { "aaa"' "bbb"' "ccc" }'                  f_ia = new[] { 7' 4' 9 }'                  f_e1 = EnumOne.Three'                  f_e2 = EnumTwo.One | EnumTwo.Two'                  f_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })              };
Magic Number,Examples.Issues,SO18650486,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18650486.cs,Create,The following statement contains a magic number: var classOne = new ClassSix()              {                  // properties                  p_i1 = -123'                  p_i2 = 456'                  p_l1 = -456'                  p_l2 = 123'                  p_s = "str"'                  p_f = 12.34f'                  p_d = 56.78d'                  p_bl = true'                  p_dt = DateTime.Now.AddMonths(-1)'                  p_m = 90.12m'                  p_b1 = 12'                  p_b2 = -34'                  p_c = 'c''                  p_s1 = -21'                  p_s2 = 43'                  p_ts = new TimeSpan(12' 34' 56)'                  p_id = Guid.NewGuid()'                  p_uri = new Uri("http://www.google.com")'                  p_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  p_t = typeof(ClassTwo)'                  p_sa = new[] { "aaa"' "bbb"' "ccc" }'                  p_ia = new[] { 7' 4' 9 }'                  p_e1 = EnumOne.Three'                  p_e2 = EnumTwo.One | EnumTwo.Two'                  p_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })'                  // fields                  f_i1 = -123'                  f_i2 = 456'                  f_l1 = -456'                  f_l2 = 123'                  f_s = "str"'                  f_f = 12.34f'                  f_d = 56.78d'                  f_bl = true'                  f_dt = DateTime.Now.AddMonths(-1)'                  f_m = 90.12m'                  f_b1 = 12'                  f_b2 = -34'                  f_c = 'c''                  f_s1 = -21'                  f_s2 = 43'                  f_ts = new TimeSpan(12' 34' 56)'                  f_id = Guid.NewGuid()'                  f_uri = new Uri("http://www.google.com")'                  f_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  f_t = typeof(ClassTwo)'                  f_sa = new[] { "aaa"' "bbb"' "ccc" }'                  f_ia = new[] { 7' 4' 9 }'                  f_e1 = EnumOne.Three'                  f_e2 = EnumTwo.One | EnumTwo.Two'                  f_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })              };
Magic Number,Examples.Issues,SO18650486,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18650486.cs,Create,The following statement contains a magic number: var classOne = new ClassSix()              {                  // properties                  p_i1 = -123'                  p_i2 = 456'                  p_l1 = -456'                  p_l2 = 123'                  p_s = "str"'                  p_f = 12.34f'                  p_d = 56.78d'                  p_bl = true'                  p_dt = DateTime.Now.AddMonths(-1)'                  p_m = 90.12m'                  p_b1 = 12'                  p_b2 = -34'                  p_c = 'c''                  p_s1 = -21'                  p_s2 = 43'                  p_ts = new TimeSpan(12' 34' 56)'                  p_id = Guid.NewGuid()'                  p_uri = new Uri("http://www.google.com")'                  p_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  p_t = typeof(ClassTwo)'                  p_sa = new[] { "aaa"' "bbb"' "ccc" }'                  p_ia = new[] { 7' 4' 9 }'                  p_e1 = EnumOne.Three'                  p_e2 = EnumTwo.One | EnumTwo.Two'                  p_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })'                  // fields                  f_i1 = -123'                  f_i2 = 456'                  f_l1 = -456'                  f_l2 = 123'                  f_s = "str"'                  f_f = 12.34f'                  f_d = 56.78d'                  f_bl = true'                  f_dt = DateTime.Now.AddMonths(-1)'                  f_m = 90.12m'                  f_b1 = 12'                  f_b2 = -34'                  f_c = 'c''                  f_s1 = -21'                  f_s2 = 43'                  f_ts = new TimeSpan(12' 34' 56)'                  f_id = Guid.NewGuid()'                  f_uri = new Uri("http://www.google.com")'                  f_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  f_t = typeof(ClassTwo)'                  f_sa = new[] { "aaa"' "bbb"' "ccc" }'                  f_ia = new[] { 7' 4' 9 }'                  f_e1 = EnumOne.Three'                  f_e2 = EnumTwo.One | EnumTwo.Two'                  f_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })              };
Magic Number,Examples.Issues,SO18650486,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18650486.cs,Create,The following statement contains a magic number: var classOne = new ClassSix()              {                  // properties                  p_i1 = -123'                  p_i2 = 456'                  p_l1 = -456'                  p_l2 = 123'                  p_s = "str"'                  p_f = 12.34f'                  p_d = 56.78d'                  p_bl = true'                  p_dt = DateTime.Now.AddMonths(-1)'                  p_m = 90.12m'                  p_b1 = 12'                  p_b2 = -34'                  p_c = 'c''                  p_s1 = -21'                  p_s2 = 43'                  p_ts = new TimeSpan(12' 34' 56)'                  p_id = Guid.NewGuid()'                  p_uri = new Uri("http://www.google.com")'                  p_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  p_t = typeof(ClassTwo)'                  p_sa = new[] { "aaa"' "bbb"' "ccc" }'                  p_ia = new[] { 7' 4' 9 }'                  p_e1 = EnumOne.Three'                  p_e2 = EnumTwo.One | EnumTwo.Two'                  p_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })'                  // fields                  f_i1 = -123'                  f_i2 = 456'                  f_l1 = -456'                  f_l2 = 123'                  f_s = "str"'                  f_f = 12.34f'                  f_d = 56.78d'                  f_bl = true'                  f_dt = DateTime.Now.AddMonths(-1)'                  f_m = 90.12m'                  f_b1 = 12'                  f_b2 = -34'                  f_c = 'c''                  f_s1 = -21'                  f_s2 = 43'                  f_ts = new TimeSpan(12' 34' 56)'                  f_id = Guid.NewGuid()'                  f_uri = new Uri("http://www.google.com")'                  f_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  f_t = typeof(ClassTwo)'                  f_sa = new[] { "aaa"' "bbb"' "ccc" }'                  f_ia = new[] { 7' 4' 9 }'                  f_e1 = EnumOne.Three'                  f_e2 = EnumTwo.One | EnumTwo.Two'                  f_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })              };
Magic Number,Examples.Issues,SO18650486,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18650486.cs,Create,The following statement contains a magic number: var classOne = new ClassSix()              {                  // properties                  p_i1 = -123'                  p_i2 = 456'                  p_l1 = -456'                  p_l2 = 123'                  p_s = "str"'                  p_f = 12.34f'                  p_d = 56.78d'                  p_bl = true'                  p_dt = DateTime.Now.AddMonths(-1)'                  p_m = 90.12m'                  p_b1 = 12'                  p_b2 = -34'                  p_c = 'c''                  p_s1 = -21'                  p_s2 = 43'                  p_ts = new TimeSpan(12' 34' 56)'                  p_id = Guid.NewGuid()'                  p_uri = new Uri("http://www.google.com")'                  p_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  p_t = typeof(ClassTwo)'                  p_sa = new[] { "aaa"' "bbb"' "ccc" }'                  p_ia = new[] { 7' 4' 9 }'                  p_e1 = EnumOne.Three'                  p_e2 = EnumTwo.One | EnumTwo.Two'                  p_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })'                  // fields                  f_i1 = -123'                  f_i2 = 456'                  f_l1 = -456'                  f_l2 = 123'                  f_s = "str"'                  f_f = 12.34f'                  f_d = 56.78d'                  f_bl = true'                  f_dt = DateTime.Now.AddMonths(-1)'                  f_m = 90.12m'                  f_b1 = 12'                  f_b2 = -34'                  f_c = 'c''                  f_s1 = -21'                  f_s2 = 43'                  f_ts = new TimeSpan(12' 34' 56)'                  f_id = Guid.NewGuid()'                  f_uri = new Uri("http://www.google.com")'                  f_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  f_t = typeof(ClassTwo)'                  f_sa = new[] { "aaa"' "bbb"' "ccc" }'                  f_ia = new[] { 7' 4' 9 }'                  f_e1 = EnumOne.Three'                  f_e2 = EnumTwo.One | EnumTwo.Two'                  f_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })              };
Magic Number,Examples.Issues,SO18650486,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18650486.cs,Create,The following statement contains a magic number: var classOne = new ClassSix()              {                  // properties                  p_i1 = -123'                  p_i2 = 456'                  p_l1 = -456'                  p_l2 = 123'                  p_s = "str"'                  p_f = 12.34f'                  p_d = 56.78d'                  p_bl = true'                  p_dt = DateTime.Now.AddMonths(-1)'                  p_m = 90.12m'                  p_b1 = 12'                  p_b2 = -34'                  p_c = 'c''                  p_s1 = -21'                  p_s2 = 43'                  p_ts = new TimeSpan(12' 34' 56)'                  p_id = Guid.NewGuid()'                  p_uri = new Uri("http://www.google.com")'                  p_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  p_t = typeof(ClassTwo)'                  p_sa = new[] { "aaa"' "bbb"' "ccc" }'                  p_ia = new[] { 7' 4' 9 }'                  p_e1 = EnumOne.Three'                  p_e2 = EnumTwo.One | EnumTwo.Two'                  p_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })'                  // fields                  f_i1 = -123'                  f_i2 = 456'                  f_l1 = -456'                  f_l2 = 123'                  f_s = "str"'                  f_f = 12.34f'                  f_d = 56.78d'                  f_bl = true'                  f_dt = DateTime.Now.AddMonths(-1)'                  f_m = 90.12m'                  f_b1 = 12'                  f_b2 = -34'                  f_c = 'c''                  f_s1 = -21'                  f_s2 = 43'                  f_ts = new TimeSpan(12' 34' 56)'                  f_id = Guid.NewGuid()'                  f_uri = new Uri("http://www.google.com")'                  f_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  f_t = typeof(ClassTwo)'                  f_sa = new[] { "aaa"' "bbb"' "ccc" }'                  f_ia = new[] { 7' 4' 9 }'                  f_e1 = EnumOne.Three'                  f_e2 = EnumTwo.One | EnumTwo.Two'                  f_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })              };
Magic Number,Examples.Issues,SO18650486,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18650486.cs,Create,The following statement contains a magic number: var classOne = new ClassSix()              {                  // properties                  p_i1 = -123'                  p_i2 = 456'                  p_l1 = -456'                  p_l2 = 123'                  p_s = "str"'                  p_f = 12.34f'                  p_d = 56.78d'                  p_bl = true'                  p_dt = DateTime.Now.AddMonths(-1)'                  p_m = 90.12m'                  p_b1 = 12'                  p_b2 = -34'                  p_c = 'c''                  p_s1 = -21'                  p_s2 = 43'                  p_ts = new TimeSpan(12' 34' 56)'                  p_id = Guid.NewGuid()'                  p_uri = new Uri("http://www.google.com")'                  p_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  p_t = typeof(ClassTwo)'                  p_sa = new[] { "aaa"' "bbb"' "ccc" }'                  p_ia = new[] { 7' 4' 9 }'                  p_e1 = EnumOne.Three'                  p_e2 = EnumTwo.One | EnumTwo.Two'                  p_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })'                  // fields                  f_i1 = -123'                  f_i2 = 456'                  f_l1 = -456'                  f_l2 = 123'                  f_s = "str"'                  f_f = 12.34f'                  f_d = 56.78d'                  f_bl = true'                  f_dt = DateTime.Now.AddMonths(-1)'                  f_m = 90.12m'                  f_b1 = 12'                  f_b2 = -34'                  f_c = 'c''                  f_s1 = -21'                  f_s2 = 43'                  f_ts = new TimeSpan(12' 34' 56)'                  f_id = Guid.NewGuid()'                  f_uri = new Uri("http://www.google.com")'                  f_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  f_t = typeof(ClassTwo)'                  f_sa = new[] { "aaa"' "bbb"' "ccc" }'                  f_ia = new[] { 7' 4' 9 }'                  f_e1 = EnumOne.Three'                  f_e2 = EnumTwo.One | EnumTwo.Two'                  f_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })              };
Magic Number,Examples.Issues,SO18650486,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18650486.cs,Create,The following statement contains a magic number: var classOne = new ClassSix()              {                  // properties                  p_i1 = -123'                  p_i2 = 456'                  p_l1 = -456'                  p_l2 = 123'                  p_s = "str"'                  p_f = 12.34f'                  p_d = 56.78d'                  p_bl = true'                  p_dt = DateTime.Now.AddMonths(-1)'                  p_m = 90.12m'                  p_b1 = 12'                  p_b2 = -34'                  p_c = 'c''                  p_s1 = -21'                  p_s2 = 43'                  p_ts = new TimeSpan(12' 34' 56)'                  p_id = Guid.NewGuid()'                  p_uri = new Uri("http://www.google.com")'                  p_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  p_t = typeof(ClassTwo)'                  p_sa = new[] { "aaa"' "bbb"' "ccc" }'                  p_ia = new[] { 7' 4' 9 }'                  p_e1 = EnumOne.Three'                  p_e2 = EnumTwo.One | EnumTwo.Two'                  p_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })'                  // fields                  f_i1 = -123'                  f_i2 = 456'                  f_l1 = -456'                  f_l2 = 123'                  f_s = "str"'                  f_f = 12.34f'                  f_d = 56.78d'                  f_bl = true'                  f_dt = DateTime.Now.AddMonths(-1)'                  f_m = 90.12m'                  f_b1 = 12'                  f_b2 = -34'                  f_c = 'c''                  f_s1 = -21'                  f_s2 = 43'                  f_ts = new TimeSpan(12' 34' 56)'                  f_id = Guid.NewGuid()'                  f_uri = new Uri("http://www.google.com")'                  f_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  f_t = typeof(ClassTwo)'                  f_sa = new[] { "aaa"' "bbb"' "ccc" }'                  f_ia = new[] { 7' 4' 9 }'                  f_e1 = EnumOne.Three'                  f_e2 = EnumTwo.One | EnumTwo.Two'                  f_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })              };
Magic Number,Examples.Issues,SO18650486,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18650486.cs,Create,The following statement contains a magic number: var classOne = new ClassSix()              {                  // properties                  p_i1 = -123'                  p_i2 = 456'                  p_l1 = -456'                  p_l2 = 123'                  p_s = "str"'                  p_f = 12.34f'                  p_d = 56.78d'                  p_bl = true'                  p_dt = DateTime.Now.AddMonths(-1)'                  p_m = 90.12m'                  p_b1 = 12'                  p_b2 = -34'                  p_c = 'c''                  p_s1 = -21'                  p_s2 = 43'                  p_ts = new TimeSpan(12' 34' 56)'                  p_id = Guid.NewGuid()'                  p_uri = new Uri("http://www.google.com")'                  p_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  p_t = typeof(ClassTwo)'                  p_sa = new[] { "aaa"' "bbb"' "ccc" }'                  p_ia = new[] { 7' 4' 9 }'                  p_e1 = EnumOne.Three'                  p_e2 = EnumTwo.One | EnumTwo.Two'                  p_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })'                  // fields                  f_i1 = -123'                  f_i2 = 456'                  f_l1 = -456'                  f_l2 = 123'                  f_s = "str"'                  f_f = 12.34f'                  f_d = 56.78d'                  f_bl = true'                  f_dt = DateTime.Now.AddMonths(-1)'                  f_m = 90.12m'                  f_b1 = 12'                  f_b2 = -34'                  f_c = 'c''                  f_s1 = -21'                  f_s2 = 43'                  f_ts = new TimeSpan(12' 34' 56)'                  f_id = Guid.NewGuid()'                  f_uri = new Uri("http://www.google.com")'                  f_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  f_t = typeof(ClassTwo)'                  f_sa = new[] { "aaa"' "bbb"' "ccc" }'                  f_ia = new[] { 7' 4' 9 }'                  f_e1 = EnumOne.Three'                  f_e2 = EnumTwo.One | EnumTwo.Two'                  f_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })              };
Magic Number,Examples.Issues,SO18650486,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18650486.cs,Create,The following statement contains a magic number: var classOne = new ClassSix()              {                  // properties                  p_i1 = -123'                  p_i2 = 456'                  p_l1 = -456'                  p_l2 = 123'                  p_s = "str"'                  p_f = 12.34f'                  p_d = 56.78d'                  p_bl = true'                  p_dt = DateTime.Now.AddMonths(-1)'                  p_m = 90.12m'                  p_b1 = 12'                  p_b2 = -34'                  p_c = 'c''                  p_s1 = -21'                  p_s2 = 43'                  p_ts = new TimeSpan(12' 34' 56)'                  p_id = Guid.NewGuid()'                  p_uri = new Uri("http://www.google.com")'                  p_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  p_t = typeof(ClassTwo)'                  p_sa = new[] { "aaa"' "bbb"' "ccc" }'                  p_ia = new[] { 7' 4' 9 }'                  p_e1 = EnumOne.Three'                  p_e2 = EnumTwo.One | EnumTwo.Two'                  p_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })'                  // fields                  f_i1 = -123'                  f_i2 = 456'                  f_l1 = -456'                  f_l2 = 123'                  f_s = "str"'                  f_f = 12.34f'                  f_d = 56.78d'                  f_bl = true'                  f_dt = DateTime.Now.AddMonths(-1)'                  f_m = 90.12m'                  f_b1 = 12'                  f_b2 = -34'                  f_c = 'c''                  f_s1 = -21'                  f_s2 = 43'                  f_ts = new TimeSpan(12' 34' 56)'                  f_id = Guid.NewGuid()'                  f_uri = new Uri("http://www.google.com")'                  f_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  f_t = typeof(ClassTwo)'                  f_sa = new[] { "aaa"' "bbb"' "ccc" }'                  f_ia = new[] { 7' 4' 9 }'                  f_e1 = EnumOne.Three'                  f_e2 = EnumTwo.One | EnumTwo.Two'                  f_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })              };
Magic Number,Examples.Issues,SO18650486,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18650486.cs,Create,The following statement contains a magic number: var classOne = new ClassSix()              {                  // properties                  p_i1 = -123'                  p_i2 = 456'                  p_l1 = -456'                  p_l2 = 123'                  p_s = "str"'                  p_f = 12.34f'                  p_d = 56.78d'                  p_bl = true'                  p_dt = DateTime.Now.AddMonths(-1)'                  p_m = 90.12m'                  p_b1 = 12'                  p_b2 = -34'                  p_c = 'c''                  p_s1 = -21'                  p_s2 = 43'                  p_ts = new TimeSpan(12' 34' 56)'                  p_id = Guid.NewGuid()'                  p_uri = new Uri("http://www.google.com")'                  p_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  p_t = typeof(ClassTwo)'                  p_sa = new[] { "aaa"' "bbb"' "ccc" }'                  p_ia = new[] { 7' 4' 9 }'                  p_e1 = EnumOne.Three'                  p_e2 = EnumTwo.One | EnumTwo.Two'                  p_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })'                  // fields                  f_i1 = -123'                  f_i2 = 456'                  f_l1 = -456'                  f_l2 = 123'                  f_s = "str"'                  f_f = 12.34f'                  f_d = 56.78d'                  f_bl = true'                  f_dt = DateTime.Now.AddMonths(-1)'                  f_m = 90.12m'                  f_b1 = 12'                  f_b2 = -34'                  f_c = 'c''                  f_s1 = -21'                  f_s2 = 43'                  f_ts = new TimeSpan(12' 34' 56)'                  f_id = Guid.NewGuid()'                  f_uri = new Uri("http://www.google.com")'                  f_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  f_t = typeof(ClassTwo)'                  f_sa = new[] { "aaa"' "bbb"' "ccc" }'                  f_ia = new[] { 7' 4' 9 }'                  f_e1 = EnumOne.Three'                  f_e2 = EnumTwo.One | EnumTwo.Two'                  f_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })              };
Magic Number,Examples.Issues,SO18650486,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18650486.cs,Create,The following statement contains a magic number: var classOne = new ClassSix()              {                  // properties                  p_i1 = -123'                  p_i2 = 456'                  p_l1 = -456'                  p_l2 = 123'                  p_s = "str"'                  p_f = 12.34f'                  p_d = 56.78d'                  p_bl = true'                  p_dt = DateTime.Now.AddMonths(-1)'                  p_m = 90.12m'                  p_b1 = 12'                  p_b2 = -34'                  p_c = 'c''                  p_s1 = -21'                  p_s2 = 43'                  p_ts = new TimeSpan(12' 34' 56)'                  p_id = Guid.NewGuid()'                  p_uri = new Uri("http://www.google.com")'                  p_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  p_t = typeof(ClassTwo)'                  p_sa = new[] { "aaa"' "bbb"' "ccc" }'                  p_ia = new[] { 7' 4' 9 }'                  p_e1 = EnumOne.Three'                  p_e2 = EnumTwo.One | EnumTwo.Two'                  p_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })'                  // fields                  f_i1 = -123'                  f_i2 = 456'                  f_l1 = -456'                  f_l2 = 123'                  f_s = "str"'                  f_f = 12.34f'                  f_d = 56.78d'                  f_bl = true'                  f_dt = DateTime.Now.AddMonths(-1)'                  f_m = 90.12m'                  f_b1 = 12'                  f_b2 = -34'                  f_c = 'c''                  f_s1 = -21'                  f_s2 = 43'                  f_ts = new TimeSpan(12' 34' 56)'                  f_id = Guid.NewGuid()'                  f_uri = new Uri("http://www.google.com")'                  f_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  f_t = typeof(ClassTwo)'                  f_sa = new[] { "aaa"' "bbb"' "ccc" }'                  f_ia = new[] { 7' 4' 9 }'                  f_e1 = EnumOne.Three'                  f_e2 = EnumTwo.One | EnumTwo.Two'                  f_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })              };
Magic Number,Examples.Issues,SO18650486,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18650486.cs,Create,The following statement contains a magic number: var classOne = new ClassSix()              {                  // properties                  p_i1 = -123'                  p_i2 = 456'                  p_l1 = -456'                  p_l2 = 123'                  p_s = "str"'                  p_f = 12.34f'                  p_d = 56.78d'                  p_bl = true'                  p_dt = DateTime.Now.AddMonths(-1)'                  p_m = 90.12m'                  p_b1 = 12'                  p_b2 = -34'                  p_c = 'c''                  p_s1 = -21'                  p_s2 = 43'                  p_ts = new TimeSpan(12' 34' 56)'                  p_id = Guid.NewGuid()'                  p_uri = new Uri("http://www.google.com")'                  p_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  p_t = typeof(ClassTwo)'                  p_sa = new[] { "aaa"' "bbb"' "ccc" }'                  p_ia = new[] { 7' 4' 9 }'                  p_e1 = EnumOne.Three'                  p_e2 = EnumTwo.One | EnumTwo.Two'                  p_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })'                  // fields                  f_i1 = -123'                  f_i2 = 456'                  f_l1 = -456'                  f_l2 = 123'                  f_s = "str"'                  f_f = 12.34f'                  f_d = 56.78d'                  f_bl = true'                  f_dt = DateTime.Now.AddMonths(-1)'                  f_m = 90.12m'                  f_b1 = 12'                  f_b2 = -34'                  f_c = 'c''                  f_s1 = -21'                  f_s2 = 43'                  f_ts = new TimeSpan(12' 34' 56)'                  f_id = Guid.NewGuid()'                  f_uri = new Uri("http://www.google.com")'                  f_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  f_t = typeof(ClassTwo)'                  f_sa = new[] { "aaa"' "bbb"' "ccc" }'                  f_ia = new[] { 7' 4' 9 }'                  f_e1 = EnumOne.Three'                  f_e2 = EnumTwo.One | EnumTwo.Two'                  f_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })              };
Magic Number,Examples.Issues,SO18650486,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18650486.cs,Create,The following statement contains a magic number: var classOne = new ClassSix()              {                  // properties                  p_i1 = -123'                  p_i2 = 456'                  p_l1 = -456'                  p_l2 = 123'                  p_s = "str"'                  p_f = 12.34f'                  p_d = 56.78d'                  p_bl = true'                  p_dt = DateTime.Now.AddMonths(-1)'                  p_m = 90.12m'                  p_b1 = 12'                  p_b2 = -34'                  p_c = 'c''                  p_s1 = -21'                  p_s2 = 43'                  p_ts = new TimeSpan(12' 34' 56)'                  p_id = Guid.NewGuid()'                  p_uri = new Uri("http://www.google.com")'                  p_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  p_t = typeof(ClassTwo)'                  p_sa = new[] { "aaa"' "bbb"' "ccc" }'                  p_ia = new[] { 7' 4' 9 }'                  p_e1 = EnumOne.Three'                  p_e2 = EnumTwo.One | EnumTwo.Two'                  p_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })'                  // fields                  f_i1 = -123'                  f_i2 = 456'                  f_l1 = -456'                  f_l2 = 123'                  f_s = "str"'                  f_f = 12.34f'                  f_d = 56.78d'                  f_bl = true'                  f_dt = DateTime.Now.AddMonths(-1)'                  f_m = 90.12m'                  f_b1 = 12'                  f_b2 = -34'                  f_c = 'c''                  f_s1 = -21'                  f_s2 = 43'                  f_ts = new TimeSpan(12' 34' 56)'                  f_id = Guid.NewGuid()'                  f_uri = new Uri("http://www.google.com")'                  f_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  f_t = typeof(ClassTwo)'                  f_sa = new[] { "aaa"' "bbb"' "ccc" }'                  f_ia = new[] { 7' 4' 9 }'                  f_e1 = EnumOne.Three'                  f_e2 = EnumTwo.One | EnumTwo.Two'                  f_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })              };
Magic Number,Examples.Issues,SO18650486,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18650486.cs,Create,The following statement contains a magic number: var classOne = new ClassSix()              {                  // properties                  p_i1 = -123'                  p_i2 = 456'                  p_l1 = -456'                  p_l2 = 123'                  p_s = "str"'                  p_f = 12.34f'                  p_d = 56.78d'                  p_bl = true'                  p_dt = DateTime.Now.AddMonths(-1)'                  p_m = 90.12m'                  p_b1 = 12'                  p_b2 = -34'                  p_c = 'c''                  p_s1 = -21'                  p_s2 = 43'                  p_ts = new TimeSpan(12' 34' 56)'                  p_id = Guid.NewGuid()'                  p_uri = new Uri("http://www.google.com")'                  p_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  p_t = typeof(ClassTwo)'                  p_sa = new[] { "aaa"' "bbb"' "ccc" }'                  p_ia = new[] { 7' 4' 9 }'                  p_e1 = EnumOne.Three'                  p_e2 = EnumTwo.One | EnumTwo.Two'                  p_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })'                  // fields                  f_i1 = -123'                  f_i2 = 456'                  f_l1 = -456'                  f_l2 = 123'                  f_s = "str"'                  f_f = 12.34f'                  f_d = 56.78d'                  f_bl = true'                  f_dt = DateTime.Now.AddMonths(-1)'                  f_m = 90.12m'                  f_b1 = 12'                  f_b2 = -34'                  f_c = 'c''                  f_s1 = -21'                  f_s2 = 43'                  f_ts = new TimeSpan(12' 34' 56)'                  f_id = Guid.NewGuid()'                  f_uri = new Uri("http://www.google.com")'                  f_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  f_t = typeof(ClassTwo)'                  f_sa = new[] { "aaa"' "bbb"' "ccc" }'                  f_ia = new[] { 7' 4' 9 }'                  f_e1 = EnumOne.Three'                  f_e2 = EnumTwo.One | EnumTwo.Two'                  f_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })              };
Magic Number,Examples.Issues,SO18650486,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18650486.cs,Create,The following statement contains a magic number: var classOne = new ClassSix()              {                  // properties                  p_i1 = -123'                  p_i2 = 456'                  p_l1 = -456'                  p_l2 = 123'                  p_s = "str"'                  p_f = 12.34f'                  p_d = 56.78d'                  p_bl = true'                  p_dt = DateTime.Now.AddMonths(-1)'                  p_m = 90.12m'                  p_b1 = 12'                  p_b2 = -34'                  p_c = 'c''                  p_s1 = -21'                  p_s2 = 43'                  p_ts = new TimeSpan(12' 34' 56)'                  p_id = Guid.NewGuid()'                  p_uri = new Uri("http://www.google.com")'                  p_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  p_t = typeof(ClassTwo)'                  p_sa = new[] { "aaa"' "bbb"' "ccc" }'                  p_ia = new[] { 7' 4' 9 }'                  p_e1 = EnumOne.Three'                  p_e2 = EnumTwo.One | EnumTwo.Two'                  p_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })'                  // fields                  f_i1 = -123'                  f_i2 = 456'                  f_l1 = -456'                  f_l2 = 123'                  f_s = "str"'                  f_f = 12.34f'                  f_d = 56.78d'                  f_bl = true'                  f_dt = DateTime.Now.AddMonths(-1)'                  f_m = 90.12m'                  f_b1 = 12'                  f_b2 = -34'                  f_c = 'c''                  f_s1 = -21'                  f_s2 = 43'                  f_ts = new TimeSpan(12' 34' 56)'                  f_id = Guid.NewGuid()'                  f_uri = new Uri("http://www.google.com")'                  f_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  f_t = typeof(ClassTwo)'                  f_sa = new[] { "aaa"' "bbb"' "ccc" }'                  f_ia = new[] { 7' 4' 9 }'                  f_e1 = EnumOne.Three'                  f_e2 = EnumTwo.One | EnumTwo.Two'                  f_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })              };
Magic Number,Examples.Issues,SO18650486,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18650486.cs,Create,The following statement contains a magic number: var classOne = new ClassSix()              {                  // properties                  p_i1 = -123'                  p_i2 = 456'                  p_l1 = -456'                  p_l2 = 123'                  p_s = "str"'                  p_f = 12.34f'                  p_d = 56.78d'                  p_bl = true'                  p_dt = DateTime.Now.AddMonths(-1)'                  p_m = 90.12m'                  p_b1 = 12'                  p_b2 = -34'                  p_c = 'c''                  p_s1 = -21'                  p_s2 = 43'                  p_ts = new TimeSpan(12' 34' 56)'                  p_id = Guid.NewGuid()'                  p_uri = new Uri("http://www.google.com")'                  p_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  p_t = typeof(ClassTwo)'                  p_sa = new[] { "aaa"' "bbb"' "ccc" }'                  p_ia = new[] { 7' 4' 9 }'                  p_e1 = EnumOne.Three'                  p_e2 = EnumTwo.One | EnumTwo.Two'                  p_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })'                  // fields                  f_i1 = -123'                  f_i2 = 456'                  f_l1 = -456'                  f_l2 = 123'                  f_s = "str"'                  f_f = 12.34f'                  f_d = 56.78d'                  f_bl = true'                  f_dt = DateTime.Now.AddMonths(-1)'                  f_m = 90.12m'                  f_b1 = 12'                  f_b2 = -34'                  f_c = 'c''                  f_s1 = -21'                  f_s2 = 43'                  f_ts = new TimeSpan(12' 34' 56)'                  f_id = Guid.NewGuid()'                  f_uri = new Uri("http://www.google.com")'                  f_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  f_t = typeof(ClassTwo)'                  f_sa = new[] { "aaa"' "bbb"' "ccc" }'                  f_ia = new[] { 7' 4' 9 }'                  f_e1 = EnumOne.Three'                  f_e2 = EnumTwo.One | EnumTwo.Two'                  f_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })              };
Magic Number,Examples.Issues,SO18650486,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18650486.cs,Create,The following statement contains a magic number: var classOne = new ClassSix()              {                  // properties                  p_i1 = -123'                  p_i2 = 456'                  p_l1 = -456'                  p_l2 = 123'                  p_s = "str"'                  p_f = 12.34f'                  p_d = 56.78d'                  p_bl = true'                  p_dt = DateTime.Now.AddMonths(-1)'                  p_m = 90.12m'                  p_b1 = 12'                  p_b2 = -34'                  p_c = 'c''                  p_s1 = -21'                  p_s2 = 43'                  p_ts = new TimeSpan(12' 34' 56)'                  p_id = Guid.NewGuid()'                  p_uri = new Uri("http://www.google.com")'                  p_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  p_t = typeof(ClassTwo)'                  p_sa = new[] { "aaa"' "bbb"' "ccc" }'                  p_ia = new[] { 7' 4' 9 }'                  p_e1 = EnumOne.Three'                  p_e2 = EnumTwo.One | EnumTwo.Two'                  p_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })'                  // fields                  f_i1 = -123'                  f_i2 = 456'                  f_l1 = -456'                  f_l2 = 123'                  f_s = "str"'                  f_f = 12.34f'                  f_d = 56.78d'                  f_bl = true'                  f_dt = DateTime.Now.AddMonths(-1)'                  f_m = 90.12m'                  f_b1 = 12'                  f_b2 = -34'                  f_c = 'c''                  f_s1 = -21'                  f_s2 = 43'                  f_ts = new TimeSpan(12' 34' 56)'                  f_id = Guid.NewGuid()'                  f_uri = new Uri("http://www.google.com")'                  f_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  f_t = typeof(ClassTwo)'                  f_sa = new[] { "aaa"' "bbb"' "ccc" }'                  f_ia = new[] { 7' 4' 9 }'                  f_e1 = EnumOne.Three'                  f_e2 = EnumTwo.One | EnumTwo.Two'                  f_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })              };
Magic Number,Examples.Issues,SO18650486,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18650486.cs,Create,The following statement contains a magic number: var classOne = new ClassSix()              {                  // properties                  p_i1 = -123'                  p_i2 = 456'                  p_l1 = -456'                  p_l2 = 123'                  p_s = "str"'                  p_f = 12.34f'                  p_d = 56.78d'                  p_bl = true'                  p_dt = DateTime.Now.AddMonths(-1)'                  p_m = 90.12m'                  p_b1 = 12'                  p_b2 = -34'                  p_c = 'c''                  p_s1 = -21'                  p_s2 = 43'                  p_ts = new TimeSpan(12' 34' 56)'                  p_id = Guid.NewGuid()'                  p_uri = new Uri("http://www.google.com")'                  p_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  p_t = typeof(ClassTwo)'                  p_sa = new[] { "aaa"' "bbb"' "ccc" }'                  p_ia = new[] { 7' 4' 9 }'                  p_e1 = EnumOne.Three'                  p_e2 = EnumTwo.One | EnumTwo.Two'                  p_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })'                  // fields                  f_i1 = -123'                  f_i2 = 456'                  f_l1 = -456'                  f_l2 = 123'                  f_s = "str"'                  f_f = 12.34f'                  f_d = 56.78d'                  f_bl = true'                  f_dt = DateTime.Now.AddMonths(-1)'                  f_m = 90.12m'                  f_b1 = 12'                  f_b2 = -34'                  f_c = 'c''                  f_s1 = -21'                  f_s2 = 43'                  f_ts = new TimeSpan(12' 34' 56)'                  f_id = Guid.NewGuid()'                  f_uri = new Uri("http://www.google.com")'                  f_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  f_t = typeof(ClassTwo)'                  f_sa = new[] { "aaa"' "bbb"' "ccc" }'                  f_ia = new[] { 7' 4' 9 }'                  f_e1 = EnumOne.Three'                  f_e2 = EnumTwo.One | EnumTwo.Two'                  f_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })              };
Magic Number,Examples.Issues,SO18650486,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18650486.cs,Create,The following statement contains a magic number: var classOne = new ClassSix()              {                  // properties                  p_i1 = -123'                  p_i2 = 456'                  p_l1 = -456'                  p_l2 = 123'                  p_s = "str"'                  p_f = 12.34f'                  p_d = 56.78d'                  p_bl = true'                  p_dt = DateTime.Now.AddMonths(-1)'                  p_m = 90.12m'                  p_b1 = 12'                  p_b2 = -34'                  p_c = 'c''                  p_s1 = -21'                  p_s2 = 43'                  p_ts = new TimeSpan(12' 34' 56)'                  p_id = Guid.NewGuid()'                  p_uri = new Uri("http://www.google.com")'                  p_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  p_t = typeof(ClassTwo)'                  p_sa = new[] { "aaa"' "bbb"' "ccc" }'                  p_ia = new[] { 7' 4' 9 }'                  p_e1 = EnumOne.Three'                  p_e2 = EnumTwo.One | EnumTwo.Two'                  p_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })'                  // fields                  f_i1 = -123'                  f_i2 = 456'                  f_l1 = -456'                  f_l2 = 123'                  f_s = "str"'                  f_f = 12.34f'                  f_d = 56.78d'                  f_bl = true'                  f_dt = DateTime.Now.AddMonths(-1)'                  f_m = 90.12m'                  f_b1 = 12'                  f_b2 = -34'                  f_c = 'c''                  f_s1 = -21'                  f_s2 = 43'                  f_ts = new TimeSpan(12' 34' 56)'                  f_id = Guid.NewGuid()'                  f_uri = new Uri("http://www.google.com")'                  f_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  f_t = typeof(ClassTwo)'                  f_sa = new[] { "aaa"' "bbb"' "ccc" }'                  f_ia = new[] { 7' 4' 9 }'                  f_e1 = EnumOne.Three'                  f_e2 = EnumTwo.One | EnumTwo.Two'                  f_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })              };
Magic Number,Examples.Issues,SO18650486,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18650486.cs,Create,The following statement contains a magic number: var classOne = new ClassSix()              {                  // properties                  p_i1 = -123'                  p_i2 = 456'                  p_l1 = -456'                  p_l2 = 123'                  p_s = "str"'                  p_f = 12.34f'                  p_d = 56.78d'                  p_bl = true'                  p_dt = DateTime.Now.AddMonths(-1)'                  p_m = 90.12m'                  p_b1 = 12'                  p_b2 = -34'                  p_c = 'c''                  p_s1 = -21'                  p_s2 = 43'                  p_ts = new TimeSpan(12' 34' 56)'                  p_id = Guid.NewGuid()'                  p_uri = new Uri("http://www.google.com")'                  p_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  p_t = typeof(ClassTwo)'                  p_sa = new[] { "aaa"' "bbb"' "ccc" }'                  p_ia = new[] { 7' 4' 9 }'                  p_e1 = EnumOne.Three'                  p_e2 = EnumTwo.One | EnumTwo.Two'                  p_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })'                  // fields                  f_i1 = -123'                  f_i2 = 456'                  f_l1 = -456'                  f_l2 = 123'                  f_s = "str"'                  f_f = 12.34f'                  f_d = 56.78d'                  f_bl = true'                  f_dt = DateTime.Now.AddMonths(-1)'                  f_m = 90.12m'                  f_b1 = 12'                  f_b2 = -34'                  f_c = 'c''                  f_s1 = -21'                  f_s2 = 43'                  f_ts = new TimeSpan(12' 34' 56)'                  f_id = Guid.NewGuid()'                  f_uri = new Uri("http://www.google.com")'                  f_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  f_t = typeof(ClassTwo)'                  f_sa = new[] { "aaa"' "bbb"' "ccc" }'                  f_ia = new[] { 7' 4' 9 }'                  f_e1 = EnumOne.Three'                  f_e2 = EnumTwo.One | EnumTwo.Two'                  f_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })              };
Magic Number,Examples.Issues,SO18650486,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18650486.cs,Create,The following statement contains a magic number: var classOne = new ClassSix()              {                  // properties                  p_i1 = -123'                  p_i2 = 456'                  p_l1 = -456'                  p_l2 = 123'                  p_s = "str"'                  p_f = 12.34f'                  p_d = 56.78d'                  p_bl = true'                  p_dt = DateTime.Now.AddMonths(-1)'                  p_m = 90.12m'                  p_b1 = 12'                  p_b2 = -34'                  p_c = 'c''                  p_s1 = -21'                  p_s2 = 43'                  p_ts = new TimeSpan(12' 34' 56)'                  p_id = Guid.NewGuid()'                  p_uri = new Uri("http://www.google.com")'                  p_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  p_t = typeof(ClassTwo)'                  p_sa = new[] { "aaa"' "bbb"' "ccc" }'                  p_ia = new[] { 7' 4' 9 }'                  p_e1 = EnumOne.Three'                  p_e2 = EnumTwo.One | EnumTwo.Two'                  p_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })'                  // fields                  f_i1 = -123'                  f_i2 = 456'                  f_l1 = -456'                  f_l2 = 123'                  f_s = "str"'                  f_f = 12.34f'                  f_d = 56.78d'                  f_bl = true'                  f_dt = DateTime.Now.AddMonths(-1)'                  f_m = 90.12m'                  f_b1 = 12'                  f_b2 = -34'                  f_c = 'c''                  f_s1 = -21'                  f_s2 = 43'                  f_ts = new TimeSpan(12' 34' 56)'                  f_id = Guid.NewGuid()'                  f_uri = new Uri("http://www.google.com")'                  f_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  f_t = typeof(ClassTwo)'                  f_sa = new[] { "aaa"' "bbb"' "ccc" }'                  f_ia = new[] { 7' 4' 9 }'                  f_e1 = EnumOne.Three'                  f_e2 = EnumTwo.One | EnumTwo.Two'                  f_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })              };
Magic Number,Examples.Issues,SO18650486,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18650486.cs,Create,The following statement contains a magic number: var classOne = new ClassSix()              {                  // properties                  p_i1 = -123'                  p_i2 = 456'                  p_l1 = -456'                  p_l2 = 123'                  p_s = "str"'                  p_f = 12.34f'                  p_d = 56.78d'                  p_bl = true'                  p_dt = DateTime.Now.AddMonths(-1)'                  p_m = 90.12m'                  p_b1 = 12'                  p_b2 = -34'                  p_c = 'c''                  p_s1 = -21'                  p_s2 = 43'                  p_ts = new TimeSpan(12' 34' 56)'                  p_id = Guid.NewGuid()'                  p_uri = new Uri("http://www.google.com")'                  p_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  p_t = typeof(ClassTwo)'                  p_sa = new[] { "aaa"' "bbb"' "ccc" }'                  p_ia = new[] { 7' 4' 9 }'                  p_e1 = EnumOne.Three'                  p_e2 = EnumTwo.One | EnumTwo.Two'                  p_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })'                  // fields                  f_i1 = -123'                  f_i2 = 456'                  f_l1 = -456'                  f_l2 = 123'                  f_s = "str"'                  f_f = 12.34f'                  f_d = 56.78d'                  f_bl = true'                  f_dt = DateTime.Now.AddMonths(-1)'                  f_m = 90.12m'                  f_b1 = 12'                  f_b2 = -34'                  f_c = 'c''                  f_s1 = -21'                  f_s2 = 43'                  f_ts = new TimeSpan(12' 34' 56)'                  f_id = Guid.NewGuid()'                  f_uri = new Uri("http://www.google.com")'                  f_ba = new[] { (byte)1' (byte)3' (byte)2 }'                  f_t = typeof(ClassTwo)'                  f_sa = new[] { "aaa"' "bbb"' "ccc" }'                  f_ia = new[] { 7' 4' 9 }'                  f_e1 = EnumOne.Three'                  f_e2 = EnumTwo.One | EnumTwo.Two'                  f_list = new List<ClassFive>(new[]                  {                      new ClassFive()                      {                          i = 1'                          s = "1"                      }'                      new ClassFive()                      {                          i = 2'                          s = "2"                      }                  })              };
Magic Number,Examples.Issues,SO18663361,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18663361.cs,ExecuteFloat,The following statement contains a magic number: var obj = new MarketDataEntry_Float { EntryPrice = 123.45F };
Magic Number,Examples.Issues,SO18663361,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18663361.cs,ExecuteFloat,The following statement contains a magic number: Assert.Equal(123.45F' clone.EntryPrice);
Magic Number,Examples.Issues,SO18663361,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18663361.cs,ExecuteDouble,The following statement contains a magic number: var obj = new MarketDataEntry_Double { EntryPrice = 123.45 };
Magic Number,Examples.Issues,SO18663361,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18663361.cs,ExecuteDouble,The following statement contains a magic number: Assert.Equal(123.45' clone.EntryPrice);
Magic Number,Examples.Issues,SO18663361,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18663361.cs,ExecuteDecimal,The following statement contains a magic number: var obj = new MarketDataEntry_Decimal { EntryPrice = 123.45M };
Magic Number,Examples.Issues,SO18663361,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18663361.cs,ExecuteDecimal,The following statement contains a magic number: Assert.Equal(123.45M' clone.EntryPrice);
Magic Number,Examples.Issues,SO18663361,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18663361.cs,ExecuteFloat2,The following statement contains a magic number: var obj = new CreditMarketDataEntry_Float { EntryPrice = 123.45F };
Magic Number,Examples.Issues,SO18663361,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18663361.cs,ExecuteFloat2,The following statement contains a magic number: Assert.Equal(123.45F' clone.EntryPrice);
Magic Number,Examples.Issues,SO18663361,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18663361.cs,ExecuteDouble2,The following statement contains a magic number: var obj = new CreditMarketDataEntry_Double { EntryPrice = 123.45 };
Magic Number,Examples.Issues,SO18663361,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18663361.cs,ExecuteDouble2,The following statement contains a magic number: Assert.Equal(123.45' clone.EntryPrice);
Magic Number,Examples.Issues,SO18663361,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18663361.cs,ExecuteDecimal2,The following statement contains a magic number: var obj = new CreditMarketDataEntry_Decimal { EntryPrice = 123.45M };
Magic Number,Examples.Issues,SO18663361,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18663361.cs,ExecuteDecimal2,The following statement contains a magic number: Assert.Equal(123.45M' clone.EntryPrice);
Magic Number,Examples.Issues,SO18695728,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18695728.cs,Execute,The following statement contains a magic number: RuntimeTypeModel.Default[typeof(WebSyncedObject)].AddSubType(10' typeof(GPSReading));
Magic Number,Examples.Issues,SO18695728,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18695728.cs,Execute,The following statement contains a magic number: RuntimeTypeModel.Default[typeof(WebSyncedObject)].AddSubType(11' typeof(TemperatureReading));
Magic Number,Examples.Issues,SO18695728,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18695728.cs,Execute,The following statement contains a magic number: var list = new List<WebSyncedObject>               {                   new GPSReading { SpeedKM = 123.45M }'                   new TemperatureReading { Temperature = 67.89M }               };
Magic Number,Examples.Issues,SO18695728,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18695728.cs,Execute,The following statement contains a magic number: var list = new List<WebSyncedObject>               {                   new GPSReading { SpeedKM = 123.45M }'                   new TemperatureReading { Temperature = 67.89M }               };
Magic Number,Examples.Issues,SO18695728,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO18695728.cs,Execute,The following statement contains a magic number: Assert.Equal(2' clone.Count);
Magic Number,Examples.Issues,SO19161823,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO19161823.cs,Execute,The following statement contains a magic number: var container = new Container { Data = new Dummy { Positive = 3 } };
Magic Number,Examples.Issues,SO19161823,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO19161823.cs,Execute,The following statement contains a magic number: Assert.Equal(3' container.Data.Positive);
Magic Number,Examples.Issues,SO1930209,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO1930209.cs,ExecuteDeeplyNestedShouldNotBuffer,The following statement contains a magic number: var arr = new B[5];
Magic Number,Examples.Issues,SO1930209,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO1930209.cs,ExecuteDeeplyNestedShouldNotBuffer,The following statement contains a magic number: var arr2 = new C[20000];
Magic Number,Examples.Issues,SO3083847,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO3083847.cs,Roundtrip,The following statement contains a magic number: CacheData data = new CacheData              {                  Bar = new List<CacheLoadItem<int>>                          {                              new CacheLoadItem<int>() { ID = 123' Name = "abc"' Value = 234}'                              new CacheLoadItem<int>() { ID = 345' Name = "bcd"' Value = 456}'                          }'                  YYY = new List<CacheLoadItem<string>>                          {                              new CacheLoadItem<string>() { ID = 567' Name = "cde"' Value = "def"}'                              new CacheLoadItem<string>() { ID = 678' Name = "efg"' Value = "fgh"}'                              new CacheLoadItem<string>() { ID = 789' Name = "ghi"' Value = "hij"}'                          }              };
Magic Number,Examples.Issues,SO3083847,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO3083847.cs,Roundtrip,The following statement contains a magic number: CacheData data = new CacheData              {                  Bar = new List<CacheLoadItem<int>>                          {                              new CacheLoadItem<int>() { ID = 123' Name = "abc"' Value = 234}'                              new CacheLoadItem<int>() { ID = 345' Name = "bcd"' Value = 456}'                          }'                  YYY = new List<CacheLoadItem<string>>                          {                              new CacheLoadItem<string>() { ID = 567' Name = "cde"' Value = "def"}'                              new CacheLoadItem<string>() { ID = 678' Name = "efg"' Value = "fgh"}'                              new CacheLoadItem<string>() { ID = 789' Name = "ghi"' Value = "hij"}'                          }              };
Magic Number,Examples.Issues,SO3083847,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO3083847.cs,Roundtrip,The following statement contains a magic number: CacheData data = new CacheData              {                  Bar = new List<CacheLoadItem<int>>                          {                              new CacheLoadItem<int>() { ID = 123' Name = "abc"' Value = 234}'                              new CacheLoadItem<int>() { ID = 345' Name = "bcd"' Value = 456}'                          }'                  YYY = new List<CacheLoadItem<string>>                          {                              new CacheLoadItem<string>() { ID = 567' Name = "cde"' Value = "def"}'                              new CacheLoadItem<string>() { ID = 678' Name = "efg"' Value = "fgh"}'                              new CacheLoadItem<string>() { ID = 789' Name = "ghi"' Value = "hij"}'                          }              };
Magic Number,Examples.Issues,SO3083847,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO3083847.cs,Roundtrip,The following statement contains a magic number: CacheData data = new CacheData              {                  Bar = new List<CacheLoadItem<int>>                          {                              new CacheLoadItem<int>() { ID = 123' Name = "abc"' Value = 234}'                              new CacheLoadItem<int>() { ID = 345' Name = "bcd"' Value = 456}'                          }'                  YYY = new List<CacheLoadItem<string>>                          {                              new CacheLoadItem<string>() { ID = 567' Name = "cde"' Value = "def"}'                              new CacheLoadItem<string>() { ID = 678' Name = "efg"' Value = "fgh"}'                              new CacheLoadItem<string>() { ID = 789' Name = "ghi"' Value = "hij"}'                          }              };
Magic Number,Examples.Issues,SO3083847,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO3083847.cs,Roundtrip,The following statement contains a magic number: CacheData data = new CacheData              {                  Bar = new List<CacheLoadItem<int>>                          {                              new CacheLoadItem<int>() { ID = 123' Name = "abc"' Value = 234}'                              new CacheLoadItem<int>() { ID = 345' Name = "bcd"' Value = 456}'                          }'                  YYY = new List<CacheLoadItem<string>>                          {                              new CacheLoadItem<string>() { ID = 567' Name = "cde"' Value = "def"}'                              new CacheLoadItem<string>() { ID = 678' Name = "efg"' Value = "fgh"}'                              new CacheLoadItem<string>() { ID = 789' Name = "ghi"' Value = "hij"}'                          }              };
Magic Number,Examples.Issues,SO3083847,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO3083847.cs,Roundtrip,The following statement contains a magic number: CacheData data = new CacheData              {                  Bar = new List<CacheLoadItem<int>>                          {                              new CacheLoadItem<int>() { ID = 123' Name = "abc"' Value = 234}'                              new CacheLoadItem<int>() { ID = 345' Name = "bcd"' Value = 456}'                          }'                  YYY = new List<CacheLoadItem<string>>                          {                              new CacheLoadItem<string>() { ID = 567' Name = "cde"' Value = "def"}'                              new CacheLoadItem<string>() { ID = 678' Name = "efg"' Value = "fgh"}'                              new CacheLoadItem<string>() { ID = 789' Name = "ghi"' Value = "hij"}'                          }              };
Magic Number,Examples.Issues,SO3083847,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO3083847.cs,Roundtrip,The following statement contains a magic number: CacheData data = new CacheData              {                  Bar = new List<CacheLoadItem<int>>                          {                              new CacheLoadItem<int>() { ID = 123' Name = "abc"' Value = 234}'                              new CacheLoadItem<int>() { ID = 345' Name = "bcd"' Value = 456}'                          }'                  YYY = new List<CacheLoadItem<string>>                          {                              new CacheLoadItem<string>() { ID = 567' Name = "cde"' Value = "def"}'                              new CacheLoadItem<string>() { ID = 678' Name = "efg"' Value = "fgh"}'                              new CacheLoadItem<string>() { ID = 789' Name = "ghi"' Value = "hij"}'                          }              };
Magic Number,Examples.Issues,SO3083847,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO3083847.cs,Roundtrip,The following statement contains a magic number: Assert.Equal(2' clone.Bar.Count);
Magic Number,Examples.Issues,SO3083847,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO3083847.cs,Roundtrip,The following statement contains a magic number: Assert.Equal(3' clone.YYY.Count);
Magic Number,Examples.Issues,SO3083847,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO3083847.cs,Roundtrip,The following statement contains a magic number: Assert.True(bar.ID == 123 && bar.Name == "abc" && bar.Value == 234);
Magic Number,Examples.Issues,SO3083847,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO3083847.cs,Roundtrip,The following statement contains a magic number: Assert.True(bar.ID == 123 && bar.Name == "abc" && bar.Value == 234);
Magic Number,Examples.Issues,SO3083847,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO3083847.cs,Roundtrip,The following statement contains a magic number: Assert.True(bar.ID == 345 && bar.Name == "bcd" && bar.Value == 456);
Magic Number,Examples.Issues,SO3083847,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO3083847.cs,Roundtrip,The following statement contains a magic number: Assert.True(bar.ID == 345 && bar.Name == "bcd" && bar.Value == 456);
Magic Number,Examples.Issues,SO3083847,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO3083847.cs,Roundtrip,The following statement contains a magic number: Assert.True(yyy.ID == 567 && yyy.Name == "cde" && yyy.Value == "def");
Magic Number,Examples.Issues,SO3083847,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO3083847.cs,Roundtrip,The following statement contains a magic number: Assert.True(yyy.ID == 678 && yyy.Name == "efg" && yyy.Value == "fgh");
Magic Number,Examples.Issues,SO3083847,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO3083847.cs,Roundtrip,The following statement contains a magic number: yyy = clone.YYY[2];
Magic Number,Examples.Issues,SO3083847,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO3083847.cs,Roundtrip,The following statement contains a magic number: Assert.True(yyy.ID == 789 && yyy.Name == "ghi" && yyy.Value == "hij");
Magic Number,Examples.Issues,SO3261310,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO3261310.cs,TestBasicRoundTrip,The following statement contains a magic number: Assert.Equal(2' clone.Keys.Count);
Magic Number,Examples.Issues,SO3261310,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO3261310.cs,TestBasicRoundTrip,The following statement contains a magic number: Assert.Equal(2' list.Count);
Magic Number,Examples.Issues,SO6109616,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO6109616.cs,Execute,The following statement contains a magic number: var tagToType = new Dictionary<int' Type>                  {                      {1' typeof(B)}' {2' typeof(C)}                  };
Magic Number,Examples.Issues,SO6109616,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO6109616.cs,Execute,The following statement contains a magic number: object b = new B { Y = 2 };
Magic Number,Examples.Issues,SO6109616,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO6109616.cs,Execute,The following statement contains a magic number: object c = new C { Y = 4 };
Magic Number,Examples.Issues,SO6115986,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO6115986.cs,Execute,The following statement contains a magic number: m.Add(typeof(IYObject)' false).AddSubType(1' typeof(YObject)).Add(2' "Z");
Magic Number,Examples.Issues,SO6115986,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO6115986.cs,Execute,The following statement contains a magic number: d.Y.Z = 123;
Magic Number,Examples.Issues,SO6115986,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO6115986.cs,Execute,The following statement contains a magic number: Assert.Equal(123' d2.Y.Z);
Magic Number,Examples.Issues,SO6115986_WithAttributes,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO6115986.cs,Execute,The following statement contains a magic number: d.Y.Z = 123;
Magic Number,Examples.Issues,SO6115986_WithAttributes,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO6115986.cs,Execute,The following statement contains a magic number: Assert.Equal(123' d2.Y.Z);
Magic Number,Examples.Issues,SO6174298,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO6174298.cs,ExecuteImpl,The following statement contains a magic number: i < 13
Magic Number,Examples.Issues,SO6230449,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO6230449.cs,Execute,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix(ms' new Foo { Bar = 2 }' PrefixStyle.Base128' 0);
Magic Number,Examples.Issues,SO6230449,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO6230449.cs,Execute,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix(ms' new Foo { Bar = 3 }' PrefixStyle.Base128' 0);
Magic Number,Examples.Issues,SO6230449,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO6230449.cs,Execute,The following statement contains a magic number: Assert.Equal(9' ms.Length);
Magic Number,Examples.Issues,SO6230449,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO6230449.cs,Execute,The following statement contains a magic number: Assert.True(foos.Count <= 3' "too much data! (manual)");
Magic Number,Examples.Issues,SO6230449,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO6230449.cs,Execute,The following statement contains a magic number: Assert.Equal(3' foos.Count);
Magic Number,Examples.Issues,SO6230449,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO6230449.cs,Execute,The following statement contains a magic number: Assert.Equal(2' foos[1].Bar);
Magic Number,Examples.Issues,SO6230449,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO6230449.cs,Execute,The following statement contains a magic number: Assert.Equal(3' foos[2].Bar);
Magic Number,Examples.Issues,SO6230449,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO6230449.cs,Execute,The following statement contains a magic number: Assert.Equal(3' foos[2].Bar);
Magic Number,Examples.Issues,SO6230449,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO6230449.cs,Execute,The following statement contains a magic number: Assert.True(foos.Count <= 3' "too much data! (foreach)");
Magic Number,Examples.Issues,SO6230449,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO6230449.cs,Execute,The following statement contains a magic number: Assert.Equal(3' foos.Count);
Magic Number,Examples.Issues,SO6230449,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO6230449.cs,Execute,The following statement contains a magic number: Assert.Equal(2' foos[1].Bar);
Magic Number,Examples.Issues,SO6230449,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO6230449.cs,Execute,The following statement contains a magic number: Assert.Equal(3' foos[2].Bar);
Magic Number,Examples.Issues,SO6230449,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO6230449.cs,Execute,The following statement contains a magic number: Assert.Equal(3' foos[2].Bar);
Magic Number,Examples.Issues,SO6407130,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO6407130.cs,TestModel,The following statement contains a magic number: var b = new B { A = new A(117) };
Magic Number,Examples.Issues,SO6407130,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO6407130.cs,TestModel,The following statement contains a magic number: Assert.Equal(12' ASurrogate.HackyFlags);
Magic Number,Examples.Issues,SO6407130,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO6407130.cs,TestModel,The following statement contains a magic number: Assert.Equal(3' ASurrogate.HackyFlags);
Magic Number,Examples.Issues,SO6407130,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO6407130.cs,TestModel,The following statement contains a magic number: Assert.Equal(117' b2.A.X);
Magic Number,Examples.Issues,ASurrogate,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO6407130.cs,OnDeserialized,The following statement contains a magic number: HackyFlags |= 2;
Magic Number,Examples.Issues,ASurrogate,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO6407130.cs,OnSerializing,The following statement contains a magic number: HackyFlags |= 4;
Magic Number,Examples.Issues,ASurrogate,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO6407130.cs,OnSerialized,The following statement contains a magic number: HackyFlags |= 8;
Magic Number,Examples.Issues,SO7078615,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO7078615.cs,RoundTripAnUnknownMessage,The following statement contains a magic number: IMessage msg = new DogBarkedEvent              {                    NameOfDog = "Woofy"' Times = 5              }' copy;
Magic Number,Examples.Issues,SO7078615_NoAttribs,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO7078615.cs,RoundTripAnUnknownMessage,The following statement contains a magic number: IMessage msg = new DogBarkedEvent              {                  NameOfDog = "Woofy"'                  Times = 5              }' copy;
Magic Number,Examples.Issues,SO7078615_NoAttribs,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO7078615.cs,TestPerf,The following statement contains a magic number: int[] values = new int[100000000];
Magic Number,Examples.Issues,SO7078615_NoAttribs,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO7078615.cs,TestPerf,The following statement contains a magic number: Assert.True(2 < 3);
Magic Number,Examples.Issues,SO7078615_NoAttribs,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO7078615.cs,TestPerf,The following statement contains a magic number: Assert.True(2 < 3);
Magic Number,Examples.Issues,SO7120856,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO7120856.cs,RoundTripImmutableTypeAsTuple,The following statement contains a magic number: var val = new MyValueTypeAsTuple(123' 456);
Magic Number,Examples.Issues,SO7120856,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO7120856.cs,RoundTripImmutableTypeAsTuple,The following statement contains a magic number: var val = new MyValueTypeAsTuple(123' 456);
Magic Number,Examples.Issues,SO7120856,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO7120856.cs,RoundTripImmutableTypeAsTuple,The following statement contains a magic number: Assert.Equal(123' clone.X);
Magic Number,Examples.Issues,SO7120856,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO7120856.cs,RoundTripImmutableTypeAsTuple,The following statement contains a magic number: Assert.Equal(456' clone.Z);
Magic Number,Examples.Issues,SO7120856,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO7120856.cs,RoundTripImmutableTypeViaFields,The following statement contains a magic number: var val = new MyValueTypeViaFields(123' 456);
Magic Number,Examples.Issues,SO7120856,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO7120856.cs,RoundTripImmutableTypeViaFields,The following statement contains a magic number: var val = new MyValueTypeViaFields(123' 456);
Magic Number,Examples.Issues,SO7120856,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO7120856.cs,RoundTripImmutableTypeViaFields,The following statement contains a magic number: Assert.Equal(123' clone.X);
Magic Number,Examples.Issues,SO7120856,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO7120856.cs,RoundTripImmutableTypeViaFields,The following statement contains a magic number: Assert.Equal(456' clone.Z);
Magic Number,Examples.Issues,MyValueTypeViaFields,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO7120856.cs,GetHashCode,The following statement contains a magic number: return (X * 397) ^ Z;
Magic Number,Examples.Issues,MyValueTypeAsTuple,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO7120856.cs,GetHashCode,The following statement contains a magic number: return (X * 397) ^ Z;
Magic Number,Examples.Issues,SO7333233,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO7333233.cs,Execute,The following statement contains a magic number: RuntimeTypeModel.Default[typeof(IRule<Ant>)].AddSubType(1' typeof(AntRule1)).AddSubType(2' typeof(AntRule2));
Magic Number,Examples.Issues,SO7333233,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO7333233.cs,Execute,The following statement contains a magic number: RuntimeTypeModel.Default[typeof(IRule<Cat>)].AddSubType(1' typeof(CatRule1)).AddSubType(2' typeof(CatRule2));
Magic Number,Examples.Issues,SO7654066,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO7654066.cs,Execute,The following statement contains a magic number: var obj = new MyClass {data = new[] {1' 2' 3}};
Magic Number,Examples.Issues,SO7654066,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO7654066.cs,Execute,The following statement contains a magic number: var obj = new MyClass {data = new[] {1' 2' 3}};
Magic Number,Examples.Issues,SO7654066,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO7654066.cs,Execute,The following statement contains a magic number: Assert.Equal(3' clone.data.Length);
Magic Number,Examples.Issues,SO7654066,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO7654066.cs,Execute,The following statement contains a magic number: Assert.Equal(2' clone.data[1]);
Magic Number,Examples.Issues,SO7654066,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO7654066.cs,Execute,The following statement contains a magic number: Assert.Equal(3' clone.data[2]);
Magic Number,Examples.Issues,SO7654066,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO7654066.cs,Execute,The following statement contains a magic number: Assert.Equal(3' clone.data[2]);
Magic Number,Examples.Issues,SO7686734,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO7686734.cs,ProtobufSerializationCanDeserializeGuids,The following statement contains a magic number: RuntimeTypeModel.Default[typeof(GatewayPageEvent)].AddSubType(3' typeof(GatewayPageAddedToSite));
Magic Number,Examples.Issues,SO7719000,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO7719000.cs,RunTest,The following statement contains a magic number: const int testValue = 5;
Magic Number,Examples.Issues,SO7727355,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO7727355.cs,Execute,The following statement contains a magic number: Thread[] threads = new Thread[20];
Magic Number,Examples.Issues,SO7727355,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO7727355.cs,Execute,The following statement contains a magic number: Assert.Equal(20' Interlocked.CompareExchange(ref success' 0' 0));
Magic Number,Examples.Issues,SO7727355,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO7727355.cs,Execute,The following statement contains a magic number: test < 1000
Magic Number,Examples.Issues,SO7793527,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO7793527.cs,DefaultToListT,The following statement contains a magic number: Assert.Equal(2' clone.Bars.Count);
Magic Number,Examples.Issues,SO7793527,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO7793527.cs,TestPlanningModelWithCollections,The following statement contains a magic number: var obj = new GoalPlanningModel1              {                  ProposedGoals = new List<ProposedGoal> { new ProposedGoal { X = 23 } }              };
Magic Number,Examples.Issues,SO7793527,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO7793527.cs,TestPlanningModelWithLists,The following statement contains a magic number: var obj = new GoalPlanningModel2              {                  ProposedGoals = new List<ProposedGoal> {new ProposedGoal { X = 23 }}              };
Magic Number,Examples.Issues,SO7793527,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO7793527.cs,Verify,The following statement contains a magic number: Assert.Equal(23' clone.ProposedGoals[0].X);
Magic Number,Examples.Issues,SO7793527,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO7793527.cs,Verify,The following statement contains a magic number: Assert.Equal(23' clone.ProposedGoals.Single().X);
Magic Number,Examples.Issues,SO8093623,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO8093623.cs,TestGeneratedModel,The following statement contains a magic number: var a = new A_generated() { Age = 10' b = new B_generated { Balls = 23 } };
Magic Number,Examples.Issues,SO8093623,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO8093623.cs,TestGeneratedModel,The following statement contains a magic number: var a = new A_generated() { Age = 10' b = new B_generated { Balls = 23 } };
Magic Number,Examples.Issues,SO8093623,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO8093623.cs,TestGeneratedModel,The following statement contains a magic number: Assert.True(ms.ToArray().SequenceEqual(new byte[] { 08' 10' 82' 2' 16' 23 })' message);
Magic Number,Examples.Issues,SO8093623,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO8093623.cs,TestGeneratedModel,The following statement contains a magic number: Assert.True(ms.ToArray().SequenceEqual(new byte[] { 08' 10' 82' 2' 16' 23 })' message);
Magic Number,Examples.Issues,SO8093623,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO8093623.cs,TestGeneratedModel,The following statement contains a magic number: Assert.True(ms.ToArray().SequenceEqual(new byte[] { 08' 10' 82' 2' 16' 23 })' message);
Magic Number,Examples.Issues,SO8093623,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO8093623.cs,TestGeneratedModel,The following statement contains a magic number: Assert.True(ms.ToArray().SequenceEqual(new byte[] { 08' 10' 82' 2' 16' 23 })' message);
Magic Number,Examples.Issues,SO8093623,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO8093623.cs,TestGeneratedModel,The following statement contains a magic number: Assert.True(ms.ToArray().SequenceEqual(new byte[] { 08' 10' 82' 2' 16' 23 })' message);
Magic Number,Examples.Issues,SO8093623,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO8093623.cs,TestGeneratedModel,The following statement contains a magic number: Assert.True(ms.ToArray().SequenceEqual(new byte[] { 08' 10' 82' 2' 16' 23 })' message);
Magic Number,Examples.Issues,SO8093623,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO8093623.cs,TestGeneratedModel,The following statement contains a magic number: Assert.Equal(10' clone.Age);
Magic Number,Examples.Issues,SO8093623,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO8093623.cs,TestGeneratedModel,The following statement contains a magic number: Assert.Equal(23' clone.b.Balls);
Magic Number,Examples.Issues,SO8093623,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO8093623.cs,TestInheritanceModel,The following statement contains a magic number: using var ms = new MemoryStream(new byte[] { 08' 10' 82' 2' 16' 23 });
Magic Number,Examples.Issues,SO8093623,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO8093623.cs,TestInheritanceModel,The following statement contains a magic number: using var ms = new MemoryStream(new byte[] { 08' 10' 82' 2' 16' 23 });
Magic Number,Examples.Issues,SO8093623,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO8093623.cs,TestInheritanceModel,The following statement contains a magic number: using var ms = new MemoryStream(new byte[] { 08' 10' 82' 2' 16' 23 });
Magic Number,Examples.Issues,SO8093623,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO8093623.cs,TestInheritanceModel,The following statement contains a magic number: using var ms = new MemoryStream(new byte[] { 08' 10' 82' 2' 16' 23 });
Magic Number,Examples.Issues,SO8093623,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO8093623.cs,TestInheritanceModel,The following statement contains a magic number: using var ms = new MemoryStream(new byte[] { 08' 10' 82' 2' 16' 23 });
Magic Number,Examples.Issues,SO8093623,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO8093623.cs,TestInheritanceModel,The following statement contains a magic number: using var ms = new MemoryStream(new byte[] { 08' 10' 82' 2' 16' 23 });
Magic Number,Examples.Issues,SO8093623,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO8093623.cs,TestInheritanceModel,The following statement contains a magic number: Assert.Equal(10' clone.Age);
Magic Number,Examples.Issues,SO8093623,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO8093623.cs,TestInheritanceModel,The following statement contains a magic number: Assert.Equal(23' b.Balls);
Magic Number,Examples.Issues,SO8466936,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO8466936.cs,RunTest,The following statement contains a magic number: var foo = new Bar<int> {BaseValue = 123' Value = 456};
Magic Number,Examples.Issues,SO8466936,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO8466936.cs,RunTest,The following statement contains a magic number: var foo = new Bar<int> {BaseValue = 123' Value = 456};
Magic Number,Examples.Issues,SO8466936,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO8466936.cs,RunTest,The following statement contains a magic number: Assert.Equal(123' clone.BaseValue);
Magic Number,Examples.Issues,SO8466936,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO8466936.cs,RunTest,The following statement contains a magic number: Assert.Equal(456' clone.Value);
Magic Number,Examples.Issues,SO9144967,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO9144967.cs,Execute,The following statement contains a magic number: var obj = new HasBlobs {Foo = new byte[] {7' 8}' Bar = new byte[] {8' 9}};
Magic Number,Examples.Issues,SO9144967,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO9144967.cs,Execute,The following statement contains a magic number: var obj = new HasBlobs {Foo = new byte[] {7' 8}' Bar = new byte[] {8' 9}};
Magic Number,Examples.Issues,SO9144967,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO9144967.cs,Execute,The following statement contains a magic number: var obj = new HasBlobs {Foo = new byte[] {7' 8}' Bar = new byte[] {8' 9}};
Magic Number,Examples.Issues,SO9144967,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO9144967.cs,Execute,The following statement contains a magic number: var obj = new HasBlobs {Foo = new byte[] {7' 8}' Bar = new byte[] {8' 9}};
Magic Number,Examples.Issues,SO9144967,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO9144967.cs,Execute,The following statement contains a magic number: Assert.True(clone.Foo.SequenceEqual(new byte[] { 1' 2' 3' 7' 8})' "Runtime Foo");
Magic Number,Examples.Issues,SO9144967,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO9144967.cs,Execute,The following statement contains a magic number: Assert.True(clone.Foo.SequenceEqual(new byte[] { 1' 2' 3' 7' 8})' "Runtime Foo");
Magic Number,Examples.Issues,SO9144967,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO9144967.cs,Execute,The following statement contains a magic number: Assert.True(clone.Foo.SequenceEqual(new byte[] { 1' 2' 3' 7' 8})' "Runtime Foo");
Magic Number,Examples.Issues,SO9144967,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO9144967.cs,Execute,The following statement contains a magic number: Assert.True(clone.Foo.SequenceEqual(new byte[] { 1' 2' 3' 7' 8})' "Runtime Foo");
Magic Number,Examples.Issues,SO9144967,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO9144967.cs,Execute,The following statement contains a magic number: Assert.True(clone.Bar.SequenceEqual(new byte[] { 8' 9 })' "Runtime Bar");
Magic Number,Examples.Issues,SO9144967,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO9144967.cs,Execute,The following statement contains a magic number: Assert.True(clone.Bar.SequenceEqual(new byte[] { 8' 9 })' "Runtime Bar");
Magic Number,Examples.Issues,SO9144967,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO9144967.cs,Execute,The following statement contains a magic number: Assert.True(clone.Foo.SequenceEqual(new byte[] { 1' 2' 3' 7' 8 })' "CompileInPlace Foo");
Magic Number,Examples.Issues,SO9144967,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO9144967.cs,Execute,The following statement contains a magic number: Assert.True(clone.Foo.SequenceEqual(new byte[] { 1' 2' 3' 7' 8 })' "CompileInPlace Foo");
Magic Number,Examples.Issues,SO9144967,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO9144967.cs,Execute,The following statement contains a magic number: Assert.True(clone.Foo.SequenceEqual(new byte[] { 1' 2' 3' 7' 8 })' "CompileInPlace Foo");
Magic Number,Examples.Issues,SO9144967,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO9144967.cs,Execute,The following statement contains a magic number: Assert.True(clone.Foo.SequenceEqual(new byte[] { 1' 2' 3' 7' 8 })' "CompileInPlace Foo");
Magic Number,Examples.Issues,SO9144967,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO9144967.cs,Execute,The following statement contains a magic number: Assert.True(clone.Bar.SequenceEqual(new byte[] { 8' 9 })' "CompileInPlace Bar");
Magic Number,Examples.Issues,SO9144967,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO9144967.cs,Execute,The following statement contains a magic number: Assert.True(clone.Bar.SequenceEqual(new byte[] { 8' 9 })' "CompileInPlace Bar");
Magic Number,Examples.Issues,SO9144967,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO9144967.cs,Execute,The following statement contains a magic number: Assert.True(clone.Foo.SequenceEqual(new byte[] { 1' 2' 3' 7' 8 })' "Compile Foo");
Magic Number,Examples.Issues,SO9144967,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO9144967.cs,Execute,The following statement contains a magic number: Assert.True(clone.Foo.SequenceEqual(new byte[] { 1' 2' 3' 7' 8 })' "Compile Foo");
Magic Number,Examples.Issues,SO9144967,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO9144967.cs,Execute,The following statement contains a magic number: Assert.True(clone.Foo.SequenceEqual(new byte[] { 1' 2' 3' 7' 8 })' "Compile Foo");
Magic Number,Examples.Issues,SO9144967,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO9144967.cs,Execute,The following statement contains a magic number: Assert.True(clone.Foo.SequenceEqual(new byte[] { 1' 2' 3' 7' 8 })' "Compile Foo");
Magic Number,Examples.Issues,SO9144967,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO9144967.cs,Execute,The following statement contains a magic number: Assert.True(clone.Bar.SequenceEqual(new byte[] { 8' 9 })' "Compile Bar");
Magic Number,Examples.Issues,SO9144967,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO9144967.cs,Execute,The following statement contains a magic number: Assert.True(clone.Bar.SequenceEqual(new byte[] { 8' 9 })' "Compile Bar");
Magic Number,Examples.Issues,HasBlobs,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO9144967.cs,HasBlobs,The following statement contains a magic number: Foo = new byte[] { 1' 2' 3};
Magic Number,Examples.Issues,HasBlobs,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO9144967.cs,HasBlobs,The following statement contains a magic number: Foo = new byte[] { 1' 2' 3};
Magic Number,Examples.Issues,HasBlobs,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO9144967.cs,HasBlobs,The following statement contains a magic number: Bar = new byte[] { 4' 5' 6 };
Magic Number,Examples.Issues,HasBlobs,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO9144967.cs,HasBlobs,The following statement contains a magic number: Bar = new byte[] { 4' 5' 6 };
Magic Number,Examples.Issues,HasBlobs,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO9144967.cs,HasBlobs,The following statement contains a magic number: Bar = new byte[] { 4' 5' 6 };
Magic Number,Examples.Issues,SO9398578,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO9398578.cs,TestRandomDataWithString,The following statement contains a magic number: Program.ExpectFailure<ProtoException>(() =>              {                  var bytes = new byte[1024];                  new Random(123456).NextBytes(bytes);                  var stream = new MemoryStream(bytes);                  stream.Seek(0' SeekOrigin.Begin);                  Assert.True(3 > 0); // I always double-check the param order                  Assert.True(stream.Length > 0);                  Serializer.Deserialize<string>(stream);              });
Magic Number,Examples.Issues,SO9398578,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO9398578.cs,TestRandomDataWithString,The following statement contains a magic number: Program.ExpectFailure<ProtoException>(() =>              {                  var bytes = new byte[1024];                  new Random(123456).NextBytes(bytes);                  var stream = new MemoryStream(bytes);                  stream.Seek(0' SeekOrigin.Begin);                  Assert.True(3 > 0); // I always double-check the param order                  Assert.True(stream.Length > 0);                  Serializer.Deserialize<string>(stream);              });
Magic Number,Examples.Issues,SO9398578,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO9398578.cs,TestRandomDataWithString,The following statement contains a magic number: Program.ExpectFailure<ProtoException>(() =>              {                  var bytes = new byte[1024];                  new Random(123456).NextBytes(bytes);                  var stream = new MemoryStream(bytes);                  stream.Seek(0' SeekOrigin.Begin);                  Assert.True(3 > 0); // I always double-check the param order                  Assert.True(stream.Length > 0);                  Serializer.Deserialize<string>(stream);              });
Magic Number,Examples.Issues,SO9398578,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO9398578.cs,TestRandomDataWithContractType,The following statement contains a magic number: Program.ExpectFailure<ProtoException>(() =>              {                  var bytes = new byte[1024];                  new Random(123456).NextBytes(bytes);                  var stream = new MemoryStream(bytes);                  stream.Seek(0' SeekOrigin.Begin);                  Assert.True(3 > 0); // I always double-check the param order                  Assert.True(stream.Length > 0);                  Serializer.Deserialize<Foo>(stream);              });
Magic Number,Examples.Issues,SO9398578,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO9398578.cs,TestRandomDataWithContractType,The following statement contains a magic number: Program.ExpectFailure<ProtoException>(() =>              {                  var bytes = new byte[1024];                  new Random(123456).NextBytes(bytes);                  var stream = new MemoryStream(bytes);                  stream.Seek(0' SeekOrigin.Begin);                  Assert.True(3 > 0); // I always double-check the param order                  Assert.True(stream.Length > 0);                  Serializer.Deserialize<Foo>(stream);              });
Magic Number,Examples.Issues,SO9398578,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO9398578.cs,TestRandomDataWithContractType,The following statement contains a magic number: Program.ExpectFailure<ProtoException>(() =>              {                  var bytes = new byte[1024];                  new Random(123456).NextBytes(bytes);                  var stream = new MemoryStream(bytes);                  stream.Seek(0' SeekOrigin.Begin);                  Assert.True(3 > 0); // I always double-check the param order                  Assert.True(stream.Length > 0);                  Serializer.Deserialize<Foo>(stream);              });
Magic Number,Examples.Issues,SO9398578,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO9398578.cs,TestRandomDataWithReader,The following statement contains a magic number: Program.ExpectFailure<ProtoException>(() =>              {                  var bytes = new byte[1024];                  new Random(123456).NextBytes(bytes);                  var stream = new MemoryStream(bytes);                  stream.Seek(0' SeekOrigin.Begin);                  Assert.True(3 > 0); // I always double-check the param order                  Assert.True(stream.Length > 0);                    using var state = ProtoReader.State.Create(stream' null' null);                  while (state.ReadFieldHeader() > 0)                  {                      state.SkipField();                  }              });
Magic Number,Examples.Issues,SO9398578,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO9398578.cs,TestRandomDataWithReader,The following statement contains a magic number: Program.ExpectFailure<ProtoException>(() =>              {                  var bytes = new byte[1024];                  new Random(123456).NextBytes(bytes);                  var stream = new MemoryStream(bytes);                  stream.Seek(0' SeekOrigin.Begin);                  Assert.True(3 > 0); // I always double-check the param order                  Assert.True(stream.Length > 0);                    using var state = ProtoReader.State.Create(stream' null' null);                  while (state.ReadFieldHeader() > 0)                  {                      state.SkipField();                  }              });
Magic Number,Examples.Issues,SO9398578,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO9398578.cs,TestRandomDataWithReader,The following statement contains a magic number: Program.ExpectFailure<ProtoException>(() =>              {                  var bytes = new byte[1024];                  new Random(123456).NextBytes(bytes);                  var stream = new MemoryStream(bytes);                  stream.Seek(0' SeekOrigin.Begin);                  Assert.True(3 > 0); // I always double-check the param order                  Assert.True(stream.Length > 0);                    using var state = ProtoReader.State.Create(stream' null' null);                  while (state.ReadFieldHeader() > 0)                  {                      state.SkipField();                  }              });
Magic Number,Examples.Issues,SO9408133,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO9408133.cs,TestImplicitSetup,The following statement contains a magic number: var obj1 = new ShipResource { Value = new Ship { Foo = 123 } };
Magic Number,Examples.Issues,SO9408133,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO9408133.cs,TestExplicitSetup,The following statement contains a magic number: var obj1 = new ShipResource { Value = new Ship { Foo = 123} };
Magic Number,Examples.Issues,SurrogateForObjectUsage,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SurrogateForObjectUsage.cs,CreateSuggorateModel,The following statement contains a magic number: var param = new Param              {                  Item = new FloatData                  {                      AdjustValue = 123.45F'                      Ranges = new float[] { 1.0F' 2.4F }'                      Values = new float[] { 7.21F' 19.2F }                  }              };
Magic Number,Examples.Issues,SurrogateForObjectUsage,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SurrogateForObjectUsage.cs,CreateSuggorateModel,The following statement contains a magic number: var param = new Param              {                  Item = new FloatData                  {                      AdjustValue = 123.45F'                      Ranges = new float[] { 1.0F' 2.4F }'                      Values = new float[] { 7.21F' 19.2F }                  }              };
Magic Number,Examples.Issues,SurrogateForObjectUsage,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SurrogateForObjectUsage.cs,CreateSuggorateModel,The following statement contains a magic number: var param = new Param              {                  Item = new FloatData                  {                      AdjustValue = 123.45F'                      Ranges = new float[] { 1.0F' 2.4F }'                      Values = new float[] { 7.21F' 19.2F }                  }              };
Magic Number,Examples.Issues,SurrogateForObjectUsage,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SurrogateForObjectUsage.cs,CreateSuggorateModel,The following statement contains a magic number: var param = new Param              {                  Item = new FloatData                  {                      AdjustValue = 123.45F'                      Ranges = new float[] { 1.0F' 2.4F }'                      Values = new float[] { 7.21F' 19.2F }                  }              };
Magic Number,Examples.Issues,SurrogateForObjectUsage,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SurrogateForObjectUsage.cs,CreateSuggorateModel,The following statement contains a magic number: Assert.Equal(123.45F' data.AdjustValue);
Magic Number,Examples.Issues,SurrogateForObjectUsage,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SurrogateForObjectUsage.cs,CreateSuggorateModel,The following statement contains a magic number: Assert.Equal(2' data.Ranges.Length);
Magic Number,Examples.Issues,SurrogateForObjectUsage,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SurrogateForObjectUsage.cs,CreateSuggorateModel,The following statement contains a magic number: Assert.Equal(2.4F' data.Ranges[1]);
Magic Number,Examples.Issues,SurrogateForObjectUsage,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SurrogateForObjectUsage.cs,CreateSuggorateModel,The following statement contains a magic number: Assert.Equal(2' data.Values.Length);
Magic Number,Examples.Issues,SurrogateForObjectUsage,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SurrogateForObjectUsage.cs,CreateSuggorateModel,The following statement contains a magic number: Assert.Equal(7.21F' data.Values[0]);
Magic Number,Examples.Issues,SurrogateForObjectUsage,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SurrogateForObjectUsage.cs,CreateSuggorateModel,The following statement contains a magic number: Assert.Equal(19.2F' data.Values[1]);
Magic Number,Examples.Issues.ComplexGenerics,ComplexGenericTest,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\ComplexGenerics\ComplexGenericExample.cs,TestY,The following statement contains a magic number: Query query = new Y { Result = 1234};
Magic Number,Examples.Issues.DetectMissing,Test,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\DetectMissing\DetectMissing.cs,ExecuteImpl,The following statement contains a magic number: Assert.True(2 > 0);
Magic Number,ProtoBuf.Issues,Issue289,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue289.cs,Run,The following statement contains a magic number: var obj = new MyPrincipal("abc"' 123);
Magic Number,ProtoBuf.Issues,Issue289,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue289.cs,Run,The following statement contains a magic number: Assert.Equal(123' clone.MyId);
Magic Number,ProtoBuf.Issues,Issue401,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue401.cs,IsDefinedWorksWhenAddingSubTypes,The following statement contains a magic number: protoType.AddSubType(100' subType);
Magic Number,ProtoBuf.Issues,Issue404,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue404.cs,GuidsAreNonZero,The following statement contains a magic number: i < 10
Magic Number,ProtoBuf.Issues,Issue472,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue472.cs,Execute,The following statement contains a magic number: byte[] buffer = { 8' boolvalue };
Magic Number,test,SimpleObject,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue356.cs,ToDefaults,The following statement contains a magic number: _value = 10.0;
Magic Number,test,SimpleObject,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue356.cs,GetHashCode,The following statement contains a magic number: return _value.GetHashCode() * 17 + (_name == null ? 0 : _name.GetHashCode());
Magic Number,test,SimpleObject,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue356.cs,Equals,The following statement contains a magic number: return (Math.Abs(Value - other.Value) < 1e-12 &&                      Name.Equals(other.Name' StringComparison.OrdinalIgnoreCase));
Magic Number,test,Coordinates,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO6478579.cs,SetupTestArray,The following statement contains a magic number: Random r = new Random(123456);
Magic Number,test,Coordinates,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO6478579.cs,SetupTestArray,The following statement contains a magic number: Coords.Add(new CoOrd(r.Next(10000)' r.Next(10000)' r.Next(10000)));
Magic Number,test,Coordinates,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO6478579.cs,SetupTestArray,The following statement contains a magic number: Coords.Add(new CoOrd(r.Next(10000)' r.Next(10000)' r.Next(10000)));
Magic Number,test,Coordinates,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO6478579.cs,SetupTestArray,The following statement contains a magic number: Coords.Add(new CoOrd(r.Next(10000)' r.Next(10000)' r.Next(10000)));
Magic Number,test,Coordinates,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO6478579.cs,SetupTestArray,The following statement contains a magic number: i < 1000000
Magic Number,test,SO6478579,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO6478579.cs,TestMethod,The following statement contains a magic number: Assert.Equal(10960823' mStream.Length);
Magic Number,Examples.Issues.Issue48,Issue202,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue48\Issue202.cs,ExecuteTest,The following statement contains a magic number: Assert.Equal(2' a.flags.Count);
Magic Number,Examples.Issues.Issue48,Issue202,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue48\Issue202.cs,ExecuteTest,The following statement contains a magic number: Assert.Equal(2' b.flags.Count);
Magic Number,Examples.Issues.Issue48,Issue202,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\Issue48\Issue202.cs,ExecuteTest,The following statement contains a magic number: Assert.Equal(2' c.flags.Count);
Magic Number,TestMediaBrowser,TestSerialization,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\MB.cs,TestSerializerSupportForNestedObjects,The following statement contains a magic number: var nestor = new Nestor              {                  nesty = new Nesty() { i = 99 }'                  Nesty2 = new Nesty() { i = 100 }              };
Magic Number,TestMediaBrowser,TestSerialization,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\MB.cs,TestSerializerSupportForNestedObjects,The following statement contains a magic number: var nestor = new Nestor              {                  nesty = new Nesty() { i = 99 }'                  Nesty2 = new Nesty() { i = 100 }              };
Magic Number,TestMediaBrowser,TestSerialization,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\MB.cs,TestSerializerSupportForNestedObjects,The following statement contains a magic number: Assert.Equal(99' clone.nesty.i);
Magic Number,TestMediaBrowser,TestSerialization,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\MB.cs,TestSerializerSupportForNestedObjects,The following statement contains a magic number: Assert.Equal(100' clone.Nesty2.i);
Magic Number,TestMediaBrowser,TestSerialization,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\MB.cs,TestMerging,The following statement contains a magic number: var source = new MisterNullable(11)              {                  Weight = 100              };
Magic Number,TestMediaBrowser,TestSerialization,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\MB.cs,TestMerging,The following statement contains a magic number: var source = new MisterNullable(11)              {                  Weight = 100              };
Magic Number,TestMediaBrowser,TestSerialization,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\MB.cs,TestMerging,The following statement contains a magic number: var target = new MisterNullable(22);
Magic Number,TestMediaBrowser,TestSerialization,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\MB.cs,TestMerging,The following statement contains a magic number: Assert.Equal(100' target.Weight);
Magic Number,TestMediaBrowser,TestSerialization,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\MB.cs,TestMerging,The following statement contains a magic number: Assert.Equal(22' target.Age);
Magic Number,TestMediaBrowser,TestSerialization,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\MB.cs,TestListPersistance,The following statement contains a magic number: Assert.Equal(2' copy.animals.Count());
Magic Number,TestMediaBrowser,TestSerialization,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\MB.cs,TestNullableSerialization,The following statement contains a magic number: var nullable = new MisterNullable(99) { Weight = 2.2 };
Magic Number,TestMediaBrowser,TestSerialization,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\MB.cs,TestNullableSerialization,The following statement contains a magic number: var nullable = new MisterNullable(99) { Weight = 2.2 };
Magic Number,TestMediaBrowser,TestSerialization,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\MB.cs,TestInheritedSerialization,The following statement contains a magic number: var dog = new Dog() { Fur = Fur.smooth' Age = 99' DontSaveMe = "bla" };
Magic Number,TestMediaBrowser,TestSerialization,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\MB.cs,TestSerializer,The following statement contains a magic number: DummyPersistanceObject foo = new DummyPersistanceObject() { Bar1 = 111' Bar2 = "hello" };
Magic Number,TestMediaBrowser,TestSerialization,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\MB.cs,BenchmarkPerformance,The following statement contains a magic number: i < 100000
Magic Number,TestMediaBrowser,TestSerialization,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\MB.cs,BenchmarkPerformance,The following statement contains a magic number: TimeAction("Custom Serializer"' () =>              {                  using MemoryStream ms = new MemoryStream();                  foreach (var foo in list)                  {                      Serializer.Serialize(ms' foo);                  }                    ms.Position = 0;                    list = new List<DummyPersistanceObject>();                  for (int i = 0; i < 100000; i++)                  {                      list.Add(Serializer.Deserialize<DummyPersistanceObject>(ms));                  }              });
Magic Number,TestMediaBrowser,DummyPersistanceObject,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\MB.cs,GetHashCode,The following statement contains a magic number: return Bar1.GetHashCode() + 17 * (Bar2 ?? "").GetHashCode();
Magic Number,Proto,ProtoBufModalSerializer,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\Issues\SO9151111b.cs,Init,The following statement contains a magic number: int i = 500;
Magic Number,ProtoBuf.MessagePipeTests,MessagePipeTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\MessagePipes\MessagePipeTests.cs,SimpleMessagePipe,The following statement contains a magic number: await channel.Writer.WriteAsync(new Message { Id = 2' Foo = "def"' Bar = 2.0 });
Magic Number,ProtoBuf.MessagePipeTests,MessagePipeTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\MessagePipes\MessagePipeTests.cs,SimpleMessagePipe,The following statement contains a magic number: await channel.Writer.WriteAsync(new Message { Id = 2' Foo = "def"' Bar = 2.0 });
Magic Number,ProtoBuf.MessagePipeTests,MessagePipeTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\MessagePipes\MessagePipeTests.cs,SimpleMessagePipe,The following statement contains a magic number: await channel.Writer.WriteAsync(new Message { Id = 3' Foo = "ghi"' Bar = 3.0 });
Magic Number,ProtoBuf.MessagePipeTests,MessagePipeTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\MessagePipes\MessagePipeTests.cs,SimpleMessagePipe,The following statement contains a magic number: await channel.Writer.WriteAsync(new Message { Id = 3' Foo = "ghi"' Bar = 3.0 });
Magic Number,ProtoBuf.MessagePipeTests,MessagePipeTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\MessagePipes\MessagePipeTests.cs,SimpleMessagePipe,The following statement contains a magic number: await WithTimeout(send.AsTask()' TimeSpan.FromSeconds(5)' "send");
Magic Number,ProtoBuf.MessagePipeTests,MessagePipeTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\MessagePipes\MessagePipeTests.cs,SimpleMessagePipe,The following statement contains a magic number: await WithTimeout(receive' TimeSpan.FromSeconds(5)' "receive");
Magic Number,ProtoBuf.MessagePipeTests,MessagePipeTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\MessagePipes\MessagePipeTests.cs,SimpleMessagePipe,The following statement contains a magic number: Assert.Equal(3' received.Count);
Magic Number,ProtoBuf.MessagePipeTests,MessagePipeTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\MessagePipes\MessagePipeTests.cs,DuplexPipe,The following statement contains a magic number: await WithTimeout(pongPending.AsTask()' TimeSpan.FromSeconds(5)' "UnaryAsync");
Magic Number,ProtoBuf.MessagePipeTests,MessagePipeTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\MessagePipes\MessagePipeTests.cs,DuplexPipe,The following statement contains a magic number: i < 5
Magic Number,ProtoBuf.MessagePipeTests,MessagePipeTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\MessagePipes\MessagePipeTests.cs,DuplexPipe,The following statement contains a magic number: await WithTimeout(receive' TimeSpan.FromSeconds(5)' "receive");
Magic Number,DAL,NWindTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\NWind\NWind.cs,PerfTestDb,The following statement contains a magic number: i < 1000
Magic Number,ProtoBuf.NWind,CompatDbBuffers,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\NWind\CompatDbBuffers.cs,RoundTripViaStream,The following statement contains a magic number: Assert.Equal(830' db.Orders.Count);
Magic Number,ProtoBuf.NWind,CompatDbBuffers,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\NWind\CompatDbBuffers.cs,RoundTripViaBuffers,The following statement contains a magic number: Assert.Equal(830' db.Orders.Count);
Magic Number,Examples.SimpleStream,GroupedData,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\SimpleStream\GroupedData.cs,TestGroup,The following statement contains a magic number: Assert.Equal(150' t3.C.A);
Magic Number,Examples.SimpleStream,GroupedData,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\SimpleStream\GroupedData.cs,TestGroupAsExtension,The following statement contains a magic number: Test1 t1 = Extensible.GetValue<Test1>(ne' 3);
Magic Number,Examples.SimpleStream,GroupedData,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\SimpleStream\GroupedData.cs,TestGroupAsExtension,The following statement contains a magic number: Assert.Equal(150' t1.A);
Magic Number,Examples.SimpleStream,GroupedData,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\SimpleStream\GroupedData.cs,TestGroupIgnore,The following statement contains a magic number: Assert.Equal(150' no.Foo);
Magic Number,Examples.SimpleStream,GroupedData,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\SimpleStream\GroupedData.cs,TestEntityList,The following statement contains a magic number: Assert.Equal(2' t3.C.Count);
Magic Number,Examples.SimpleStream,GroupedData,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\SimpleStream\GroupedData.cs,TestEntityList,The following statement contains a magic number: Assert.Equal(150' t3.C[0].A);
Magic Number,Examples.SimpleStream,GroupedData,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\SimpleStream\GroupedData.cs,TestEntityList,The following statement contains a magic number: Assert.Equal(130' t3.C[1].A);
Magic Number,Examples.SimpleStream,NullTypes,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\SimpleStream\NullTypes.cs,TestNotNull,The following statement contains a magic number: TypeWithNulls twn = new TypeWithNulls { Foo = 150 }'                  clone = model.DeepClone(twn);
Magic Number,Examples.SimpleStream,SimplePerfTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\SimpleStream\SimplePerfTests.cs,RunSimplePerfTests,The following statement contains a magic number: PerfTest obj = new PerfTest              {                  Foo = 12'  // 1: 8' 12                  Bar = "bar"' // 2: 18' 3' 98' 97' 114                  Blip = 123.45F' // 3: 29' 102' 230' 246' 66                  Blop = 123.4567 // 4: 33' 83' 5' 163' 146' 58' 221' 94' 64              };
Magic Number,Examples.SimpleStream,SimplePerfTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\SimpleStream\SimplePerfTests.cs,RunSimplePerfTests,The following statement contains a magic number: PerfTest obj = new PerfTest              {                  Foo = 12'  // 1: 8' 12                  Bar = "bar"' // 2: 18' 3' 98' 97' 114                  Blip = 123.45F' // 3: 29' 102' 230' 246' 66                  Blop = 123.4567 // 4: 33' 83' 5' 163' 146' 58' 221' 94' 64              };
Magic Number,Examples.SimpleStream,SimplePerfTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\SimpleStream\SimplePerfTests.cs,RunSimplePerfTests,The following statement contains a magic number: PerfTest obj = new PerfTest              {                  Foo = 12'  // 1: 8' 12                  Bar = "bar"' // 2: 18' 3' 98' 97' 114                  Blip = 123.45F' // 3: 29' 102' 230' 246' 66                  Blop = 123.4567 // 4: 33' 83' 5' 163' 146' 58' 221' 94' 64              };
Magic Number,Examples.SimpleStream,SimplePerfTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\SimpleStream\SimplePerfTests.cs,RunSimplePerfTests,The following statement contains a magic number: const int LOOP = 500000;
Magic Number,Examples.SimpleStream,SimplePerfTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\SimpleStream\SimplePerfTests.cs,RunSimplePerfTests,The following statement contains a magic number: Console.WriteLine("\tSerialized x{0} in {1}ms"' 500000' watch.ElapsedMilliseconds);
Magic Number,Examples.TestNumbers,SignTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\TestNumbers\NumberTests.cs,RoundTripBigPosativeZigZagInt64,The following statement contains a magic number: ZigZagInt64 obj = new ZigZagInt64 { Foo = 123456789 }'                  clone = Serializer.DeepClone(obj);
Magic Number,Examples.TestNumbers,SignTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\TestNumbers\NumberTests.cs,RoundTripBigPosativeZigZagInt64ForDateTime,The following statement contains a magic number: ZigZagInt64 obj = new ZigZagInt64 { Foo = 1216669168515 }'                  clone = Serializer.DeepClone(obj);
Magic Number,Examples.TestNumbers,SignTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\TestNumbers\NumberTests.cs,RoundTripBigNegativeZigZagInt64,The following statement contains a magic number: ZigZagInt64 obj = new ZigZagInt64 { Foo = -123456789 }'                  clone = Serializer.DeepClone(obj);
Magic Number,Examples.TestNumbers,SignTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\TestNumbers\NumberTests.cs,TestSignTwosComplementInt32_Default,The following statement contains a magic number: Assert.True(Program.CheckBytes(new TwosComplementInt32 { Foo = 123456 })' "123456");
Magic Number,Examples.TestNumbers,SignTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\TestNumbers\NumberTests.cs,TestSignTwosComplementInt32_2,The following statement contains a magic number: Assert.True(Program.CheckBytes(new TwosComplementInt32 { Foo = 2 }' 0x08' 0x02)' "+2");
Magic Number,Examples.TestNumbers,SignTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\TestNumbers\NumberTests.cs,TestSignTwosComplementInt32_m2,The following statement contains a magic number: Assert.True(Program.CheckBytes(new TwosComplementInt32 { Foo = -2 }' 0x08' 0xFE' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0x01)' "-2");
Magic Number,Examples.TestNumbers,SignTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\TestNumbers\NumberTests.cs,TestSignZigZagInt32_Default,The following statement contains a magic number: Assert.True(Program.CheckBytes(new ZigZagInt32 { Foo = 123456 })' "123456");
Magic Number,Examples.TestNumbers,SignTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\TestNumbers\NumberTests.cs,TestSignZigZagInt32_2,The following statement contains a magic number: Assert.True(Program.CheckBytes(new ZigZagInt32 { Foo = 2 }' 0x08' 0x04)' "+2");
Magic Number,Examples.TestNumbers,SignTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\TestNumbers\NumberTests.cs,TestSignZigZagInt32_m2,The following statement contains a magic number: Assert.True(Program.CheckBytes(new ZigZagInt32 { Foo = -2 }' 0x08' 0x03)' "-2");
Magic Number,Examples.TestNumbers,SignTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\TestNumbers\NumberTests.cs,TestSignZigZagInt32_2147483647,The following statement contains a magic number: ZigZagInt32 zz = new ZigZagInt32 { Foo = 2147483647 }' clone = Serializer.DeepClone(zz);
Magic Number,Examples.TestNumbers,SignTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\TestNumbers\NumberTests.cs,TestSignZigZagInt32_2147483647,The following statement contains a magic number: Assert.Equal(4294967294' tc.Foo);
Magic Number,Examples.TestNumbers,SignTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\TestNumbers\NumberTests.cs,TestSignZigZagInt32_m2147483648,The following statement contains a magic number: ZigZagInt32 zz = new ZigZagInt32 { Foo = -2147483648 }' clone = Serializer.DeepClone(zz);
Magic Number,Examples.TestNumbers,SignTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\TestNumbers\NumberTests.cs,TestSignZigZagInt32_m2147483648,The following statement contains a magic number: Assert.Equal(4294967295' tc.Foo);
Magic Number,Examples.TestNumbers,SignTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\TestNumbers\NumberTests.cs,SweepBitsInt32,The following statement contains a magic number: i < 32
Magic Number,Examples.TestNumbers,SignTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\TestNumbers\NumberTests.cs,SweepBitsInt64KnownTricky,The following statement contains a magic number: const int i = 31' j = 31;
Magic Number,Examples.TestNumbers,SignTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\TestNumbers\NumberTests.cs,SweepBitsInt64KnownTricky,The following statement contains a magic number: const int i = 31' j = 31;
Magic Number,Examples.TestNumbers,SignTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\Examples\TestNumbers\NumberTests.cs,SweepBitsInt64,The following statement contains a magic number: i < 64
