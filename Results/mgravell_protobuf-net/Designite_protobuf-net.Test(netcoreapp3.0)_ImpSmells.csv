Implementation smell,Namespace,Class,File,Method,Description
Long Method,ProtoBuf.Test,BufferWriteCountTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\BufferWriteCountTests.cs,WriteAllTheThings,The method has 233 lines of code.
Long Method,FX11,FX11_Program,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\FX11\Program.cs,BuildMeta,The method has 207 lines of code.
Complex Method,ProtoBuf.Test,BufferWriteCountTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\BufferWriteCountTests.cs,WriteAllTheThings,Cyclomatic complexity of the method is 23
Long Parameter List,ProtoBuf.unittest.Attribs,PointStructTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Attribs\PointStruct.cs,ClonePointCountingConversions,The method has 5 parameters. Parameters: model' original' message' toPoint' fromPoint
Long Parameter List,ProtoBuf.unittest.Perf,Issue103,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Perf\Issue103.cs,RunTestIssue103,The method has 5 parameters. Parameters: loop' typeA' typeB' model' caption
Long Statement,ProtoBuf.unittest.Attribs,PointStructTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Attribs\PointStruct.cs,FullyCompileWithPrivateField_KnownToFail,The length of the statement  "                Assert.Equal("Non-public member cannot be used with full dll compilation: ProtoBuf.unittest.Attribs.PointStructTests+Point.x"' ex.Message); " is 139.
Long Statement,ProtoBuf.unittest.Attribs,PointStructTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Attribs\PointStruct.cs,VerifyPointDirect,The length of the statement  "                Assert.Equal("Non-public member cannot be used with full dll compilation: ProtoBuf.unittest.Attribs.PointStructTests+Point.x"' ex.Message); " is 139.
Long Statement,ProtoBuf.Test,BufferWriteCountTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\BufferWriteCountTests.cs,WriteAllTheThings,The length of the statement  "                Log($"After {ITER_COUNT}x{nameof(repeatedInt32.WriteRepeated)}/{SerializerFeatures.WireTypeSignedVarint}: {cw.TotalBytes}"); " is 124.
Long Statement,ProtoBuf.Test,BufferWriteCountTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\BufferWriteCountTests.cs,WriteAllTheThings,The length of the statement  "                    repeatedInt32.WriteRepeated(ref state' GetField()' SerializerFeatures.WireTypeVarint | SerializerFeatures.OptionPackedDisabled' GetValuesInt32()); " is 146.
Long Statement,ProtoBuf.Test,BufferWriteCountTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\BufferWriteCountTests.cs,WriteAllTheThings,The length of the statement  "                Log($"After {ITER_COUNT}x{nameof(repeatedInt32.WriteRepeated)}/{SerializerFeatures.WireTypeVarint | SerializerFeatures.OptionPackedDisabled}: {cw.TotalBytes}"); " is 160.
Long Statement,ProtoBuf.Test,BufferWriteCountTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\BufferWriteCountTests.cs,WriteAllTheThings,The length of the statement  "                    repeatedInt32.WriteRepeated(ref state' GetField()' SerializerFeatures.WireTypeSignedVarint | SerializerFeatures.OptionPackedDisabled' GetValuesInt32()); " is 152.
Long Statement,ProtoBuf.Test,BufferWriteCountTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\BufferWriteCountTests.cs,WriteAllTheThings,The length of the statement  "                Log($"After {ITER_COUNT}x{nameof(repeatedInt32.WriteRepeated)}/{SerializerFeatures.WireTypeSignedVarint | SerializerFeatures.OptionPackedDisabled}: {cw.TotalBytes}"); " is 166.
Long Statement,ProtoBuf.Test,BufferWriteCountTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\BufferWriteCountTests.cs,WriteAllTheThings,The length of the statement  "                    repeatedInt32.WriteRepeated(ref state' GetField()' SerializerFeatures.WireTypeFixed32 | SerializerFeatures.OptionPackedDisabled' GetValuesInt32()); " is 147.
Long Statement,ProtoBuf.Test,BufferWriteCountTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\BufferWriteCountTests.cs,WriteAllTheThings,The length of the statement  "                Log($"After {ITER_COUNT}x{nameof(repeatedInt32.WriteRepeated)}/{SerializerFeatures.WireTypeFixed32 | SerializerFeatures.OptionPackedDisabled}: {cw.TotalBytes}"); " is 161.
Long Statement,ProtoBuf.Test,BufferWriteCountTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\BufferWriteCountTests.cs,WriteAllTheThings,The length of the statement  "                    repeatedInt32.WriteRepeated(ref state' GetField()' SerializerFeatures.WireTypeFixed64 | SerializerFeatures.OptionPackedDisabled' GetValuesInt32()); " is 147.
Long Statement,ProtoBuf.Test,BufferWriteCountTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\BufferWriteCountTests.cs,WriteAllTheThings,The length of the statement  "                Log($"After {ITER_COUNT}x{nameof(repeatedInt32.WriteRepeated)}/{SerializerFeatures.WireTypeFixed64 | SerializerFeatures.OptionPackedDisabled}: {cw.TotalBytes}"); " is 161.
Long Statement,ProtoBuf.Test,BufferWriteCountTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\BufferWriteCountTests.cs,WriteAllTheThings,The length of the statement  "                Log($"After {SMALL_ITER_COUNT}x{nameof(repeatedString.WriteRepeated)} ({nameof(String)})/{SerializerFeatures.WireTypeString | SerializerFeatures.OptionPackedDisabled}: {cw.TotalBytes}"); " is 186.
Long Statement,ProtoBuf.Test,BufferWriteCountTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\BufferWriteCountTests.cs,WriteAllTheThings,The length of the statement  "                Log($"After {SMALL_ITER_COUNT}x{nameof(repeatedString.WriteRepeated)} ({nameof(MyMessage)})/{SerializerFeatures.WireTypeString | SerializerFeatures.OptionPackedDisabled}: {cw.TotalBytes}"); " is 189.
Long Statement,ProtoBuf.Test,BufferWriteCountTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\BufferWriteCountTests.cs,WriteAllTheThings,The length of the statement  "                Log($"After {SMALL_ITER_COUNT}x{nameof(repeatedString.WriteRepeated)} ({nameof(MyMessage)})/{SerializerFeatures.WireTypeStartGroup | SerializerFeatures.OptionPackedDisabled}: {cw.TotalBytes}"); " is 193.
Long Statement,ProtoBuf.Test,CustomSerializer,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\CustomScalarAllocator.cs,Expand,The length of the statement  "                var newData = context.UserState is IBlobAllocator allocator ? allocator.AllocateMemory(newLength).Slice(0' newLength) : new byte[newLength]; " is 140.
Long Statement,FX11,FX11_Program,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\FX11\Program.cs,BuildMeta,The length of the statement  "            System.Runtime.Serialization.DataContractSerializer dcs = new System.Runtime.Serialization.DataContractSerializer(type); " is 120.
Long Statement,FX11,FX11_Program,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\FX11\Program.cs,BuildMeta,The length of the statement  "            System.Runtime.Serialization.NetDataContractSerializer ndcs = new System.Runtime.Serialization.NetDataContractSerializer(); " is 123.
Long Statement,ProtoBuf.Issues,Immutables,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Issues\Immutables.cs,CanDeserialiseImmutableDictionary,The length of the statement  "            Assert.Equal((IEnumerable<KeyValuePair<string' string>>)testClass.Dictionary.OrderBy(x => x.Key)' (IEnumerable<KeyValuePair<string' string>>)testClassClone.Dictionary.OrderBy(x => x.Key)); " is 188.
Long Statement,ProtoBuf.Issues,Immutables,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Issues\Immutables.cs,CanDeserialiseImmutableSortedDictionary,The length of the statement  "            Assert.Equal((IEnumerable<KeyValuePair<string' string>>)testClass.Dictionary' (IEnumerable<KeyValuePair<string' string>>)testClassClone.Dictionary); " is 148.
Long Statement,ProtoBuf.Test.Issues,SO_InterestingFailures,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Issues\SO_InterestingFailures.cs,Test,The length of the statement  "            const string expected = "0A-0E-0A-03-61-62-63-11-00-00-00-00-00-C0-5E-40-0A-0E-0A-03-64-65-66-11-00-00-00-00-00-80-7C-40-0A-0E-0A-03-67-68-69-11-00-00-00-00-00-A8-88-40-12-0E-0A-03-6A-6B-6C-11-00-00-00-00-00-98-8F-40-12-0E-0A-03-6D-6E-6F-11-00-00-00-00-00-F4-92-40"; " is 266.
Long Statement,ProtoBuf.unittest.Meta,Callbacks,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Callbacks.cs,TestCallbacksAtMultipleInheritanceLevels,The length of the statement  "            var expectedDeserTrace = (useCtor ? "A.ctor;B.ctor;C.ctor;" : "") + "C.OnDeserializing;set;set;set;C.OnDeserialized;get;get;get;"; " is 130.
Long Statement,ProtoBuf.unittest.Meta,Callbacks,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Callbacks.cs,BuildModel,The length of the statement  "            model.Add(typeof(A)' false).Add(2' "AValue").SetCallbacks("OnSerializing"' "OnSerialized"' "OnDeserializing"' "OnDeserialized").UseConstructor = useCtor; " is 153.
Long Statement,ProtoBuf.unittest.Meta,Enums,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Enums.cs,CanSerializeUnknownEnum,The length of the statement  "                Assert.True(DynamicStub.TrySerializeAny(1' WireType.Varint.AsFeatures()' typeof(EnumWithThings)' model' ref writeState' EnumWithThings.HazThis)); " is 145.
Long Statement,ProtoBuf.unittest.Meta,Enums,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Enums.cs,CanSerializeUnknownEnum,The length of the statement  "                Assert.True(DynamicStub.TrySerializeAny(2' WireType.Varint.AsFeatures()' typeof(EnumWithThings?)' model' ref writeState' EnumWithThings.HazThis)); " is 146.
Long Statement,ProtoBuf.unittest.Meta,PackedLists,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,TestEmptyRoundTrip,The length of the statement  "            var orig = new PackedData { ListInt32 = new List<int>()' ListSingle = new List<float>()' ListDouble = new List<double>()}; " is 122.
Long Statement,ProtoBuf.unittest.Meta,PackedLists,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,TestThreeItemsRoundTrip,The length of the statement  "            var orig = new PackedData { ListInt32 = new List<int> {3'5'7}' ListSingle = new List<float> {3F'5F'7F}' ListDouble = new List<double> {3D'5D'7F} }; " is 147.
Long Statement,ProtoBuf.unittest.Meta,PackedArrays,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,TestThreeItemsRoundTrip,The length of the statement  "            var orig = new PackedData { ArrayInt32 = new int[] { 3' 5' 7 }' ArraySingle = new float[] { 3F' 5F' 7F }' ArrayDouble = new double[] { 3D' 5D' 7F } }; " is 150.
Long Statement,ProtoBuf.unittest.Meta,LockContention,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\LockContention.cs,DeliberatelyCausedContentionShouldShow,The length of the statement  "            using ManualResetEvent workerReady = new ManualResetEvent(false)' workerComplete = new ManualResetEvent(false)' mainComplete = new ManualResetEvent(false); " is 155.
Long Statement,ProtoBuf.unittest.Meta,TestCustomerStruct,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Struct.cs,TestEnumModel,The length of the statement  "            Assert.True(obj.Features.GetCategory() == SerializerFeatures.CategoryScalar' "should be a scalar serializer; is " + obj.GetType().NormalizeName()); " is 147.
Long Statement,ProtoBuf.unittest.Meta,TestCustomerStruct,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Struct.cs,RunStructDesrializerForEmptyStream,The length of the statement  "                    new PropertyDecorator(typeof(CustomerStruct)' typeof(CustomerStruct).GetProperty(nameof(CustomerStruct.Id))' new TagDecorator(1' WireType.Varint' false' Int32Serializer.Instance))' " is 180.
Long Statement,ProtoBuf.unittest.Meta,TestCustomerStruct,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Struct.cs,RunStructDesrializerForEmptyStream,The length of the statement  "                    new FieldDecorator(typeof(CustomerStruct)' typeof(CustomerStruct).GetField(nameof(CustomerStruct.Name))' new TagDecorator(2' WireType.String' false' StringSerializer.Instance)) " is 176.
Long Statement,ProtoBuf.unittest.Meta,TestCustomerStruct,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Struct.cs,GenerateTypeSerializer,The length of the statement  "                    new PropertyDecorator(typeof(CustomerStruct)' typeof(CustomerStruct).GetProperty(nameof(CustomerStruct.Id))' new TagDecorator(1' WireType.Varint'false' Int32Serializer.Instance))' " is 179.
Long Statement,ProtoBuf.unittest.Meta,TestCustomerStruct,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Struct.cs,GenerateTypeSerializer,The length of the statement  "                    new FieldDecorator(typeof(CustomerStruct)' typeof(CustomerStruct).GetField(nameof(CustomerStruct.Name))' new TagDecorator(2' WireType.String'false' StringSerializer.Instance)) " is 175.
Long Statement,ProtoBuf.unittest.Meta,ThreadRace,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\ThreadRace.cs,TestSerializeModelFromRoot,The length of the statement  "                            if (!ms.ToArray().SequenceEqual(raw)) throw new InvalidDataException("Bad serialization; " + GetHex(raw) + " vs " + GetHex(ms.ToArray())); " is 138.
Long Statement,ProtoBuf.Schemas,WellKnownTypes,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\WellKnownTypes.cs,Timestamp_ExpectedValues,The length of the statement  "            AssertKnownValue(new Timestamp { Seconds = -1' Nanos = 999000000 }' new DateTime(1969' 12' 31' 23' 59' 59' 999' DateTimeKind.Utc)); " is 131.
Empty Catch Block,ProtoBuf.unittest.Meta,PocoListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,JaggedListShouldThrow,The method has an empty catch block.
Empty Catch Block,ProtoBuf.unittest.Meta,PocoListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,ListOfArrayShouldThrow,The method has an empty catch block.
Empty Catch Block,ProtoBuf.unittest.Meta,PocoListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,MultiDimArrayShouldThrow,The method has an empty catch block.
Empty Catch Block,ProtoBuf.unittest.Meta,PocoListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,JaggedArrayShouldThrow,The method has an empty catch block.
Magic Number,ProtoBuf.unittest.Attribs,Basic,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Attribs\Basic.cs,CheckThatBasicAttributesAreRespected,The following statement contains a magic number: BasicContract obj = new BasicContract { Expected = 123' Ignored = 456' NotExpected = 789 }'                  clone = (BasicContract)model.DeepClone(obj);
Magic Number,ProtoBuf.unittest.Attribs,Basic,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Attribs\Basic.cs,CheckThatBasicAttributesAreRespected,The following statement contains a magic number: BasicContract obj = new BasicContract { Expected = 123' Ignored = 456' NotExpected = 789 }'                  clone = (BasicContract)model.DeepClone(obj);
Magic Number,ProtoBuf.unittest.Attribs,Basic,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Attribs\Basic.cs,CheckThatBasicAttributesAreRespected,The following statement contains a magic number: BasicContract obj = new BasicContract { Expected = 123' Ignored = 456' NotExpected = 789 }'                  clone = (BasicContract)model.DeepClone(obj);
Magic Number,ProtoBuf.unittest.Attribs,Basic,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Attribs\Basic.cs,CheckThatBasicAttributesAreRespected,The following statement contains a magic number: Assert.Equal(123' clone.Expected);
Magic Number,ProtoBuf.unittest.Attribs,ComplexMultiTypes,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Attribs\ComplexMultiTypes.cs,CheckEntityDtoWithItems,The following statement contains a magic number: var healthComponent = new HealthDTO() { CurrentHealth = 100' Owner = entity' Name = "Health"' Id = 2 };
Magic Number,ProtoBuf.unittest.Attribs,ComplexMultiTypes,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Attribs\ComplexMultiTypes.cs,CheckEntityDtoWithItems,The following statement contains a magic number: var healthComponent = new HealthDTO() { CurrentHealth = 100' Owner = entity' Name = "Health"' Id = 2 };
Magic Number,ProtoBuf.unittest.Attribs,ComplexMultiTypes,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Attribs\ComplexMultiTypes.cs,CheckEntityDtoWithItems,The following statement contains a magic number: var locationComponent = new PhysicalLocationDTO() { X = 1' Y = 2' Owner = entity' Name = "PhysicalLocation"' Id = 3 };
Magic Number,ProtoBuf.unittest.Attribs,ComplexMultiTypes,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Attribs\ComplexMultiTypes.cs,CheckEntityDtoWithItems,The following statement contains a magic number: var locationComponent = new PhysicalLocationDTO() { X = 1' Y = 2' Owner = entity' Name = "PhysicalLocation"' Id = 3 };
Magic Number,ProtoBuf.unittest.Attribs,ComplexMultiTypes,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Attribs\ComplexMultiTypes.cs,CheckEntityDtoWithItems,The following statement contains a magic number: Assert.Equal(2' result2.Components.Count);
Magic Number,ProtoBuf.unittest.Attribs,PointStructTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Attribs\PointStruct.cs,BuildModel,The following statement contains a magic number: Assert.Equal(2' fields.Length);
Magic Number,ProtoBuf.unittest.Attribs,PointStructTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Attribs\PointStruct.cs,RoundTripPoint,The following statement contains a magic number: Point point = new Point(26' 13);
Magic Number,ProtoBuf.unittest.Attribs,PointStructTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Attribs\PointStruct.cs,RoundTripPoint,The following statement contains a magic number: Point point = new Point(26' 13);
Magic Number,ProtoBuf.unittest.Attribs,PointStructTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Attribs\PointStruct.cs,FullyCompileWithPrivateField_KnownToFail,The following statement contains a magic number: Point point = new Point(26' 13);
Magic Number,ProtoBuf.unittest.Attribs,PointStructTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Attribs\PointStruct.cs,FullyCompileWithPrivateField_KnownToFail,The following statement contains a magic number: Point point = new Point(26' 13);
Magic Number,ProtoBuf.unittest.Attribs,PointStructTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Attribs\PointStruct.cs,FullyCompileWithPrivateField_KnownToFail,The following statement contains a magic number: Assert.Equal(42' 0);
Magic Number,ProtoBuf.unittest.Attribs,PointStructTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Attribs\PointStruct.cs,RoundTripPointWithSurrogate,The following statement contains a magic number: Point point = new Point(26' 13);
Magic Number,ProtoBuf.unittest.Attribs,PointStructTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Attribs\PointStruct.cs,RoundTripPointWithSurrogate,The following statement contains a magic number: Point point = new Point(26' 13);
Magic Number,ProtoBuf.unittest.Attribs,PointStructTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Attribs\PointStruct.cs,RoundTripPointWithSurrogate,The following statement contains a magic number: ClonePointCountingConversions(model' point' "Runtime"' 1' 2);
Magic Number,ProtoBuf.unittest.Attribs,PointStructTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Attribs\PointStruct.cs,RoundTripPointWithSurrogate,The following statement contains a magic number: ClonePointCountingConversions(model' point' "CompileInPlace"' 1' 2);
Magic Number,ProtoBuf.unittest.Attribs,PointStructTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Attribs\PointStruct.cs,RoundTripPointWithSurrogate,The following statement contains a magic number: ClonePointCountingConversions(model.Compile()' point' "Compile"' 1' 2);
Magic Number,ProtoBuf.unittest.Attribs,TurkishL,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Issues\TurkishL.cs,FakeTupleTest,The following statement contains a magic number: var t = new ForTupleSerializer(123' "abc");
Magic Number,ProtoBuf.unittest,MultiTypeLookupTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Attribs\MultiTypes.cs,TestInt32RoundTrip,The following statement contains a magic number: var orig = PropertyValue.Create("abc"' 123);
Magic Number,ProtoBuf.unittest,MultiTypeLookupTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Attribs\MultiTypes.cs,TestInt32RoundTrip,The following statement contains a magic number: Assert.Equal(123' intClone.Value);
Magic Number,ProtoBuf.Test,BufferWriteCountTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\BufferWriteCountTests.cs,WriteAllTheThings,The following statement contains a magic number: var rand = new Random(12345);
Magic Number,ProtoBuf.Test,BufferWriteCountTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\BufferWriteCountTests.cs,WriteAllTheThings,The following statement contains a magic number: const int ITER_COUNT = 1024' SMALL_ITER_COUNT = 128' MAXLEN = 2048;
Magic Number,ProtoBuf.Test,BufferWriteCountTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\BufferWriteCountTests.cs,WriteAllTheThings,The following statement contains a magic number: const int ITER_COUNT = 1024' SMALL_ITER_COUNT = 128' MAXLEN = 2048;
Magic Number,ProtoBuf.Test,BufferWriteCountTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\BufferWriteCountTests.cs,WriteAllTheThings,The following statement contains a magic number: const int ITER_COUNT = 1024' SMALL_ITER_COUNT = 128' MAXLEN = 2048;
Magic Number,ProtoBuf.Test,BufferWriteCountTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\BufferWriteCountTests.cs,WriteAllTheThings,The following statement contains a magic number: int GetField() => rand.Next(1' 2048);
Magic Number,ProtoBuf.Test,BufferWriteCountTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\BufferWriteCountTests.cs,WriteAllTheThings,The following statement contains a magic number: return (x << 32) | y;
Magic Number,ProtoBuf.Test,MyServices,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\BufferWriteCountTests.cs,Read,The following statement contains a magic number: switch(field)                          {                              case 12: value.Y = state.ReadString(); break;                              case 42: value.X = state.ReadInt32(); break;                              default: state.SkipField(); break;                          }
Magic Number,ProtoBuf.Test,MyServices,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\BufferWriteCountTests.cs,Read,The following statement contains a magic number: switch(field)                          {                              case 12: value.Y = state.ReadString(); break;                              case 42: value.X = state.ReadInt32(); break;                              default: state.SkipField(); break;                          }
Magic Number,ProtoBuf.Test,MyServices,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\BufferWriteCountTests.cs,Write,The following statement contains a magic number: state.WriteString(12' value.Y);
Magic Number,ProtoBuf.Test,MyServices,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\BufferWriteCountTests.cs,Write,The following statement contains a magic number: state.WriteInt32Varint(42' value.X);
Magic Number,ProtoBuf.Test,CustomScalarAllocator,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\CustomScalarAllocator.cs,TestCustomBlobLikeReader,The following statement contains a magic number: Assert.Equal(20' expected.Length);
Magic Number,ProtoBuf.Test,CustomScalarAllocator,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\CustomScalarAllocator.cs,TestCustomBlobLikeReader,The following statement contains a magic number: Assert.Equal(20' ctx.TotalAllocatedSequence);
Magic Number,ProtoBuf.Test,CustomScalarAllocator,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\CustomScalarAllocator.cs,TestCustomMemoryBlobLikeReader,The following statement contains a magic number: Assert.Equal(20' expected.Length);
Magic Number,ProtoBuf.Test,CustomScalarAllocator,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\CustomScalarAllocator.cs,TestCustomMemoryBlobLikeReader,The following statement contains a magic number: Assert.Equal(20' ctx.TotalAllocatedMemory);
Magic Number,ProtoBuf.Test,MeasureTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\MeasureTests.cs,TestMeasure_Stream,The following statement contains a magic number: Assert.Equal(10330' measure.Length);
Magic Number,ProtoBuf.Test,MeasureTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\MeasureTests.cs,TestMeasure_Stream,The following statement contains a magic number: Assert.Equal(10330' ms.Length);
Magic Number,ProtoBuf.Test,MeasureTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\MeasureTests.cs,TestMeasure_Buffer,The following statement contains a magic number: Assert.Equal(10330' measure.Length);
Magic Number,ProtoBuf.Test,MeasureTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\MeasureTests.cs,TestMeasure_Buffer,The following statement contains a magic number: using var bw = BufferWriter<byte>.Create(blockSize: 7);
Magic Number,ProtoBuf.Test,MeasureTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\MeasureTests.cs,TestMeasure_Buffer,The following statement contains a magic number: Assert.Equal(10330' bw.Length);
Magic Number,ProtoBuf.Test,MeasureTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\MeasureTests.cs,TestMeasure_Buffer,The following statement contains a magic number: Assert.Equal(10330' ros.Length);
Magic Number,ProtoBuf.Test,MeasureTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\MeasureTests.cs,Invent,The following statement contains a magic number: var rand = new Random(12345);
Magic Number,ProtoBuf.Test,MeasureTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\MeasureTests.cs,Invent,The following statement contains a magic number: const int MAXLEN = 64;
Magic Number,ProtoBuf.Test,MeasureTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\MeasureTests.cs,Invent,The following statement contains a magic number: Thing thing = rand.Next(10) > 7 ? new SubThing { SubId = rand.Next(10000) } : new Thing();
Magic Number,ProtoBuf.Test,MeasureTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\MeasureTests.cs,Invent,The following statement contains a magic number: Thing thing = rand.Next(10) > 7 ? new SubThing { SubId = rand.Next(10000) } : new Thing();
Magic Number,ProtoBuf.Test,MeasureTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\MeasureTests.cs,Invent,The following statement contains a magic number: Thing thing = rand.Next(10) > 7 ? new SubThing { SubId = rand.Next(10000) } : new Thing();
Magic Number,ProtoBuf.Test,MeasureTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\MeasureTests.cs,Invent,The following statement contains a magic number: thing.Id = rand.Next(10000);
Magic Number,ProtoBuf.Test,MeasureTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\MeasureTests.cs,Invent,The following statement contains a magic number: i < 250
Magic Number,ProtoBuf.Tests,BufferWriterTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\BufferWriterTests.cs,ManualWriter,The following statement contains a magic number: state.WriteInt32(42);
Magic Number,ProtoBuf.Tests,BufferWriterTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\BufferWriterTests.cs,ManualWriter,The following statement contains a magic number: Assert.Equal(2' state.GetPosition());
Magic Number,ProtoBuf.Tests,BufferWriterTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\BufferWriterTests.cs,ManualWriter,The following statement contains a magic number: state.WriteFieldHeader(2' WireType.String);
Magic Number,ProtoBuf.Tests,BufferWriterTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\BufferWriterTests.cs,ManualWriter,The following statement contains a magic number: Assert.Equal(3' state.GetPosition());
Magic Number,ProtoBuf.Tests,BufferWriterTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\BufferWriterTests.cs,ManualWriter,The following statement contains a magic number: Assert.Equal(20' state.GetPosition());
Magic Number,ProtoBuf.Tests,BufferWriterTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\BufferWriterTests.cs,ManualWriter,The following statement contains a magic number: state.WriteFieldHeader(3' WireType.StartGroup);
Magic Number,ProtoBuf.Tests,BufferWriterTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\BufferWriterTests.cs,ManualWriter,The following statement contains a magic number: Assert.Equal(21' state.GetPosition());
Magic Number,ProtoBuf.Tests,BufferWriterTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\BufferWriterTests.cs,ManualWriter,The following statement contains a magic number: Assert.Equal(22' state.GetPosition());
Magic Number,ProtoBuf.Tests,BufferWriterTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\BufferWriterTests.cs,ManualWriter,The following statement contains a magic number: state.WriteFieldHeader(4' WireType.String);
Magic Number,ProtoBuf.Tests,BufferWriterTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\BufferWriterTests.cs,ManualWriter,The following statement contains a magic number: Assert.Equal(23' state.GetPosition());
Magic Number,ProtoBuf.Tests,BufferWriterTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\BufferWriterTests.cs,ManualWriter,The following statement contains a magic number: Assert.Equal(24' state.GetPosition());
Magic Number,ProtoBuf.Tests,BufferWriterTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\BufferWriterTests.cs,ManualWriter,The following statement contains a magic number: Assert.Equal(24' state.GetPosition());
Magic Number,ProtoBuf.Tests,ASerializer,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\BufferWriterTests.cs,Read,The following statement contains a magic number: switch (fieldHeader)                      {                          case 1:                              value.Level = state.ReadInt32();                              break;                          case 2:                              value.Inner = state.ReadMessage<A>(default' value.Inner' this);                              break;                          default:                              state.SkipField();                              break;                      }
Magic Number,ProtoBuf.Tests,ASerializer,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\BufferWriterTests.cs,Write,The following statement contains a magic number: state.WriteFieldHeader(2' WireType.String);
Magic Number,ProtoBuf,EmitProtogenModel,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\EmitProtogenModel.cs,CanRountripExtensionData,The following statement contains a magic number: var obj = new CanRountripExtensionData_WithFields { X = 1' Y = 2 };
Magic Number,ProtoBuf,InputOutputAPI,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\InputOutputAPI.cs,CanSerializeViaInputOutputAPI,The following statement contains a magic number: var orig = new SomeModel { Id = 42 };
Magic Number,ProtoBuf,InputOutputAPI,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\InputOutputAPI.cs,CanSerializeViaInputOutputAPI,The following statement contains a magic number: Assert.Equal(42' clone.Id);
Magic Number,ProtoBuf,InputOutputAPI,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\InputOutputAPI.cs,CanSerializeViaInputOutputAPI,The following statement contains a magic number: Assert.Equal(42' clone.Id);
Magic Number,ProtoBuf,InputOutputAPI,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\InputOutputAPI.cs,CanSerializeViaInputOutputAPI,The following statement contains a magic number: Assert.Equal(42' clone.Id);
Magic Number,ProtoBuf,InputOutputAPI,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\InputOutputAPI.cs,CanSerializeViaInputOutputAPI_Buffers,The following statement contains a magic number: var orig = new SomeModel { Id = 42 };
Magic Number,ProtoBuf,InputOutputAPI,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\InputOutputAPI.cs,CanSerializeViaInputOutputAPI_Buffers,The following statement contains a magic number: Assert.Equal(42' clone.Id);
Magic Number,ProtoBuf,ManualSerializer,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\ManualSerializer.cs,ReadWriteAutomated_StreamReaderWriter,The following statement contains a magic number: var obj = new C { AVal = 123' BVal = 456' CVal = 789 };
Magic Number,ProtoBuf,ManualSerializer,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\ManualSerializer.cs,ReadWriteAutomated_StreamReaderWriter,The following statement contains a magic number: var obj = new C { AVal = 123' BVal = 456' CVal = 789 };
Magic Number,ProtoBuf,ManualSerializer,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\ManualSerializer.cs,ReadWriteAutomated_StreamReaderWriter,The following statement contains a magic number: var obj = new C { AVal = 123' BVal = 456' CVal = 789 };
Magic Number,ProtoBuf,ManualSerializer,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\ManualSerializer.cs,ReadWriteAutomated_StreamReaderWriter,The following statement contains a magic number: Assert.Equal(123' clone.AVal);
Magic Number,ProtoBuf,ManualSerializer,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\ManualSerializer.cs,ReadWriteAutomated_StreamReaderWriter,The following statement contains a magic number: Assert.Equal(456' clone.BVal);
Magic Number,ProtoBuf,ManualSerializer,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\ManualSerializer.cs,ReadWriteAutomated_StreamReaderWriter,The following statement contains a magic number: Assert.Equal(789' clone.CVal);
Magic Number,ProtoBuf,ManualSerializer,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\ManualSerializer.cs,ReadWriteAutomated_Stream,The following statement contains a magic number: var obj = new C { AVal = 123' BVal = 456' CVal = 789 };
Magic Number,ProtoBuf,ManualSerializer,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\ManualSerializer.cs,ReadWriteAutomated_Stream,The following statement contains a magic number: var obj = new C { AVal = 123' BVal = 456' CVal = 789 };
Magic Number,ProtoBuf,ManualSerializer,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\ManualSerializer.cs,ReadWriteAutomated_Stream,The following statement contains a magic number: var obj = new C { AVal = 123' BVal = 456' CVal = 789 };
Magic Number,ProtoBuf,ManualSerializer,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\ManualSerializer.cs,ReadWriteAutomated_Stream,The following statement contains a magic number: Assert.Equal(123' clone.AVal);
Magic Number,ProtoBuf,ManualSerializer,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\ManualSerializer.cs,ReadWriteAutomated_Stream,The following statement contains a magic number: Assert.Equal(456' clone.BVal);
Magic Number,ProtoBuf,ManualSerializer,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\ManualSerializer.cs,ReadWriteAutomated_Stream,The following statement contains a magic number: Assert.Equal(789' clone.CVal);
Magic Number,ProtoBuf,ManualSerializer,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\ManualSerializer.cs,ReadWriteAutomated_PipeReaderWriter,The following statement contains a magic number: var obj = new C { AVal = 123' BVal = 456' CVal = 789 };
Magic Number,ProtoBuf,ManualSerializer,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\ManualSerializer.cs,ReadWriteAutomated_PipeReaderWriter,The following statement contains a magic number: var obj = new C { AVal = 123' BVal = 456' CVal = 789 };
Magic Number,ProtoBuf,ManualSerializer,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\ManualSerializer.cs,ReadWriteAutomated_PipeReaderWriter,The following statement contains a magic number: var obj = new C { AVal = 123' BVal = 456' CVal = 789 };
Magic Number,ProtoBuf,ManualSerializer,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\ManualSerializer.cs,ReadWriteAutomated_PipeReaderWriter,The following statement contains a magic number: Assert.Equal(123' clone.AVal);
Magic Number,ProtoBuf,ManualSerializer,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\ManualSerializer.cs,ReadWriteAutomated_PipeReaderWriter,The following statement contains a magic number: Assert.Equal(456' clone.BVal);
Magic Number,ProtoBuf,ManualSerializer,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\ManualSerializer.cs,ReadWriteAutomated_PipeReaderWriter,The following statement contains a magic number: Assert.Equal(789' clone.CVal);
Magic Number,ProtoBuf,ManualSerializer,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\ManualSerializer.cs,ReadWriteManual_StreamReaderWriter,The following statement contains a magic number: var obj = new C { AVal = 123' BVal = 456' CVal = 789 };
Magic Number,ProtoBuf,ManualSerializer,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\ManualSerializer.cs,ReadWriteManual_StreamReaderWriter,The following statement contains a magic number: var obj = new C { AVal = 123' BVal = 456' CVal = 789 };
Magic Number,ProtoBuf,ManualSerializer,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\ManualSerializer.cs,ReadWriteManual_StreamReaderWriter,The following statement contains a magic number: var obj = new C { AVal = 123' BVal = 456' CVal = 789 };
Magic Number,ProtoBuf,ManualSerializer,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\ManualSerializer.cs,ReadWriteManual_StreamReaderWriter,The following statement contains a magic number: Assert.Equal(12' ms.Length);
Magic Number,ProtoBuf,ManualSerializer,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\ManualSerializer.cs,ReadWriteManual_StreamReaderWriter,The following statement contains a magic number: Assert.Equal(123' clone.AVal);
Magic Number,ProtoBuf,ManualSerializer,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\ManualSerializer.cs,ReadWriteManual_StreamReaderWriter,The following statement contains a magic number: Assert.Equal(456' clone.BVal);
Magic Number,ProtoBuf,ManualSerializer,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\ManualSerializer.cs,ReadWriteManual_StreamReaderWriter,The following statement contains a magic number: Assert.Equal(789' clone.CVal);
Magic Number,ProtoBuf,ManualSerializer,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\ManualSerializer.cs,ReadWriteManual_PipeReaderWriter,The following statement contains a magic number: var obj = new C { AVal = 123' BVal = 456' CVal = 789 };
Magic Number,ProtoBuf,ManualSerializer,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\ManualSerializer.cs,ReadWriteManual_PipeReaderWriter,The following statement contains a magic number: var obj = new C { AVal = 123' BVal = 456' CVal = 789 };
Magic Number,ProtoBuf,ManualSerializer,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\ManualSerializer.cs,ReadWriteManual_PipeReaderWriter,The following statement contains a magic number: var obj = new C { AVal = 123' BVal = 456' CVal = 789 };
Magic Number,ProtoBuf,ManualSerializer,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\ManualSerializer.cs,ReadWriteManual_PipeReaderWriter,The following statement contains a magic number: Assert.Equal(12' bytes);
Magic Number,ProtoBuf,ManualSerializer,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\ManualSerializer.cs,ReadWriteManual_PipeReaderWriter,The following statement contains a magic number: Assert.Equal(12' pipe.Length);
Magic Number,ProtoBuf,ManualSerializer,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\ManualSerializer.cs,ReadWriteManual_PipeReaderWriter,The following statement contains a magic number: Assert.Equal(123' clone.AVal);
Magic Number,ProtoBuf,ManualSerializer,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\ManualSerializer.cs,ReadWriteManual_PipeReaderWriter,The following statement contains a magic number: Assert.Equal(456' clone.BVal);
Magic Number,ProtoBuf,ManualSerializer,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\ManualSerializer.cs,ReadWriteManual_PipeReaderWriter,The following statement contains a magic number: Assert.Equal(789' clone.CVal);
Magic Number,ProtoBuf,ModelSerializer,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\ManualSerializer.cs,WriteSubType,The following statement contains a magic number: state.WriteFieldHeader(4' WireType.String);
Magic Number,ProtoBuf,ModelSerializer,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\ManualSerializer.cs,ReadSubType,The following statement contains a magic number: switch (field)                  {                      case 1:                          value.Value.AVal = state.ReadInt32();                          break;                      case 4:                          value.ReadSubType<B>(ref state' this);                          break;                      default:                          state.SkipField();                          break;                  }
Magic Number,ProtoBuf,ModelSerializer,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\ManualSerializer.cs,WriteSubType,The following statement contains a magic number: state.WriteFieldHeader(5' WireType.String);
Magic Number,ProtoBuf,ModelSerializer,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\ManualSerializer.cs,WriteSubType,The following statement contains a magic number: state.WriteFieldHeader(2' WireType.Varint);
Magic Number,ProtoBuf,ModelSerializer,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\ManualSerializer.cs,ReadSubType,The following statement contains a magic number: switch (field)                  {                      case 2:                          value.Value.BVal = state.ReadInt32();                          break;                      case 5:                          value.ReadSubType<C>(ref state' this);                          break;                      default:                          state.SkipField();                          break;                  }
Magic Number,ProtoBuf,ModelSerializer,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\ManualSerializer.cs,ReadSubType,The following statement contains a magic number: switch (field)                  {                      case 2:                          value.Value.BVal = state.ReadInt32();                          break;                      case 5:                          value.ReadSubType<C>(ref state' this);                          break;                      default:                          state.SkipField();                          break;                  }
Magic Number,ProtoBuf,ModelSerializer,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\ManualSerializer.cs,WriteSubType,The following statement contains a magic number: state.WriteFieldHeader(3' WireType.Varint);
Magic Number,ProtoBuf,ModelSerializer,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\ManualSerializer.cs,ReadSubType,The following statement contains a magic number: switch (field)                  {                      case 3:                          value.Value.CVal = state.ReadInt32();                          break;                      default:                          state.SkipField();                          break;                  }
Magic Number,ProtoBuf,ModelSerializer,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\ManualSerializer.cs,Write,The following statement contains a magic number: state.WriteString(2' value.Name);
Magic Number,ProtoBuf,ModelSerializer,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\ManualSerializer.cs,Write,The following statement contains a magic number: state.WriteMessage<D>(3' default' value.Nested' this);
Magic Number,ProtoBuf,ModelSerializer,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\ManualSerializer.cs,Write,The following statement contains a magic number: state.WriteInt32Varint(4' (int)value.EnumValue);
Magic Number,ProtoBuf,ModelSerializer,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\ManualSerializer.cs,Read,The following statement contains a magic number: switch (field)                  {                      case 1:                          value.DVal = state.ReadInt32();                          break;                      case 2:                          value.Name = state.ReadString();                          break;                      case 3:                          value.Nested = state.ReadMessage<D>(default' value.Nested' this);                          break;                      case 4:                          value.EnumValue = (SomeEnum)state.ReadInt32();                          break;                      default:                          state.SkipField();                          break;                  }
Magic Number,ProtoBuf,ModelSerializer,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\ManualSerializer.cs,Read,The following statement contains a magic number: switch (field)                  {                      case 1:                          value.DVal = state.ReadInt32();                          break;                      case 2:                          value.Name = state.ReadString();                          break;                      case 3:                          value.Nested = state.ReadMessage<D>(default' value.Nested' this);                          break;                      case 4:                          value.EnumValue = (SomeEnum)state.ReadInt32();                          break;                      default:                          state.SkipField();                          break;                  }
Magic Number,ProtoBuf,ModelSerializer,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\ManualSerializer.cs,Read,The following statement contains a magic number: switch (field)                  {                      case 1:                          value.DVal = state.ReadInt32();                          break;                      case 2:                          value.Name = state.ReadString();                          break;                      case 3:                          value.Nested = state.ReadMessage<D>(default' value.Nested' this);                          break;                      case 4:                          value.EnumValue = (SomeEnum)state.ReadInt32();                          break;                      default:                          state.SkipField();                          break;                  }
Magic Number,FX11,FX11_Program,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\FX11\Program.cs,BuildMeta,The following statement contains a magic number: model.Add(typeof(Order)' false)                  .Add(1' "OrderID")                  .Add(2' "CustomerID")                  .Add(3' "EmployeeID")                  .Add(4' "OrderDate")                  .Add(5' "RequiredDate")                  .Add(6' "ShippedDate")                  .Add(7' "ShipVia")                  .Add(8' "Freight")                  .Add(9' "ShipName")                  .Add(10' "ShipAddress")                  .Add(11' "ShipCity")                  .Add(12' "ShipRegion")                  .Add(13' "ShipPostalCode")                  .Add(14' "ShipCountry");
Magic Number,FX11,FX11_Program,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\FX11\Program.cs,BuildMeta,The following statement contains a magic number: model.Add(typeof(Order)' false)                  .Add(1' "OrderID")                  .Add(2' "CustomerID")                  .Add(3' "EmployeeID")                  .Add(4' "OrderDate")                  .Add(5' "RequiredDate")                  .Add(6' "ShippedDate")                  .Add(7' "ShipVia")                  .Add(8' "Freight")                  .Add(9' "ShipName")                  .Add(10' "ShipAddress")                  .Add(11' "ShipCity")                  .Add(12' "ShipRegion")                  .Add(13' "ShipPostalCode")                  .Add(14' "ShipCountry");
Magic Number,FX11,FX11_Program,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\FX11\Program.cs,BuildMeta,The following statement contains a magic number: model.Add(typeof(Order)' false)                  .Add(1' "OrderID")                  .Add(2' "CustomerID")                  .Add(3' "EmployeeID")                  .Add(4' "OrderDate")                  .Add(5' "RequiredDate")                  .Add(6' "ShippedDate")                  .Add(7' "ShipVia")                  .Add(8' "Freight")                  .Add(9' "ShipName")                  .Add(10' "ShipAddress")                  .Add(11' "ShipCity")                  .Add(12' "ShipRegion")                  .Add(13' "ShipPostalCode")                  .Add(14' "ShipCountry");
Magic Number,FX11,FX11_Program,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\FX11\Program.cs,BuildMeta,The following statement contains a magic number: model.Add(typeof(Order)' false)                  .Add(1' "OrderID")                  .Add(2' "CustomerID")                  .Add(3' "EmployeeID")                  .Add(4' "OrderDate")                  .Add(5' "RequiredDate")                  .Add(6' "ShippedDate")                  .Add(7' "ShipVia")                  .Add(8' "Freight")                  .Add(9' "ShipName")                  .Add(10' "ShipAddress")                  .Add(11' "ShipCity")                  .Add(12' "ShipRegion")                  .Add(13' "ShipPostalCode")                  .Add(14' "ShipCountry");
Magic Number,FX11,FX11_Program,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\FX11\Program.cs,BuildMeta,The following statement contains a magic number: model.Add(typeof(Order)' false)                  .Add(1' "OrderID")                  .Add(2' "CustomerID")                  .Add(3' "EmployeeID")                  .Add(4' "OrderDate")                  .Add(5' "RequiredDate")                  .Add(6' "ShippedDate")                  .Add(7' "ShipVia")                  .Add(8' "Freight")                  .Add(9' "ShipName")                  .Add(10' "ShipAddress")                  .Add(11' "ShipCity")                  .Add(12' "ShipRegion")                  .Add(13' "ShipPostalCode")                  .Add(14' "ShipCountry");
Magic Number,FX11,FX11_Program,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\FX11\Program.cs,BuildMeta,The following statement contains a magic number: model.Add(typeof(Order)' false)                  .Add(1' "OrderID")                  .Add(2' "CustomerID")                  .Add(3' "EmployeeID")                  .Add(4' "OrderDate")                  .Add(5' "RequiredDate")                  .Add(6' "ShippedDate")                  .Add(7' "ShipVia")                  .Add(8' "Freight")                  .Add(9' "ShipName")                  .Add(10' "ShipAddress")                  .Add(11' "ShipCity")                  .Add(12' "ShipRegion")                  .Add(13' "ShipPostalCode")                  .Add(14' "ShipCountry");
Magic Number,FX11,FX11_Program,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\FX11\Program.cs,BuildMeta,The following statement contains a magic number: model.Add(typeof(Order)' false)                  .Add(1' "OrderID")                  .Add(2' "CustomerID")                  .Add(3' "EmployeeID")                  .Add(4' "OrderDate")                  .Add(5' "RequiredDate")                  .Add(6' "ShippedDate")                  .Add(7' "ShipVia")                  .Add(8' "Freight")                  .Add(9' "ShipName")                  .Add(10' "ShipAddress")                  .Add(11' "ShipCity")                  .Add(12' "ShipRegion")                  .Add(13' "ShipPostalCode")                  .Add(14' "ShipCountry");
Magic Number,FX11,FX11_Program,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\FX11\Program.cs,BuildMeta,The following statement contains a magic number: model.Add(typeof(Order)' false)                  .Add(1' "OrderID")                  .Add(2' "CustomerID")                  .Add(3' "EmployeeID")                  .Add(4' "OrderDate")                  .Add(5' "RequiredDate")                  .Add(6' "ShippedDate")                  .Add(7' "ShipVia")                  .Add(8' "Freight")                  .Add(9' "ShipName")                  .Add(10' "ShipAddress")                  .Add(11' "ShipCity")                  .Add(12' "ShipRegion")                  .Add(13' "ShipPostalCode")                  .Add(14' "ShipCountry");
Magic Number,FX11,FX11_Program,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\FX11\Program.cs,BuildMeta,The following statement contains a magic number: model.Add(typeof(Order)' false)                  .Add(1' "OrderID")                  .Add(2' "CustomerID")                  .Add(3' "EmployeeID")                  .Add(4' "OrderDate")                  .Add(5' "RequiredDate")                  .Add(6' "ShippedDate")                  .Add(7' "ShipVia")                  .Add(8' "Freight")                  .Add(9' "ShipName")                  .Add(10' "ShipAddress")                  .Add(11' "ShipCity")                  .Add(12' "ShipRegion")                  .Add(13' "ShipPostalCode")                  .Add(14' "ShipCountry");
Magic Number,FX11,FX11_Program,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\FX11\Program.cs,BuildMeta,The following statement contains a magic number: model.Add(typeof(Order)' false)                  .Add(1' "OrderID")                  .Add(2' "CustomerID")                  .Add(3' "EmployeeID")                  .Add(4' "OrderDate")                  .Add(5' "RequiredDate")                  .Add(6' "ShippedDate")                  .Add(7' "ShipVia")                  .Add(8' "Freight")                  .Add(9' "ShipName")                  .Add(10' "ShipAddress")                  .Add(11' "ShipCity")                  .Add(12' "ShipRegion")                  .Add(13' "ShipPostalCode")                  .Add(14' "ShipCountry");
Magic Number,FX11,FX11_Program,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\FX11\Program.cs,BuildMeta,The following statement contains a magic number: model.Add(typeof(Order)' false)                  .Add(1' "OrderID")                  .Add(2' "CustomerID")                  .Add(3' "EmployeeID")                  .Add(4' "OrderDate")                  .Add(5' "RequiredDate")                  .Add(6' "ShippedDate")                  .Add(7' "ShipVia")                  .Add(8' "Freight")                  .Add(9' "ShipName")                  .Add(10' "ShipAddress")                  .Add(11' "ShipCity")                  .Add(12' "ShipRegion")                  .Add(13' "ShipPostalCode")                  .Add(14' "ShipCountry");
Magic Number,FX11,FX11_Program,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\FX11\Program.cs,BuildMeta,The following statement contains a magic number: model.Add(typeof(Order)' false)                  .Add(1' "OrderID")                  .Add(2' "CustomerID")                  .Add(3' "EmployeeID")                  .Add(4' "OrderDate")                  .Add(5' "RequiredDate")                  .Add(6' "ShippedDate")                  .Add(7' "ShipVia")                  .Add(8' "Freight")                  .Add(9' "ShipName")                  .Add(10' "ShipAddress")                  .Add(11' "ShipCity")                  .Add(12' "ShipRegion")                  .Add(13' "ShipPostalCode")                  .Add(14' "ShipCountry");
Magic Number,FX11,FX11_Program,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\FX11\Program.cs,BuildMeta,The following statement contains a magic number: model.Add(typeof(Order)' false)                  .Add(1' "OrderID")                  .Add(2' "CustomerID")                  .Add(3' "EmployeeID")                  .Add(4' "OrderDate")                  .Add(5' "RequiredDate")                  .Add(6' "ShippedDate")                  .Add(7' "ShipVia")                  .Add(8' "Freight")                  .Add(9' "ShipName")                  .Add(10' "ShipAddress")                  .Add(11' "ShipCity")                  .Add(12' "ShipRegion")                  .Add(13' "ShipPostalCode")                  .Add(14' "ShipCountry");
Magic Number,FX11,FX11_Program,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\FX11\Program.cs,BuildMeta,The following statement contains a magic number: model.Add(typeof(Product)' false)                  .Add(1' "ProductID")                  .Add(2' "ProductName")                  .Add(3' "SupplierID")                  .Add(4' "CategoryID")                  .Add(5' "QuantityPerUnit")                  .Add(6' "UnitPrice")                  .Add(7' "UnitsInStock")                  .Add(8' "UnitsOnOrder")                  .Add(9' "ReorderLevel")                  .Add(10' "Discontinued")                  .Add(11' "LastEditDate")                  .Add(12' "CreationDate");
Magic Number,FX11,FX11_Program,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\FX11\Program.cs,BuildMeta,The following statement contains a magic number: model.Add(typeof(Product)' false)                  .Add(1' "ProductID")                  .Add(2' "ProductName")                  .Add(3' "SupplierID")                  .Add(4' "CategoryID")                  .Add(5' "QuantityPerUnit")                  .Add(6' "UnitPrice")                  .Add(7' "UnitsInStock")                  .Add(8' "UnitsOnOrder")                  .Add(9' "ReorderLevel")                  .Add(10' "Discontinued")                  .Add(11' "LastEditDate")                  .Add(12' "CreationDate");
Magic Number,FX11,FX11_Program,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\FX11\Program.cs,BuildMeta,The following statement contains a magic number: model.Add(typeof(Product)' false)                  .Add(1' "ProductID")                  .Add(2' "ProductName")                  .Add(3' "SupplierID")                  .Add(4' "CategoryID")                  .Add(5' "QuantityPerUnit")                  .Add(6' "UnitPrice")                  .Add(7' "UnitsInStock")                  .Add(8' "UnitsOnOrder")                  .Add(9' "ReorderLevel")                  .Add(10' "Discontinued")                  .Add(11' "LastEditDate")                  .Add(12' "CreationDate");
Magic Number,FX11,FX11_Program,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\FX11\Program.cs,BuildMeta,The following statement contains a magic number: model.Add(typeof(Product)' false)                  .Add(1' "ProductID")                  .Add(2' "ProductName")                  .Add(3' "SupplierID")                  .Add(4' "CategoryID")                  .Add(5' "QuantityPerUnit")                  .Add(6' "UnitPrice")                  .Add(7' "UnitsInStock")                  .Add(8' "UnitsOnOrder")                  .Add(9' "ReorderLevel")                  .Add(10' "Discontinued")                  .Add(11' "LastEditDate")                  .Add(12' "CreationDate");
Magic Number,FX11,FX11_Program,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\FX11\Program.cs,BuildMeta,The following statement contains a magic number: model.Add(typeof(Product)' false)                  .Add(1' "ProductID")                  .Add(2' "ProductName")                  .Add(3' "SupplierID")                  .Add(4' "CategoryID")                  .Add(5' "QuantityPerUnit")                  .Add(6' "UnitPrice")                  .Add(7' "UnitsInStock")                  .Add(8' "UnitsOnOrder")                  .Add(9' "ReorderLevel")                  .Add(10' "Discontinued")                  .Add(11' "LastEditDate")                  .Add(12' "CreationDate");
Magic Number,FX11,FX11_Program,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\FX11\Program.cs,BuildMeta,The following statement contains a magic number: model.Add(typeof(Product)' false)                  .Add(1' "ProductID")                  .Add(2' "ProductName")                  .Add(3' "SupplierID")                  .Add(4' "CategoryID")                  .Add(5' "QuantityPerUnit")                  .Add(6' "UnitPrice")                  .Add(7' "UnitsInStock")                  .Add(8' "UnitsOnOrder")                  .Add(9' "ReorderLevel")                  .Add(10' "Discontinued")                  .Add(11' "LastEditDate")                  .Add(12' "CreationDate");
Magic Number,FX11,FX11_Program,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\FX11\Program.cs,BuildMeta,The following statement contains a magic number: model.Add(typeof(Product)' false)                  .Add(1' "ProductID")                  .Add(2' "ProductName")                  .Add(3' "SupplierID")                  .Add(4' "CategoryID")                  .Add(5' "QuantityPerUnit")                  .Add(6' "UnitPrice")                  .Add(7' "UnitsInStock")                  .Add(8' "UnitsOnOrder")                  .Add(9' "ReorderLevel")                  .Add(10' "Discontinued")                  .Add(11' "LastEditDate")                  .Add(12' "CreationDate");
Magic Number,FX11,FX11_Program,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\FX11\Program.cs,BuildMeta,The following statement contains a magic number: model.Add(typeof(Product)' false)                  .Add(1' "ProductID")                  .Add(2' "ProductName")                  .Add(3' "SupplierID")                  .Add(4' "CategoryID")                  .Add(5' "QuantityPerUnit")                  .Add(6' "UnitPrice")                  .Add(7' "UnitsInStock")                  .Add(8' "UnitsOnOrder")                  .Add(9' "ReorderLevel")                  .Add(10' "Discontinued")                  .Add(11' "LastEditDate")                  .Add(12' "CreationDate");
Magic Number,FX11,FX11_Program,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\FX11\Program.cs,BuildMeta,The following statement contains a magic number: model.Add(typeof(Product)' false)                  .Add(1' "ProductID")                  .Add(2' "ProductName")                  .Add(3' "SupplierID")                  .Add(4' "CategoryID")                  .Add(5' "QuantityPerUnit")                  .Add(6' "UnitPrice")                  .Add(7' "UnitsInStock")                  .Add(8' "UnitsOnOrder")                  .Add(9' "ReorderLevel")                  .Add(10' "Discontinued")                  .Add(11' "LastEditDate")                  .Add(12' "CreationDate");
Magic Number,FX11,FX11_Program,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\FX11\Program.cs,BuildMeta,The following statement contains a magic number: model.Add(typeof(Product)' false)                  .Add(1' "ProductID")                  .Add(2' "ProductName")                  .Add(3' "SupplierID")                  .Add(4' "CategoryID")                  .Add(5' "QuantityPerUnit")                  .Add(6' "UnitPrice")                  .Add(7' "UnitsInStock")                  .Add(8' "UnitsOnOrder")                  .Add(9' "ReorderLevel")                  .Add(10' "Discontinued")                  .Add(11' "LastEditDate")                  .Add(12' "CreationDate");
Magic Number,FX11,FX11_Program,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\FX11\Program.cs,BuildMeta,The following statement contains a magic number: model.Add(typeof(Product)' false)                  .Add(1' "ProductID")                  .Add(2' "ProductName")                  .Add(3' "SupplierID")                  .Add(4' "CategoryID")                  .Add(5' "QuantityPerUnit")                  .Add(6' "UnitPrice")                  .Add(7' "UnitsInStock")                  .Add(8' "UnitsOnOrder")                  .Add(9' "ReorderLevel")                  .Add(10' "Discontinued")                  .Add(11' "LastEditDate")                  .Add(12' "CreationDate");
Magic Number,FX11,FX11_Program,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\FX11\Program.cs,BuildMeta,The following statement contains a magic number: Product prod = new Product              {                  ProductID = 123'                  ProductName = "abc devil"'                  SupplierID = 456'                  CategoryID = 13'                  QuantityPerUnit = "1"'                  UnitPrice = 12.99M'                  UnitsInStock = 96'                  UnitsOnOrder = 12'                  ReorderLevel = 30'                  Discontinued = false'                  LastEditDate = new DateTime(2009' 5' 7)'                  CreationDate = new DateTime(2009' 1' 3)              };
Magic Number,FX11,FX11_Program,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\FX11\Program.cs,BuildMeta,The following statement contains a magic number: Product prod = new Product              {                  ProductID = 123'                  ProductName = "abc devil"'                  SupplierID = 456'                  CategoryID = 13'                  QuantityPerUnit = "1"'                  UnitPrice = 12.99M'                  UnitsInStock = 96'                  UnitsOnOrder = 12'                  ReorderLevel = 30'                  Discontinued = false'                  LastEditDate = new DateTime(2009' 5' 7)'                  CreationDate = new DateTime(2009' 1' 3)              };
Magic Number,FX11,FX11_Program,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\FX11\Program.cs,BuildMeta,The following statement contains a magic number: Product prod = new Product              {                  ProductID = 123'                  ProductName = "abc devil"'                  SupplierID = 456'                  CategoryID = 13'                  QuantityPerUnit = "1"'                  UnitPrice = 12.99M'                  UnitsInStock = 96'                  UnitsOnOrder = 12'                  ReorderLevel = 30'                  Discontinued = false'                  LastEditDate = new DateTime(2009' 5' 7)'                  CreationDate = new DateTime(2009' 1' 3)              };
Magic Number,FX11,FX11_Program,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\FX11\Program.cs,BuildMeta,The following statement contains a magic number: Product prod = new Product              {                  ProductID = 123'                  ProductName = "abc devil"'                  SupplierID = 456'                  CategoryID = 13'                  QuantityPerUnit = "1"'                  UnitPrice = 12.99M'                  UnitsInStock = 96'                  UnitsOnOrder = 12'                  ReorderLevel = 30'                  Discontinued = false'                  LastEditDate = new DateTime(2009' 5' 7)'                  CreationDate = new DateTime(2009' 1' 3)              };
Magic Number,FX11,FX11_Program,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\FX11\Program.cs,BuildMeta,The following statement contains a magic number: Product prod = new Product              {                  ProductID = 123'                  ProductName = "abc devil"'                  SupplierID = 456'                  CategoryID = 13'                  QuantityPerUnit = "1"'                  UnitPrice = 12.99M'                  UnitsInStock = 96'                  UnitsOnOrder = 12'                  ReorderLevel = 30'                  Discontinued = false'                  LastEditDate = new DateTime(2009' 5' 7)'                  CreationDate = new DateTime(2009' 1' 3)              };
Magic Number,FX11,FX11_Program,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\FX11\Program.cs,BuildMeta,The following statement contains a magic number: Product prod = new Product              {                  ProductID = 123'                  ProductName = "abc devil"'                  SupplierID = 456'                  CategoryID = 13'                  QuantityPerUnit = "1"'                  UnitPrice = 12.99M'                  UnitsInStock = 96'                  UnitsOnOrder = 12'                  ReorderLevel = 30'                  Discontinued = false'                  LastEditDate = new DateTime(2009' 5' 7)'                  CreationDate = new DateTime(2009' 1' 3)              };
Magic Number,FX11,FX11_Program,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\FX11\Program.cs,BuildMeta,The following statement contains a magic number: Product prod = new Product              {                  ProductID = 123'                  ProductName = "abc devil"'                  SupplierID = 456'                  CategoryID = 13'                  QuantityPerUnit = "1"'                  UnitPrice = 12.99M'                  UnitsInStock = 96'                  UnitsOnOrder = 12'                  ReorderLevel = 30'                  Discontinued = false'                  LastEditDate = new DateTime(2009' 5' 7)'                  CreationDate = new DateTime(2009' 1' 3)              };
Magic Number,FX11,FX11_Program,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\FX11\Program.cs,BuildMeta,The following statement contains a magic number: Product prod = new Product              {                  ProductID = 123'                  ProductName = "abc devil"'                  SupplierID = 456'                  CategoryID = 13'                  QuantityPerUnit = "1"'                  UnitPrice = 12.99M'                  UnitsInStock = 96'                  UnitsOnOrder = 12'                  ReorderLevel = 30'                  Discontinued = false'                  LastEditDate = new DateTime(2009' 5' 7)'                  CreationDate = new DateTime(2009' 1' 3)              };
Magic Number,FX11,FX11_Program,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\FX11\Program.cs,BuildMeta,The following statement contains a magic number: Product prod = new Product              {                  ProductID = 123'                  ProductName = "abc devil"'                  SupplierID = 456'                  CategoryID = 13'                  QuantityPerUnit = "1"'                  UnitPrice = 12.99M'                  UnitsInStock = 96'                  UnitsOnOrder = 12'                  ReorderLevel = 30'                  Discontinued = false'                  LastEditDate = new DateTime(2009' 5' 7)'                  CreationDate = new DateTime(2009' 1' 3)              };
Magic Number,FX11,FX11_Program,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\FX11\Program.cs,BuildMeta,The following statement contains a magic number: Product prod = new Product              {                  ProductID = 123'                  ProductName = "abc devil"'                  SupplierID = 456'                  CategoryID = 13'                  QuantityPerUnit = "1"'                  UnitPrice = 12.99M'                  UnitsInStock = 96'                  UnitsOnOrder = 12'                  ReorderLevel = 30'                  Discontinued = false'                  LastEditDate = new DateTime(2009' 5' 7)'                  CreationDate = new DateTime(2009' 1' 3)              };
Magic Number,FX11,FX11_Program,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\FX11\Program.cs,BuildMeta,The following statement contains a magic number: Product prod = new Product              {                  ProductID = 123'                  ProductName = "abc devil"'                  SupplierID = 456'                  CategoryID = 13'                  QuantityPerUnit = "1"'                  UnitPrice = 12.99M'                  UnitsInStock = 96'                  UnitsOnOrder = 12'                  ReorderLevel = 30'                  Discontinued = false'                  LastEditDate = new DateTime(2009' 5' 7)'                  CreationDate = new DateTime(2009' 1' 3)              };
Magic Number,FX11,FX11_Program,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\FX11\Program.cs,BuildMeta,The following statement contains a magic number: Product prod = new Product              {                  ProductID = 123'                  ProductName = "abc devil"'                  SupplierID = 456'                  CategoryID = 13'                  QuantityPerUnit = "1"'                  UnitPrice = 12.99M'                  UnitsInStock = 96'                  UnitsOnOrder = 12'                  ReorderLevel = 30'                  Discontinued = false'                  LastEditDate = new DateTime(2009' 5' 7)'                  CreationDate = new DateTime(2009' 1' 3)              };
Magic Number,FX11,FX11_Program,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\FX11\Program.cs,BuildMeta,The following statement contains a magic number: using MemoryStream reuseDump = new MemoryStream(100 * 1024);
Magic Number,FX11,FX11_Program,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\FX11\Program.cs,BuildMeta,The following statement contains a magic number: using MemoryStream reuseDump = new MemoryStream(100 * 1024);
Magic Number,FX11,FX11_Program,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\FX11\Program.cs,BuildMeta,The following statement contains a magic number: model.Add(typeof(Customer)' false)                 .Add(1' "Id")                 .Add(3' "Name")  #if !FX11                 .Add(5' "HowMuch")                 .Add(6' "HasValue")  #endif                 ;
Magic Number,FX11,FX11_Program,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\FX11\Program.cs,BuildMeta,The following statement contains a magic number: model.Add(typeof(Customer)' false)                 .Add(1' "Id")                 .Add(3' "Name")  #if !FX11                 .Add(5' "HowMuch")                 .Add(6' "HasValue")  #endif                 ;
Magic Number,FX11,FX11_Program,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\FX11\Program.cs,BuildMeta,The following statement contains a magic number: model.Add(typeof(Customer)' false)                 .Add(1' "Id")                 .Add(3' "Name")  #if !FX11                 .Add(5' "HowMuch")                 .Add(6' "HasValue")  #endif                 ;
Magic Number,FX11,FX11_Program,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\FX11\Program.cs,BuildMeta,The following statement contains a magic number: model.Add(typeof(CustomerStruct)' false)                  .Add(1' "Id")                  .Add(3' "Name")  #if !FX11                  .Add(5' "HowMuch")                  .Add(6' "HasValue")  #endif                  ;
Magic Number,FX11,FX11_Program,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\FX11\Program.cs,BuildMeta,The following statement contains a magic number: model.Add(typeof(CustomerStruct)' false)                  .Add(1' "Id")                  .Add(3' "Name")  #if !FX11                  .Add(5' "HowMuch")                  .Add(6' "HasValue")  #endif                  ;
Magic Number,FX11,FX11_Program,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\FX11\Program.cs,BuildMeta,The following statement contains a magic number: model.Add(typeof(CustomerStruct)' false)                  .Add(1' "Id")                  .Add(3' "Name")  #if !FX11                  .Add(5' "HowMuch")                  .Add(6' "HasValue")  #endif                  ;
Magic Number,FX11,FX11_Program,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\FX11\Program.cs,Read,The following statement contains a magic number: switch (num)                  {                      case 1:                          if (product1 == null)                          {                              product1 = new Product();                          }                          product1.ProductID = state.ReadInt32();                          continue;                      case 2:                          if (product1 == null)                          {                              product1 = new Product();                          }                          product1.ProductName = state.ReadString();                          continue;                      case 3:                          if (product1 == null)                          {                              product1 = new Product();                          }                          product1.SupplierID = new int?(state.ReadInt32());                          continue;                  }
Magic Number,FX11,FX11_Program,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\FX11\Program.cs,Read,The following statement contains a magic number: switch (num)                  {                      case 1:                          if (product1 == null)                          {                              product1 = new Product();                          }                          product1.ProductID = state.ReadInt32();                          continue;                      case 2:                          if (product1 == null)                          {                              product1 = new Product();                          }                          product1.ProductName = state.ReadString();                          continue;                      case 3:                          if (product1 == null)                          {                              product1 = new Product();                          }                          product1.SupplierID = new int?(state.ReadInt32());                          continue;                  }
Magic Number,FX11,FX11_Program,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\FX11\Program.cs,Execute,The following statement contains a magic number: CustomerStruct cust2 = new CustomerStruct              {                  Id = cust1.Id = 123'                  Name = cust1.Name = "Fred"              };
Magic Number,FX11,FX11_Program,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\FX11\Program.cs,Execute,The following statement contains a magic number: cust1.HowMuch = cust2.HowMuch = 0.123;
Magic Number,Tests.Dnx,SmokeTest,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\FX11\SmokeTest.cs,ExpectPass,The following statement contains a magic number: var foo = new Foo { Id = 1234567 };
Magic Number,Tests.Dnx,SmokeTest,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\FX11\SmokeTest.cs,ExpectPass,The following statement contains a magic number: Assert.Equal(1234567' clone.Id);
Magic Number,Tests.Dnx,SmokeTest,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\FX11\SmokeTest.cs,CanCompile,The following statement contains a magic number: var foo = new Foo { Id = 1234567 };
Magic Number,Tests.Dnx,SmokeTest,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\FX11\SmokeTest.cs,CanCompile,The following statement contains a magic number: Assert.Equal(1234567' clone.Id);
Magic Number,ProtoBuf.Issues,CustomDictionaryWithIgnoreListHandling,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Issues\CustomDictionaryWithIgnoreListHandling.cs,DeserializeKnownDataSuccessfully,The following statement contains a magic number: Assert.Equal("Tales"' item.Map[250722631]);
Magic Number,ProtoBuf.Issues,SO48009686,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Issues\SO48009686.cs,CanRoundtrip_Default,The following statement contains a magic number: Assert.Equal(2' clone.MyDictionary.Count);
Magic Number,ProtoBuf.Issues,SO48009686,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Issues\SO48009686.cs,CanRoundtrip_Default,The following statement contains a magic number: Assert.Equal(34.5M' clone.MyDictionary[12]);
Magic Number,ProtoBuf.Issues,SO48009686,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Issues\SO48009686.cs,CanRoundtrip_Default,The following statement contains a magic number: Assert.Equal(34.5M' clone.MyDictionary[12]);
Magic Number,ProtoBuf.Issues,SO48009686,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Issues\SO48009686.cs,CanRoundtrip_Default,The following statement contains a magic number: Assert.Null(clone.MyDictionary[67]);
Magic Number,ProtoBuf.Issues,SO48009686,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Issues\SO48009686.cs,CanRoundtrip_NoMap,The following statement contains a magic number: Assert.Equal(2' clone.MyDictionary.Count);
Magic Number,ProtoBuf.Issues,SO48009686,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Issues\SO48009686.cs,CanRoundtrip_NoMap,The following statement contains a magic number: Assert.Equal(34.5M' clone.MyDictionary[12]);
Magic Number,ProtoBuf.Issues,SO48009686,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Issues\SO48009686.cs,CanRoundtrip_NoMap,The following statement contains a magic number: Assert.Equal(34.5M' clone.MyDictionary[12]);
Magic Number,ProtoBuf.Issues,SO48009686,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Issues\SO48009686.cs,CanRoundtrip_NoMap,The following statement contains a magic number: Assert.Null(clone.MyDictionary[67]);
Magic Number,ProtoBuf.Issues,TypeSerializedHow,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Issues\TypeSerializedHow.cs,TypeRoundtrips,The following statement contains a magic number: var obj = new ModelWithTypeMember              {                  Id = 123'                  SomeType = typeof(Uri) // arbitrary              };
Magic Number,ProtoBuf.Issues,TypeSerializedHow,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Issues\TypeSerializedHow.cs,TypeRoundtrips,The following statement contains a magic number: Assert.Equal(123' clone.Id);
Magic Number,ProtoBuf.Issues,TypeSerializedHow,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Issues\TypeSerializedHow.cs,ProveTypeEquivalence,The following statement contains a magic number: var obj = new ModelWithTypeMember              {                  Id = 123'                  SomeType = typeof(Uri) // arbitrary              };
Magic Number,ProtoBuf.Issues,TypeSerializedHow,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Issues\TypeSerializedHow.cs,ProveTypeEquivalence,The following statement contains a magic number: Assert.Equal(123' clone.Id);
Magic Number,ProtoBuf.Issues,ValueTuples,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Issues\ValueTuples.cs,CanRoundTripValueTuples,The following statement contains a magic number: Assert.Equal(123' a);
Magic Number,ProtoBuf.Test.Issues,Issue571,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Issues\Issue571.cs,Parse,The following statement contains a magic number: using var reader = ProtoReader.State.Create(                  buffer.Slice(0' 10)' RuntimeTypeModel.Default);
Magic Number,ProtoBuf.Test.Issues,Issue571,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Issues\Issue571.cs,Parse,The following statement contains a magic number: buffer = buffer.Slice(10);
Magic Number,ProtoBuf.Test.Issues,Issue571,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Issues\Issue571.cs,Execute,The following statement contains a magic number: i < 2
Magic Number,ProtoBuf.Test.Issues,SO_InterestingFailures,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Issues\SO_InterestingFailures.cs,CanSerializeNestedArrayAfterArray,The following statement contains a magic number: model.Serialize(ms' new long[] { 1' 2' 3 });
Magic Number,ProtoBuf.Test.Issues,SO_InterestingFailures,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Issues\SO_InterestingFailures.cs,CanSerializeNestedArrayAfterArray,The following statement contains a magic number: model.Serialize(ms' new long[] { 1' 2' 3 });
Magic Number,ProtoBuf.Test.Issues,SO_InterestingFailures,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Issues\SO_InterestingFailures.cs,CanSerializeNestedArrayAfterArray,The following statement contains a magic number: model.Serialize(ms' new DictionaryNestedArray                  {                      MyData = new Dictionary<long' long[]>                      {                          {42' new long[] {1'2'3 } }'                      }                  });
Magic Number,ProtoBuf.Test.Issues,SO_InterestingFailures,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Issues\SO_InterestingFailures.cs,CanSerializeNestedArrayAfterArray,The following statement contains a magic number: model.Serialize(ms' new DictionaryNestedArray                  {                      MyData = new Dictionary<long' long[]>                      {                          {42' new long[] {1'2'3 } }'                      }                  });
Magic Number,ProtoBuf.Test.Issues,SO_InterestingFailures,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Issues\SO_InterestingFailures.cs,CanSerializeNestedArrayAfterArray,The following statement contains a magic number: model.Serialize(ms' new DictionaryNestedArray                  {                      MyData = new Dictionary<long' long[]>                      {                          {42' new long[] {1'2'3 } }'                      }                  });
Magic Number,ProtoBuf.Test.Issues,SO_InterestingFailures,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Issues\SO_InterestingFailures.cs,DoNotEmitPackedRootsByDefault,The following statement contains a magic number: model.Serialize(ms' new List<int> { 1' 2' 3 });
Magic Number,ProtoBuf.Test.Issues,SO_InterestingFailures,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Issues\SO_InterestingFailures.cs,DoNotEmitPackedRootsByDefault,The following statement contains a magic number: model.Serialize(ms' new List<int> { 1' 2' 3 });
Magic Number,ProtoBuf.Test.Issues,SO_InterestingFailures,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Issues\SO_InterestingFailures.cs,DoNotEmitPackedRootsByDefault,The following statement contains a magic number: Assert.Equal(3' clone.Count);
Magic Number,ProtoBuf.Test.Issues,SO_InterestingFailures,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Issues\SO_InterestingFailures.cs,DoNotEmitPackedRootsByDefault,The following statement contains a magic number: Assert.Equal(2' clone[1]);
Magic Number,ProtoBuf.Test.Issues,SO_InterestingFailures,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Issues\SO_InterestingFailures.cs,DoNotEmitPackedRootsByDefault,The following statement contains a magic number: Assert.Equal(3' clone[2]);
Magic Number,ProtoBuf.Test.Issues,SO_InterestingFailures,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Issues\SO_InterestingFailures.cs,DoNotEmitPackedRootsByDefault,The following statement contains a magic number: Assert.Equal(3' clone[2]);
Magic Number,ProtoBuf.Test.Issues,SO_InterestingFailures,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Issues\SO_InterestingFailures.cs,LengthLimitedMeasure_WorksByDefault,The following statement contains a magic number: var data = Tuple.Create(                  new Dictionary<string' double>                  {                      {"abc"' 123 }'                      {"def"' 456 }'                      {"ghi"' 789 }'                  }'                  new Dictionary<string' double>                  {                      {"jkl"' 1011 }'                      {"mno"' 1213 }'                  });
Magic Number,ProtoBuf.Test.Issues,SO_InterestingFailures,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Issues\SO_InterestingFailures.cs,LengthLimitedMeasure_WorksByDefault,The following statement contains a magic number: var data = Tuple.Create(                  new Dictionary<string' double>                  {                      {"abc"' 123 }'                      {"def"' 456 }'                      {"ghi"' 789 }'                  }'                  new Dictionary<string' double>                  {                      {"jkl"' 1011 }'                      {"mno"' 1213 }'                  });
Magic Number,ProtoBuf.Test.Issues,SO_InterestingFailures,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Issues\SO_InterestingFailures.cs,LengthLimitedMeasure_WorksByDefault,The following statement contains a magic number: var data = Tuple.Create(                  new Dictionary<string' double>                  {                      {"abc"' 123 }'                      {"def"' 456 }'                      {"ghi"' 789 }'                  }'                  new Dictionary<string' double>                  {                      {"jkl"' 1011 }'                      {"mno"' 1213 }'                  });
Magic Number,ProtoBuf.Test.Issues,SO_InterestingFailures,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Issues\SO_InterestingFailures.cs,LengthLimitedMeasure_WorksByDefault,The following statement contains a magic number: var data = Tuple.Create(                  new Dictionary<string' double>                  {                      {"abc"' 123 }'                      {"def"' 456 }'                      {"ghi"' 789 }'                  }'                  new Dictionary<string' double>                  {                      {"jkl"' 1011 }'                      {"mno"' 1213 }'                  });
Magic Number,ProtoBuf.Test.Issues,SO_InterestingFailures,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Issues\SO_InterestingFailures.cs,LengthLimitedMeasure_WorksByDefault,The following statement contains a magic number: var data = Tuple.Create(                  new Dictionary<string' double>                  {                      {"abc"' 123 }'                      {"def"' 456 }'                      {"ghi"' 789 }'                  }'                  new Dictionary<string' double>                  {                      {"jkl"' 1011 }'                      {"mno"' 1213 }'                  });
Magic Number,ProtoBuf.Test.Issues,SO_InterestingFailures,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Issues\SO_InterestingFailures.cs,LengthLimitedMeasure_WorksByDefault,The following statement contains a magic number: Assert.Equal(80' measure.Length);
Magic Number,ProtoBuf.Test.Issues,SO_InterestingFailures,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Issues\SO_InterestingFailures.cs,LengthLimitedMeasure_FailsWhenOversize,The following statement contains a magic number: var data = Tuple.Create(                  new Dictionary<string' double>                  {                      {"abc"' 123 }'                      {"def"' 456 }'                      {"ghi"' 789 }'                  }'                  new Dictionary<string' double>                  {                      {"jkl"' 1011 }'                      {"mno"' 1213 }'                  });
Magic Number,ProtoBuf.Test.Issues,SO_InterestingFailures,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Issues\SO_InterestingFailures.cs,LengthLimitedMeasure_FailsWhenOversize,The following statement contains a magic number: var data = Tuple.Create(                  new Dictionary<string' double>                  {                      {"abc"' 123 }'                      {"def"' 456 }'                      {"ghi"' 789 }'                  }'                  new Dictionary<string' double>                  {                      {"jkl"' 1011 }'                      {"mno"' 1213 }'                  });
Magic Number,ProtoBuf.Test.Issues,SO_InterestingFailures,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Issues\SO_InterestingFailures.cs,LengthLimitedMeasure_FailsWhenOversize,The following statement contains a magic number: var data = Tuple.Create(                  new Dictionary<string' double>                  {                      {"abc"' 123 }'                      {"def"' 456 }'                      {"ghi"' 789 }'                  }'                  new Dictionary<string' double>                  {                      {"jkl"' 1011 }'                      {"mno"' 1213 }'                  });
Magic Number,ProtoBuf.Test.Issues,SO_InterestingFailures,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Issues\SO_InterestingFailures.cs,LengthLimitedMeasure_FailsWhenOversize,The following statement contains a magic number: var data = Tuple.Create(                  new Dictionary<string' double>                  {                      {"abc"' 123 }'                      {"def"' 456 }'                      {"ghi"' 789 }'                  }'                  new Dictionary<string' double>                  {                      {"jkl"' 1011 }'                      {"mno"' 1213 }'                  });
Magic Number,ProtoBuf.Test.Issues,SO_InterestingFailures,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Issues\SO_InterestingFailures.cs,LengthLimitedMeasure_FailsWhenOversize,The following statement contains a magic number: var data = Tuple.Create(                  new Dictionary<string' double>                  {                      {"abc"' 123 }'                      {"def"' 456 }'                      {"ghi"' 789 }'                  }'                  new Dictionary<string' double>                  {                      {"jkl"' 1011 }'                      {"mno"' 1213 }'                  });
Magic Number,ProtoBuf.Test.Issues,SO_InterestingFailures,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Issues\SO_InterestingFailures.cs,LengthLimitedMeasure_FailsWhenOversize,The following statement contains a magic number: var ex = Assert.Throws<ProtoException>(() =>              {                  using var measure = Serializer.Measure(data' abortAfter: 20);              });
Magic Number,ProtoBuf.Test.Issues,SO_InterestingFailures,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Issues\SO_InterestingFailures.cs,Test,The following statement contains a magic number: var data = Tuple.Create(                  new Dictionary<string' double>                  {                      {"abc"' 123 }'                      {"def"' 456 }'                      {"ghi"' 789 }'                  }'                  new Dictionary<string' double>                  {                      {"jkl"' 1011 }'                      {"mno"' 1213 }'                  });
Magic Number,ProtoBuf.Test.Issues,SO_InterestingFailures,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Issues\SO_InterestingFailures.cs,Test,The following statement contains a magic number: var data = Tuple.Create(                  new Dictionary<string' double>                  {                      {"abc"' 123 }'                      {"def"' 456 }'                      {"ghi"' 789 }'                  }'                  new Dictionary<string' double>                  {                      {"jkl"' 1011 }'                      {"mno"' 1213 }'                  });
Magic Number,ProtoBuf.Test.Issues,SO_InterestingFailures,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Issues\SO_InterestingFailures.cs,Test,The following statement contains a magic number: var data = Tuple.Create(                  new Dictionary<string' double>                  {                      {"abc"' 123 }'                      {"def"' 456 }'                      {"ghi"' 789 }'                  }'                  new Dictionary<string' double>                  {                      {"jkl"' 1011 }'                      {"mno"' 1213 }'                  });
Magic Number,ProtoBuf.Test.Issues,SO_InterestingFailures,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Issues\SO_InterestingFailures.cs,Test,The following statement contains a magic number: var data = Tuple.Create(                  new Dictionary<string' double>                  {                      {"abc"' 123 }'                      {"def"' 456 }'                      {"ghi"' 789 }'                  }'                  new Dictionary<string' double>                  {                      {"jkl"' 1011 }'                      {"mno"' 1213 }'                  });
Magic Number,ProtoBuf.Test.Issues,SO_InterestingFailures,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Issues\SO_InterestingFailures.cs,Test,The following statement contains a magic number: var data = Tuple.Create(                  new Dictionary<string' double>                  {                      {"abc"' 123 }'                      {"def"' 456 }'                      {"ghi"' 789 }'                  }'                  new Dictionary<string' double>                  {                      {"jkl"' 1011 }'                      {"mno"' 1213 }'                  });
Magic Number,ProtoBuf.Test.Issues,SO_InterestingFailures,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Issues\SO_InterestingFailures.cs,Test,The following statement contains a magic number: Assert.Equal(3' x.Count);
Magic Number,ProtoBuf.Test.Issues,SO_InterestingFailures,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Issues\SO_InterestingFailures.cs,Test,The following statement contains a magic number: Assert.Equal(123' val);
Magic Number,ProtoBuf.Test.Issues,SO_InterestingFailures,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Issues\SO_InterestingFailures.cs,Test,The following statement contains a magic number: Assert.Equal(456' val);
Magic Number,ProtoBuf.Test.Issues,SO_InterestingFailures,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Issues\SO_InterestingFailures.cs,Test,The following statement contains a magic number: Assert.Equal(789' val);
Magic Number,ProtoBuf.Test.Issues,SO_InterestingFailures,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Issues\SO_InterestingFailures.cs,Test,The following statement contains a magic number: Assert.Equal(2' y.Count);
Magic Number,ProtoBuf.Test.Issues,SO_InterestingFailures,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Issues\SO_InterestingFailures.cs,Test,The following statement contains a magic number: Assert.Equal(1011' val);
Magic Number,ProtoBuf.Test.Issues,SO_InterestingFailures,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Issues\SO_InterestingFailures.cs,Test,The following statement contains a magic number: Assert.Equal(1213' val);
Magic Number,ProtoBuf.unittest.Meta,AbstractListsWithInheritance,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\AbstractListsWithInheritance.cs,BuildModel,The following statement contains a magic number: model.Add(typeof(ConcreteA)' false).Add("A").AddSubType(2' typeof(ConcreteC));
Magic Number,ProtoBuf.unittest.Meta,AbstractListsWithInheritance,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\AbstractListsWithInheritance.cs,BuildModel,The following statement contains a magic number: model.Add(typeof(SomeBaseType)' false).Add("BaseProp")                  .AddSubType(2' typeof(ConcreteA)).AddSubType(3' typeof(ConcreteB));
Magic Number,ProtoBuf.unittest.Meta,AbstractListsWithInheritance,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\AbstractListsWithInheritance.cs,BuildModel,The following statement contains a magic number: model.Add(typeof(SomeBaseType)' false).Add("BaseProp")                  .AddSubType(2' typeof(ConcreteA)).AddSubType(3' typeof(ConcreteB));
Magic Number,ProtoBuf.unittest.Meta,AbstractListsWithInheritance,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\AbstractListsWithInheritance.cs,BuildModel,The following statement contains a magic number: model.Add(typeof(Wrapper)' false).Add("BaseList"' "AList"' "CList")                  .Add(4' "AbstractAList"' null' specifyDefaultType ? typeof(AList) : null);
Magic Number,ProtoBuf.unittest.Meta,AbstractListsWithInheritance,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\AbstractListsWithInheritance.cs,TestIntermediateListType,The following statement contains a magic number: Wrapper wrap = new Wrapper              {                  AList = new List<ConcreteA> {                  new ConcreteA { A = 12' BaseProp = 34}'                  new ConcreteC { A = 56' BaseProp = 78' C = 90 }              }              }' clone;
Magic Number,ProtoBuf.unittest.Meta,AbstractListsWithInheritance,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\AbstractListsWithInheritance.cs,TestIntermediateListType,The following statement contains a magic number: Wrapper wrap = new Wrapper              {                  AList = new List<ConcreteA> {                  new ConcreteA { A = 12' BaseProp = 34}'                  new ConcreteC { A = 56' BaseProp = 78' C = 90 }              }              }' clone;
Magic Number,ProtoBuf.unittest.Meta,AbstractListsWithInheritance,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\AbstractListsWithInheritance.cs,TestIntermediateListType,The following statement contains a magic number: Wrapper wrap = new Wrapper              {                  AList = new List<ConcreteA> {                  new ConcreteA { A = 12' BaseProp = 34}'                  new ConcreteC { A = 56' BaseProp = 78' C = 90 }              }              }' clone;
Magic Number,ProtoBuf.unittest.Meta,AbstractListsWithInheritance,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\AbstractListsWithInheritance.cs,TestIntermediateListType,The following statement contains a magic number: Wrapper wrap = new Wrapper              {                  AList = new List<ConcreteA> {                  new ConcreteA { A = 12' BaseProp = 34}'                  new ConcreteC { A = 56' BaseProp = 78' C = 90 }              }              }' clone;
Magic Number,ProtoBuf.unittest.Meta,AbstractListsWithInheritance,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\AbstractListsWithInheritance.cs,TestIntermediateListType,The following statement contains a magic number: Wrapper wrap = new Wrapper              {                  AList = new List<ConcreteA> {                  new ConcreteA { A = 12' BaseProp = 34}'                  new ConcreteC { A = 56' BaseProp = 78' C = 90 }              }              }' clone;
Magic Number,ProtoBuf.unittest.Meta,AbstractListsWithInheritance,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\AbstractListsWithInheritance.cs,TestIntermediateAbstractListType,The following statement contains a magic number: Wrapper wrap = new Wrapper              {                  AbstractAList = {                  new ConcreteA { A = 12' BaseProp = 34}'                  new ConcreteC { A = 56' BaseProp = 78' C = 90 }              }              }' clone;
Magic Number,ProtoBuf.unittest.Meta,AbstractListsWithInheritance,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\AbstractListsWithInheritance.cs,TestIntermediateAbstractListType,The following statement contains a magic number: Wrapper wrap = new Wrapper              {                  AbstractAList = {                  new ConcreteA { A = 12' BaseProp = 34}'                  new ConcreteC { A = 56' BaseProp = 78' C = 90 }              }              }' clone;
Magic Number,ProtoBuf.unittest.Meta,AbstractListsWithInheritance,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\AbstractListsWithInheritance.cs,TestIntermediateAbstractListType,The following statement contains a magic number: Wrapper wrap = new Wrapper              {                  AbstractAList = {                  new ConcreteA { A = 12' BaseProp = 34}'                  new ConcreteC { A = 56' BaseProp = 78' C = 90 }              }              }' clone;
Magic Number,ProtoBuf.unittest.Meta,AbstractListsWithInheritance,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\AbstractListsWithInheritance.cs,TestIntermediateAbstractListType,The following statement contains a magic number: Wrapper wrap = new Wrapper              {                  AbstractAList = {                  new ConcreteA { A = 12' BaseProp = 34}'                  new ConcreteC { A = 56' BaseProp = 78' C = 90 }              }              }' clone;
Magic Number,ProtoBuf.unittest.Meta,AbstractListsWithInheritance,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\AbstractListsWithInheritance.cs,TestIntermediateAbstractListType,The following statement contains a magic number: Wrapper wrap = new Wrapper              {                  AbstractAList = {                  new ConcreteA { A = 12' BaseProp = 34}'                  new ConcreteC { A = 56' BaseProp = 78' C = 90 }              }              }' clone;
Magic Number,ProtoBuf.unittest.Meta,AbstractListsWithInheritance,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\AbstractListsWithInheritance.cs,VerifyWrapperVerifyIntermediateResult,The following statement contains a magic number: Assert.Equal(2' wrapper.AList.Count);
Magic Number,ProtoBuf.unittest.Meta,AbstractListsWithInheritance,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\AbstractListsWithInheritance.cs,VerifyWrapperVerifyIntermediateResult,The following statement contains a magic number: Assert.Equal(12' wrapper.AList[0].A);
Magic Number,ProtoBuf.unittest.Meta,AbstractListsWithInheritance,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\AbstractListsWithInheritance.cs,VerifyWrapperVerifyIntermediateResult,The following statement contains a magic number: Assert.Equal(34' wrapper.AList[0].BaseProp);
Magic Number,ProtoBuf.unittest.Meta,AbstractListsWithInheritance,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\AbstractListsWithInheritance.cs,VerifyWrapperVerifyIntermediateResult,The following statement contains a magic number: Assert.Equal(56' wrapper.AList[1].A);
Magic Number,ProtoBuf.unittest.Meta,AbstractListsWithInheritance,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\AbstractListsWithInheritance.cs,VerifyWrapperVerifyIntermediateResult,The following statement contains a magic number: Assert.Equal(78' wrapper.AList[1].BaseProp);
Magic Number,ProtoBuf.unittest.Meta,AbstractListsWithInheritance,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\AbstractListsWithInheritance.cs,VerifyWrapperVerifyIntermediateResult,The following statement contains a magic number: Assert.Equal(90' ((ConcreteC)wrapper.AList[1]).C);
Magic Number,ProtoBuf.unittest.Meta,AbstractListsWithInheritance,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\AbstractListsWithInheritance.cs,VerifyWrapperVerifyAbstractIntermediateResult,The following statement contains a magic number: Assert.Equal(2' wrapper.AbstractAList.Count);
Magic Number,ProtoBuf.unittest.Meta,AbstractListsWithInheritance,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\AbstractListsWithInheritance.cs,VerifyWrapperVerifyAbstractIntermediateResult,The following statement contains a magic number: Assert.Equal(12' wrapper.AbstractAList[0].A);
Magic Number,ProtoBuf.unittest.Meta,AbstractListsWithInheritance,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\AbstractListsWithInheritance.cs,VerifyWrapperVerifyAbstractIntermediateResult,The following statement contains a magic number: Assert.Equal(34' wrapper.AbstractAList[0].BaseProp);
Magic Number,ProtoBuf.unittest.Meta,AbstractListsWithInheritance,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\AbstractListsWithInheritance.cs,VerifyWrapperVerifyAbstractIntermediateResult,The following statement contains a magic number: Assert.Equal(56' wrapper.AbstractAList[1].A);
Magic Number,ProtoBuf.unittest.Meta,AbstractListsWithInheritance,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\AbstractListsWithInheritance.cs,VerifyWrapperVerifyAbstractIntermediateResult,The following statement contains a magic number: Assert.Equal(78' wrapper.AbstractAList[1].BaseProp);
Magic Number,ProtoBuf.unittest.Meta,AbstractListsWithInheritance,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\AbstractListsWithInheritance.cs,VerifyWrapperVerifyAbstractIntermediateResult,The following statement contains a magic number: Assert.Equal(90' ((ConcreteC)wrapper.AbstractAList[1]).C);
Magic Number,ProtoBuf.unittest.Meta,Basic,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Basic.cs,WriteBasicRuntime,The following statement contains a magic number: Customer cust = new Customer { Id = 123' Name = "abc"};
Magic Number,ProtoBuf.unittest.Meta,Basic,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Basic.cs,WriteRoundTripRuntime,The following statement contains a magic number: Customer cust = new Customer { Id = 123' Name = "abc" };
Magic Number,ProtoBuf.unittest.Meta,Customer,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Basic.cs,BuildMeta,The following statement contains a magic number: model.Add(typeof(Customer)' false)                      .Add(1' "Id")                      .Add(2' "Name");
Magic Number,ProtoBuf.unittest.Meta,Callbacks,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Callbacks.cs,CreateC,The following statement contains a magic number: C c = new C { AValue = 123' BValue = 456' CValue = 789 };
Magic Number,ProtoBuf.unittest.Meta,Callbacks,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Callbacks.cs,CreateC,The following statement contains a magic number: C c = new C { AValue = 123' BValue = 456' CValue = 789 };
Magic Number,ProtoBuf.unittest.Meta,Callbacks,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Callbacks.cs,CreateC,The following statement contains a magic number: C c = new C { AValue = 123' BValue = 456' CValue = 789 };
Magic Number,ProtoBuf.unittest.Meta,Callbacks,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Callbacks.cs,BuildModel,The following statement contains a magic number: model.Add(typeof(A)' false).Add(2' "AValue").SetCallbacks("OnSerializing"' "OnSerialized"' "OnDeserializing"' "OnDeserialized").UseConstructor = useCtor;
Magic Number,ProtoBuf.unittest.Meta,Callbacks,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Callbacks.cs,BuildModel,The following statement contains a magic number: model.Add(typeof(B)' false).Add(2' "BValue")                  //.SetCallbacks("OnSerializing"' "OnSerialized"' "OnDeserializing"' "OnDeserialized")                  .UseConstructor = useCtor;
Magic Number,ProtoBuf.unittest.Meta,Callbacks,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Callbacks.cs,BuildModel,The following statement contains a magic number: model.Add(typeof(C)' false).Add(2' "CValue")                  //.SetCallbacks("OnSerializing"' "OnSerialized"' "OnDeserializing"' "OnDeserialized")                  .UseConstructor = useCtor;
Magic Number,ProtoBuf.unittest.Meta,Enums,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Enums.cs,AddInvalidEnum,The following statement contains a magic number: Assert.Equal(42' single.Value);
Magic Number,ProtoBuf.unittest.Meta,Enums,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Enums.cs,CanSerializeUnknownEnum,The following statement contains a magic number: Assert.True(DynamicStub.TrySerializeAny(2' WireType.Varint.AsFeatures()' typeof(EnumWithThings?)' model' ref writeState' EnumWithThings.HazThis));
Magic Number,ProtoBuf.unittest.Meta,Enums,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Enums.cs,CanSerializeUnknownEnum,The following statement contains a magic number: Assert.Equal(2' readState.ReadFieldHeader());
Magic Number,ProtoBuf.unittest.Meta,Guids,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Guids.cs,BuildModel,The following statement contains a magic number: model.Add(typeof(Data)' false)                  .Add(1' "Value")                  .Add(2' "SomeTailData");
Magic Number,ProtoBuf.unittest.Meta,Guids,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Guids.cs,TestRoundTripObviousBytes,The following statement contains a magic number: var expected = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 };
Magic Number,ProtoBuf.unittest.Meta,Guids,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Guids.cs,TestRoundTripObviousBytes,The following statement contains a magic number: var expected = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 };
Magic Number,ProtoBuf.unittest.Meta,Guids,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Guids.cs,TestRoundTripObviousBytes,The following statement contains a magic number: var expected = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 };
Magic Number,ProtoBuf.unittest.Meta,Guids,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Guids.cs,TestRoundTripObviousBytes,The following statement contains a magic number: var expected = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 };
Magic Number,ProtoBuf.unittest.Meta,Guids,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Guids.cs,TestRoundTripObviousBytes,The following statement contains a magic number: var expected = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 };
Magic Number,ProtoBuf.unittest.Meta,Guids,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Guids.cs,TestRoundTripObviousBytes,The following statement contains a magic number: var expected = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 };
Magic Number,ProtoBuf.unittest.Meta,Guids,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Guids.cs,TestRoundTripObviousBytes,The following statement contains a magic number: var expected = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 };
Magic Number,ProtoBuf.unittest.Meta,Guids,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Guids.cs,TestRoundTripObviousBytes,The following statement contains a magic number: var expected = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 };
Magic Number,ProtoBuf.unittest.Meta,Guids,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Guids.cs,TestRoundTripObviousBytes,The following statement contains a magic number: var expected = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 };
Magic Number,ProtoBuf.unittest.Meta,Guids,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Guids.cs,TestRoundTripObviousBytes,The following statement contains a magic number: var expected = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 };
Magic Number,ProtoBuf.unittest.Meta,Guids,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Guids.cs,TestRoundTripObviousBytes,The following statement contains a magic number: var expected = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 };
Magic Number,ProtoBuf.unittest.Meta,Guids,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Guids.cs,TestRoundTripObviousBytes,The following statement contains a magic number: var expected = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 };
Magic Number,ProtoBuf.unittest.Meta,Guids,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Guids.cs,TestRoundTripObviousBytes,The following statement contains a magic number: var expected = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 };
Magic Number,ProtoBuf.unittest.Meta,Guids,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Guids.cs,TestRoundTripObviousBytes,The following statement contains a magic number: var expected = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12' 13' 14' 15 };
Magic Number,ProtoBuf.unittest.Meta,Guids,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Guids.cs,TestRoundTripRandomRuntime,The following statement contains a magic number: TestGuids(model' 1000);
Magic Number,ProtoBuf.unittest.Meta,Guids,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Guids.cs,TestRoundTripRandomCompileInPlace,The following statement contains a magic number: TestGuids(model' 1000);
Magic Number,ProtoBuf.unittest.Meta,Guids,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Guids.cs,TestRoundTripRandomCompile,The following statement contains a magic number: TestGuids(model' 1000);
Magic Number,ProtoBuf.unittest.Meta,Guids,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Guids.cs,TestGuids,The following statement contains a magic number: byte[] buffer = new byte[16];
Magic Number,ProtoBuf.unittest.Meta,InheritanceTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Inheritance.cs,CreateModel,The following statement contains a magic number: model[typeof(SomeBase)]                  .Add(1' "A")                  .AddSubType(2' typeof(SomeDerived))                  .AddSubType(3' typeof(AnotherDerived));
Magic Number,ProtoBuf.unittest.Meta,InheritanceTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Inheritance.cs,CreateModel,The following statement contains a magic number: model[typeof(SomeBase)]                  .Add(1' "A")                  .AddSubType(2' typeof(SomeDerived))                  .AddSubType(3' typeof(AnotherDerived));
Magic Number,ProtoBuf.unittest.Meta,Interfaces,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Interfaces.cs,ExposeInterfaceWithDefaultImplementation,The following statement contains a magic number: orig.SomeProperty.Foo = 123;
Magic Number,ProtoBuf.unittest.Meta,Interfaces,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Interfaces.cs,ExposeInterfaceWithDefaultImplementation,The following statement contains a magic number: Assert.Equal(123' clone.SomeProperty.Foo);
Magic Number,ProtoBuf.unittest.Meta,PocoListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,EmitModelWithEverything,The following statement contains a magic number: meta.Add(2' "ListInt32");
Magic Number,ProtoBuf.unittest.Meta,PocoListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,EmitModelWithEverything,The following statement contains a magic number: meta.Add(3' "IListStringTyped");
Magic Number,ProtoBuf.unittest.Meta,PocoListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,EmitModelWithEverything,The following statement contains a magic number: meta.Add(4' "IListInt32Typed");
Magic Number,ProtoBuf.unittest.Meta,PocoListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,AddOnTypedIListShouldResolveCorrectly_String,The following statement contains a magic number: model.Add(typeof(TypeWithLists)' false).Add(2' "IListStringTyped");
Magic Number,ProtoBuf.unittest.Meta,PocoListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,AddOnTypedIListShouldResolveCorrectly_String,The following statement contains a magic number: Assert.Equal(typeof(TypeWithLists)' model[typeof(TypeWithLists)][2].ParentType);
Magic Number,ProtoBuf.unittest.Meta,PocoListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,AddOnTypedIListShouldResolveCorrectly_String,The following statement contains a magic number: Assert.Equal(typeof(string)' model[typeof(TypeWithLists)][2].ItemType);
Magic Number,ProtoBuf.unittest.Meta,PocoListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,AddOnTypedIListShouldResolveCorrectly_String,The following statement contains a magic number: Assert.Equal(typeof(IList<string>)' model[typeof(TypeWithLists)][2].MemberType);
Magic Number,ProtoBuf.unittest.Meta,PocoListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,AddOnTypedIListShouldResolveCorrectly_String,The following statement contains a magic number: Assert.Equal(typeof(IList<string>)' model[typeof(TypeWithLists)][2].DefaultType);
Magic Number,ProtoBuf.unittest.Meta,PocoListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,AddOnTypedIListShouldResolveCorrectly_Int32,The following statement contains a magic number: model.Add(typeof(TypeWithLists)' false).Add(2' "IListInt32Typed");
Magic Number,ProtoBuf.unittest.Meta,PocoListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,AddOnTypedIListShouldResolveCorrectly_Int32,The following statement contains a magic number: Assert.Equal(typeof(TypeWithLists)' model[typeof(TypeWithLists)][2].ParentType);
Magic Number,ProtoBuf.unittest.Meta,PocoListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,AddOnTypedIListShouldResolveCorrectly_Int32,The following statement contains a magic number: Assert.Equal(typeof(int)' model[typeof(TypeWithLists)][2].ItemType);
Magic Number,ProtoBuf.unittest.Meta,PocoListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,AddOnTypedIListShouldResolveCorrectly_Int32,The following statement contains a magic number: Assert.Equal(typeof(IList<int>)' model[typeof(TypeWithLists)][2].MemberType);
Magic Number,ProtoBuf.unittest.Meta,PocoListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,AddOnTypedIListShouldResolveCorrectly_Int32,The following statement contains a magic number: Assert.Equal(typeof(IList<int>)' model[typeof(TypeWithLists)][2].DefaultType);
Magic Number,ProtoBuf.unittest.Meta,PocoListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,RoundTripTypedIList_String,The following statement contains a magic number: model.Add(typeof(TypeWithLists)' false).Add(2' "IListStringTyped");
Magic Number,ProtoBuf.unittest.Meta,PocoListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,RoundTripTypedList_Int32,The following statement contains a magic number: TypeWithLists obj = new TypeWithLists              {                  ListInt32 = new List<int>                  {                      123'                      456                  }              };
Magic Number,ProtoBuf.unittest.Meta,PocoListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,RoundTripTypedList_Int32,The following statement contains a magic number: TypeWithLists obj = new TypeWithLists              {                  ListInt32 = new List<int>                  {                      123'                      456                  }              };
Magic Number,ProtoBuf.unittest.Meta,PocoListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,RoundTripTypedIList_Int32,The following statement contains a magic number: model.Add(typeof(TypeWithLists)' false).Add(2' "IListInt32Typed");
Magic Number,ProtoBuf.unittest.Meta,PocoListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,RoundTripTypedIList_Int32,The following statement contains a magic number: TypeWithLists obj = new TypeWithLists              {                  IListInt32Typed = new List<int>                  {                      123'                      456                  }              };
Magic Number,ProtoBuf.unittest.Meta,PocoListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,RoundTripTypedIList_Int32,The following statement contains a magic number: TypeWithLists obj = new TypeWithLists              {                  IListInt32Typed = new List<int>                  {                      123'                      456                  }              };
Magic Number,ProtoBuf.unittest.Meta,PocoListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,JaggedListShouldThrow,The following statement contains a magic number: Assert.Equal(42' 0);
Magic Number,ProtoBuf.unittest.Meta,PocoListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,ListOfArrayShouldThrow,The following statement contains a magic number: Assert.Equal(42' 0);
Magic Number,ProtoBuf.unittest.Meta,PocoListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,MultiDimArrayShouldThrow,The following statement contains a magic number: Assert.Equal(42' 0);
Magic Number,ProtoBuf.unittest.Meta,PocoListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,JaggedArrayShouldThrow,The following statement contains a magic number: Assert.Equal(42' 0);
Magic Number,ProtoBuf.unittest.Meta,PocoListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,ArrayOfListShouldThrow,The following statement contains a magic number: Assert.Throws<NotSupportedException>(() =>              {                  var model = RuntimeTypeModel.Create();                  model.Add(typeof(NastyType)' true).Add(1' nameof(NastyType.ArrayOfList));                  model.CompileInPlace();                  Assert.Equal(42' 0); // fail              });
Magic Number,ProtoBuf.unittest.Meta,PocoListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,PEVerifyArraysAndLists,The following statement contains a magic number: model.Add(typeof(NastyType)' true)                  .Add(1' nameof(NastyType.Blobs))                  .Add(2' nameof(NastyType.Blob))                  .Add(3' nameof(NastyType.BasicArray))                  .Add(4' nameof(NastyType.BasicList))                    .Add(5' nameof(NastyType.BlobsField))                  .Add(6' nameof(NastyType.BlobField))                  .Add(7' nameof(NastyType.BasicArrayField))                  .Add(8' nameof(NastyType.BasicListField))                  ;
Magic Number,ProtoBuf.unittest.Meta,PocoListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,PEVerifyArraysAndLists,The following statement contains a magic number: model.Add(typeof(NastyType)' true)                  .Add(1' nameof(NastyType.Blobs))                  .Add(2' nameof(NastyType.Blob))                  .Add(3' nameof(NastyType.BasicArray))                  .Add(4' nameof(NastyType.BasicList))                    .Add(5' nameof(NastyType.BlobsField))                  .Add(6' nameof(NastyType.BlobField))                  .Add(7' nameof(NastyType.BasicArrayField))                  .Add(8' nameof(NastyType.BasicListField))                  ;
Magic Number,ProtoBuf.unittest.Meta,PocoListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,PEVerifyArraysAndLists,The following statement contains a magic number: model.Add(typeof(NastyType)' true)                  .Add(1' nameof(NastyType.Blobs))                  .Add(2' nameof(NastyType.Blob))                  .Add(3' nameof(NastyType.BasicArray))                  .Add(4' nameof(NastyType.BasicList))                    .Add(5' nameof(NastyType.BlobsField))                  .Add(6' nameof(NastyType.BlobField))                  .Add(7' nameof(NastyType.BasicArrayField))                  .Add(8' nameof(NastyType.BasicListField))                  ;
Magic Number,ProtoBuf.unittest.Meta,PocoListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,PEVerifyArraysAndLists,The following statement contains a magic number: model.Add(typeof(NastyType)' true)                  .Add(1' nameof(NastyType.Blobs))                  .Add(2' nameof(NastyType.Blob))                  .Add(3' nameof(NastyType.BasicArray))                  .Add(4' nameof(NastyType.BasicList))                    .Add(5' nameof(NastyType.BlobsField))                  .Add(6' nameof(NastyType.BlobField))                  .Add(7' nameof(NastyType.BasicArrayField))                  .Add(8' nameof(NastyType.BasicListField))                  ;
Magic Number,ProtoBuf.unittest.Meta,PocoListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,PEVerifyArraysAndLists,The following statement contains a magic number: model.Add(typeof(NastyType)' true)                  .Add(1' nameof(NastyType.Blobs))                  .Add(2' nameof(NastyType.Blob))                  .Add(3' nameof(NastyType.BasicArray))                  .Add(4' nameof(NastyType.BasicList))                    .Add(5' nameof(NastyType.BlobsField))                  .Add(6' nameof(NastyType.BlobField))                  .Add(7' nameof(NastyType.BasicArrayField))                  .Add(8' nameof(NastyType.BasicListField))                  ;
Magic Number,ProtoBuf.unittest.Meta,PocoListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,PEVerifyArraysAndLists,The following statement contains a magic number: model.Add(typeof(NastyType)' true)                  .Add(1' nameof(NastyType.Blobs))                  .Add(2' nameof(NastyType.Blob))                  .Add(3' nameof(NastyType.BasicArray))                  .Add(4' nameof(NastyType.BasicList))                    .Add(5' nameof(NastyType.BlobsField))                  .Add(6' nameof(NastyType.BlobField))                  .Add(7' nameof(NastyType.BasicArrayField))                  .Add(8' nameof(NastyType.BasicListField))                  ;
Magic Number,ProtoBuf.unittest.Meta,PocoListTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,PEVerifyArraysAndLists,The following statement contains a magic number: model.Add(typeof(NastyType)' true)                  .Add(1' nameof(NastyType.Blobs))                  .Add(2' nameof(NastyType.Blob))                  .Add(3' nameof(NastyType.BasicArray))                  .Add(4' nameof(NastyType.BasicList))                    .Add(5' nameof(NastyType.BlobsField))                  .Add(6' nameof(NastyType.BlobField))                  .Add(7' nameof(NastyType.BasicArrayField))                  .Add(8' nameof(NastyType.BasicListField))                  ;
Magic Number,ProtoBuf.unittest.Meta,PackedLists,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,TestEmptyRoundTrip,The following statement contains a magic number: Assert.Equal(6' len);
Magic Number,ProtoBuf.unittest.Meta,PackedLists,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,TestEmptyRoundTrip,The following statement contains a magic number: Assert.Equal(6' len);
Magic Number,ProtoBuf.unittest.Meta,PackedLists,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,TestEmptyRoundTrip,The following statement contains a magic number: Assert.Equal(6' len);
Magic Number,ProtoBuf.unittest.Meta,PackedLists,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,CheckExpectedListContents,The following statement contains a magic number: Assert.Equal(3' data.ListInt32.Count);
Magic Number,ProtoBuf.unittest.Meta,PackedLists,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,CheckExpectedListContents,The following statement contains a magic number: Assert.Equal(3' data.ListInt32[0]);
Magic Number,ProtoBuf.unittest.Meta,PackedLists,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,CheckExpectedListContents,The following statement contains a magic number: Assert.Equal(5' data.ListInt32[1]);
Magic Number,ProtoBuf.unittest.Meta,PackedLists,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,CheckExpectedListContents,The following statement contains a magic number: Assert.Equal(7' data.ListInt32[2]);
Magic Number,ProtoBuf.unittest.Meta,PackedLists,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,CheckExpectedListContents,The following statement contains a magic number: Assert.Equal(7' data.ListInt32[2]);
Magic Number,ProtoBuf.unittest.Meta,PackedLists,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,CheckExpectedListContents,The following statement contains a magic number: Assert.Equal(3' data.ListSingle.Count);
Magic Number,ProtoBuf.unittest.Meta,PackedLists,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,CheckExpectedListContents,The following statement contains a magic number: Assert.Equal(3F' data.ListSingle[0]);
Magic Number,ProtoBuf.unittest.Meta,PackedLists,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,CheckExpectedListContents,The following statement contains a magic number: Assert.Equal(5F' data.ListSingle[1]);
Magic Number,ProtoBuf.unittest.Meta,PackedLists,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,CheckExpectedListContents,The following statement contains a magic number: Assert.Equal(7F' data.ListSingle[2]);
Magic Number,ProtoBuf.unittest.Meta,PackedLists,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,CheckExpectedListContents,The following statement contains a magic number: Assert.Equal(7F' data.ListSingle[2]);
Magic Number,ProtoBuf.unittest.Meta,PackedLists,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,CheckExpectedListContents,The following statement contains a magic number: Assert.Equal(3' data.ListDouble.Count);
Magic Number,ProtoBuf.unittest.Meta,PackedLists,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,CheckExpectedListContents,The following statement contains a magic number: Assert.Equal(3D' data.ListDouble[0]);
Magic Number,ProtoBuf.unittest.Meta,PackedLists,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,CheckExpectedListContents,The following statement contains a magic number: Assert.Equal(5D' data.ListDouble[1]);
Magic Number,ProtoBuf.unittest.Meta,PackedLists,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,CheckExpectedListContents,The following statement contains a magic number: Assert.Equal(7D' data.ListDouble[2]);
Magic Number,ProtoBuf.unittest.Meta,PackedLists,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,CheckExpectedListContents,The following statement contains a magic number: Assert.Equal(7D' data.ListDouble[2]);
Magic Number,ProtoBuf.unittest.Meta,PackedLists,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,TestThreeItemsRoundTrip,The following statement contains a magic number: var orig = new PackedData { ListInt32 = new List<int> {3'5'7}' ListSingle = new List<float> {3F'5F'7F}' ListDouble = new List<double> {3D'5D'7F} };
Magic Number,ProtoBuf.unittest.Meta,PackedLists,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,TestThreeItemsRoundTrip,The following statement contains a magic number: var orig = new PackedData { ListInt32 = new List<int> {3'5'7}' ListSingle = new List<float> {3F'5F'7F}' ListDouble = new List<double> {3D'5D'7F} };
Magic Number,ProtoBuf.unittest.Meta,PackedLists,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,TestThreeItemsRoundTrip,The following statement contains a magic number: var orig = new PackedData { ListInt32 = new List<int> {3'5'7}' ListSingle = new List<float> {3F'5F'7F}' ListDouble = new List<double> {3D'5D'7F} };
Magic Number,ProtoBuf.unittest.Meta,PackedLists,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,TestThreeItemsRoundTrip,The following statement contains a magic number: var orig = new PackedData { ListInt32 = new List<int> {3'5'7}' ListSingle = new List<float> {3F'5F'7F}' ListDouble = new List<double> {3D'5D'7F} };
Magic Number,ProtoBuf.unittest.Meta,PackedLists,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,TestThreeItemsRoundTrip,The following statement contains a magic number: var orig = new PackedData { ListInt32 = new List<int> {3'5'7}' ListSingle = new List<float> {3F'5F'7F}' ListDouble = new List<double> {3D'5D'7F} };
Magic Number,ProtoBuf.unittest.Meta,PackedLists,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,TestThreeItemsRoundTrip,The following statement contains a magic number: var orig = new PackedData { ListInt32 = new List<int> {3'5'7}' ListSingle = new List<float> {3F'5F'7F}' ListDouble = new List<double> {3D'5D'7F} };
Magic Number,ProtoBuf.unittest.Meta,PackedLists,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,TestThreeItemsRoundTrip,The following statement contains a magic number: var orig = new PackedData { ListInt32 = new List<int> {3'5'7}' ListSingle = new List<float> {3F'5F'7F}' ListDouble = new List<double> {3D'5D'7F} };
Magic Number,ProtoBuf.unittest.Meta,PackedLists,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,TestThreeItemsRoundTrip,The following statement contains a magic number: var orig = new PackedData { ListInt32 = new List<int> {3'5'7}' ListSingle = new List<float> {3F'5F'7F}' ListDouble = new List<double> {3D'5D'7F} };
Magic Number,ProtoBuf.unittest.Meta,PackedLists,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,TestThreeItemsRoundTrip,The following statement contains a magic number: var orig = new PackedData { ListInt32 = new List<int> {3'5'7}' ListSingle = new List<float> {3F'5F'7F}' ListDouble = new List<double> {3D'5D'7F} };
Magic Number,ProtoBuf.unittest.Meta,PackedLists,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,TestThreeItemsRoundTrip,The following statement contains a magic number: const int expectedLen = (1 + 1 + 1 + 1 + 1) + (1 + 1 + 4 + 4 + 4) + (1 + 1 + 8 + 8 + 8);
Magic Number,ProtoBuf.unittest.Meta,PackedLists,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,TestThreeItemsRoundTrip,The following statement contains a magic number: const int expectedLen = (1 + 1 + 1 + 1 + 1) + (1 + 1 + 4 + 4 + 4) + (1 + 1 + 8 + 8 + 8);
Magic Number,ProtoBuf.unittest.Meta,PackedLists,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,TestThreeItemsRoundTrip,The following statement contains a magic number: const int expectedLen = (1 + 1 + 1 + 1 + 1) + (1 + 1 + 4 + 4 + 4) + (1 + 1 + 8 + 8 + 8);
Magic Number,ProtoBuf.unittest.Meta,PackedLists,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,TestThreeItemsRoundTrip,The following statement contains a magic number: const int expectedLen = (1 + 1 + 1 + 1 + 1) + (1 + 1 + 4 + 4 + 4) + (1 + 1 + 8 + 8 + 8);
Magic Number,ProtoBuf.unittest.Meta,PackedLists,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,TestThreeItemsRoundTrip,The following statement contains a magic number: const int expectedLen = (1 + 1 + 1 + 1 + 1) + (1 + 1 + 4 + 4 + 4) + (1 + 1 + 8 + 8 + 8);
Magic Number,ProtoBuf.unittest.Meta,PackedLists,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,TestThreeItemsRoundTrip,The following statement contains a magic number: const int expectedLen = (1 + 1 + 1 + 1 + 1) + (1 + 1 + 4 + 4 + 4) + (1 + 1 + 8 + 8 + 8);
Magic Number,ProtoBuf.unittest.Meta,PackedArrays,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,TestEmptyRoundTrip,The following statement contains a magic number: Assert.Equal(6' len);
Magic Number,ProtoBuf.unittest.Meta,PackedArrays,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,TestEmptyRoundTrip,The following statement contains a magic number: Assert.Equal(6' len);
Magic Number,ProtoBuf.unittest.Meta,PackedArrays,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,TestEmptyRoundTrip,The following statement contains a magic number: Assert.Equal(6' len);
Magic Number,ProtoBuf.unittest.Meta,PackedArrays,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,CheckExpectedListContents,The following statement contains a magic number: Assert.Equal(3' data.ArrayInt32.Length);
Magic Number,ProtoBuf.unittest.Meta,PackedArrays,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,CheckExpectedListContents,The following statement contains a magic number: Assert.Equal(3' data.ArrayInt32[0]);
Magic Number,ProtoBuf.unittest.Meta,PackedArrays,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,CheckExpectedListContents,The following statement contains a magic number: Assert.Equal(5' data.ArrayInt32[1]);
Magic Number,ProtoBuf.unittest.Meta,PackedArrays,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,CheckExpectedListContents,The following statement contains a magic number: Assert.Equal(7' data.ArrayInt32[2]);
Magic Number,ProtoBuf.unittest.Meta,PackedArrays,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,CheckExpectedListContents,The following statement contains a magic number: Assert.Equal(7' data.ArrayInt32[2]);
Magic Number,ProtoBuf.unittest.Meta,PackedArrays,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,CheckExpectedListContents,The following statement contains a magic number: Assert.Equal(3' data.ArraySingle.Length);
Magic Number,ProtoBuf.unittest.Meta,PackedArrays,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,CheckExpectedListContents,The following statement contains a magic number: Assert.Equal(3F' data.ArraySingle[0]);
Magic Number,ProtoBuf.unittest.Meta,PackedArrays,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,CheckExpectedListContents,The following statement contains a magic number: Assert.Equal(5F' data.ArraySingle[1]);
Magic Number,ProtoBuf.unittest.Meta,PackedArrays,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,CheckExpectedListContents,The following statement contains a magic number: Assert.Equal(7F' data.ArraySingle[2]);
Magic Number,ProtoBuf.unittest.Meta,PackedArrays,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,CheckExpectedListContents,The following statement contains a magic number: Assert.Equal(7F' data.ArraySingle[2]);
Magic Number,ProtoBuf.unittest.Meta,PackedArrays,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,CheckExpectedListContents,The following statement contains a magic number: Assert.Equal(3' data.ArrayDouble.Length);
Magic Number,ProtoBuf.unittest.Meta,PackedArrays,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,CheckExpectedListContents,The following statement contains a magic number: Assert.Equal(3D' data.ArrayDouble[0]);
Magic Number,ProtoBuf.unittest.Meta,PackedArrays,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,CheckExpectedListContents,The following statement contains a magic number: Assert.Equal(5D' data.ArrayDouble[1]);
Magic Number,ProtoBuf.unittest.Meta,PackedArrays,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,CheckExpectedListContents,The following statement contains a magic number: Assert.Equal(7D' data.ArrayDouble[2]);
Magic Number,ProtoBuf.unittest.Meta,PackedArrays,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,CheckExpectedListContents,The following statement contains a magic number: Assert.Equal(7D' data.ArrayDouble[2]);
Magic Number,ProtoBuf.unittest.Meta,PackedArrays,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,TestThreeItemsRoundTrip,The following statement contains a magic number: var orig = new PackedData { ArrayInt32 = new int[] { 3' 5' 7 }' ArraySingle = new float[] { 3F' 5F' 7F }' ArrayDouble = new double[] { 3D' 5D' 7F } };
Magic Number,ProtoBuf.unittest.Meta,PackedArrays,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,TestThreeItemsRoundTrip,The following statement contains a magic number: var orig = new PackedData { ArrayInt32 = new int[] { 3' 5' 7 }' ArraySingle = new float[] { 3F' 5F' 7F }' ArrayDouble = new double[] { 3D' 5D' 7F } };
Magic Number,ProtoBuf.unittest.Meta,PackedArrays,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,TestThreeItemsRoundTrip,The following statement contains a magic number: var orig = new PackedData { ArrayInt32 = new int[] { 3' 5' 7 }' ArraySingle = new float[] { 3F' 5F' 7F }' ArrayDouble = new double[] { 3D' 5D' 7F } };
Magic Number,ProtoBuf.unittest.Meta,PackedArrays,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,TestThreeItemsRoundTrip,The following statement contains a magic number: var orig = new PackedData { ArrayInt32 = new int[] { 3' 5' 7 }' ArraySingle = new float[] { 3F' 5F' 7F }' ArrayDouble = new double[] { 3D' 5D' 7F } };
Magic Number,ProtoBuf.unittest.Meta,PackedArrays,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,TestThreeItemsRoundTrip,The following statement contains a magic number: var orig = new PackedData { ArrayInt32 = new int[] { 3' 5' 7 }' ArraySingle = new float[] { 3F' 5F' 7F }' ArrayDouble = new double[] { 3D' 5D' 7F } };
Magic Number,ProtoBuf.unittest.Meta,PackedArrays,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,TestThreeItemsRoundTrip,The following statement contains a magic number: var orig = new PackedData { ArrayInt32 = new int[] { 3' 5' 7 }' ArraySingle = new float[] { 3F' 5F' 7F }' ArrayDouble = new double[] { 3D' 5D' 7F } };
Magic Number,ProtoBuf.unittest.Meta,PackedArrays,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,TestThreeItemsRoundTrip,The following statement contains a magic number: var orig = new PackedData { ArrayInt32 = new int[] { 3' 5' 7 }' ArraySingle = new float[] { 3F' 5F' 7F }' ArrayDouble = new double[] { 3D' 5D' 7F } };
Magic Number,ProtoBuf.unittest.Meta,PackedArrays,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,TestThreeItemsRoundTrip,The following statement contains a magic number: var orig = new PackedData { ArrayInt32 = new int[] { 3' 5' 7 }' ArraySingle = new float[] { 3F' 5F' 7F }' ArrayDouble = new double[] { 3D' 5D' 7F } };
Magic Number,ProtoBuf.unittest.Meta,PackedArrays,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,TestThreeItemsRoundTrip,The following statement contains a magic number: var orig = new PackedData { ArrayInt32 = new int[] { 3' 5' 7 }' ArraySingle = new float[] { 3F' 5F' 7F }' ArrayDouble = new double[] { 3D' 5D' 7F } };
Magic Number,ProtoBuf.unittest.Meta,PackedArrays,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,TestThreeItemsRoundTrip,The following statement contains a magic number: const int expectedLen = (1 + 1 + 1 + 1 + 1) + (1 + 1 + 4 + 4 + 4) + (1 + 1 + 8 + 8 + 8);
Magic Number,ProtoBuf.unittest.Meta,PackedArrays,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,TestThreeItemsRoundTrip,The following statement contains a magic number: const int expectedLen = (1 + 1 + 1 + 1 + 1) + (1 + 1 + 4 + 4 + 4) + (1 + 1 + 8 + 8 + 8);
Magic Number,ProtoBuf.unittest.Meta,PackedArrays,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,TestThreeItemsRoundTrip,The following statement contains a magic number: const int expectedLen = (1 + 1 + 1 + 1 + 1) + (1 + 1 + 4 + 4 + 4) + (1 + 1 + 8 + 8 + 8);
Magic Number,ProtoBuf.unittest.Meta,PackedArrays,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,TestThreeItemsRoundTrip,The following statement contains a magic number: const int expectedLen = (1 + 1 + 1 + 1 + 1) + (1 + 1 + 4 + 4 + 4) + (1 + 1 + 8 + 8 + 8);
Magic Number,ProtoBuf.unittest.Meta,PackedArrays,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,TestThreeItemsRoundTrip,The following statement contains a magic number: const int expectedLen = (1 + 1 + 1 + 1 + 1) + (1 + 1 + 4 + 4 + 4) + (1 + 1 + 8 + 8 + 8);
Magic Number,ProtoBuf.unittest.Meta,PackedArrays,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Lists.cs,TestThreeItemsRoundTrip,The following statement contains a magic number: const int expectedLen = (1 + 1 + 1 + 1 + 1) + (1 + 1 + 4 + 4 + 4) + (1 + 1 + 8 + 8 + 8);
Magic Number,ProtoBuf.unittest.Meta,LockContention,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\LockContention.cs,DeliberatelyCausedContentionShouldShow,The following statement contains a magic number: model.MetadataTimeoutMilliseconds = 400;
Magic Number,ProtoBuf.unittest.Meta,LockContention,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\LockContention.cs,DeliberatelyCausedContentionShouldShow,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(delegate              {                  int opaqueToken = 0;                  try                  {                      model.TakeLock(ref opaqueToken);                      workerReady.Set();                      if (!mainComplete.WaitOne(5000)) throw new TimeoutException();                  }                  finally                  {                      model.ReleaseLock(opaqueToken);                      workerComplete.Set();                  }              });
Magic Number,ProtoBuf.unittest.Meta,LockContention,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\LockContention.cs,DeliberatelyCausedContentionShouldShow,The following statement contains a magic number: !workerReady.WaitOne(5000)
Magic Number,ProtoBuf.unittest.Meta,LockContention,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\LockContention.cs,DeliberatelyCausedContentionShouldShow,The following statement contains a magic number: !workerComplete.WaitOne(5000)
Magic Number,ProtoBuf.unittest.Meta,LockContention,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\LockContention.cs,MultipleDeserializeCallsShouldNotContend,The following statement contains a magic number: const int threads = 10' loop = 500;
Magic Number,ProtoBuf.unittest.Meta,LockContention,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\LockContention.cs,MultipleDeserializeCallsShouldNotContend,The following statement contains a magic number: const int threads = 10' loop = 500;
Magic Number,ProtoBuf.unittest.Meta,LockContention,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\LockContention.cs,MultipleDeserializeCallsShouldNotContend,The following statement contains a magic number: !thd.Join(4000)
Magic Number,ProtoBuf.unittest.Meta,PocoClass,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\PocoStruct.cs,CanSerializeCompany,The following statement contains a magic number: Assert.Equal(3' clone.Employees.Count);
Magic Number,ProtoBuf.unittest.Meta,PocoClass,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\PocoStruct.cs,CanSerializeCompany,The following statement contains a magic number: Assert.Equal("Alex"' clone.Employees[2].EmployeeName);
Magic Number,ProtoBuf.unittest.Meta,PocoStruct,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\PocoStruct.cs,CanSerializeCompany,The following statement contains a magic number: Assert.Equal(3' clone.Employees.Count);
Magic Number,ProtoBuf.unittest.Meta,PocoStruct,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\PocoStruct.cs,CanSerializeCompany,The following statement contains a magic number: Assert.Equal("Alex"' clone.Employees[2].EmployeeName);
Magic Number,ProtoBuf.unittest.Meta,TestCustomerStruct,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Struct.cs,RunStructDesrializerForEmptyStream,The following statement contains a magic number: var head = TypeSerializer.Create(typeof(CustomerStruct)'                  new int[] { 1' 2 }'                  new IRuntimeProtoSerializerNode[] {                      new PropertyDecorator(typeof(CustomerStruct)' typeof(CustomerStruct).GetProperty(nameof(CustomerStruct.Id))' new TagDecorator(1' WireType.Varint' false' Int32Serializer.Instance))'                      new FieldDecorator(typeof(CustomerStruct)' typeof(CustomerStruct).GetField(nameof(CustomerStruct.Name))' new TagDecorator(2' WireType.String' false' StringSerializer.Instance))                  }' null' false' true' null' null' null' null' SerializerFeatures.WireTypeString | SerializerFeatures.CategoryMessage);
Magic Number,ProtoBuf.unittest.Meta,TestCustomerStruct,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Struct.cs,RunStructDesrializerForEmptyStream,The following statement contains a magic number: var head = TypeSerializer.Create(typeof(CustomerStruct)'                  new int[] { 1' 2 }'                  new IRuntimeProtoSerializerNode[] {                      new PropertyDecorator(typeof(CustomerStruct)' typeof(CustomerStruct).GetProperty(nameof(CustomerStruct.Id))' new TagDecorator(1' WireType.Varint' false' Int32Serializer.Instance))'                      new FieldDecorator(typeof(CustomerStruct)' typeof(CustomerStruct).GetField(nameof(CustomerStruct.Name))' new TagDecorator(2' WireType.String' false' StringSerializer.Instance))                  }' null' false' true' null' null' null' null' SerializerFeatures.WireTypeString | SerializerFeatures.CategoryMessage);
Magic Number,ProtoBuf.unittest.Meta,TestCustomerStruct,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Struct.cs,RunStructDesrializerForEmptyStream,The following statement contains a magic number: CustomerStruct before = new CustomerStruct { Id = 123' Name = "abc" };
Magic Number,ProtoBuf.unittest.Meta,TestCustomerStruct,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Struct.cs,GenerateTypeSerializer,The following statement contains a magic number: var head = TypeSerializer.Create(typeof(CustomerStruct)'                  new int[] { 1' 2 }'                  new IRuntimeProtoSerializerNode[] {                      new PropertyDecorator(typeof(CustomerStruct)' typeof(CustomerStruct).GetProperty(nameof(CustomerStruct.Id))' new TagDecorator(1' WireType.Varint'false' Int32Serializer.Instance))'                      new FieldDecorator(typeof(CustomerStruct)' typeof(CustomerStruct).GetField(nameof(CustomerStruct.Name))' new TagDecorator(2' WireType.String'false' StringSerializer.Instance))                  }' null' false' true' null' null' null' null' SerializerFeatures.WireTypeString | SerializerFeatures.CategoryMessage);
Magic Number,ProtoBuf.unittest.Meta,TestCustomerStruct,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Struct.cs,GenerateTypeSerializer,The following statement contains a magic number: var head = TypeSerializer.Create(typeof(CustomerStruct)'                  new int[] { 1' 2 }'                  new IRuntimeProtoSerializerNode[] {                      new PropertyDecorator(typeof(CustomerStruct)' typeof(CustomerStruct).GetProperty(nameof(CustomerStruct.Id))' new TagDecorator(1' WireType.Varint'false' Int32Serializer.Instance))'                      new FieldDecorator(typeof(CustomerStruct)' typeof(CustomerStruct).GetField(nameof(CustomerStruct.Name))' new TagDecorator(2' WireType.String'false' StringSerializer.Instance))                  }' null' false' true' null' null' null' null' SerializerFeatures.WireTypeString | SerializerFeatures.CategoryMessage);
Magic Number,ProtoBuf.unittest.Meta,TestCustomerStruct,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\Struct.cs,GenerateTypeSerializer,The following statement contains a magic number: CustomerStruct cs1 = new CustomerStruct { Id = 123' Name = "Fred" };
Magic Number,ProtoBuf.unittest.Meta,SubItems,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\SubItems.cs,CreateModel,The following statement contains a magic number: model.Add(typeof(OuterRef)' false)                  .Add(1' "Int32")                  .Add(2' "String")                  .Add(3' "InnerVal")                  .Add(4' "InnerRef");
Magic Number,ProtoBuf.unittest.Meta,SubItems,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\SubItems.cs,CreateModel,The following statement contains a magic number: model.Add(typeof(OuterRef)' false)                  .Add(1' "Int32")                  .Add(2' "String")                  .Add(3' "InnerVal")                  .Add(4' "InnerRef");
Magic Number,ProtoBuf.unittest.Meta,SubItems,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\SubItems.cs,CreateModel,The following statement contains a magic number: model.Add(typeof(OuterRef)' false)                  .Add(1' "Int32")                  .Add(2' "String")                  .Add(3' "InnerVal")                  .Add(4' "InnerRef");
Magic Number,ProtoBuf.unittest.Meta,SubItems,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\SubItems.cs,CreateModel,The following statement contains a magic number: model.Add(typeof(InnerRef)' false)                  .Add(1' "Int32")                  .Add(2' "String");
Magic Number,ProtoBuf.unittest.Meta,SubItems,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\SubItems.cs,CreateModel,The following statement contains a magic number: model.Add(typeof(OuterVal)' false)                  .Add(1' "Int32")                  .Add(2' "String")                  .Add(3' "InnerVal")                  .Add(4' "InnerRef");
Magic Number,ProtoBuf.unittest.Meta,SubItems,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\SubItems.cs,CreateModel,The following statement contains a magic number: model.Add(typeof(OuterVal)' false)                  .Add(1' "Int32")                  .Add(2' "String")                  .Add(3' "InnerVal")                  .Add(4' "InnerRef");
Magic Number,ProtoBuf.unittest.Meta,SubItems,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\SubItems.cs,CreateModel,The following statement contains a magic number: model.Add(typeof(OuterVal)' false)                  .Add(1' "Int32")                  .Add(2' "String")                  .Add(3' "InnerVal")                  .Add(4' "InnerRef");
Magic Number,ProtoBuf.unittest.Meta,SubItems,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\SubItems.cs,CreateModel,The following statement contains a magic number: model.Add(typeof(InnerVal)' false)                  .Add(1' "Int32")                  .Add(2' "String");
Magic Number,ProtoBuf.unittest.Meta,SubItems,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\SubItems.cs,TestRoundTripOuterRef,The following statement contains a magic number: OuterRef outer = new OuterRef              {                  InnerRef = new InnerRef { Int32 = 123' String = "abc" }'                  InnerVal = new InnerVal { Int32 = 456' String = "def" }              }' clone;
Magic Number,ProtoBuf.unittest.Meta,SubItems,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\SubItems.cs,TestRoundTripOuterRef,The following statement contains a magic number: OuterRef outer = new OuterRef              {                  InnerRef = new InnerRef { Int32 = 123' String = "abc" }'                  InnerVal = new InnerVal { Int32 = 456' String = "def" }              }' clone;
Magic Number,ProtoBuf.unittest.Meta,SubItems,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\SubItems.cs,TestRoundTripOuterRef,The following statement contains a magic number: Assert.Equal(123' clone.InnerRef.Int32);
Magic Number,ProtoBuf.unittest.Meta,SubItems,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\SubItems.cs,TestRoundTripOuterRef,The following statement contains a magic number: Assert.Equal(456' clone.InnerVal.Int32);
Magic Number,ProtoBuf.unittest.Meta,SubItems,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\SubItems.cs,TestRoundTripOuterRef,The following statement contains a magic number: Assert.Equal(123' clone.InnerRef.Int32);
Magic Number,ProtoBuf.unittest.Meta,SubItems,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\SubItems.cs,TestRoundTripOuterRef,The following statement contains a magic number: Assert.Equal(456' clone.InnerVal.Int32);
Magic Number,ProtoBuf.unittest.Meta,SubItems,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\SubItems.cs,TestRoundTripOuterRef,The following statement contains a magic number: Assert.Equal(123' clone.InnerRef.Int32);
Magic Number,ProtoBuf.unittest.Meta,SubItems,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\SubItems.cs,TestRoundTripOuterRef,The following statement contains a magic number: Assert.Equal(456' clone.InnerVal.Int32);
Magic Number,ProtoBuf.unittest.Meta,SubItems,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\SubItems.cs,TestRoundTripOuterVal,The following statement contains a magic number: OuterVal outer = new OuterVal              {                  InnerRef = new InnerRef { Int32 = 123' String = "abc" }'                  InnerVal = new InnerVal { Int32 = 456' String = "def" }              }' clone;
Magic Number,ProtoBuf.unittest.Meta,SubItems,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\SubItems.cs,TestRoundTripOuterVal,The following statement contains a magic number: OuterVal outer = new OuterVal              {                  InnerRef = new InnerRef { Int32 = 123' String = "abc" }'                  InnerVal = new InnerVal { Int32 = 456' String = "def" }              }' clone;
Magic Number,ProtoBuf.unittest.Meta,SubItems,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\SubItems.cs,TestRoundTripOuterVal,The following statement contains a magic number: Assert.Equal(123' clone.InnerRef.Int32);
Magic Number,ProtoBuf.unittest.Meta,SubItems,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\SubItems.cs,TestRoundTripOuterVal,The following statement contains a magic number: Assert.Equal(456' clone.InnerVal.Int32);
Magic Number,ProtoBuf.unittest.Meta,SubItems,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\SubItems.cs,TestRoundTripOuterVal,The following statement contains a magic number: Assert.Equal(123' clone.InnerRef.Int32);
Magic Number,ProtoBuf.unittest.Meta,SubItems,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\SubItems.cs,TestRoundTripOuterVal,The following statement contains a magic number: Assert.Equal(456' clone.InnerVal.Int32);
Magic Number,ProtoBuf.unittest.Meta,SubItems,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\SubItems.cs,TestRoundTripOuterVal,The following statement contains a magic number: Assert.Equal(123' clone.InnerRef.Int32);
Magic Number,ProtoBuf.unittest.Meta,SubItems,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\SubItems.cs,TestRoundTripOuterVal,The following statement contains a magic number: Assert.Equal(456' clone.InnerVal.Int32);
Magic Number,ProtoBuf.unittest.Meta,SubItems,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\SubItems.cs,TestTypeWithNullableProps,The following statement contains a magic number: TypeWithNulls obj = new TypeWithNulls { First = 123' Second = 456.789M };
Magic Number,ProtoBuf.unittest.Meta,SubItems,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\SubItems.cs,TestTypeWithNullableProps,The following statement contains a magic number: TypeWithNulls obj = new TypeWithNulls { First = 123' Second = 456.789M };
Magic Number,ProtoBuf.unittest.Meta,SubItems,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\SubItems.cs,TestTypeWithNullableProps,The following statement contains a magic number: Assert.Equal(123' clone1.First);
Magic Number,ProtoBuf.unittest.Meta,SubItems,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\SubItems.cs,TestTypeWithNullableProps,The following statement contains a magic number: Assert.Equal(456.789M' clone1.Second);
Magic Number,ProtoBuf.unittest.Meta,SubItems,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\SubItems.cs,TestTypeWithNullableProps,The following statement contains a magic number: Assert.Equal(123' clone2.First);
Magic Number,ProtoBuf.unittest.Meta,SubItems,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\SubItems.cs,TestTypeWithNullableProps,The following statement contains a magic number: Assert.Equal(456.789M' clone2.Second);
Magic Number,ProtoBuf.unittest.Meta,SubItems,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\SubItems.cs,TestTypeWithNullableProps,The following statement contains a magic number: Assert.Equal(123' clone3.First);
Magic Number,ProtoBuf.unittest.Meta,SubItems,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\SubItems.cs,TestTypeWithNullableProps,The following statement contains a magic number: Assert.Equal(456.789M' clone3.Second);
Magic Number,ProtoBuf.unittest.Meta,ThreadRace,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\ThreadRace.cs,DestructionTestModelInitialisation,The following statement contains a magic number: var a = new ModelWithNonTrivialProperties()              {                  J = new Dictionary<string' int> { { "abc"' 123 } }'                  D = new byte[] { 0' 1' 2' 3' 4 }'                  G = new List<decimal> { 1' 2' 3' 4' 5 }'                  H = new Dictionary<int' AnotherType> { { 1' new AnotherType { A = 456 } } }'                  I = new AnotherType { B = "def" }              };
Magic Number,ProtoBuf.unittest.Meta,ThreadRace,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\ThreadRace.cs,DestructionTestModelInitialisation,The following statement contains a magic number: var a = new ModelWithNonTrivialProperties()              {                  J = new Dictionary<string' int> { { "abc"' 123 } }'                  D = new byte[] { 0' 1' 2' 3' 4 }'                  G = new List<decimal> { 1' 2' 3' 4' 5 }'                  H = new Dictionary<int' AnotherType> { { 1' new AnotherType { A = 456 } } }'                  I = new AnotherType { B = "def" }              };
Magic Number,ProtoBuf.unittest.Meta,ThreadRace,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\ThreadRace.cs,DestructionTestModelInitialisation,The following statement contains a magic number: var a = new ModelWithNonTrivialProperties()              {                  J = new Dictionary<string' int> { { "abc"' 123 } }'                  D = new byte[] { 0' 1' 2' 3' 4 }'                  G = new List<decimal> { 1' 2' 3' 4' 5 }'                  H = new Dictionary<int' AnotherType> { { 1' new AnotherType { A = 456 } } }'                  I = new AnotherType { B = "def" }              };
Magic Number,ProtoBuf.unittest.Meta,ThreadRace,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\ThreadRace.cs,DestructionTestModelInitialisation,The following statement contains a magic number: var a = new ModelWithNonTrivialProperties()              {                  J = new Dictionary<string' int> { { "abc"' 123 } }'                  D = new byte[] { 0' 1' 2' 3' 4 }'                  G = new List<decimal> { 1' 2' 3' 4' 5 }'                  H = new Dictionary<int' AnotherType> { { 1' new AnotherType { A = 456 } } }'                  I = new AnotherType { B = "def" }              };
Magic Number,ProtoBuf.unittest.Meta,ThreadRace,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\ThreadRace.cs,DestructionTestModelInitialisation,The following statement contains a magic number: var a = new ModelWithNonTrivialProperties()              {                  J = new Dictionary<string' int> { { "abc"' 123 } }'                  D = new byte[] { 0' 1' 2' 3' 4 }'                  G = new List<decimal> { 1' 2' 3' 4' 5 }'                  H = new Dictionary<int' AnotherType> { { 1' new AnotherType { A = 456 } } }'                  I = new AnotherType { B = "def" }              };
Magic Number,ProtoBuf.unittest.Meta,ThreadRace,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\ThreadRace.cs,DestructionTestModelInitialisation,The following statement contains a magic number: var a = new ModelWithNonTrivialProperties()              {                  J = new Dictionary<string' int> { { "abc"' 123 } }'                  D = new byte[] { 0' 1' 2' 3' 4 }'                  G = new List<decimal> { 1' 2' 3' 4' 5 }'                  H = new Dictionary<int' AnotherType> { { 1' new AnotherType { A = 456 } } }'                  I = new AnotherType { B = "def" }              };
Magic Number,ProtoBuf.unittest.Meta,ThreadRace,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\ThreadRace.cs,DestructionTestModelInitialisation,The following statement contains a magic number: var a = new ModelWithNonTrivialProperties()              {                  J = new Dictionary<string' int> { { "abc"' 123 } }'                  D = new byte[] { 0' 1' 2' 3' 4 }'                  G = new List<decimal> { 1' 2' 3' 4' 5 }'                  H = new Dictionary<int' AnotherType> { { 1' new AnotherType { A = 456 } } }'                  I = new AnotherType { B = "def" }              };
Magic Number,ProtoBuf.unittest.Meta,ThreadRace,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\ThreadRace.cs,DestructionTestModelInitialisation,The following statement contains a magic number: var a = new ModelWithNonTrivialProperties()              {                  J = new Dictionary<string' int> { { "abc"' 123 } }'                  D = new byte[] { 0' 1' 2' 3' 4 }'                  G = new List<decimal> { 1' 2' 3' 4' 5 }'                  H = new Dictionary<int' AnotherType> { { 1' new AnotherType { A = 456 } } }'                  I = new AnotherType { B = "def" }              };
Magic Number,ProtoBuf.unittest.Meta,ThreadRace,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\ThreadRace.cs,DestructionTestModelInitialisation,The following statement contains a magic number: var a = new ModelWithNonTrivialProperties()              {                  J = new Dictionary<string' int> { { "abc"' 123 } }'                  D = new byte[] { 0' 1' 2' 3' 4 }'                  G = new List<decimal> { 1' 2' 3' 4' 5 }'                  H = new Dictionary<int' AnotherType> { { 1' new AnotherType { A = 456 } } }'                  I = new AnotherType { B = "def" }              };
Magic Number,ProtoBuf.unittest.Meta,ThreadRace,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\ThreadRace.cs,DestructionTestModelInitialisation,The following statement contains a magic number: var b = new AnotherType() { A = 123 };
Magic Number,ProtoBuf.unittest.Meta,ThreadRace,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\ThreadRace.cs,DestructionTestModelInitialisation,The following statement contains a magic number: int waiting = 20;
Magic Number,ProtoBuf.unittest.Meta,ThreadRace,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\ThreadRace.cs,DestructionTestModelInitialisation,The following statement contains a magic number: Thread[] threads = new Thread[20];
Magic Number,ProtoBuf.unittest.Meta,ThreadRace,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\ThreadRace.cs,DestructionTestModelInitialisation,The following statement contains a magic number: threads[2 * j] = new Thread(() =>                      {                          try                          {                              if (Interlocked.Decrement(ref waiting) == 0) allGo.Set();                              allGo.WaitOne();                              model.Serialize(Stream.Null' a);                          }                          catch (Exception ex)                          {                              Interlocked.CompareExchange(ref firstException' ex' null);                              Interlocked.Increment(ref failures);                          }                      });
Magic Number,ProtoBuf.unittest.Meta,ThreadRace,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\ThreadRace.cs,DestructionTestModelInitialisation,The following statement contains a magic number: threads[(2 * j) + 1] = new Thread(() =>                      {                          try                          {                              if (Interlocked.Decrement(ref waiting) == 0) allGo.Set();                              allGo.WaitOne();                              model.Serialize(Stream.Null' b);                          }                          catch (Exception ex)                          {                              Interlocked.CompareExchange(ref firstException' ex' null);                              Interlocked.Increment(ref failures);                          }                      });
Magic Number,ProtoBuf.unittest.Meta,ThreadRace,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\ThreadRace.cs,DestructionTestModelInitialisation,The following statement contains a magic number: j < 10
Magic Number,ProtoBuf.unittest.Meta,ThreadRace,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\ThreadRace.cs,DestructionTestModelInitialisation,The following statement contains a magic number: i < 100
Magic Number,ProtoBuf.unittest.Meta,ThreadRace,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\ThreadRace.cs,DestructionTestDictionary,The following statement contains a magic number: int waiting = 20;
Magic Number,ProtoBuf.unittest.Meta,ThreadRace,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\ThreadRace.cs,DestructionTestDictionary,The following statement contains a magic number: Thread[] threads = new Thread[20];
Magic Number,ProtoBuf.unittest.Meta,ThreadRace,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\ThreadRace.cs,DestructionTestDictionary,The following statement contains a magic number: threads[j] = new Thread(() =>                      {                          try                          {                              using var ms = new MemoryStream(raw);                              if (Interlocked.Decrement(ref waiting) == 0) allGo.Set();                              allGo.WaitOne();  #pragma warning disable CS0618                              var data = (Dictionary<string' string>)model.Deserialize(ms' null' typeof(Dictionary<string' string>));  #pragma warning restore CS0618                              if (data == null || data.Count != 3) throw new InvalidDataException();                              if (data["a"] != "b") throw new InvalidDataException();                              if (data["c"] != "d") throw new InvalidDataException();                              if (data["e"] != "f") throw new InvalidDataException();                          }                          catch (Exception ex)                          {                              Interlocked.CompareExchange(ref firstException' ex' null);                              Interlocked.Increment(ref failures);                          }                      });
Magic Number,ProtoBuf.unittest.Meta,ThreadRace,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\ThreadRace.cs,DestructionTestDictionary,The following statement contains a magic number: j < 20
Magic Number,ProtoBuf.unittest.Meta,ThreadRace,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\ThreadRace.cs,DestructionTestDictionary,The following statement contains a magic number: i < 100
Magic Number,ProtoBuf.unittest.Meta,ThreadRace,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\ThreadRace.cs,TestDeserializeModelFromRoot,The following statement contains a magic number: int waiting = 20;
Magic Number,ProtoBuf.unittest.Meta,ThreadRace,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\ThreadRace.cs,TestDeserializeModelFromRoot,The following statement contains a magic number: Thread[] threads = new Thread[20];
Magic Number,ProtoBuf.unittest.Meta,ThreadRace,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\ThreadRace.cs,TestDeserializeModelFromRoot,The following statement contains a magic number: j < 20
Magic Number,ProtoBuf.unittest.Meta,ThreadRace,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\ThreadRace.cs,TestDeserializeModelFromRoot,The following statement contains a magic number: i < 100
Magic Number,ProtoBuf.unittest.Meta,ThreadRace,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\ThreadRace.cs,TestSerializeModelFromRoot,The following statement contains a magic number: int waiting = 20;
Magic Number,ProtoBuf.unittest.Meta,ThreadRace,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\ThreadRace.cs,TestSerializeModelFromRoot,The following statement contains a magic number: Thread[] threads = new Thread[20];
Magic Number,ProtoBuf.unittest.Meta,ThreadRace,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\ThreadRace.cs,TestSerializeModelFromRoot,The following statement contains a magic number: j < 20
Magic Number,ProtoBuf.unittest.Meta,ThreadRace,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\ThreadRace.cs,TestSerializeModelFromRoot,The following statement contains a magic number: i < 100
Magic Number,ProtoBuf.unittest.Meta,ThreadRace,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\ThreadRace.cs,TestSerializeModelFromLeaf,The following statement contains a magic number: int waiting = 20;
Magic Number,ProtoBuf.unittest.Meta,ThreadRace,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\ThreadRace.cs,TestSerializeModelFromLeaf,The following statement contains a magic number: Thread[] threads = new Thread[objs.Length * 3];
Magic Number,ProtoBuf.unittest.Meta,ThreadRace,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Meta\ThreadRace.cs,TestSerializeModelFromLeaf,The following statement contains a magic number: i < 250
Magic Number,ProtoBuf.unittest.Perf,Issue103,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Perf\Issue103.cs,TestPerf,The following statement contains a magic number: typeA.param3.Add(i % 2 == 0);
Magic Number,ProtoBuf.unittest.Perf,Issue103,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Perf\Issue103.cs,TestPerf,The following statement contains a magic number: typeA.param4.Add(i % 3 == 0);
Magic Number,ProtoBuf.unittest.Perf,Issue103,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Perf\Issue103.cs,TestPerf,The following statement contains a magic number: i < 100
Magic Number,ProtoBuf.unittest.Perf,Issue103,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Perf\Issue103.cs,TestPerf,The following statement contains a magic number: ContainedType inner = new ContainedType                  {                      param1 = "Item " + i.ToString()'                      param2 = i'                      param3 = i % 2 == 0'                      param4 = i % 3 == 0                  };
Magic Number,ProtoBuf.unittest.Perf,Issue103,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Perf\Issue103.cs,TestPerf,The following statement contains a magic number: ContainedType inner = new ContainedType                  {                      param1 = "Item " + i.ToString()'                      param2 = i'                      param3 = i % 2 == 0'                      param4 = i % 3 == 0                  };
Magic Number,ProtoBuf.unittest.Perf,Issue103,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Perf\Issue103.cs,TestPerf,The following statement contains a magic number: i < 100
Magic Number,ProtoBuf.unittest.Perf,Issue103,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Perf\Issue103.cs,TestPerf,The following statement contains a magic number: RunTestIssue103(5000' typeA' typeB' model' "Runtime");
Magic Number,ProtoBuf.unittest.Perf,Issue103,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Perf\Issue103.cs,TestPerf,The following statement contains a magic number: RunTestIssue103(50000' typeA' typeB' model' "CompileInPlace");
Magic Number,ProtoBuf.unittest.Perf,Issue103,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Perf\Issue103.cs,TestPerf,The following statement contains a magic number: RunTestIssue103(50000' typeA' typeB' model.Compile()' "Compile");
Magic Number,ProtoBuf.unittest.Perf,Issue103,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Perf\Issue103.cs,RunTestIssue103,The following statement contains a magic number: Log.WriteLine(caption + " A/ser\t" + (typeASer.ElapsedMilliseconds * 1000 / loop) + " μs/item");
Magic Number,ProtoBuf.unittest.Perf,Issue103,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Perf\Issue103.cs,RunTestIssue103,The following statement contains a magic number: Log.WriteLine(caption + " A/deser\t" + (typeADeser.ElapsedMilliseconds * 1000 / loop) + " μs/item");
Magic Number,ProtoBuf.unittest.Perf,Issue103,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Perf\Issue103.cs,RunTestIssue103,The following statement contains a magic number: Log.WriteLine(caption + " B/ser\t" + (typeBSer.ElapsedMilliseconds * 1000 / loop) + " μs/item");
Magic Number,ProtoBuf.unittest.Perf,Issue103,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Perf\Issue103.cs,RunTestIssue103,The following statement contains a magic number: Log.WriteLine(caption + " B/deser\t" + (typeBDeser.ElapsedMilliseconds * 1000 / loop) + " μs/item");
Magic Number,ProtoBuf.Perf,Primitives,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Perf\Primitives.cs,CheckDecimalLayout,The following statement contains a magic number: decimal value = 1.0000000000045000000003000000M;
Magic Number,ProtoBuf.Perf,Primitives,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Perf\Primitives.cs,CheckGuidLayout,The following statement contains a magic number: i < 100
Magic Number,ProtoBuf.Serializers,Proto3Tests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\Proto3Tests.cs,HazBasicEnum_WorksForKnownAndUnknownValues,The following statement contains a magic number: obj = Serializer.ChangeType<HazInteger' HazBasicEnum>(new HazInteger { Value = 5 });
Magic Number,ProtoBuf.Serializers,Proto3Tests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\Proto3Tests.cs,HazBasicEnum_WorksForKnownAndUnknownValues,The following statement contains a magic number: Assert.Equal((RegularEnum)5' obj.Value);
Magic Number,ProtoBuf.Serializers,Proto3Tests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\Proto3Tests.cs,HazStrictEnum_WorksForKnownAndUnknownValues,The following statement contains a magic number: obj = Serializer.ChangeType<HazInteger' HazStrictEnum>(new HazInteger { Value = 5 });
Magic Number,ProtoBuf.Serializers,Proto3Tests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\Proto3Tests.cs,HazStrictEnum_WorksForKnownAndUnknownValues,The following statement contains a magic number: Assert.Equal((StrictEnum)5' obj.Value);
Magic Number,ProtoBuf.Serializers,Proto3Tests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\Proto3Tests.cs,HazAliasedEnum_WorksForKnownAndUnknownValues,The following statement contains a magic number: obj = Serializer.ChangeType<HazInteger' HazAliasedEnum>(new HazInteger { Value = 5 });
Magic Number,ProtoBuf.Serializers,Proto3Tests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\Proto3Tests.cs,HazAliasedEnum_WorksForKnownAndUnknownValues,The following statement contains a magic number: Assert.Equal((AliasedEnum)5' obj.Value);
Magic Number,ProtoBuf.Serializers,Proto3Tests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\Proto3Tests.cs,TestHazImplicitMap,The following statement contains a magic number: var obj = new HazImplicitMap              {                  Lookup = {                      {123' "abc" }'                      {456' "def" }'                  }              };
Magic Number,ProtoBuf.Serializers,Proto3Tests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\Proto3Tests.cs,TestHazImplicitMap,The following statement contains a magic number: var obj = new HazImplicitMap              {                  Lookup = {                      {123' "abc" }'                      {456' "def" }'                  }              };
Magic Number,ProtoBuf.Serializers,Proto3Tests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\Proto3Tests.cs,TestHazImplicitMap,The following statement contains a magic number: Assert.Equal(2' clone.Lookup.Count);
Magic Number,ProtoBuf.Serializers,Proto3Tests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\Proto3Tests.cs,TestHazImplicitMap,The following statement contains a magic number: Assert.True(clone.Lookup.TryGetValue(123' out var val));
Magic Number,ProtoBuf.Serializers,Proto3Tests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\Proto3Tests.cs,TestHazImplicitMap,The following statement contains a magic number: Assert.True(clone.Lookup.TryGetValue(456' out val));
Magic Number,ProtoBuf.Serializers,Proto3Tests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\Proto3Tests.cs,RoundTripBasic,The following statement contains a magic number: var data = new HazMap              {                  Lookup =                  {                      {1' "abc" }' {0' "" }' {2' "def"}                  }              };
Magic Number,ProtoBuf.Serializers,Proto3Tests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\Proto3Tests.cs,RoundTripBasic,The following statement contains a magic number: Assert.Equal(3' clone.Lookup.Count);
Magic Number,ProtoBuf.Serializers,Proto3Tests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\Proto3Tests.cs,RoundTripBasic,The following statement contains a magic number: Assert.Equal("def"' clone.Lookup[2]);
Magic Number,ProtoBuf.Serializers,Proto3Tests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\Proto3Tests.cs,RoundTripBasic,The following statement contains a magic number: Serializer.Serialize(ms' new HazMapEquiv                  {                      Lookup =                      {                          new HazMapEquiv.Entry { Key = 1' Value = "abc" }'                          new HazMapEquiv.Entry { Value = "" }'                          new HazMapEquiv.Entry { Key = 2' Value = "def" }'                      }                  });
Magic Number,ProtoBuf.Serializers,Proto3Tests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\Proto3Tests.cs,RoundTripBasic,The following statement contains a magic number: Assert.True(RuntimeTypeModel.Default[typeof(HazMap)][3].IsMap);
Magic Number,ProtoBuf.Serializers,Proto3Tests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\Proto3Tests.cs,RoundTripBasic,The following statement contains a magic number: Assert.Equal(DataFormat.Default' RuntimeTypeModel.Default[typeof(HazMap)][3].MapKeyFormat);
Magic Number,ProtoBuf.Serializers,Proto3Tests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\Proto3Tests.cs,RoundTripBasic,The following statement contains a magic number: Assert.Equal(DataFormat.Default' RuntimeTypeModel.Default[typeof(HazMap)][3].MapValueFormat);
Magic Number,ProtoBuf.Serializers,Proto3Tests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\Proto3Tests.cs,ComplexMapShouldNotBreak_Array,The following statement contains a magic number: var arr = new int[] { 1' 2' 3 };
Magic Number,ProtoBuf.Serializers,Proto3Tests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\Proto3Tests.cs,ComplexMapShouldNotBreak_Array,The following statement contains a magic number: var arr = new int[] { 1' 2' 3 };
Magic Number,ProtoBuf.Serializers,Proto3Tests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\Proto3Tests.cs,ComplexMapShouldNotBreak_List,The following statement contains a magic number: var list = new List<int> { 1' 2' 3 };
Magic Number,ProtoBuf.Serializers,Proto3Tests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\Proto3Tests.cs,ComplexMapShouldNotBreak_List,The following statement contains a magic number: var list = new List<int> { 1' 2' 3 };
Magic Number,ProtoBuf.Serializers,Proto3Tests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\Proto3Tests.cs,RoundTripWithDataFormat,The following statement contains a magic number: var data = new HazMapWithDataFormat              {                  Lookup =                  {                      {1' 42 }' {0' 0 }' {2' -8}                  }              };
Magic Number,ProtoBuf.Serializers,Proto3Tests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\Proto3Tests.cs,RoundTripWithDataFormat,The following statement contains a magic number: var data = new HazMapWithDataFormat              {                  Lookup =                  {                      {1' 42 }' {0' 0 }' {2' -8}                  }              };
Magic Number,ProtoBuf.Serializers,Proto3Tests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\Proto3Tests.cs,RoundTripWithDataFormat,The following statement contains a magic number: var data = new HazMapWithDataFormat              {                  Lookup =                  {                      {1' 42 }' {0' 0 }' {2' -8}                  }              };
Magic Number,ProtoBuf.Serializers,Proto3Tests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\Proto3Tests.cs,RoundTripWithDataFormat,The following statement contains a magic number: Assert.Equal(3' clone.Lookup.Count);
Magic Number,ProtoBuf.Serializers,Proto3Tests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\Proto3Tests.cs,RoundTripWithDataFormat,The following statement contains a magic number: Assert.Equal(42' clone.Lookup[1]);
Magic Number,ProtoBuf.Serializers,Proto3Tests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\Proto3Tests.cs,RoundTripWithDataFormat,The following statement contains a magic number: Assert.Equal(-8' clone.Lookup[2]);
Magic Number,ProtoBuf.Serializers,Proto3Tests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\Proto3Tests.cs,RoundTripWithDataFormat,The following statement contains a magic number: Assert.Equal(-8' clone.Lookup[2]);
Magic Number,ProtoBuf.Serializers,Proto3Tests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\Proto3Tests.cs,RoundTripWithDataFormat,The following statement contains a magic number: Serializer.Serialize(ms' new HazMapWithDataFormatEquiv                  {                      Lookup =                      {                          new HazMapWithDataFormatEquiv.Entry { Key = 1' Value = 42 }'                          new HazMapWithDataFormatEquiv.Entry { }'                          new HazMapWithDataFormatEquiv.Entry { Key = 2' Value = -8 }'                      }                  });
Magic Number,ProtoBuf.Serializers,Proto3Tests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\Proto3Tests.cs,RoundTripWithDataFormat,The following statement contains a magic number: Serializer.Serialize(ms' new HazMapWithDataFormatEquiv                  {                      Lookup =                      {                          new HazMapWithDataFormatEquiv.Entry { Key = 1' Value = 42 }'                          new HazMapWithDataFormatEquiv.Entry { }'                          new HazMapWithDataFormatEquiv.Entry { Key = 2' Value = -8 }'                      }                  });
Magic Number,ProtoBuf.Serializers,Proto3Tests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\Proto3Tests.cs,RoundTripWithDataFormat,The following statement contains a magic number: Serializer.Serialize(ms' new HazMapWithDataFormatEquiv                  {                      Lookup =                      {                          new HazMapWithDataFormatEquiv.Entry { Key = 1' Value = 42 }'                          new HazMapWithDataFormatEquiv.Entry { }'                          new HazMapWithDataFormatEquiv.Entry { Key = 2' Value = -8 }'                      }                  });
Magic Number,ProtoBuf.Serializers,Proto3Tests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\Proto3Tests.cs,RoundTripWithDataFormat,The following statement contains a magic number: Assert.True(RuntimeTypeModel.Default[typeof(HazMapWithDataFormat)][3].IsMap);
Magic Number,ProtoBuf.Serializers,Proto3Tests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\Proto3Tests.cs,RoundTripWithDataFormat,The following statement contains a magic number: Assert.Equal(DataFormat.ZigZag' RuntimeTypeModel.Default[typeof(HazMapWithDataFormat)][3].MapKeyFormat);
Magic Number,ProtoBuf.Serializers,Proto3Tests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\Proto3Tests.cs,RoundTripWithDataFormat,The following statement contains a magic number: Assert.Equal(DataFormat.ZigZag' RuntimeTypeModel.Default[typeof(HazMapWithDataFormat)][3].MapValueFormat);
Magic Number,ProtoBuf.Serializers,Proto3Tests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\Proto3Tests.cs,ImplicitMapLastMapWins,The following statement contains a magic number: Serializer.Serialize(ms' new ListKVP              {                  Items = {                      new KeyValuePair<int' string>(1' "abc")'                      new KeyValuePair<int' string>(2' "def")'                      new KeyValuePair<int' string>(3' "ghi")'                      new KeyValuePair<int' string>(2' "jkl")'                      new KeyValuePair<int' string>(1' "mno")'                  }              });
Magic Number,ProtoBuf.Serializers,Proto3Tests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\Proto3Tests.cs,ImplicitMapLastMapWins,The following statement contains a magic number: Serializer.Serialize(ms' new ListKVP              {                  Items = {                      new KeyValuePair<int' string>(1' "abc")'                      new KeyValuePair<int' string>(2' "def")'                      new KeyValuePair<int' string>(3' "ghi")'                      new KeyValuePair<int' string>(2' "jkl")'                      new KeyValuePair<int' string>(1' "mno")'                  }              });
Magic Number,ProtoBuf.Serializers,Proto3Tests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\Proto3Tests.cs,ImplicitMapLastMapWins,The following statement contains a magic number: Serializer.Serialize(ms' new ListKVP              {                  Items = {                      new KeyValuePair<int' string>(1' "abc")'                      new KeyValuePair<int' string>(2' "def")'                      new KeyValuePair<int' string>(3' "ghi")'                      new KeyValuePair<int' string>(2' "jkl")'                      new KeyValuePair<int' string>(1' "mno")'                  }              });
Magic Number,ProtoBuf.Serializers,Proto3Tests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\Proto3Tests.cs,ImplicitMapLastMapWins,The following statement contains a magic number: Assert.Equal(3' obj.Items.Count);
Magic Number,ProtoBuf.Serializers,Proto3Tests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\Proto3Tests.cs,ImplicitMapLastMapWins,The following statement contains a magic number: Assert.Equal("jkl"' obj.Items[2]);
Magic Number,ProtoBuf.Serializers,Proto3Tests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\Proto3Tests.cs,ImplicitMapLastMapWins,The following statement contains a magic number: Assert.Equal("ghi"' obj.Items[3]);
Magic Number,ProtoBuf.Serializers,Proto3Tests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\Proto3Tests.cs,ExplicitMapLastMapWins,The following statement contains a magic number: Serializer.Serialize(ms' new ListKVP              {                  Items = {                      new KeyValuePair<int' string>(1' "abc")'                      new KeyValuePair<int' string>(2' "def")'                      new KeyValuePair<int' string>(3' "ghi")'                      new KeyValuePair<int' string>(2' "jkl")'                      new KeyValuePair<int' string>(1' "mno")'                  }              });
Magic Number,ProtoBuf.Serializers,Proto3Tests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\Proto3Tests.cs,ExplicitMapLastMapWins,The following statement contains a magic number: Serializer.Serialize(ms' new ListKVP              {                  Items = {                      new KeyValuePair<int' string>(1' "abc")'                      new KeyValuePair<int' string>(2' "def")'                      new KeyValuePair<int' string>(3' "ghi")'                      new KeyValuePair<int' string>(2' "jkl")'                      new KeyValuePair<int' string>(1' "mno")'                  }              });
Magic Number,ProtoBuf.Serializers,Proto3Tests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\Proto3Tests.cs,ExplicitMapLastMapWins,The following statement contains a magic number: Serializer.Serialize(ms' new ListKVP              {                  Items = {                      new KeyValuePair<int' string>(1' "abc")'                      new KeyValuePair<int' string>(2' "def")'                      new KeyValuePair<int' string>(3' "ghi")'                      new KeyValuePair<int' string>(2' "jkl")'                      new KeyValuePair<int' string>(1' "mno")'                  }              });
Magic Number,ProtoBuf.Serializers,Proto3Tests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\Proto3Tests.cs,ExplicitMapLastMapWins,The following statement contains a magic number: Assert.Equal(3' obj.Items.Count);
Magic Number,ProtoBuf.Serializers,Proto3Tests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\Proto3Tests.cs,ExplicitMapLastMapWins,The following statement contains a magic number: Assert.Equal("jkl"' obj.Items[2]);
Magic Number,ProtoBuf.Serializers,Proto3Tests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\Proto3Tests.cs,ExplicitMapLastMapWins,The following statement contains a magic number: Assert.Equal("ghi"' obj.Items[3]);
Magic Number,ProtoBuf.Serializers,Proto3Tests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\Proto3Tests.cs,DisabledMapFails,The following statement contains a magic number: Serializer.Serialize(ms' new ListKVP              {                  Items = {                      new KeyValuePair<int' string>(1' "abc")'                      new KeyValuePair<int' string>(2' "def")'                      new KeyValuePair<int' string>(3' "ghi")'                      new KeyValuePair<int' string>(2' "jkl")'                      new KeyValuePair<int' string>(1' "mno")'                  }              });
Magic Number,ProtoBuf.Serializers,Proto3Tests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\Proto3Tests.cs,DisabledMapFails,The following statement contains a magic number: Serializer.Serialize(ms' new ListKVP              {                  Items = {                      new KeyValuePair<int' string>(1' "abc")'                      new KeyValuePair<int' string>(2' "def")'                      new KeyValuePair<int' string>(3' "ghi")'                      new KeyValuePair<int' string>(2' "jkl")'                      new KeyValuePair<int' string>(1' "mno")'                  }              });
Magic Number,ProtoBuf.Serializers,Proto3Tests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\Proto3Tests.cs,DisabledMapFails,The following statement contains a magic number: Serializer.Serialize(ms' new ListKVP              {                  Items = {                      new KeyValuePair<int' string>(1' "abc")'                      new KeyValuePair<int' string>(2' "def")'                      new KeyValuePair<int' string>(3' "ghi")'                      new KeyValuePair<int' string>(2' "jkl")'                      new KeyValuePair<int' string>(1' "mno")'                  }              });
Magic Number,ProtoBuf.unittest.Serializers,KeyValuePairTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\KeyValuePairTests.cs,BasicPairTest,The following statement contains a magic number: var pair = new KeyValuePair<int' string>(123' "abc");
Magic Number,ProtoBuf.unittest.Serializers,KeyValuePairTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\KeyValuePairTests.cs,DictionaryInt32KeyTest,The following statement contains a magic number: var data = new Dictionary<int' string> { { 123' "abc" }' { 456' "def" } };
Magic Number,ProtoBuf.unittest.Serializers,KeyValuePairTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\KeyValuePairTests.cs,DictionaryInt32KeyTest,The following statement contains a magic number: var data = new Dictionary<int' string> { { 123' "abc" }' { 456' "def" } };
Magic Number,ProtoBuf.unittest.Serializers,KeyValuePairTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\KeyValuePairTests.cs,DictionaryInt32KeyTest,The following statement contains a magic number: Assert.Equal(2' clone.Count);
Magic Number,ProtoBuf.unittest.Serializers,KeyValuePairTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\KeyValuePairTests.cs,DictionaryInt32KeyTest,The following statement contains a magic number: Assert.Equal("abc"' clone[123]);
Magic Number,ProtoBuf.unittest.Serializers,KeyValuePairTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\KeyValuePairTests.cs,DictionaryInt32KeyTest,The following statement contains a magic number: Assert.Equal("def"' clone[456]);
Magic Number,ProtoBuf.unittest.Serializers,KeyValuePairTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\KeyValuePairTests.cs,DictionaryInt32KeyTest,The following statement contains a magic number: Assert.Equal(2' clone.Count);
Magic Number,ProtoBuf.unittest.Serializers,KeyValuePairTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\KeyValuePairTests.cs,DictionaryInt32KeyTest,The following statement contains a magic number: Assert.Equal("abc"' clone[123]);
Magic Number,ProtoBuf.unittest.Serializers,KeyValuePairTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\KeyValuePairTests.cs,DictionaryInt32KeyTest,The following statement contains a magic number: Assert.Equal("def"' clone[456]);
Magic Number,ProtoBuf.unittest.Serializers,KeyValuePairTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\KeyValuePairTests.cs,DictionaryInt32KeyTest,The following statement contains a magic number: Assert.Equal(2' clone.Count);
Magic Number,ProtoBuf.unittest.Serializers,KeyValuePairTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\KeyValuePairTests.cs,DictionaryInt32KeyTest,The following statement contains a magic number: Assert.Equal("abc"' clone[123]);
Magic Number,ProtoBuf.unittest.Serializers,KeyValuePairTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\KeyValuePairTests.cs,DictionaryInt32KeyTest,The following statement contains a magic number: Assert.Equal("def"' clone[456]);
Magic Number,ProtoBuf.unittest.Serializers,KeyValuePairTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\KeyValuePairTests.cs,DictionarySingleKeyTest,The following statement contains a magic number: var data = new Dictionary<float' string> { { 123' "abc" }' { 456' "def" } };
Magic Number,ProtoBuf.unittest.Serializers,KeyValuePairTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\KeyValuePairTests.cs,DictionarySingleKeyTest,The following statement contains a magic number: var data = new Dictionary<float' string> { { 123' "abc" }' { 456' "def" } };
Magic Number,ProtoBuf.unittest.Serializers,KeyValuePairTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\KeyValuePairTests.cs,DictionarySingleKeyTest,The following statement contains a magic number: Assert.Equal(2' clone.Count);
Magic Number,ProtoBuf.unittest.Serializers,KeyValuePairTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\KeyValuePairTests.cs,DictionarySingleKeyTest,The following statement contains a magic number: Assert.Equal("abc"' clone[123]);
Magic Number,ProtoBuf.unittest.Serializers,KeyValuePairTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\KeyValuePairTests.cs,DictionarySingleKeyTest,The following statement contains a magic number: Assert.Equal("def"' clone[456]);
Magic Number,ProtoBuf.unittest.Serializers,KeyValuePairTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\KeyValuePairTests.cs,DictionarySingleKeyTest,The following statement contains a magic number: Assert.Equal(2' clone.Count);
Magic Number,ProtoBuf.unittest.Serializers,KeyValuePairTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\KeyValuePairTests.cs,DictionarySingleKeyTest,The following statement contains a magic number: Assert.Equal("abc"' clone[123]);
Magic Number,ProtoBuf.unittest.Serializers,KeyValuePairTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\KeyValuePairTests.cs,DictionarySingleKeyTest,The following statement contains a magic number: Assert.Equal("def"' clone[456]);
Magic Number,ProtoBuf.unittest.Serializers,KeyValuePairTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\KeyValuePairTests.cs,DictionarySingleKeyTest,The following statement contains a magic number: Assert.Equal(2' clone.Count);
Magic Number,ProtoBuf.unittest.Serializers,KeyValuePairTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\KeyValuePairTests.cs,DictionarySingleKeyTest,The following statement contains a magic number: Assert.Equal("abc"' clone[123]);
Magic Number,ProtoBuf.unittest.Serializers,KeyValuePairTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\KeyValuePairTests.cs,DictionarySingleKeyTest,The following statement contains a magic number: Assert.Equal("def"' clone[456]);
Magic Number,ProtoBuf.unittest.Serializers,KeyValuePairTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\KeyValuePairTests.cs,TypeWithPairTest,The following statement contains a magic number: var orig = new TypeWithPair { Pair = new KeyValuePair<string' decimal>("abc"' 123.45M) };
Magic Number,ProtoBuf.unittest.Serializers,KeyValuePairTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\KeyValuePairTests.cs,TypeWithPairTest,The following statement contains a magic number: Assert.Equal(123.45M' clone.Pair.Value);
Magic Number,ProtoBuf.unittest.Serializers,KeyValuePairTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\KeyValuePairTests.cs,TypeWithPairTest,The following statement contains a magic number: Assert.Equal(123.45M' clone.Pair.Value);
Magic Number,ProtoBuf.unittest.Serializers,KeyValuePairTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\KeyValuePairTests.cs,TypeWithPairTest,The following statement contains a magic number: Assert.Equal(123.45M' clone.Pair.Value);
Magic Number,ProtoBuf.unittest.Serializers,KeyValuePairTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\KeyValuePairTests.cs,TypeWithDictionaryTest,The following statement contains a magic number: var orig = new TypeWithDictionary { Data = new Dictionary<string' decimal> { { "abc"' 123.45M } } };
Magic Number,ProtoBuf.unittest.Serializers,KeyValuePairTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\KeyValuePairTests.cs,TypeWithDictionaryTest,The following statement contains a magic number: Assert.Equal(123.45M' clone.Data["abc"]);
Magic Number,ProtoBuf.unittest.Serializers,KeyValuePairTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\KeyValuePairTests.cs,TypeWithDictionaryTest,The following statement contains a magic number: Assert.Equal(123.45M' clone.Data["abc"]);
Magic Number,ProtoBuf.unittest.Serializers,KeyValuePairTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\KeyValuePairTests.cs,TypeWithDictionaryTest,The following statement contains a magic number: Assert.Equal(123.45M' clone.Data["abc"]);
Magic Number,ProtoBuf.unittest.Serializers,KeyValuePairTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\KeyValuePairTests.cs,ShouldWorkWithAutoLoadDisabledRuntime,The following statement contains a magic number: var orig = new TypeWithDictionary {Data = new Dictionary<string' decimal> {{"abc"' 123.45M}}};
Magic Number,ProtoBuf.unittest.Serializers,KeyValuePairTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\KeyValuePairTests.cs,ShouldWorkWithAutoLoadDisabledRuntime,The following statement contains a magic number: Assert.Equal(123.45M' clone.Data["abc"]);
Magic Number,ProtoBuf.unittest.Serializers,KeyValuePairTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\KeyValuePairTests.cs,ShouldWorkWithAutoLoadDisabledAndAddedExplicitlyRuntime,The following statement contains a magic number: var orig = new TypeWithDictionary { Data = new Dictionary<string' decimal> { { "abc"' 123.45M } } };
Magic Number,ProtoBuf.unittest.Serializers,KeyValuePairTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\KeyValuePairTests.cs,ShouldWorkWithAutoLoadDisabledAndAddedExplicitlyRuntime,The following statement contains a magic number: Assert.Equal(123.45M' clone.Data["abc"]);
Magic Number,ProtoBuf.unittest.Serializers,KeyValuePairTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\KeyValuePairTests.cs,ShouldWorkWithAutoLoadDisabledCompileInPlace,The following statement contains a magic number: var orig = new TypeWithDictionary {Data = new Dictionary<string' decimal> {{"abc"' 123.45M}}};
Magic Number,ProtoBuf.unittest.Serializers,KeyValuePairTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\KeyValuePairTests.cs,ShouldWorkWithAutoLoadDisabledCompileInPlace,The following statement contains a magic number: Assert.Equal(123.45M' clone.Data["abc"]);
Magic Number,ProtoBuf.unittest.Serializers,KeyValuePairTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\KeyValuePairTests.cs,ShouldWorkWithAutoLoadDisabledCompile,The following statement contains a magic number: var orig = new TypeWithDictionary { Data = new Dictionary<string' decimal> { { "abc"' 123.45M } } };
Magic Number,ProtoBuf.unittest.Serializers,KeyValuePairTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\KeyValuePairTests.cs,ShouldWorkWithAutoLoadDisabledCompile,The following statement contains a magic number: Assert.Equal(123.45M' clone.Data["abc"]);
Magic Number,ProtoBuf.unittest.Serializers,KeyValuePairTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\KeyValuePairTests.cs,ShouldWorkWithAutoLoadDisabledCompile,The following statement contains a magic number: Assert.Equal(123.45M' clone.Data["abc"]);
Magic Number,ProtoBuf.unittest.Serializers,KeyValuePairTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\KeyValuePairTests.cs,TypeWithIDictionaryTest,The following statement contains a magic number: var orig = new TypeWithIDictionary { Data = new Dictionary<string' decimal> { { "abc"' 123.45M } } };
Magic Number,ProtoBuf.unittest.Serializers,KeyValuePairTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\KeyValuePairTests.cs,TypeWithIDictionaryTest,The following statement contains a magic number: Assert.Equal(123.45M' clone.Data["abc"]);
Magic Number,ProtoBuf.unittest.Serializers,KeyValuePairTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\KeyValuePairTests.cs,TypeWithIDictionaryTest,The following statement contains a magic number: Assert.Equal(123.45M' clone.Data["abc"]);
Magic Number,ProtoBuf.unittest.Serializers,KeyValuePairTests,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\KeyValuePairTests.cs,TypeWithIDictionaryTest,The following statement contains a magic number: Assert.Equal(123.45M' clone.Data["abc"]);
Magic Number,ProtoBuf.unittest.Serializers,SubItems,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\SubItems.cs,TestWriteSubItemWithShortBlob,The following statement contains a magic number: Util.Test((ref ProtoWriter.State st) =>              {                  st.WriteFieldHeader(5' WireType.String);  #pragma warning disable CS0618                  SubItemToken token = st.StartSubItem(new object());                  st.WriteFieldHeader(6' WireType.String);                  st.WriteBytes(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7 });                  st.EndSubItem(token);  #pragma warning restore CS0618              }' "2A" // 5 * 8 + 2 = 42               + "0A" // sub-item length = 10               + "32" // 6 * 8 + 2 = 50 = 0x32               + "08" // BLOB length               + "0001020304050607");
Magic Number,ProtoBuf.unittest.Serializers,SubItems,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\SubItems.cs,TestWriteSubItemWithShortBlob,The following statement contains a magic number: Util.Test((ref ProtoWriter.State st) =>              {                  st.WriteFieldHeader(5' WireType.String);  #pragma warning disable CS0618                  SubItemToken token = st.StartSubItem(new object());                  st.WriteFieldHeader(6' WireType.String);                  st.WriteBytes(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7 });                  st.EndSubItem(token);  #pragma warning restore CS0618              }' "2A" // 5 * 8 + 2 = 42               + "0A" // sub-item length = 10               + "32" // 6 * 8 + 2 = 50 = 0x32               + "08" // BLOB length               + "0001020304050607");
Magic Number,ProtoBuf.unittest.Serializers,SubItems,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\SubItems.cs,TestWriteSubItemWithShortBlob,The following statement contains a magic number: Util.Test((ref ProtoWriter.State st) =>              {                  st.WriteFieldHeader(5' WireType.String);  #pragma warning disable CS0618                  SubItemToken token = st.StartSubItem(new object());                  st.WriteFieldHeader(6' WireType.String);                  st.WriteBytes(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7 });                  st.EndSubItem(token);  #pragma warning restore CS0618              }' "2A" // 5 * 8 + 2 = 42               + "0A" // sub-item length = 10               + "32" // 6 * 8 + 2 = 50 = 0x32               + "08" // BLOB length               + "0001020304050607");
Magic Number,ProtoBuf.unittest.Serializers,SubItems,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\SubItems.cs,TestWriteSubItemWithShortBlob,The following statement contains a magic number: Util.Test((ref ProtoWriter.State st) =>              {                  st.WriteFieldHeader(5' WireType.String);  #pragma warning disable CS0618                  SubItemToken token = st.StartSubItem(new object());                  st.WriteFieldHeader(6' WireType.String);                  st.WriteBytes(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7 });                  st.EndSubItem(token);  #pragma warning restore CS0618              }' "2A" // 5 * 8 + 2 = 42               + "0A" // sub-item length = 10               + "32" // 6 * 8 + 2 = 50 = 0x32               + "08" // BLOB length               + "0001020304050607");
Magic Number,ProtoBuf.unittest.Serializers,SubItems,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\SubItems.cs,TestWriteSubItemWithShortBlob,The following statement contains a magic number: Util.Test((ref ProtoWriter.State st) =>              {                  st.WriteFieldHeader(5' WireType.String);  #pragma warning disable CS0618                  SubItemToken token = st.StartSubItem(new object());                  st.WriteFieldHeader(6' WireType.String);                  st.WriteBytes(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7 });                  st.EndSubItem(token);  #pragma warning restore CS0618              }' "2A" // 5 * 8 + 2 = 42               + "0A" // sub-item length = 10               + "32" // 6 * 8 + 2 = 50 = 0x32               + "08" // BLOB length               + "0001020304050607");
Magic Number,ProtoBuf.unittest.Serializers,SubItems,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\SubItems.cs,TestWriteSubItemWithShortBlob,The following statement contains a magic number: Util.Test((ref ProtoWriter.State st) =>              {                  st.WriteFieldHeader(5' WireType.String);  #pragma warning disable CS0618                  SubItemToken token = st.StartSubItem(new object());                  st.WriteFieldHeader(6' WireType.String);                  st.WriteBytes(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7 });                  st.EndSubItem(token);  #pragma warning restore CS0618              }' "2A" // 5 * 8 + 2 = 42               + "0A" // sub-item length = 10               + "32" // 6 * 8 + 2 = 50 = 0x32               + "08" // BLOB length               + "0001020304050607");
Magic Number,ProtoBuf.unittest.Serializers,SubItems,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\SubItems.cs,TestWriteSubItemWithShortBlob,The following statement contains a magic number: Util.Test((ref ProtoWriter.State st) =>              {                  st.WriteFieldHeader(5' WireType.String);  #pragma warning disable CS0618                  SubItemToken token = st.StartSubItem(new object());                  st.WriteFieldHeader(6' WireType.String);                  st.WriteBytes(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7 });                  st.EndSubItem(token);  #pragma warning restore CS0618              }' "2A" // 5 * 8 + 2 = 42               + "0A" // sub-item length = 10               + "32" // 6 * 8 + 2 = 50 = 0x32               + "08" // BLOB length               + "0001020304050607");
Magic Number,ProtoBuf.unittest.Serializers,SubItems,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\SubItems.cs,TestWriteSubItemWithShortBlob,The following statement contains a magic number: Util.Test((ref ProtoWriter.State st) =>              {                  st.WriteFieldHeader(5' WireType.String);  #pragma warning disable CS0618                  SubItemToken token = st.StartSubItem(new object());                  st.WriteFieldHeader(6' WireType.String);                  st.WriteBytes(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7 });                  st.EndSubItem(token);  #pragma warning restore CS0618              }' "2A" // 5 * 8 + 2 = 42               + "0A" // sub-item length = 10               + "32" // 6 * 8 + 2 = 50 = 0x32               + "08" // BLOB length               + "0001020304050607");
Magic Number,ProtoBuf.unittest.Serializers,Util,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\Util.cs,Test,The following statement contains a magic number: byte[] expected = new byte[expectedHex.Length / 2];
Magic Number,ProtoBuf.unittest.Serializers,Util,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\Util.cs,Test,The following statement contains a magic number: expected[i] = (byte)Convert.ToInt32(expectedHex.Substring(i*2'2)'16);
Magic Number,ProtoBuf.unittest.Serializers,Util,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\Util.cs,Test,The following statement contains a magic number: expected[i] = (byte)Convert.ToInt32(expectedHex.Substring(i*2'2)'16);
Magic Number,ProtoBuf.unittest.Serializers,Util,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\Util.cs,Test,The following statement contains a magic number: expected[i] = (byte)Convert.ToInt32(expectedHex.Substring(i*2'2)'16);
Magic Number,ProtoBuf.unittest.Serializers,Util,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\Util.cs,GetHex,The following statement contains a magic number: StringBuilder sb = new StringBuilder(len * 2);
Magic Number,ProtoBuf.unittest.Serializers,Writer,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\Writer.cs,TestVariantInt32,The following statement contains a magic number: i < 128
Magic Number,ProtoBuf.unittest.Serializers,Writer,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\Serializers\Writer.cs,TestVariantInt32,The following statement contains a magic number: Util.Test((ref ProtoWriter.State st) => {                  st.WriteFieldHeader(1' WireType.Varint);                  st.WriteInt32(128);              }' "088001");
Magic Number,ProtoBuf.Schemas,WellKnownTypes,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\WellKnownTypes.cs,DateTime_WellKnownEquiv,The following statement contains a magic number: var nanos = (int)(((time.Ticks % TimeSpan.TicksPerSecond) * 1000000)                  / TimeSpan.TicksPerMillisecond);
Magic Number,ProtoBuf.Schemas,WellKnownTypes,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\WellKnownTypes.cs,DateTime_WellKnownEquiv,The following statement contains a magic number: nanos += 1000000000;
Magic Number,ProtoBuf.Schemas,WellKnownTypes,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\WellKnownTypes.cs,Timestamp_ExpectedValues,The following statement contains a magic number: AssertKnownValue(new Timestamp { Seconds = -62135596800 }' utcMin);
Magic Number,ProtoBuf.Schemas,WellKnownTypes,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\WellKnownTypes.cs,Timestamp_ExpectedValues,The following statement contains a magic number: AssertKnownValue(new Timestamp { Seconds = 253402300799' Nanos = 999999900 }' utcMax);
Magic Number,ProtoBuf.Schemas,WellKnownTypes,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\WellKnownTypes.cs,Timestamp_ExpectedValues,The following statement contains a magic number: AssertKnownValue(new Timestamp { Seconds = 253402300799' Nanos = 999999900 }' utcMax);
Magic Number,ProtoBuf.Schemas,WellKnownTypes,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\WellKnownTypes.cs,Timestamp_ExpectedValues,The following statement contains a magic number: AssertKnownValue(new Timestamp()' new DateTime(1970' 1' 1' 0' 0' 0' DateTimeKind.Utc));
Magic Number,ProtoBuf.Schemas,WellKnownTypes,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\WellKnownTypes.cs,Timestamp_ExpectedValues,The following statement contains a magic number: AssertKnownValue(new Timestamp { Nanos = 1000000 }' new DateTime(1970' 1' 1' 0' 0' 0' 1' DateTimeKind.Utc));
Magic Number,ProtoBuf.Schemas,WellKnownTypes,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\WellKnownTypes.cs,Timestamp_ExpectedValues,The following statement contains a magic number: AssertKnownValue(new Timestamp { Nanos = 1000000 }' new DateTime(1970' 1' 1' 0' 0' 0' 1' DateTimeKind.Utc));
Magic Number,ProtoBuf.Schemas,WellKnownTypes,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\WellKnownTypes.cs,Timestamp_ExpectedValues,The following statement contains a magic number: AssertKnownValue(new Timestamp { Seconds = 3600 }' new DateTime(1970' 1' 1' 1' 0' 0' DateTimeKind.Utc));
Magic Number,ProtoBuf.Schemas,WellKnownTypes,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\WellKnownTypes.cs,Timestamp_ExpectedValues,The following statement contains a magic number: AssertKnownValue(new Timestamp { Seconds = 3600 }' new DateTime(1970' 1' 1' 1' 0' 0' DateTimeKind.Utc));
Magic Number,ProtoBuf.Schemas,WellKnownTypes,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\WellKnownTypes.cs,Timestamp_ExpectedValues,The following statement contains a magic number: AssertKnownValue(new Timestamp { Seconds = -3600 }' new DateTime(1969' 12' 31' 23' 0' 0' DateTimeKind.Utc));
Magic Number,ProtoBuf.Schemas,WellKnownTypes,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\WellKnownTypes.cs,Timestamp_ExpectedValues,The following statement contains a magic number: AssertKnownValue(new Timestamp { Seconds = -3600 }' new DateTime(1969' 12' 31' 23' 0' 0' DateTimeKind.Utc));
Magic Number,ProtoBuf.Schemas,WellKnownTypes,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\WellKnownTypes.cs,Timestamp_ExpectedValues,The following statement contains a magic number: AssertKnownValue(new Timestamp { Seconds = -3600 }' new DateTime(1969' 12' 31' 23' 0' 0' DateTimeKind.Utc));
Magic Number,ProtoBuf.Schemas,WellKnownTypes,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\WellKnownTypes.cs,Timestamp_ExpectedValues,The following statement contains a magic number: AssertKnownValue(new Timestamp { Seconds = -3600 }' new DateTime(1969' 12' 31' 23' 0' 0' DateTimeKind.Utc));
Magic Number,ProtoBuf.Schemas,WellKnownTypes,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\WellKnownTypes.cs,Timestamp_ExpectedValues,The following statement contains a magic number: AssertKnownValue(new Timestamp { Seconds = -3600 }' new DateTime(1969' 12' 31' 23' 0' 0' DateTimeKind.Utc));
Magic Number,ProtoBuf.Schemas,WellKnownTypes,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\WellKnownTypes.cs,Timestamp_ExpectedValues,The following statement contains a magic number: AssertKnownValue(new Timestamp { Seconds = -1' Nanos = 999000000 }' new DateTime(1969' 12' 31' 23' 59' 59' 999' DateTimeKind.Utc));
Magic Number,ProtoBuf.Schemas,WellKnownTypes,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\WellKnownTypes.cs,Timestamp_ExpectedValues,The following statement contains a magic number: AssertKnownValue(new Timestamp { Seconds = -1' Nanos = 999000000 }' new DateTime(1969' 12' 31' 23' 59' 59' 999' DateTimeKind.Utc));
Magic Number,ProtoBuf.Schemas,WellKnownTypes,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\WellKnownTypes.cs,Timestamp_ExpectedValues,The following statement contains a magic number: AssertKnownValue(new Timestamp { Seconds = -1' Nanos = 999000000 }' new DateTime(1969' 12' 31' 23' 59' 59' 999' DateTimeKind.Utc));
Magic Number,ProtoBuf.Schemas,WellKnownTypes,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\WellKnownTypes.cs,Timestamp_ExpectedValues,The following statement contains a magic number: AssertKnownValue(new Timestamp { Seconds = -1' Nanos = 999000000 }' new DateTime(1969' 12' 31' 23' 59' 59' 999' DateTimeKind.Utc));
Magic Number,ProtoBuf.Schemas,WellKnownTypes,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\WellKnownTypes.cs,Timestamp_ExpectedValues,The following statement contains a magic number: AssertKnownValue(new Timestamp { Seconds = -1' Nanos = 999000000 }' new DateTime(1969' 12' 31' 23' 59' 59' 999' DateTimeKind.Utc));
Magic Number,ProtoBuf.Schemas,WellKnownTypes,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\WellKnownTypes.cs,Timestamp_ExpectedValues,The following statement contains a magic number: AssertKnownValue(new Timestamp { Seconds = -1' Nanos = 999000000 }' new DateTime(1969' 12' 31' 23' 59' 59' 999' DateTimeKind.Utc));
Magic Number,ProtoBuf.Schemas,WellKnownTypes,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\WellKnownTypes.cs,Timestamp_ExpectedValues,The following statement contains a magic number: AssertKnownValue(new Timestamp { Seconds = -1' Nanos = 999000000 }' new DateTime(1969' 12' 31' 23' 59' 59' 999' DateTimeKind.Utc));
Magic Number,ProtoBuf.Schemas,WellKnownTypes,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\WellKnownTypes.cs,Timestamp_ExpectedValues,The following statement contains a magic number: AssertKnownValue(new Timestamp { Seconds = -1' Nanos = 999000000 }' new DateTime(1969' 12' 31' 23' 59' 59' 999' DateTimeKind.Utc));
Magic Number,ProtoBuf.Schemas,WellKnownTypes,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\WellKnownTypes.cs,TimeSpan_WellKnownEquiv,The following statement contains a magic number: var nanos = (int)(((time.Ticks % TimeSpan.TicksPerSecond) * 1000000)                 / TimeSpan.TicksPerMillisecond);
Missing Default,FX11,FX11_Program,D:\research\architectureSmells\repos\mgravell_protobuf-net\src\protobuf-net.Test\FX11\Program.cs,Read,The following switch statement is missing a default case: switch (num)                  {                      case 1:                          if (product1 == null)                          {                              product1 = new Product();                          }                          product1.ProductID = state.ReadInt32();                          continue;                      case 2:                          if (product1 == null)                          {                              product1 = new Product();                          }                          product1.ProductName = state.ReadString();                          continue;                      case 3:                          if (product1 == null)                          {                              product1 = new Product();                          }                          product1.SupplierID = new int?(state.ReadInt32());                          continue;                  }
