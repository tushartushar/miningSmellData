Implementation smell,Namespace,Class,File,Method,Description
Long Method,ProtoBuf.Precompile,PreCompileContext,D:\research\architectureSmells\repos\mgravell_protobuf-net\assorted\precompile\Program.cs,Execute,The method has 117 lines of code.
Complex Method,ProtoBuf.Precompile,PreCompileContext,D:\research\architectureSmells\repos\mgravell_protobuf-net\assorted\precompile\Program.cs,TryInferFramework,Cyclomatic complexity of the method is 11
Complex Method,ProtoBuf.Precompile,PreCompileContext,D:\research\architectureSmells\repos\mgravell_protobuf-net\assorted\precompile\Program.cs,SanityCheck,Cyclomatic complexity of the method is 18
Complex Method,ProtoBuf.Precompile,PreCompileContext,D:\research\architectureSmells\repos\mgravell_protobuf-net\assorted\precompile\Program.cs,Execute,Cyclomatic complexity of the method is 19
Complex Method,ProtoBuf.Precompile,CommandLineAttribute,D:\research\architectureSmells\repos\mgravell_protobuf-net\assorted\precompile\Program.cs,TryParse,Cyclomatic complexity of the method is 14
Long Statement,ProtoBuf.Precompile,PreCompileContext,D:\research\architectureSmells\repos\mgravell_protobuf-net\assorted\precompile\Program.cs,Execute,The length of the statement  "                if (nameOnly == "IKVM.Reflection" && args.RequestingAssembly != null && args.RequestingAssembly.FullName.StartsWith("protobuf-net")) " is 132.
Long Statement,ProtoBuf.Precompile,PreCompileContext,D:\research\architectureSmells\repos\mgravell_protobuf-net\assorted\precompile\Program.cs,Execute,The length of the statement  "                    throw new InvalidOperationException("This operation needs access to the protobuf-net.dll used by your library' **in addition to** the protobuf-net.dll that is included with the precompiler; the easiest way to do this is to ensure the referenced protobuf-net.dll is in the same folder as your library."); " is 303.
Missing Default,ProtoBuf.Precompile,PreCompileContext,D:\research\architectureSmells\repos\mgravell_protobuf-net\assorted\precompile\Program.cs,TryInferFramework,The following switch statement is missing a default case: switch(parts[i].Substring(0'idx))                                      {                                          case "Version":                                              version = parts[i].Substring(idx + 1);                                              break;                                          case "Profile":                                              profile = parts[i].Substring(idx + 1);                                              break;                                      }
Missing Default,ProtoBuf.Precompile,PreCompileContext,D:\research\architectureSmells\repos\mgravell_protobuf-net\assorted\precompile\Program.cs,Execute,The following switch statement is missing a default case: switch(name)                           {                              case "ProtoBuf.ProtoContractAttribute":                                  add = true;                                  break;                          }
