Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,ServicePublisher.MXD,MapService10_1,C:\repos\Esri_arcgis-osm-editor\src\ServicePublisher10_1\MXD\MapService10_1.cs,UnPublish,The method has 7 parameters. Parameters: sServer' sServerURL' sServiceName' sServiceFolder' sAgsAdminUser' sAgsAdminPwd' sPythonScriptFile
Long Parameter List,ServicePublisher.MXD,MapService10_1,C:\repos\Esri_arcgis-osm-editor\src\ServicePublisher10_1\MXD\MapService10_1.cs,PublishMapToServer,The method has 6 parameters. Parameters: sAgsConn' sServiceName' sMxd' sOutputSdDir' sPublishFolder' sPythonScriptFile
Long Parameter List,ServicePublisher.MXD,MxdManager,C:\repos\Esri_arcgis-osm-editor\src\ServicePublisher10_1\MXD\MxdManager.cs,CreateMxd,The method has 8 parameters. Parameters: sMxdTemplate' sPathToMXD' ArcGISServer' sMxdFile' sDBConn' sDataSet' sPythonScriptDir' bSde
Long Parameter List,ServicePublisher.MXD,MxdManager,C:\repos\Esri_arcgis-osm-editor\src\ServicePublisher10_1\MXD\MxdManager.cs,PublishMap10_1,The method has 6 parameters. Parameters: sServiceName' sServer' sMxd' sMxdOutputDir' sAgsConnFile' sPythonScriptFile
Long Parameter List,ServicePublisher.MXD,PublishMXD,C:\repos\Esri_arcgis-osm-editor\src\ServicePublisher10_1\MXD\PublishMXD.cs,PublishMXD,The method has 7 parameters. Parameters: sMXDTemplate' ArcGISServer' sServiceName' sDBConn' sDataset' sOutputDirectory' bSDE
Long Parameter List,ServicePublisher,Services,C:\repos\Esri_arcgis-osm-editor\src\ServicePublisher10_1\Services.cs,DeleteService,The method has 10 parameters. Parameters: sArcGisServer' sAgsInstance' sConfigID' sFeatureDataset' sServiceName' sMxdOutput' sSDEConnection' sAgsUser' sAgsPwd' sPythonScriptDir
Long Parameter List,ServicePublisher,Services,C:\repos\Esri_arcgis-osm-editor\src\ServicePublisher10_1\Services.cs,CreateService10_1,The method has 8 parameters. Parameters: sConnectionToSDEorGDB' sArcGisServer' sServiceName' sMxdTemplate' bSde' MxdOutput' agsConnection' sPythonScriptDir
Long Parameter List,ServicePublisher,Services,C:\repos\Esri_arcgis-osm-editor\src\ServicePublisher10_1\Services.cs,CreateService,The method has 6 parameters. Parameters: sConnectionToSDEorGDB' sArcGisServer' sServiceName' sMxdTemplate' bSde' MxdOutput
Long Statement,ServicePublisher.MXD,MapService10_1,C:\repos\Esri_arcgis-osm-editor\src\ServicePublisher10_1\MXD\MapService10_1.cs,Exists,The length of the statement  "                string sResults = client.DownloadString("http://" + serverName + ":6080/arcgis/rest/services/" + serviceFolder + serviceName + "/MapServer?f=pjson"); " is 149.
Long Statement,ServicePublisher.MXD,MxdManager,C:\repos\Esri_arcgis-osm-editor\src\ServicePublisher10_1\MXD\MxdManager.cs,CreateMxd,The length of the statement  "                if (!(bOk)) throw new ApplicationException("Error: Data check failed for " + sMxdFile + Environment.NewLine + pRunPython.ErrOutput); " is 132.
Long Statement,ServicePublisher.MXD,MxdManager,C:\repos\Esri_arcgis-osm-editor\src\ServicePublisher10_1\MXD\MxdManager.cs,CreateMxd,The length of the statement  "                sArgs = "\"" + Path.Combine(sPythonScriptDir' CHANGEDATASOURCE_PY) + "\" \"" + _sNewDocument + "\" \"" + sDBConn + "\" \"" + sDataSet + "\" " + bSde; " is 149.
Long Statement,ServicePublisher.MXD,MxdManager,C:\repos\Esri_arcgis-osm-editor\src\ServicePublisher10_1\MXD\MxdManager.cs,CreateMxd,The length of the statement  "                if (!(bOk)) throw new ApplicationException("Error changing datasources in " + sMxdFile + Environment.NewLine + pRunPython.ErrOutput); " is 133.
Long Statement,ServicePublisher.MXD,MxdManager,C:\repos\Esri_arcgis-osm-editor\src\ServicePublisher10_1\MXD\MxdManager.cs,DeleteFeatureDataset,The length of the statement  "            if (!(bOk)) throw new ApplicationException("Error removing dataset " + sFeatureDataset + Environment.NewLine + pRunPython.ErrOutput);             " is 133.
Long Statement,ServicePublisher,Services,C:\repos\Esri_arcgis-osm-editor\src\ServicePublisher10_1\Services.cs,DeleteService,The length of the statement  "      mapService.UnPublish(sArcGisServer' sAgsUrl' sServiceName' ""' sAgsUser' sAgsPwd' System.IO.Path.Combine(sPythonScriptDir' UNPUBLISHSVC_PY)); " is 141.
Long Statement,ServicePublisher,Services,C:\repos\Esri_arcgis-osm-editor\src\ServicePublisher10_1\Services.cs,DeleteService,The length of the statement  "      mxdManager.DeleteFeatureDataset(sFeatureDataset' sSDEConnection' System.IO.Path.Combine(sPythonScriptDir' REMOVEDATA_PY)); " is 122.
Long Statement,ServicePublisher,Services,C:\repos\Esri_arcgis-osm-editor\src\ServicePublisher10_1\Services.cs,CreateService10_1,The length of the statement  "          sConnectionToSDEorGDB = sConnectionToSDEorGDB.Substring(0' sConnectionToSDEorGDB.Length - (sConnectionToSDEorGDB.Length - sConnectionToSDEorGDB.LastIndexOf("\\") + 1)); " is 168.
Long Statement,ServicePublisher,Services,C:\repos\Esri_arcgis-osm-editor\src\ServicePublisher10_1\Services.cs,CreateService10_1,The length of the statement  "          sConnectionToSDEorGDB = sConnectionToSDEorGDB.Substring(0' sConnectionToSDEorGDB.Length - (sConnectionToSDEorGDB.Length - sConnectionToSDEorGDB.LastIndexOf("\\"))); " is 164.
Long Statement,ServicePublisher,Services,C:\repos\Esri_arcgis-osm-editor\src\ServicePublisher10_1\Services.cs,CreateService10_1,The length of the statement  "        pPublishMxd = new MXD.PublishMXD(sMxdTemplate' sArcGisServer' sServiceName' sConnectionToSDEorGDB' sDataSet' sMxdOutputDir' bSde); " is 130.
Long Statement,ServicePublisher,Services,C:\repos\Esri_arcgis-osm-editor\src\ServicePublisher10_1\Services.cs,CreateService,The length of the statement  "          sConnectionToSDEorGDB = sConnectionToSDEorGDB.Substring(0' sConnectionToSDEorGDB.Length - (sConnectionToSDEorGDB.Length - sConnectionToSDEorGDB.LastIndexOf("\\") + 1)); " is 168.
Long Statement,ServicePublisher,Services,C:\repos\Esri_arcgis-osm-editor\src\ServicePublisher10_1\Services.cs,CreateService,The length of the statement  "          sConnectionToSDEorGDB = sConnectionToSDEorGDB.Substring(0' sConnectionToSDEorGDB.Length - (sConnectionToSDEorGDB.Length - sConnectionToSDEorGDB.LastIndexOf("\\"))); " is 164.
Long Statement,ServicePublisher,Services,C:\repos\Esri_arcgis-osm-editor\src\ServicePublisher10_1\Services.cs,CreateService,The length of the statement  "        pPublishMxd = new MXD.PublishMXD(sMxdTemplate' sArcGisServer' sServiceName' sConnectionToSDEorGDB' sDataSet' sMxdOutputDir' bSde); " is 130.
Magic Number,ServicePublisher.MXD,RunPython,C:\repos\Esri_arcgis-osm-editor\src\ServicePublisher10_1\MXD\RunPython.cs,RunScript,The following statement contains a magic number: return RunPyScript(sArguments' 30);
Magic Number,ServicePublisher.MXD,RunPython,C:\repos\Esri_arcgis-osm-editor\src\ServicePublisher10_1\MXD\RunPython.cs,RunPyScript,The following statement contains a magic number: try              {                  // Get sPythonDir from registry                  string sPythonDir = @"C:\Python27\ArcGIS10.1\";                    string subkey = @"SOFTWARE\Python\PythonCore\2.7\InstallPath";                  string value64 = string.Empty;                   string value32 = string.Empty;                   RegistryKey localKey = RegistryKey.OpenBaseKey(Microsoft.Win32.RegistryHive.LocalMachine' RegistryView.Registry64);                  localKey = localKey.OpenSubKey(subkey);                  if (localKey != null)                  {                      sPythonDir = localKey.GetValue("").ToString();                  }                  else                  {                      RegistryKey localKey32 = RegistryKey.OpenBaseKey(Microsoft.Win32.RegistryHive.LocalMachine' RegistryView.Registry32);                      localKey32 = localKey32.OpenSubKey(subkey);                      if (localKey32 != null)                      {                          sPythonDir = localKey32.GetValue("").ToString();                      }                    }                    sCommand = Path.Combine(sPythonDir' "python.exe") + " " + sArguments;                                  // Create the ProcessStartInfo using "cmd" as the program to be run'                  // and "/c " as the parameters.                  // "/c" tells cmd that you want it to execute the command that follows'                  // then exit.                  procStartInfo = new System.Diagnostics.ProcessStartInfo("cmd"' "/c " + sCommand);                    // The following commands are needed to redirect the standard output.                  // This means that it will be redirected to the Process.StandardOutput StreamReader.                  procStartInfo.RedirectStandardOutput = true;                  procStartInfo.RedirectStandardError = true;                  procStartInfo.UseShellExecute = false;                    // Do not create the black window.                  procStartInfo.CreateNoWindow = true;                    // Now you create a process' assign its ProcessStartInfo' and start it.                  proc = new System.Diagnostics.Process();                  proc.StartInfo = procStartInfo;                  proc.Start();                  proc.WaitForExit(iTimeOutMinutes * 60 * 1000);                      // Get the output into a string.                  _errOutput = proc.StandardError.ReadToEnd();                  _stdOutput = proc.StandardOutput.ReadToEnd().TrimEnd('\r'' '\n');                                   int exitCode = proc.ExitCode;                  Console.WriteLine("Exit Code: {0}"' proc.ExitCode);                    if (exitCode != 0 && (!(string.IsNullOrEmpty(_errOutput))))                  {                      _errOutput = "Error in RunPyScript! Command: " + sCommand + Environment.NewLine + _errOutput;                      return false;                  }                    return true;              }              catch (Exception objException)              {                  Console.WriteLine(objException.Message);                  // Log the exception and errors.                  _errOutput = "Error in RunPyScript! Command: " + sCommand + Environment.NewLine + objException.Message;                  return false;              }              finally              {                  if (!(proc == null))                  {                      if (!(proc.HasExited))                      {                          proc.Kill();                      }                      proc = null;                  }                  rk = null;              }
Magic Number,ServicePublisher.MXD,RunPython,C:\repos\Esri_arcgis-osm-editor\src\ServicePublisher10_1\MXD\RunPython.cs,RunPyScript,The following statement contains a magic number: try              {                  // Get sPythonDir from registry                  string sPythonDir = @"C:\Python27\ArcGIS10.1\";                    string subkey = @"SOFTWARE\Python\PythonCore\2.7\InstallPath";                  string value64 = string.Empty;                   string value32 = string.Empty;                   RegistryKey localKey = RegistryKey.OpenBaseKey(Microsoft.Win32.RegistryHive.LocalMachine' RegistryView.Registry64);                  localKey = localKey.OpenSubKey(subkey);                  if (localKey != null)                  {                      sPythonDir = localKey.GetValue("").ToString();                  }                  else                  {                      RegistryKey localKey32 = RegistryKey.OpenBaseKey(Microsoft.Win32.RegistryHive.LocalMachine' RegistryView.Registry32);                      localKey32 = localKey32.OpenSubKey(subkey);                      if (localKey32 != null)                      {                          sPythonDir = localKey32.GetValue("").ToString();                      }                    }                    sCommand = Path.Combine(sPythonDir' "python.exe") + " " + sArguments;                                  // Create the ProcessStartInfo using "cmd" as the program to be run'                  // and "/c " as the parameters.                  // "/c" tells cmd that you want it to execute the command that follows'                  // then exit.                  procStartInfo = new System.Diagnostics.ProcessStartInfo("cmd"' "/c " + sCommand);                    // The following commands are needed to redirect the standard output.                  // This means that it will be redirected to the Process.StandardOutput StreamReader.                  procStartInfo.RedirectStandardOutput = true;                  procStartInfo.RedirectStandardError = true;                  procStartInfo.UseShellExecute = false;                    // Do not create the black window.                  procStartInfo.CreateNoWindow = true;                    // Now you create a process' assign its ProcessStartInfo' and start it.                  proc = new System.Diagnostics.Process();                  proc.StartInfo = procStartInfo;                  proc.Start();                  proc.WaitForExit(iTimeOutMinutes * 60 * 1000);                      // Get the output into a string.                  _errOutput = proc.StandardError.ReadToEnd();                  _stdOutput = proc.StandardOutput.ReadToEnd().TrimEnd('\r'' '\n');                                   int exitCode = proc.ExitCode;                  Console.WriteLine("Exit Code: {0}"' proc.ExitCode);                    if (exitCode != 0 && (!(string.IsNullOrEmpty(_errOutput))))                  {                      _errOutput = "Error in RunPyScript! Command: " + sCommand + Environment.NewLine + _errOutput;                      return false;                  }                    return true;              }              catch (Exception objException)              {                  Console.WriteLine(objException.Message);                  // Log the exception and errors.                  _errOutput = "Error in RunPyScript! Command: " + sCommand + Environment.NewLine + objException.Message;                  return false;              }              finally              {                  if (!(proc == null))                  {                      if (!(proc.HasExited))                      {                          proc.Kill();                      }                      proc = null;                  }                  rk = null;              }
