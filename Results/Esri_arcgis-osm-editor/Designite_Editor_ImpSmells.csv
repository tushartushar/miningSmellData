Implementation smell,Namespace,Class,File,Method,Description
Long Method,ESRI.ArcGIS.OSM.Editor,LicenseAlertDialog,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\LicenseAlertDialog.cs,InitializeComponent,The method has 101 lines of code.
Long Method,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,OnLoad,The method has 117 lines of code.
Long Method,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,WayToFeatureClass,The method has 166 lines of code.
Long Method,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,CreatePointFeatureClass,The method has 122 lines of code.
Long Method,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,CreateLineFeatureClass,The method has 119 lines of code.
Long Method,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,CreatePolygonFeatureClass,The method has 116 lines of code.
Long Method,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,OSMGeometryToGraphicElement,The method has 104 lines of code.
Long Method,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,OSMConflictEditorUI_FormClosing,The method has 424 lines of code.
Long Method,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,InitializeComponent,The method has 206 lines of code.
Long Method,ESRI.ArcGIS.OSM.Editor,OSMEditorExtension,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorExtension.cs,m_editEvents_OnDeleteFeature,The method has 140 lines of code.
Long Method,ESRI.ArcGIS.OSM.Editor,OSMEditorExtension,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorExtension.cs,m_editEvents_OnChangeFeature,The method has 113 lines of code.
Long Method,ESRI.ArcGIS.OSM.Editor,OSMEditorPropertyPage,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorPropertyPage.cs,InitializeComponent,The method has 103 lines of code.
Long Method,ESRI.ArcGIS.OSM.Editor,OSMFeatureInspectorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMFeatureInspector.cs,prepareGrid4Features,The method has 374 lines of code.
Long Method,ESRI.ArcGIS.OSM.Editor,OSMFeatureInspectorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMFeatureInspector.cs,prepareGrid4Feature,The method has 394 lines of code.
Long Method,ESRI.ArcGIS.OSM.Editor,OSMFeatureInspectorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMFeatureInspector.cs,dataGridView1_CellValueChanged,The method has 269 lines of code.
Complex Method,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,OnLoad,Cyclomatic complexity of the method is 13
Complex Method,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,FillDataGridView,Cyclomatic complexity of the method is 18
Complex Method,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,NodeToFeatureClass,Cyclomatic complexity of the method is 13
Complex Method,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,WayToFeatureClass,Cyclomatic complexity of the method is 22
Complex Method,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,FindTablesInsideCurrentMap,Cyclomatic complexity of the method is 12
Complex Method,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,errorContextMenu_ItemClicked,Cyclomatic complexity of the method is 8
Complex Method,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,OSMConflictEditorUI_FormClosing,Cyclomatic complexity of the method is 8
Complex Method,ESRI.ArcGIS.OSM.Editor,OSMEditorExtension,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorExtension.cs,m_editEvents_OnDeleteFeature,Cyclomatic complexity of the method is 20
Complex Method,ESRI.ArcGIS.OSM.Editor,OSMEditorExtension,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorExtension.cs,m_editEvents_OnChangeFeature,Cyclomatic complexity of the method is 19
Complex Method,ESRI.ArcGIS.OSM.Editor,OSMEditorExtension,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorExtension.cs,m_editEvents_OnCreateFeature,Cyclomatic complexity of the method is 8
Complex Method,ESRI.ArcGIS.OSM.Editor,OSMEditorExtension,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorExtension.cs,Inspect,Cyclomatic complexity of the method is 8
Complex Method,ESRI.ArcGIS.OSM.Editor,OSMFeatureInspectorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMFeatureInspector.cs,prepareGrid4Features,Cyclomatic complexity of the method is 42
Complex Method,ESRI.ArcGIS.OSM.Editor,OSMFeatureInspectorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMFeatureInspector.cs,prepareGrid4Feature,Cyclomatic complexity of the method is 58
Complex Method,ESRI.ArcGIS.OSM.Editor,OSMFeatureInspectorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMFeatureInspector.cs,dataGridView1_CellValueChanged,Cyclomatic complexity of the method is 34
Complex Method,ESRI.ArcGIS.OSM.Editor,OSMFeatureInspectorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMFeatureInspector.cs,dataGridView1_RowsRemoved,Cyclomatic complexity of the method is 10
Long Parameter List,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,RequestOSMServerData,The method has 5 parameters. Parameters: osmElementType' osmIDString' osmPointsFC' osmLinesFC' osmPolygonFC
Long Parameter List,ESRI.ArcGIS.OSM.Editor,conflictTag,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,conflictTag,The method has 5 parameters. Parameters: revisionOID' OSMID' ErrorCode' SourceFeatureClassName' DeterminedResolution
Long Identifier,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,CreateErrorContextMenu,The length of the parameter error409_keepLocalGeometryServerAttributes is 42.
Long Identifier,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,CreateErrorContextMenu,The length of the parameter error409_keepLocalAttributesServerGeometry is 42.
Long Identifier,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,CreateErrorContextMenu,The length of the parameter error409_keepServerGeometryServerAttributes is 43.
Long Identifier,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,OSMConflictEditorUI_FormClosing,The length of the parameter revisionOSMElementTypeFieldIndex is 32.
Long Identifier,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,OSMConflictEditorUI_FormClosing,The length of the parameter revisionOSMSourceFCNameFieldIndex is 33.
Long Identifier,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,OSMConflictEditorUI_FormClosing,The length of the parameter revisionOSMStatusCodeFieldIndex is 31.
Long Identifier,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,OSMConflictEditorUI_FormClosing,The length of the parameter revisionOSMErrorMessageFieldIndex is 33.
Long Identifier,ESRI.ArcGIS.OSM.Editor,conflictTag,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,,The length of the parameter m_determinedConflictResolution is 30.
Long Identifier,ESRI.ArcGIS.OSM.Editor,OSMEditorExtension,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorExtension.cs,,The length of the parameter m_osmFeaturePropertiesFilePath is 30.
Long Identifier,ESRI.ArcGIS.OSM.Editor,OSMEditorPropertyPage,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorPropertyPage.cs,,The length of the parameter txtOSMFeaturePropertiesFileLocation is 35.
Long Identifier,ESRI.ArcGIS.OSM.Editor,OSMFeatureInspectorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMFeatureInspector.cs,,The length of the parameter m_osmFeaturePropertiesFilePath is 30.
Long Statement,ESRI.ArcGIS.OSM.Editor,BasicAuthenticationCtrl,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\BasicAuthenticationCtrl.cs,InitializeComponent,The length of the statement  "            this.txtUserName.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) " is 144.
Long Statement,ESRI.ArcGIS.OSM.Editor,BasicAuthenticationCtrl,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\BasicAuthenticationCtrl.cs,InitializeComponent,The length of the statement  "            this.txtPassword.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) " is 144.
Long Statement,ESRI.ArcGIS.OSM.Editor,LicenseAlertDialog,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\LicenseAlertDialog.cs,InitializeComponent,The length of the statement  "            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(LicenseAlertDialog)); " is 138.
Long Statement,ESRI.ArcGIS.OSM.Editor,LicenseAlertDialog,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\LicenseAlertDialog.cs,InitializeComponent,The length of the statement  "            this.txtLicenseAlert.Font = new System.Drawing.Font("Microsoft Sans Serif"' 8.25F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 162.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMConflictEditor,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditor.cs,OnClick,The length of the statement  "            OSMEditorExtension osmEditorExtension = m_application.FindExtensionByCLSID(osmEditorExtensionCLSID) as OSMEditorExtension; " is 122.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,OnLoad,The length of the statement  "                MessageBox.Show(resourceManager.GetString("OSMEditor_ConflictEditor_norevisionTables")' resourceManager.GetString("OSMEditor_ConflictEditor_norevisionTables_title")' MessageBoxButtons.OK' MessageBoxIcon.Warning); " is 212.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,OnLoad,The length of the statement  "                        conflictTag errorNodeConflictTag = new conflictTag(errorRow.OID' osmIDString' errorStatusCode' errorRow.get_Value(sourceFCNameFieldIndex).ToString()); " is 150.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,FillDataGridView,The length of the statement  "                insertLocalServerRow("OSM ID"' localFeature.get_Value(localosmIDFieldIndex)' serverFeature.get_Value(serverosmIDFieldIndex)); " is 125.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,FillDataGridView,The length of the statement  "                insertLocalServerRow("OSM Visibility"' localFeature.get_Value(localosmVisibleFieldIndex)' serverFeature.get_Value(serverosmVisibleFieldIndex)); " is 143.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,FillDataGridView,The length of the statement  "                insertLocalServerRow("OSM Version"' localFeature.get_Value(localOSMVersionFieldIndex)' serverFeature.get_Value(serverOSMVersionFieldIndex)); " is 140.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,FillDataGridView,The length of the statement  "                insertLocalServerRow("OSM Changeset"' localFeature.get_Value(localOSMChangesetFieldIndex)' serverFeature.get_Value(serverOSMChangesetFieldIndex)); " is 146.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,FillDataGridView,The length of the statement  "                insertLocalServerRow("TimeStamp"' localFeature.get_Value(localOSMTimeStampFieldIndex)' serverFeature.get_Value(serverOSMTimeStampFieldIndex)); " is 142.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,NodeToFeatureClass,The length of the statement  "            ISpatialReference wgs84 = srFactory.CreateGeographicCoordinateSystem((int)esriSRGeoCSType.esriSRGeoCS_WGS1984) as ISpatialReference; " is 132.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,WayToFeatureClass,The length of the statement  "            ISpatialReference wgs84 = srFactory.CreateGeographicCoordinateSystem((int)esriSRGeoCSType.esriSRGeoCS_WGS1984) as ISpatialReference; " is 132.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,CreatePointFeatureClass,The length of the statement  "            ESRI.ArcGIS.Geodatabase.IFeatureWorkspace featureWorkspace = (ESRI.ArcGIS.Geodatabase.IFeatureWorkspace)workspace; // Explicit Cast " is 131.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,CreatePointFeatureClass,The length of the statement  "            ESRI.ArcGIS.Geodatabase.IObjectClassDescription objectClassDescription = new ESRI.ArcGIS.Geodatabase.FeatureClassDescriptionClass(); " is 132.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,CreatePointFeatureClass,The length of the statement  "                    ISpatialReference wgs84 = spatialRefFactory.CreateGeographicCoordinateSystem((int) esriSRGeoCSType.esriSRGeoCS_WGS1984) as ISpatialReference; " is 141.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,CreatePointFeatureClass,The length of the statement  "                    featureClass = featureWorkspace.CreateFeatureClass(featureClassName' validatedFields' CLSID' null' ESRI.ArcGIS.Geodatabase.esriFeatureType.esriFTSimple' strShapeField' ""); " is 172.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,CreateLineFeatureClass,The length of the statement  "            ESRI.ArcGIS.Geodatabase.IFeatureWorkspace featureWorkspace = (ESRI.ArcGIS.Geodatabase.IFeatureWorkspace)workspace; // Explicit Cast " is 131.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,CreateLineFeatureClass,The length of the statement  "            ESRI.ArcGIS.Geodatabase.IObjectClassDescription objectClassDescription = new ESRI.ArcGIS.Geodatabase.FeatureClassDescriptionClass(); " is 132.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,CreateLineFeatureClass,The length of the statement  "            featureClass = featureWorkspace.CreateFeatureClass(featureClassName' validatedFields' CLSID' null' ESRI.ArcGIS.Geodatabase.esriFeatureType.esriFTSimple' strShapeField' ""); " is 172.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,CreatePolygonFeatureClass,The length of the statement  "            ESRI.ArcGIS.Geodatabase.IFeatureWorkspace featureWorkspace = (ESRI.ArcGIS.Geodatabase.IFeatureWorkspace)workspace; // Explicit Cast " is 131.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,CreatePolygonFeatureClass,The length of the statement  "            ESRI.ArcGIS.Geodatabase.IObjectClassDescription objectClassDescription = new ESRI.ArcGIS.Geodatabase.FeatureClassDescriptionClass(); " is 132.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,CreatePolygonFeatureClass,The length of the statement  "            featureClass = featureWorkspace.CreateFeatureClass(featureClassName' validatedFields' CLSID' null' ESRI.ArcGIS.Geodatabase.esriFeatureType.esriFTSimple' strShapeField' ""); " is 172.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,CreateErrorContextMenu,The length of the statement  "                    ToolStripItem error404deletelocal = new ToolStripMenuItem(resourceManager.GetString("OSMEditor_ConflictEditor_error404_deletelocal")); " is 134.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,CreateErrorContextMenu,The length of the statement  "                    ToolStripItem error409_keepLocal = new ToolStripMenuItem(resourceManager.GetString("OSMEditor_ConflictEditor_error409_keepLocalGeometryAttributes")); " is 149.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,CreateErrorContextMenu,The length of the statement  "                    ToolStripItem error409_keepLocalGeometryServerAttributes = new ToolStripMenuItem(resourceManager.GetString("OSMEditor_ConflictEditor_error409_keepLocalGeometryServerAttributes")); " is 179.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,CreateErrorContextMenu,The length of the statement  "                    error409_keepLocalGeometryServerAttributes.Tag = conflictTag.osmConflictResolution.osmUpdateLocalGeometryServerAttributes; " is 122.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,CreateErrorContextMenu,The length of the statement  "                    ToolStripItem error409_keepLocalAttributesServerGeometry = new ToolStripMenuItem(resourceManager.GetString("OSMEditor_ConflictEditor_error409_keepLocalAttributesServerGeometry")); " is 179.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,CreateErrorContextMenu,The length of the statement  "                    error409_keepLocalAttributesServerGeometry.Tag = conflictTag.osmConflictResolution.osmUpdateServerGeometryLocalAttributes; " is 122.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,CreateErrorContextMenu,The length of the statement  "                    ToolStripItem error409_keepServerGeometryServerAttributes = new ToolStripMenuItem(resourceManager.GetString("OSMEditor_ConflictEditor_error409_keepServerGeometryServerAttributes")); " is 181.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,CreateErrorContextMenu,The length of the statement  "                    error409_keepServerGeometryServerAttributes.Tag = conflictTag.osmConflictResolution.osmUpdateServerGeometryServerAttributes; " is 124.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,CreateErrorContextMenu,The length of the statement  "                    ToolStripItem error410 = new ToolStripMenuItem(resourceManager.GetString("OSMEditor_ConflictEditor_error410_deletelocal")); " is 123.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,CreateErrorContextMenu,The length of the statement  "                    ToolStripItem errorUnkown = new ToolStripMenuItem(resourceManager.GetString("OSMEditor_ConflictEditor_error_UnknownSolution")); " is 127.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,CreateErrorContextMenu,The length of the statement  "            ToolStripItem clearRevisionStatusItem = new ToolStripMenuItem(resourceManager.GetString("OSMEditor_ConflictEditor_error_clearRevisionStatus")); " is 143.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,CreateErrorContextMenu,The length of the statement  "            ToolStripItem deleteRevisionItem = new ToolStripMenuItem(resourceManager.GetString("OSMEditor_ConflictEditor_error_removeRevisionIncident")); " is 141.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,DeleteAllMarkerElements,The length of the statement  "            IGraphicsContainer graphicsContainer = ((IMapControl4)axMapControl1.Object).Map.BasicGraphicsLayer as IGraphicsContainer; " is 121.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,UpdateMapControlWithMarker,The length of the statement  "            markerLocation.Y = extentEnvelope.LowerLeft.Y + extentEnvelope.Height / (10 * (extentEnvelope.Height / extentEnvelope.Width)); " is 126.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,ResolveNodeTag,The length of the statement  "            localQueryFilter.WhereClause = localFeatureClass.WhereClauseByExtensionVersion(nodeConflictTag.OSMID' "OSMID"'localFeatureClass.OSMExtensionVersion()); " is 151.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,ResolveNodeTag,The length of the statement  "            serverQueryFilter.WhereClause = m_osmPointsFC.WhereClauseByExtensionVersion(nodeConflictTag.OSMID' "OSMID"' m_osmPointsFC.OSMExtensionVersion()); " is 145.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,OSMConflictEditorUI_FormClosing,The length of the statement  "                                ClearRevisionErrors(updateRow' revisionOSMStatusFieldIndex' revisionOSMStatusCodeFieldIndex' revisionOSMErrorMessageFieldIndex); " is 128.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,OSMConflictEditorUI_FormClosing,The length of the statement  "                                ClearRevisionErrors(updateRow' revisionOSMStatusFieldIndex' revisionOSMStatusCodeFieldIndex' revisionOSMErrorMessageFieldIndex); " is 128.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,OSMConflictEditorUI_FormClosing,The length of the statement  "                                ClearRevisionErrors(updateRow' revisionOSMStatusFieldIndex' revisionOSMStatusCodeFieldIndex' revisionOSMErrorMessageFieldIndex); " is 128.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,OSMConflictEditorUI_FormClosing,The length of the statement  "                                ClearRevisionErrors(updateRow' revisionOSMStatusFieldIndex' revisionOSMStatusCodeFieldIndex' revisionOSMErrorMessageFieldIndex); " is 128.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,OSMConflictEditorUI_FormClosing,The length of the statement  "                                localQueryFilter.WhereClause = localFeatureClass.WhereClauseByExtensionVersion(errorNodeConflictTag.OSMID' "OSMID"' localFeatureClass.OSMExtensionVersion()); " is 157.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,OSMConflictEditorUI_FormClosing,The length of the statement  "                                ClearRevisionErrors(updateRow' revisionOSMStatusFieldIndex' revisionOSMStatusCodeFieldIndex' revisionOSMErrorMessageFieldIndex); " is 128.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,OSMConflictEditorUI_FormClosing,The length of the statement  "                                ClearRevisionErrors(updateRow' revisionOSMStatusFieldIndex' revisionOSMStatusCodeFieldIndex' revisionOSMErrorMessageFieldIndex); " is 128.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,InitializeComponent,The length of the statement  "            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(OSMConflictEditorUI)); " is 139.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,InitializeComponent,The length of the statement  "            this.axLicenseControl1.OcxState = ((System.Windows.Forms.AxHost.State)(resources.GetObject("axLicenseControl1.OcxState"))); " is 123.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,InitializeComponent,The length of the statement  "            this.errorTreeView.NodeMouseClick += new System.Windows.Forms.TreeNodeMouseClickEventHandler(this.treeView1_NodeMouseClick); " is 124.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,InitializeComponent,The length of the statement  "            this.axToolbarControl2.OcxState = ((System.Windows.Forms.AxHost.State)(resources.GetObject("axToolbarControl2.OcxState"))); " is 123.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,InitializeComponent,The length of the statement  "            this.axToolbarControl3.OcxState = ((System.Windows.Forms.AxHost.State)(resources.GetObject("axToolbarControl3.OcxState"))); " is 123.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMEditorExtension,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorExtension.cs,Startup,The length of the statement  "                m_wgs84 = spatialReferenceFactory.CreateGeographicCoordinateSystem((int)esriSRGeoCSType.esriSRGeoCS_WGS1984) as ISpatialReference; " is 130.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMEditorExtension,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorExtension.cs,testEditorContentforOSMLicense,The length of the statement  "                            if (osmFeatureClassExtensionCLSID.Value.ToString().Equals("{65CA4847-8661-45eb-8E1E-B2985CA17C78}"' StringComparison.InvariantCultureIgnoreCase) == true) " is 153.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMEditorExtension,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorExtension.cs,m_editEvents_OnDeleteFeature,The length of the statement  "            if (osmEditorExtensionCLSID.Value.ToString().Equals("{65CA4847-8661-45eb-8E1E-B2985CA17C78}"' StringComparison.InvariantCultureIgnoreCase) == false) " is 148.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMEditorExtension,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorExtension.cs,m_editEvents_OnDeleteFeature,The length of the statement  "                    ESRI.ArcGIS.OSM.OSMClassExtension.member[] relationMembers = _osmUtility.retrieveMembers(deletedFeature' membersFieldIndex); " is 124.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMEditorExtension,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorExtension.cs,m_editEvents_OnDeleteFeature,The length of the statement  "                            string abortMessage = String.Format(resourceManager.GetString("OSMEditor_FeatureInspector_multipartdeleteparentconflictmessage")' osmID); " is 137.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMEditorExtension,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorExtension.cs,m_editEvents_OnDeleteFeature,The length of the statement  "                            MessageBox.Show(abortMessage' resourceManager.GetString("OSMEditor_FeatureInspector_relationconflictcaption")' MessageBoxButtons.OK' MessageBoxIcon.Stop); " is 154.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMEditorExtension,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorExtension.cs,m_editEvents_OnDeleteFeature,The length of the statement  "                        string abortMessage = String.Format(resourceManager.GetString("OSMEditor_FeatureInspector_relationsconflictmessage")' osmID' parentsString); " is 140.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMEditorExtension,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorExtension.cs,m_editEvents_OnDeleteFeature,The length of the statement  "                        MessageBox.Show(abortMessage' resourceManager.GetString("OSMEditor_FeatureInspector_relationconflictcaption")' MessageBoxButtons.OK' MessageBoxIcon.Stop); " is 154.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMEditorExtension,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorExtension.cs,m_editEvents_OnDeleteFeature,The length of the statement  "                // if we are dealing with points to be deleted then we'll determine the connectedness via a spatial query and then the attributes indicating that  " is 145.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMEditorExtension,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorExtension.cs,m_editEvents_OnDeleteFeature,The length of the statement  "                IFeatureClass lineFeatureClass = ESRI.ArcGIS.OSM.OSMClassExtension.OpenStreetMapClassExtension.findMatchingFeatureClass(deletedFeature' esriGeometryType.esriGeometryPolyline); " is 175.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMEditorExtension,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorExtension.cs,m_editEvents_OnDeleteFeature,The length of the statement  "                IFeatureClass polygonFeatureClass = ESRI.ArcGIS.OSM.OSMClassExtension.OpenStreetMapClassExtension.findMatchingFeatureClass(deletedFeature' esriGeometryType.esriGeometryPolygon); " is 177.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMEditorExtension,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorExtension.cs,m_editEvents_OnDeleteFeature,The length of the statement  "                        errorMessage = string.Format(resourceManager.GetString("OSMEditor_FeatureInspector_relationsconflictmessage")' deletedFeature.get_Value(deleteOSMIDFieldIndex)' relationsString.Substring(0' relationsString.Length - 1)); " is 218.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMEditorExtension,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorExtension.cs,m_editEvents_OnDeleteFeature,The length of the statement  "                        errorMessage = string.Format(resourceManager.GetString("OSMEditor_FeatureInspector_relationconflictmessage")' deletedFeature.get_Value(deleteOSMIDFieldIndex)' relationsString.Substring(0' relationsString.Length - 1)); " is 217.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMEditorExtension,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorExtension.cs,m_editEvents_OnDeleteFeature,The length of the statement  "                    if (MessageBox.Show(errorMessage' resourceManager.GetString("OSMEditor_FeatureInspector_relationconflictcaption")' MessageBoxButtons.OKCancel' MessageBoxIcon.Warning) == DialogResult.Cancel) " is 190.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMEditorExtension,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorExtension.cs,TestRelationMembership,The length of the statement  "                        ESRI.ArcGIS.OSM.OSMClassExtension.member[] relationMembers = _osmUtility.retrieveMembers(touchedFeature' testMembersFieldIndex); " is 128.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMEditorExtension,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorExtension.cs,TestRelationMembership,The length of the statement  "                                string abortMessage = String.Format(resourceManager.GetString("OSMEditor_FeatureInspector_pointmemberofrelation")' osmID); " is 122.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMEditorExtension,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorExtension.cs,TestRelationMembership,The length of the statement  "                                MessageBox.Show(abortMessage' resourceManager.GetString("OSMEditor_FeatureInspector_relationconflictcaption")' MessageBoxButtons.OK' MessageBoxIcon.Stop); " is 154.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMEditorExtension,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorExtension.cs,TestRelationMembership,The length of the statement  "                            string abortMessage = String.Format(resourceManager.GetString("OSMEditor_FeatureInspector_pointmemberofrelation")' parentsString); " is 130.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMEditorExtension,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorExtension.cs,TestRelationMembership,The length of the statement  "                            MessageBox.Show(abortMessage' resourceManager.GetString("OSMEditor_FeatureInspector_relationconflictcaption")' MessageBoxButtons.OK' MessageBoxIcon.Stop); " is 154.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMEditorExtension,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorExtension.cs,m_editEvents_OnChangeFeature,The length of the statement  "            if (osmEditorExtensionCLSID.Value.ToString().Equals("{65CA4847-8661-45eb-8E1E-B2985CA17C78}"' StringComparison.InvariantCultureIgnoreCase) == false) " is 148.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMEditorExtension,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorExtension.cs,m_editEvents_OnChangeFeature,The length of the statement  "                        ESRI.ArcGIS.OSM.OSMClassExtension.member[] relationMembers = _osmUtility.retrieveMembers(currentFeature' membersFieldIndex); " is 124.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMEditorExtension,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorExtension.cs,m_editEvents_OnChangeFeature,The length of the statement  "                                string abortMessage = String.Format(resourceManager.GetString("OSMEditor_FeatureInspector_multipartchangeparentconflictmessage")' osmID); " is 137.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMEditorExtension,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorExtension.cs,m_editEvents_OnChangeFeature,The length of the statement  "                                MessageBox.Show(abortMessage' resourceManager.GetString("OSMEditor_FeatureInspector_relationconflictcaption")' MessageBoxButtons.OK' MessageBoxIcon.Stop); " is 154.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMEditorExtension,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorExtension.cs,m_editEvents_OnChangeFeature,The length of the statement  "                            string abortMessage = String.Format(resourceManager.GetString("OSMEditor_FeatureInspector_multipartchangeconflictmessage")' osmID' parentsString); " is 146.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMEditorExtension,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorExtension.cs,m_editEvents_OnChangeFeature,The length of the statement  "                            MessageBox.Show(abortMessage' resourceManager.GetString("OSMEditor_FeatureInspector_relationconflictcaption")' MessageBoxButtons.OK' MessageBoxIcon.Stop); " is 154.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMEditorExtension,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorExtension.cs,m_editEvents_OnCreateFeature,The length of the statement  "            if (osmEditorExtensionCLSID.Value.ToString().Equals("{65CA4847-8661-45eb-8E1E-B2985CA17C78}"' StringComparison.InvariantCultureIgnoreCase) == false) " is 148.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMEditorPropertyPage,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorPropertyPage.cs,Activate,The length of the statement  "                OSMEditorExtension osmEditorExtension = m_editor.Parent.FindExtensionByCLSID(osmEditorExtensionCLSID) as OSMEditorExtension; " is 124.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMEditorPropertyPage,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorPropertyPage.cs,SetObjects,The length of the statement  "                OSMEditorExtension osmEditorExtension = m_editor.Parent.FindExtensionByCLSID(osmEditorExtensionCLSID) as OSMEditorExtension; " is 124.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMEditorPropertyPage,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorPropertyPage.cs,Apply,The length of the statement  "                    OSMEditorExtension osmEditorExtension = m_editor.Parent.FindExtensionByCLSID(osmEditorExtensionCLSID) as OSMEditorExtension; " is 124.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMEditorPropertyPage,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorPropertyPage.cs,InitializeComponent,The length of the statement  "            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(OSMEditorPropertyPage)); " is 141.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMEditorPropertyPage,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorPropertyPage.cs,InitializeComponent,The length of the statement  "            this.txtOSMBaseURL.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left)  " is 146.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMFeatureInspectorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMFeatureInspector.cs,loadOSMDomains,The length of the statement  "                    reader = new System.Xml.XmlTextReader(assemblyLocation.DirectoryName + System.IO.Path.DirectorySeparatorChar + "osm_domains.xml"); " is 130.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMFeatureInspectorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMFeatureInspector.cs,loadOSMDomains,The length of the statement  "                System.Xml.Serialization.XmlSerializer serializer = new System.Xml.Serialization.XmlSerializer(typeof(ESRI.ArcGIS.OSM.OSMClassExtension.OSMDomains)); " is 149.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMFeatureInspectorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMFeatureInspector.cs,loadOSMEditFeatures,The length of the statement  "                    reader = new System.Xml.XmlTextReader(assemblyLocation.DirectoryName + System.IO.Path.DirectorySeparatorChar + "OSMFeaturesProperties.xml"); " is 140.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMFeatureInspectorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMFeatureInspector.cs,loadOSMEditFeatures,The length of the statement  "                System.Xml.Serialization.XmlSerializer serializer = new System.Xml.Serialization.XmlSerializer(typeof(ESRI.ArcGIS.OSM.OSMClassExtension.osmfeatures)); " is 150.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMFeatureInspectorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMFeatureInspector.cs,prepareGrid4Features,The length of the statement  "            Dictionary<string' ESRI.ArcGIS.OSM.OSMClassExtension.tagkey> potentialTags = new Dictionary<string' ESRI.ArcGIS.OSM.OSMClassExtension.tagkey>(); " is 144.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMFeatureInspectorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMFeatureInspector.cs,prepareGrid4Features,The length of the statement  "                    ESRI.ArcGIS.OSM.OSMClassExtension.tag[] tagsOnCurrentFeature = _osmUtility.retrieveOSMTags((IRow)currentFeature' osmTagsFieldIndex' m_editor.EditWorkspace); " is 156.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMFeatureInspectorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMFeatureInspector.cs,prepareGrid4Features,The length of the statement  "                        IEnumerable<ESRI.ArcGIS.OSM.OSMClassExtension.tag> both = tagsOnCurrentFeature.Intersect(sameTags' new ESRI.ArcGIS.OSM.OSMClassExtension.TagKeyComparer()); " is 155.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMFeatureInspectorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMFeatureInspector.cs,prepareGrid4Features,The length of the statement  "            Dictionary<string' ESRI.ArcGIS.OSM.OSMClassExtension.tagkey> localTags = new Dictionary<string' ESRI.ArcGIS.OSM.OSMClassExtension.tagkey>(); " is 140.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMFeatureInspectorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMFeatureInspector.cs,prepareGrid4Feature,The length of the statement  "            Dictionary<string' ESRI.ArcGIS.OSM.OSMClassExtension.tag> tagList = new Dictionary<string' ESRI.ArcGIS.OSM.OSMClassExtension.tag>(); " is 132.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMFeatureInspectorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMFeatureInspector.cs,prepareGrid4Feature,The length of the statement  "            Dictionary<string' ESRI.ArcGIS.OSM.OSMClassExtension.tagkey> localTags = new Dictionary<string' ESRI.ArcGIS.OSM.OSMClassExtension.tagkey>(); " is 140.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMFeatureInspectorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMFeatureInspector.cs,dataGridView1_CellValueChanged,The length of the statement  "                    Dictionary<string' ESRI.ArcGIS.OSM.OSMClassExtension.tagkey> localTags = new Dictionary<string' ESRI.ArcGIS.OSM.OSMClassExtension.tagkey>(); " is 140.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMFeatureInspectorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMFeatureInspector.cs,dataGridView1_CellValueChanged,The length of the statement  "                //MessageBox.Show(resourceManager.GetString("OSMEditor_FeatureInspector_operationwarningcaption")' resourceManager.GetString("OSMClassExtension_FeatureInspector_operationwarningcaption")); " is 188.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMFeatureInspectorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMFeatureInspector.cs,dataGridView1_CellValueChanged,The length of the statement  "                            ESRI.ArcGIS.OSM.OSMClassExtension.tag[] existingTags = _osmUtility.retrieveOSMTags((IRow)currentFeature' tagCollectionFieldIndex' m_editor.EditWorkspace); " is 154.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMFeatureInspectorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMFeatureInspector.cs,dataGridView1_RowsRemoved,The length of the statement  "                    //   MessageBox.Show(resourceManager.GetString("OSMEditor_FeatureInspector_operationwarningcaption")' resourceManager.GetString("OSMClassExtension_FeatureInspector_operationwarningcaption")); " is 191.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMFeatureInspectorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMFeatureInspector.cs,dataGridView1_RowsRemoved,The length of the statement  "                            _osmUtility.insertOSMTags(tagCollectionFieldIndex' (IRow)currentFeature' currentTagList.ToArray()' m_editor.EditWorkspace); " is 123.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMFeatureInspectorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMFeatureInspector.cs,ReadOSMEditorSettings,The length of the statement  "            string osmEditorFolder = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + System.IO.Path.DirectorySeparatorChar + "ESRI" + System.IO.Path.DirectorySeparatorChar + "OSMEditor"; " is 197.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMFeatureInspectorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMFeatureInspector.cs,ReadOSMEditorSettings,The length of the statement  "                    m_osmDomainsFilePath = executingAssembly.Directory.FullName + System.IO.Path.DirectorySeparatorChar + "osm_domains.xml"; " is 120.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMFeatureInspectorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMFeatureInspector.cs,ReadOSMEditorSettings,The length of the statement  "                if (File.Exists(executingAssembly.Directory.FullName + System.IO.Path.DirectorySeparatorChar + "OSMFeaturesProperties.xml")) " is 124.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMFeatureInspectorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMFeatureInspector.cs,ReadOSMEditorSettings,The length of the statement  "                    m_osmFeaturePropertiesFilePath = executingAssembly.Directory.FullName + System.IO.Path.DirectorySeparatorChar + "OSMFeaturesProperties.xml"; " is 140.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMFeatureInspectorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMFeatureInspector.cs,InitializeComponent,The length of the statement  "            this.dataGridView1.CellBeginEdit += new System.Windows.Forms.DataGridViewCellCancelEventHandler(this.dataGridView1_CellBeginEdit); " is 130.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMFeatureInspectorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMFeatureInspector.cs,InitializeComponent,The length of the statement  "            this.dataGridView1.CellContentDoubleClick += new System.Windows.Forms.DataGridViewCellEventHandler(this.dataGridView1_CellContentDoubleClick); " is 142.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMFeatureInspectorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMFeatureInspector.cs,InitializeComponent,The length of the statement  "            this.dataGridView1.CellFormatting += new System.Windows.Forms.DataGridViewCellFormattingEventHandler(this.dataGridView1_CellFormatting); " is 136.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMFeatureInspectorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMFeatureInspector.cs,InitializeComponent,The length of the statement  "            this.dataGridView1.CellValidating += new System.Windows.Forms.DataGridViewCellValidatingEventHandler(this.dataGridView1_CellValidating); " is 136.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMFeatureInspectorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMFeatureInspector.cs,InitializeComponent,The length of the statement  "            this.dataGridView1.CellValueChanged += new System.Windows.Forms.DataGridViewCellEventHandler(this.dataGridView1_CellValueChanged); " is 130.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMFeatureInspectorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMFeatureInspector.cs,InitializeComponent,The length of the statement  "            this.dataGridView1.DataError += new System.Windows.Forms.DataGridViewDataErrorEventHandler(this.dataGridView1_DataError); " is 121.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMFeatureInspectorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMFeatureInspector.cs,InitializeComponent,The length of the statement  "            this.dataGridView1.EditingControlShowing += new System.Windows.Forms.DataGridViewEditingControlShowingEventHandler(this.dataGridView1_EditingControlShowing); " is 157.
Long Statement,ESRI.ArcGIS.OSM.Editor,OSMFeatureInspectorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMFeatureInspector.cs,InitializeComponent,The length of the statement  "            this.dataGridView1.RowsRemoved += new System.Windows.Forms.DataGridViewRowsRemovedEventHandler(this.dataGridView1_RowsRemoved); " is 127.
Empty Catch Block,ESRI.ArcGIS.OSM.Editor,BasicAuthenticationCtrl,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\BasicAuthenticationCtrl.cs,txtUserName_LostFocus,The method has an empty catch block.
Empty Catch Block,ESRI.ArcGIS.OSM.Editor,BasicAuthenticationCtrl,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\BasicAuthenticationCtrl.cs,txtPassword_LostFocus,The method has an empty catch block.
Empty Catch Block,ESRI.ArcGIS.OSM.Editor,BasicAuthenticationCtrl,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\BasicAuthenticationCtrl.cs,EncodeUserAuthentication,The method has an empty catch block.
Empty Catch Block,ESRI.ArcGIS.OSM.Editor,OSMConflictEditor,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditor.cs,OSMConflictEditor,The method has an empty catch block.
Empty Catch Block,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,DoesHaveKeys,The method has an empty catch block.
Empty Catch Block,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,FindTablesInsideCurrentMap,The method has an empty catch block.
Empty Catch Block,ESRI.ArcGIS.OSM.Editor,OSMEditorExtension,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorExtension.cs,Startup,The method has an empty catch block.
Empty Catch Block,ESRI.ArcGIS.OSM.Editor,OSMEditorExtension,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorExtension.cs,testEditorContentforOSMLicense,The method has an empty catch block.
Empty Catch Block,ESRI.ArcGIS.OSM.Editor,OSMEditorPropertyPage,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorPropertyPage.cs,btnFeatureDomains_Click,The method has an empty catch block.
Empty Catch Block,ESRI.ArcGIS.OSM.Editor,GxFilterXmlFiles,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorPropertyPage.cs,GxFilterXmlFiles,The method has an empty catch block.
Empty Catch Block,ESRI.ArcGIS.OSM.Editor,OSMEditorToolbarCmd,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorToolbarCmd.cs,OSMEditorToolbarCmd,The method has an empty catch block.
Empty Catch Block,ESRI.ArcGIS.OSM.Editor,OSMFeatureInspectorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMFeatureInspector.cs,loadOSMDomains,The method has an empty catch block.
Empty Catch Block,ESRI.ArcGIS.OSM.Editor,OSMFeatureInspectorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMFeatureInspector.cs,loadOSMEditFeatures,The method has an empty catch block.
Empty Catch Block,ESRI.ArcGIS.OSM.Editor,OSMFeatureInspectorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMFeatureInspector.cs,prepareGrid4Features,The method has an empty catch block.
Empty Catch Block,ESRI.ArcGIS.OSM.Editor,OSMFeatureInspectorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMFeatureInspector.cs,prepareGrid4Feature,The method has an empty catch block.
Empty Catch Block,ESRI.ArcGIS.OSM.Editor,OSMFeatureInspectorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMFeatureInspector.cs,prepareGrid4Feature,The method has an empty catch block.
Empty Catch Block,ESRI.ArcGIS.OSM.Editor,OSMFeatureInspectorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMFeatureInspector.cs,prepareGrid4Feature,The method has an empty catch block.
Empty Catch Block,ESRI.ArcGIS.OSM.Editor,OSMFeatureInspectorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMFeatureInspector.cs,prepareGrid4Feature,The method has an empty catch block.
Empty Catch Block,ESRI.ArcGIS.OSM.Editor,OSMFeatureInspectorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMFeatureInspector.cs,IsGeometryTypeEqual,The method has an empty catch block.
Empty Catch Block,ESRI.ArcGIS.OSM.Editor,OSMFeatureInspectorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMFeatureInspector.cs,dataGridView1_CellValueChanged,The method has an empty catch block.
Empty Catch Block,ESRI.ArcGIS.OSM.Editor,OSMFeatureInspectorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMFeatureInspector.cs,dataGridView1_CellValueChanged,The method has an empty catch block.
Empty Catch Block,ESRI.ArcGIS.OSM.Editor,OSMFeatureInspectorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMFeatureInspector.cs,dataGridView1_CellValueChanged,The method has an empty catch block.
Empty Catch Block,ESRI.ArcGIS.OSM.Editor,OSMFeatureInspectorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMFeatureInspector.cs,dataGridView1_CellValueChanged,The method has an empty catch block.
Empty Catch Block,ESRI.ArcGIS.OSM.Editor,OSMFeatureInspectorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMFeatureInspector.cs,dataGridView1_CellValueChanged,The method has an empty catch block.
Empty Catch Block,ESRI.ArcGIS.OSM.Editor,OSMFeatureInspectorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMFeatureInspector.cs,dataGridView1_RowsRemoved,The method has an empty catch block.
Empty Catch Block,ESRI.ArcGIS.OSM.Editor,OSMFeatureInspectorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMFeatureInspector.cs,ReadOSMEditorSettings,The method has an empty catch block.
Magic Number,ESRI.ArcGIS.OSM.Editor,BasicAuthenticationCtrl,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\BasicAuthenticationCtrl.cs,InitializeComponent,The following statement contains a magic number: this.txtUserName.Location = new System.Drawing.Point(0' 18);
Magic Number,ESRI.ArcGIS.OSM.Editor,BasicAuthenticationCtrl,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\BasicAuthenticationCtrl.cs,InitializeComponent,The following statement contains a magic number: this.txtUserName.Size = new System.Drawing.Size(324' 20);
Magic Number,ESRI.ArcGIS.OSM.Editor,BasicAuthenticationCtrl,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\BasicAuthenticationCtrl.cs,InitializeComponent,The following statement contains a magic number: this.txtUserName.Size = new System.Drawing.Size(324' 20);
Magic Number,ESRI.ArcGIS.OSM.Editor,BasicAuthenticationCtrl,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\BasicAuthenticationCtrl.cs,InitializeComponent,The following statement contains a magic number: this.txtPassword.Location = new System.Drawing.Point(0' 53);
Magic Number,ESRI.ArcGIS.OSM.Editor,BasicAuthenticationCtrl,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\BasicAuthenticationCtrl.cs,InitializeComponent,The following statement contains a magic number: this.txtPassword.Size = new System.Drawing.Size(324' 20);
Magic Number,ESRI.ArcGIS.OSM.Editor,BasicAuthenticationCtrl,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\BasicAuthenticationCtrl.cs,InitializeComponent,The following statement contains a magic number: this.txtPassword.Size = new System.Drawing.Size(324' 20);
Magic Number,ESRI.ArcGIS.OSM.Editor,BasicAuthenticationCtrl,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\BasicAuthenticationCtrl.cs,InitializeComponent,The following statement contains a magic number: this.lblUserName.Location = new System.Drawing.Point(0' 4);
Magic Number,ESRI.ArcGIS.OSM.Editor,BasicAuthenticationCtrl,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\BasicAuthenticationCtrl.cs,InitializeComponent,The following statement contains a magic number: this.lblUserName.Size = new System.Drawing.Size(55' 13);
Magic Number,ESRI.ArcGIS.OSM.Editor,BasicAuthenticationCtrl,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\BasicAuthenticationCtrl.cs,InitializeComponent,The following statement contains a magic number: this.lblUserName.Size = new System.Drawing.Size(55' 13);
Magic Number,ESRI.ArcGIS.OSM.Editor,BasicAuthenticationCtrl,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\BasicAuthenticationCtrl.cs,InitializeComponent,The following statement contains a magic number: this.lblPassword.Location = new System.Drawing.Point(0' 39  );
Magic Number,ESRI.ArcGIS.OSM.Editor,BasicAuthenticationCtrl,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\BasicAuthenticationCtrl.cs,InitializeComponent,The following statement contains a magic number: this.lblPassword.Size = new System.Drawing.Size(53' 13);
Magic Number,ESRI.ArcGIS.OSM.Editor,BasicAuthenticationCtrl,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\BasicAuthenticationCtrl.cs,InitializeComponent,The following statement contains a magic number: this.lblPassword.Size = new System.Drawing.Size(53' 13);
Magic Number,ESRI.ArcGIS.OSM.Editor,BasicAuthenticationCtrl,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\BasicAuthenticationCtrl.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(324' 81);
Magic Number,ESRI.ArcGIS.OSM.Editor,BasicAuthenticationCtrl,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\BasicAuthenticationCtrl.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(324' 81);
Magic Number,ESRI.ArcGIS.OSM.Editor,LicenseAlertDialog,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\LicenseAlertDialog.cs,LicenseAlertDialog,The following statement contains a magic number: for (int linkBlockIndex = 0; linkBlockIndex < linkblock.Length; linkBlockIndex++)              {                  string[] linkElements = linkblock[linkBlockIndex].Split("'".ToCharArray());                    linkLabel1.Links.Add(Convert.ToInt32(linkElements[0])' Convert.ToInt32(linkElements[1])' linkElements[2]);              }
Magic Number,ESRI.ArcGIS.OSM.Editor,LicenseAlertDialog,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\LicenseAlertDialog.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer1.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,ESRI.ArcGIS.OSM.Editor,LicenseAlertDialog,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\LicenseAlertDialog.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer1.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,ESRI.ArcGIS.OSM.Editor,LicenseAlertDialog,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\LicenseAlertDialog.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer1.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,ESRI.ArcGIS.OSM.Editor,LicenseAlertDialog,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\LicenseAlertDialog.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer1.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,ESRI.ArcGIS.OSM.Editor,LicenseAlertDialog,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\LicenseAlertDialog.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer1.Size = new System.Drawing.Size(613' 322);
Magic Number,ESRI.ArcGIS.OSM.Editor,LicenseAlertDialog,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\LicenseAlertDialog.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer1.Size = new System.Drawing.Size(613' 322);
Magic Number,ESRI.ArcGIS.OSM.Editor,LicenseAlertDialog,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\LicenseAlertDialog.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer1.SplitterDistance = 234;
Magic Number,ESRI.ArcGIS.OSM.Editor,LicenseAlertDialog,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\LicenseAlertDialog.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer1.SplitterWidth = 5;
Magic Number,ESRI.ArcGIS.OSM.Editor,LicenseAlertDialog,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\LicenseAlertDialog.cs,InitializeComponent,The following statement contains a magic number: this.linkLabel1.Margin = new System.Windows.Forms.Padding(13' 12' 13' 12);
Magic Number,ESRI.ArcGIS.OSM.Editor,LicenseAlertDialog,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\LicenseAlertDialog.cs,InitializeComponent,The following statement contains a magic number: this.linkLabel1.Margin = new System.Windows.Forms.Padding(13' 12' 13' 12);
Magic Number,ESRI.ArcGIS.OSM.Editor,LicenseAlertDialog,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\LicenseAlertDialog.cs,InitializeComponent,The following statement contains a magic number: this.linkLabel1.Margin = new System.Windows.Forms.Padding(13' 12' 13' 12);
Magic Number,ESRI.ArcGIS.OSM.Editor,LicenseAlertDialog,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\LicenseAlertDialog.cs,InitializeComponent,The following statement contains a magic number: this.linkLabel1.Margin = new System.Windows.Forms.Padding(13' 12' 13' 12);
Magic Number,ESRI.ArcGIS.OSM.Editor,LicenseAlertDialog,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\LicenseAlertDialog.cs,InitializeComponent,The following statement contains a magic number: this.linkLabel1.Padding = new System.Windows.Forms.Padding(13' 12' 13' 12);
Magic Number,ESRI.ArcGIS.OSM.Editor,LicenseAlertDialog,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\LicenseAlertDialog.cs,InitializeComponent,The following statement contains a magic number: this.linkLabel1.Padding = new System.Windows.Forms.Padding(13' 12' 13' 12);
Magic Number,ESRI.ArcGIS.OSM.Editor,LicenseAlertDialog,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\LicenseAlertDialog.cs,InitializeComponent,The following statement contains a magic number: this.linkLabel1.Padding = new System.Windows.Forms.Padding(13' 12' 13' 12);
Magic Number,ESRI.ArcGIS.OSM.Editor,LicenseAlertDialog,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\LicenseAlertDialog.cs,InitializeComponent,The following statement contains a magic number: this.linkLabel1.Padding = new System.Windows.Forms.Padding(13' 12' 13' 12);
Magic Number,ESRI.ArcGIS.OSM.Editor,LicenseAlertDialog,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\LicenseAlertDialog.cs,InitializeComponent,The following statement contains a magic number: this.linkLabel1.Size = new System.Drawing.Size(613' 234);
Magic Number,ESRI.ArcGIS.OSM.Editor,LicenseAlertDialog,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\LicenseAlertDialog.cs,InitializeComponent,The following statement contains a magic number: this.linkLabel1.Size = new System.Drawing.Size(613' 234);
Magic Number,ESRI.ArcGIS.OSM.Editor,LicenseAlertDialog,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\LicenseAlertDialog.cs,InitializeComponent,The following statement contains a magic number: this.linkLabel1.TabIndex = 2;
Magic Number,ESRI.ArcGIS.OSM.Editor,LicenseAlertDialog,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\LicenseAlertDialog.cs,InitializeComponent,The following statement contains a magic number: this.txtLicenseAlert.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,ESRI.ArcGIS.OSM.Editor,LicenseAlertDialog,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\LicenseAlertDialog.cs,InitializeComponent,The following statement contains a magic number: this.txtLicenseAlert.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,ESRI.ArcGIS.OSM.Editor,LicenseAlertDialog,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\LicenseAlertDialog.cs,InitializeComponent,The following statement contains a magic number: this.txtLicenseAlert.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,ESRI.ArcGIS.OSM.Editor,LicenseAlertDialog,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\LicenseAlertDialog.cs,InitializeComponent,The following statement contains a magic number: this.txtLicenseAlert.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,ESRI.ArcGIS.OSM.Editor,LicenseAlertDialog,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\LicenseAlertDialog.cs,InitializeComponent,The following statement contains a magic number: this.txtLicenseAlert.Size = new System.Drawing.Size(613' 234);
Magic Number,ESRI.ArcGIS.OSM.Editor,LicenseAlertDialog,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\LicenseAlertDialog.cs,InitializeComponent,The following statement contains a magic number: this.txtLicenseAlert.Size = new System.Drawing.Size(613' 234);
Magic Number,ESRI.ArcGIS.OSM.Editor,LicenseAlertDialog,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\LicenseAlertDialog.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Location = new System.Drawing.Point(320' 26);
Magic Number,ESRI.ArcGIS.OSM.Editor,LicenseAlertDialog,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\LicenseAlertDialog.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Location = new System.Drawing.Point(320' 26);
Magic Number,ESRI.ArcGIS.OSM.Editor,LicenseAlertDialog,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\LicenseAlertDialog.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,ESRI.ArcGIS.OSM.Editor,LicenseAlertDialog,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\LicenseAlertDialog.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,ESRI.ArcGIS.OSM.Editor,LicenseAlertDialog,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\LicenseAlertDialog.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,ESRI.ArcGIS.OSM.Editor,LicenseAlertDialog,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\LicenseAlertDialog.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,ESRI.ArcGIS.OSM.Editor,LicenseAlertDialog,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\LicenseAlertDialog.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Size = new System.Drawing.Size(100' 28);
Magic Number,ESRI.ArcGIS.OSM.Editor,LicenseAlertDialog,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\LicenseAlertDialog.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Size = new System.Drawing.Size(100' 28);
Magic Number,ESRI.ArcGIS.OSM.Editor,LicenseAlertDialog,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\LicenseAlertDialog.cs,InitializeComponent,The following statement contains a magic number: this.btnOK.Location = new System.Drawing.Point(195' 27);
Magic Number,ESRI.ArcGIS.OSM.Editor,LicenseAlertDialog,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\LicenseAlertDialog.cs,InitializeComponent,The following statement contains a magic number: this.btnOK.Location = new System.Drawing.Point(195' 27);
Magic Number,ESRI.ArcGIS.OSM.Editor,LicenseAlertDialog,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\LicenseAlertDialog.cs,InitializeComponent,The following statement contains a magic number: this.btnOK.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,ESRI.ArcGIS.OSM.Editor,LicenseAlertDialog,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\LicenseAlertDialog.cs,InitializeComponent,The following statement contains a magic number: this.btnOK.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,ESRI.ArcGIS.OSM.Editor,LicenseAlertDialog,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\LicenseAlertDialog.cs,InitializeComponent,The following statement contains a magic number: this.btnOK.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,ESRI.ArcGIS.OSM.Editor,LicenseAlertDialog,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\LicenseAlertDialog.cs,InitializeComponent,The following statement contains a magic number: this.btnOK.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,ESRI.ArcGIS.OSM.Editor,LicenseAlertDialog,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\LicenseAlertDialog.cs,InitializeComponent,The following statement contains a magic number: this.btnOK.Size = new System.Drawing.Size(100' 28);
Magic Number,ESRI.ArcGIS.OSM.Editor,LicenseAlertDialog,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\LicenseAlertDialog.cs,InitializeComponent,The following statement contains a magic number: this.btnOK.Size = new System.Drawing.Size(100' 28);
Magic Number,ESRI.ArcGIS.OSM.Editor,LicenseAlertDialog,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\LicenseAlertDialog.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(613' 322);
Magic Number,ESRI.ArcGIS.OSM.Editor,LicenseAlertDialog,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\LicenseAlertDialog.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(613' 322);
Magic Number,ESRI.ArcGIS.OSM.Editor,LicenseAlertDialog,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\LicenseAlertDialog.cs,InitializeComponent,The following statement contains a magic number: this.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,ESRI.ArcGIS.OSM.Editor,LicenseAlertDialog,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\LicenseAlertDialog.cs,InitializeComponent,The following statement contains a magic number: this.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,ESRI.ArcGIS.OSM.Editor,LicenseAlertDialog,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\LicenseAlertDialog.cs,InitializeComponent,The following statement contains a magic number: this.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,ESRI.ArcGIS.OSM.Editor,LicenseAlertDialog,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\LicenseAlertDialog.cs,InitializeComponent,The following statement contains a magic number: this.Margin = new System.Windows.Forms.Padding(4' 4' 4' 4);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditor,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditor.cs,OnClick,The following statement contains a magic number: mouseCursor.SetCursor(2);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,OnLoad,The following statement contains a magic number: UpdateDataGridViewColumn(2' Color.White);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,mapControlOnExtentUpdated,The following statement contains a magic number: while (currentElement != null)              {                  if (((IElementProperties)currentElement).Name == "DeleteMarker")                  {                      IPoint deleteMarkerLocation = new PointClass();                      deleteMarkerLocation.SpatialReference = mapControl4.SpatialReference;                        deleteMarkerLocation = displayTransformation.ToMapPoint(displayRectangle.left + 45' displayRectangle.bottom - 45);                        currentElement.Geometry = deleteMarkerLocation;                  }                  else if (((IElementProperties)currentElement).Name == "AcceptMarker")                  {                      IPoint acceptMarkerLocation = new PointClass();                      acceptMarkerLocation.SpatialReference = mapControl4.SpatialReference;                        acceptMarkerLocation = displayTransformation.ToMapPoint(displayRectangle.left + 45' displayRectangle.bottom - 45);                        currentElement.Geometry = acceptMarkerLocation;                  }                    currentElement = basicGraphicsContainer.Next();              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,mapControlOnExtentUpdated,The following statement contains a magic number: while (currentElement != null)              {                  if (((IElementProperties)currentElement).Name == "DeleteMarker")                  {                      IPoint deleteMarkerLocation = new PointClass();                      deleteMarkerLocation.SpatialReference = mapControl4.SpatialReference;                        deleteMarkerLocation = displayTransformation.ToMapPoint(displayRectangle.left + 45' displayRectangle.bottom - 45);                        currentElement.Geometry = deleteMarkerLocation;                  }                  else if (((IElementProperties)currentElement).Name == "AcceptMarker")                  {                      IPoint acceptMarkerLocation = new PointClass();                      acceptMarkerLocation.SpatialReference = mapControl4.SpatialReference;                        acceptMarkerLocation = displayTransformation.ToMapPoint(displayRectangle.left + 45' displayRectangle.bottom - 45);                        currentElement.Geometry = acceptMarkerLocation;                  }                    currentElement = basicGraphicsContainer.Next();              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,mapControlOnExtentUpdated,The following statement contains a magic number: while (currentElement != null)              {                  if (((IElementProperties)currentElement).Name == "DeleteMarker")                  {                      IPoint deleteMarkerLocation = new PointClass();                      deleteMarkerLocation.SpatialReference = mapControl4.SpatialReference;                        deleteMarkerLocation = displayTransformation.ToMapPoint(displayRectangle.left + 45' displayRectangle.bottom - 45);                        currentElement.Geometry = deleteMarkerLocation;                  }                  else if (((IElementProperties)currentElement).Name == "AcceptMarker")                  {                      IPoint acceptMarkerLocation = new PointClass();                      acceptMarkerLocation.SpatialReference = mapControl4.SpatialReference;                        acceptMarkerLocation = displayTransformation.ToMapPoint(displayRectangle.left + 45' displayRectangle.bottom - 45);                        currentElement.Geometry = acceptMarkerLocation;                  }                    currentElement = basicGraphicsContainer.Next();              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,mapControlOnExtentUpdated,The following statement contains a magic number: while (currentElement != null)              {                  if (((IElementProperties)currentElement).Name == "DeleteMarker")                  {                      IPoint deleteMarkerLocation = new PointClass();                      deleteMarkerLocation.SpatialReference = mapControl4.SpatialReference;                        deleteMarkerLocation = displayTransformation.ToMapPoint(displayRectangle.left + 45' displayRectangle.bottom - 45);                        currentElement.Geometry = deleteMarkerLocation;                  }                  else if (((IElementProperties)currentElement).Name == "AcceptMarker")                  {                      IPoint acceptMarkerLocation = new PointClass();                      acceptMarkerLocation.SpatialReference = mapControl4.SpatialReference;                        acceptMarkerLocation = displayTransformation.ToMapPoint(displayRectangle.left + 45' displayRectangle.bottom - 45);                        currentElement.Geometry = acceptMarkerLocation;                  }                    currentElement = basicGraphicsContainer.Next();              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,CreatePointFeatureClass,The following statement contains a magic number: if (fields == null)              {                  // create the fields using the required fields method                  fields = objectClassDescription.RequiredFields;                  ESRI.ArcGIS.Geodatabase.IFieldsEdit fieldsEdit = (ESRI.ArcGIS.Geodatabase.IFieldsEdit)fields; // Explicit Cast                    // add the OSM ID field                  IFieldEdit osmIDField = new FieldClass() as IFieldEdit;                  osmIDField.Name_2 = "OSMID";                  osmIDField.Type_2 = esriFieldType.esriFieldTypeString;                  osmIDField.Length_2 = 20;                  fieldsEdit.AddField((IField)osmIDField);                    // add the field for the tag cloud for all other tag/value pairs                  IFieldEdit osmXmlTagsField = new FieldClass() as IFieldEdit;                  osmXmlTagsField.Name_2 = "osmTags";                      osmXmlTagsField.Type_2 = esriFieldType.esriFieldTypeBlob;                  fieldsEdit.AddField((IField)osmXmlTagsField);                    // user' uid' visible' version' changeset' timestamp                  IFieldEdit osmuserField = new FieldClass() as IFieldEdit;                  osmuserField.Name_2 = "osmuser";                  osmuserField.Type_2 = esriFieldType.esriFieldTypeString;                  osmuserField.Length_2 = 100;                  fieldsEdit.AddField((IField) osmuserField);                    IFieldEdit osmuidField = new FieldClass() as IFieldEdit;                  osmuidField.Name_2 = "osmuid";                  osmuidField.Type_2 = esriFieldType.esriFieldTypeInteger;                  fieldsEdit.AddField((IField)osmuidField);                    IFieldEdit osmvisibleField = new FieldClass() as IFieldEdit;                  osmvisibleField.Name_2 = "osmvisible";                  osmvisibleField.Type_2 = esriFieldType.esriFieldTypeString;                  osmvisibleField.Length_2 = 20;                  fieldsEdit.AddField((IField)osmvisibleField);                    IFieldEdit osmversionField = new FieldClass() as IFieldEdit;                  osmversionField.Name_2 = "osmversion";                  osmversionField.Type_2 = esriFieldType.esriFieldTypeSmallInteger;                  fieldsEdit.AddField((IField)osmversionField);                    IFieldEdit osmchangesetField = new FieldClass() as IFieldEdit;                  osmchangesetField.Name_2 = "osmchangeset";                  osmchangesetField.Type_2 = esriFieldType.esriFieldTypeInteger;                  fieldsEdit.AddField((IField)osmchangesetField);                    IFieldEdit osmtimestampField = new FieldClass() as IFieldEdit;                  osmtimestampField.Name_2 = "osmtimestamp";                  osmtimestampField.Type_2 = esriFieldType.esriFieldTypeDate;                  fieldsEdit.AddField((IField)osmtimestampField);                    IFieldEdit osmrelationIDField = new FieldClass() as IFieldEdit;                  osmrelationIDField.Name_2 = "osmMemberOf";                      osmrelationIDField.Type_2 = esriFieldType.esriFieldTypeBlob;                  fieldsEdit.AddField((IField)osmrelationIDField);                    IFieldEdit hasOSMTagsField = new FieldClass() as IFieldEdit;                  hasOSMTagsField.Name_2 = "hasOSMTags";                    IFieldEdit osmSupportingElementField = new FieldClass() as IFieldEdit;                  osmSupportingElementField.Name_2 = "osmSupportingElement";                  osmSupportingElementField.Type_2 = esriFieldType.esriFieldTypeString;                  osmSupportingElementField.Length_2 = 5;                  fieldsEdit.AddField((IField) osmSupportingElementField);                    IFieldEdit wayRefCountField = new FieldClass() as IFieldEdit;                  wayRefCountField.Name_2 = "wayRefCount";                  wayRefCountField.Type_2 = esriFieldType.esriFieldTypeInteger;                  wayRefCountField.DefaultValue_2 = 0;                  fieldsEdit.AddField((IField)wayRefCountField);                      fields = (ESRI.ArcGIS.Geodatabase.IFields)fieldsEdit; // Explicit Cast              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,CreatePointFeatureClass,The following statement contains a magic number: if (fields == null)              {                  // create the fields using the required fields method                  fields = objectClassDescription.RequiredFields;                  ESRI.ArcGIS.Geodatabase.IFieldsEdit fieldsEdit = (ESRI.ArcGIS.Geodatabase.IFieldsEdit)fields; // Explicit Cast                    // add the OSM ID field                  IFieldEdit osmIDField = new FieldClass() as IFieldEdit;                  osmIDField.Name_2 = "OSMID";                  osmIDField.Type_2 = esriFieldType.esriFieldTypeString;                  osmIDField.Length_2 = 20;                  fieldsEdit.AddField((IField)osmIDField);                    // add the field for the tag cloud for all other tag/value pairs                  IFieldEdit osmXmlTagsField = new FieldClass() as IFieldEdit;                  osmXmlTagsField.Name_2 = "osmTags";                      osmXmlTagsField.Type_2 = esriFieldType.esriFieldTypeBlob;                  fieldsEdit.AddField((IField)osmXmlTagsField);                    // user' uid' visible' version' changeset' timestamp                  IFieldEdit osmuserField = new FieldClass() as IFieldEdit;                  osmuserField.Name_2 = "osmuser";                  osmuserField.Type_2 = esriFieldType.esriFieldTypeString;                  osmuserField.Length_2 = 100;                  fieldsEdit.AddField((IField) osmuserField);                    IFieldEdit osmuidField = new FieldClass() as IFieldEdit;                  osmuidField.Name_2 = "osmuid";                  osmuidField.Type_2 = esriFieldType.esriFieldTypeInteger;                  fieldsEdit.AddField((IField)osmuidField);                    IFieldEdit osmvisibleField = new FieldClass() as IFieldEdit;                  osmvisibleField.Name_2 = "osmvisible";                  osmvisibleField.Type_2 = esriFieldType.esriFieldTypeString;                  osmvisibleField.Length_2 = 20;                  fieldsEdit.AddField((IField)osmvisibleField);                    IFieldEdit osmversionField = new FieldClass() as IFieldEdit;                  osmversionField.Name_2 = "osmversion";                  osmversionField.Type_2 = esriFieldType.esriFieldTypeSmallInteger;                  fieldsEdit.AddField((IField)osmversionField);                    IFieldEdit osmchangesetField = new FieldClass() as IFieldEdit;                  osmchangesetField.Name_2 = "osmchangeset";                  osmchangesetField.Type_2 = esriFieldType.esriFieldTypeInteger;                  fieldsEdit.AddField((IField)osmchangesetField);                    IFieldEdit osmtimestampField = new FieldClass() as IFieldEdit;                  osmtimestampField.Name_2 = "osmtimestamp";                  osmtimestampField.Type_2 = esriFieldType.esriFieldTypeDate;                  fieldsEdit.AddField((IField)osmtimestampField);                    IFieldEdit osmrelationIDField = new FieldClass() as IFieldEdit;                  osmrelationIDField.Name_2 = "osmMemberOf";                      osmrelationIDField.Type_2 = esriFieldType.esriFieldTypeBlob;                  fieldsEdit.AddField((IField)osmrelationIDField);                    IFieldEdit hasOSMTagsField = new FieldClass() as IFieldEdit;                  hasOSMTagsField.Name_2 = "hasOSMTags";                    IFieldEdit osmSupportingElementField = new FieldClass() as IFieldEdit;                  osmSupportingElementField.Name_2 = "osmSupportingElement";                  osmSupportingElementField.Type_2 = esriFieldType.esriFieldTypeString;                  osmSupportingElementField.Length_2 = 5;                  fieldsEdit.AddField((IField) osmSupportingElementField);                    IFieldEdit wayRefCountField = new FieldClass() as IFieldEdit;                  wayRefCountField.Name_2 = "wayRefCount";                  wayRefCountField.Type_2 = esriFieldType.esriFieldTypeInteger;                  wayRefCountField.DefaultValue_2 = 0;                  fieldsEdit.AddField((IField)wayRefCountField);                      fields = (ESRI.ArcGIS.Geodatabase.IFields)fieldsEdit; // Explicit Cast              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,CreatePointFeatureClass,The following statement contains a magic number: if (fields == null)              {                  // create the fields using the required fields method                  fields = objectClassDescription.RequiredFields;                  ESRI.ArcGIS.Geodatabase.IFieldsEdit fieldsEdit = (ESRI.ArcGIS.Geodatabase.IFieldsEdit)fields; // Explicit Cast                    // add the OSM ID field                  IFieldEdit osmIDField = new FieldClass() as IFieldEdit;                  osmIDField.Name_2 = "OSMID";                  osmIDField.Type_2 = esriFieldType.esriFieldTypeString;                  osmIDField.Length_2 = 20;                  fieldsEdit.AddField((IField)osmIDField);                    // add the field for the tag cloud for all other tag/value pairs                  IFieldEdit osmXmlTagsField = new FieldClass() as IFieldEdit;                  osmXmlTagsField.Name_2 = "osmTags";                      osmXmlTagsField.Type_2 = esriFieldType.esriFieldTypeBlob;                  fieldsEdit.AddField((IField)osmXmlTagsField);                    // user' uid' visible' version' changeset' timestamp                  IFieldEdit osmuserField = new FieldClass() as IFieldEdit;                  osmuserField.Name_2 = "osmuser";                  osmuserField.Type_2 = esriFieldType.esriFieldTypeString;                  osmuserField.Length_2 = 100;                  fieldsEdit.AddField((IField) osmuserField);                    IFieldEdit osmuidField = new FieldClass() as IFieldEdit;                  osmuidField.Name_2 = "osmuid";                  osmuidField.Type_2 = esriFieldType.esriFieldTypeInteger;                  fieldsEdit.AddField((IField)osmuidField);                    IFieldEdit osmvisibleField = new FieldClass() as IFieldEdit;                  osmvisibleField.Name_2 = "osmvisible";                  osmvisibleField.Type_2 = esriFieldType.esriFieldTypeString;                  osmvisibleField.Length_2 = 20;                  fieldsEdit.AddField((IField)osmvisibleField);                    IFieldEdit osmversionField = new FieldClass() as IFieldEdit;                  osmversionField.Name_2 = "osmversion";                  osmversionField.Type_2 = esriFieldType.esriFieldTypeSmallInteger;                  fieldsEdit.AddField((IField)osmversionField);                    IFieldEdit osmchangesetField = new FieldClass() as IFieldEdit;                  osmchangesetField.Name_2 = "osmchangeset";                  osmchangesetField.Type_2 = esriFieldType.esriFieldTypeInteger;                  fieldsEdit.AddField((IField)osmchangesetField);                    IFieldEdit osmtimestampField = new FieldClass() as IFieldEdit;                  osmtimestampField.Name_2 = "osmtimestamp";                  osmtimestampField.Type_2 = esriFieldType.esriFieldTypeDate;                  fieldsEdit.AddField((IField)osmtimestampField);                    IFieldEdit osmrelationIDField = new FieldClass() as IFieldEdit;                  osmrelationIDField.Name_2 = "osmMemberOf";                      osmrelationIDField.Type_2 = esriFieldType.esriFieldTypeBlob;                  fieldsEdit.AddField((IField)osmrelationIDField);                    IFieldEdit hasOSMTagsField = new FieldClass() as IFieldEdit;                  hasOSMTagsField.Name_2 = "hasOSMTags";                    IFieldEdit osmSupportingElementField = new FieldClass() as IFieldEdit;                  osmSupportingElementField.Name_2 = "osmSupportingElement";                  osmSupportingElementField.Type_2 = esriFieldType.esriFieldTypeString;                  osmSupportingElementField.Length_2 = 5;                  fieldsEdit.AddField((IField) osmSupportingElementField);                    IFieldEdit wayRefCountField = new FieldClass() as IFieldEdit;                  wayRefCountField.Name_2 = "wayRefCount";                  wayRefCountField.Type_2 = esriFieldType.esriFieldTypeInteger;                  wayRefCountField.DefaultValue_2 = 0;                  fieldsEdit.AddField((IField)wayRefCountField);                      fields = (ESRI.ArcGIS.Geodatabase.IFields)fieldsEdit; // Explicit Cast              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,CreatePointFeatureClass,The following statement contains a magic number: if (fields == null)              {                  // create the fields using the required fields method                  fields = objectClassDescription.RequiredFields;                  ESRI.ArcGIS.Geodatabase.IFieldsEdit fieldsEdit = (ESRI.ArcGIS.Geodatabase.IFieldsEdit)fields; // Explicit Cast                    // add the OSM ID field                  IFieldEdit osmIDField = new FieldClass() as IFieldEdit;                  osmIDField.Name_2 = "OSMID";                  osmIDField.Type_2 = esriFieldType.esriFieldTypeString;                  osmIDField.Length_2 = 20;                  fieldsEdit.AddField((IField)osmIDField);                    // add the field for the tag cloud for all other tag/value pairs                  IFieldEdit osmXmlTagsField = new FieldClass() as IFieldEdit;                  osmXmlTagsField.Name_2 = "osmTags";                      osmXmlTagsField.Type_2 = esriFieldType.esriFieldTypeBlob;                  fieldsEdit.AddField((IField)osmXmlTagsField);                    // user' uid' visible' version' changeset' timestamp                  IFieldEdit osmuserField = new FieldClass() as IFieldEdit;                  osmuserField.Name_2 = "osmuser";                  osmuserField.Type_2 = esriFieldType.esriFieldTypeString;                  osmuserField.Length_2 = 100;                  fieldsEdit.AddField((IField) osmuserField);                    IFieldEdit osmuidField = new FieldClass() as IFieldEdit;                  osmuidField.Name_2 = "osmuid";                  osmuidField.Type_2 = esriFieldType.esriFieldTypeInteger;                  fieldsEdit.AddField((IField)osmuidField);                    IFieldEdit osmvisibleField = new FieldClass() as IFieldEdit;                  osmvisibleField.Name_2 = "osmvisible";                  osmvisibleField.Type_2 = esriFieldType.esriFieldTypeString;                  osmvisibleField.Length_2 = 20;                  fieldsEdit.AddField((IField)osmvisibleField);                    IFieldEdit osmversionField = new FieldClass() as IFieldEdit;                  osmversionField.Name_2 = "osmversion";                  osmversionField.Type_2 = esriFieldType.esriFieldTypeSmallInteger;                  fieldsEdit.AddField((IField)osmversionField);                    IFieldEdit osmchangesetField = new FieldClass() as IFieldEdit;                  osmchangesetField.Name_2 = "osmchangeset";                  osmchangesetField.Type_2 = esriFieldType.esriFieldTypeInteger;                  fieldsEdit.AddField((IField)osmchangesetField);                    IFieldEdit osmtimestampField = new FieldClass() as IFieldEdit;                  osmtimestampField.Name_2 = "osmtimestamp";                  osmtimestampField.Type_2 = esriFieldType.esriFieldTypeDate;                  fieldsEdit.AddField((IField)osmtimestampField);                    IFieldEdit osmrelationIDField = new FieldClass() as IFieldEdit;                  osmrelationIDField.Name_2 = "osmMemberOf";                      osmrelationIDField.Type_2 = esriFieldType.esriFieldTypeBlob;                  fieldsEdit.AddField((IField)osmrelationIDField);                    IFieldEdit hasOSMTagsField = new FieldClass() as IFieldEdit;                  hasOSMTagsField.Name_2 = "hasOSMTags";                    IFieldEdit osmSupportingElementField = new FieldClass() as IFieldEdit;                  osmSupportingElementField.Name_2 = "osmSupportingElement";                  osmSupportingElementField.Type_2 = esriFieldType.esriFieldTypeString;                  osmSupportingElementField.Length_2 = 5;                  fieldsEdit.AddField((IField) osmSupportingElementField);                    IFieldEdit wayRefCountField = new FieldClass() as IFieldEdit;                  wayRefCountField.Name_2 = "wayRefCount";                  wayRefCountField.Type_2 = esriFieldType.esriFieldTypeInteger;                  wayRefCountField.DefaultValue_2 = 0;                  fieldsEdit.AddField((IField)wayRefCountField);                      fields = (ESRI.ArcGIS.Geodatabase.IFields)fieldsEdit; // Explicit Cast              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,CreateLineFeatureClass,The following statement contains a magic number: if (fields == null)              {                  // create the fields using the required fields method                  fields = objectClassDescription.RequiredFields;                  ESRI.ArcGIS.Geodatabase.IFieldsEdit fieldsEdit = (ESRI.ArcGIS.Geodatabase.IFieldsEdit)fields; // Explicit Cast                    // add the OSM ID field                  IFieldEdit osmIDField = new FieldClass() as IFieldEdit;                  osmIDField.Name_2 = "OSMID";                  osmIDField.Type_2 = esriFieldType.esriFieldTypeString;                  osmIDField.Length_2 = 20;                  fieldsEdit.AddField((IField)osmIDField);                    // user' uid' visible' version' changeset' timestamp                  IFieldEdit osmuserField = new FieldClass() as IFieldEdit;                  osmuserField.Name_2 = "osmuser";                  osmuserField.Type_2 = esriFieldType.esriFieldTypeString;                  osmuserField.Length_2 = 100;                  fieldsEdit.AddField((IField)osmuserField);                    IFieldEdit osmuidField = new FieldClass() as IFieldEdit;                  osmuidField.Name_2 = "osmuid";                  osmuidField.Type_2 = esriFieldType.esriFieldTypeInteger;                  fieldsEdit.AddField((IField)osmuidField);                    IFieldEdit osmvisibleField = new FieldClass() as IFieldEdit;                  osmvisibleField.Name_2 = "osmvisible";                  osmvisibleField.Type_2 = esriFieldType.esriFieldTypeString;                  osmvisibleField.Length_2 = 20;                  fieldsEdit.AddField((IField)osmvisibleField);                    IFieldEdit osmversionField = new FieldClass() as IFieldEdit;                  osmversionField.Name_2 = "osmversion";                  osmversionField.Type_2 = esriFieldType.esriFieldTypeSmallInteger;                  fieldsEdit.AddField((IField)osmversionField);                    IFieldEdit osmchangesetField = new FieldClass() as IFieldEdit;                  osmchangesetField.Name_2 = "osmchangeset";                  osmchangesetField.Type_2 = esriFieldType.esriFieldTypeInteger;                  fieldsEdit.AddField((IField)osmchangesetField);                    IFieldEdit osmtimestampField = new FieldClass() as IFieldEdit;                  osmtimestampField.Name_2 = "osmtimestamp";                  osmtimestampField.Type_2 = esriFieldType.esriFieldTypeDate;                  fieldsEdit.AddField((IField)osmtimestampField);                    IFieldEdit osmrelationIDField = new FieldClass() as IFieldEdit;                  osmrelationIDField.Name_2 = "osmMemberOf";                      osmrelationIDField.Type_2 = esriFieldType.esriFieldTypeBlob;                  fieldsEdit.AddField((IField)osmrelationIDField);                    // add the field for the tag cloud for all other tag/value pairs                  IFieldEdit osmXmlTagsField = new FieldClass() as IFieldEdit;                  osmXmlTagsField.Name_2 = "osmTags";                  //if (((IWorkspace)workspace).Type == esriWorkspaceType.esriLocalDatabaseWorkspace)                  //{                      osmXmlTagsField.Type_2 = esriFieldType.esriFieldTypeBlob;                  //}                  //else                  //{                  //    osmXmlTagsField.Type_2 = esriFieldType.esriFieldTypeXML;                  //}                  fieldsEdit.AddField((IField)osmXmlTagsField);                    IFieldEdit osmSupportingElementField = new FieldClass() as IFieldEdit;                  osmSupportingElementField.Name_2 = "osmSupportingElement";                  osmSupportingElementField.Type_2 = esriFieldType.esriFieldTypeString;                  osmSupportingElementField.Length_2 = 5;                  osmSupportingElementField.DefaultValue_2 = "no";                  fieldsEdit.AddField((IField)osmSupportingElementField);                    fields = (ESRI.ArcGIS.Geodatabase.IFields)fieldsEdit; // Explicit Cast              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,CreateLineFeatureClass,The following statement contains a magic number: if (fields == null)              {                  // create the fields using the required fields method                  fields = objectClassDescription.RequiredFields;                  ESRI.ArcGIS.Geodatabase.IFieldsEdit fieldsEdit = (ESRI.ArcGIS.Geodatabase.IFieldsEdit)fields; // Explicit Cast                    // add the OSM ID field                  IFieldEdit osmIDField = new FieldClass() as IFieldEdit;                  osmIDField.Name_2 = "OSMID";                  osmIDField.Type_2 = esriFieldType.esriFieldTypeString;                  osmIDField.Length_2 = 20;                  fieldsEdit.AddField((IField)osmIDField);                    // user' uid' visible' version' changeset' timestamp                  IFieldEdit osmuserField = new FieldClass() as IFieldEdit;                  osmuserField.Name_2 = "osmuser";                  osmuserField.Type_2 = esriFieldType.esriFieldTypeString;                  osmuserField.Length_2 = 100;                  fieldsEdit.AddField((IField)osmuserField);                    IFieldEdit osmuidField = new FieldClass() as IFieldEdit;                  osmuidField.Name_2 = "osmuid";                  osmuidField.Type_2 = esriFieldType.esriFieldTypeInteger;                  fieldsEdit.AddField((IField)osmuidField);                    IFieldEdit osmvisibleField = new FieldClass() as IFieldEdit;                  osmvisibleField.Name_2 = "osmvisible";                  osmvisibleField.Type_2 = esriFieldType.esriFieldTypeString;                  osmvisibleField.Length_2 = 20;                  fieldsEdit.AddField((IField)osmvisibleField);                    IFieldEdit osmversionField = new FieldClass() as IFieldEdit;                  osmversionField.Name_2 = "osmversion";                  osmversionField.Type_2 = esriFieldType.esriFieldTypeSmallInteger;                  fieldsEdit.AddField((IField)osmversionField);                    IFieldEdit osmchangesetField = new FieldClass() as IFieldEdit;                  osmchangesetField.Name_2 = "osmchangeset";                  osmchangesetField.Type_2 = esriFieldType.esriFieldTypeInteger;                  fieldsEdit.AddField((IField)osmchangesetField);                    IFieldEdit osmtimestampField = new FieldClass() as IFieldEdit;                  osmtimestampField.Name_2 = "osmtimestamp";                  osmtimestampField.Type_2 = esriFieldType.esriFieldTypeDate;                  fieldsEdit.AddField((IField)osmtimestampField);                    IFieldEdit osmrelationIDField = new FieldClass() as IFieldEdit;                  osmrelationIDField.Name_2 = "osmMemberOf";                      osmrelationIDField.Type_2 = esriFieldType.esriFieldTypeBlob;                  fieldsEdit.AddField((IField)osmrelationIDField);                    // add the field for the tag cloud for all other tag/value pairs                  IFieldEdit osmXmlTagsField = new FieldClass() as IFieldEdit;                  osmXmlTagsField.Name_2 = "osmTags";                  //if (((IWorkspace)workspace).Type == esriWorkspaceType.esriLocalDatabaseWorkspace)                  //{                      osmXmlTagsField.Type_2 = esriFieldType.esriFieldTypeBlob;                  //}                  //else                  //{                  //    osmXmlTagsField.Type_2 = esriFieldType.esriFieldTypeXML;                  //}                  fieldsEdit.AddField((IField)osmXmlTagsField);                    IFieldEdit osmSupportingElementField = new FieldClass() as IFieldEdit;                  osmSupportingElementField.Name_2 = "osmSupportingElement";                  osmSupportingElementField.Type_2 = esriFieldType.esriFieldTypeString;                  osmSupportingElementField.Length_2 = 5;                  osmSupportingElementField.DefaultValue_2 = "no";                  fieldsEdit.AddField((IField)osmSupportingElementField);                    fields = (ESRI.ArcGIS.Geodatabase.IFields)fieldsEdit; // Explicit Cast              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,CreateLineFeatureClass,The following statement contains a magic number: if (fields == null)              {                  // create the fields using the required fields method                  fields = objectClassDescription.RequiredFields;                  ESRI.ArcGIS.Geodatabase.IFieldsEdit fieldsEdit = (ESRI.ArcGIS.Geodatabase.IFieldsEdit)fields; // Explicit Cast                    // add the OSM ID field                  IFieldEdit osmIDField = new FieldClass() as IFieldEdit;                  osmIDField.Name_2 = "OSMID";                  osmIDField.Type_2 = esriFieldType.esriFieldTypeString;                  osmIDField.Length_2 = 20;                  fieldsEdit.AddField((IField)osmIDField);                    // user' uid' visible' version' changeset' timestamp                  IFieldEdit osmuserField = new FieldClass() as IFieldEdit;                  osmuserField.Name_2 = "osmuser";                  osmuserField.Type_2 = esriFieldType.esriFieldTypeString;                  osmuserField.Length_2 = 100;                  fieldsEdit.AddField((IField)osmuserField);                    IFieldEdit osmuidField = new FieldClass() as IFieldEdit;                  osmuidField.Name_2 = "osmuid";                  osmuidField.Type_2 = esriFieldType.esriFieldTypeInteger;                  fieldsEdit.AddField((IField)osmuidField);                    IFieldEdit osmvisibleField = new FieldClass() as IFieldEdit;                  osmvisibleField.Name_2 = "osmvisible";                  osmvisibleField.Type_2 = esriFieldType.esriFieldTypeString;                  osmvisibleField.Length_2 = 20;                  fieldsEdit.AddField((IField)osmvisibleField);                    IFieldEdit osmversionField = new FieldClass() as IFieldEdit;                  osmversionField.Name_2 = "osmversion";                  osmversionField.Type_2 = esriFieldType.esriFieldTypeSmallInteger;                  fieldsEdit.AddField((IField)osmversionField);                    IFieldEdit osmchangesetField = new FieldClass() as IFieldEdit;                  osmchangesetField.Name_2 = "osmchangeset";                  osmchangesetField.Type_2 = esriFieldType.esriFieldTypeInteger;                  fieldsEdit.AddField((IField)osmchangesetField);                    IFieldEdit osmtimestampField = new FieldClass() as IFieldEdit;                  osmtimestampField.Name_2 = "osmtimestamp";                  osmtimestampField.Type_2 = esriFieldType.esriFieldTypeDate;                  fieldsEdit.AddField((IField)osmtimestampField);                    IFieldEdit osmrelationIDField = new FieldClass() as IFieldEdit;                  osmrelationIDField.Name_2 = "osmMemberOf";                      osmrelationIDField.Type_2 = esriFieldType.esriFieldTypeBlob;                  fieldsEdit.AddField((IField)osmrelationIDField);                    // add the field for the tag cloud for all other tag/value pairs                  IFieldEdit osmXmlTagsField = new FieldClass() as IFieldEdit;                  osmXmlTagsField.Name_2 = "osmTags";                  //if (((IWorkspace)workspace).Type == esriWorkspaceType.esriLocalDatabaseWorkspace)                  //{                      osmXmlTagsField.Type_2 = esriFieldType.esriFieldTypeBlob;                  //}                  //else                  //{                  //    osmXmlTagsField.Type_2 = esriFieldType.esriFieldTypeXML;                  //}                  fieldsEdit.AddField((IField)osmXmlTagsField);                    IFieldEdit osmSupportingElementField = new FieldClass() as IFieldEdit;                  osmSupportingElementField.Name_2 = "osmSupportingElement";                  osmSupportingElementField.Type_2 = esriFieldType.esriFieldTypeString;                  osmSupportingElementField.Length_2 = 5;                  osmSupportingElementField.DefaultValue_2 = "no";                  fieldsEdit.AddField((IField)osmSupportingElementField);                    fields = (ESRI.ArcGIS.Geodatabase.IFields)fieldsEdit; // Explicit Cast              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,CreateLineFeatureClass,The following statement contains a magic number: if (fields == null)              {                  // create the fields using the required fields method                  fields = objectClassDescription.RequiredFields;                  ESRI.ArcGIS.Geodatabase.IFieldsEdit fieldsEdit = (ESRI.ArcGIS.Geodatabase.IFieldsEdit)fields; // Explicit Cast                    // add the OSM ID field                  IFieldEdit osmIDField = new FieldClass() as IFieldEdit;                  osmIDField.Name_2 = "OSMID";                  osmIDField.Type_2 = esriFieldType.esriFieldTypeString;                  osmIDField.Length_2 = 20;                  fieldsEdit.AddField((IField)osmIDField);                    // user' uid' visible' version' changeset' timestamp                  IFieldEdit osmuserField = new FieldClass() as IFieldEdit;                  osmuserField.Name_2 = "osmuser";                  osmuserField.Type_2 = esriFieldType.esriFieldTypeString;                  osmuserField.Length_2 = 100;                  fieldsEdit.AddField((IField)osmuserField);                    IFieldEdit osmuidField = new FieldClass() as IFieldEdit;                  osmuidField.Name_2 = "osmuid";                  osmuidField.Type_2 = esriFieldType.esriFieldTypeInteger;                  fieldsEdit.AddField((IField)osmuidField);                    IFieldEdit osmvisibleField = new FieldClass() as IFieldEdit;                  osmvisibleField.Name_2 = "osmvisible";                  osmvisibleField.Type_2 = esriFieldType.esriFieldTypeString;                  osmvisibleField.Length_2 = 20;                  fieldsEdit.AddField((IField)osmvisibleField);                    IFieldEdit osmversionField = new FieldClass() as IFieldEdit;                  osmversionField.Name_2 = "osmversion";                  osmversionField.Type_2 = esriFieldType.esriFieldTypeSmallInteger;                  fieldsEdit.AddField((IField)osmversionField);                    IFieldEdit osmchangesetField = new FieldClass() as IFieldEdit;                  osmchangesetField.Name_2 = "osmchangeset";                  osmchangesetField.Type_2 = esriFieldType.esriFieldTypeInteger;                  fieldsEdit.AddField((IField)osmchangesetField);                    IFieldEdit osmtimestampField = new FieldClass() as IFieldEdit;                  osmtimestampField.Name_2 = "osmtimestamp";                  osmtimestampField.Type_2 = esriFieldType.esriFieldTypeDate;                  fieldsEdit.AddField((IField)osmtimestampField);                    IFieldEdit osmrelationIDField = new FieldClass() as IFieldEdit;                  osmrelationIDField.Name_2 = "osmMemberOf";                      osmrelationIDField.Type_2 = esriFieldType.esriFieldTypeBlob;                  fieldsEdit.AddField((IField)osmrelationIDField);                    // add the field for the tag cloud for all other tag/value pairs                  IFieldEdit osmXmlTagsField = new FieldClass() as IFieldEdit;                  osmXmlTagsField.Name_2 = "osmTags";                  //if (((IWorkspace)workspace).Type == esriWorkspaceType.esriLocalDatabaseWorkspace)                  //{                      osmXmlTagsField.Type_2 = esriFieldType.esriFieldTypeBlob;                  //}                  //else                  //{                  //    osmXmlTagsField.Type_2 = esriFieldType.esriFieldTypeXML;                  //}                  fieldsEdit.AddField((IField)osmXmlTagsField);                    IFieldEdit osmSupportingElementField = new FieldClass() as IFieldEdit;                  osmSupportingElementField.Name_2 = "osmSupportingElement";                  osmSupportingElementField.Type_2 = esriFieldType.esriFieldTypeString;                  osmSupportingElementField.Length_2 = 5;                  osmSupportingElementField.DefaultValue_2 = "no";                  fieldsEdit.AddField((IField)osmSupportingElementField);                    fields = (ESRI.ArcGIS.Geodatabase.IFields)fieldsEdit; // Explicit Cast              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,CreateLineFeatureClass,The following statement contains a magic number: for (int j = 0; j < fields.FieldCount; j++)              {                  if (fields.get_Field(j).Type == ESRI.ArcGIS.Geodatabase.esriFieldType.esriFieldTypeGeometry)                  {                      strShapeField = fields.get_Field(j).Name;                        // redefine geometry type                        IFieldEdit shapeField = fields.get_Field(j) as IFieldEdit;                      IGeometryDefEdit geometryDef = new GeometryDefClass() as IGeometryDefEdit;                      geometryDef.GeometryType_2 = esriGeometryType.esriGeometryPolyline;                      geometryDef.HasZ_2 = false;                      geometryDef.HasM_2 = false;                      geometryDef.GridCount_2 = 3;                      geometryDef.set_GridSize(0' 0);                      geometryDef.set_GridSize(1' 0);                      geometryDef.set_GridSize(2' 0);                        ISpatialReferenceFactory srFactory = new SpatialReferenceEnvironmentClass();                      ISpatialReference wgs84 = srFactory.CreateGeographicCoordinateSystem((int) esriSRGeoCSType.esriSRGeoCS_WGS1984);                      geometryDef.SpatialReference_2 = wgs84;                        shapeField.GeometryDef_2 = (IGeometryDef)geometryDef;                        break;                  }              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,CreateLineFeatureClass,The following statement contains a magic number: for (int j = 0; j < fields.FieldCount; j++)              {                  if (fields.get_Field(j).Type == ESRI.ArcGIS.Geodatabase.esriFieldType.esriFieldTypeGeometry)                  {                      strShapeField = fields.get_Field(j).Name;                        // redefine geometry type                        IFieldEdit shapeField = fields.get_Field(j) as IFieldEdit;                      IGeometryDefEdit geometryDef = new GeometryDefClass() as IGeometryDefEdit;                      geometryDef.GeometryType_2 = esriGeometryType.esriGeometryPolyline;                      geometryDef.HasZ_2 = false;                      geometryDef.HasM_2 = false;                      geometryDef.GridCount_2 = 3;                      geometryDef.set_GridSize(0' 0);                      geometryDef.set_GridSize(1' 0);                      geometryDef.set_GridSize(2' 0);                        ISpatialReferenceFactory srFactory = new SpatialReferenceEnvironmentClass();                      ISpatialReference wgs84 = srFactory.CreateGeographicCoordinateSystem((int) esriSRGeoCSType.esriSRGeoCS_WGS1984);                      geometryDef.SpatialReference_2 = wgs84;                        shapeField.GeometryDef_2 = (IGeometryDef)geometryDef;                        break;                  }              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,CreatePolygonFeatureClass,The following statement contains a magic number: if (fields == null)              {                  // create the fields using the required fields method                  fields = objectClassDescription.RequiredFields;                  ESRI.ArcGIS.Geodatabase.IFieldsEdit fieldsEdit = (ESRI.ArcGIS.Geodatabase.IFieldsEdit)fields; // Explicit Cast                    // add the OSM ID field                  IFieldEdit osmIDField = new FieldClass() as IFieldEdit;                  osmIDField.Name_2 = "OSMID";                  osmIDField.Type_2 = esriFieldType.esriFieldTypeString;                  osmIDField.Length_2 = 20;                  fieldsEdit.AddField((IField)osmIDField);                    // random text field to store additional tags                  IFieldEdit tempTextField = new FieldClass() as IFieldEdit;                  tempTextField.Name_2 = "TagContainer";                  tempTextField.Type_2 = esriFieldType.esriFieldTypeString;                  tempTextField.Length_2 = 255;                  fieldsEdit.AddField((IField)tempTextField);                    // add the field for the tag cloud for all other tag/value pairs                  IFieldEdit osmXmlTagsField = new FieldClass() as IFieldEdit;                  osmXmlTagsField.Name_2 = "osmTags";                      osmXmlTagsField.Type_2 = esriFieldType.esriFieldTypeBlob;                  fieldsEdit.AddField((IField)osmXmlTagsField);                    // user' uid' visible' version' changeset' timestamp                  IFieldEdit osmuserField = new FieldClass() as IFieldEdit;                  osmuserField.Name_2 = "osmuser";                  osmuserField.Type_2 = esriFieldType.esriFieldTypeString;                  osmuserField.Length_2 = 100;                  fieldsEdit.AddField((IField)osmuserField);                    IFieldEdit osmuidField = new FieldClass() as IFieldEdit;                  osmuidField.Name_2 = "osmuid";                  osmuidField.Type_2 = esriFieldType.esriFieldTypeInteger;                  fieldsEdit.AddField((IField)osmuidField);                    IFieldEdit osmvisibleField = new FieldClass() as IFieldEdit;                  osmvisibleField.Name_2 = "osmvisible";                  osmvisibleField.Type_2 = esriFieldType.esriFieldTypeString;                  osmvisibleField.Length_2 = 20;                  fieldsEdit.AddField((IField)osmvisibleField);                    IFieldEdit osmversionField = new FieldClass() as IFieldEdit;                  osmversionField.Name_2 = "osmversion";                  osmversionField.Type_2 = esriFieldType.esriFieldTypeSmallInteger;                  fieldsEdit.AddField((IField)osmversionField);                    IFieldEdit osmchangesetField = new FieldClass() as IFieldEdit;                  osmchangesetField.Name_2 = "osmchangeset";                  osmchangesetField.Type_2 = esriFieldType.esriFieldTypeInteger;                  fieldsEdit.AddField((IField)osmchangesetField);                    IFieldEdit osmtimestampField = new FieldClass() as IFieldEdit;                  osmtimestampField.Name_2 = "osmtimestamp";                  osmtimestampField.Type_2 = esriFieldType.esriFieldTypeDate;                  fieldsEdit.AddField((IField)osmtimestampField);                    IFieldEdit osmrelationIDField = new FieldClass() as IFieldEdit;                  osmrelationIDField.Name_2 = "osmMemberOf";                      osmrelationIDField.Type_2 = esriFieldType.esriFieldTypeBlob;                  fieldsEdit.AddField((IField)osmrelationIDField);                    IFieldEdit osmSupportingElementField = new FieldClass() as IFieldEdit;                  osmSupportingElementField.Name_2 = "osmSupportingElement";                  osmSupportingElementField.Type_2 = esriFieldType.esriFieldTypeString;                  osmSupportingElementField.Length_2 = 5;                  osmSupportingElementField.DefaultValue_2 = "no";                  fieldsEdit.AddField((IField)osmSupportingElementField);                      fields = (ESRI.ArcGIS.Geodatabase.IFields)fieldsEdit; // Explicit Cast              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,CreatePolygonFeatureClass,The following statement contains a magic number: if (fields == null)              {                  // create the fields using the required fields method                  fields = objectClassDescription.RequiredFields;                  ESRI.ArcGIS.Geodatabase.IFieldsEdit fieldsEdit = (ESRI.ArcGIS.Geodatabase.IFieldsEdit)fields; // Explicit Cast                    // add the OSM ID field                  IFieldEdit osmIDField = new FieldClass() as IFieldEdit;                  osmIDField.Name_2 = "OSMID";                  osmIDField.Type_2 = esriFieldType.esriFieldTypeString;                  osmIDField.Length_2 = 20;                  fieldsEdit.AddField((IField)osmIDField);                    // random text field to store additional tags                  IFieldEdit tempTextField = new FieldClass() as IFieldEdit;                  tempTextField.Name_2 = "TagContainer";                  tempTextField.Type_2 = esriFieldType.esriFieldTypeString;                  tempTextField.Length_2 = 255;                  fieldsEdit.AddField((IField)tempTextField);                    // add the field for the tag cloud for all other tag/value pairs                  IFieldEdit osmXmlTagsField = new FieldClass() as IFieldEdit;                  osmXmlTagsField.Name_2 = "osmTags";                      osmXmlTagsField.Type_2 = esriFieldType.esriFieldTypeBlob;                  fieldsEdit.AddField((IField)osmXmlTagsField);                    // user' uid' visible' version' changeset' timestamp                  IFieldEdit osmuserField = new FieldClass() as IFieldEdit;                  osmuserField.Name_2 = "osmuser";                  osmuserField.Type_2 = esriFieldType.esriFieldTypeString;                  osmuserField.Length_2 = 100;                  fieldsEdit.AddField((IField)osmuserField);                    IFieldEdit osmuidField = new FieldClass() as IFieldEdit;                  osmuidField.Name_2 = "osmuid";                  osmuidField.Type_2 = esriFieldType.esriFieldTypeInteger;                  fieldsEdit.AddField((IField)osmuidField);                    IFieldEdit osmvisibleField = new FieldClass() as IFieldEdit;                  osmvisibleField.Name_2 = "osmvisible";                  osmvisibleField.Type_2 = esriFieldType.esriFieldTypeString;                  osmvisibleField.Length_2 = 20;                  fieldsEdit.AddField((IField)osmvisibleField);                    IFieldEdit osmversionField = new FieldClass() as IFieldEdit;                  osmversionField.Name_2 = "osmversion";                  osmversionField.Type_2 = esriFieldType.esriFieldTypeSmallInteger;                  fieldsEdit.AddField((IField)osmversionField);                    IFieldEdit osmchangesetField = new FieldClass() as IFieldEdit;                  osmchangesetField.Name_2 = "osmchangeset";                  osmchangesetField.Type_2 = esriFieldType.esriFieldTypeInteger;                  fieldsEdit.AddField((IField)osmchangesetField);                    IFieldEdit osmtimestampField = new FieldClass() as IFieldEdit;                  osmtimestampField.Name_2 = "osmtimestamp";                  osmtimestampField.Type_2 = esriFieldType.esriFieldTypeDate;                  fieldsEdit.AddField((IField)osmtimestampField);                    IFieldEdit osmrelationIDField = new FieldClass() as IFieldEdit;                  osmrelationIDField.Name_2 = "osmMemberOf";                      osmrelationIDField.Type_2 = esriFieldType.esriFieldTypeBlob;                  fieldsEdit.AddField((IField)osmrelationIDField);                    IFieldEdit osmSupportingElementField = new FieldClass() as IFieldEdit;                  osmSupportingElementField.Name_2 = "osmSupportingElement";                  osmSupportingElementField.Type_2 = esriFieldType.esriFieldTypeString;                  osmSupportingElementField.Length_2 = 5;                  osmSupportingElementField.DefaultValue_2 = "no";                  fieldsEdit.AddField((IField)osmSupportingElementField);                      fields = (ESRI.ArcGIS.Geodatabase.IFields)fieldsEdit; // Explicit Cast              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,CreatePolygonFeatureClass,The following statement contains a magic number: if (fields == null)              {                  // create the fields using the required fields method                  fields = objectClassDescription.RequiredFields;                  ESRI.ArcGIS.Geodatabase.IFieldsEdit fieldsEdit = (ESRI.ArcGIS.Geodatabase.IFieldsEdit)fields; // Explicit Cast                    // add the OSM ID field                  IFieldEdit osmIDField = new FieldClass() as IFieldEdit;                  osmIDField.Name_2 = "OSMID";                  osmIDField.Type_2 = esriFieldType.esriFieldTypeString;                  osmIDField.Length_2 = 20;                  fieldsEdit.AddField((IField)osmIDField);                    // random text field to store additional tags                  IFieldEdit tempTextField = new FieldClass() as IFieldEdit;                  tempTextField.Name_2 = "TagContainer";                  tempTextField.Type_2 = esriFieldType.esriFieldTypeString;                  tempTextField.Length_2 = 255;                  fieldsEdit.AddField((IField)tempTextField);                    // add the field for the tag cloud for all other tag/value pairs                  IFieldEdit osmXmlTagsField = new FieldClass() as IFieldEdit;                  osmXmlTagsField.Name_2 = "osmTags";                      osmXmlTagsField.Type_2 = esriFieldType.esriFieldTypeBlob;                  fieldsEdit.AddField((IField)osmXmlTagsField);                    // user' uid' visible' version' changeset' timestamp                  IFieldEdit osmuserField = new FieldClass() as IFieldEdit;                  osmuserField.Name_2 = "osmuser";                  osmuserField.Type_2 = esriFieldType.esriFieldTypeString;                  osmuserField.Length_2 = 100;                  fieldsEdit.AddField((IField)osmuserField);                    IFieldEdit osmuidField = new FieldClass() as IFieldEdit;                  osmuidField.Name_2 = "osmuid";                  osmuidField.Type_2 = esriFieldType.esriFieldTypeInteger;                  fieldsEdit.AddField((IField)osmuidField);                    IFieldEdit osmvisibleField = new FieldClass() as IFieldEdit;                  osmvisibleField.Name_2 = "osmvisible";                  osmvisibleField.Type_2 = esriFieldType.esriFieldTypeString;                  osmvisibleField.Length_2 = 20;                  fieldsEdit.AddField((IField)osmvisibleField);                    IFieldEdit osmversionField = new FieldClass() as IFieldEdit;                  osmversionField.Name_2 = "osmversion";                  osmversionField.Type_2 = esriFieldType.esriFieldTypeSmallInteger;                  fieldsEdit.AddField((IField)osmversionField);                    IFieldEdit osmchangesetField = new FieldClass() as IFieldEdit;                  osmchangesetField.Name_2 = "osmchangeset";                  osmchangesetField.Type_2 = esriFieldType.esriFieldTypeInteger;                  fieldsEdit.AddField((IField)osmchangesetField);                    IFieldEdit osmtimestampField = new FieldClass() as IFieldEdit;                  osmtimestampField.Name_2 = "osmtimestamp";                  osmtimestampField.Type_2 = esriFieldType.esriFieldTypeDate;                  fieldsEdit.AddField((IField)osmtimestampField);                    IFieldEdit osmrelationIDField = new FieldClass() as IFieldEdit;                  osmrelationIDField.Name_2 = "osmMemberOf";                      osmrelationIDField.Type_2 = esriFieldType.esriFieldTypeBlob;                  fieldsEdit.AddField((IField)osmrelationIDField);                    IFieldEdit osmSupportingElementField = new FieldClass() as IFieldEdit;                  osmSupportingElementField.Name_2 = "osmSupportingElement";                  osmSupportingElementField.Type_2 = esriFieldType.esriFieldTypeString;                  osmSupportingElementField.Length_2 = 5;                  osmSupportingElementField.DefaultValue_2 = "no";                  fieldsEdit.AddField((IField)osmSupportingElementField);                      fields = (ESRI.ArcGIS.Geodatabase.IFields)fieldsEdit; // Explicit Cast              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,CreatePolygonFeatureClass,The following statement contains a magic number: if (fields == null)              {                  // create the fields using the required fields method                  fields = objectClassDescription.RequiredFields;                  ESRI.ArcGIS.Geodatabase.IFieldsEdit fieldsEdit = (ESRI.ArcGIS.Geodatabase.IFieldsEdit)fields; // Explicit Cast                    // add the OSM ID field                  IFieldEdit osmIDField = new FieldClass() as IFieldEdit;                  osmIDField.Name_2 = "OSMID";                  osmIDField.Type_2 = esriFieldType.esriFieldTypeString;                  osmIDField.Length_2 = 20;                  fieldsEdit.AddField((IField)osmIDField);                    // random text field to store additional tags                  IFieldEdit tempTextField = new FieldClass() as IFieldEdit;                  tempTextField.Name_2 = "TagContainer";                  tempTextField.Type_2 = esriFieldType.esriFieldTypeString;                  tempTextField.Length_2 = 255;                  fieldsEdit.AddField((IField)tempTextField);                    // add the field for the tag cloud for all other tag/value pairs                  IFieldEdit osmXmlTagsField = new FieldClass() as IFieldEdit;                  osmXmlTagsField.Name_2 = "osmTags";                      osmXmlTagsField.Type_2 = esriFieldType.esriFieldTypeBlob;                  fieldsEdit.AddField((IField)osmXmlTagsField);                    // user' uid' visible' version' changeset' timestamp                  IFieldEdit osmuserField = new FieldClass() as IFieldEdit;                  osmuserField.Name_2 = "osmuser";                  osmuserField.Type_2 = esriFieldType.esriFieldTypeString;                  osmuserField.Length_2 = 100;                  fieldsEdit.AddField((IField)osmuserField);                    IFieldEdit osmuidField = new FieldClass() as IFieldEdit;                  osmuidField.Name_2 = "osmuid";                  osmuidField.Type_2 = esriFieldType.esriFieldTypeInteger;                  fieldsEdit.AddField((IField)osmuidField);                    IFieldEdit osmvisibleField = new FieldClass() as IFieldEdit;                  osmvisibleField.Name_2 = "osmvisible";                  osmvisibleField.Type_2 = esriFieldType.esriFieldTypeString;                  osmvisibleField.Length_2 = 20;                  fieldsEdit.AddField((IField)osmvisibleField);                    IFieldEdit osmversionField = new FieldClass() as IFieldEdit;                  osmversionField.Name_2 = "osmversion";                  osmversionField.Type_2 = esriFieldType.esriFieldTypeSmallInteger;                  fieldsEdit.AddField((IField)osmversionField);                    IFieldEdit osmchangesetField = new FieldClass() as IFieldEdit;                  osmchangesetField.Name_2 = "osmchangeset";                  osmchangesetField.Type_2 = esriFieldType.esriFieldTypeInteger;                  fieldsEdit.AddField((IField)osmchangesetField);                    IFieldEdit osmtimestampField = new FieldClass() as IFieldEdit;                  osmtimestampField.Name_2 = "osmtimestamp";                  osmtimestampField.Type_2 = esriFieldType.esriFieldTypeDate;                  fieldsEdit.AddField((IField)osmtimestampField);                    IFieldEdit osmrelationIDField = new FieldClass() as IFieldEdit;                  osmrelationIDField.Name_2 = "osmMemberOf";                      osmrelationIDField.Type_2 = esriFieldType.esriFieldTypeBlob;                  fieldsEdit.AddField((IField)osmrelationIDField);                    IFieldEdit osmSupportingElementField = new FieldClass() as IFieldEdit;                  osmSupportingElementField.Name_2 = "osmSupportingElement";                  osmSupportingElementField.Type_2 = esriFieldType.esriFieldTypeString;                  osmSupportingElementField.Length_2 = 5;                  osmSupportingElementField.DefaultValue_2 = "no";                  fieldsEdit.AddField((IField)osmSupportingElementField);                      fields = (ESRI.ArcGIS.Geodatabase.IFields)fieldsEdit; // Explicit Cast              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,CreatePolygonFeatureClass,The following statement contains a magic number: if (fields == null)              {                  // create the fields using the required fields method                  fields = objectClassDescription.RequiredFields;                  ESRI.ArcGIS.Geodatabase.IFieldsEdit fieldsEdit = (ESRI.ArcGIS.Geodatabase.IFieldsEdit)fields; // Explicit Cast                    // add the OSM ID field                  IFieldEdit osmIDField = new FieldClass() as IFieldEdit;                  osmIDField.Name_2 = "OSMID";                  osmIDField.Type_2 = esriFieldType.esriFieldTypeString;                  osmIDField.Length_2 = 20;                  fieldsEdit.AddField((IField)osmIDField);                    // random text field to store additional tags                  IFieldEdit tempTextField = new FieldClass() as IFieldEdit;                  tempTextField.Name_2 = "TagContainer";                  tempTextField.Type_2 = esriFieldType.esriFieldTypeString;                  tempTextField.Length_2 = 255;                  fieldsEdit.AddField((IField)tempTextField);                    // add the field for the tag cloud for all other tag/value pairs                  IFieldEdit osmXmlTagsField = new FieldClass() as IFieldEdit;                  osmXmlTagsField.Name_2 = "osmTags";                      osmXmlTagsField.Type_2 = esriFieldType.esriFieldTypeBlob;                  fieldsEdit.AddField((IField)osmXmlTagsField);                    // user' uid' visible' version' changeset' timestamp                  IFieldEdit osmuserField = new FieldClass() as IFieldEdit;                  osmuserField.Name_2 = "osmuser";                  osmuserField.Type_2 = esriFieldType.esriFieldTypeString;                  osmuserField.Length_2 = 100;                  fieldsEdit.AddField((IField)osmuserField);                    IFieldEdit osmuidField = new FieldClass() as IFieldEdit;                  osmuidField.Name_2 = "osmuid";                  osmuidField.Type_2 = esriFieldType.esriFieldTypeInteger;                  fieldsEdit.AddField((IField)osmuidField);                    IFieldEdit osmvisibleField = new FieldClass() as IFieldEdit;                  osmvisibleField.Name_2 = "osmvisible";                  osmvisibleField.Type_2 = esriFieldType.esriFieldTypeString;                  osmvisibleField.Length_2 = 20;                  fieldsEdit.AddField((IField)osmvisibleField);                    IFieldEdit osmversionField = new FieldClass() as IFieldEdit;                  osmversionField.Name_2 = "osmversion";                  osmversionField.Type_2 = esriFieldType.esriFieldTypeSmallInteger;                  fieldsEdit.AddField((IField)osmversionField);                    IFieldEdit osmchangesetField = new FieldClass() as IFieldEdit;                  osmchangesetField.Name_2 = "osmchangeset";                  osmchangesetField.Type_2 = esriFieldType.esriFieldTypeInteger;                  fieldsEdit.AddField((IField)osmchangesetField);                    IFieldEdit osmtimestampField = new FieldClass() as IFieldEdit;                  osmtimestampField.Name_2 = "osmtimestamp";                  osmtimestampField.Type_2 = esriFieldType.esriFieldTypeDate;                  fieldsEdit.AddField((IField)osmtimestampField);                    IFieldEdit osmrelationIDField = new FieldClass() as IFieldEdit;                  osmrelationIDField.Name_2 = "osmMemberOf";                      osmrelationIDField.Type_2 = esriFieldType.esriFieldTypeBlob;                  fieldsEdit.AddField((IField)osmrelationIDField);                    IFieldEdit osmSupportingElementField = new FieldClass() as IFieldEdit;                  osmSupportingElementField.Name_2 = "osmSupportingElement";                  osmSupportingElementField.Type_2 = esriFieldType.esriFieldTypeString;                  osmSupportingElementField.Length_2 = 5;                  osmSupportingElementField.DefaultValue_2 = "no";                  fieldsEdit.AddField((IField)osmSupportingElementField);                      fields = (ESRI.ArcGIS.Geodatabase.IFields)fieldsEdit; // Explicit Cast              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,CreateErrorContextMenu,The following statement contains a magic number: switch (errorCode)              {                  case 400:                      break;                  case 404:                      ToolStripItem error404deletelocal = new ToolStripMenuItem(resourceManager.GetString("OSMEditor_ConflictEditor_error404_deletelocal"));                      error404deletelocal.AutoSize = true;                      error404deletelocal.Tag = conflictTag.osmConflictResolution.osmDeleteLocalFeature;                      errorContextMenu.Items.Add(error404deletelocal);                      break;                  case 409:                      ToolStripItem error409_keepLocal = new ToolStripMenuItem(resourceManager.GetString("OSMEditor_ConflictEditor_error409_keepLocalGeometryAttributes"));                      error409_keepLocal.AutoSize = true;                      error409_keepLocal.Tag = conflictTag.osmConflictResolution.osmUpdateLocalVersionNumber;                      errorContextMenu.Items.Add(error409_keepLocal);                        ToolStripItem error409_keepLocalGeometryServerAttributes = new ToolStripMenuItem(resourceManager.GetString("OSMEditor_ConflictEditor_error409_keepLocalGeometryServerAttributes"));                      error409_keepLocalGeometryServerAttributes.AutoSize = true;                      error409_keepLocalGeometryServerAttributes.Tag = conflictTag.osmConflictResolution.osmUpdateLocalGeometryServerAttributes;                      errorContextMenu.Items.Add(error409_keepLocalGeometryServerAttributes);                        ToolStripItem error409_keepLocalAttributesServerGeometry = new ToolStripMenuItem(resourceManager.GetString("OSMEditor_ConflictEditor_error409_keepLocalAttributesServerGeometry"));                      error409_keepLocalAttributesServerGeometry.AutoSize = true;                      error409_keepLocalAttributesServerGeometry.Tag = conflictTag.osmConflictResolution.osmUpdateServerGeometryLocalAttributes;                      errorContextMenu.Items.Add(error409_keepLocalAttributesServerGeometry);                        ToolStripItem error409_keepServerGeometryServerAttributes = new ToolStripMenuItem(resourceManager.GetString("OSMEditor_ConflictEditor_error409_keepServerGeometryServerAttributes"));                      error409_keepServerGeometryServerAttributes.AutoSize = true;                      error409_keepServerGeometryServerAttributes.Tag = conflictTag.osmConflictResolution.osmUpdateServerGeometryServerAttributes;                      errorContextMenu.Items.Add(error409_keepServerGeometryServerAttributes);                        break;                  case 412:                      if (changeAction == "delete")                      {                      }                      break;                  case 410:                      ToolStripItem error410 = new ToolStripMenuItem(resourceManager.GetString("OSMEditor_ConflictEditor_error410_deletelocal"));                      error410.AutoSize = true;                      error410.Tag = conflictTag.osmConflictResolution.osmDeleteLocalFeature;                      errorContextMenu.Items.Add(error410);                      break;                  default:                      ToolStripItem errorUnkown = new ToolStripMenuItem(resourceManager.GetString("OSMEditor_ConflictEditor_error_UnknownSolution"));                      errorUnkown.AutoSize = true;                      errorUnkown.Tag = conflictTag.osmConflictResolution.osmNoResolution;                      errorContextMenu.Items.Add(errorUnkown);                        break;              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,CreateErrorContextMenu,The following statement contains a magic number: switch (errorCode)              {                  case 400:                      break;                  case 404:                      ToolStripItem error404deletelocal = new ToolStripMenuItem(resourceManager.GetString("OSMEditor_ConflictEditor_error404_deletelocal"));                      error404deletelocal.AutoSize = true;                      error404deletelocal.Tag = conflictTag.osmConflictResolution.osmDeleteLocalFeature;                      errorContextMenu.Items.Add(error404deletelocal);                      break;                  case 409:                      ToolStripItem error409_keepLocal = new ToolStripMenuItem(resourceManager.GetString("OSMEditor_ConflictEditor_error409_keepLocalGeometryAttributes"));                      error409_keepLocal.AutoSize = true;                      error409_keepLocal.Tag = conflictTag.osmConflictResolution.osmUpdateLocalVersionNumber;                      errorContextMenu.Items.Add(error409_keepLocal);                        ToolStripItem error409_keepLocalGeometryServerAttributes = new ToolStripMenuItem(resourceManager.GetString("OSMEditor_ConflictEditor_error409_keepLocalGeometryServerAttributes"));                      error409_keepLocalGeometryServerAttributes.AutoSize = true;                      error409_keepLocalGeometryServerAttributes.Tag = conflictTag.osmConflictResolution.osmUpdateLocalGeometryServerAttributes;                      errorContextMenu.Items.Add(error409_keepLocalGeometryServerAttributes);                        ToolStripItem error409_keepLocalAttributesServerGeometry = new ToolStripMenuItem(resourceManager.GetString("OSMEditor_ConflictEditor_error409_keepLocalAttributesServerGeometry"));                      error409_keepLocalAttributesServerGeometry.AutoSize = true;                      error409_keepLocalAttributesServerGeometry.Tag = conflictTag.osmConflictResolution.osmUpdateServerGeometryLocalAttributes;                      errorContextMenu.Items.Add(error409_keepLocalAttributesServerGeometry);                        ToolStripItem error409_keepServerGeometryServerAttributes = new ToolStripMenuItem(resourceManager.GetString("OSMEditor_ConflictEditor_error409_keepServerGeometryServerAttributes"));                      error409_keepServerGeometryServerAttributes.AutoSize = true;                      error409_keepServerGeometryServerAttributes.Tag = conflictTag.osmConflictResolution.osmUpdateServerGeometryServerAttributes;                      errorContextMenu.Items.Add(error409_keepServerGeometryServerAttributes);                        break;                  case 412:                      if (changeAction == "delete")                      {                      }                      break;                  case 410:                      ToolStripItem error410 = new ToolStripMenuItem(resourceManager.GetString("OSMEditor_ConflictEditor_error410_deletelocal"));                      error410.AutoSize = true;                      error410.Tag = conflictTag.osmConflictResolution.osmDeleteLocalFeature;                      errorContextMenu.Items.Add(error410);                      break;                  default:                      ToolStripItem errorUnkown = new ToolStripMenuItem(resourceManager.GetString("OSMEditor_ConflictEditor_error_UnknownSolution"));                      errorUnkown.AutoSize = true;                      errorUnkown.Tag = conflictTag.osmConflictResolution.osmNoResolution;                      errorContextMenu.Items.Add(errorUnkown);                        break;              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,CreateErrorContextMenu,The following statement contains a magic number: switch (errorCode)              {                  case 400:                      break;                  case 404:                      ToolStripItem error404deletelocal = new ToolStripMenuItem(resourceManager.GetString("OSMEditor_ConflictEditor_error404_deletelocal"));                      error404deletelocal.AutoSize = true;                      error404deletelocal.Tag = conflictTag.osmConflictResolution.osmDeleteLocalFeature;                      errorContextMenu.Items.Add(error404deletelocal);                      break;                  case 409:                      ToolStripItem error409_keepLocal = new ToolStripMenuItem(resourceManager.GetString("OSMEditor_ConflictEditor_error409_keepLocalGeometryAttributes"));                      error409_keepLocal.AutoSize = true;                      error409_keepLocal.Tag = conflictTag.osmConflictResolution.osmUpdateLocalVersionNumber;                      errorContextMenu.Items.Add(error409_keepLocal);                        ToolStripItem error409_keepLocalGeometryServerAttributes = new ToolStripMenuItem(resourceManager.GetString("OSMEditor_ConflictEditor_error409_keepLocalGeometryServerAttributes"));                      error409_keepLocalGeometryServerAttributes.AutoSize = true;                      error409_keepLocalGeometryServerAttributes.Tag = conflictTag.osmConflictResolution.osmUpdateLocalGeometryServerAttributes;                      errorContextMenu.Items.Add(error409_keepLocalGeometryServerAttributes);                        ToolStripItem error409_keepLocalAttributesServerGeometry = new ToolStripMenuItem(resourceManager.GetString("OSMEditor_ConflictEditor_error409_keepLocalAttributesServerGeometry"));                      error409_keepLocalAttributesServerGeometry.AutoSize = true;                      error409_keepLocalAttributesServerGeometry.Tag = conflictTag.osmConflictResolution.osmUpdateServerGeometryLocalAttributes;                      errorContextMenu.Items.Add(error409_keepLocalAttributesServerGeometry);                        ToolStripItem error409_keepServerGeometryServerAttributes = new ToolStripMenuItem(resourceManager.GetString("OSMEditor_ConflictEditor_error409_keepServerGeometryServerAttributes"));                      error409_keepServerGeometryServerAttributes.AutoSize = true;                      error409_keepServerGeometryServerAttributes.Tag = conflictTag.osmConflictResolution.osmUpdateServerGeometryServerAttributes;                      errorContextMenu.Items.Add(error409_keepServerGeometryServerAttributes);                        break;                  case 412:                      if (changeAction == "delete")                      {                      }                      break;                  case 410:                      ToolStripItem error410 = new ToolStripMenuItem(resourceManager.GetString("OSMEditor_ConflictEditor_error410_deletelocal"));                      error410.AutoSize = true;                      error410.Tag = conflictTag.osmConflictResolution.osmDeleteLocalFeature;                      errorContextMenu.Items.Add(error410);                      break;                  default:                      ToolStripItem errorUnkown = new ToolStripMenuItem(resourceManager.GetString("OSMEditor_ConflictEditor_error_UnknownSolution"));                      errorUnkown.AutoSize = true;                      errorUnkown.Tag = conflictTag.osmConflictResolution.osmNoResolution;                      errorContextMenu.Items.Add(errorUnkown);                        break;              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,CreateErrorContextMenu,The following statement contains a magic number: switch (errorCode)              {                  case 400:                      break;                  case 404:                      ToolStripItem error404deletelocal = new ToolStripMenuItem(resourceManager.GetString("OSMEditor_ConflictEditor_error404_deletelocal"));                      error404deletelocal.AutoSize = true;                      error404deletelocal.Tag = conflictTag.osmConflictResolution.osmDeleteLocalFeature;                      errorContextMenu.Items.Add(error404deletelocal);                      break;                  case 409:                      ToolStripItem error409_keepLocal = new ToolStripMenuItem(resourceManager.GetString("OSMEditor_ConflictEditor_error409_keepLocalGeometryAttributes"));                      error409_keepLocal.AutoSize = true;                      error409_keepLocal.Tag = conflictTag.osmConflictResolution.osmUpdateLocalVersionNumber;                      errorContextMenu.Items.Add(error409_keepLocal);                        ToolStripItem error409_keepLocalGeometryServerAttributes = new ToolStripMenuItem(resourceManager.GetString("OSMEditor_ConflictEditor_error409_keepLocalGeometryServerAttributes"));                      error409_keepLocalGeometryServerAttributes.AutoSize = true;                      error409_keepLocalGeometryServerAttributes.Tag = conflictTag.osmConflictResolution.osmUpdateLocalGeometryServerAttributes;                      errorContextMenu.Items.Add(error409_keepLocalGeometryServerAttributes);                        ToolStripItem error409_keepLocalAttributesServerGeometry = new ToolStripMenuItem(resourceManager.GetString("OSMEditor_ConflictEditor_error409_keepLocalAttributesServerGeometry"));                      error409_keepLocalAttributesServerGeometry.AutoSize = true;                      error409_keepLocalAttributesServerGeometry.Tag = conflictTag.osmConflictResolution.osmUpdateServerGeometryLocalAttributes;                      errorContextMenu.Items.Add(error409_keepLocalAttributesServerGeometry);                        ToolStripItem error409_keepServerGeometryServerAttributes = new ToolStripMenuItem(resourceManager.GetString("OSMEditor_ConflictEditor_error409_keepServerGeometryServerAttributes"));                      error409_keepServerGeometryServerAttributes.AutoSize = true;                      error409_keepServerGeometryServerAttributes.Tag = conflictTag.osmConflictResolution.osmUpdateServerGeometryServerAttributes;                      errorContextMenu.Items.Add(error409_keepServerGeometryServerAttributes);                        break;                  case 412:                      if (changeAction == "delete")                      {                      }                      break;                  case 410:                      ToolStripItem error410 = new ToolStripMenuItem(resourceManager.GetString("OSMEditor_ConflictEditor_error410_deletelocal"));                      error410.AutoSize = true;                      error410.Tag = conflictTag.osmConflictResolution.osmDeleteLocalFeature;                      errorContextMenu.Items.Add(error410);                      break;                  default:                      ToolStripItem errorUnkown = new ToolStripMenuItem(resourceManager.GetString("OSMEditor_ConflictEditor_error_UnknownSolution"));                      errorUnkown.AutoSize = true;                      errorUnkown.Tag = conflictTag.osmConflictResolution.osmNoResolution;                      errorContextMenu.Items.Add(errorUnkown);                        break;              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,CreateErrorContextMenu,The following statement contains a magic number: switch (errorCode)              {                  case 400:                      break;                  case 404:                      ToolStripItem error404deletelocal = new ToolStripMenuItem(resourceManager.GetString("OSMEditor_ConflictEditor_error404_deletelocal"));                      error404deletelocal.AutoSize = true;                      error404deletelocal.Tag = conflictTag.osmConflictResolution.osmDeleteLocalFeature;                      errorContextMenu.Items.Add(error404deletelocal);                      break;                  case 409:                      ToolStripItem error409_keepLocal = new ToolStripMenuItem(resourceManager.GetString("OSMEditor_ConflictEditor_error409_keepLocalGeometryAttributes"));                      error409_keepLocal.AutoSize = true;                      error409_keepLocal.Tag = conflictTag.osmConflictResolution.osmUpdateLocalVersionNumber;                      errorContextMenu.Items.Add(error409_keepLocal);                        ToolStripItem error409_keepLocalGeometryServerAttributes = new ToolStripMenuItem(resourceManager.GetString("OSMEditor_ConflictEditor_error409_keepLocalGeometryServerAttributes"));                      error409_keepLocalGeometryServerAttributes.AutoSize = true;                      error409_keepLocalGeometryServerAttributes.Tag = conflictTag.osmConflictResolution.osmUpdateLocalGeometryServerAttributes;                      errorContextMenu.Items.Add(error409_keepLocalGeometryServerAttributes);                        ToolStripItem error409_keepLocalAttributesServerGeometry = new ToolStripMenuItem(resourceManager.GetString("OSMEditor_ConflictEditor_error409_keepLocalAttributesServerGeometry"));                      error409_keepLocalAttributesServerGeometry.AutoSize = true;                      error409_keepLocalAttributesServerGeometry.Tag = conflictTag.osmConflictResolution.osmUpdateServerGeometryLocalAttributes;                      errorContextMenu.Items.Add(error409_keepLocalAttributesServerGeometry);                        ToolStripItem error409_keepServerGeometryServerAttributes = new ToolStripMenuItem(resourceManager.GetString("OSMEditor_ConflictEditor_error409_keepServerGeometryServerAttributes"));                      error409_keepServerGeometryServerAttributes.AutoSize = true;                      error409_keepServerGeometryServerAttributes.Tag = conflictTag.osmConflictResolution.osmUpdateServerGeometryServerAttributes;                      errorContextMenu.Items.Add(error409_keepServerGeometryServerAttributes);                        break;                  case 412:                      if (changeAction == "delete")                      {                      }                      break;                  case 410:                      ToolStripItem error410 = new ToolStripMenuItem(resourceManager.GetString("OSMEditor_ConflictEditor_error410_deletelocal"));                      error410.AutoSize = true;                      error410.Tag = conflictTag.osmConflictResolution.osmDeleteLocalFeature;                      errorContextMenu.Items.Add(error410);                      break;                  default:                      ToolStripItem errorUnkown = new ToolStripMenuItem(resourceManager.GetString("OSMEditor_ConflictEditor_error_UnknownSolution"));                      errorUnkown.AutoSize = true;                      errorUnkown.Tag = conflictTag.osmConflictResolution.osmNoResolution;                      errorContextMenu.Items.Add(errorUnkown);                        break;              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,UpdateConflictUIBasedOnSelectedResolution,The following statement contains a magic number: switch (selectedConflictResolution)              {                  case conflictTag.osmConflictResolution.osmNoResolution:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalVersionNumber:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryLocalAttributes:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmDeleteLocalFeature:                      UpdateDataGridViewColumn(2' Color.White);                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmChangeUpdateToCreate:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmClearRevisionStatus:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmRemoveRevisionIncident:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  default:                      break;              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,UpdateConflictUIBasedOnSelectedResolution,The following statement contains a magic number: switch (selectedConflictResolution)              {                  case conflictTag.osmConflictResolution.osmNoResolution:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalVersionNumber:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryLocalAttributes:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmDeleteLocalFeature:                      UpdateDataGridViewColumn(2' Color.White);                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmChangeUpdateToCreate:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmClearRevisionStatus:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmRemoveRevisionIncident:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  default:                      break;              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,UpdateConflictUIBasedOnSelectedResolution,The following statement contains a magic number: switch (selectedConflictResolution)              {                  case conflictTag.osmConflictResolution.osmNoResolution:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalVersionNumber:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryLocalAttributes:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmDeleteLocalFeature:                      UpdateDataGridViewColumn(2' Color.White);                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmChangeUpdateToCreate:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmClearRevisionStatus:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmRemoveRevisionIncident:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  default:                      break;              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,UpdateConflictUIBasedOnSelectedResolution,The following statement contains a magic number: switch (selectedConflictResolution)              {                  case conflictTag.osmConflictResolution.osmNoResolution:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalVersionNumber:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryLocalAttributes:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmDeleteLocalFeature:                      UpdateDataGridViewColumn(2' Color.White);                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmChangeUpdateToCreate:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmClearRevisionStatus:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmRemoveRevisionIncident:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  default:                      break;              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,UpdateConflictUIBasedOnSelectedResolution,The following statement contains a magic number: switch (selectedConflictResolution)              {                  case conflictTag.osmConflictResolution.osmNoResolution:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalVersionNumber:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryLocalAttributes:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmDeleteLocalFeature:                      UpdateDataGridViewColumn(2' Color.White);                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmChangeUpdateToCreate:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmClearRevisionStatus:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmRemoveRevisionIncident:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  default:                      break;              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,UpdateConflictUIBasedOnSelectedResolution,The following statement contains a magic number: switch (selectedConflictResolution)              {                  case conflictTag.osmConflictResolution.osmNoResolution:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalVersionNumber:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryLocalAttributes:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmDeleteLocalFeature:                      UpdateDataGridViewColumn(2' Color.White);                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmChangeUpdateToCreate:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmClearRevisionStatus:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmRemoveRevisionIncident:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  default:                      break;              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,UpdateConflictUIBasedOnSelectedResolution,The following statement contains a magic number: switch (selectedConflictResolution)              {                  case conflictTag.osmConflictResolution.osmNoResolution:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalVersionNumber:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryLocalAttributes:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmDeleteLocalFeature:                      UpdateDataGridViewColumn(2' Color.White);                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmChangeUpdateToCreate:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmClearRevisionStatus:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmRemoveRevisionIncident:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  default:                      break;              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,UpdateConflictUIBasedOnSelectedResolution,The following statement contains a magic number: switch (selectedConflictResolution)              {                  case conflictTag.osmConflictResolution.osmNoResolution:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalVersionNumber:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryLocalAttributes:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmDeleteLocalFeature:                      UpdateDataGridViewColumn(2' Color.White);                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmChangeUpdateToCreate:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmClearRevisionStatus:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmRemoveRevisionIncident:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  default:                      break;              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,UpdateConflictUIBasedOnSelectedResolution,The following statement contains a magic number: switch (selectedConflictResolution)              {                  case conflictTag.osmConflictResolution.osmNoResolution:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalVersionNumber:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryLocalAttributes:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmDeleteLocalFeature:                      UpdateDataGridViewColumn(2' Color.White);                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmChangeUpdateToCreate:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmClearRevisionStatus:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmRemoveRevisionIncident:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  default:                      break;              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,UpdateConflictUIBasedOnSelectedResolution,The following statement contains a magic number: switch (selectedConflictResolution)              {                  case conflictTag.osmConflictResolution.osmNoResolution:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalVersionNumber:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryLocalAttributes:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmDeleteLocalFeature:                      UpdateDataGridViewColumn(2' Color.White);                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmChangeUpdateToCreate:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmClearRevisionStatus:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmRemoveRevisionIncident:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  default:                      break;              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,UpdateConflictUIBasedOnSelectedResolution,The following statement contains a magic number: switch (selectedConflictResolution)              {                  case conflictTag.osmConflictResolution.osmNoResolution:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalVersionNumber:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryLocalAttributes:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmDeleteLocalFeature:                      UpdateDataGridViewColumn(2' Color.White);                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmChangeUpdateToCreate:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmClearRevisionStatus:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmRemoveRevisionIncident:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  default:                      break;              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,UpdateConflictUIBasedOnSelectedResolution,The following statement contains a magic number: switch (selectedConflictResolution)              {                  case conflictTag.osmConflictResolution.osmNoResolution:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalVersionNumber:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryLocalAttributes:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmDeleteLocalFeature:                      UpdateDataGridViewColumn(2' Color.White);                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmChangeUpdateToCreate:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmClearRevisionStatus:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmRemoveRevisionIncident:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  default:                      break;              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,UpdateConflictUIBasedOnSelectedResolution,The following statement contains a magic number: switch (selectedConflictResolution)              {                  case conflictTag.osmConflictResolution.osmNoResolution:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalVersionNumber:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryLocalAttributes:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmDeleteLocalFeature:                      UpdateDataGridViewColumn(2' Color.White);                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmChangeUpdateToCreate:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmClearRevisionStatus:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmRemoveRevisionIncident:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  default:                      break;              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,UpdateConflictUIBasedOnSelectedResolution,The following statement contains a magic number: switch (selectedConflictResolution)              {                  case conflictTag.osmConflictResolution.osmNoResolution:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalVersionNumber:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryLocalAttributes:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmDeleteLocalFeature:                      UpdateDataGridViewColumn(2' Color.White);                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmChangeUpdateToCreate:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmClearRevisionStatus:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmRemoveRevisionIncident:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  default:                      break;              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,UpdateConflictUIBasedOnSelectedResolution,The following statement contains a magic number: switch (selectedConflictResolution)              {                  case conflictTag.osmConflictResolution.osmNoResolution:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalVersionNumber:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryLocalAttributes:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmDeleteLocalFeature:                      UpdateDataGridViewColumn(2' Color.White);                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmChangeUpdateToCreate:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmClearRevisionStatus:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmRemoveRevisionIncident:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  default:                      break;              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,UpdateConflictUIBasedOnSelectedResolution,The following statement contains a magic number: switch (selectedConflictResolution)              {                  case conflictTag.osmConflictResolution.osmNoResolution:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalVersionNumber:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryLocalAttributes:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmDeleteLocalFeature:                      UpdateDataGridViewColumn(2' Color.White);                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmChangeUpdateToCreate:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmClearRevisionStatus:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmRemoveRevisionIncident:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  default:                      break;              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,UpdateConflictUIBasedOnSelectedResolution,The following statement contains a magic number: switch (selectedConflictResolution)              {                  case conflictTag.osmConflictResolution.osmNoResolution:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalVersionNumber:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryLocalAttributes:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmDeleteLocalFeature:                      UpdateDataGridViewColumn(2' Color.White);                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmChangeUpdateToCreate:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmClearRevisionStatus:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmRemoveRevisionIncident:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  default:                      break;              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,UpdateConflictUIBasedOnSelectedResolution,The following statement contains a magic number: switch (selectedConflictResolution)              {                  case conflictTag.osmConflictResolution.osmNoResolution:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalVersionNumber:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryLocalAttributes:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmDeleteLocalFeature:                      UpdateDataGridViewColumn(2' Color.White);                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmChangeUpdateToCreate:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmClearRevisionStatus:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmRemoveRevisionIncident:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  default:                      break;              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,UpdateConflictUIBasedOnSelectedResolution,The following statement contains a magic number: switch (selectedConflictResolution)              {                  case conflictTag.osmConflictResolution.osmNoResolution:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalVersionNumber:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryLocalAttributes:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmDeleteLocalFeature:                      UpdateDataGridViewColumn(2' Color.White);                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmChangeUpdateToCreate:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmClearRevisionStatus:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmRemoveRevisionIncident:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  default:                      break;              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,UpdateConflictUIBasedOnSelectedResolution,The following statement contains a magic number: switch (selectedConflictResolution)              {                  case conflictTag.osmConflictResolution.osmNoResolution:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalVersionNumber:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryLocalAttributes:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmDeleteLocalFeature:                      UpdateDataGridViewColumn(2' Color.White);                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmChangeUpdateToCreate:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmClearRevisionStatus:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmRemoveRevisionIncident:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  default:                      break;              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,UpdateConflictUIBasedOnSelectedResolution,The following statement contains a magic number: switch (selectedConflictResolution)              {                  case conflictTag.osmConflictResolution.osmNoResolution:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalVersionNumber:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryLocalAttributes:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmDeleteLocalFeature:                      UpdateDataGridViewColumn(2' Color.White);                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmChangeUpdateToCreate:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmClearRevisionStatus:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmRemoveRevisionIncident:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  default:                      break;              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,UpdateConflictUIBasedOnSelectedResolution,The following statement contains a magic number: switch (selectedConflictResolution)              {                  case conflictTag.osmConflictResolution.osmNoResolution:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalVersionNumber:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryLocalAttributes:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmDeleteLocalFeature:                      UpdateDataGridViewColumn(2' Color.White);                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmChangeUpdateToCreate:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmClearRevisionStatus:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmRemoveRevisionIncident:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  default:                      break;              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,UpdateConflictUIBasedOnSelectedResolution,The following statement contains a magic number: switch (selectedConflictResolution)              {                  case conflictTag.osmConflictResolution.osmNoResolution:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalVersionNumber:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryLocalAttributes:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmDeleteLocalFeature:                      UpdateDataGridViewColumn(2' Color.White);                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmChangeUpdateToCreate:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmClearRevisionStatus:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmRemoveRevisionIncident:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  default:                      break;              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,UpdateConflictUIBasedOnSelectedResolution,The following statement contains a magic number: switch (selectedConflictResolution)              {                  case conflictTag.osmConflictResolution.osmNoResolution:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalVersionNumber:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryLocalAttributes:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmDeleteLocalFeature:                      UpdateDataGridViewColumn(2' Color.White);                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmChangeUpdateToCreate:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmClearRevisionStatus:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmRemoveRevisionIncident:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  default:                      break;              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,UpdateConflictUIBasedOnSelectedResolution,The following statement contains a magic number: switch (selectedConflictResolution)              {                  case conflictTag.osmConflictResolution.osmNoResolution:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalVersionNumber:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryLocalAttributes:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmDeleteLocalFeature:                      UpdateDataGridViewColumn(2' Color.White);                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmChangeUpdateToCreate:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmClearRevisionStatus:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmRemoveRevisionIncident:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  default:                      break;              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,UpdateConflictUIBasedOnSelectedResolution,The following statement contains a magic number: switch (selectedConflictResolution)              {                  case conflictTag.osmConflictResolution.osmNoResolution:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalVersionNumber:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryLocalAttributes:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmDeleteLocalFeature:                      UpdateDataGridViewColumn(2' Color.White);                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmChangeUpdateToCreate:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmClearRevisionStatus:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmRemoveRevisionIncident:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  default:                      break;              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,UpdateConflictUIBasedOnSelectedResolution,The following statement contains a magic number: switch (selectedConflictResolution)              {                  case conflictTag.osmConflictResolution.osmNoResolution:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalVersionNumber:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryLocalAttributes:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmDeleteLocalFeature:                      UpdateDataGridViewColumn(2' Color.White);                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmChangeUpdateToCreate:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmClearRevisionStatus:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmRemoveRevisionIncident:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  default:                      break;              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,UpdateConflictUIBasedOnSelectedResolution,The following statement contains a magic number: switch (selectedConflictResolution)              {                  case conflictTag.osmConflictResolution.osmNoResolution:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalVersionNumber:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryLocalAttributes:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmDeleteLocalFeature:                      UpdateDataGridViewColumn(2' Color.White);                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmChangeUpdateToCreate:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmClearRevisionStatus:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmRemoveRevisionIncident:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  default:                      break;              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,UpdateConflictUIBasedOnSelectedResolution,The following statement contains a magic number: switch (selectedConflictResolution)              {                  case conflictTag.osmConflictResolution.osmNoResolution:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalVersionNumber:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryLocalAttributes:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmDeleteLocalFeature:                      UpdateDataGridViewColumn(2' Color.White);                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmChangeUpdateToCreate:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmClearRevisionStatus:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmRemoveRevisionIncident:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  default:                      break;              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,UpdateConflictUIBasedOnSelectedResolution,The following statement contains a magic number: switch (selectedConflictResolution)              {                  case conflictTag.osmConflictResolution.osmNoResolution:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalVersionNumber:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryLocalAttributes:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmDeleteLocalFeature:                      UpdateDataGridViewColumn(2' Color.White);                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmChangeUpdateToCreate:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmClearRevisionStatus:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmRemoveRevisionIncident:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  default:                      break;              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,UpdateConflictUIBasedOnSelectedResolution,The following statement contains a magic number: switch (selectedConflictResolution)              {                  case conflictTag.osmConflictResolution.osmNoResolution:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalVersionNumber:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryLocalAttributes:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmDeleteLocalFeature:                      UpdateDataGridViewColumn(2' Color.White);                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmChangeUpdateToCreate:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmClearRevisionStatus:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmRemoveRevisionIncident:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  default:                      break;              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,UpdateConflictUIBasedOnSelectedResolution,The following statement contains a magic number: switch (selectedConflictResolution)              {                  case conflictTag.osmConflictResolution.osmNoResolution:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalVersionNumber:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryLocalAttributes:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmDeleteLocalFeature:                      UpdateDataGridViewColumn(2' Color.White);                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmChangeUpdateToCreate:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmClearRevisionStatus:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmRemoveRevisionIncident:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  default:                      break;              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,UpdateConflictUIBasedOnSelectedResolution,The following statement contains a magic number: switch (selectedConflictResolution)              {                  case conflictTag.osmConflictResolution.osmNoResolution:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalVersionNumber:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryLocalAttributes:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmDeleteLocalFeature:                      UpdateDataGridViewColumn(2' Color.White);                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmChangeUpdateToCreate:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmClearRevisionStatus:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmRemoveRevisionIncident:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  default:                      break;              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,UpdateConflictUIBasedOnSelectedResolution,The following statement contains a magic number: switch (selectedConflictResolution)              {                  case conflictTag.osmConflictResolution.osmNoResolution:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalVersionNumber:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryLocalAttributes:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmDeleteLocalFeature:                      UpdateDataGridViewColumn(2' Color.White);                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmChangeUpdateToCreate:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmClearRevisionStatus:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmRemoveRevisionIncident:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  default:                      break;              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,UpdateConflictUIBasedOnSelectedResolution,The following statement contains a magic number: switch (selectedConflictResolution)              {                  case conflictTag.osmConflictResolution.osmNoResolution:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalVersionNumber:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryLocalAttributes:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmDeleteLocalFeature:                      UpdateDataGridViewColumn(2' Color.White);                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmChangeUpdateToCreate:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmClearRevisionStatus:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmRemoveRevisionIncident:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  default:                      break;              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,UpdateConflictUIBasedOnSelectedResolution,The following statement contains a magic number: switch (selectedConflictResolution)              {                  case conflictTag.osmConflictResolution.osmNoResolution:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalVersionNumber:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateLocalGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryLocalAttributes:                      UpdateDataGridViewColumn(2' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(1' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmUpdateServerGeometryServerAttributes:                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      UpdateDataGridViewColumn(2' Color.FromArgb(192' 255' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl2.Object' "AcceptMarker");                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmDeleteLocalFeature:                      UpdateDataGridViewColumn(2' Color.White);                      UpdateDataGridViewColumn(1' Color.FromArgb(255' 192' 192));                      DeleteAllMarkerElements();                      UpdateMapControlWithMarker((IMapControl4)axMapControl1.Object' "DeleteMarker");                      break;                  case conflictTag.osmConflictResolution.osmChangeUpdateToCreate:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmClearRevisionStatus:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  case conflictTag.osmConflictResolution.osmRemoveRevisionIncident:                      UpdateDataGridViewColumn(1' Color.White);                      UpdateDataGridViewColumn(2' Color.White);                      DeleteAllMarkerElements();                      break;                  default:                      break;              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,UpdateMapControlWithMarker,The following statement contains a magic number: redRgbColor.Red = 255;
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,UpdateMapControlWithMarker,The following statement contains a magic number: yellowRgbColor.Red = 255;
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,UpdateMapControlWithMarker,The following statement contains a magic number: yellowRgbColor.Green = 255;
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,UpdateMapControlWithMarker,The following statement contains a magic number: yellowRgbColor.Blue = 115;
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,UpdateMapControlWithMarker,The following statement contains a magic number: greenRgbColor.Green = 255;
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,UpdateMapControlWithMarker,The following statement contains a magic number: esriDefaultMarkerFont.Size = Convert.ToDecimal(48);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,UpdateMapControlWithMarker,The following statement contains a magic number: markerLocation.X = extentEnvelope.LowerLeft.X + extentEnvelope.Width / 10;
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,UpdateMapControlWithMarker,The following statement contains a magic number: markerLocation.Y = extentEnvelope.LowerLeft.Y + extentEnvelope.Height / (10 * (extentEnvelope.Height / extentEnvelope.Width));
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,UpdateMapControlWithMarker,The following statement contains a magic number: backgroundMarkerSymbol.Size = 45;
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,UpdateMapControlWithMarker,The following statement contains a magic number: backgroundMarkerSymbol.OutlineSize = 2;
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,UpdateMapControlWithMarker,The following statement contains a magic number: if (action == "DeleteMarker")              {                  ICharacterMarkerSymbol deleteMarkerSymbol = new CharacterMarkerSymbolClass();                  deleteMarkerSymbol.Font = esriDefaultMarkerFont;                  deleteMarkerSymbol.CharacterIndex = 68;                  deleteMarkerSymbol.Color = redRgbColor;                  deleteMarkerSymbol.Size = 48;                    multiLayerMarkerSymbol.AddLayer(deleteMarkerSymbol);                    ((IElementProperties)markerElement).Name = "DeleteMarker";                }              else if (action == "AcceptMarker")              {                  ICharacterMarkerSymbol acceptMarkerSymbol = new CharacterMarkerSymbolClass();                    acceptMarkerSymbol.Font = esriDefaultMarkerFont;                  acceptMarkerSymbol.CharacterIndex = 105;                  acceptMarkerSymbol.Color = greenRgbColor;                  acceptMarkerSymbol.Size = 48;                    multiLayerMarkerSymbol.AddLayer(acceptMarkerSymbol);                    ((IElementProperties)markerElement).Name = "AcceptMarker";              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,UpdateMapControlWithMarker,The following statement contains a magic number: if (action == "DeleteMarker")              {                  ICharacterMarkerSymbol deleteMarkerSymbol = new CharacterMarkerSymbolClass();                  deleteMarkerSymbol.Font = esriDefaultMarkerFont;                  deleteMarkerSymbol.CharacterIndex = 68;                  deleteMarkerSymbol.Color = redRgbColor;                  deleteMarkerSymbol.Size = 48;                    multiLayerMarkerSymbol.AddLayer(deleteMarkerSymbol);                    ((IElementProperties)markerElement).Name = "DeleteMarker";                }              else if (action == "AcceptMarker")              {                  ICharacterMarkerSymbol acceptMarkerSymbol = new CharacterMarkerSymbolClass();                    acceptMarkerSymbol.Font = esriDefaultMarkerFont;                  acceptMarkerSymbol.CharacterIndex = 105;                  acceptMarkerSymbol.Color = greenRgbColor;                  acceptMarkerSymbol.Size = 48;                    multiLayerMarkerSymbol.AddLayer(acceptMarkerSymbol);                    ((IElementProperties)markerElement).Name = "AcceptMarker";              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,UpdateMapControlWithMarker,The following statement contains a magic number: if (action == "DeleteMarker")              {                  ICharacterMarkerSymbol deleteMarkerSymbol = new CharacterMarkerSymbolClass();                  deleteMarkerSymbol.Font = esriDefaultMarkerFont;                  deleteMarkerSymbol.CharacterIndex = 68;                  deleteMarkerSymbol.Color = redRgbColor;                  deleteMarkerSymbol.Size = 48;                    multiLayerMarkerSymbol.AddLayer(deleteMarkerSymbol);                    ((IElementProperties)markerElement).Name = "DeleteMarker";                }              else if (action == "AcceptMarker")              {                  ICharacterMarkerSymbol acceptMarkerSymbol = new CharacterMarkerSymbolClass();                    acceptMarkerSymbol.Font = esriDefaultMarkerFont;                  acceptMarkerSymbol.CharacterIndex = 105;                  acceptMarkerSymbol.Color = greenRgbColor;                  acceptMarkerSymbol.Size = 48;                    multiLayerMarkerSymbol.AddLayer(acceptMarkerSymbol);                    ((IElementProperties)markerElement).Name = "AcceptMarker";              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,UpdateMapControlWithMarker,The following statement contains a magic number: if (action == "DeleteMarker")              {                  ICharacterMarkerSymbol deleteMarkerSymbol = new CharacterMarkerSymbolClass();                  deleteMarkerSymbol.Font = esriDefaultMarkerFont;                  deleteMarkerSymbol.CharacterIndex = 68;                  deleteMarkerSymbol.Color = redRgbColor;                  deleteMarkerSymbol.Size = 48;                    multiLayerMarkerSymbol.AddLayer(deleteMarkerSymbol);                    ((IElementProperties)markerElement).Name = "DeleteMarker";                }              else if (action == "AcceptMarker")              {                  ICharacterMarkerSymbol acceptMarkerSymbol = new CharacterMarkerSymbolClass();                    acceptMarkerSymbol.Font = esriDefaultMarkerFont;                  acceptMarkerSymbol.CharacterIndex = 105;                  acceptMarkerSymbol.Color = greenRgbColor;                  acceptMarkerSymbol.Size = 48;                    multiLayerMarkerSymbol.AddLayer(acceptMarkerSymbol);                    ((IElementProperties)markerElement).Name = "AcceptMarker";              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,UpdateMapControlWithMarker,The following statement contains a magic number: graphicsContainer.AddElement((IElement)markerElement' 99);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,PaintFeaturesToMapControl,The following statement contains a magic number: if (localOSMFeature != null)              {                  IRgbColor greenColor = new RgbColorClass();                  greenColor.Green = 255;                  greenColor.Red = 0;                  greenColor.Blue = 0;                    IMapControl4 localMapControl = axMapControl1.Object as IMapControl4;                    IGeometry localGeometry = localOSMFeature.Shape;                  localGeometry.Project(localMapControl.SpatialReference);                    IElement localOSMElement = OSMGeometryToGraphicElement(localGeometry' greenColor);                    IGraphicsContainer basicGraphicsContainer = axMapControl1.Map.BasicGraphicsLayer as IGraphicsContainer;                    basicGraphicsContainer.DeleteAllElements();                    basicGraphicsContainer.AddElement(localOSMElement' 0);                    if (localOSMFeature.Shape.GeometryType == esriGeometryType.esriGeometryPoint)                  {                      localMapControl.CenterAt((IPoint)localGeometry);                      localMapControl.MapScale = 500;                  }                  else                  {                      IEnvelope featureEnvelope = localOSMFeature.Shape.Envelope;                      featureEnvelope.Project(localMapControl.SpatialReference);                        featureEnvelope.Expand(1.1' 1.1' true);                        localMapControl.Extent = featureEnvelope;                  }                    localMapControl.Refresh(esriViewDrawPhase.esriViewGraphics' null' null);                }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,PaintFeaturesToMapControl,The following statement contains a magic number: if (localOSMFeature != null)              {                  IRgbColor greenColor = new RgbColorClass();                  greenColor.Green = 255;                  greenColor.Red = 0;                  greenColor.Blue = 0;                    IMapControl4 localMapControl = axMapControl1.Object as IMapControl4;                    IGeometry localGeometry = localOSMFeature.Shape;                  localGeometry.Project(localMapControl.SpatialReference);                    IElement localOSMElement = OSMGeometryToGraphicElement(localGeometry' greenColor);                    IGraphicsContainer basicGraphicsContainer = axMapControl1.Map.BasicGraphicsLayer as IGraphicsContainer;                    basicGraphicsContainer.DeleteAllElements();                    basicGraphicsContainer.AddElement(localOSMElement' 0);                    if (localOSMFeature.Shape.GeometryType == esriGeometryType.esriGeometryPoint)                  {                      localMapControl.CenterAt((IPoint)localGeometry);                      localMapControl.MapScale = 500;                  }                  else                  {                      IEnvelope featureEnvelope = localOSMFeature.Shape.Envelope;                      featureEnvelope.Project(localMapControl.SpatialReference);                        featureEnvelope.Expand(1.1' 1.1' true);                        localMapControl.Extent = featureEnvelope;                  }                    localMapControl.Refresh(esriViewDrawPhase.esriViewGraphics' null' null);                }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,PaintFeaturesToMapControl,The following statement contains a magic number: if (localOSMFeature != null)              {                  IRgbColor greenColor = new RgbColorClass();                  greenColor.Green = 255;                  greenColor.Red = 0;                  greenColor.Blue = 0;                    IMapControl4 localMapControl = axMapControl1.Object as IMapControl4;                    IGeometry localGeometry = localOSMFeature.Shape;                  localGeometry.Project(localMapControl.SpatialReference);                    IElement localOSMElement = OSMGeometryToGraphicElement(localGeometry' greenColor);                    IGraphicsContainer basicGraphicsContainer = axMapControl1.Map.BasicGraphicsLayer as IGraphicsContainer;                    basicGraphicsContainer.DeleteAllElements();                    basicGraphicsContainer.AddElement(localOSMElement' 0);                    if (localOSMFeature.Shape.GeometryType == esriGeometryType.esriGeometryPoint)                  {                      localMapControl.CenterAt((IPoint)localGeometry);                      localMapControl.MapScale = 500;                  }                  else                  {                      IEnvelope featureEnvelope = localOSMFeature.Shape.Envelope;                      featureEnvelope.Project(localMapControl.SpatialReference);                        featureEnvelope.Expand(1.1' 1.1' true);                        localMapControl.Extent = featureEnvelope;                  }                    localMapControl.Refresh(esriViewDrawPhase.esriViewGraphics' null' null);                }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,PaintFeaturesToMapControl,The following statement contains a magic number: if (localOSMFeature != null)              {                  IRgbColor greenColor = new RgbColorClass();                  greenColor.Green = 255;                  greenColor.Red = 0;                  greenColor.Blue = 0;                    IMapControl4 localMapControl = axMapControl1.Object as IMapControl4;                    IGeometry localGeometry = localOSMFeature.Shape;                  localGeometry.Project(localMapControl.SpatialReference);                    IElement localOSMElement = OSMGeometryToGraphicElement(localGeometry' greenColor);                    IGraphicsContainer basicGraphicsContainer = axMapControl1.Map.BasicGraphicsLayer as IGraphicsContainer;                    basicGraphicsContainer.DeleteAllElements();                    basicGraphicsContainer.AddElement(localOSMElement' 0);                    if (localOSMFeature.Shape.GeometryType == esriGeometryType.esriGeometryPoint)                  {                      localMapControl.CenterAt((IPoint)localGeometry);                      localMapControl.MapScale = 500;                  }                  else                  {                      IEnvelope featureEnvelope = localOSMFeature.Shape.Envelope;                      featureEnvelope.Project(localMapControl.SpatialReference);                        featureEnvelope.Expand(1.1' 1.1' true);                        localMapControl.Extent = featureEnvelope;                  }                    localMapControl.Refresh(esriViewDrawPhase.esriViewGraphics' null' null);                }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,PaintFeaturesToMapControl,The following statement contains a magic number: if (serverOSMFeature != null)              {                  IRgbColor redColor = new RgbColorClass();                  redColor.Green = 0;                  redColor.Red = 255;                  redColor.Blue = 0;                    IMapControl4 serverMapControl = axMapControl2.Object as IMapControl4;                    IGeometry serverGeometry = serverOSMFeature.Shape as IGeometry;                  serverGeometry.Project(serverMapControl.SpatialReference);                    IElement serverOSMElement = OSMGeometryToGraphicElement(serverGeometry' redColor);                    IGraphicsContainer basicGraphicsContainer = axMapControl2.Map.BasicGraphicsLayer as IGraphicsContainer;                    basicGraphicsContainer.DeleteAllElements();                    basicGraphicsContainer.AddElement(serverOSMElement' 0);                    if (serverOSMFeature.Shape.GeometryType == esriGeometryType.esriGeometryPoint)                  {                      serverMapControl.CenterAt((IPoint)serverGeometry);                      serverMapControl.MapScale = 500;                  }                  else                  {                      IEnvelope featureEnvelope = serverOSMFeature.Shape.Envelope;                      featureEnvelope.Project(serverMapControl.SpatialReference);                        featureEnvelope.Expand(1.1' 1.1' true);                        serverMapControl.Extent = featureEnvelope;                  }                    serverMapControl.Refresh(esriViewDrawPhase.esriViewGraphics' null' null);              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,PaintFeaturesToMapControl,The following statement contains a magic number: if (serverOSMFeature != null)              {                  IRgbColor redColor = new RgbColorClass();                  redColor.Green = 0;                  redColor.Red = 255;                  redColor.Blue = 0;                    IMapControl4 serverMapControl = axMapControl2.Object as IMapControl4;                    IGeometry serverGeometry = serverOSMFeature.Shape as IGeometry;                  serverGeometry.Project(serverMapControl.SpatialReference);                    IElement serverOSMElement = OSMGeometryToGraphicElement(serverGeometry' redColor);                    IGraphicsContainer basicGraphicsContainer = axMapControl2.Map.BasicGraphicsLayer as IGraphicsContainer;                    basicGraphicsContainer.DeleteAllElements();                    basicGraphicsContainer.AddElement(serverOSMElement' 0);                    if (serverOSMFeature.Shape.GeometryType == esriGeometryType.esriGeometryPoint)                  {                      serverMapControl.CenterAt((IPoint)serverGeometry);                      serverMapControl.MapScale = 500;                  }                  else                  {                      IEnvelope featureEnvelope = serverOSMFeature.Shape.Envelope;                      featureEnvelope.Project(serverMapControl.SpatialReference);                        featureEnvelope.Expand(1.1' 1.1' true);                        serverMapControl.Extent = featureEnvelope;                  }                    serverMapControl.Refresh(esriViewDrawPhase.esriViewGraphics' null' null);              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,PaintFeaturesToMapControl,The following statement contains a magic number: if (serverOSMFeature != null)              {                  IRgbColor redColor = new RgbColorClass();                  redColor.Green = 0;                  redColor.Red = 255;                  redColor.Blue = 0;                    IMapControl4 serverMapControl = axMapControl2.Object as IMapControl4;                    IGeometry serverGeometry = serverOSMFeature.Shape as IGeometry;                  serverGeometry.Project(serverMapControl.SpatialReference);                    IElement serverOSMElement = OSMGeometryToGraphicElement(serverGeometry' redColor);                    IGraphicsContainer basicGraphicsContainer = axMapControl2.Map.BasicGraphicsLayer as IGraphicsContainer;                    basicGraphicsContainer.DeleteAllElements();                    basicGraphicsContainer.AddElement(serverOSMElement' 0);                    if (serverOSMFeature.Shape.GeometryType == esriGeometryType.esriGeometryPoint)                  {                      serverMapControl.CenterAt((IPoint)serverGeometry);                      serverMapControl.MapScale = 500;                  }                  else                  {                      IEnvelope featureEnvelope = serverOSMFeature.Shape.Envelope;                      featureEnvelope.Project(serverMapControl.SpatialReference);                        featureEnvelope.Expand(1.1' 1.1' true);                        serverMapControl.Extent = featureEnvelope;                  }                    serverMapControl.Refresh(esriViewDrawPhase.esriViewGraphics' null' null);              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,PaintFeaturesToMapControl,The following statement contains a magic number: if (serverOSMFeature != null)              {                  IRgbColor redColor = new RgbColorClass();                  redColor.Green = 0;                  redColor.Red = 255;                  redColor.Blue = 0;                    IMapControl4 serverMapControl = axMapControl2.Object as IMapControl4;                    IGeometry serverGeometry = serverOSMFeature.Shape as IGeometry;                  serverGeometry.Project(serverMapControl.SpatialReference);                    IElement serverOSMElement = OSMGeometryToGraphicElement(serverGeometry' redColor);                    IGraphicsContainer basicGraphicsContainer = axMapControl2.Map.BasicGraphicsLayer as IGraphicsContainer;                    basicGraphicsContainer.DeleteAllElements();                    basicGraphicsContainer.AddElement(serverOSMElement' 0);                    if (serverOSMFeature.Shape.GeometryType == esriGeometryType.esriGeometryPoint)                  {                      serverMapControl.CenterAt((IPoint)serverGeometry);                      serverMapControl.MapScale = 500;                  }                  else                  {                      IEnvelope featureEnvelope = serverOSMFeature.Shape.Envelope;                      featureEnvelope.Project(serverMapControl.SpatialReference);                        featureEnvelope.Expand(1.1' 1.1' true);                        serverMapControl.Extent = featureEnvelope;                  }                    serverMapControl.Refresh(esriViewDrawPhase.esriViewGraphics' null' null);              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,OSMGeometryToGraphicElement,The following statement contains a magic number: switch (featureGeometry.GeometryType)              {                  case esriGeometryType.esriGeometryAny:                      break;                  case esriGeometryType.esriGeometryBag:                      break;                  case esriGeometryType.esriGeometryBezier3Curve:                      break;                  case esriGeometryType.esriGeometryCircularArc:                      break;                  case esriGeometryType.esriGeometryEllipticArc:                      break;                  case esriGeometryType.esriGeometryEnvelope:                      break;                  case esriGeometryType.esriGeometryLine:                      break;                  case esriGeometryType.esriGeometryMultiPatch:                      break;                  case esriGeometryType.esriGeometryMultipoint:                      break;                  case esriGeometryType.esriGeometryNull:                      break;                  case esriGeometryType.esriGeometryPath:                      break;                  case esriGeometryType.esriGeometryPoint:                      graphicElement = new MarkerElementClass() as IElement;                        graphicElement.Geometry = featureGeometry;                          IMarkerSymbol markerSymbol = null;                      if (m_documentDefaultSymbols == null)                      {                          // create a symbology for a point geometry                          ISimpleMarkerSymbol simpleMarkerSymbol = new SimpleMarkerSymbolClass();                          simpleMarkerSymbol.Color = featureColor;                          simpleMarkerSymbol.Style = esriSimpleMarkerStyle.esriSMSCircle;                          simpleMarkerSymbol.Size = 18;                            markerSymbol = simpleMarkerSymbol;                      }                      else                      {                          markerSymbol = m_documentDefaultSymbols.MarkerSymbol;                          markerSymbol.Color = featureColor;                      }                        ((IMarkerElement)graphicElement).Symbol = markerSymbol;                        break;                  case esriGeometryType.esriGeometryPolygon:                      graphicElement = new PolygonElementClass() as IElement;                        graphicElement.Geometry = featureGeometry;                        //                       IFillSymbol fillSymbol = null;                      if (m_documentDefaultSymbols == null)                      {                          ISimpleFillSymbol simpleFillSymbol = new SimpleFillSymbolClass();                          simpleFillSymbol.Color = featureColor;                            ILineSymbol simpleLineSymbol = new SimpleLineSymbolClass();                          simpleLineSymbol.Color = featureColor;                          simpleLineSymbol.Width = 1;                          simpleFillSymbol.Outline = simpleLineSymbol;                          simpleFillSymbol.Style = esriSimpleFillStyle.esriSFSSolid;                            fillSymbol = simpleFillSymbol;                      }                      else                      {                          fillSymbol = m_documentDefaultSymbols.FillSymbol;                          fillSymbol.Color = featureColor;                        }                      ((IFillShapeElement)graphicElement).Symbol = fillSymbol;                        break;                  case esriGeometryType.esriGeometryPolyline:                      graphicElement = new LineElementClass() as IElement;                        graphicElement.Geometry = featureGeometry;                        ILineSymbol lineSymbol = null;                      if (m_documentDefaultSymbols == null)                      {                          lineSymbol = new SimpleLineSymbolClass();                          lineSymbol.Color = featureColor;                          lineSymbol.Width = 3;                      }                      else                      {                          lineSymbol = m_documentDefaultSymbols.LineSymbol;                          lineSymbol.Color = featureColor;                      }                        ((ILineElement)graphicElement).Symbol = lineSymbol;                        break;                  case esriGeometryType.esriGeometryRay:                      break;                  case esriGeometryType.esriGeometryRing:                      break;                  case esriGeometryType.esriGeometrySphere:                      break;                  case esriGeometryType.esriGeometryTriangleFan:                      break;                  case esriGeometryType.esriGeometryTriangleStrip:                      break;                  case esriGeometryType.esriGeometryTriangles:                      break;                  default:                      break;              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,OSMGeometryToGraphicElement,The following statement contains a magic number: switch (featureGeometry.GeometryType)              {                  case esriGeometryType.esriGeometryAny:                      break;                  case esriGeometryType.esriGeometryBag:                      break;                  case esriGeometryType.esriGeometryBezier3Curve:                      break;                  case esriGeometryType.esriGeometryCircularArc:                      break;                  case esriGeometryType.esriGeometryEllipticArc:                      break;                  case esriGeometryType.esriGeometryEnvelope:                      break;                  case esriGeometryType.esriGeometryLine:                      break;                  case esriGeometryType.esriGeometryMultiPatch:                      break;                  case esriGeometryType.esriGeometryMultipoint:                      break;                  case esriGeometryType.esriGeometryNull:                      break;                  case esriGeometryType.esriGeometryPath:                      break;                  case esriGeometryType.esriGeometryPoint:                      graphicElement = new MarkerElementClass() as IElement;                        graphicElement.Geometry = featureGeometry;                          IMarkerSymbol markerSymbol = null;                      if (m_documentDefaultSymbols == null)                      {                          // create a symbology for a point geometry                          ISimpleMarkerSymbol simpleMarkerSymbol = new SimpleMarkerSymbolClass();                          simpleMarkerSymbol.Color = featureColor;                          simpleMarkerSymbol.Style = esriSimpleMarkerStyle.esriSMSCircle;                          simpleMarkerSymbol.Size = 18;                            markerSymbol = simpleMarkerSymbol;                      }                      else                      {                          markerSymbol = m_documentDefaultSymbols.MarkerSymbol;                          markerSymbol.Color = featureColor;                      }                        ((IMarkerElement)graphicElement).Symbol = markerSymbol;                        break;                  case esriGeometryType.esriGeometryPolygon:                      graphicElement = new PolygonElementClass() as IElement;                        graphicElement.Geometry = featureGeometry;                        //                       IFillSymbol fillSymbol = null;                      if (m_documentDefaultSymbols == null)                      {                          ISimpleFillSymbol simpleFillSymbol = new SimpleFillSymbolClass();                          simpleFillSymbol.Color = featureColor;                            ILineSymbol simpleLineSymbol = new SimpleLineSymbolClass();                          simpleLineSymbol.Color = featureColor;                          simpleLineSymbol.Width = 1;                          simpleFillSymbol.Outline = simpleLineSymbol;                          simpleFillSymbol.Style = esriSimpleFillStyle.esriSFSSolid;                            fillSymbol = simpleFillSymbol;                      }                      else                      {                          fillSymbol = m_documentDefaultSymbols.FillSymbol;                          fillSymbol.Color = featureColor;                        }                      ((IFillShapeElement)graphicElement).Symbol = fillSymbol;                        break;                  case esriGeometryType.esriGeometryPolyline:                      graphicElement = new LineElementClass() as IElement;                        graphicElement.Geometry = featureGeometry;                        ILineSymbol lineSymbol = null;                      if (m_documentDefaultSymbols == null)                      {                          lineSymbol = new SimpleLineSymbolClass();                          lineSymbol.Color = featureColor;                          lineSymbol.Width = 3;                      }                      else                      {                          lineSymbol = m_documentDefaultSymbols.LineSymbol;                          lineSymbol.Color = featureColor;                      }                        ((ILineElement)graphicElement).Symbol = lineSymbol;                        break;                  case esriGeometryType.esriGeometryRay:                      break;                  case esriGeometryType.esriGeometryRing:                      break;                  case esriGeometryType.esriGeometrySphere:                      break;                  case esriGeometryType.esriGeometryTriangleFan:                      break;                  case esriGeometryType.esriGeometryTriangleStrip:                      break;                  case esriGeometryType.esriGeometryTriangles:                      break;                  default:                      break;              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer1.Size = new System.Drawing.Size(946' 682);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer1.Size = new System.Drawing.Size(946' 682);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer1.SplitterDistance = 350;
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,InitializeComponent,The following statement contains a magic number: this.axLicenseControl1.Location = new System.Drawing.Point(515' 13);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,InitializeComponent,The following statement contains a magic number: this.axLicenseControl1.Location = new System.Drawing.Point(515' 13);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,InitializeComponent,The following statement contains a magic number: this.axLicenseControl1.Size = new System.Drawing.Size(32' 32);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,InitializeComponent,The following statement contains a magic number: this.axLicenseControl1.Size = new System.Drawing.Size(32' 32);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,InitializeComponent,The following statement contains a magic number: this.axLicenseControl1.TabIndex = 2;
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer3.Size = new System.Drawing.Size(946' 350);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer3.Size = new System.Drawing.Size(946' 350);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer3.SplitterDistance = 299;
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,InitializeComponent,The following statement contains a magic number: this.errorTreeView.Size = new System.Drawing.Size(299' 350);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,InitializeComponent,The following statement contains a magic number: this.errorTreeView.Size = new System.Drawing.Size(299' 350);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView2.Size = new System.Drawing.Size(643' 350);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView2.Size = new System.Drawing.Size(643' 350);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer2.Size = new System.Drawing.Size(946' 328);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer2.Size = new System.Drawing.Size(946' 328);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer2.SplitterDistance = 452;
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,InitializeComponent,The following statement contains a magic number: this.axToolbarControl2.Location = new System.Drawing.Point(0' 300);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,InitializeComponent,The following statement contains a magic number: this.axToolbarControl2.Size = new System.Drawing.Size(452' 28);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,InitializeComponent,The following statement contains a magic number: this.axToolbarControl2.Size = new System.Drawing.Size(452' 28);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,InitializeComponent,The following statement contains a magic number: this.axMapControl1.Size = new System.Drawing.Size(452' 328);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,InitializeComponent,The following statement contains a magic number: this.axMapControl1.Size = new System.Drawing.Size(452' 328);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,InitializeComponent,The following statement contains a magic number: this.axToolbarControl3.Location = new System.Drawing.Point(0' 300);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,InitializeComponent,The following statement contains a magic number: this.axToolbarControl3.Size = new System.Drawing.Size(490' 28);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,InitializeComponent,The following statement contains a magic number: this.axToolbarControl3.Size = new System.Drawing.Size(490' 28);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,InitializeComponent,The following statement contains a magic number: this.axMapControl2.Size = new System.Drawing.Size(490' 328);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,InitializeComponent,The following statement contains a magic number: this.axMapControl2.Size = new System.Drawing.Size(490' 328);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(946' 682);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(946' 682);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMEditorPropertyPage,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorPropertyPage.cs,InitializeComponent,The following statement contains a magic number: this.txtOSMBaseURL.Location = new System.Drawing.Point(108' 23);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMEditorPropertyPage,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorPropertyPage.cs,InitializeComponent,The following statement contains a magic number: this.txtOSMBaseURL.Location = new System.Drawing.Point(108' 23);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMEditorPropertyPage,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorPropertyPage.cs,InitializeComponent,The following statement contains a magic number: this.txtOSMBaseURL.Size = new System.Drawing.Size(342' 20);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMEditorPropertyPage,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorPropertyPage.cs,InitializeComponent,The following statement contains a magic number: this.txtOSMBaseURL.Size = new System.Drawing.Size(342' 20);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMEditorPropertyPage,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorPropertyPage.cs,InitializeComponent,The following statement contains a magic number: this.lblBaseURL.Location = new System.Drawing.Point(3' 26);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMEditorPropertyPage,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorPropertyPage.cs,InitializeComponent,The following statement contains a magic number: this.lblBaseURL.Location = new System.Drawing.Point(3' 26);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMEditorPropertyPage,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorPropertyPage.cs,InitializeComponent,The following statement contains a magic number: this.lblBaseURL.Size = new System.Drawing.Size(85' 13);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMEditorPropertyPage,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorPropertyPage.cs,InitializeComponent,The following statement contains a magic number: this.lblBaseURL.Size = new System.Drawing.Size(85' 13);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMEditorPropertyPage,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorPropertyPage.cs,InitializeComponent,The following statement contains a magic number: this.txtOSMDomainFileLocation.Location = new System.Drawing.Point(108' 66);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMEditorPropertyPage,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorPropertyPage.cs,InitializeComponent,The following statement contains a magic number: this.txtOSMDomainFileLocation.Location = new System.Drawing.Point(108' 66);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMEditorPropertyPage,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorPropertyPage.cs,InitializeComponent,The following statement contains a magic number: this.txtOSMDomainFileLocation.Size = new System.Drawing.Size(310' 20);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMEditorPropertyPage,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorPropertyPage.cs,InitializeComponent,The following statement contains a magic number: this.txtOSMDomainFileLocation.Size = new System.Drawing.Size(310' 20);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMEditorPropertyPage,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorPropertyPage.cs,InitializeComponent,The following statement contains a magic number: this.txtOSMFeaturePropertiesFileLocation.Location = new System.Drawing.Point(108' 111);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMEditorPropertyPage,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorPropertyPage.cs,InitializeComponent,The following statement contains a magic number: this.txtOSMFeaturePropertiesFileLocation.Location = new System.Drawing.Point(108' 111);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMEditorPropertyPage,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorPropertyPage.cs,InitializeComponent,The following statement contains a magic number: this.txtOSMFeaturePropertiesFileLocation.Size = new System.Drawing.Size(310' 20);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMEditorPropertyPage,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorPropertyPage.cs,InitializeComponent,The following statement contains a magic number: this.txtOSMFeaturePropertiesFileLocation.Size = new System.Drawing.Size(310' 20);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMEditorPropertyPage,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorPropertyPage.cs,InitializeComponent,The following statement contains a magic number: this.txtOSMFeaturePropertiesFileLocation.TabIndex = 3;
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMEditorPropertyPage,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorPropertyPage.cs,InitializeComponent,The following statement contains a magic number: this.btnFeatureDomains.Location = new System.Drawing.Point(426' 62);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMEditorPropertyPage,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorPropertyPage.cs,InitializeComponent,The following statement contains a magic number: this.btnFeatureDomains.Location = new System.Drawing.Point(426' 62);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMEditorPropertyPage,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorPropertyPage.cs,InitializeComponent,The following statement contains a magic number: this.btnFeatureDomains.Size = new System.Drawing.Size(24' 24);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMEditorPropertyPage,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorPropertyPage.cs,InitializeComponent,The following statement contains a magic number: this.btnFeatureDomains.Size = new System.Drawing.Size(24' 24);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMEditorPropertyPage,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorPropertyPage.cs,InitializeComponent,The following statement contains a magic number: this.btnFeatureDomains.TabIndex = 2;
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMEditorPropertyPage,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorPropertyPage.cs,InitializeComponent,The following statement contains a magic number: this.btnFeatureProperties.Location = new System.Drawing.Point(426' 108);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMEditorPropertyPage,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorPropertyPage.cs,InitializeComponent,The following statement contains a magic number: this.btnFeatureProperties.Location = new System.Drawing.Point(426' 108);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMEditorPropertyPage,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorPropertyPage.cs,InitializeComponent,The following statement contains a magic number: this.btnFeatureProperties.Size = new System.Drawing.Size(24' 24);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMEditorPropertyPage,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorPropertyPage.cs,InitializeComponent,The following statement contains a magic number: this.btnFeatureProperties.Size = new System.Drawing.Size(24' 24);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMEditorPropertyPage,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorPropertyPage.cs,InitializeComponent,The following statement contains a magic number: this.btnFeatureProperties.TabIndex = 4;
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMEditorPropertyPage,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorPropertyPage.cs,InitializeComponent,The following statement contains a magic number: this.lblFeatureDomains.Location = new System.Drawing.Point(3' 69);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMEditorPropertyPage,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorPropertyPage.cs,InitializeComponent,The following statement contains a magic number: this.lblFeatureDomains.Location = new System.Drawing.Point(3' 69);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMEditorPropertyPage,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorPropertyPage.cs,InitializeComponent,The following statement contains a magic number: this.lblFeatureDomains.Size = new System.Drawing.Size(78' 13);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMEditorPropertyPage,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorPropertyPage.cs,InitializeComponent,The following statement contains a magic number: this.lblFeatureDomains.Size = new System.Drawing.Size(78' 13);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMEditorPropertyPage,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorPropertyPage.cs,InitializeComponent,The following statement contains a magic number: this.lblFeatureDomains.TabIndex = 6;
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMEditorPropertyPage,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorPropertyPage.cs,InitializeComponent,The following statement contains a magic number: this.lblFeatureProperties.Location = new System.Drawing.Point(3' 114);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMEditorPropertyPage,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorPropertyPage.cs,InitializeComponent,The following statement contains a magic number: this.lblFeatureProperties.Location = new System.Drawing.Point(3' 114);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMEditorPropertyPage,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorPropertyPage.cs,InitializeComponent,The following statement contains a magic number: this.lblFeatureProperties.Size = new System.Drawing.Size(78' 13);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMEditorPropertyPage,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorPropertyPage.cs,InitializeComponent,The following statement contains a magic number: this.lblFeatureProperties.Size = new System.Drawing.Size(78' 13);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMEditorPropertyPage,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorPropertyPage.cs,InitializeComponent,The following statement contains a magic number: this.lblFeatureProperties.TabIndex = 7;
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMEditorPropertyPage,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorPropertyPage.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(464' 169);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMEditorPropertyPage,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMEditorPropertyPage.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(464' 169);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMFeatureInspectorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMFeatureInspector.cs,prepareGrid4Features,The following statement contains a magic number: foreach (KeyValuePair<string' string> osmTagValuePair in commonTags)              {                  currentRow = new DataGridViewRow();                    // name of the tag - tag type                  DataGridViewCell currentTagCell = new DataGridViewTextBoxCell();                  currentTagCell.Value = osmTagValuePair.Key;                    // for localization include the translated language into a tooltip                  if (m_editTags.ContainsKey(osmTagValuePair.Key))                  {                      if (!String.IsNullOrEmpty(m_editTags[osmTagValuePair.Key].displayname))                      {                          currentTagCell.ToolTipText = m_editTags[osmTagValuePair.Key].displayname;                      }                  }                      currentRow.Cells.Insert(0' currentTagCell);                    // the default case is not to allow the user change the key field                  bool canEdit = false;                    if (m_editTags.ContainsKey(osmTagValuePair.Key))                  {                      if (m_editTags[osmTagValuePair.Key].editableSpecified)                      {                          canEdit = m_editTags[osmTagValuePair.Key].editable;                      }                  }                    currentRow.Cells[0].ReadOnly = !canEdit;                    // value of the tag                  // depending on the tag type we'll need to create a different cell type                  DataGridViewCell currentValueCell = null;                    if (m_editTags.ContainsKey(osmTagValuePair.Key))                  {                      switch (m_editTags[osmTagValuePair.Key].tagtype)                      {                          case ESRI.ArcGIS.OSM.OSMClassExtension.tagkeyTagtype.tag_list:                              currentValueCell = new DataGridViewComboBoxCell();                              try                              {                                  foreach (ESRI.ArcGIS.OSM.OSMClassExtension.tagvalue value in m_editTags[osmTagValuePair.Key].tagvalue)                                  {                                      ((DataGridViewComboBoxCell)currentValueCell).Items.Add(value.name);                                  }                              }                              catch (Exception ex)                              {                                  System.Diagnostics.Debug.WriteLine(ex.Message);                              }                              break;                          case ESRI.ArcGIS.OSM.OSMClassExtension.tagkeyTagtype.tag_integer:                              currentValueCell = new DataGridViewTextBoxCell();                              break;                          case ESRI.ArcGIS.OSM.OSMClassExtension.tagkeyTagtype.tag_double:                              currentValueCell = new DataGridViewTextBoxCell();                              break;                          case ESRI.ArcGIS.OSM.OSMClassExtension.tagkeyTagtype.tag_string:                              currentValueCell = new DataGridViewTextBoxCell();                              break;                          default:                              currentValueCell = new DataGridViewTextBoxCell();                              break;                      }                  }                  else if (m_domainDictionary.ContainsKey(osmTagValuePair.Key))                  {                      currentValueCell = new DataGridViewComboBoxCell();                      ESRI.ArcGIS.OSM.OSMClassExtension.domain currentDomain = null;                        switch (currentGeometryType)                      {                          case esriGeometryType.esriGeometryAny:                              break;                          case esriGeometryType.esriGeometryBag:                              break;                          case esriGeometryType.esriGeometryBezier3Curve:                              break;                          case esriGeometryType.esriGeometryCircularArc:                              break;                          case esriGeometryType.esriGeometryEllipticArc:                              break;                          case esriGeometryType.esriGeometryEnvelope:                              break;                          case esriGeometryType.esriGeometryLine:                              break;                          case esriGeometryType.esriGeometryMultiPatch:                              break;                          case esriGeometryType.esriGeometryMultipoint:                              break;                          case esriGeometryType.esriGeometryNull:                              break;                          case esriGeometryType.esriGeometryPath:                              break;                          case esriGeometryType.esriGeometryPoint:                              currentDomain = m_domainDictionary[osmTagValuePair.Key];                                foreach (ESRI.ArcGIS.OSM.OSMClassExtension.domainvalue item in currentDomain.domainvalue)                              {                                  for (int geometryIndex = 0; geometryIndex < item.geometrytype.Length; geometryIndex++)                                  {                                      if (item.geometrytype[geometryIndex] == ESRI.ArcGIS.OSM.OSMClassExtension.geometrytype.point)                                      {                                          try                                          {                                              ((DataGridViewComboBoxCell)currentValueCell).Items.Add(item.value);                                          }                                          catch (Exception ex)                                          {                                              System.Diagnostics.Debug.WriteLine(ex.Message);                                          }                                      }                                  }                              }                              break;                          case esriGeometryType.esriGeometryPolygon:                              currentDomain = m_domainDictionary[osmTagValuePair.Key];                                foreach (ESRI.ArcGIS.OSM.OSMClassExtension.domainvalue item in currentDomain.domainvalue)                              {                                  for (int geometryIndex = 0; geometryIndex < item.geometrytype.Length; geometryIndex++)                                  {                                      if (item.geometrytype[geometryIndex] == ESRI.ArcGIS.OSM.OSMClassExtension.geometrytype.polygon)                                      {                                          try                                          {                                              ((DataGridViewComboBoxCell)currentValueCell).Items.Add(item.value);                                          }                                          catch (Exception ex)                                          {                                              System.Diagnostics.Debug.WriteLine(ex.Message);                                          }                                      }                                  }                              }                              break;                          case esriGeometryType.esriGeometryPolyline:                              currentDomain = m_domainDictionary[osmTagValuePair.Key];                                foreach (ESRI.ArcGIS.OSM.OSMClassExtension.domainvalue item in currentDomain.domainvalue)                              {                                  for (int geometryIndex = 0; geometryIndex < item.geometrytype.Length; geometryIndex++)                                  {                                      if (item.geometrytype[geometryIndex] == ESRI.ArcGIS.OSM.OSMClassExtension.geometrytype.line)                                      {                                          try                                          {                                              ((DataGridViewComboBoxCell)currentValueCell).Items.Add(item.value);                                          }                                          catch (Exception ex)                                          {                                              System.Diagnostics.Debug.WriteLine(ex.Message);                                          }                                      }                                  }                              }                              break;                          case esriGeometryType.esriGeometryRay:                              break;                          case esriGeometryType.esriGeometryRing:                              break;                          case esriGeometryType.esriGeometrySphere:                              break;                          case esriGeometryType.esriGeometryTriangleFan:                              break;                          case esriGeometryType.esriGeometryTriangleStrip:                              break;                          case esriGeometryType.esriGeometryTriangles:                              break;                          default:                              break;                      }                  }                  else                  { // unkown keys are treated as strings                      currentValueCell = new DataGridViewTextBoxCell();                  }                    // add the value only we have a value and if the tag is common among all features                  if (String.IsNullOrEmpty(osmTagValuePair.Value) == false)                  {                      ESRI.ArcGIS.OSM.OSMClassExtension.tag compareTag = new ESRI.ArcGIS.OSM.OSMClassExtension.tag();                      compareTag.k = osmTagValuePair.Key;                        if (sameTags.Contains(compareTag' new ESRI.ArcGIS.OSM.OSMClassExtension.TagKeyComparer()))                      {                          currentValueCell.Value = osmTagValuePair.Value;                      }                  }                    // for localization include the translated language into a tooltip                  if (m_editTags.ContainsKey((string)currentTagCell.Value))                  {                      if (!String.IsNullOrEmpty((string)currentValueCell.Value))                      {                          ESRI.ArcGIS.OSM.OSMClassExtension.tagvalue[] possibleValues = m_editTags[(string)currentTagCell.Value].tagvalue;                            if (possibleValues != null)                          {                              for (int valueIndex = 0; valueIndex < possibleValues.Length; valueIndex++)                              {                                  if (currentValueCell.Value.Equals(possibleValues[valueIndex].name) == true)                                  {                                      if (!String.IsNullOrEmpty(possibleValues[valueIndex].displayname))                                      {                                          currentValueCell.ToolTipText = possibleValues[valueIndex].displayname;                                      }                                  }                              }                          }                      }                  }                    currentRow.Cells.Insert(1' currentValueCell);                    // the assumption here is that values are usually open to user edits                  canEdit = true;                  currentRow.Cells[1].ReadOnly = !canEdit;                    DataGridViewLinkCell currentInfoCell = new DataGridViewLinkCell();                  currentInfoCell.LinkBehavior = LinkBehavior.SystemDefault;                    if (m_editTags.ContainsKey(osmTagValuePair.Key))                  {                      if (String.IsNullOrEmpty(m_editTags[osmTagValuePair.Key].infoURL))                      {                          currentInfoCell.Value = new Uri(m_baseInfoURI + HttpUtility.UrlEncode("Key:" + osmTagValuePair.Key));                      }                      else                      {                          currentInfoCell.Value = new Uri(m_editTags[osmTagValuePair.Key].infoURL);                      }                      currentRow.Cells.Insert(2' currentInfoCell);                  }                  else                  {                      currentInfoCell.Value = new Uri(m_baseInfoURI + HttpUtility.UrlEncode("Key:" + osmTagValuePair.Key));                  }                    featureGridView.Rows.Add(currentRow);                    if (localTags.ContainsKey(osmTagValuePair.Key))                  {                      localTags.Remove(osmTagValuePair.Key);                  }              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMFeatureInspectorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMFeatureInspector.cs,prepareGrid4Feature,The following statement contains a magic number: if (currentFeatureType != null)              {                  DataGridViewRow currentRow = new DataGridViewRow();                    // the feature itself is the main osm key value pair                  string[] osmkeyvalue = null;                    try                  {                      osmkeyvalue = currentFeatureType.name.Split("=".ToCharArray());                  }                  catch { }                      if (osmkeyvalue != null && osmkeyvalue.Length > 1)                  {                      // name of the tag - tag type                      DataGridViewCell currentTagCell = new DataGridViewTextBoxCell();                      currentTagCell.Value = osmkeyvalue[0];                        // for localization include the translated language into a tooltip                      if (m_editTags.ContainsKey(osmkeyvalue[0]))                      {                          if (!String.IsNullOrEmpty(m_editTags[osmkeyvalue[0]].displayname))                          {                              currentTagCell.ToolTipText = m_editTags[osmkeyvalue[0]].displayname;                          }                      }                        currentRow.Cells.Insert(0' currentTagCell);                      currentRow.Cells[0].ReadOnly = true;                        // value of the tag                      DataGridViewCell currentValueCell = null;                      currentValueCell = new DataGridViewComboBoxCell();                      foreach (var domainvalue in m_domainDictionary[osmkeyvalue[0]].domainvalue)                      {                          if (IsGeometryTypeEqual(currentFeature.Shape.GeometryType' domainvalue.geometrytype))                          {                              ((DataGridViewComboBoxCell)currentValueCell).Items.Add(domainvalue.value);                          }                      }                      currentValueCell.Value = osmkeyvalue[1];                        // for localization include the translated language into a tooltip                      if (m_editTags.ContainsKey(osmkeyvalue[0]))                      {                          ESRI.ArcGIS.OSM.OSMClassExtension.tagvalue[] possibleValues = m_editTags[osmkeyvalue[0]].tagvalue;                            if (possibleValues != null)                          {                              for (int valueIndex = 0; valueIndex < possibleValues.Length; valueIndex++)                              {                                  if (osmkeyvalue[1].Equals(possibleValues[valueIndex].name) == true)                                  {                                      if (!String.IsNullOrEmpty(possibleValues[valueIndex].displayname))                                      {                                          currentValueCell.ToolTipText = possibleValues[valueIndex].displayname;                                      }                                  }                              }                          }                      }                        currentRow.Cells.Insert(1' currentValueCell);                      currentRow.Cells[1].ReadOnly = false;                          DataGridViewLinkCell currentInfoCell = new DataGridViewLinkCell();                      currentInfoCell.LinkBehavior = LinkBehavior.SystemDefault;                      currentInfoCell.Value = new Uri(m_baseInfoURI + HttpUtility.UrlEncode("Tag:" + currentFeatureType.name));                      currentRow.Cells.Insert(2' currentInfoCell);                        featureGridView.Rows.Add(currentRow);                        if (tagList.Keys.Contains(osmkeyvalue[0]))                      {                          tagList.Remove(osmkeyvalue[0]);                      }                        if (localTags.ContainsKey(osmkeyvalue[0]))                      {                          localTags.Remove(osmkeyvalue[0]);                      }                  }                    if (currentFeatureType.tag != null)                  {                      foreach (ESRI.ArcGIS.OSM.OSMClassExtension.tag osmTagValuePair in currentFeatureType.tag)                      {                          try                          {                              currentRow = new DataGridViewRow();                                // name of the tag - tag type                              DataGridViewCell currentTagCell = new DataGridViewTextBoxCell();                              currentTagCell.Value = osmTagValuePair.@ref;                                // for localization include the translated language into a tooltip                              if (m_editTags.ContainsKey(osmTagValuePair.@ref))                              {                                  if (!String.IsNullOrEmpty(m_editTags[osmTagValuePair.@ref].displayname))                                  {                                      currentTagCell.ToolTipText = m_editTags[osmTagValuePair.@ref].displayname;                                  }                              }                                currentRow.Cells.Insert(0' currentTagCell);                                // the default case is not to allow the user change the key field                              bool canEdit = false;                                if (m_editTags.ContainsKey(osmTagValuePair.@ref))                              {                                  if (m_editTags[osmTagValuePair.@ref].editableSpecified)                                  {                                      canEdit = m_editTags[osmTagValuePair.@ref].editable;                                  }                              }                                currentRow.Cells[0].ReadOnly = !canEdit;                                // value of the tag                              // depending on the tag type we'll need to create a different cell type                              DataGridViewCell currentValueCell = null;                                if (m_editTags.ContainsKey(osmTagValuePair.@ref))                              {                                  switch (m_editTags[osmTagValuePair.@ref].tagtype)                                  {                                      case ESRI.ArcGIS.OSM.OSMClassExtension.tagkeyTagtype.tag_list:                                          currentValueCell = new DataGridViewComboBoxCell();                                          try                                          {                                              foreach (ESRI.ArcGIS.OSM.OSMClassExtension.tagvalue value in m_editTags[osmTagValuePair.@ref].tagvalue)                                              {                                                  ((DataGridViewComboBoxCell)currentValueCell).Items.Add(value.name);                                              }                                          }                                            catch (Exception ex)                                          {                                              System.Diagnostics.Debug.WriteLine(ex.Message);                                          }                                          break;                                      case ESRI.ArcGIS.OSM.OSMClassExtension.tagkeyTagtype.tag_integer:                                          currentValueCell = new DataGridViewTextBoxCell();                                          break;                                      case ESRI.ArcGIS.OSM.OSMClassExtension.tagkeyTagtype.tag_double:                                          currentValueCell = new DataGridViewTextBoxCell();                                          break;                                      case ESRI.ArcGIS.OSM.OSMClassExtension.tagkeyTagtype.tag_string:                                          currentValueCell = new DataGridViewTextBoxCell();                                          break;                                      default:                                          currentValueCell = new DataGridViewTextBoxCell();                                          break;                                  }                              }                              else                              { // unkown keys are treated as strings                                  currentValueCell = new DataGridViewTextBoxCell();                              }                                if (tagList.Keys.Contains(osmTagValuePair.@ref))                              {                                  currentValueCell.Value = tagList[osmTagValuePair.@ref].v;                              }                              else                              {                                  if (osmTagValuePair.value != null)                                  {                                      currentValueCell.Value = osmTagValuePair.value;                                  }                              }                                // for localization include the translated language into a tooltip                              if (m_editTags.ContainsKey((string)currentTagCell.Value))                              {                                  if (!String.IsNullOrEmpty((string)currentValueCell.Value))                                  {                                      ESRI.ArcGIS.OSM.OSMClassExtension.tagvalue[] possibleValues = m_editTags[(string)currentTagCell.Value].tagvalue;                                        if (possibleValues != null)                                      {                                          for (int valueIndex = 0; valueIndex < possibleValues.Length; valueIndex++)                                          {                                              if (currentValueCell.Value.Equals(possibleValues[valueIndex].name) == true)                                              {                                                  if (!String.IsNullOrEmpty(possibleValues[valueIndex].displayname))                                                  {                                                      currentValueCell.ToolTipText = possibleValues[valueIndex].displayname;                                                  }                                              }                                          }                                      }                                  }                              }                                currentRow.Cells.Insert(1' currentValueCell);                                // the assumption here is that values are usually open to user edits                              canEdit = true;                              currentRow.Cells[1].ReadOnly = !canEdit;                                DataGridViewLinkCell currentInfoCell = new DataGridViewLinkCell();                              currentInfoCell.LinkBehavior = LinkBehavior.SystemDefault;                                if (m_editTags.ContainsKey(osmTagValuePair.@ref))                              {                                  if (String.IsNullOrEmpty(m_editTags[osmTagValuePair.@ref].infoURL))                                  {                                      currentInfoCell.Value = new Uri(m_baseInfoURI + HttpUtility.UrlEncode("Key:" + osmTagValuePair.@ref));                                  }                                  else                                  {                                      currentInfoCell.Value = new Uri(m_editTags[osmTagValuePair.@ref].infoURL);                                  }                                  currentRow.Cells.Insert(2' currentInfoCell);                              }                              else                              {                                  currentInfoCell.Value = new Uri(m_baseInfoURI + HttpUtility.UrlEncode("Key:" + osmTagValuePair.@ref));                              }                                featureGridView.Rows.Add(currentRow);                                tagList.Remove(osmTagValuePair.@ref);                                if (localTags.ContainsKey(osmTagValuePair.@ref))                              {                                  localTags.Remove(osmTagValuePair.@ref);                              }                          }                          catch { }                      }                  }              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMFeatureInspectorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMFeatureInspector.cs,prepareGrid4Feature,The following statement contains a magic number: if (currentFeatureType != null)              {                  DataGridViewRow currentRow = new DataGridViewRow();                    // the feature itself is the main osm key value pair                  string[] osmkeyvalue = null;                    try                  {                      osmkeyvalue = currentFeatureType.name.Split("=".ToCharArray());                  }                  catch { }                      if (osmkeyvalue != null && osmkeyvalue.Length > 1)                  {                      // name of the tag - tag type                      DataGridViewCell currentTagCell = new DataGridViewTextBoxCell();                      currentTagCell.Value = osmkeyvalue[0];                        // for localization include the translated language into a tooltip                      if (m_editTags.ContainsKey(osmkeyvalue[0]))                      {                          if (!String.IsNullOrEmpty(m_editTags[osmkeyvalue[0]].displayname))                          {                              currentTagCell.ToolTipText = m_editTags[osmkeyvalue[0]].displayname;                          }                      }                        currentRow.Cells.Insert(0' currentTagCell);                      currentRow.Cells[0].ReadOnly = true;                        // value of the tag                      DataGridViewCell currentValueCell = null;                      currentValueCell = new DataGridViewComboBoxCell();                      foreach (var domainvalue in m_domainDictionary[osmkeyvalue[0]].domainvalue)                      {                          if (IsGeometryTypeEqual(currentFeature.Shape.GeometryType' domainvalue.geometrytype))                          {                              ((DataGridViewComboBoxCell)currentValueCell).Items.Add(domainvalue.value);                          }                      }                      currentValueCell.Value = osmkeyvalue[1];                        // for localization include the translated language into a tooltip                      if (m_editTags.ContainsKey(osmkeyvalue[0]))                      {                          ESRI.ArcGIS.OSM.OSMClassExtension.tagvalue[] possibleValues = m_editTags[osmkeyvalue[0]].tagvalue;                            if (possibleValues != null)                          {                              for (int valueIndex = 0; valueIndex < possibleValues.Length; valueIndex++)                              {                                  if (osmkeyvalue[1].Equals(possibleValues[valueIndex].name) == true)                                  {                                      if (!String.IsNullOrEmpty(possibleValues[valueIndex].displayname))                                      {                                          currentValueCell.ToolTipText = possibleValues[valueIndex].displayname;                                      }                                  }                              }                          }                      }                        currentRow.Cells.Insert(1' currentValueCell);                      currentRow.Cells[1].ReadOnly = false;                          DataGridViewLinkCell currentInfoCell = new DataGridViewLinkCell();                      currentInfoCell.LinkBehavior = LinkBehavior.SystemDefault;                      currentInfoCell.Value = new Uri(m_baseInfoURI + HttpUtility.UrlEncode("Tag:" + currentFeatureType.name));                      currentRow.Cells.Insert(2' currentInfoCell);                        featureGridView.Rows.Add(currentRow);                        if (tagList.Keys.Contains(osmkeyvalue[0]))                      {                          tagList.Remove(osmkeyvalue[0]);                      }                        if (localTags.ContainsKey(osmkeyvalue[0]))                      {                          localTags.Remove(osmkeyvalue[0]);                      }                  }                    if (currentFeatureType.tag != null)                  {                      foreach (ESRI.ArcGIS.OSM.OSMClassExtension.tag osmTagValuePair in currentFeatureType.tag)                      {                          try                          {                              currentRow = new DataGridViewRow();                                // name of the tag - tag type                              DataGridViewCell currentTagCell = new DataGridViewTextBoxCell();                              currentTagCell.Value = osmTagValuePair.@ref;                                // for localization include the translated language into a tooltip                              if (m_editTags.ContainsKey(osmTagValuePair.@ref))                              {                                  if (!String.IsNullOrEmpty(m_editTags[osmTagValuePair.@ref].displayname))                                  {                                      currentTagCell.ToolTipText = m_editTags[osmTagValuePair.@ref].displayname;                                  }                              }                                currentRow.Cells.Insert(0' currentTagCell);                                // the default case is not to allow the user change the key field                              bool canEdit = false;                                if (m_editTags.ContainsKey(osmTagValuePair.@ref))                              {                                  if (m_editTags[osmTagValuePair.@ref].editableSpecified)                                  {                                      canEdit = m_editTags[osmTagValuePair.@ref].editable;                                  }                              }                                currentRow.Cells[0].ReadOnly = !canEdit;                                // value of the tag                              // depending on the tag type we'll need to create a different cell type                              DataGridViewCell currentValueCell = null;                                if (m_editTags.ContainsKey(osmTagValuePair.@ref))                              {                                  switch (m_editTags[osmTagValuePair.@ref].tagtype)                                  {                                      case ESRI.ArcGIS.OSM.OSMClassExtension.tagkeyTagtype.tag_list:                                          currentValueCell = new DataGridViewComboBoxCell();                                          try                                          {                                              foreach (ESRI.ArcGIS.OSM.OSMClassExtension.tagvalue value in m_editTags[osmTagValuePair.@ref].tagvalue)                                              {                                                  ((DataGridViewComboBoxCell)currentValueCell).Items.Add(value.name);                                              }                                          }                                            catch (Exception ex)                                          {                                              System.Diagnostics.Debug.WriteLine(ex.Message);                                          }                                          break;                                      case ESRI.ArcGIS.OSM.OSMClassExtension.tagkeyTagtype.tag_integer:                                          currentValueCell = new DataGridViewTextBoxCell();                                          break;                                      case ESRI.ArcGIS.OSM.OSMClassExtension.tagkeyTagtype.tag_double:                                          currentValueCell = new DataGridViewTextBoxCell();                                          break;                                      case ESRI.ArcGIS.OSM.OSMClassExtension.tagkeyTagtype.tag_string:                                          currentValueCell = new DataGridViewTextBoxCell();                                          break;                                      default:                                          currentValueCell = new DataGridViewTextBoxCell();                                          break;                                  }                              }                              else                              { // unkown keys are treated as strings                                  currentValueCell = new DataGridViewTextBoxCell();                              }                                if (tagList.Keys.Contains(osmTagValuePair.@ref))                              {                                  currentValueCell.Value = tagList[osmTagValuePair.@ref].v;                              }                              else                              {                                  if (osmTagValuePair.value != null)                                  {                                      currentValueCell.Value = osmTagValuePair.value;                                  }                              }                                // for localization include the translated language into a tooltip                              if (m_editTags.ContainsKey((string)currentTagCell.Value))                              {                                  if (!String.IsNullOrEmpty((string)currentValueCell.Value))                                  {                                      ESRI.ArcGIS.OSM.OSMClassExtension.tagvalue[] possibleValues = m_editTags[(string)currentTagCell.Value].tagvalue;                                        if (possibleValues != null)                                      {                                          for (int valueIndex = 0; valueIndex < possibleValues.Length; valueIndex++)                                          {                                              if (currentValueCell.Value.Equals(possibleValues[valueIndex].name) == true)                                              {                                                  if (!String.IsNullOrEmpty(possibleValues[valueIndex].displayname))                                                  {                                                      currentValueCell.ToolTipText = possibleValues[valueIndex].displayname;                                                  }                                              }                                          }                                      }                                  }                              }                                currentRow.Cells.Insert(1' currentValueCell);                                // the assumption here is that values are usually open to user edits                              canEdit = true;                              currentRow.Cells[1].ReadOnly = !canEdit;                                DataGridViewLinkCell currentInfoCell = new DataGridViewLinkCell();                              currentInfoCell.LinkBehavior = LinkBehavior.SystemDefault;                                if (m_editTags.ContainsKey(osmTagValuePair.@ref))                              {                                  if (String.IsNullOrEmpty(m_editTags[osmTagValuePair.@ref].infoURL))                                  {                                      currentInfoCell.Value = new Uri(m_baseInfoURI + HttpUtility.UrlEncode("Key:" + osmTagValuePair.@ref));                                  }                                  else                                  {                                      currentInfoCell.Value = new Uri(m_editTags[osmTagValuePair.@ref].infoURL);                                  }                                  currentRow.Cells.Insert(2' currentInfoCell);                              }                              else                              {                                  currentInfoCell.Value = new Uri(m_baseInfoURI + HttpUtility.UrlEncode("Key:" + osmTagValuePair.@ref));                              }                                featureGridView.Rows.Add(currentRow);                                tagList.Remove(osmTagValuePair.@ref);                                if (localTags.ContainsKey(osmTagValuePair.@ref))                              {                                  localTags.Remove(osmTagValuePair.@ref);                              }                          }                          catch { }                      }                  }              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMFeatureInspectorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMFeatureInspector.cs,prepareGrid4Feature,The following statement contains a magic number: foreach (ESRI.ArcGIS.OSM.OSMClassExtension.tag currentTag in tagList.Values)              {                  DataGridViewRow currentRow = new DataGridViewRow();                    DataGridViewCell currentTagCell = new DataGridViewTextBoxCell();                  currentTagCell.Value = currentTag.k;                      // for localization include the translated language into a tooltip                  if (m_editTags.ContainsKey(currentTag.k))                  {                      if (!String.IsNullOrEmpty(m_editTags[currentTag.k].displayname))                      {                          currentTagCell.ToolTipText = m_editTags[currentTag.k].displayname;                      }                  }                      currentRow.Cells.Insert(0' currentTagCell);                    DataGridViewCell currentValueCell = null;                  if (m_editTags.ContainsKey(currentTag.k))                  {                      switch (m_editTags[currentTag.k].tagtype)                      {                          case ESRI.ArcGIS.OSM.OSMClassExtension.tagkeyTagtype.tag_list:                              currentValueCell = new DataGridViewComboBoxCell();                              try                              {                                  foreach (ESRI.ArcGIS.OSM.OSMClassExtension.tagvalue value in m_editTags[currentTag.k].tagvalue)                                  {                                      ((DataGridViewComboBoxCell)currentValueCell).Items.Add(value.name);                                  }                                    currentValueCell.Value = currentTag.v;                              }                              catch (Exception ex)                              {                                  System.Diagnostics.Debug.WriteLine(ex.Message);                              }                              break;                          case ESRI.ArcGIS.OSM.OSMClassExtension.tagkeyTagtype.tag_integer:                              currentValueCell = new DataGridViewTextBoxCell();                              currentValueCell.Value = Convert.ToInt32(currentTag.v);                              break;                          case ESRI.ArcGIS.OSM.OSMClassExtension.tagkeyTagtype.tag_double:                              currentValueCell = new DataGridViewTextBoxCell();                              currentValueCell.Value = Convert.ToDouble(currentTag.v);                              break;                          case ESRI.ArcGIS.OSM.OSMClassExtension.tagkeyTagtype.tag_string:                              currentValueCell = new DataGridViewTextBoxCell();                              currentValueCell.Value = Convert.ToString(currentTag.v);                              break;                          default:                              currentValueCell = new DataGridViewTextBoxCell();                              break;                      }                  }                  else                  {                      currentValueCell = new DataGridViewTextBoxCell();                      currentValueCell.Value = Convert.ToString(currentTag.v);                  }                    try                  {                      // for localization include the translated language into a tooltip                      if (m_editTags.ContainsKey(currentTag.k))                      {                          if (!String.IsNullOrEmpty(Convert.ToString(currentValueCell.Value)))                          {                              ESRI.ArcGIS.OSM.OSMClassExtension.tagvalue[] possibleValues = m_editTags[currentTag.k].tagvalue;                                if (possibleValues != null)                              {                                  for (int valueIndex = 0; valueIndex < possibleValues.Length; valueIndex++)                                  {                                      if (currentTag.v.Equals(possibleValues[valueIndex].name) == true)                                      {                                          if (!String.IsNullOrEmpty(possibleValues[valueIndex].displayname))                                          {                                              currentValueCell.ToolTipText = possibleValues[valueIndex].displayname;                                          }                                      }                                  }                              }                          }                      }                  }                  catch { }                    currentRow.Cells.Insert(1' currentValueCell);                    DataGridViewLinkCell currentInfoCell = new DataGridViewLinkCell();                  currentInfoCell.LinkBehavior = LinkBehavior.SystemDefault;                    if (m_editTags.ContainsKey(currentTag.k))                  {                      if (String.IsNullOrEmpty(m_editTags[currentTag.k].infoURL))                      {                          currentInfoCell.Value = new Uri(m_baseInfoURI + HttpUtility.UrlEncode("Key:" + currentTag.k));                      }                      else                      {                          currentInfoCell.Value = new Uri(m_editTags[currentTag.k].infoURL);                      }                      currentRow.Cells.Insert(2' currentInfoCell);                  }                  else                  {                      currentInfoCell.Value = new Uri(m_baseInfoURI + HttpUtility.UrlEncode("Key:" + currentTag.k));                  }                    featureGridView.Rows.Add(currentRow);                    if (localTags.ContainsKey(currentTag.k))                  {                      localTags.Remove(currentTag.k);                  }              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMFeatureInspectorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMFeatureInspector.cs,dataGridView1_CellValueChanged,The following statement contains a magic number: try              {                  // handle the event when the value in the first column changed                  // -- if an existing tag key was selected populate the 2nd column and the info 3rd column                  // -- add a new last row with the remaining tag key entries                  if (e.ColumnIndex == 0)                  {                      Dictionary<string' ESRI.ArcGIS.OSM.OSMClassExtension.tagkey> localTags = new Dictionary<string' ESRI.ArcGIS.OSM.OSMClassExtension.tagkey>();                      foreach (ESRI.ArcGIS.OSM.OSMClassExtension.tagkey tagKey in m_editTags.Values)                      {                          localTags.Add(tagKey.name' tagKey);                      }                        string keyValue = string.Empty;                      // remove the once already used                      for (int rowIndex = 0; rowIndex < dataGridView1.Rows.Count; rowIndex++)                      {                          keyValue = dataGridView1[0' rowIndex].Value as string;                          if (!String.IsNullOrEmpty(keyValue))                          {                              if (localTags.ContainsKey(keyValue))                              {                                  localTags.Remove(keyValue);                              }                          }                      }                          keyValue = dataGridView1[e.ColumnIndex' e.RowIndex].Value as string;                      int deletedRow = -1;                        // if the                       if (string.IsNullOrEmpty(keyValue))                      {                          if (!string.IsNullOrEmpty(m_ChangeTagString))                          {                              keyValue = m_ChangeTagString;                              m_ChangeTagString = string.Empty;                          }                      }                      else                      {                          try                          {                              deletedRow = e.RowIndex;                              dataGridView1.Rows.RemoveAt(e.RowIndex);                          }                          catch                          {                            }                      }                        if (!string.IsNullOrEmpty(keyValue))                      {                          DataGridViewRow newRow = new DataGridViewRow();                            // name of the tag - tag type                          DataGridViewCell currentTagCell = new DataGridViewTextBoxCell();                          currentTagCell.Value = keyValue;                            // for localization include the translated language into a tooltip                          if (m_editTags.ContainsKey(keyValue))                          {                              if (!String.IsNullOrEmpty(m_editTags[keyValue].displayname))                              {                                  currentTagCell.ToolTipText = m_editTags[keyValue].displayname;                              }                          }                            newRow.Cells.Insert(0' currentTagCell);                            // the default case is not to allow the user change the key field                          bool canEdit = false;                            if (m_editTags.ContainsKey(keyValue))                          {                              if (m_editTags[keyValue].editableSpecified)                              {                                  canEdit = m_editTags[keyValue].editable;                              }                          }                            newRow.Cells[0].ReadOnly = !canEdit;                              if (m_editTags.ContainsKey(keyValue))                          {                              DataGridViewCell currentValueCell = null;                              switch (m_editTags[keyValue].tagtype)                              {                                  case ESRI.ArcGIS.OSM.OSMClassExtension.tagkeyTagtype.tag_list:                                      currentValueCell = new DataGridViewComboBoxCell();                                      try                                      {                                          foreach (ESRI.ArcGIS.OSM.OSMClassExtension.tagvalue value in m_editTags[keyValue].tagvalue)                                          {                                              ((DataGridViewComboBoxCell)currentValueCell).Items.Add(value.name);                                          }                                      }                                      catch (Exception ex)                                      {                                          System.Diagnostics.Debug.WriteLine(ex.Message);                                      }                                      break;                                  case ESRI.ArcGIS.OSM.OSMClassExtension.tagkeyTagtype.tag_integer:                                      currentValueCell = new DataGridViewTextBoxCell();                                      break;                                  case ESRI.ArcGIS.OSM.OSMClassExtension.tagkeyTagtype.tag_double:                                      currentValueCell = new DataGridViewTextBoxCell();                                      break;                                  case ESRI.ArcGIS.OSM.OSMClassExtension.tagkeyTagtype.tag_string:                                      currentValueCell = new DataGridViewTextBoxCell();                                      break;                                  default:                                      currentValueCell = new DataGridViewTextBoxCell();                                      break;                              }                              try                              {                                  newRow.Cells.Insert(1' currentValueCell);                              }                              catch                              {                                }                                DataGridViewLinkCell currentInfoCell = new DataGridViewLinkCell();                              currentInfoCell.LinkBehavior = LinkBehavior.SystemDefault;                                if (m_editTags.ContainsKey(keyValue))                              {                                  if (String.IsNullOrEmpty(m_editTags[keyValue].infoURL))                                  {                                      currentInfoCell.Value = new Uri(m_baseInfoURI + HttpUtility.UrlEncode("Key:" + keyValue));                                  }                                  else                                  {                                      currentInfoCell.Value = new Uri(m_editTags[keyValue].infoURL);                                  }                              }                              else                              {                                  currentInfoCell.Value = new Uri(m_baseInfoURI + HttpUtility.UrlEncode("Key:" + keyValue));                              }                                try                              {                                  newRow.Cells.Insert(2' currentInfoCell);                              }                              catch                              {                              }                          }                            dataGridView1.Rows.Add(newRow);                            // add a new last row                          DataGridViewRow lastRow = new DataGridViewRow();                          DataGridViewComboBoxCell currentKeyCell = new DataGridViewComboBoxCell();                          try                          {                              // show a sorted list of tags to the user                              IEnumerable<string> sortedKeys = localTags.Keys.OrderBy(myKey => myKey);                                foreach (string currentKey in sortedKeys)                              {                                  currentKeyCell.Items.Add(currentKey);                              }                          }                          catch { }                            lastRow.Cells.Insert(0' currentKeyCell);                            dataGridView1.Rows.Add(lastRow);                            dataGridView1.FirstDisplayedScrollingRowIndex = e.RowIndex;                          dataGridView1.Refresh();                          dataGridView1.CurrentCell = dataGridView1.Rows[e.RowIndex].Cells[1];                      }                        return;                  }                      // ensure that we have values in the first and the second column before we commit an edit operation                  if (e.ColumnIndex == 0)                  {                      cellValueString = dataGridView1[1' e.RowIndex].Value as string;                  }                  else if (e.ColumnIndex == 1)                  {                      cellValueString = dataGridView1[0' e.RowIndex].Value as string;                  }                    if (String.IsNullOrEmpty(cellValueString))                  {                      return;                  }                    if (m_editor == null)                  {                      return;                  }                    if (((IWorkspaceEdit2)m_editor.EditWorkspace).IsInEditOperation)                  {                  }                  else                  //MessageBox.Show(resourceManager.GetString("OSMEditor_FeatureInspector_operationwarningcaption")' resourceManager.GetString("OSMClassExtension_FeatureInspector_operationwarningcaption"));                  {                        m_editor.StartOperation();                  }                    ESRI.ArcGIS.OSM.OSMClassExtension.tag newTag = null;                    string tagString = dataGridView1[0' e.RowIndex].Value as string;                  string valueString = dataGridView1[1' e.RowIndex].Value as string;                    if (String.IsNullOrEmpty(tagString) || String.IsNullOrEmpty(valueString))                  {                  }                  else                  {                      newTag = new ESRI.ArcGIS.OSM.OSMClassExtension.tag();                      newTag.k = tagString;                      newTag.v = valueString;                  }                      if (m_enumRow != null)                  {                      m_enumRow.Reset();                        // persist the collection in the blob/xml field                      IFeature currentFeature = null;                        while ((currentFeature = m_enumRow.Next() as IFeature) != null)                      {                          int tagCollectionFieldIndex = currentFeature.Fields.FindField("osmTags");                            if (tagCollectionFieldIndex != -1)                          {                                ESRI.ArcGIS.OSM.OSMClassExtension.tag[] existingTags = _osmUtility.retrieveOSMTags((IRow)currentFeature' tagCollectionFieldIndex' m_editor.EditWorkspace);                                if (existingTags != null)                              {                                  // let's rebuild the tags from scratch based on the items that we found in the UI and the existing feature                                  Dictionary<string' string> existingTagsList = new Dictionary<string' string>();                                  for (int index = 0; index < existingTags.Length; index++)                                  {                                      if (String.IsNullOrEmpty(existingTags[index].k) == false && String.IsNullOrEmpty(existingTags[index].v) == false)                                      {                                          existingTagsList.Add(existingTags[index].k' existingTags[index].v);                                      }                                  }                                    if (newTag != null)                                  {                                      if (existingTagsList.ContainsKey(newTag.k))                                      {                                          existingTagsList[newTag.k] = newTag.v;                                      }                                      else                                      {                                          if (!String.IsNullOrEmpty(newTag.v))                                          {                                              existingTagsList.Add(newTag.k' newTag.v);                                          }                                      }                                  }                                      int tagIndex = 0;                                    // convert the newly assembled tag list into a tag array that can be serialized into the osmtag field                                  existingTags = new ESRI.ArcGIS.OSM.OSMClassExtension.tag[existingTagsList.Count];                                  foreach (KeyValuePair<string' string> item in existingTagsList)                                  {                                      if (!String.IsNullOrEmpty(item.Key) && !String.IsNullOrEmpty(item.Value))                                      {                                          ESRI.ArcGIS.OSM.OSMClassExtension.tag insertTag = new ESRI.ArcGIS.OSM.OSMClassExtension.tag();                                          insertTag.k = item.Key;                                          insertTag.v = item.Value;                                            existingTags[tagIndex] = insertTag;                                          tagIndex = tagIndex + 1;                                      }                                  }                                    _osmUtility.insertOSMTags(tagCollectionFieldIndex' (IRow)currentFeature' existingTags' m_editor.EditWorkspace);                                    currentFeature.Store();                              }                          }                      }                  }                    m_editor.StopOperation(resourceManager.GetString("OSMClassExtension_FeatureInspector_operationmenu"));                }              catch              {              }
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMFeatureInspectorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMFeatureInspector.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.Size = new System.Drawing.Size(353' 387);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMFeatureInspectorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMFeatureInspector.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.Size = new System.Drawing.Size(353' 387);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMFeatureInspectorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMFeatureInspector.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(353' 387);
Magic Number,ESRI.ArcGIS.OSM.Editor,OSMFeatureInspectorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMFeatureInspector.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(353' 387);
Duplicate Code,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,OSMConflictEditorUI_FormClosing,The method contains a code clone-set at the following line numbers (starting from the method definition): ((63' 112)' (141' 190))
Duplicate Code,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,OSMConflictEditorUI_FormClosing,The method contains a code clone-set at the following line numbers (starting from the method definition): ((64' 84)' (210' 230)' (142' 162)' (287' 307))
Duplicate Code,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,OSMConflictEditorUI_FormClosing,The method contains a code clone-set at the following line numbers (starting from the method definition): ((64' 111)' (287' 334)' (142' 189))
Duplicate Code,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,OSMConflictEditorUI_FormClosing,The method contains a code clone-set at the following line numbers (starting from the method definition): ((89' 108)' (167' 186)' (312' 331)' (405' 424))
Duplicate Code,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,OSMConflictEditorUI_FormClosing,The method contains a code clone-set at the following line numbers (starting from the method definition): ((89' 112)' (405' 428)' (167' 190))
Duplicate Code,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,OSMConflictEditorUI_FormClosing,The method contains a code clone-set at the following line numbers (starting from the method definition): ((312' 334)' (405' 427))
Duplicate Code,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,OSMConflictEditorUI_FormClosing,The method contains a code clone-set at the following line numbers (starting from the method definition): ((90' 109)' (168' 187)' (313' 332)' (406' 425)' (440' 459))
Duplicate Code,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,OSMConflictEditorUI_FormClosing,The method contains a code clone-set at the following line numbers (starting from the method definition): ((90' 112)' (440' 462)' (168' 190)' (406' 428))
Duplicate Code,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,OSMConflictEditorUI_FormClosing,The method contains a code clone-set at the following line numbers (starting from the method definition): ((313' 334)' (440' 461))
Duplicate Code,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,OSMConflictEditorUI_FormClosing,The method contains a code clone-set at the following line numbers (starting from the method definition): ((91' 110)' (169' 188)' (231' 250)' (314' 333)' (407' 426)' (441' 460))
Duplicate Code,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,OSMConflictEditorUI_FormClosing,The method contains a code clone-set at the following line numbers (starting from the method definition): ((91' 112)' (231' 252)' (169' 190)' (407' 428)' (441' 462))
Duplicate Code,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,OSMConflictEditorUI_FormClosing,The method contains a code clone-set at the following line numbers (starting from the method definition): ((231' 251)' (314' 334))
Duplicate Code,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,OSMConflictEditorUI_FormClosing,The method contains a code clone-set at the following line numbers (starting from the method definition): ((92' 111)' (170' 189)' (232' 251)' (315' 334)' (368' 387)' (408' 427)' (442' 461)' (473' 492))
Duplicate Code,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,OSMConflictEditorUI_FormClosing,The method contains a code clone-set at the following line numbers (starting from the method definition): ((92' 111)' (368' 387)' (170' 189)' (232' 251)' (315' 334)' (473' 492)' (408' 427)' (442' 461))
Duplicate Code,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,OSMConflictEditorUI_FormClosing,The method contains a code clone-set at the following line numbers (starting from the method definition): ((92' 112)' (473' 493)' (170' 190)' (232' 252)' (408' 428)' (442' 462))
Duplicate Code,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,OSMConflictEditorUI_FormClosing,The method contains a code clone-set at the following line numbers (starting from the method definition): ((315' 336)' (368' 389))
Duplicate Code,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,OSMConflictEditorUI_FormClosing,The method contains a code clone-set at the following line numbers (starting from the method definition): ((114' 142)' (254' 282))
Duplicate Code,ESRI.ArcGIS.OSM.Editor,OSMConflictEditorUI,C:\repos\Esri_arcgis-osm-editor\src\OSMEditor\OSMConflictEditorUI.cs,OSMConflictEditorUI_FormClosing,The method contains a code clone-set at the following line numbers (starting from the method definition): ((204' 228)' (281' 305))
