Implementation smell,Namespace,Class,File,Method,Description
Long Statement,uhttpsharpdemo.Handlers,AboutHandler,C:\repos\raistlinthewiz_uhttpsharp\uhttpsharp-demo\Handlers\AboutHandler.cs,Handle,The length of the statement  "            context.Response = HttpResponse.CreateWithMessage(HttpResponseCode.Ok' "Sample http-request-handler"' context.Request.Headers.KeepAliveConnection()); " is 149.
Long Statement,uhttpsharpdemo.Handlers,ExceptionHandler,C:\repos\raistlinthewiz_uhttpsharp\uhttpsharp-demo\Handlers\ExceptionHandler.cs,Handle,The length of the statement  "                context.Response = new HttpResponse(HttpResponseCode.InternalServerError' "Error while handling your request. " + e' false); " is 124.
Long Statement,uhttpsharpdemo,Program,C:\repos\raistlinthewiz_uhttpsharp\uhttpsharp-demo\Program.cs,Main,The length of the statement  "                //httpServer.Use(new ListenerSslDecorator(new TcpListenerAdapter(new TcpListener(IPAddress.Loopback' 443))' serverCertificate)); " is 128.
Magic Number,uhttpsharpdemo.Controllers,BaseController,C:\repos\raistlinthewiz_uhttpsharp\uhttpsharp-demo\Controllers\DemoController.cs,Get,The following statement contains a magic number: return Response.Render(HttpResponseCode.Ok' new {Hello="Base!"' Kaki = Enumerable.Range(0' 10000)});
Magic Number,uhttpsharpdemo,Program,C:\repos\raistlinthewiz_uhttpsharp\uhttpsharp-demo\Program.cs,Main,The following statement contains a magic number: using (var httpServer = new HttpServer(new HttpRequestProvider()))              {                  httpServer.Use(new TcpListenerAdapter(new TcpListener(IPAddress.Any' 82)));                  //httpServer.Use(new ListenerSslDecorator(new TcpListenerAdapter(new TcpListener(IPAddress.Loopback' 443))' serverCertificate));                    //httpServer.Use(new SessionHandler<DateTime>(() => DateTime.Now));                  httpServer.Use(new ExceptionHandler());                  httpServer.Use(new CompressionHandler(DeflateCompressor.Default' GZipCompressor.Default));                  httpServer.Use(new ControllerHandler(new BaseController()' new JsonModelBinder()' new JsonView()));                  httpServer.Use(new HttpRouter().With(string.Empty' new IndexHandler())                      .With("about"' new AboutHandler())                      .With("Assets"' new AboutHandler())                      .With("strings"' new RestHandler<string>(new StringsRestController()' JsonResponseProvider.Default)));                                    httpServer.Use(new ClassRouter(new MySuperHandler()));                  httpServer.Use(new TimingHandler());                    httpServer.Use(new MyHandler());                  httpServer.Use(new FileHandler());                  httpServer.Use(new ErrorHandler());                  httpServer.Use((context' next) =>                  {                      Console.WriteLine("Got Request!");                      return next();                  });                    httpServer.Start();                  Console.ReadLine();              }
