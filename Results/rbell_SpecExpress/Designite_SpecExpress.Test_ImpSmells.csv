Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,SpecExpress.Test,MessageServiceTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\MessageStore\MessageServiceTests.cs,FormatMessage_IsValid,The method has 5 parameters. Parameters: message' propertyValue' parm1' parm2' expectedResult
Long Parameter List,SpecExpress.Test.RuleTreeTests,RuleExpressionFactoryTest,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\RuleTreeTests\RuleExpressionFactoryTest.cs,CreateExpression_TwoRules_AndRelation_BuildsExpression,The method has 5 parameters. Parameters: year' month' day' validates' numberOfErrorMsg
Long Parameter List,SpecExpress.Test.RuleTreeTests,RuleExpressionFactoryTest,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\RuleTreeTests\RuleExpressionFactoryTest.cs,CreateExpression_TwoRules_OrRelation_BuildsExpression,The method has 5 parameters. Parameters: year' month' day' validates' numberOfErrorMsg
Long Parameter List,SpecExpress.Test.RuleTreeTests,RuleExpressionFactoryTest,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\RuleTreeTests\RuleExpressionFactoryTest.cs,CreateExpression_DateOutsideOfWindowAndIsMonday_BuildsExpression,The method has 5 parameters. Parameters: year' month' day' validates' numberOfErrorMsg
Long Parameter List,SpecExpress.Test.RuleTreeTests,RuleExpressionFactoryTest,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\RuleTreeTests\RuleExpressionFactoryTest.cs,CreateExpression_DateOutsideOfWindowAndIsMonday_ReverseExpression_BuildsExpression,The method has 5 parameters. Parameters: year' month' day' validates' numberOfErrorMsg
Long Statement,SpecExpress.Test,ExceptionsTest,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\ExceptionsTest.cs,ExpectNullReferenceException,The length of the statement  "            Specification.Assert(spec => spec.Check(c => customer.Employees).Required().Expect(ThrowHereNullReferenceException' "object not valid")); " is 137.
Long Statement,SpecExpress.Test,ExpressionValidationTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\ExpressionValidationTests.cs,ValidateMethodCallPropertyOnClass_IsSuccessful,The length of the statement  "            ValidationCatalog.AddSpecification<StubClass>(validates => validates.Check( x=> x.GetCollection()).Required().CountGreaterThan(1)); " is 131.
Long Statement,SpecExpress.Test,CustomerSpecTest,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\CustomerSpecTest.cs,ActiveDate_And_Or_RulePrecidence,The length of the statement  "            spec.Check(c => c.ActiveDate).Required().GreaterThan(DateTime.Now.AddDays(-20)).And.LessThan(DateTime.Now.AddDays(-10)).Or.GreaterThan(DateTime.Now); " is 149.
Long Statement,SpecExpress.Test,CustomerSpecTest,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\CustomerSpecTest.cs,ActiveDate_Or_And_RulePrecidence,The length of the statement  "            spec.Check(c => c.ActiveDate).Required().GreaterThan(DateTime.Now).Or.GreaterThan(DateTime.Now.AddDays(-20)).And.LessThan(DateTime.Now.AddDays(-10)); " is 149.
Long Statement,SpecExpress.Test,MessageServiceTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\MessageStore\MessageServiceTests.cs,BuildContext,The length of the statement  "            var context = new RuleValidatorContext<Contact' string>(contact' "First Name"' contact.FirstName' null' ValidationLevelType.Error' null); " is 137.
Long Statement,SpecExpress.Test,MessageStoreFactoryTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\MessageStore\MessageStoreFactoryTests.cs,GetCustomMessageStore_ReturnsNamedMessageStore,The length of the statement  "            ValidationCatalog.Configure(x => x.AddMessageStore(new ResourceMessageStore(TestRuleErrorMessages.ResourceManager)' "MyMessageStore")); " is 135.
Long Statement,SpecExpress.Test,MessageTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\MessageStore\MessageTests.cs,When_WithMessageIsSuppliedWithCustomPropetyValueFormat,The length of the statement  "            var contact = new Contact() { FirstName = "Joesph"' LastName = "Smith"' DateOfBirth = System.DateTime.Now.AddYears(1) }; " is 120.
Long Statement,SpecExpress.Test,PropertyValidatorTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\PropertyValidatorTests.cs,Validate_Property_With_NullCondition_IsValid,The length of the statement  "            ValidationCatalog.AddSpecification<Contact>(spec => spec.Check(c => c.FirstName).If( c=> String.IsNullOrEmpty(c.Addresses[0].City)).Required()); " is 144.
Long Statement,SpecExpress.Test,PropertyValidatorTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\PropertyValidatorTests.cs,Validate_Property_With_CustomName_IsValid_And_Label_Is_Set,The length of the statement  "            var actual = ValidationCatalog.SpecificationContainer.GetAllSpecifications().Single().PropertyValidators.Single().Label; " is 120.
Long Statement,SpecExpress.Test,ResourceMessageStoreTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\MessageStore\ResourceMessageStoreTests.cs,GetFormattedErrorMessage_ReturnsFormattedString,The length of the statement  "            //string errorMessage = messageStore.GetFormattedDefaultMessage(ruleValidator.GetType().Name' context' ruleValidator.Parameters); " is 129.
Long Statement,SpecExpress.Test,ResourceMessageStoreTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\MessageStore\ResourceMessageStoreTests.cs,GetMessageForRuleWithMessageOverrride,The length of the statement  "            ValidationCatalog.Configure(x => x.AddMessageStore(new ResourceMessageStore(TestRuleErrorMessages.ResourceManager)' "OverrideMessages")); " is 137.
Long Statement,SpecExpress.Test,ResourceMessageStoreTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\MessageStore\ResourceMessageStoreTests.cs,GetMessageForRuleWithMessageOverrrideAndMessageKey,The length of the statement  "            ValidationCatalog.Configure(x => x.AddMessageStore(new ResourceMessageStore(TestRuleErrorMessages.ResourceManager)' "OverrideMessages")); " is 137.
Long Statement,SpecExpress.Test,SpecificationRegistryTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\Container\SpecificationRegistryTests.cs,Scan_PathForSpecification_SpecsFound,The length of the statement  "            //ValidationCatalog.Scan(x => x.AddAssembliesFromPath(@"C:\Dev\SpecExpress\trunk\SpecExpress\src\SpecExpressTest\bin\Debug")); " is 126.
Long Statement,SpecExpress.Test,SpecificationRegistryTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\Container\SpecificationRegistryTests.cs,Scan_Specification_Inhertitance,The length of the statement  "            //ValidationCatalog.Scan(x => x.AddAssembliesFromPath(@"C:\Dev\SpecExpress\trunk\SpecExpress\src\SpecExpressTest\bin\Debug")); " is 126.
Long Statement,SpecExpress.Test,ValidationContainerTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\Container\ValidationContainerTests.cs,When_multiple_specifications_defined_with_default_spec_defined_return_default,The length of the statement  "            ValidationCatalog.AddSpecification<SpecExpress.Test.Domain.Entities.Contact>(spec => spec.Check(c => c.LastName).Required()); " is 125.
Long Statement,SpecExpress.Test,ValidationContextTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\Container\ValidationContextTests.cs,Validate_ContextUsesDefinedSpecifications,The length of the statement  "            Assert.That(results.Errors[1].NestedValidationResults.First().Message' Is.EqualTo("Contact 1 in Employees is invalid.")); " is 121.
Long Statement,SpecExpress.Test,ValidationContextTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\Container\ValidationContextTests.cs,Validate_ContextUsesDefinedSpecifications,The length of the statement  "            Assert.That(results.Errors[1].NestedValidationResults.First().NestedValidationResults.First().Message' Is.EqualTo("Active must be false.")); " is 140.
Long Statement,SpecExpress.Test,ValidationNotificationTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\ValidationNotificationTests.cs,FindDescendents_IsValid,The length of the statement  "            var filteredNotfication = ValidationCatalog.Validate<SpecExpress.Test.Domain.Specifications.ContactSpecification >(contact) " is 123.
Long Statement,SpecExpress.Test.RuleTreeTests,RuleExpressionFactoryTest,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\RuleTreeTests\RuleExpressionFactoryTest.cs,BuildContextForContactActive,The length of the statement  "            var context = new RuleValidatorContext<Contact' bool>(contact' "Active"' contact.Active' null' ValidationLevelType.Error' null); " is 128.
Long Statement,SpecExpress.Test.RuleTreeTests,RuleExpressionFactoryTest,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\RuleTreeTests\RuleExpressionFactoryTest.cs,BuildContextForCalendarEventStartDate,The length of the statement  "            var context = new RuleValidatorContext<CalendarEvent' DateTime>(calendarEvent' "StartDate"' calendarEvent.StartDate' null' ValidationLevelType.Error' null); " is 156.
Long Statement,SpecExpress.Test.DSLTests,StructureTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\DSLTests\StructureTests.cs,CollectionRules,The length of the statement  "            Check(c => c.Contacts).Required().ForEach(c => ((Contact)c).Active' ValidationCatalog.Configuration.DefaultMessageStore.GetMessageTemplate("AllContactActive")); " is 160.
Long Statement,SpecExpress.Test.RuleValidatorTests,BooleanTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\RuleValidatorTests\BooleanTests.cs,BuildContextForContactActive,The length of the statement  "            var context = new RuleValidatorContext<Contact' bool>(contact' "Active"' contact.Active' null' ValidationLevelType.Error' null); " is 128.
Long Statement,SpecExpress.Test.RuleValidatorTests,CollectionTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\RuleValidatorTests\CollectionTests.cs,BuildContextForAliases,The length of the statement  "            var context = new RuleValidatorContext<Contact' IEnumerable>(contact' "Aliases"' contact.Aliases' null' ValidationLevelType.Error' null); " is 137.
Long Statement,SpecExpress.Test.RuleValidatorTests,CustomRuleTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\RuleValidatorTests\CustomRuleTests.cs,BuildContextForName,The length of the statement  "            var context = new RuleValidatorContext<Contact' string>(contact' "FirstName"' contact.FirstName' null' ValidationLevelType.Error' null); " is 136.
Long Statement,SpecExpress.Test.RuleValidatorTests,DateTimeValidatorTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\RuleValidatorTests\DateTimeValidatorTests.cs,GreaterThan_IsValid,The length of the statement  "            RuleValidatorContext<CalendarEvent' DateTime> context = BuildContextForCalendarEventEndDate("Test Event"' DateTime.Now' propertyValueDateTime); " is 143.
Long Statement,SpecExpress.Test.RuleValidatorTests,DateTimeValidatorTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\RuleValidatorTests\DateTimeValidatorTests.cs,GreaterThan_Expression_IsValid,The length of the statement  "            RuleValidatorContext<CalendarEvent' DateTime> context = BuildContextForCalendarEventEndDate("Test Event"' greaterThanDateTime' propertyValueDateTime); " is 150.
Long Statement,SpecExpress.Test.RuleValidatorTests,DateTimeValidatorTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\RuleValidatorTests\DateTimeValidatorTests.cs,GreaterThanEqualTo_IsValid,The length of the statement  "            RuleValidatorContext<CalendarEvent' DateTime> context = BuildContextForCalendarEventEndDate("Test Event"' DateTime.Now' propertyValueDateTime); " is 143.
Long Statement,SpecExpress.Test.RuleValidatorTests,DateTimeValidatorTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\RuleValidatorTests\DateTimeValidatorTests.cs,GreaterThanEqualTo_Expression_IsValid,The length of the statement  "            RuleValidatorContext<CalendarEvent' DateTime> context = BuildContextForCalendarEventEndDate("Test Event"' greaterThanDateTime' propertyValueDateTime); " is 150.
Long Statement,SpecExpress.Test.RuleValidatorTests,DateTimeValidatorTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\RuleValidatorTests\DateTimeValidatorTests.cs,LessThan_IsValid,The length of the statement  "            RuleValidatorContext<CalendarEvent' DateTime> context = BuildContextForCalendarEventStartDate("Test Event"' propertyValueDateTime' DateTime.Now); " is 145.
Long Statement,SpecExpress.Test.RuleValidatorTests,DateTimeValidatorTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\RuleValidatorTests\DateTimeValidatorTests.cs,LessThan_Expression_IsValid,The length of the statement  "            RuleValidatorContext<CalendarEvent' DateTime> context = BuildContextForCalendarEventStartDate("Test Event"' propertyValueDateTime' lessThanDateTime); " is 149.
Long Statement,SpecExpress.Test.RuleValidatorTests,DateTimeValidatorTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\RuleValidatorTests\DateTimeValidatorTests.cs,LessThanEqualTo_IsValid,The length of the statement  "            RuleValidatorContext<CalendarEvent' DateTime> context = BuildContextForCalendarEventStartDate("Test Event"' propertyValueDateTime' DateTime.Now); " is 145.
Long Statement,SpecExpress.Test.RuleValidatorTests,DateTimeValidatorTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\RuleValidatorTests\DateTimeValidatorTests.cs,LessThanEqualTo_Expression_IsValid,The length of the statement  "            RuleValidatorContext<CalendarEvent' DateTime> context = BuildContextForCalendarEventStartDate("Test Event"' propertyValueDateTime' lessThanDateTime); " is 149.
Long Statement,SpecExpress.Test.RuleValidatorTests,DateTimeValidatorTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\RuleValidatorTests\DateTimeValidatorTests.cs,IsInFuture_IsValid,The length of the statement  "            RuleValidatorContext<CalendarEvent' DateTime> context = BuildContextForCalendarEventStartDate("Test Event"' propertyValueDateTime' DateTime.Now); " is 145.
Long Statement,SpecExpress.Test.RuleValidatorTests,DateTimeValidatorTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\RuleValidatorTests\DateTimeValidatorTests.cs,IsInPast_IsValid,The length of the statement  "            RuleValidatorContext<CalendarEvent' DateTime> context = BuildContextForCalendarEventStartDate("Test Event"' propertyValueDateTime' DateTime.Now); " is 145.
Long Statement,SpecExpress.Test.RuleValidatorTests,DateTimeValidatorTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\RuleValidatorTests\DateTimeValidatorTests.cs,IsInPast_NullableDate_IsValid,The length of the statement  "            var calendarEvent = new NullableCalendarEvent() { CreateDate = null' StartDate = System.DateTime.Parse(propertyValue)' EndDate = null }; " is 136.
Long Statement,SpecExpress.Test.RuleValidatorTests,DateTimeValidatorTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\RuleValidatorTests\DateTimeValidatorTests.cs,IsInPast_NullableDate_IsValid,The length of the statement  "            RuleValidatorContext<NullableCalendarEvent' DateTime?> context = new RuleValidatorContext<NullableCalendarEvent' DateTime?>(calendarEvent' "StartDate"' calendarEvent.StartDate' null' ValidationLevelType.Error' null); " is 216.
Long Statement,SpecExpress.Test.RuleValidatorTests,DateTimeValidatorTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\RuleValidatorTests\DateTimeValidatorTests.cs,IsInPast_NullableDate_IsValid,The length of the statement  "            //RuleValidatorContext<CalendarEvent' DateTime> context = BuildContextForCalendarEventStartDate("Test Event"' propertyValueDateTime' DateTime.Now); " is 147.
Long Statement,SpecExpress.Test.RuleValidatorTests,DateTimeValidatorTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\RuleValidatorTests\DateTimeValidatorTests.cs,BuildContextForCalendarEventStartDate,The length of the statement  "            var context = new RuleValidatorContext<CalendarEvent' DateTime>(calendarEvent' "StartDate"' calendarEvent.StartDate' null' ValidationLevelType.Error' null); " is 156.
Long Statement,SpecExpress.Test.RuleValidatorTests,DateTimeValidatorTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\RuleValidatorTests\DateTimeValidatorTests.cs,BuildContextForCalendarEventStartDate,The length of the statement  "            var calendarEvent = new CalendarEvent() { Subject = subject' CreateDate = createDate' StartDate = startDate' EndDate = endDate }; " is 129.
Long Statement,SpecExpress.Test.RuleValidatorTests,DateTimeValidatorTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\RuleValidatorTests\DateTimeValidatorTests.cs,BuildContextForCalendarEventStartDate,The length of the statement  "            var context = new RuleValidatorContext<CalendarEvent' DateTime>(calendarEvent' "StartDate"' calendarEvent.StartDate' null' ValidationLevelType.Error' null); " is 156.
Long Statement,SpecExpress.Test.RuleValidatorTests,DateTimeValidatorTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\RuleValidatorTests\DateTimeValidatorTests.cs,BuildContextForCalendarEventEndDate,The length of the statement  "            var context = new RuleValidatorContext<CalendarEvent' DateTime>(calendarEvent' "EndDate"' calendarEvent.EndDate' null' ValidationLevelType.Error' null); " is 152.
Long Statement,SpecExpress.Test.RuleValidatorTests,IComparableValidatorTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\RuleValidatorTests\IComparableValidatorTests.cs,BuildContextForNumberOfDependents,The length of the statement  "            var context = new RuleValidatorContext<Contact' int>(contact' "NumberOfDependents"' contact.NumberOfDependents' null' ValidationLevelType.Error' null); " is 151.
Long Statement,SpecExpress.Test.RuleValidatorTests,RequiredTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\RuleValidatorTests\RequiredTests.cs,When_Required_And_StringValue_Is_Null,The length of the statement  "            var context = new RuleValidatorContext<Customer' string>(customer' "Name"' customer.Name' null' ValidationLevelType.Error' null); " is 129.
Long Statement,SpecExpress.Test.RuleValidatorTests,RequiredTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\RuleValidatorTests\RequiredTests.cs,When_Required_And_CollectionValue_Is_Null,The length of the statement  "            var context = new RuleValidatorContext<Customer' IEnumerable>(customer' "Contacts"' customer.Contacts' null' ValidationLevelType.Error' null); " is 142.
Long Statement,SpecExpress.Test.RuleValidatorTests,RequiredTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\RuleValidatorTests\RequiredTests.cs,When_Required_And_CollectionValue_Is_Empty_IsInvalid,The length of the statement  "            var context = new RuleValidatorContext<Customer' IEnumerable>(customer' "Contacts"' customer.Contacts' null' ValidationLevelType.Error' null); " is 142.
Long Statement,SpecExpress.Test.RuleValidatorTests,SpecificationRuleTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\RuleValidatorTests\SpecificationRuleTests.cs,When_validated_with_ExplicitSpecification,The length of the statement  "            var customer = new Customer { Name = "SampleCustomer"' Address = new Address() { Country = new Country() {Id = "DE"' Name = "Germany"}' Street = "1234 Offenbacher Strasse"} }; " is 175.
Long Statement,SpecExpress.Test.RuleValidatorTests,SpecificationRuleTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\RuleValidatorTests\SpecificationRuleTests.cs,When_validated_with_ExplicitSpecification,The length of the statement  "            ValidationCatalog.AddSpecification<Customer>(spec => spec.Check(c => c.Address).Required().Specification<InternationalAddressSpecification>()); " is 143.
Long Statement,SpecExpress.Test.RuleValidatorTests,StringValidatorTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\RuleValidatorTests\StringValidatorTests.cs,BuildContextForLength,The length of the statement  "            var context = new RuleValidatorContext<Contact' string>(contact' "First Name"' contact.FirstName' null' ValidationLevelType.Error' null); " is 137.
Long Statement,SpecExpress.Test.RuleValidatorTests,StringValidatorTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\RuleValidatorTests\StringValidatorTests.cs,BuildContextForLength,The length of the statement  "            var context = new RuleValidatorContext<Contact' string>(contact' "First Name"' contact.FirstName' null' ValidationLevelType.Error' null); " is 137.
Magic Number,SpecExpress.Test,AddressSpecification,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\AddressSpecification.cs,AddressSpecification,The following statement contains a magic number: Check(a => a.City).Required().MaxLength(50).And.IsAlpha();
Magic Number,SpecExpress.Test,AddressSpecification,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\AddressSpecification.cs,AddressSpecification,The following statement contains a magic number: Check(a => a.Street).Required().MaxLength(100);
Magic Number,SpecExpress.Test,BadWolf,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\BadWolf.cs,Max,The following statement contains a magic number: return 10/value;
Magic Number,SpecExpress.Test,SpecificationInheritanceWithAbstractClasses,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\SpecificationInheritanceWithAbstractClasses.cs,SpecificationAbstract_OnObject_WithSpecification_IsValid,The following statement contains a magic number: Assert.That(n.All().Count()' Is.EqualTo(3));
Magic Number,SpecExpress.Test,SpecificationInheritanceWithAbstractClasses,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\SpecificationInheritanceWithAbstractClasses.cs,SpecificationInheritance_OnObject_WithSpecification_IsValid,The following statement contains a magic number: Assert.That(n.All().Count()' Is.EqualTo(2));
Magic Number,SpecExpress.Test,InheritanceTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\InheritanceTests.cs,SpecificationInheritance_OnObject_WithSpecification_IsValid,The following statement contains a magic number: Assert.That(results.Errors.Count' Is.EqualTo(2));
Magic Number,SpecExpress.Test,InternationalAddressSpecification,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\InternationalAddressSpecification.cs,InternationalAddressSpecification,The following statement contains a magic number: Check(a => a.City).Required().MaxLength(50).And.IsAlpha();
Magic Number,SpecExpress.Test,InternationalAddressSpecification,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\InternationalAddressSpecification.cs,InternationalAddressSpecification,The following statement contains a magic number: Check(a => a.Street).Required().MaxLength(100);
Magic Number,SpecExpress.Test,InternationalAddressSpecification,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\InternationalAddressSpecification.cs,InternationalAddressSpecification,The following statement contains a magic number: Check(a => a.PostalCode).Optional().MaxLength(50);
Magic Number,SpecExpress.Test,CustomerSpecTest,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\CustomerSpecTest.cs,CustomerName_OptionalAndLength_IsValid,The following statement contains a magic number: spec.Check(cust => cust.Name).Optional().LengthBetween(2' 100);
Magic Number,SpecExpress.Test,CustomerSpecTest,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\CustomerSpecTest.cs,CustomerName_OptionalAndLength_IsValid,The following statement contains a magic number: spec.Check(cust => cust.Name).Optional().LengthBetween(2' 100);
Magic Number,SpecExpress.Test,CustomerSpecTest,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\CustomerSpecTest.cs,CustomerName_OptionalAndLength_IsNotValid,The following statement contains a magic number: spec.Check(cust => cust.Name).Optional().LengthBetween(2' 100);
Magic Number,SpecExpress.Test,CustomerSpecTest,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\CustomerSpecTest.cs,CustomerName_OptionalAndLength_IsNotValid,The following statement contains a magic number: spec.Check(cust => cust.Name).Optional().LengthBetween(2' 100);
Magic Number,SpecExpress.Test,CustomerSpecTest,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\CustomerSpecTest.cs,CustomerName_RequiredAndLength_NullValue_IsNotValid,The following statement contains a magic number: spec.Check(cust => cust.Name).Required().LengthBetween(2' 100);
Magic Number,SpecExpress.Test,CustomerSpecTest,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\CustomerSpecTest.cs,CustomerName_RequiredAndLength_NullValue_IsNotValid,The following statement contains a magic number: spec.Check(cust => cust.Name).Required().LengthBetween(2' 100);
Magic Number,SpecExpress.Test,CustomerSpecTest,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\CustomerSpecTest.cs,CustomerName_RequiredAndLength_InvalidLength_IsNotValid,The following statement contains a magic number: spec.Check(cust => cust.Name).Required().LengthBetween(2' 100);
Magic Number,SpecExpress.Test,CustomerSpecTest,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\CustomerSpecTest.cs,CustomerName_RequiredAndLength_InvalidLength_IsNotValid,The following statement contains a magic number: spec.Check(cust => cust.Name).Required().LengthBetween(2' 100);
Magic Number,SpecExpress.Test,CustomerSpecTest,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\CustomerSpecTest.cs,CustomerName_RequiredAndNotMinLength_InvalidLength_IsNotValid,The following statement contains a magic number: var customer = new Customer { Name = string.Empty.PadLeft(105' 'X') };
Magic Number,SpecExpress.Test,CustomerSpecTest,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\CustomerSpecTest.cs,CustomerName_RequiredAndNotMinLength_InvalidLength_IsNotValid,The following statement contains a magic number: spec.Check(cust => cust.Name).Required().Not.MinLength(100);
Magic Number,SpecExpress.Test,CustomerSpecTest,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\CustomerSpecTest.cs,CustomerContacts_Lambda_IsNotValid,The following statement contains a magic number: var contact1 = new Contact() { DateOfBirth = DateTime.Now.AddYears(-19) };
Magic Number,SpecExpress.Test,CustomerSpecTest,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\CustomerSpecTest.cs,CustomerContacts_Lambda_IsNotValid,The following statement contains a magic number: var contact2 = new Contact() { DateOfBirth = DateTime.Now.AddYears(-22) };
Magic Number,SpecExpress.Test,CustomerSpecTest,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\CustomerSpecTest.cs,CustomerContacts_Lambda_IsNotValid,The following statement contains a magic number: spec.Check(                  c => from contact in c.Contacts where contact.DateOfBirth < DateTime.Now.AddYears(-20) select contact)                  .Optional()                  .ForEach(c => ((Contact)c).Active' "All contacts under age of 20 must be active.");
Magic Number,SpecExpress.Test,CustomerSpecTest,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\CustomerSpecTest.cs,ActiveDate_GreaterThan_Or_LessThan,The following statement contains a magic number: spec.Check(c => c.ActiveDate).Required().GreaterThan(DateTime.Now).Or.LessThan(DateTime.Now.AddDays(-10));
Magic Number,SpecExpress.Test,CustomerSpecTest,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\CustomerSpecTest.cs,ActiveDate_And_Or_RulePrecidence,The following statement contains a magic number: spec.Check(c => c.ActiveDate).Required().GreaterThan(DateTime.Now.AddDays(-20)).And.LessThan(DateTime.Now.AddDays(-10)).Or.GreaterThan(DateTime.Now);
Magic Number,SpecExpress.Test,CustomerSpecTest,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\CustomerSpecTest.cs,ActiveDate_And_Or_RulePrecidence,The following statement contains a magic number: spec.Check(c => c.ActiveDate).Required().GreaterThan(DateTime.Now.AddDays(-20)).And.LessThan(DateTime.Now.AddDays(-10)).Or.GreaterThan(DateTime.Now);
Magic Number,SpecExpress.Test,CustomerSpecTest,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\CustomerSpecTest.cs,ActiveDate_Or_And_RulePrecidence,The following statement contains a magic number: spec.Check(c => c.ActiveDate).Required().GreaterThan(DateTime.Now).Or.GreaterThan(DateTime.Now.AddDays(-20)).And.LessThan(DateTime.Now.AddDays(-10));
Magic Number,SpecExpress.Test,CustomerSpecTest,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\CustomerSpecTest.cs,ActiveDate_Or_And_RulePrecidence,The following statement contains a magic number: spec.Check(c => c.ActiveDate).Required().GreaterThan(DateTime.Now).Or.GreaterThan(DateTime.Now.AddDays(-20)).And.LessThan(DateTime.Now.AddDays(-10));
Magic Number,SpecExpress.Test,CustomerSpecTest,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\CustomerSpecTest.cs,ActiveDate_TwoWindowsUsingGroups,The following statement contains a magic number: spec.Check(c => c.ActiveDate).Required()                  .Group(d => d.GreaterThan(DateTime.Now.AddDays(-10))                                  .And.LessThan(DateTime.Now.AddDays(-5)))                  .Or                  .Group(d => d.GreaterThan(DateTime.Now.AddDays(5))                                  .And.LessThan(DateTime.Now.AddDays(10)));
Magic Number,SpecExpress.Test,CustomerSpecTest,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\CustomerSpecTest.cs,ActiveDate_TwoWindowsUsingGroups,The following statement contains a magic number: spec.Check(c => c.ActiveDate).Required()                  .Group(d => d.GreaterThan(DateTime.Now.AddDays(-10))                                  .And.LessThan(DateTime.Now.AddDays(-5)))                  .Or                  .Group(d => d.GreaterThan(DateTime.Now.AddDays(5))                                  .And.LessThan(DateTime.Now.AddDays(10)));
Magic Number,SpecExpress.Test,CustomerSpecTest,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\CustomerSpecTest.cs,ActiveDate_TwoWindowsUsingGroups,The following statement contains a magic number: spec.Check(c => c.ActiveDate).Required()                  .Group(d => d.GreaterThan(DateTime.Now.AddDays(-10))                                  .And.LessThan(DateTime.Now.AddDays(-5)))                  .Or                  .Group(d => d.GreaterThan(DateTime.Now.AddDays(5))                                  .And.LessThan(DateTime.Now.AddDays(10)));
Magic Number,SpecExpress.Test,CustomerSpecTest,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\CustomerSpecTest.cs,ActiveDate_TwoWindowsUsingGroups,The following statement contains a magic number: spec.Check(c => c.ActiveDate).Required()                  .Group(d => d.GreaterThan(DateTime.Now.AddDays(-10))                                  .And.LessThan(DateTime.Now.AddDays(-5)))                  .Or                  .Group(d => d.GreaterThan(DateTime.Now.AddDays(5))                                  .And.LessThan(DateTime.Now.AddDays(10)));
Magic Number,SpecExpress.Test,MessageTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\MessageStore\MessageTests.cs,When_WithMessageIsSupplied_DefaultMessageIsOverridden,The following statement contains a magic number: ValidationCatalog.AddSpecification<Contact>(spec => spec.Check(c => c.LastName).Required().                                                                        LengthBetween(1' 3).With(m => m.Message = "Too long {PropertyValue}"));
Magic Number,SpecExpress.Test,MessageTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\MessageStore\MessageTests.cs,When_WithMessageKeyIsSupplied_DefaultMessageIsOverridden,The following statement contains a magic number: ValidationCatalog.AddSpecification<Contact>(spec => spec.Check(c => c.LastName).Required().                                                                        LengthBetween(1' 3).With(m => m.MessageKey = "Alpha"));
Magic Number,SpecExpress.Test,PropertyValidatorTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\PropertyValidatorTests.cs,Validate_OptionalProperty_WithNoValue_IsValid,The following statement contains a magic number: var lengthValidator = new LengthBetween<Contact>(1' 5);
Magic Number,SpecExpress.Test,PropertyValidatorTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\PropertyValidatorTests.cs,Validate_OptionalNestedProperty_WithNullValue_IsValid,The following statement contains a magic number: ValidationCatalog.AddSpecification<Customer>( spec => spec.Check(cust => cust.Address.Street).Optional()                  .MaxLength(255));
Magic Number,SpecExpress.Test,PropertyValidatorTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\PropertyValidatorTests.cs,Validate_Property_With_PropertyNameOverrideExpression_IsValid,The following statement contains a magic number: var lengthValidator = new LengthBetween<Contact>(1' 5);
Magic Number,SpecExpress.Test,ResourceMessageStoreTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\MessageStore\ResourceMessageStoreTests.cs,GetFormattedErrorMessage_ReturnsFormattedString,The following statement contains a magic number: RuleValidator<Contact' string> ruleValidator = new LengthBetween<Contact>(1' 5);
Magic Number,SpecExpress.Test,ValidationContainerTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\Container\ValidationContainerTests.cs,ValidationContainer_Initialize,The following statement contains a magic number: ValidationCatalog.AddSpecification<Contact>(x =>                                                                {                                                                    x.Check(contact => contact.LastName).Required();                                                                    x.Check(contact => contact.FirstName).Required();                                                                    x.Check(contact => contact.DateOfBirth).Optional()                                                                        .GreaterThan(                                                                        new DateTime(1950' 1' 1));                                                                });
Magic Number,SpecExpress.Test,ValidationContainerTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\Container\ValidationContainerTests.cs,ValidateProperty_SimpleProperty_ReturnsValidationNotification,The following statement contains a magic number: Assert.AreNotEqual(2' objectNotification.Errors);
Magic Number,SpecExpress.Test,ValidationContainerTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\Container\ValidationContainerTests.cs,ValidatePropertyWithPropertyString_SimpleProperty_ReturnsValidationNotification,The following statement contains a magic number: Assert.AreNotEqual(2' objectNotification.Errors);
Magic Number,SpecExpress.Test,ValidationContainerTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\Container\ValidationContainerTests.cs,ValidateProperty_SimpleProperty_OverridePropertyNameReturnsValidationNotification,The following statement contains a magic number: Assert.AreNotEqual(2' objectNotification.Errors);
Magic Number,SpecExpress.Test,ValidationContainerTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\Container\ValidationContainerTests.cs,ValidateProperty_CollectionProperty_ReturnsValidationNotification,The following statement contains a magic number: ValidationCatalog.AddSpecification<Address>(x =>                                                              {                                                                  x.Check(a => a.Street)                                                                      .Required()                                                                      .MaxLength(50);                                                              });
Magic Number,SpecExpress.Test,ValidationContainerTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\Container\ValidationContainerTests.cs,ValidateProperty_CollectionProperty_ReturnsValidationNotification,The following statement contains a magic number: ValidationCatalog.AddSpecification<Contact>(x =>                                                              {                                                                  x.Check(c => c.Addresses).Required()                                                                      .ForEachSpecification<Address>();                                                                  x.Check(c => c.FirstName).Required().MaxLength(100);                                                              });
Magic Number,SpecExpress.Test,ValidationContainerTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\Container\ValidationContainerTests.cs,ValidateProperty_CollectionProperty_ReturnsValidationNotification,The following statement contains a magic number: Assert.AreEqual(2' objectNotification.Errors.Count);
Magic Number,SpecExpress.Test.RuleTreeTests,RuleExpressionFactoryTest,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\RuleTreeTests\RuleExpressionFactoryTest.cs,CreateExpression_TwoRules_AndRelation_BuildsExpression,The following statement contains a magic number: var floorDate = new DateTime(2010' 2' 1);
Magic Number,SpecExpress.Test.RuleTreeTests,RuleExpressionFactoryTest,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\RuleTreeTests\RuleExpressionFactoryTest.cs,CreateExpression_TwoRules_AndRelation_BuildsExpression,The following statement contains a magic number: var floorDate = new DateTime(2010' 2' 1);
Magic Number,SpecExpress.Test.RuleTreeTests,RuleExpressionFactoryTest,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\RuleTreeTests\RuleExpressionFactoryTest.cs,CreateExpression_TwoRules_AndRelation_BuildsExpression,The following statement contains a magic number: var ceilingDate = new DateTime(2010' 3' 1);
Magic Number,SpecExpress.Test.RuleTreeTests,RuleExpressionFactoryTest,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\RuleTreeTests\RuleExpressionFactoryTest.cs,CreateExpression_TwoRules_AndRelation_BuildsExpression,The following statement contains a magic number: var ceilingDate = new DateTime(2010' 3' 1);
Magic Number,SpecExpress.Test.RuleTreeTests,RuleExpressionFactoryTest,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\RuleTreeTests\RuleExpressionFactoryTest.cs,CreateExpression_TwoRules_OrRelation_BuildsExpression,The following statement contains a magic number: var floorDate = new DateTime(2010' 2' 1);
Magic Number,SpecExpress.Test.RuleTreeTests,RuleExpressionFactoryTest,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\RuleTreeTests\RuleExpressionFactoryTest.cs,CreateExpression_TwoRules_OrRelation_BuildsExpression,The following statement contains a magic number: var floorDate = new DateTime(2010' 2' 1);
Magic Number,SpecExpress.Test.RuleTreeTests,RuleExpressionFactoryTest,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\RuleTreeTests\RuleExpressionFactoryTest.cs,CreateExpression_TwoRules_OrRelation_BuildsExpression,The following statement contains a magic number: var ceilingDate = new DateTime(2010' 3' 1);
Magic Number,SpecExpress.Test.RuleTreeTests,RuleExpressionFactoryTest,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\RuleTreeTests\RuleExpressionFactoryTest.cs,CreateExpression_TwoRules_OrRelation_BuildsExpression,The following statement contains a magic number: var ceilingDate = new DateTime(2010' 3' 1);
Magic Number,SpecExpress.Test.RuleTreeTests,RuleExpressionFactoryTest,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\RuleTreeTests\RuleExpressionFactoryTest.cs,CreateExpression_DateOutsideOfWindowAndIsMonday_BuildsExpression,The following statement contains a magic number: var floorDate = new DateTime(2010' 2' 1);
Magic Number,SpecExpress.Test.RuleTreeTests,RuleExpressionFactoryTest,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\RuleTreeTests\RuleExpressionFactoryTest.cs,CreateExpression_DateOutsideOfWindowAndIsMonday_BuildsExpression,The following statement contains a magic number: var floorDate = new DateTime(2010' 2' 1);
Magic Number,SpecExpress.Test.RuleTreeTests,RuleExpressionFactoryTest,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\RuleTreeTests\RuleExpressionFactoryTest.cs,CreateExpression_DateOutsideOfWindowAndIsMonday_BuildsExpression,The following statement contains a magic number: var ceilingDate = new DateTime(2010' 3' 1);
Magic Number,SpecExpress.Test.RuleTreeTests,RuleExpressionFactoryTest,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\RuleTreeTests\RuleExpressionFactoryTest.cs,CreateExpression_DateOutsideOfWindowAndIsMonday_BuildsExpression,The following statement contains a magic number: var ceilingDate = new DateTime(2010' 3' 1);
Magic Number,SpecExpress.Test.RuleTreeTests,RuleExpressionFactoryTest,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\RuleTreeTests\RuleExpressionFactoryTest.cs,CreateExpression_DateOutsideOfWindowAndIsMonday_ReverseExpression_BuildsExpression,The following statement contains a magic number: var floorDate = new DateTime(2010' 2' 1);
Magic Number,SpecExpress.Test.RuleTreeTests,RuleExpressionFactoryTest,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\RuleTreeTests\RuleExpressionFactoryTest.cs,CreateExpression_DateOutsideOfWindowAndIsMonday_ReverseExpression_BuildsExpression,The following statement contains a magic number: var floorDate = new DateTime(2010' 2' 1);
Magic Number,SpecExpress.Test.RuleTreeTests,RuleExpressionFactoryTest,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\RuleTreeTests\RuleExpressionFactoryTest.cs,CreateExpression_DateOutsideOfWindowAndIsMonday_ReverseExpression_BuildsExpression,The following statement contains a magic number: var ceilingDate = new DateTime(2010' 3' 1);
Magic Number,SpecExpress.Test.RuleTreeTests,RuleExpressionFactoryTest,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\RuleTreeTests\RuleExpressionFactoryTest.cs,CreateExpression_DateOutsideOfWindowAndIsMonday_ReverseExpression_BuildsExpression,The following statement contains a magic number: var ceilingDate = new DateTime(2010' 3' 1);
Magic Number,SpecExpress.Test.Entities,ContactWithIsValid,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\Entities\ContactWithIsValid.cs,IsValid,The following statement contains a magic number: ValidationCatalog.AddSpecification<Contact>(x =>                                                                {                                                                    x.Check(contact => contact.LastName).Required();                                                                    x.Check(contact => contact.FirstName).Required();                                                                    x.Check(contact => contact.DateOfBirth).Optional().                                                                        GreaterThan(new DateTime(1950' 1' 1));                                                                });
Magic Number,SpecExpress.Test.DSLTests.Functional,ActionOptionConditionBuilderTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\DSLTests\ActionOptionConditionBuilderTests.cs,If_NameLengtGreaterThan10_SetsPropertyValidatorCondition_ReturnsActionOptionBuilder,The following statement contains a magic number: ActionOptionBuilder<Customer' string> ifResult = actionOptionConditionBuilder.If(c => c.Name.Length > 10);
Magic Number,SpecExpress.Test.DSLTests,StructureTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\DSLTests\StructureTests.cs,EssentialCompileCheckDSLStatements,The following statement contains a magic number: Check(c => c.Name).If(c => c.CustomerDate > DateTime.Now).Required()                  .With(m => m.Message = "Name is Required")                  .LengthBetween(0' 10).With(m => m.Message = "Message")                  .And.IsInSet(new List<string>(new[] { "Msg"' "Another" })).With(m => m.Message = "Dumber Message");
Magic Number,SpecExpress.Test.DSLTests,StructureTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\DSLTests\StructureTests.cs,EssentialCompileCheckDSLStatements,The following statement contains a magic number: Check(c => c.Name).If(c => c.CustomerDate > DateTime.Now)                  .Required().With(m => m.Message = "You broke a rule!")                  .LengthBetween(0' 10).With(m => m.Message = "Message")                  .Or.IsInSet(new List<string>(new[] { "Msg"' "Another" })).With(m => m.Message = "Dumber Message");
Magic Number,SpecExpress.Test.DSLTests,StructureTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\DSLTests\StructureTests.cs,EssentialCompileCheckDSLStatements,The following statement contains a magic number: Check(c => c.Name).Required().LengthBetween(0' 10);
Magic Number,SpecExpress.Test.DSLTests,StructureTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\DSLTests\StructureTests.cs,EssentialCompileCheckDSLStatements,The following statement contains a magic number: Check(c => c.Name).If(c => c.CustomerDate > DateTime.Now)                  .Optional()                  .LengthBetween(0' 10).With(m => m.Message = "Message")                  .And.IsInSet(new List<string>(new[] { "Msg"' "Another" })).With(m => m.Message = "Dumber Message");
Magic Number,SpecExpress.Test.DSLTests,StructureTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\DSLTests\StructureTests.cs,EssentialCompileCheckDSLStatements,The following statement contains a magic number: Check(c => c.Name).If(c => c.CustomerDate > DateTime.Now)                  .Optional()                  .LengthBetween(0' 10).With(m => m.Message = "Message")                  .Or.IsInSet(new List<string>(new[] { "Msg"' "Another" })).With(m => m.Message = "Message");
Magic Number,SpecExpress.Test.DSLTests,StructureTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\DSLTests\StructureTests.cs,EssentialCompileCheckDSLStatements,The following statement contains a magic number: Check(c => c.Name).Optional().LengthBetween(0' 10);
Magic Number,SpecExpress.Test.DSLTests,StructureTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\DSLTests\StructureTests.cs,EssentialCompileCheckDSLStatements,The following statement contains a magic number: Check(c => c.Name).Required().Not.LengthBetween(0' 10);
Magic Number,SpecExpress.Test.DSLTests,StructureTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\DSLTests\StructureTests.cs,EssentialCompileCheckDSLStatements,The following statement contains a magic number: Check(c => c.ActiveDate).Required()                  .Group(r => r.GreaterThan(DateTime.Now).And.LessThan(DateTime.Now.AddDays(10)))                  .Or.LessThan(DateTime.Now.AddDays(-10));
Magic Number,SpecExpress.Test.DSLTests,StructureTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\DSLTests\StructureTests.cs,EssentialCompileCheckDSLStatements,The following statement contains a magic number: Check(c => c.ActiveDate).Required()                  .Group(r => r.GreaterThan(DateTime.Now).And.LessThan(DateTime.Now.AddDays(10)))                  .Or.LessThan(DateTime.Now.AddDays(-10));
Magic Number,SpecExpress.Test.DSLTests,StructureTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\DSLTests\StructureTests.cs,EssentialCompileCheckDSLStatements,The following statement contains a magic number: Check(c => c.ActiveDate).Required()                  .LessThan(DateTime.Now.AddDays(-10))                  .Or.Group(r => r.GreaterThan(DateTime.Now).And.LessThan(DateTime.Now.AddDays(10)));
Magic Number,SpecExpress.Test.DSLTests,StructureTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\DSLTests\StructureTests.cs,EssentialCompileCheckDSLStatements,The following statement contains a magic number: Check(c => c.ActiveDate).Required()                  .LessThan(DateTime.Now.AddDays(-10))                  .Or.Group(r => r.GreaterThan(DateTime.Now).And.LessThan(DateTime.Now.AddDays(10)));
Magic Number,SpecExpress.Test.DSLTests,StructureTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\DSLTests\StructureTests.cs,EssentialCompileWarnDSLStatements,The following statement contains a magic number: Warn(c => c.Name).If(c => c.CustomerDate > DateTime.Now)                  .Required().With(m => m.Message = "You broke a rule!")                  .LengthBetween(0' 10).With(m => m.Message = "Message")                  .And.IsInSet(new List<string>(new[] { "Msg"' "Another" })).With(m => m.Message = "Message");
Magic Number,SpecExpress.Test.DSLTests,StructureTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\DSLTests\StructureTests.cs,EssentialCompileWarnDSLStatements,The following statement contains a magic number: Warn(c => c.Name).If(c => c.CustomerDate > DateTime.Now)                  .Required().With(m => m.Message = "You broke a rule!")                  .LengthBetween(0' 10).With(m => m.Message = "Message")                  .Or.IsInSet(new List<string>(new[] { "Msg"' "Another" })).With(m => m.Message = "Message");
Magic Number,SpecExpress.Test.DSLTests,StructureTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\DSLTests\StructureTests.cs,EssentialCompileWarnDSLStatements,The following statement contains a magic number: Warn(c => c.Name).Required().LengthBetween(0' 10);
Magic Number,SpecExpress.Test.DSLTests,StructureTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\DSLTests\StructureTests.cs,EssentialCompileWarnDSLStatements,The following statement contains a magic number: Warn(c => c.Name).If(c => c.CustomerDate > DateTime.Now)                  .Optional()                  .LengthBetween(0' 10).With(m => m.Message = "Message")                  .And.IsInSet(new List<string>(new[] { "Msg"' "Another" })).With(m => m.Message = "Message");
Magic Number,SpecExpress.Test.DSLTests,StructureTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\DSLTests\StructureTests.cs,EssentialCompileWarnDSLStatements,The following statement contains a magic number: Warn(c => c.Name).If(c => c.CustomerDate > DateTime.Now)                  .Optional()                  .LengthBetween(0' 10).With(m => m.Message = "Message")                  .Or.IsInSet(new List<string>(new[] { "Msg"' "Another" })).With(m => m.Message = "Message");
Magic Number,SpecExpress.Test.DSLTests,StructureTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\DSLTests\StructureTests.cs,EssentialCompileWarnDSLStatements,The following statement contains a magic number: Warn(c => c.Name).Optional().LengthBetween(0' 10);
Magic Number,SpecExpress.Test.DSLTests,StructureTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\DSLTests\StructureTests.cs,IComparableRules,The following statement contains a magic number: Check(c => c.CustomerDate).Required().Between(new DateTime(200' 1' 1)' DateTime.Now);
Magic Number,SpecExpress.Test.DSLTests,StructureTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\DSLTests\StructureTests.cs,IComparableRules,The following statement contains a magic number: Check(c => c.CustomerDate).Required().Between(new DateTime(200' 1' 1)' c => c.ExpireDate);
Magic Number,SpecExpress.Test.DSLTests,StructureTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\DSLTests\StructureTests.cs,StringRules,The following statement contains a magic number: Check(c => c.Name).Required().LengthBetween(0' 100);
Magic Number,SpecExpress.Test.DSLTests,StructureTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\DSLTests\StructureTests.cs,StringRules,The following statement contains a magic number: Check(c => c.Name).Required().LengthBetween(c => c.Min' 100);
Magic Number,SpecExpress.Test.DSLTests,StructureTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\DSLTests\StructureTests.cs,StringRules,The following statement contains a magic number: Check(c => c.Name).Required().MinLength(100);
Magic Number,SpecExpress.Test.DSLTests,StructureTests,C:\research\architectureSmells\repos\rbell_SpecExpress\SpecExpress\src\SpecExpress.Test\DSLTests\StructureTests.cs,StringRules,The following statement contains a magic number: Check(c => c.Name).Required().MaxLength(100);
