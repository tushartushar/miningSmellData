Implementation smell,Namespace,Class,File,Method,Description
Magic Number,KonfDBAH.Caching,InRoleCacheStore,C:\repos\punitganshani_konfdb\Cloud\Azure\KonfDBAH\Caching\InRoleCacheStore.cs,GetExpiryTime,The following statement contains a magic number: if (policy == CachePolicy.ExpireByMidnight)              {                  DateTime now = DateTime.UtcNow;                  var midnight = new DateTime(now.Year' now.Month' now.Day' 11' 59' 59' DateTimeKind.Utc);                  return midnight.Subtract(now);              }
Magic Number,KonfDBAH.Caching,InRoleCacheStore,C:\repos\punitganshani_konfdb\Cloud\Azure\KonfDBAH\Caching\InRoleCacheStore.cs,GetExpiryTime,The following statement contains a magic number: if (policy == CachePolicy.ExpireByMidnight)              {                  DateTime now = DateTime.UtcNow;                  var midnight = new DateTime(now.Year' now.Month' now.Day' 11' 59' 59' DateTimeKind.Utc);                  return midnight.Subtract(now);              }
Magic Number,KonfDBAH.Caching,InRoleCacheStore,C:\repos\punitganshani_konfdb\Cloud\Azure\KonfDBAH\Caching\InRoleCacheStore.cs,GetExpiryTime,The following statement contains a magic number: if (policy == CachePolicy.ExpireByMidnight)              {                  DateTime now = DateTime.UtcNow;                  var midnight = new DateTime(now.Year' now.Month' now.Day' 11' 59' 59' DateTimeKind.Utc);                  return midnight.Subtract(now);              }
Magic Number,KonfDBAH,WorkerRole,C:\repos\punitganshani_konfdb\Cloud\Azure\KonfDBAH\WorkerRole.cs,OnStart,The following statement contains a magic number: try              {                  // Set the maximum number of concurrent connections                  ServicePointManager.DefaultConnectionLimit = 12;                    // For information on handling configuration changes                  // see the MSDN topic at http://go.microsoft.com/fwlink/?LinkId=166357.                    var contextSettings = new ContextSettings                  {                      CommandFactory = new AzureCommandFactory(AppType.Server)                  };                    Trace.TraceInformation("Command Factory Initialized");                  var configMode = RoleEnvironment.GetConfigurationSettingValue("konfdb.configuration.mode");                  if (configMode.Equals("azure"' StringComparison.InvariantCultureIgnoreCase))                  {                      Trace.TraceInformation("mode: Azure");                      var config = LoadConfigurationFromAzureUI();                      AzureContext.CreateFrom(config' contextSettings);                  }                  else                  {                      Trace.TraceInformation("mode: File");                      AzureContext.CreateFrom("konfdb.json"' contextSettings);                  }                    CurrentContext.Default.Log.Info("KonfDBAH Started Successfully!");                    return base.OnStart();              }              catch (Exception exception)              {                  Trace.TraceError("OnStart Exception: " + exception);              }
Magic Number,KonfDBAH,WorkerRole,C:\repos\punitganshani_konfdb\Cloud\Azure\KonfDBAH\WorkerRole.cs,RunAsync,The following statement contains a magic number: return Task.Factory.StartNew(() =>              {                  while (!cancellationToken.IsCancellationRequested)                  {                      Thread.Sleep(1000);                  }              });
