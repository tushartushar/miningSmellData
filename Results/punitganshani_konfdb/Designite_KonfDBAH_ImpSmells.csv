Implementation smell,Namespace,Class,File,Method,Description
Long Method,KonfDBAH,WorkerRole,D:\newReposJune17\punitganshani_konfdb\Cloud\Azure\KonfDBAH\WorkerRole.cs,RunCommandService,The method has 61 lines of code.
Long Method,KonfDBAH,WorkerRole,D:\newReposJune17\punitganshani_konfdb\Cloud\Azure\KonfDBAH\WorkerRole.cs,LoadConfigurationFromAzureUI,The method has 73 lines of code.
Complex Method,KonfDBAH,WorkerRole,D:\newReposJune17\punitganshani_konfdb\Cloud\Azure\KonfDBAH\WorkerRole.cs,RunCommandService,Cyclomatic complexity of the method is 8
Long Parameter List,KonfDBAH.Caching,InRoleCacheStore,D:\newReposJune17\punitganshani_konfdb\Cloud\Azure\KonfDBAH\Caching\InRoleCacheStore.cs,Add,The method has 4 parameters.
Long Statement,KonfDBAH,WorkerRole,D:\newReposJune17\punitganshani_konfdb\Cloud\Azure\KonfDBAH\WorkerRole.cs,RunCommandService,The length of the statement  "		Command = String.Format ("NewUser /name:{0} /pwd:{1} /cpwd:{1} /role:admin /silent"' AzureContext.Current.Config.Runtime.SuperUser.Username' AzureContext.Current.Config.Runtime.SuperUser.Password)' " is 197.
Long Statement,KonfDBAH,WorkerRole,D:\newReposJune17\punitganshani_konfdb\Cloud\Azure\KonfDBAH\WorkerRole.cs,RunCommandService,The length of the statement  "		Command = String.Format ("NewUser /name:{0}_ro /pwd:{1} /cpwd:{1} /role:readonly /silent"' AzureContext.Current.Config.Runtime.SuperUser.Username' AzureContext.Current.Config.Runtime.SuperUser.Password)' " is 203.
Long Statement,KonfDBAH,WorkerRole,D:\newReposJune17\punitganshani_konfdb\Cloud\Azure\KonfDBAH\WorkerRole.cs,RunCommandService,The length of the statement  "		Command = String.Format ("UserAuth /name:{0} /pwd:{1}"' AzureContext.Current.Config.Runtime.SuperUser.Username' AzureContext.Current.Config.Runtime.SuperUser.Password)' " is 168.
Long Statement,KonfDBAH,WorkerRole,D:\newReposJune17\punitganshani_konfdb\Cloud\Azure\KonfDBAH\WorkerRole.cs,LoadConfigurationFromAzureUI,The length of the statement  "			FindBy = defaultCertificateArgs.GetValue ("findBy"' X509FindType.FindByThumbprint.ToString ()).FromJsonToObject<X509FindType> ()' " is 129.
Long Statement,KonfDBAH,WorkerRole,D:\newReposJune17\punitganshani_konfdb\Cloud\Azure\KonfDBAH\WorkerRole.cs,LoadConfigurationFromAzureUI,The length of the statement  "			StoreLocation = defaultCertificateArgs.GetValue ("storeLocation"' StoreLocation.CurrentUser.ToString ()).FromJsonToObject<StoreLocation> ()' " is 140.
Long Statement,KonfDBAH,WorkerRole,D:\newReposJune17\punitganshani_konfdb\Cloud\Azure\KonfDBAH\WorkerRole.cs,LoadConfigurationFromAzureUI,The length of the statement  "			FindBy = encryptionCertificateArgs.GetValue ("findBy"' X509FindType.FindByThumbprint.ToString ()).FromJsonToObject<X509FindType> ()' " is 132.
Long Statement,KonfDBAH,WorkerRole,D:\newReposJune17\punitganshani_konfdb\Cloud\Azure\KonfDBAH\WorkerRole.cs,LoadConfigurationFromAzureUI,The length of the statement  "			StoreLocation = encryptionCertificateArgs.GetValue ("storeLocation"' StoreLocation.CurrentUser.ToString ()).FromJsonToObject<StoreLocation> ()' " is 143.
Long Statement,KonfDBAH,WorkerRole,D:\newReposJune17\punitganshani_konfdb\Cloud\Azure\KonfDBAH\WorkerRole.cs,ConvertAzureProtocol,The length of the statement  "	if (key.Equals ("konfdb.endpoint.http"' StringComparison.InvariantCultureIgnoreCase) && protocol.Equals ("http"' StringComparison.InvariantCultureIgnoreCase)) { " is 160.
Long Statement,KonfDBAH,WorkerRole,D:\newReposJune17\punitganshani_konfdb\Cloud\Azure\KonfDBAH\WorkerRole.cs,ConvertAzureProtocol,The length of the statement  "	if (key.Equals ("konfdb.endpoint.tcp"' StringComparison.InvariantCultureIgnoreCase) && protocol.Equals ("tcp"' StringComparison.InvariantCultureIgnoreCase)) { " is 158.
Long Statement,KonfDBAH,WorkerRole,D:\newReposJune17\punitganshani_konfdb\Cloud\Azure\KonfDBAH\WorkerRole.cs,ConvertAzureProtocol,The length of the statement  "	if (key.Equals ("konfdb.endpoint.wshttp"' StringComparison.InvariantCultureIgnoreCase) && protocol.Equals ("http"' StringComparison.InvariantCultureIgnoreCase)) { " is 162.
Long Statement,KonfDBAH,WorkerRole,D:\newReposJune17\punitganshani_konfdb\Cloud\Azure\KonfDBAH\WorkerRole.cs,ConvertAzureProtocol,The length of the statement  "	if (key.Equals ("konfdb.endpoint.rest"' StringComparison.InvariantCultureIgnoreCase) && protocol.Equals ("http"' StringComparison.InvariantCultureIgnoreCase)) { " is 160.
Magic Number,KonfDBAH.Caching,InRoleCacheStore,D:\newReposJune17\punitganshani_konfdb\Cloud\Azure\KonfDBAH\Caching\InRoleCacheStore.cs,GetExpiryTime,The following statement contains a magic number: if (policy == CachePolicy.ExpireByMidnight) {  	DateTime now = DateTime.UtcNow;  	var midnight = new DateTime (now.Year' now.Month' now.Day' 11' 59' 59' DateTimeKind.Utc);  	return midnight.Subtract (now);  }  
Magic Number,KonfDBAH.Caching,InRoleCacheStore,D:\newReposJune17\punitganshani_konfdb\Cloud\Azure\KonfDBAH\Caching\InRoleCacheStore.cs,GetExpiryTime,The following statement contains a magic number: if (policy == CachePolicy.ExpireByMidnight) {  	DateTime now = DateTime.UtcNow;  	var midnight = new DateTime (now.Year' now.Month' now.Day' 11' 59' 59' DateTimeKind.Utc);  	return midnight.Subtract (now);  }  
Magic Number,KonfDBAH.Caching,InRoleCacheStore,D:\newReposJune17\punitganshani_konfdb\Cloud\Azure\KonfDBAH\Caching\InRoleCacheStore.cs,GetExpiryTime,The following statement contains a magic number: if (policy == CachePolicy.ExpireByMidnight) {  	DateTime now = DateTime.UtcNow;  	var midnight = new DateTime (now.Year' now.Month' now.Day' 11' 59' 59' DateTimeKind.Utc);  	return midnight.Subtract (now);  }  
Magic Number,KonfDBAH,WorkerRole,D:\newReposJune17\punitganshani_konfdb\Cloud\Azure\KonfDBAH\WorkerRole.cs,OnStart,The following statement contains a magic number: try {  	// Set the maximum number of concurrent connections  	ServicePointManager.DefaultConnectionLimit = 12;  	// For information on handling configuration changes  	// see the MSDN topic at http://go.microsoft.com/fwlink/?LinkId=166357.  	var contextSettings = new ContextSettings {  		CommandFactory = new AzureCommandFactory (AppType.Server)  	};  	Trace.TraceInformation ("Command Factory Initialized");  	var configMode = RoleEnvironment.GetConfigurationSettingValue ("konfdb.configuration.mode");  	if (configMode.Equals ("azure"' StringComparison.InvariantCultureIgnoreCase)) {  		Trace.TraceInformation ("mode: Azure");  		var config = LoadConfigurationFromAzureUI ();  		AzureContext.CreateFrom (config' contextSettings);  	} else {  		Trace.TraceInformation ("mode: File");  		AzureContext.CreateFrom ("konfdb.json"' contextSettings);  	}  	CurrentContext.Default.Log.Info ("KonfDBAH Started Successfully!");  	return base.OnStart ();  } catch (Exception exception) {  	Trace.TraceError ("OnStart Exception: " + exception);  }  
Magic Number,KonfDBAH,WorkerRole,D:\newReposJune17\punitganshani_konfdb\Cloud\Azure\KonfDBAH\WorkerRole.cs,OnStart,The following statement contains a magic number: ServicePointManager.DefaultConnectionLimit = 12;  
Magic Number,KonfDBAH,WorkerRole,D:\newReposJune17\punitganshani_konfdb\Cloud\Azure\KonfDBAH\WorkerRole.cs,RunAsync,The following statement contains a magic number: return Task.Factory.StartNew (() => {  	while (!cancellationToken.IsCancellationRequested) {  		Thread.Sleep (1000);  	}  });  
Magic Number,KonfDBAH,WorkerRole,D:\newReposJune17\punitganshani_konfdb\Cloud\Azure\KonfDBAH\WorkerRole.cs,RunAsync,The following statement contains a magic number: while (!cancellationToken.IsCancellationRequested) {  	Thread.Sleep (1000);  }  
Magic Number,KonfDBAH,WorkerRole,D:\newReposJune17\punitganshani_konfdb\Cloud\Azure\KonfDBAH\WorkerRole.cs,RunAsync,The following statement contains a magic number: Thread.Sleep (1000);  
