Implementation smell,Namespace,Class,File,Method,Description
Long Method,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,InitEntities,The method has 257 lines of code.
Long Method,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,HtmlDecode,The method has 94 lines of code.
Complex Method,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecode,Cyclomatic complexity of the method is 11
Complex Method,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecode,Cyclomatic complexity of the method is 13
Complex Method,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecodeToBytes,Cyclomatic complexity of the method is 7
Complex Method,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,HtmlDecode,Cyclomatic complexity of the method is 20
Complex Method,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,ParseQueryString,Cyclomatic complexity of the method is 8
Complex Method,KonfDB.Infrastructure.Workflow,StateWorkflow,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Workflow\StateWorkflow.cs,ExecuteState,Cyclomatic complexity of the method is 10
Long Parameter List,KonfDB.Infrastructure.Database.StateActions,DatabaseTableCreateAction,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Database\StateActions\DatabaseTableCreateAction.cs,CreateTable,The method has 4 parameters.
Long Parameter List,KonfDB.Infrastructure.Database.StateActions,DatabaseObjectsCheckAction,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Database\StateActions\DatabaseObjectsCheckAction.cs,TablesExist,The method has 4 parameters.
Long Parameter List,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecode,The method has 4 parameters.
Long Parameter List,KonfDB.Infrastructure.Database.Abstracts,IConfigurationDataStore,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Database\Abstracts\IConfigurationDataStore.cs,GetConfigurations,The method has 6 parameters.
Long Parameter List,KonfDB.Infrastructure.Database.Abstracts,IConfigurationDataStore,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Database\Abstracts\IConfigurationDataStore.cs,GrantRoleAccessToSuite,The method has 4 parameters.
Long Statement,KonfDB.Infrastructure.Common,DataModelCreator,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\DataModelCreator.cs,DataTable2Entity,The length of the statement  "			sb.AppendLine ("    mappings.Add(new KeyValuePair<string' string>(\"" + dt.Columns [i].ColumnName + "\"' \"" + dt.Columns [i].ColumnName + "\"));"); " is 148.
Long Statement,KonfDB.Infrastructure.Configuration.Providers.Database,DatabaseProviderConfiguration,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Configuration\Providers\Database\DatabaseProviderConfiguration.cs,Transform,The length of the statement  "	return input.Replace ("$InstanceName$"' InstanceName).Replace ("$Host$"' Host).Replace ("$Username$"' Username).Replace ("$Password$"' Password).Replace ("$Location$"' Location); " is 178.
Long Statement,KonfDB.Infrastructure.Database.Providers,BaseProvider,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Database\Providers\BaseProvider.cs,Init,The length of the statement  "		throw new InvalidOperationException ("Could not initialize DB Provider. Could not reach end-state. States traversed: " + endState.Path); " is 136.
Long Statement,KonfDB.Infrastructure.Shell,CurrentHostContext,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Shell\CurrentHostContext.cs,DecryptPasswords,The length of the statement  "		configuration.Database.Default.Password = encryptionEngine.Decrypt (configuration.Database.Default.Password' string.Empty' encryptionMetadata); " is 143.
Long Statement,KonfDB.Infrastructure.Shell,CurrentHostContext,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Shell\CurrentHostContext.cs,DecryptPasswords,The length of the statement  "		configuration.Runtime.SuperUser.Password = encryptionEngine.Decrypt (configuration.Runtime.SuperUser.Password' string.Empty' encryptionMetadata); " is 145.
Long Statement,KonfDB.Infrastructure.Shell,CurrentHostContext,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Shell\CurrentHostContext.cs,GetDatabaseProviderInstance,The length of the statement  "		throw new InvalidConfigurationException ("Database Provider does not implement BaseProvider:" + defaultDatabaseConfig.ProviderType); " is 132.
Long Statement,KonfDB.Infrastructure.Utilities,Converter,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Utilities\Converter.cs,StringToByteArray,The length of the statement  "	return Enumerable.Range (0' hex.Length).Where (x => x % 2 == 0).Select (x => Convert.ToByte (hex.Substring (x' 2)' 16)).ToArray (); " is 131.
Long Statement,KonfDB.Infrastructure.WCF,WcfService,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\WCF\WcfService.cs,AddBinding,The length of the statement  "		var ex = new Exception ("You are trying to add service of type '" + binding.Configuration.ServiceType + "' on port '" + binding.Configuration.Port + "'." + Environment.NewLine + "Service of type '" + _ports [binding.Configuration.Port] + "' is already hosted on the same port."); " is 279.
Long Statement,KonfDB.Infrastructure.WCF,WcfService,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\WCF\WcfService.cs,ConfigureEndPoints,The length of the statement  "			CurrentContext.Default.Log.Debug ("Endpoint available: " + wcfEndpoint.Address + " for type : " + binding.Configuration.ServiceType); " is 133.
Long Statement,KonfDB.Infrastructure.Workflow,StateWorkflow,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Workflow\StateWorkflow.cs,Add,The length of the statement  "	_stateDictionary.Add (state' new Lazy<IStateAction<TStates>> (() => (IStateAction<TStates>)Activator.CreateInstance<T> ())); " is 124.
Complex Conditional,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlEncodeChar,The conditional expression  "(c < '0') || (c < 'A' && c > '9') || (c > 'Z' && c < 'a') || (c > 'z')"  is complex.
Virtual Method Call from Constructor,KonfDB.Infrastructure.Database.Providers,BaseProvider,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Database\Providers\BaseProvider.cs,BaseProvider,The constructor "BaseProvider" calls a virtual method "OnInitialized".
Magic Number,KonfDB.Infrastructure.Common,ConfigReader,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\ConfigReader.cs,GetConfigInfo,The following statement contains a magic number: if (File.Exists (parentDirectory)) {  	CurrentContext.Default.Log.Debug ("Will read file from : " + parentDirectory + FileName);  	// read in the Xml from the config file  	StringBuilder configFileContents;  	using (StreamReader reader = new StreamReader (parentDirectory + FileName)) {  		string xmlSnippet;  		configFileContents = new StringBuilder (512);  		while ((xmlSnippet = reader.ReadLine ()) != null) {  			configFileContents.Append (xmlSnippet);  		}  	}  	return configFileContents.ToString ();  }  
Magic Number,KonfDB.Infrastructure.Common,ConfigReader,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\ConfigReader.cs,GetConfigInfo,The following statement contains a magic number: using (StreamReader reader = new StreamReader (parentDirectory + FileName)) {  	string xmlSnippet;  	configFileContents = new StringBuilder (512);  	while ((xmlSnippet = reader.ReadLine ()) != null) {  		configFileContents.Append (xmlSnippet);  	}  }  
Magic Number,KonfDB.Infrastructure.Common,ConfigReader,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\ConfigReader.cs,GetConfigInfo,The following statement contains a magic number: configFileContents = new StringBuilder (512);  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecode,The following statement contains a magic number: for (int i = 0; i < len; i++) {  	if (s [i] == '%' && i + 2 < len && s [i + 1] != '%') {  		if (s [i + 1] == 'u' && i + 5 < len) {  			if (bytes.Length > 0) {  				output.Append (GetChars (bytes' e));  				bytes.SetLength (0);  			}  			xchar = GetChar (s' i + 2' 4);  			if (xchar != -1) {  				output.Append ((char)xchar);  				i += 5;  			} else {  				output.Append ('%');  			}  		} else if ((xchar = GetChar (s' i + 1' 2)) != -1) {  			bytes.WriteByte ((byte)xchar);  			i += 2;  		} else {  			output.Append ('%');  		}  		continue;  	}  	if (bytes.Length > 0) {  		output.Append (GetChars (bytes' e));  		bytes.SetLength (0);  	}  	if (s [i] == '+') {  		output.Append (' ');  	} else {  		output.Append (s [i]);  	}  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecode,The following statement contains a magic number: for (int i = 0; i < len; i++) {  	if (s [i] == '%' && i + 2 < len && s [i + 1] != '%') {  		if (s [i + 1] == 'u' && i + 5 < len) {  			if (bytes.Length > 0) {  				output.Append (GetChars (bytes' e));  				bytes.SetLength (0);  			}  			xchar = GetChar (s' i + 2' 4);  			if (xchar != -1) {  				output.Append ((char)xchar);  				i += 5;  			} else {  				output.Append ('%');  			}  		} else if ((xchar = GetChar (s' i + 1' 2)) != -1) {  			bytes.WriteByte ((byte)xchar);  			i += 2;  		} else {  			output.Append ('%');  		}  		continue;  	}  	if (bytes.Length > 0) {  		output.Append (GetChars (bytes' e));  		bytes.SetLength (0);  	}  	if (s [i] == '+') {  		output.Append (' ');  	} else {  		output.Append (s [i]);  	}  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecode,The following statement contains a magic number: for (int i = 0; i < len; i++) {  	if (s [i] == '%' && i + 2 < len && s [i + 1] != '%') {  		if (s [i + 1] == 'u' && i + 5 < len) {  			if (bytes.Length > 0) {  				output.Append (GetChars (bytes' e));  				bytes.SetLength (0);  			}  			xchar = GetChar (s' i + 2' 4);  			if (xchar != -1) {  				output.Append ((char)xchar);  				i += 5;  			} else {  				output.Append ('%');  			}  		} else if ((xchar = GetChar (s' i + 1' 2)) != -1) {  			bytes.WriteByte ((byte)xchar);  			i += 2;  		} else {  			output.Append ('%');  		}  		continue;  	}  	if (bytes.Length > 0) {  		output.Append (GetChars (bytes' e));  		bytes.SetLength (0);  	}  	if (s [i] == '+') {  		output.Append (' ');  	} else {  		output.Append (s [i]);  	}  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecode,The following statement contains a magic number: for (int i = 0; i < len; i++) {  	if (s [i] == '%' && i + 2 < len && s [i + 1] != '%') {  		if (s [i + 1] == 'u' && i + 5 < len) {  			if (bytes.Length > 0) {  				output.Append (GetChars (bytes' e));  				bytes.SetLength (0);  			}  			xchar = GetChar (s' i + 2' 4);  			if (xchar != -1) {  				output.Append ((char)xchar);  				i += 5;  			} else {  				output.Append ('%');  			}  		} else if ((xchar = GetChar (s' i + 1' 2)) != -1) {  			bytes.WriteByte ((byte)xchar);  			i += 2;  		} else {  			output.Append ('%');  		}  		continue;  	}  	if (bytes.Length > 0) {  		output.Append (GetChars (bytes' e));  		bytes.SetLength (0);  	}  	if (s [i] == '+') {  		output.Append (' ');  	} else {  		output.Append (s [i]);  	}  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecode,The following statement contains a magic number: for (int i = 0; i < len; i++) {  	if (s [i] == '%' && i + 2 < len && s [i + 1] != '%') {  		if (s [i + 1] == 'u' && i + 5 < len) {  			if (bytes.Length > 0) {  				output.Append (GetChars (bytes' e));  				bytes.SetLength (0);  			}  			xchar = GetChar (s' i + 2' 4);  			if (xchar != -1) {  				output.Append ((char)xchar);  				i += 5;  			} else {  				output.Append ('%');  			}  		} else if ((xchar = GetChar (s' i + 1' 2)) != -1) {  			bytes.WriteByte ((byte)xchar);  			i += 2;  		} else {  			output.Append ('%');  		}  		continue;  	}  	if (bytes.Length > 0) {  		output.Append (GetChars (bytes' e));  		bytes.SetLength (0);  	}  	if (s [i] == '+') {  		output.Append (' ');  	} else {  		output.Append (s [i]);  	}  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecode,The following statement contains a magic number: for (int i = 0; i < len; i++) {  	if (s [i] == '%' && i + 2 < len && s [i + 1] != '%') {  		if (s [i + 1] == 'u' && i + 5 < len) {  			if (bytes.Length > 0) {  				output.Append (GetChars (bytes' e));  				bytes.SetLength (0);  			}  			xchar = GetChar (s' i + 2' 4);  			if (xchar != -1) {  				output.Append ((char)xchar);  				i += 5;  			} else {  				output.Append ('%');  			}  		} else if ((xchar = GetChar (s' i + 1' 2)) != -1) {  			bytes.WriteByte ((byte)xchar);  			i += 2;  		} else {  			output.Append ('%');  		}  		continue;  	}  	if (bytes.Length > 0) {  		output.Append (GetChars (bytes' e));  		bytes.SetLength (0);  	}  	if (s [i] == '+') {  		output.Append (' ');  	} else {  		output.Append (s [i]);  	}  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecode,The following statement contains a magic number: for (int i = 0; i < len; i++) {  	if (s [i] == '%' && i + 2 < len && s [i + 1] != '%') {  		if (s [i + 1] == 'u' && i + 5 < len) {  			if (bytes.Length > 0) {  				output.Append (GetChars (bytes' e));  				bytes.SetLength (0);  			}  			xchar = GetChar (s' i + 2' 4);  			if (xchar != -1) {  				output.Append ((char)xchar);  				i += 5;  			} else {  				output.Append ('%');  			}  		} else if ((xchar = GetChar (s' i + 1' 2)) != -1) {  			bytes.WriteByte ((byte)xchar);  			i += 2;  		} else {  			output.Append ('%');  		}  		continue;  	}  	if (bytes.Length > 0) {  		output.Append (GetChars (bytes' e));  		bytes.SetLength (0);  	}  	if (s [i] == '+') {  		output.Append (' ');  	} else {  		output.Append (s [i]);  	}  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecode,The following statement contains a magic number: if (s [i] == '%' && i + 2 < len && s [i + 1] != '%') {  	if (s [i + 1] == 'u' && i + 5 < len) {  		if (bytes.Length > 0) {  			output.Append (GetChars (bytes' e));  			bytes.SetLength (0);  		}  		xchar = GetChar (s' i + 2' 4);  		if (xchar != -1) {  			output.Append ((char)xchar);  			i += 5;  		} else {  			output.Append ('%');  		}  	} else if ((xchar = GetChar (s' i + 1' 2)) != -1) {  		bytes.WriteByte ((byte)xchar);  		i += 2;  	} else {  		output.Append ('%');  	}  	continue;  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecode,The following statement contains a magic number: if (s [i] == '%' && i + 2 < len && s [i + 1] != '%') {  	if (s [i + 1] == 'u' && i + 5 < len) {  		if (bytes.Length > 0) {  			output.Append (GetChars (bytes' e));  			bytes.SetLength (0);  		}  		xchar = GetChar (s' i + 2' 4);  		if (xchar != -1) {  			output.Append ((char)xchar);  			i += 5;  		} else {  			output.Append ('%');  		}  	} else if ((xchar = GetChar (s' i + 1' 2)) != -1) {  		bytes.WriteByte ((byte)xchar);  		i += 2;  	} else {  		output.Append ('%');  	}  	continue;  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecode,The following statement contains a magic number: if (s [i] == '%' && i + 2 < len && s [i + 1] != '%') {  	if (s [i + 1] == 'u' && i + 5 < len) {  		if (bytes.Length > 0) {  			output.Append (GetChars (bytes' e));  			bytes.SetLength (0);  		}  		xchar = GetChar (s' i + 2' 4);  		if (xchar != -1) {  			output.Append ((char)xchar);  			i += 5;  		} else {  			output.Append ('%');  		}  	} else if ((xchar = GetChar (s' i + 1' 2)) != -1) {  		bytes.WriteByte ((byte)xchar);  		i += 2;  	} else {  		output.Append ('%');  	}  	continue;  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecode,The following statement contains a magic number: if (s [i] == '%' && i + 2 < len && s [i + 1] != '%') {  	if (s [i + 1] == 'u' && i + 5 < len) {  		if (bytes.Length > 0) {  			output.Append (GetChars (bytes' e));  			bytes.SetLength (0);  		}  		xchar = GetChar (s' i + 2' 4);  		if (xchar != -1) {  			output.Append ((char)xchar);  			i += 5;  		} else {  			output.Append ('%');  		}  	} else if ((xchar = GetChar (s' i + 1' 2)) != -1) {  		bytes.WriteByte ((byte)xchar);  		i += 2;  	} else {  		output.Append ('%');  	}  	continue;  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecode,The following statement contains a magic number: if (s [i] == '%' && i + 2 < len && s [i + 1] != '%') {  	if (s [i + 1] == 'u' && i + 5 < len) {  		if (bytes.Length > 0) {  			output.Append (GetChars (bytes' e));  			bytes.SetLength (0);  		}  		xchar = GetChar (s' i + 2' 4);  		if (xchar != -1) {  			output.Append ((char)xchar);  			i += 5;  		} else {  			output.Append ('%');  		}  	} else if ((xchar = GetChar (s' i + 1' 2)) != -1) {  		bytes.WriteByte ((byte)xchar);  		i += 2;  	} else {  		output.Append ('%');  	}  	continue;  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecode,The following statement contains a magic number: if (s [i] == '%' && i + 2 < len && s [i + 1] != '%') {  	if (s [i + 1] == 'u' && i + 5 < len) {  		if (bytes.Length > 0) {  			output.Append (GetChars (bytes' e));  			bytes.SetLength (0);  		}  		xchar = GetChar (s' i + 2' 4);  		if (xchar != -1) {  			output.Append ((char)xchar);  			i += 5;  		} else {  			output.Append ('%');  		}  	} else if ((xchar = GetChar (s' i + 1' 2)) != -1) {  		bytes.WriteByte ((byte)xchar);  		i += 2;  	} else {  		output.Append ('%');  	}  	continue;  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecode,The following statement contains a magic number: if (s [i] == '%' && i + 2 < len && s [i + 1] != '%') {  	if (s [i + 1] == 'u' && i + 5 < len) {  		if (bytes.Length > 0) {  			output.Append (GetChars (bytes' e));  			bytes.SetLength (0);  		}  		xchar = GetChar (s' i + 2' 4);  		if (xchar != -1) {  			output.Append ((char)xchar);  			i += 5;  		} else {  			output.Append ('%');  		}  	} else if ((xchar = GetChar (s' i + 1' 2)) != -1) {  		bytes.WriteByte ((byte)xchar);  		i += 2;  	} else {  		output.Append ('%');  	}  	continue;  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecode,The following statement contains a magic number: if (s [i + 1] == 'u' && i + 5 < len) {  	if (bytes.Length > 0) {  		output.Append (GetChars (bytes' e));  		bytes.SetLength (0);  	}  	xchar = GetChar (s' i + 2' 4);  	if (xchar != -1) {  		output.Append ((char)xchar);  		i += 5;  	} else {  		output.Append ('%');  	}  } else if ((xchar = GetChar (s' i + 1' 2)) != -1) {  	bytes.WriteByte ((byte)xchar);  	i += 2;  } else {  	output.Append ('%');  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecode,The following statement contains a magic number: if (s [i + 1] == 'u' && i + 5 < len) {  	if (bytes.Length > 0) {  		output.Append (GetChars (bytes' e));  		bytes.SetLength (0);  	}  	xchar = GetChar (s' i + 2' 4);  	if (xchar != -1) {  		output.Append ((char)xchar);  		i += 5;  	} else {  		output.Append ('%');  	}  } else if ((xchar = GetChar (s' i + 1' 2)) != -1) {  	bytes.WriteByte ((byte)xchar);  	i += 2;  } else {  	output.Append ('%');  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecode,The following statement contains a magic number: if (s [i + 1] == 'u' && i + 5 < len) {  	if (bytes.Length > 0) {  		output.Append (GetChars (bytes' e));  		bytes.SetLength (0);  	}  	xchar = GetChar (s' i + 2' 4);  	if (xchar != -1) {  		output.Append ((char)xchar);  		i += 5;  	} else {  		output.Append ('%');  	}  } else if ((xchar = GetChar (s' i + 1' 2)) != -1) {  	bytes.WriteByte ((byte)xchar);  	i += 2;  } else {  	output.Append ('%');  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecode,The following statement contains a magic number: if (s [i + 1] == 'u' && i + 5 < len) {  	if (bytes.Length > 0) {  		output.Append (GetChars (bytes' e));  		bytes.SetLength (0);  	}  	xchar = GetChar (s' i + 2' 4);  	if (xchar != -1) {  		output.Append ((char)xchar);  		i += 5;  	} else {  		output.Append ('%');  	}  } else if ((xchar = GetChar (s' i + 1' 2)) != -1) {  	bytes.WriteByte ((byte)xchar);  	i += 2;  } else {  	output.Append ('%');  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecode,The following statement contains a magic number: if (s [i + 1] == 'u' && i + 5 < len) {  	if (bytes.Length > 0) {  		output.Append (GetChars (bytes' e));  		bytes.SetLength (0);  	}  	xchar = GetChar (s' i + 2' 4);  	if (xchar != -1) {  		output.Append ((char)xchar);  		i += 5;  	} else {  		output.Append ('%');  	}  } else if ((xchar = GetChar (s' i + 1' 2)) != -1) {  	bytes.WriteByte ((byte)xchar);  	i += 2;  } else {  	output.Append ('%');  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecode,The following statement contains a magic number: if (s [i + 1] == 'u' && i + 5 < len) {  	if (bytes.Length > 0) {  		output.Append (GetChars (bytes' e));  		bytes.SetLength (0);  	}  	xchar = GetChar (s' i + 2' 4);  	if (xchar != -1) {  		output.Append ((char)xchar);  		i += 5;  	} else {  		output.Append ('%');  	}  } else if ((xchar = GetChar (s' i + 1' 2)) != -1) {  	bytes.WriteByte ((byte)xchar);  	i += 2;  } else {  	output.Append ('%');  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecode,The following statement contains a magic number: xchar = GetChar (s' i + 2' 4);  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecode,The following statement contains a magic number: xchar = GetChar (s' i + 2' 4);  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecode,The following statement contains a magic number: if (xchar != -1) {  	output.Append ((char)xchar);  	i += 5;  } else {  	output.Append ('%');  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecode,The following statement contains a magic number: i += 5;  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecode,The following statement contains a magic number: if ((xchar = GetChar (s' i + 1' 2)) != -1) {  	bytes.WriteByte ((byte)xchar);  	i += 2;  } else {  	output.Append ('%');  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecode,The following statement contains a magic number: if ((xchar = GetChar (s' i + 1' 2)) != -1) {  	bytes.WriteByte ((byte)xchar);  	i += 2;  } else {  	output.Append ('%');  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecode,The following statement contains a magic number: i += 2;  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,GetInt,The following statement contains a magic number: if (c >= 'a' && c <= 'f')  	return c - 'a' + 10;  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,GetInt,The following statement contains a magic number: return c - 'a' + 10;  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,GetInt,The following statement contains a magic number: if (c >= 'A' && c <= 'F')  	return c - 'A' + 10;  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,GetInt,The following statement contains a magic number: return c - 'A' + 10;  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,GetChar,The following statement contains a magic number: for (int i = offset; i < end; i++) {  	int current = GetInt (bytes [i]);  	if (current == -1)  		return -1;  	value = (value << 4) + current;  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,GetChar,The following statement contains a magic number: value = (value << 4) + current;  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,GetChar,The following statement contains a magic number: for (int i = offset; i < end; i++) {  	char c = str [i];  	if (c > 127)  		return -1;  	int current = GetInt ((byte)c);  	if (current == -1)  		return -1;  	val = (val << 4) + current;  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,GetChar,The following statement contains a magic number: for (int i = offset; i < end; i++) {  	char c = str [i];  	if (c > 127)  		return -1;  	int current = GetInt ((byte)c);  	if (current == -1)  		return -1;  	val = (val << 4) + current;  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,GetChar,The following statement contains a magic number: if (c > 127)  	return -1;  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,GetChar,The following statement contains a magic number: val = (val << 4) + current;  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecode,The following statement contains a magic number: for (int i = offset; i < end; i++) {  	if (bytes [i] == '%' && i + 2 < count && bytes [i + 1] != '%') {  		if (bytes [i + 1] == (byte)'u' && i + 5 < end) {  			if (acc.Length > 0) {  				output.Append (GetChars (acc' e));  				acc.SetLength (0);  			}  			xchar = GetChar (bytes' i + 2' 4);  			if (xchar != -1) {  				output.Append ((char)xchar);  				i += 5;  				continue;  			}  		} else if ((xchar = GetChar (bytes' i + 1' 2)) != -1) {  			acc.WriteByte ((byte)xchar);  			i += 2;  			continue;  		}  	}  	if (acc.Length > 0) {  		output.Append (GetChars (acc' e));  		acc.SetLength (0);  	}  	if (bytes [i] == '+') {  		output.Append (' ');  	} else {  		output.Append ((char)bytes [i]);  	}  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecode,The following statement contains a magic number: for (int i = offset; i < end; i++) {  	if (bytes [i] == '%' && i + 2 < count && bytes [i + 1] != '%') {  		if (bytes [i + 1] == (byte)'u' && i + 5 < end) {  			if (acc.Length > 0) {  				output.Append (GetChars (acc' e));  				acc.SetLength (0);  			}  			xchar = GetChar (bytes' i + 2' 4);  			if (xchar != -1) {  				output.Append ((char)xchar);  				i += 5;  				continue;  			}  		} else if ((xchar = GetChar (bytes' i + 1' 2)) != -1) {  			acc.WriteByte ((byte)xchar);  			i += 2;  			continue;  		}  	}  	if (acc.Length > 0) {  		output.Append (GetChars (acc' e));  		acc.SetLength (0);  	}  	if (bytes [i] == '+') {  		output.Append (' ');  	} else {  		output.Append ((char)bytes [i]);  	}  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecode,The following statement contains a magic number: for (int i = offset; i < end; i++) {  	if (bytes [i] == '%' && i + 2 < count && bytes [i + 1] != '%') {  		if (bytes [i + 1] == (byte)'u' && i + 5 < end) {  			if (acc.Length > 0) {  				output.Append (GetChars (acc' e));  				acc.SetLength (0);  			}  			xchar = GetChar (bytes' i + 2' 4);  			if (xchar != -1) {  				output.Append ((char)xchar);  				i += 5;  				continue;  			}  		} else if ((xchar = GetChar (bytes' i + 1' 2)) != -1) {  			acc.WriteByte ((byte)xchar);  			i += 2;  			continue;  		}  	}  	if (acc.Length > 0) {  		output.Append (GetChars (acc' e));  		acc.SetLength (0);  	}  	if (bytes [i] == '+') {  		output.Append (' ');  	} else {  		output.Append ((char)bytes [i]);  	}  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecode,The following statement contains a magic number: for (int i = offset; i < end; i++) {  	if (bytes [i] == '%' && i + 2 < count && bytes [i + 1] != '%') {  		if (bytes [i + 1] == (byte)'u' && i + 5 < end) {  			if (acc.Length > 0) {  				output.Append (GetChars (acc' e));  				acc.SetLength (0);  			}  			xchar = GetChar (bytes' i + 2' 4);  			if (xchar != -1) {  				output.Append ((char)xchar);  				i += 5;  				continue;  			}  		} else if ((xchar = GetChar (bytes' i + 1' 2)) != -1) {  			acc.WriteByte ((byte)xchar);  			i += 2;  			continue;  		}  	}  	if (acc.Length > 0) {  		output.Append (GetChars (acc' e));  		acc.SetLength (0);  	}  	if (bytes [i] == '+') {  		output.Append (' ');  	} else {  		output.Append ((char)bytes [i]);  	}  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecode,The following statement contains a magic number: for (int i = offset; i < end; i++) {  	if (bytes [i] == '%' && i + 2 < count && bytes [i + 1] != '%') {  		if (bytes [i + 1] == (byte)'u' && i + 5 < end) {  			if (acc.Length > 0) {  				output.Append (GetChars (acc' e));  				acc.SetLength (0);  			}  			xchar = GetChar (bytes' i + 2' 4);  			if (xchar != -1) {  				output.Append ((char)xchar);  				i += 5;  				continue;  			}  		} else if ((xchar = GetChar (bytes' i + 1' 2)) != -1) {  			acc.WriteByte ((byte)xchar);  			i += 2;  			continue;  		}  	}  	if (acc.Length > 0) {  		output.Append (GetChars (acc' e));  		acc.SetLength (0);  	}  	if (bytes [i] == '+') {  		output.Append (' ');  	} else {  		output.Append ((char)bytes [i]);  	}  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecode,The following statement contains a magic number: for (int i = offset; i < end; i++) {  	if (bytes [i] == '%' && i + 2 < count && bytes [i + 1] != '%') {  		if (bytes [i + 1] == (byte)'u' && i + 5 < end) {  			if (acc.Length > 0) {  				output.Append (GetChars (acc' e));  				acc.SetLength (0);  			}  			xchar = GetChar (bytes' i + 2' 4);  			if (xchar != -1) {  				output.Append ((char)xchar);  				i += 5;  				continue;  			}  		} else if ((xchar = GetChar (bytes' i + 1' 2)) != -1) {  			acc.WriteByte ((byte)xchar);  			i += 2;  			continue;  		}  	}  	if (acc.Length > 0) {  		output.Append (GetChars (acc' e));  		acc.SetLength (0);  	}  	if (bytes [i] == '+') {  		output.Append (' ');  	} else {  		output.Append ((char)bytes [i]);  	}  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecode,The following statement contains a magic number: for (int i = offset; i < end; i++) {  	if (bytes [i] == '%' && i + 2 < count && bytes [i + 1] != '%') {  		if (bytes [i + 1] == (byte)'u' && i + 5 < end) {  			if (acc.Length > 0) {  				output.Append (GetChars (acc' e));  				acc.SetLength (0);  			}  			xchar = GetChar (bytes' i + 2' 4);  			if (xchar != -1) {  				output.Append ((char)xchar);  				i += 5;  				continue;  			}  		} else if ((xchar = GetChar (bytes' i + 1' 2)) != -1) {  			acc.WriteByte ((byte)xchar);  			i += 2;  			continue;  		}  	}  	if (acc.Length > 0) {  		output.Append (GetChars (acc' e));  		acc.SetLength (0);  	}  	if (bytes [i] == '+') {  		output.Append (' ');  	} else {  		output.Append ((char)bytes [i]);  	}  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecode,The following statement contains a magic number: if (bytes [i] == '%' && i + 2 < count && bytes [i + 1] != '%') {  	if (bytes [i + 1] == (byte)'u' && i + 5 < end) {  		if (acc.Length > 0) {  			output.Append (GetChars (acc' e));  			acc.SetLength (0);  		}  		xchar = GetChar (bytes' i + 2' 4);  		if (xchar != -1) {  			output.Append ((char)xchar);  			i += 5;  			continue;  		}  	} else if ((xchar = GetChar (bytes' i + 1' 2)) != -1) {  		acc.WriteByte ((byte)xchar);  		i += 2;  		continue;  	}  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecode,The following statement contains a magic number: if (bytes [i] == '%' && i + 2 < count && bytes [i + 1] != '%') {  	if (bytes [i + 1] == (byte)'u' && i + 5 < end) {  		if (acc.Length > 0) {  			output.Append (GetChars (acc' e));  			acc.SetLength (0);  		}  		xchar = GetChar (bytes' i + 2' 4);  		if (xchar != -1) {  			output.Append ((char)xchar);  			i += 5;  			continue;  		}  	} else if ((xchar = GetChar (bytes' i + 1' 2)) != -1) {  		acc.WriteByte ((byte)xchar);  		i += 2;  		continue;  	}  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecode,The following statement contains a magic number: if (bytes [i] == '%' && i + 2 < count && bytes [i + 1] != '%') {  	if (bytes [i + 1] == (byte)'u' && i + 5 < end) {  		if (acc.Length > 0) {  			output.Append (GetChars (acc' e));  			acc.SetLength (0);  		}  		xchar = GetChar (bytes' i + 2' 4);  		if (xchar != -1) {  			output.Append ((char)xchar);  			i += 5;  			continue;  		}  	} else if ((xchar = GetChar (bytes' i + 1' 2)) != -1) {  		acc.WriteByte ((byte)xchar);  		i += 2;  		continue;  	}  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecode,The following statement contains a magic number: if (bytes [i] == '%' && i + 2 < count && bytes [i + 1] != '%') {  	if (bytes [i + 1] == (byte)'u' && i + 5 < end) {  		if (acc.Length > 0) {  			output.Append (GetChars (acc' e));  			acc.SetLength (0);  		}  		xchar = GetChar (bytes' i + 2' 4);  		if (xchar != -1) {  			output.Append ((char)xchar);  			i += 5;  			continue;  		}  	} else if ((xchar = GetChar (bytes' i + 1' 2)) != -1) {  		acc.WriteByte ((byte)xchar);  		i += 2;  		continue;  	}  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecode,The following statement contains a magic number: if (bytes [i] == '%' && i + 2 < count && bytes [i + 1] != '%') {  	if (bytes [i + 1] == (byte)'u' && i + 5 < end) {  		if (acc.Length > 0) {  			output.Append (GetChars (acc' e));  			acc.SetLength (0);  		}  		xchar = GetChar (bytes' i + 2' 4);  		if (xchar != -1) {  			output.Append ((char)xchar);  			i += 5;  			continue;  		}  	} else if ((xchar = GetChar (bytes' i + 1' 2)) != -1) {  		acc.WriteByte ((byte)xchar);  		i += 2;  		continue;  	}  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecode,The following statement contains a magic number: if (bytes [i] == '%' && i + 2 < count && bytes [i + 1] != '%') {  	if (bytes [i + 1] == (byte)'u' && i + 5 < end) {  		if (acc.Length > 0) {  			output.Append (GetChars (acc' e));  			acc.SetLength (0);  		}  		xchar = GetChar (bytes' i + 2' 4);  		if (xchar != -1) {  			output.Append ((char)xchar);  			i += 5;  			continue;  		}  	} else if ((xchar = GetChar (bytes' i + 1' 2)) != -1) {  		acc.WriteByte ((byte)xchar);  		i += 2;  		continue;  	}  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecode,The following statement contains a magic number: if (bytes [i] == '%' && i + 2 < count && bytes [i + 1] != '%') {  	if (bytes [i + 1] == (byte)'u' && i + 5 < end) {  		if (acc.Length > 0) {  			output.Append (GetChars (acc' e));  			acc.SetLength (0);  		}  		xchar = GetChar (bytes' i + 2' 4);  		if (xchar != -1) {  			output.Append ((char)xchar);  			i += 5;  			continue;  		}  	} else if ((xchar = GetChar (bytes' i + 1' 2)) != -1) {  		acc.WriteByte ((byte)xchar);  		i += 2;  		continue;  	}  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecode,The following statement contains a magic number: if (bytes [i + 1] == (byte)'u' && i + 5 < end) {  	if (acc.Length > 0) {  		output.Append (GetChars (acc' e));  		acc.SetLength (0);  	}  	xchar = GetChar (bytes' i + 2' 4);  	if (xchar != -1) {  		output.Append ((char)xchar);  		i += 5;  		continue;  	}  } else if ((xchar = GetChar (bytes' i + 1' 2)) != -1) {  	acc.WriteByte ((byte)xchar);  	i += 2;  	continue;  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecode,The following statement contains a magic number: if (bytes [i + 1] == (byte)'u' && i + 5 < end) {  	if (acc.Length > 0) {  		output.Append (GetChars (acc' e));  		acc.SetLength (0);  	}  	xchar = GetChar (bytes' i + 2' 4);  	if (xchar != -1) {  		output.Append ((char)xchar);  		i += 5;  		continue;  	}  } else if ((xchar = GetChar (bytes' i + 1' 2)) != -1) {  	acc.WriteByte ((byte)xchar);  	i += 2;  	continue;  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecode,The following statement contains a magic number: if (bytes [i + 1] == (byte)'u' && i + 5 < end) {  	if (acc.Length > 0) {  		output.Append (GetChars (acc' e));  		acc.SetLength (0);  	}  	xchar = GetChar (bytes' i + 2' 4);  	if (xchar != -1) {  		output.Append ((char)xchar);  		i += 5;  		continue;  	}  } else if ((xchar = GetChar (bytes' i + 1' 2)) != -1) {  	acc.WriteByte ((byte)xchar);  	i += 2;  	continue;  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecode,The following statement contains a magic number: if (bytes [i + 1] == (byte)'u' && i + 5 < end) {  	if (acc.Length > 0) {  		output.Append (GetChars (acc' e));  		acc.SetLength (0);  	}  	xchar = GetChar (bytes' i + 2' 4);  	if (xchar != -1) {  		output.Append ((char)xchar);  		i += 5;  		continue;  	}  } else if ((xchar = GetChar (bytes' i + 1' 2)) != -1) {  	acc.WriteByte ((byte)xchar);  	i += 2;  	continue;  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecode,The following statement contains a magic number: if (bytes [i + 1] == (byte)'u' && i + 5 < end) {  	if (acc.Length > 0) {  		output.Append (GetChars (acc' e));  		acc.SetLength (0);  	}  	xchar = GetChar (bytes' i + 2' 4);  	if (xchar != -1) {  		output.Append ((char)xchar);  		i += 5;  		continue;  	}  } else if ((xchar = GetChar (bytes' i + 1' 2)) != -1) {  	acc.WriteByte ((byte)xchar);  	i += 2;  	continue;  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecode,The following statement contains a magic number: if (bytes [i + 1] == (byte)'u' && i + 5 < end) {  	if (acc.Length > 0) {  		output.Append (GetChars (acc' e));  		acc.SetLength (0);  	}  	xchar = GetChar (bytes' i + 2' 4);  	if (xchar != -1) {  		output.Append ((char)xchar);  		i += 5;  		continue;  	}  } else if ((xchar = GetChar (bytes' i + 1' 2)) != -1) {  	acc.WriteByte ((byte)xchar);  	i += 2;  	continue;  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecode,The following statement contains a magic number: xchar = GetChar (bytes' i + 2' 4);  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecode,The following statement contains a magic number: xchar = GetChar (bytes' i + 2' 4);  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecode,The following statement contains a magic number: if (xchar != -1) {  	output.Append ((char)xchar);  	i += 5;  	continue;  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecode,The following statement contains a magic number: i += 5;  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecode,The following statement contains a magic number: if ((xchar = GetChar (bytes' i + 1' 2)) != -1) {  	acc.WriteByte ((byte)xchar);  	i += 2;  	continue;  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecode,The following statement contains a magic number: if ((xchar = GetChar (bytes' i + 1' 2)) != -1) {  	acc.WriteByte ((byte)xchar);  	i += 2;  	continue;  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecode,The following statement contains a magic number: i += 2;  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecodeToBytes,The following statement contains a magic number: for (int i = offset; i < end; i++) {  	char c = (char)bytes [i];  	if (c == '+') {  		c = ' ';  	} else if (c == '%' && i < end - 2) {  		int xchar = GetChar (bytes' i + 1' 2);  		if (xchar != -1) {  			c = (char)xchar;  			i += 2;  		}  	}  	result.WriteByte ((byte)c);  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecodeToBytes,The following statement contains a magic number: for (int i = offset; i < end; i++) {  	char c = (char)bytes [i];  	if (c == '+') {  		c = ' ';  	} else if (c == '%' && i < end - 2) {  		int xchar = GetChar (bytes' i + 1' 2);  		if (xchar != -1) {  			c = (char)xchar;  			i += 2;  		}  	}  	result.WriteByte ((byte)c);  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecodeToBytes,The following statement contains a magic number: for (int i = offset; i < end; i++) {  	char c = (char)bytes [i];  	if (c == '+') {  		c = ' ';  	} else if (c == '%' && i < end - 2) {  		int xchar = GetChar (bytes' i + 1' 2);  		if (xchar != -1) {  			c = (char)xchar;  			i += 2;  		}  	}  	result.WriteByte ((byte)c);  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecodeToBytes,The following statement contains a magic number: if (c == '+') {  	c = ' ';  } else if (c == '%' && i < end - 2) {  	int xchar = GetChar (bytes' i + 1' 2);  	if (xchar != -1) {  		c = (char)xchar;  		i += 2;  	}  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecodeToBytes,The following statement contains a magic number: if (c == '+') {  	c = ' ';  } else if (c == '%' && i < end - 2) {  	int xchar = GetChar (bytes' i + 1' 2);  	if (xchar != -1) {  		c = (char)xchar;  		i += 2;  	}  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecodeToBytes,The following statement contains a magic number: if (c == '+') {  	c = ' ';  } else if (c == '%' && i < end - 2) {  	int xchar = GetChar (bytes' i + 1' 2);  	if (xchar != -1) {  		c = (char)xchar;  		i += 2;  	}  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecodeToBytes,The following statement contains a magic number: if (c == '%' && i < end - 2) {  	int xchar = GetChar (bytes' i + 1' 2);  	if (xchar != -1) {  		c = (char)xchar;  		i += 2;  	}  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecodeToBytes,The following statement contains a magic number: if (c == '%' && i < end - 2) {  	int xchar = GetChar (bytes' i + 1' 2);  	if (xchar != -1) {  		c = (char)xchar;  		i += 2;  	}  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecodeToBytes,The following statement contains a magic number: if (c == '%' && i < end - 2) {  	int xchar = GetChar (bytes' i + 1' 2);  	if (xchar != -1) {  		c = (char)xchar;  		i += 2;  	}  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecodeToBytes,The following statement contains a magic number: if (xchar != -1) {  	c = (char)xchar;  	i += 2;  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlDecodeToBytes,The following statement contains a magic number: i += 2;  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlEncodeChar,The following statement contains a magic number: if (c > 255) {  	//FIXME: what happens when there is an internal error?  	//if (!isUnicode)  	//	throw new ArgumentOutOfRangeException ("c"' c' "c must be less than 256");  	int idx;  	int i = c;  	result.WriteByte ((byte)'%');  	result.WriteByte ((byte)'u');  	idx = i >> 12;  	result.WriteByte ((byte)hexChars [idx]);  	idx = (i >> 8) & 0x0F;  	result.WriteByte ((byte)hexChars [idx]);  	idx = (i >> 4) & 0x0F;  	result.WriteByte ((byte)hexChars [idx]);  	idx = i & 0x0F;  	result.WriteByte ((byte)hexChars [idx]);  	return;  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlEncodeChar,The following statement contains a magic number: if (c > 255) {  	//FIXME: what happens when there is an internal error?  	//if (!isUnicode)  	//	throw new ArgumentOutOfRangeException ("c"' c' "c must be less than 256");  	int idx;  	int i = c;  	result.WriteByte ((byte)'%');  	result.WriteByte ((byte)'u');  	idx = i >> 12;  	result.WriteByte ((byte)hexChars [idx]);  	idx = (i >> 8) & 0x0F;  	result.WriteByte ((byte)hexChars [idx]);  	idx = (i >> 4) & 0x0F;  	result.WriteByte ((byte)hexChars [idx]);  	idx = i & 0x0F;  	result.WriteByte ((byte)hexChars [idx]);  	return;  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlEncodeChar,The following statement contains a magic number: if (c > 255) {  	//FIXME: what happens when there is an internal error?  	//if (!isUnicode)  	//	throw new ArgumentOutOfRangeException ("c"' c' "c must be less than 256");  	int idx;  	int i = c;  	result.WriteByte ((byte)'%');  	result.WriteByte ((byte)'u');  	idx = i >> 12;  	result.WriteByte ((byte)hexChars [idx]);  	idx = (i >> 8) & 0x0F;  	result.WriteByte ((byte)hexChars [idx]);  	idx = (i >> 4) & 0x0F;  	result.WriteByte ((byte)hexChars [idx]);  	idx = i & 0x0F;  	result.WriteByte ((byte)hexChars [idx]);  	return;  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlEncodeChar,The following statement contains a magic number: if (c > 255) {  	//FIXME: what happens when there is an internal error?  	//if (!isUnicode)  	//	throw new ArgumentOutOfRangeException ("c"' c' "c must be less than 256");  	int idx;  	int i = c;  	result.WriteByte ((byte)'%');  	result.WriteByte ((byte)'u');  	idx = i >> 12;  	result.WriteByte ((byte)hexChars [idx]);  	idx = (i >> 8) & 0x0F;  	result.WriteByte ((byte)hexChars [idx]);  	idx = (i >> 4) & 0x0F;  	result.WriteByte ((byte)hexChars [idx]);  	idx = i & 0x0F;  	result.WriteByte ((byte)hexChars [idx]);  	return;  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlEncodeChar,The following statement contains a magic number: idx = i >> 12;  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlEncodeChar,The following statement contains a magic number: idx = (i >> 8) & 0x0F;  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlEncodeChar,The following statement contains a magic number: idx = (i >> 4) & 0x0F;  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlEncodeChar,The following statement contains a magic number: if ((c < '0') || (c < 'A' && c > '9') || (c > 'Z' && c < 'a') || (c > 'z')) {  	if (isUnicode && c > 127) {  		result.WriteByte ((byte)'%');  		result.WriteByte ((byte)'u');  		result.WriteByte ((byte)'0');  		result.WriteByte ((byte)'0');  	} else  		result.WriteByte ((byte)'%');  	int idx = c >> 4;  	result.WriteByte ((byte)hexChars [idx]);  	idx = c & 0x0F;  	result.WriteByte ((byte)hexChars [idx]);  } else  	result.WriteByte ((byte)c);  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlEncodeChar,The following statement contains a magic number: if ((c < '0') || (c < 'A' && c > '9') || (c > 'Z' && c < 'a') || (c > 'z')) {  	if (isUnicode && c > 127) {  		result.WriteByte ((byte)'%');  		result.WriteByte ((byte)'u');  		result.WriteByte ((byte)'0');  		result.WriteByte ((byte)'0');  	} else  		result.WriteByte ((byte)'%');  	int idx = c >> 4;  	result.WriteByte ((byte)hexChars [idx]);  	idx = c & 0x0F;  	result.WriteByte ((byte)hexChars [idx]);  } else  	result.WriteByte ((byte)c);  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,UrlEncodeChar,The following statement contains a magic number: if (isUnicode && c > 127) {  	result.WriteByte ((byte)'%');  	result.WriteByte ((byte)'u');  	result.WriteByte ((byte)'0');  	result.WriteByte ((byte)'0');  } else  	result.WriteByte ((byte)'%');  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,HtmlDecode,The following statement contains a magic number: for (int i = 0; i < len; i++) {  	char c = s [i];  	if (state == 0) {  		if (c == '&') {  			entity.Append (c);  			state = 1;  		} else {  			output.Append (c);  		}  		continue;  	}  	if (c == '&') {  		state = 1;  		if (have_trailing_digits) {  			entity.Append (number.ToString (CultureInfo.InvariantCulture));  			have_trailing_digits = false;  		}  		output.Append (entity);  		entity.Length = 0;  		entity.Append ('&');  		continue;  	}  	if (state == 1) {  		if (c == ';') {  			state = 0;  			output.Append (entity);  			output.Append (c);  			entity.Length = 0;  		} else {  			number = 0;  			if (c != '#') {  				state = 2;  			} else {  				state = 3;  			}  			entity.Append (c);  		}  	} else if (state == 2) {  		entity.Append (c);  		if (c == ';') {  			string key = entity.ToString ();  			if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  				key = Entities [key.Substring (1' key.Length - 2)].ToString ();  			output.Append (key);  			state = 0;  			entity.Length = 0;  		}  	} else if (state == 3) {  		if (c == ';') {  			if (number > 65535) {  				output.Append ("&#");  				output.Append (number.ToString (CultureInfo.InvariantCulture));  				output.Append (";");  			} else {  				output.Append ((char)number);  			}  			state = 0;  			entity.Length = 0;  			have_trailing_digits = false;  		} else if (Char.IsDigit (c)) {  			number = number * 10 + (c - '0');  			have_trailing_digits = true;  		} else {  			state = 2;  			if (have_trailing_digits) {  				entity.Append (number.ToString (CultureInfo.InvariantCulture));  				have_trailing_digits = false;  			}  			entity.Append (c);  		}  	}  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,HtmlDecode,The following statement contains a magic number: for (int i = 0; i < len; i++) {  	char c = s [i];  	if (state == 0) {  		if (c == '&') {  			entity.Append (c);  			state = 1;  		} else {  			output.Append (c);  		}  		continue;  	}  	if (c == '&') {  		state = 1;  		if (have_trailing_digits) {  			entity.Append (number.ToString (CultureInfo.InvariantCulture));  			have_trailing_digits = false;  		}  		output.Append (entity);  		entity.Length = 0;  		entity.Append ('&');  		continue;  	}  	if (state == 1) {  		if (c == ';') {  			state = 0;  			output.Append (entity);  			output.Append (c);  			entity.Length = 0;  		} else {  			number = 0;  			if (c != '#') {  				state = 2;  			} else {  				state = 3;  			}  			entity.Append (c);  		}  	} else if (state == 2) {  		entity.Append (c);  		if (c == ';') {  			string key = entity.ToString ();  			if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  				key = Entities [key.Substring (1' key.Length - 2)].ToString ();  			output.Append (key);  			state = 0;  			entity.Length = 0;  		}  	} else if (state == 3) {  		if (c == ';') {  			if (number > 65535) {  				output.Append ("&#");  				output.Append (number.ToString (CultureInfo.InvariantCulture));  				output.Append (";");  			} else {  				output.Append ((char)number);  			}  			state = 0;  			entity.Length = 0;  			have_trailing_digits = false;  		} else if (Char.IsDigit (c)) {  			number = number * 10 + (c - '0');  			have_trailing_digits = true;  		} else {  			state = 2;  			if (have_trailing_digits) {  				entity.Append (number.ToString (CultureInfo.InvariantCulture));  				have_trailing_digits = false;  			}  			entity.Append (c);  		}  	}  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,HtmlDecode,The following statement contains a magic number: for (int i = 0; i < len; i++) {  	char c = s [i];  	if (state == 0) {  		if (c == '&') {  			entity.Append (c);  			state = 1;  		} else {  			output.Append (c);  		}  		continue;  	}  	if (c == '&') {  		state = 1;  		if (have_trailing_digits) {  			entity.Append (number.ToString (CultureInfo.InvariantCulture));  			have_trailing_digits = false;  		}  		output.Append (entity);  		entity.Length = 0;  		entity.Append ('&');  		continue;  	}  	if (state == 1) {  		if (c == ';') {  			state = 0;  			output.Append (entity);  			output.Append (c);  			entity.Length = 0;  		} else {  			number = 0;  			if (c != '#') {  				state = 2;  			} else {  				state = 3;  			}  			entity.Append (c);  		}  	} else if (state == 2) {  		entity.Append (c);  		if (c == ';') {  			string key = entity.ToString ();  			if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  				key = Entities [key.Substring (1' key.Length - 2)].ToString ();  			output.Append (key);  			state = 0;  			entity.Length = 0;  		}  	} else if (state == 3) {  		if (c == ';') {  			if (number > 65535) {  				output.Append ("&#");  				output.Append (number.ToString (CultureInfo.InvariantCulture));  				output.Append (";");  			} else {  				output.Append ((char)number);  			}  			state = 0;  			entity.Length = 0;  			have_trailing_digits = false;  		} else if (Char.IsDigit (c)) {  			number = number * 10 + (c - '0');  			have_trailing_digits = true;  		} else {  			state = 2;  			if (have_trailing_digits) {  				entity.Append (number.ToString (CultureInfo.InvariantCulture));  				have_trailing_digits = false;  			}  			entity.Append (c);  		}  	}  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,HtmlDecode,The following statement contains a magic number: for (int i = 0; i < len; i++) {  	char c = s [i];  	if (state == 0) {  		if (c == '&') {  			entity.Append (c);  			state = 1;  		} else {  			output.Append (c);  		}  		continue;  	}  	if (c == '&') {  		state = 1;  		if (have_trailing_digits) {  			entity.Append (number.ToString (CultureInfo.InvariantCulture));  			have_trailing_digits = false;  		}  		output.Append (entity);  		entity.Length = 0;  		entity.Append ('&');  		continue;  	}  	if (state == 1) {  		if (c == ';') {  			state = 0;  			output.Append (entity);  			output.Append (c);  			entity.Length = 0;  		} else {  			number = 0;  			if (c != '#') {  				state = 2;  			} else {  				state = 3;  			}  			entity.Append (c);  		}  	} else if (state == 2) {  		entity.Append (c);  		if (c == ';') {  			string key = entity.ToString ();  			if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  				key = Entities [key.Substring (1' key.Length - 2)].ToString ();  			output.Append (key);  			state = 0;  			entity.Length = 0;  		}  	} else if (state == 3) {  		if (c == ';') {  			if (number > 65535) {  				output.Append ("&#");  				output.Append (number.ToString (CultureInfo.InvariantCulture));  				output.Append (";");  			} else {  				output.Append ((char)number);  			}  			state = 0;  			entity.Length = 0;  			have_trailing_digits = false;  		} else if (Char.IsDigit (c)) {  			number = number * 10 + (c - '0');  			have_trailing_digits = true;  		} else {  			state = 2;  			if (have_trailing_digits) {  				entity.Append (number.ToString (CultureInfo.InvariantCulture));  				have_trailing_digits = false;  			}  			entity.Append (c);  		}  	}  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,HtmlDecode,The following statement contains a magic number: for (int i = 0; i < len; i++) {  	char c = s [i];  	if (state == 0) {  		if (c == '&') {  			entity.Append (c);  			state = 1;  		} else {  			output.Append (c);  		}  		continue;  	}  	if (c == '&') {  		state = 1;  		if (have_trailing_digits) {  			entity.Append (number.ToString (CultureInfo.InvariantCulture));  			have_trailing_digits = false;  		}  		output.Append (entity);  		entity.Length = 0;  		entity.Append ('&');  		continue;  	}  	if (state == 1) {  		if (c == ';') {  			state = 0;  			output.Append (entity);  			output.Append (c);  			entity.Length = 0;  		} else {  			number = 0;  			if (c != '#') {  				state = 2;  			} else {  				state = 3;  			}  			entity.Append (c);  		}  	} else if (state == 2) {  		entity.Append (c);  		if (c == ';') {  			string key = entity.ToString ();  			if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  				key = Entities [key.Substring (1' key.Length - 2)].ToString ();  			output.Append (key);  			state = 0;  			entity.Length = 0;  		}  	} else if (state == 3) {  		if (c == ';') {  			if (number > 65535) {  				output.Append ("&#");  				output.Append (number.ToString (CultureInfo.InvariantCulture));  				output.Append (";");  			} else {  				output.Append ((char)number);  			}  			state = 0;  			entity.Length = 0;  			have_trailing_digits = false;  		} else if (Char.IsDigit (c)) {  			number = number * 10 + (c - '0');  			have_trailing_digits = true;  		} else {  			state = 2;  			if (have_trailing_digits) {  				entity.Append (number.ToString (CultureInfo.InvariantCulture));  				have_trailing_digits = false;  			}  			entity.Append (c);  		}  	}  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,HtmlDecode,The following statement contains a magic number: for (int i = 0; i < len; i++) {  	char c = s [i];  	if (state == 0) {  		if (c == '&') {  			entity.Append (c);  			state = 1;  		} else {  			output.Append (c);  		}  		continue;  	}  	if (c == '&') {  		state = 1;  		if (have_trailing_digits) {  			entity.Append (number.ToString (CultureInfo.InvariantCulture));  			have_trailing_digits = false;  		}  		output.Append (entity);  		entity.Length = 0;  		entity.Append ('&');  		continue;  	}  	if (state == 1) {  		if (c == ';') {  			state = 0;  			output.Append (entity);  			output.Append (c);  			entity.Length = 0;  		} else {  			number = 0;  			if (c != '#') {  				state = 2;  			} else {  				state = 3;  			}  			entity.Append (c);  		}  	} else if (state == 2) {  		entity.Append (c);  		if (c == ';') {  			string key = entity.ToString ();  			if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  				key = Entities [key.Substring (1' key.Length - 2)].ToString ();  			output.Append (key);  			state = 0;  			entity.Length = 0;  		}  	} else if (state == 3) {  		if (c == ';') {  			if (number > 65535) {  				output.Append ("&#");  				output.Append (number.ToString (CultureInfo.InvariantCulture));  				output.Append (";");  			} else {  				output.Append ((char)number);  			}  			state = 0;  			entity.Length = 0;  			have_trailing_digits = false;  		} else if (Char.IsDigit (c)) {  			number = number * 10 + (c - '0');  			have_trailing_digits = true;  		} else {  			state = 2;  			if (have_trailing_digits) {  				entity.Append (number.ToString (CultureInfo.InvariantCulture));  				have_trailing_digits = false;  			}  			entity.Append (c);  		}  	}  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,HtmlDecode,The following statement contains a magic number: for (int i = 0; i < len; i++) {  	char c = s [i];  	if (state == 0) {  		if (c == '&') {  			entity.Append (c);  			state = 1;  		} else {  			output.Append (c);  		}  		continue;  	}  	if (c == '&') {  		state = 1;  		if (have_trailing_digits) {  			entity.Append (number.ToString (CultureInfo.InvariantCulture));  			have_trailing_digits = false;  		}  		output.Append (entity);  		entity.Length = 0;  		entity.Append ('&');  		continue;  	}  	if (state == 1) {  		if (c == ';') {  			state = 0;  			output.Append (entity);  			output.Append (c);  			entity.Length = 0;  		} else {  			number = 0;  			if (c != '#') {  				state = 2;  			} else {  				state = 3;  			}  			entity.Append (c);  		}  	} else if (state == 2) {  		entity.Append (c);  		if (c == ';') {  			string key = entity.ToString ();  			if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  				key = Entities [key.Substring (1' key.Length - 2)].ToString ();  			output.Append (key);  			state = 0;  			entity.Length = 0;  		}  	} else if (state == 3) {  		if (c == ';') {  			if (number > 65535) {  				output.Append ("&#");  				output.Append (number.ToString (CultureInfo.InvariantCulture));  				output.Append (";");  			} else {  				output.Append ((char)number);  			}  			state = 0;  			entity.Length = 0;  			have_trailing_digits = false;  		} else if (Char.IsDigit (c)) {  			number = number * 10 + (c - '0');  			have_trailing_digits = true;  		} else {  			state = 2;  			if (have_trailing_digits) {  				entity.Append (number.ToString (CultureInfo.InvariantCulture));  				have_trailing_digits = false;  			}  			entity.Append (c);  		}  	}  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,HtmlDecode,The following statement contains a magic number: for (int i = 0; i < len; i++) {  	char c = s [i];  	if (state == 0) {  		if (c == '&') {  			entity.Append (c);  			state = 1;  		} else {  			output.Append (c);  		}  		continue;  	}  	if (c == '&') {  		state = 1;  		if (have_trailing_digits) {  			entity.Append (number.ToString (CultureInfo.InvariantCulture));  			have_trailing_digits = false;  		}  		output.Append (entity);  		entity.Length = 0;  		entity.Append ('&');  		continue;  	}  	if (state == 1) {  		if (c == ';') {  			state = 0;  			output.Append (entity);  			output.Append (c);  			entity.Length = 0;  		} else {  			number = 0;  			if (c != '#') {  				state = 2;  			} else {  				state = 3;  			}  			entity.Append (c);  		}  	} else if (state == 2) {  		entity.Append (c);  		if (c == ';') {  			string key = entity.ToString ();  			if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  				key = Entities [key.Substring (1' key.Length - 2)].ToString ();  			output.Append (key);  			state = 0;  			entity.Length = 0;  		}  	} else if (state == 3) {  		if (c == ';') {  			if (number > 65535) {  				output.Append ("&#");  				output.Append (number.ToString (CultureInfo.InvariantCulture));  				output.Append (";");  			} else {  				output.Append ((char)number);  			}  			state = 0;  			entity.Length = 0;  			have_trailing_digits = false;  		} else if (Char.IsDigit (c)) {  			number = number * 10 + (c - '0');  			have_trailing_digits = true;  		} else {  			state = 2;  			if (have_trailing_digits) {  				entity.Append (number.ToString (CultureInfo.InvariantCulture));  				have_trailing_digits = false;  			}  			entity.Append (c);  		}  	}  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,HtmlDecode,The following statement contains a magic number: for (int i = 0; i < len; i++) {  	char c = s [i];  	if (state == 0) {  		if (c == '&') {  			entity.Append (c);  			state = 1;  		} else {  			output.Append (c);  		}  		continue;  	}  	if (c == '&') {  		state = 1;  		if (have_trailing_digits) {  			entity.Append (number.ToString (CultureInfo.InvariantCulture));  			have_trailing_digits = false;  		}  		output.Append (entity);  		entity.Length = 0;  		entity.Append ('&');  		continue;  	}  	if (state == 1) {  		if (c == ';') {  			state = 0;  			output.Append (entity);  			output.Append (c);  			entity.Length = 0;  		} else {  			number = 0;  			if (c != '#') {  				state = 2;  			} else {  				state = 3;  			}  			entity.Append (c);  		}  	} else if (state == 2) {  		entity.Append (c);  		if (c == ';') {  			string key = entity.ToString ();  			if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  				key = Entities [key.Substring (1' key.Length - 2)].ToString ();  			output.Append (key);  			state = 0;  			entity.Length = 0;  		}  	} else if (state == 3) {  		if (c == ';') {  			if (number > 65535) {  				output.Append ("&#");  				output.Append (number.ToString (CultureInfo.InvariantCulture));  				output.Append (";");  			} else {  				output.Append ((char)number);  			}  			state = 0;  			entity.Length = 0;  			have_trailing_digits = false;  		} else if (Char.IsDigit (c)) {  			number = number * 10 + (c - '0');  			have_trailing_digits = true;  		} else {  			state = 2;  			if (have_trailing_digits) {  				entity.Append (number.ToString (CultureInfo.InvariantCulture));  				have_trailing_digits = false;  			}  			entity.Append (c);  		}  	}  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,HtmlDecode,The following statement contains a magic number: if (state == 1) {  	if (c == ';') {  		state = 0;  		output.Append (entity);  		output.Append (c);  		entity.Length = 0;  	} else {  		number = 0;  		if (c != '#') {  			state = 2;  		} else {  			state = 3;  		}  		entity.Append (c);  	}  } else if (state == 2) {  	entity.Append (c);  	if (c == ';') {  		string key = entity.ToString ();  		if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  			key = Entities [key.Substring (1' key.Length - 2)].ToString ();  		output.Append (key);  		state = 0;  		entity.Length = 0;  	}  } else if (state == 3) {  	if (c == ';') {  		if (number > 65535) {  			output.Append ("&#");  			output.Append (number.ToString (CultureInfo.InvariantCulture));  			output.Append (";");  		} else {  			output.Append ((char)number);  		}  		state = 0;  		entity.Length = 0;  		have_trailing_digits = false;  	} else if (Char.IsDigit (c)) {  		number = number * 10 + (c - '0');  		have_trailing_digits = true;  	} else {  		state = 2;  		if (have_trailing_digits) {  			entity.Append (number.ToString (CultureInfo.InvariantCulture));  			have_trailing_digits = false;  		}  		entity.Append (c);  	}  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,HtmlDecode,The following statement contains a magic number: if (state == 1) {  	if (c == ';') {  		state = 0;  		output.Append (entity);  		output.Append (c);  		entity.Length = 0;  	} else {  		number = 0;  		if (c != '#') {  			state = 2;  		} else {  			state = 3;  		}  		entity.Append (c);  	}  } else if (state == 2) {  	entity.Append (c);  	if (c == ';') {  		string key = entity.ToString ();  		if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  			key = Entities [key.Substring (1' key.Length - 2)].ToString ();  		output.Append (key);  		state = 0;  		entity.Length = 0;  	}  } else if (state == 3) {  	if (c == ';') {  		if (number > 65535) {  			output.Append ("&#");  			output.Append (number.ToString (CultureInfo.InvariantCulture));  			output.Append (";");  		} else {  			output.Append ((char)number);  		}  		state = 0;  		entity.Length = 0;  		have_trailing_digits = false;  	} else if (Char.IsDigit (c)) {  		number = number * 10 + (c - '0');  		have_trailing_digits = true;  	} else {  		state = 2;  		if (have_trailing_digits) {  			entity.Append (number.ToString (CultureInfo.InvariantCulture));  			have_trailing_digits = false;  		}  		entity.Append (c);  	}  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,HtmlDecode,The following statement contains a magic number: if (state == 1) {  	if (c == ';') {  		state = 0;  		output.Append (entity);  		output.Append (c);  		entity.Length = 0;  	} else {  		number = 0;  		if (c != '#') {  			state = 2;  		} else {  			state = 3;  		}  		entity.Append (c);  	}  } else if (state == 2) {  	entity.Append (c);  	if (c == ';') {  		string key = entity.ToString ();  		if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  			key = Entities [key.Substring (1' key.Length - 2)].ToString ();  		output.Append (key);  		state = 0;  		entity.Length = 0;  	}  } else if (state == 3) {  	if (c == ';') {  		if (number > 65535) {  			output.Append ("&#");  			output.Append (number.ToString (CultureInfo.InvariantCulture));  			output.Append (";");  		} else {  			output.Append ((char)number);  		}  		state = 0;  		entity.Length = 0;  		have_trailing_digits = false;  	} else if (Char.IsDigit (c)) {  		number = number * 10 + (c - '0');  		have_trailing_digits = true;  	} else {  		state = 2;  		if (have_trailing_digits) {  			entity.Append (number.ToString (CultureInfo.InvariantCulture));  			have_trailing_digits = false;  		}  		entity.Append (c);  	}  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,HtmlDecode,The following statement contains a magic number: if (state == 1) {  	if (c == ';') {  		state = 0;  		output.Append (entity);  		output.Append (c);  		entity.Length = 0;  	} else {  		number = 0;  		if (c != '#') {  			state = 2;  		} else {  			state = 3;  		}  		entity.Append (c);  	}  } else if (state == 2) {  	entity.Append (c);  	if (c == ';') {  		string key = entity.ToString ();  		if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  			key = Entities [key.Substring (1' key.Length - 2)].ToString ();  		output.Append (key);  		state = 0;  		entity.Length = 0;  	}  } else if (state == 3) {  	if (c == ';') {  		if (number > 65535) {  			output.Append ("&#");  			output.Append (number.ToString (CultureInfo.InvariantCulture));  			output.Append (";");  		} else {  			output.Append ((char)number);  		}  		state = 0;  		entity.Length = 0;  		have_trailing_digits = false;  	} else if (Char.IsDigit (c)) {  		number = number * 10 + (c - '0');  		have_trailing_digits = true;  	} else {  		state = 2;  		if (have_trailing_digits) {  			entity.Append (number.ToString (CultureInfo.InvariantCulture));  			have_trailing_digits = false;  		}  		entity.Append (c);  	}  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,HtmlDecode,The following statement contains a magic number: if (state == 1) {  	if (c == ';') {  		state = 0;  		output.Append (entity);  		output.Append (c);  		entity.Length = 0;  	} else {  		number = 0;  		if (c != '#') {  			state = 2;  		} else {  			state = 3;  		}  		entity.Append (c);  	}  } else if (state == 2) {  	entity.Append (c);  	if (c == ';') {  		string key = entity.ToString ();  		if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  			key = Entities [key.Substring (1' key.Length - 2)].ToString ();  		output.Append (key);  		state = 0;  		entity.Length = 0;  	}  } else if (state == 3) {  	if (c == ';') {  		if (number > 65535) {  			output.Append ("&#");  			output.Append (number.ToString (CultureInfo.InvariantCulture));  			output.Append (";");  		} else {  			output.Append ((char)number);  		}  		state = 0;  		entity.Length = 0;  		have_trailing_digits = false;  	} else if (Char.IsDigit (c)) {  		number = number * 10 + (c - '0');  		have_trailing_digits = true;  	} else {  		state = 2;  		if (have_trailing_digits) {  			entity.Append (number.ToString (CultureInfo.InvariantCulture));  			have_trailing_digits = false;  		}  		entity.Append (c);  	}  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,HtmlDecode,The following statement contains a magic number: if (state == 1) {  	if (c == ';') {  		state = 0;  		output.Append (entity);  		output.Append (c);  		entity.Length = 0;  	} else {  		number = 0;  		if (c != '#') {  			state = 2;  		} else {  			state = 3;  		}  		entity.Append (c);  	}  } else if (state == 2) {  	entity.Append (c);  	if (c == ';') {  		string key = entity.ToString ();  		if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  			key = Entities [key.Substring (1' key.Length - 2)].ToString ();  		output.Append (key);  		state = 0;  		entity.Length = 0;  	}  } else if (state == 3) {  	if (c == ';') {  		if (number > 65535) {  			output.Append ("&#");  			output.Append (number.ToString (CultureInfo.InvariantCulture));  			output.Append (";");  		} else {  			output.Append ((char)number);  		}  		state = 0;  		entity.Length = 0;  		have_trailing_digits = false;  	} else if (Char.IsDigit (c)) {  		number = number * 10 + (c - '0');  		have_trailing_digits = true;  	} else {  		state = 2;  		if (have_trailing_digits) {  			entity.Append (number.ToString (CultureInfo.InvariantCulture));  			have_trailing_digits = false;  		}  		entity.Append (c);  	}  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,HtmlDecode,The following statement contains a magic number: if (state == 1) {  	if (c == ';') {  		state = 0;  		output.Append (entity);  		output.Append (c);  		entity.Length = 0;  	} else {  		number = 0;  		if (c != '#') {  			state = 2;  		} else {  			state = 3;  		}  		entity.Append (c);  	}  } else if (state == 2) {  	entity.Append (c);  	if (c == ';') {  		string key = entity.ToString ();  		if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  			key = Entities [key.Substring (1' key.Length - 2)].ToString ();  		output.Append (key);  		state = 0;  		entity.Length = 0;  	}  } else if (state == 3) {  	if (c == ';') {  		if (number > 65535) {  			output.Append ("&#");  			output.Append (number.ToString (CultureInfo.InvariantCulture));  			output.Append (";");  		} else {  			output.Append ((char)number);  		}  		state = 0;  		entity.Length = 0;  		have_trailing_digits = false;  	} else if (Char.IsDigit (c)) {  		number = number * 10 + (c - '0');  		have_trailing_digits = true;  	} else {  		state = 2;  		if (have_trailing_digits) {  			entity.Append (number.ToString (CultureInfo.InvariantCulture));  			have_trailing_digits = false;  		}  		entity.Append (c);  	}  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,HtmlDecode,The following statement contains a magic number: if (state == 1) {  	if (c == ';') {  		state = 0;  		output.Append (entity);  		output.Append (c);  		entity.Length = 0;  	} else {  		number = 0;  		if (c != '#') {  			state = 2;  		} else {  			state = 3;  		}  		entity.Append (c);  	}  } else if (state == 2) {  	entity.Append (c);  	if (c == ';') {  		string key = entity.ToString ();  		if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  			key = Entities [key.Substring (1' key.Length - 2)].ToString ();  		output.Append (key);  		state = 0;  		entity.Length = 0;  	}  } else if (state == 3) {  	if (c == ';') {  		if (number > 65535) {  			output.Append ("&#");  			output.Append (number.ToString (CultureInfo.InvariantCulture));  			output.Append (";");  		} else {  			output.Append ((char)number);  		}  		state = 0;  		entity.Length = 0;  		have_trailing_digits = false;  	} else if (Char.IsDigit (c)) {  		number = number * 10 + (c - '0');  		have_trailing_digits = true;  	} else {  		state = 2;  		if (have_trailing_digits) {  			entity.Append (number.ToString (CultureInfo.InvariantCulture));  			have_trailing_digits = false;  		}  		entity.Append (c);  	}  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,HtmlDecode,The following statement contains a magic number: if (state == 1) {  	if (c == ';') {  		state = 0;  		output.Append (entity);  		output.Append (c);  		entity.Length = 0;  	} else {  		number = 0;  		if (c != '#') {  			state = 2;  		} else {  			state = 3;  		}  		entity.Append (c);  	}  } else if (state == 2) {  	entity.Append (c);  	if (c == ';') {  		string key = entity.ToString ();  		if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  			key = Entities [key.Substring (1' key.Length - 2)].ToString ();  		output.Append (key);  		state = 0;  		entity.Length = 0;  	}  } else if (state == 3) {  	if (c == ';') {  		if (number > 65535) {  			output.Append ("&#");  			output.Append (number.ToString (CultureInfo.InvariantCulture));  			output.Append (";");  		} else {  			output.Append ((char)number);  		}  		state = 0;  		entity.Length = 0;  		have_trailing_digits = false;  	} else if (Char.IsDigit (c)) {  		number = number * 10 + (c - '0');  		have_trailing_digits = true;  	} else {  		state = 2;  		if (have_trailing_digits) {  			entity.Append (number.ToString (CultureInfo.InvariantCulture));  			have_trailing_digits = false;  		}  		entity.Append (c);  	}  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,HtmlDecode,The following statement contains a magic number: if (c == ';') {  	state = 0;  	output.Append (entity);  	output.Append (c);  	entity.Length = 0;  } else {  	number = 0;  	if (c != '#') {  		state = 2;  	} else {  		state = 3;  	}  	entity.Append (c);  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,HtmlDecode,The following statement contains a magic number: if (c == ';') {  	state = 0;  	output.Append (entity);  	output.Append (c);  	entity.Length = 0;  } else {  	number = 0;  	if (c != '#') {  		state = 2;  	} else {  		state = 3;  	}  	entity.Append (c);  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,HtmlDecode,The following statement contains a magic number: if (c != '#') {  	state = 2;  } else {  	state = 3;  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,HtmlDecode,The following statement contains a magic number: if (c != '#') {  	state = 2;  } else {  	state = 3;  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,HtmlDecode,The following statement contains a magic number: state = 2;  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,HtmlDecode,The following statement contains a magic number: state = 3;  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,HtmlDecode,The following statement contains a magic number: if (state == 2) {  	entity.Append (c);  	if (c == ';') {  		string key = entity.ToString ();  		if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  			key = Entities [key.Substring (1' key.Length - 2)].ToString ();  		output.Append (key);  		state = 0;  		entity.Length = 0;  	}  } else if (state == 3) {  	if (c == ';') {  		if (number > 65535) {  			output.Append ("&#");  			output.Append (number.ToString (CultureInfo.InvariantCulture));  			output.Append (";");  		} else {  			output.Append ((char)number);  		}  		state = 0;  		entity.Length = 0;  		have_trailing_digits = false;  	} else if (Char.IsDigit (c)) {  		number = number * 10 + (c - '0');  		have_trailing_digits = true;  	} else {  		state = 2;  		if (have_trailing_digits) {  			entity.Append (number.ToString (CultureInfo.InvariantCulture));  			have_trailing_digits = false;  		}  		entity.Append (c);  	}  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,HtmlDecode,The following statement contains a magic number: if (state == 2) {  	entity.Append (c);  	if (c == ';') {  		string key = entity.ToString ();  		if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  			key = Entities [key.Substring (1' key.Length - 2)].ToString ();  		output.Append (key);  		state = 0;  		entity.Length = 0;  	}  } else if (state == 3) {  	if (c == ';') {  		if (number > 65535) {  			output.Append ("&#");  			output.Append (number.ToString (CultureInfo.InvariantCulture));  			output.Append (";");  		} else {  			output.Append ((char)number);  		}  		state = 0;  		entity.Length = 0;  		have_trailing_digits = false;  	} else if (Char.IsDigit (c)) {  		number = number * 10 + (c - '0');  		have_trailing_digits = true;  	} else {  		state = 2;  		if (have_trailing_digits) {  			entity.Append (number.ToString (CultureInfo.InvariantCulture));  			have_trailing_digits = false;  		}  		entity.Append (c);  	}  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,HtmlDecode,The following statement contains a magic number: if (state == 2) {  	entity.Append (c);  	if (c == ';') {  		string key = entity.ToString ();  		if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  			key = Entities [key.Substring (1' key.Length - 2)].ToString ();  		output.Append (key);  		state = 0;  		entity.Length = 0;  	}  } else if (state == 3) {  	if (c == ';') {  		if (number > 65535) {  			output.Append ("&#");  			output.Append (number.ToString (CultureInfo.InvariantCulture));  			output.Append (";");  		} else {  			output.Append ((char)number);  		}  		state = 0;  		entity.Length = 0;  		have_trailing_digits = false;  	} else if (Char.IsDigit (c)) {  		number = number * 10 + (c - '0');  		have_trailing_digits = true;  	} else {  		state = 2;  		if (have_trailing_digits) {  			entity.Append (number.ToString (CultureInfo.InvariantCulture));  			have_trailing_digits = false;  		}  		entity.Append (c);  	}  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,HtmlDecode,The following statement contains a magic number: if (state == 2) {  	entity.Append (c);  	if (c == ';') {  		string key = entity.ToString ();  		if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  			key = Entities [key.Substring (1' key.Length - 2)].ToString ();  		output.Append (key);  		state = 0;  		entity.Length = 0;  	}  } else if (state == 3) {  	if (c == ';') {  		if (number > 65535) {  			output.Append ("&#");  			output.Append (number.ToString (CultureInfo.InvariantCulture));  			output.Append (";");  		} else {  			output.Append ((char)number);  		}  		state = 0;  		entity.Length = 0;  		have_trailing_digits = false;  	} else if (Char.IsDigit (c)) {  		number = number * 10 + (c - '0');  		have_trailing_digits = true;  	} else {  		state = 2;  		if (have_trailing_digits) {  			entity.Append (number.ToString (CultureInfo.InvariantCulture));  			have_trailing_digits = false;  		}  		entity.Append (c);  	}  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,HtmlDecode,The following statement contains a magic number: if (state == 2) {  	entity.Append (c);  	if (c == ';') {  		string key = entity.ToString ();  		if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  			key = Entities [key.Substring (1' key.Length - 2)].ToString ();  		output.Append (key);  		state = 0;  		entity.Length = 0;  	}  } else if (state == 3) {  	if (c == ';') {  		if (number > 65535) {  			output.Append ("&#");  			output.Append (number.ToString (CultureInfo.InvariantCulture));  			output.Append (";");  		} else {  			output.Append ((char)number);  		}  		state = 0;  		entity.Length = 0;  		have_trailing_digits = false;  	} else if (Char.IsDigit (c)) {  		number = number * 10 + (c - '0');  		have_trailing_digits = true;  	} else {  		state = 2;  		if (have_trailing_digits) {  			entity.Append (number.ToString (CultureInfo.InvariantCulture));  			have_trailing_digits = false;  		}  		entity.Append (c);  	}  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,HtmlDecode,The following statement contains a magic number: if (state == 2) {  	entity.Append (c);  	if (c == ';') {  		string key = entity.ToString ();  		if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  			key = Entities [key.Substring (1' key.Length - 2)].ToString ();  		output.Append (key);  		state = 0;  		entity.Length = 0;  	}  } else if (state == 3) {  	if (c == ';') {  		if (number > 65535) {  			output.Append ("&#");  			output.Append (number.ToString (CultureInfo.InvariantCulture));  			output.Append (";");  		} else {  			output.Append ((char)number);  		}  		state = 0;  		entity.Length = 0;  		have_trailing_digits = false;  	} else if (Char.IsDigit (c)) {  		number = number * 10 + (c - '0');  		have_trailing_digits = true;  	} else {  		state = 2;  		if (have_trailing_digits) {  			entity.Append (number.ToString (CultureInfo.InvariantCulture));  			have_trailing_digits = false;  		}  		entity.Append (c);  	}  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,HtmlDecode,The following statement contains a magic number: if (state == 2) {  	entity.Append (c);  	if (c == ';') {  		string key = entity.ToString ();  		if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  			key = Entities [key.Substring (1' key.Length - 2)].ToString ();  		output.Append (key);  		state = 0;  		entity.Length = 0;  	}  } else if (state == 3) {  	if (c == ';') {  		if (number > 65535) {  			output.Append ("&#");  			output.Append (number.ToString (CultureInfo.InvariantCulture));  			output.Append (";");  		} else {  			output.Append ((char)number);  		}  		state = 0;  		entity.Length = 0;  		have_trailing_digits = false;  	} else if (Char.IsDigit (c)) {  		number = number * 10 + (c - '0');  		have_trailing_digits = true;  	} else {  		state = 2;  		if (have_trailing_digits) {  			entity.Append (number.ToString (CultureInfo.InvariantCulture));  			have_trailing_digits = false;  		}  		entity.Append (c);  	}  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,HtmlDecode,The following statement contains a magic number: if (c == ';') {  	string key = entity.ToString ();  	if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  		key = Entities [key.Substring (1' key.Length - 2)].ToString ();  	output.Append (key);  	state = 0;  	entity.Length = 0;  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,HtmlDecode,The following statement contains a magic number: if (c == ';') {  	string key = entity.ToString ();  	if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  		key = Entities [key.Substring (1' key.Length - 2)].ToString ();  	output.Append (key);  	state = 0;  	entity.Length = 0;  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,HtmlDecode,The following statement contains a magic number: if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  	key = Entities [key.Substring (1' key.Length - 2)].ToString ();  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,HtmlDecode,The following statement contains a magic number: if (key.Length > 1 && Entities.ContainsKey (key.Substring (1' key.Length - 2)))  	key = Entities [key.Substring (1' key.Length - 2)].ToString ();  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,HtmlDecode,The following statement contains a magic number: key = Entities [key.Substring (1' key.Length - 2)].ToString ();  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,HtmlDecode,The following statement contains a magic number: if (state == 3) {  	if (c == ';') {  		if (number > 65535) {  			output.Append ("&#");  			output.Append (number.ToString (CultureInfo.InvariantCulture));  			output.Append (";");  		} else {  			output.Append ((char)number);  		}  		state = 0;  		entity.Length = 0;  		have_trailing_digits = false;  	} else if (Char.IsDigit (c)) {  		number = number * 10 + (c - '0');  		have_trailing_digits = true;  	} else {  		state = 2;  		if (have_trailing_digits) {  			entity.Append (number.ToString (CultureInfo.InvariantCulture));  			have_trailing_digits = false;  		}  		entity.Append (c);  	}  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,HtmlDecode,The following statement contains a magic number: if (state == 3) {  	if (c == ';') {  		if (number > 65535) {  			output.Append ("&#");  			output.Append (number.ToString (CultureInfo.InvariantCulture));  			output.Append (";");  		} else {  			output.Append ((char)number);  		}  		state = 0;  		entity.Length = 0;  		have_trailing_digits = false;  	} else if (Char.IsDigit (c)) {  		number = number * 10 + (c - '0');  		have_trailing_digits = true;  	} else {  		state = 2;  		if (have_trailing_digits) {  			entity.Append (number.ToString (CultureInfo.InvariantCulture));  			have_trailing_digits = false;  		}  		entity.Append (c);  	}  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,HtmlDecode,The following statement contains a magic number: if (state == 3) {  	if (c == ';') {  		if (number > 65535) {  			output.Append ("&#");  			output.Append (number.ToString (CultureInfo.InvariantCulture));  			output.Append (";");  		} else {  			output.Append ((char)number);  		}  		state = 0;  		entity.Length = 0;  		have_trailing_digits = false;  	} else if (Char.IsDigit (c)) {  		number = number * 10 + (c - '0');  		have_trailing_digits = true;  	} else {  		state = 2;  		if (have_trailing_digits) {  			entity.Append (number.ToString (CultureInfo.InvariantCulture));  			have_trailing_digits = false;  		}  		entity.Append (c);  	}  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,HtmlDecode,The following statement contains a magic number: if (state == 3) {  	if (c == ';') {  		if (number > 65535) {  			output.Append ("&#");  			output.Append (number.ToString (CultureInfo.InvariantCulture));  			output.Append (";");  		} else {  			output.Append ((char)number);  		}  		state = 0;  		entity.Length = 0;  		have_trailing_digits = false;  	} else if (Char.IsDigit (c)) {  		number = number * 10 + (c - '0');  		have_trailing_digits = true;  	} else {  		state = 2;  		if (have_trailing_digits) {  			entity.Append (number.ToString (CultureInfo.InvariantCulture));  			have_trailing_digits = false;  		}  		entity.Append (c);  	}  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,HtmlDecode,The following statement contains a magic number: if (c == ';') {  	if (number > 65535) {  		output.Append ("&#");  		output.Append (number.ToString (CultureInfo.InvariantCulture));  		output.Append (";");  	} else {  		output.Append ((char)number);  	}  	state = 0;  	entity.Length = 0;  	have_trailing_digits = false;  } else if (Char.IsDigit (c)) {  	number = number * 10 + (c - '0');  	have_trailing_digits = true;  } else {  	state = 2;  	if (have_trailing_digits) {  		entity.Append (number.ToString (CultureInfo.InvariantCulture));  		have_trailing_digits = false;  	}  	entity.Append (c);  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,HtmlDecode,The following statement contains a magic number: if (c == ';') {  	if (number > 65535) {  		output.Append ("&#");  		output.Append (number.ToString (CultureInfo.InvariantCulture));  		output.Append (";");  	} else {  		output.Append ((char)number);  	}  	state = 0;  	entity.Length = 0;  	have_trailing_digits = false;  } else if (Char.IsDigit (c)) {  	number = number * 10 + (c - '0');  	have_trailing_digits = true;  } else {  	state = 2;  	if (have_trailing_digits) {  		entity.Append (number.ToString (CultureInfo.InvariantCulture));  		have_trailing_digits = false;  	}  	entity.Append (c);  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,HtmlDecode,The following statement contains a magic number: if (c == ';') {  	if (number > 65535) {  		output.Append ("&#");  		output.Append (number.ToString (CultureInfo.InvariantCulture));  		output.Append (";");  	} else {  		output.Append ((char)number);  	}  	state = 0;  	entity.Length = 0;  	have_trailing_digits = false;  } else if (Char.IsDigit (c)) {  	number = number * 10 + (c - '0');  	have_trailing_digits = true;  } else {  	state = 2;  	if (have_trailing_digits) {  		entity.Append (number.ToString (CultureInfo.InvariantCulture));  		have_trailing_digits = false;  	}  	entity.Append (c);  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,HtmlDecode,The following statement contains a magic number: if (number > 65535) {  	output.Append ("&#");  	output.Append (number.ToString (CultureInfo.InvariantCulture));  	output.Append (";");  } else {  	output.Append ((char)number);  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,HtmlDecode,The following statement contains a magic number: if (Char.IsDigit (c)) {  	number = number * 10 + (c - '0');  	have_trailing_digits = true;  } else {  	state = 2;  	if (have_trailing_digits) {  		entity.Append (number.ToString (CultureInfo.InvariantCulture));  		have_trailing_digits = false;  	}  	entity.Append (c);  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,HtmlDecode,The following statement contains a magic number: if (Char.IsDigit (c)) {  	number = number * 10 + (c - '0');  	have_trailing_digits = true;  } else {  	state = 2;  	if (have_trailing_digits) {  		entity.Append (number.ToString (CultureInfo.InvariantCulture));  		have_trailing_digits = false;  	}  	entity.Append (c);  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,HtmlDecode,The following statement contains a magic number: number = number * 10 + (c - '0');  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,HtmlDecode,The following statement contains a magic number: state = 2;  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,HtmlEncode,The following statement contains a magic number: foreach (char c in s)  	switch (c) {  	case '&':  		output.Append ("&amp;");  		break;  	case '>':  		output.Append ("&gt;");  		break;  	case '<':  		output.Append ("&lt;");  		break;  	case '"':  		output.Append ("&quot;");  		break;  	default:  		// MS starts encoding with &# from 160 and stops at 255.  		// We don't do that. One reason is the 65308/65310 unicode  		// characters that look like '<' and '>'.  		if (c > 159) {  			output.Append ("&#");  			output.Append (((int)c).ToString (CultureInfo.InvariantCulture));  			output.Append (";");  		} else {  			output.Append (c);  		}  		break;  	}  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,HtmlEncode,The following statement contains a magic number: switch (c) {  case '&':  	output.Append ("&amp;");  	break;  case '>':  	output.Append ("&gt;");  	break;  case '<':  	output.Append ("&lt;");  	break;  case '"':  	output.Append ("&quot;");  	break;  default:  	// MS starts encoding with &# from 160 and stops at 255.  	// We don't do that. One reason is the 65308/65310 unicode  	// characters that look like '<' and '>'.  	if (c > 159) {  		output.Append ("&#");  		output.Append (((int)c).ToString (CultureInfo.InvariantCulture));  		output.Append (";");  	} else {  		output.Append (c);  	}  	break;  }  
Magic Number,KonfDB.Infrastructure.Common,EncodingUtility,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Common\EncodingUtility.cs,HtmlEncode,The following statement contains a magic number: if (c > 159) {  	output.Append ("&#");  	output.Append (((int)c).ToString (CultureInfo.InvariantCulture));  	output.Append (";");  } else {  	output.Append (c);  }  
Magic Number,KonfDB.Engine.Shell,ServiceHost,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Shell\ServiceHost.cs,ShowOnConsoleIfRequested,The following statement contains a magic number: while (!shutdownEvent.WaitOne (0)) {  	Thread.Sleep (1000);  }  
Magic Number,KonfDB.Engine.Shell,ServiceHost,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Shell\ServiceHost.cs,ShowOnConsoleIfRequested,The following statement contains a magic number: Thread.Sleep (1000);  
Magic Number,KonfDB.Infrastructure.Utilities,Converter,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Utilities\Converter.cs,StringToByteArray,The following statement contains a magic number: return Enumerable.Range (0' hex.Length).Where (x => x % 2 == 0).Select (x => Convert.ToByte (hex.Substring (x' 2)' 16)).ToArray ();  
Magic Number,KonfDB.Infrastructure.Utilities,Converter,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Utilities\Converter.cs,StringToByteArray,The following statement contains a magic number: return Enumerable.Range (0' hex.Length).Where (x => x % 2 == 0).Select (x => Convert.ToByte (hex.Substring (x' 2)' 16)).ToArray ();  
Magic Number,KonfDB.Infrastructure.Utilities,Converter,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\Utilities\Converter.cs,StringToByteArray,The following statement contains a magic number: return Enumerable.Range (0' hex.Length).Where (x => x % 2 == 0).Select (x => Convert.ToByte (hex.Substring (x' 2)' 16)).ToArray ();  
Magic Number,KonfDB.Infrastructure.WCF,WcfService,D:\newReposJune17\punitganshani_konfdb\Server\KonfDB.Infrastructure\WCF\WcfService.cs,ConfigureEndPoints,The following statement contains a magic number: behavior.MaxItemsInObjectGraph = 5242880;  
