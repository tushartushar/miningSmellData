Implementation smell,Namespace,Class,File,Method,Description
Complex Method,GoPro.Hero.Browser.FileSystem,AmbarellaBrowser,C:\repos\r1pper_GoPro.Hero\src\GoPro.Hero\Browser\FileSystem\AmbarellaBrowser.cs,Parse,Cyclomatic complexity of the method is 12
Long Parameter List,GoPro.Hero,CameraCapabilities,C:\repos\r1pper_GoPro.Hero\src\GoPro.Hero\CameraCapabilities.cs,SetCapability,The method has 5 parameters. Parameters: bytes' capabilityLevel' cameraCapabilities' property' capability
Long Parameter List,GoPro.Hero.Browser.FileSystem,Node,C:\repos\r1pper_GoPro.Hero\src\GoPro.Hero\Browser\FileSystem\Node.cs,Node,The method has 5 parameters. Parameters: camera' address' type' size' browser
Long Parameter List,GoPro.Hero.Commands,CommandRequest<TO>,C:\repos\r1pper_GoPro.Hero\src\GoPro.Hero\Commands\CommandRequest.cs,Create,The method has 5 parameters. Parameters: owner' address' command' passPhrase' parameter
Long Parameter List,GoPro.Hero.Commands,CommandRequest<TO>,C:\repos\r1pper_GoPro.Hero\src\GoPro.Hero\Commands\CommandRequest.cs,Create,The method has 5 parameters. Parameters: owner' address' command' passPhrase' parameter
Long Statement,GoPro.Hero,Camera,C:\repos\r1pper_GoPro.Hero\src\GoPro.Hero\Camera.cs,PrepareCommand,The length of the statement  "            return CommandRequest<ICamera>.Create<T>(this' string.Format("{0}:{1}"' Bacpac.Address' port)' passPhrase: Bacpac.Password); " is 124.
Long Statement,GoPro.Hero.Browser.Media,AmbarellaMediaBrowser,C:\repos\r1pper_GoPro.Hero\src\GoPro.Hero\Browser\Media\AmbarellaMediaBrowser.cs,Convert,The length of the statement  "            var timeLapses = timeLapsedGroup != null ? timeLapsedGroup.GroupBy(n => n.Name.Substring(0' 4)).Select(g => TimeLapse(g)).ToArray() : new TimeLapsedImage[0]; " is 157.
Long Statement,GoPro.Hero.Browser.Media,AmbarellaMediaBrowser,C:\repos\r1pper_GoPro.Hero\src\GoPro.Hero\Browser\Media\AmbarellaMediaBrowser.cs,Video,The length of the statement  "            var lowRes = loweResVideo != null ? loweResVideo.Where(n => n.NameWithoutExtension() == node.NameWithoutExtension()).FirstOrDefault() : null; " is 141.
Magic Number,GoPro.Hero,Bacpac,C:\repos\r1pper_GoPro.Hero\src\GoPro.Hero\Bacpac.cs,UpdatePasswordAsync,The following statement contains a magic number: Password = Encoding.UTF8.GetString(response.RawResponse' 2' length);
Magic Number,GoPro.Hero,BacpacInformation,C:\repos\r1pper_GoPro.Hero\src\GoPro.Hero\BacpacInformation.cs,Update,The following statement contains a magic number: using (var binReader = new BinaryReader(stream))              {                  binReader.ReadByte();                    Version = binReader.ReadByte();                  Model = binReader.ReadByte();                  Id = Encoding.UTF8.GetString(binReader.ReadBytes(2)' 0' 2);                  BootloaderVersion = new Version(                      binReader.ReadByte()'                      binReader.ReadByte()'                      binReader.ReadByte()'                      binReader.ReadByte()                      );                  FirmwareVersion = new Version(                      binReader.ReadByte()'                      binReader.ReadByte()'                      binReader.ReadByte()'                      default(byte)                      );                    var macBuilder = new StringBuilder();                  macBuilder.Append(Convert.ToString(binReader.ReadByte()' 16));                  for (var i = 0; i < 5; i++)                      macBuilder.Append("-").Append(Convert.ToString(binReader.ReadByte()' 16));                  MacAddress = macBuilder.ToString();                    var ssidLength = binReader.ReadByte();                  Ssid = Encoding.UTF8.GetString(binReader.ReadBytes(ssidLength)' 0' ssidLength);              }
Magic Number,GoPro.Hero,BacpacInformation,C:\repos\r1pper_GoPro.Hero\src\GoPro.Hero\BacpacInformation.cs,Update,The following statement contains a magic number: using (var binReader = new BinaryReader(stream))              {                  binReader.ReadByte();                    Version = binReader.ReadByte();                  Model = binReader.ReadByte();                  Id = Encoding.UTF8.GetString(binReader.ReadBytes(2)' 0' 2);                  BootloaderVersion = new Version(                      binReader.ReadByte()'                      binReader.ReadByte()'                      binReader.ReadByte()'                      binReader.ReadByte()                      );                  FirmwareVersion = new Version(                      binReader.ReadByte()'                      binReader.ReadByte()'                      binReader.ReadByte()'                      default(byte)                      );                    var macBuilder = new StringBuilder();                  macBuilder.Append(Convert.ToString(binReader.ReadByte()' 16));                  for (var i = 0; i < 5; i++)                      macBuilder.Append("-").Append(Convert.ToString(binReader.ReadByte()' 16));                  MacAddress = macBuilder.ToString();                    var ssidLength = binReader.ReadByte();                  Ssid = Encoding.UTF8.GetString(binReader.ReadBytes(ssidLength)' 0' ssidLength);              }
Magic Number,GoPro.Hero,BacpacInformation,C:\repos\r1pper_GoPro.Hero\src\GoPro.Hero\BacpacInformation.cs,Update,The following statement contains a magic number: using (var binReader = new BinaryReader(stream))              {                  binReader.ReadByte();                    Version = binReader.ReadByte();                  Model = binReader.ReadByte();                  Id = Encoding.UTF8.GetString(binReader.ReadBytes(2)' 0' 2);                  BootloaderVersion = new Version(                      binReader.ReadByte()'                      binReader.ReadByte()'                      binReader.ReadByte()'                      binReader.ReadByte()                      );                  FirmwareVersion = new Version(                      binReader.ReadByte()'                      binReader.ReadByte()'                      binReader.ReadByte()'                      default(byte)                      );                    var macBuilder = new StringBuilder();                  macBuilder.Append(Convert.ToString(binReader.ReadByte()' 16));                  for (var i = 0; i < 5; i++)                      macBuilder.Append("-").Append(Convert.ToString(binReader.ReadByte()' 16));                  MacAddress = macBuilder.ToString();                    var ssidLength = binReader.ReadByte();                  Ssid = Encoding.UTF8.GetString(binReader.ReadBytes(ssidLength)' 0' ssidLength);              }
Magic Number,GoPro.Hero,BacpacInformation,C:\repos\r1pper_GoPro.Hero\src\GoPro.Hero\BacpacInformation.cs,Update,The following statement contains a magic number: using (var binReader = new BinaryReader(stream))              {                  binReader.ReadByte();                    Version = binReader.ReadByte();                  Model = binReader.ReadByte();                  Id = Encoding.UTF8.GetString(binReader.ReadBytes(2)' 0' 2);                  BootloaderVersion = new Version(                      binReader.ReadByte()'                      binReader.ReadByte()'                      binReader.ReadByte()'                      binReader.ReadByte()                      );                  FirmwareVersion = new Version(                      binReader.ReadByte()'                      binReader.ReadByte()'                      binReader.ReadByte()'                      default(byte)                      );                    var macBuilder = new StringBuilder();                  macBuilder.Append(Convert.ToString(binReader.ReadByte()' 16));                  for (var i = 0; i < 5; i++)                      macBuilder.Append("-").Append(Convert.ToString(binReader.ReadByte()' 16));                  MacAddress = macBuilder.ToString();                    var ssidLength = binReader.ReadByte();                  Ssid = Encoding.UTF8.GetString(binReader.ReadBytes(ssidLength)' 0' ssidLength);              }
Magic Number,GoPro.Hero,BacpacInformation,C:\repos\r1pper_GoPro.Hero\src\GoPro.Hero\BacpacInformation.cs,Update,The following statement contains a magic number: using (var binReader = new BinaryReader(stream))              {                  binReader.ReadByte();                    Version = binReader.ReadByte();                  Model = binReader.ReadByte();                  Id = Encoding.UTF8.GetString(binReader.ReadBytes(2)' 0' 2);                  BootloaderVersion = new Version(                      binReader.ReadByte()'                      binReader.ReadByte()'                      binReader.ReadByte()'                      binReader.ReadByte()                      );                  FirmwareVersion = new Version(                      binReader.ReadByte()'                      binReader.ReadByte()'                      binReader.ReadByte()'                      default(byte)                      );                    var macBuilder = new StringBuilder();                  macBuilder.Append(Convert.ToString(binReader.ReadByte()' 16));                  for (var i = 0; i < 5; i++)                      macBuilder.Append("-").Append(Convert.ToString(binReader.ReadByte()' 16));                  MacAddress = macBuilder.ToString();                    var ssidLength = binReader.ReadByte();                  Ssid = Encoding.UTF8.GetString(binReader.ReadBytes(ssidLength)' 0' ssidLength);              }
Magic Number,GoPro.Hero,Camera,C:\repos\r1pper_GoPro.Hero\src\GoPro.Hero\Camera.cs,GetNameAsync,The following statement contains a magic number: var name = Encoding.UTF8.GetString(raw' 2' length);
Magic Number,GoPro.Hero,Version,C:\repos\r1pper_GoPro.Hero\src\GoPro.Hero\Version.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  var hashCode = Major.GetHashCode();                  hashCode = (hashCode*397) ^ Minor.GetHashCode();                  hashCode = (hashCode*397) ^ Build.GetHashCode();                  hashCode = (hashCode*397) ^ Revision.GetHashCode();                  return hashCode;              }
Magic Number,GoPro.Hero,Version,C:\repos\r1pper_GoPro.Hero\src\GoPro.Hero\Version.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  var hashCode = Major.GetHashCode();                  hashCode = (hashCode*397) ^ Minor.GetHashCode();                  hashCode = (hashCode*397) ^ Build.GetHashCode();                  hashCode = (hashCode*397) ^ Revision.GetHashCode();                  return hashCode;              }
Magic Number,GoPro.Hero,Version,C:\repos\r1pper_GoPro.Hero\src\GoPro.Hero\Version.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  var hashCode = Major.GetHashCode();                  hashCode = (hashCode*397) ^ Minor.GetHashCode();                  hashCode = (hashCode*397) ^ Build.GetHashCode();                  hashCode = (hashCode*397) ^ Revision.GetHashCode();                  return hashCode;              }
Magic Number,GoPro.Hero.Browser.FileSystem,AmbarellaBrowser,C:\repos\r1pper_GoPro.Hero\src\GoPro.Hero\Browser\FileSystem\AmbarellaBrowser.cs,Parse,The following statement contains a magic number: if (content != null)                  foreach (var row in content.Elements())                  {                      var elements = row.Elements().ToArray();                        var xElement = elements[0].Element(XName.Get("img"' xmlns));                      if (xElement == null) continue;                      var xAttribute = xElement.Attribute("alt");                      if (xAttribute == null) continue;                      var type = xAttribute.Value;                      var element = elements[1].Element(XName.Get("a"' xmlns));                      if (element == null) continue;                      var attribute = element.Attribute("href");                      if (attribute == null) continue;                      var path = attribute.Value;                      var sizeElement = elements[2] as XElement;                      var size = sizeElement.Elements().InDocumentOrder().Select(e=>e.Value).Aggregate((c' n) => c + n);                        var uri = path.StartsWith(parent.Path.ToString()) ? new Uri(path) : new Uri(parent.Path' path);                        yield return                           new Node(Camera' uri' type == "[DIR]" ? NodeType.Folder : NodeType.File' size' this);                  }
Magic Number,GoPro.Hero.Browser.FileSystem,Node,C:\repos\r1pper_GoPro.Hero\src\GoPro.Hero\Browser\FileSystem\Node.cs,Node,The following statement contains a magic number: Name = string.IsNullOrEmpty(segments.Last()) ? segments[segments.Length - 2] : segments.Last();
Magic Number,GoPro.Hero.Browser.FileSystem,Node,C:\repos\r1pper_GoPro.Hero\src\GoPro.Hero\Browser\FileSystem\Node.cs,SizeAsBytes,The following statement contains a magic number: switch (type)              {                  case 'M':                      return (long)(value * 1024 * 1024);                  case 'K':                      return (long)(value * 1024);                  default:                      return -1;              }
Magic Number,GoPro.Hero.Browser.FileSystem,Node,C:\repos\r1pper_GoPro.Hero\src\GoPro.Hero\Browser\FileSystem\Node.cs,SizeAsBytes,The following statement contains a magic number: switch (type)              {                  case 'M':                      return (long)(value * 1024 * 1024);                  case 'K':                      return (long)(value * 1024);                  default:                      return -1;              }
Magic Number,GoPro.Hero.Browser.FileSystem,Node,C:\repos\r1pper_GoPro.Hero\src\GoPro.Hero\Browser\FileSystem\Node.cs,SizeAsBytes,The following statement contains a magic number: switch (type)              {                  case 'M':                      return (long)(value * 1024 * 1024);                  case 'K':                      return (long)(value * 1024);                  default:                      return -1;              }
Magic Number,GoPro.Hero.Browser.Media,AmbarellaMediaBrowser,C:\repos\r1pper_GoPro.Hero\src\GoPro.Hero\Browser\Media\AmbarellaMediaBrowser.cs,Convert,The following statement contains a magic number: var timeLapses = timeLapsedGroup != null ? timeLapsedGroup.GroupBy(n => n.Name.Substring(0' 4)).Select(g => TimeLapse(g)).ToArray() : new TimeLapsedImage[0];
Magic Number,GoPro.Hero.Browser.Media,AmbarellaMediaBrowser,C:\repos\r1pper_GoPro.Hero\src\GoPro.Hero\Browser\Media\AmbarellaMediaBrowser.cs,TimeLapse,The following statement contains a magic number: var timeLapse=new TimeLapsedImageParameters              {                  Name=nodes.First().Name'                  Start=int.Parse(nodes.First().Name.Substring(4' 4))'                  End=int.Parse(nodes.Last().Name.Substring(4' 4))'                  Group=int.Parse(nodes.First().Name.Substring(1'3))'                  Size=nodes.Sum(n => n.SizeAsBytes())              };
Magic Number,GoPro.Hero.Browser.Media,AmbarellaMediaBrowser,C:\repos\r1pper_GoPro.Hero\src\GoPro.Hero\Browser\Media\AmbarellaMediaBrowser.cs,TimeLapse,The following statement contains a magic number: var timeLapse=new TimeLapsedImageParameters              {                  Name=nodes.First().Name'                  Start=int.Parse(nodes.First().Name.Substring(4' 4))'                  End=int.Parse(nodes.Last().Name.Substring(4' 4))'                  Group=int.Parse(nodes.First().Name.Substring(1'3))'                  Size=nodes.Sum(n => n.SizeAsBytes())              };
Magic Number,GoPro.Hero.Browser.Media,AmbarellaMediaBrowser,C:\repos\r1pper_GoPro.Hero\src\GoPro.Hero\Browser\Media\AmbarellaMediaBrowser.cs,TimeLapse,The following statement contains a magic number: var timeLapse=new TimeLapsedImageParameters              {                  Name=nodes.First().Name'                  Start=int.Parse(nodes.First().Name.Substring(4' 4))'                  End=int.Parse(nodes.Last().Name.Substring(4' 4))'                  Group=int.Parse(nodes.First().Name.Substring(1'3))'                  Size=nodes.Sum(n => n.SizeAsBytes())              };
Magic Number,GoPro.Hero.Browser.Media,AmbarellaMediaBrowser,C:\repos\r1pper_GoPro.Hero\src\GoPro.Hero\Browser\Media\AmbarellaMediaBrowser.cs,TimeLapse,The following statement contains a magic number: var timeLapse=new TimeLapsedImageParameters              {                  Name=nodes.First().Name'                  Start=int.Parse(nodes.First().Name.Substring(4' 4))'                  End=int.Parse(nodes.Last().Name.Substring(4' 4))'                  Group=int.Parse(nodes.First().Name.Substring(1'3))'                  Size=nodes.Sum(n => n.SizeAsBytes())              };
Magic Number,GoPro.Hero.Browser.Media,AmbarellaMediaBrowser,C:\repos\r1pper_GoPro.Hero\src\GoPro.Hero\Browser\Media\AmbarellaMediaBrowser.cs,TimeLapse,The following statement contains a magic number: var timeLapse=new TimeLapsedImageParameters              {                  Name=nodes.First().Name'                  Start=int.Parse(nodes.First().Name.Substring(4' 4))'                  End=int.Parse(nodes.Last().Name.Substring(4' 4))'                  Group=int.Parse(nodes.First().Name.Substring(1'3))'                  Size=nodes.Sum(n => n.SizeAsBytes())              };
Magic Number,GoPro.Hero.Browser.Media,Media<TM>,C:\repos\r1pper_GoPro.Hero\src\GoPro.Hero\Browser\Media\Media.cs,GetHashCode,The following statement contains a magic number: return Name.GetHashCode() * 19;
Magic Number,GoPro.Hero.Utilities,Extensions,C:\repos\r1pper_GoPro.Hero\src\GoPro.Hero\Utilities\Extensions.cs,ToHeroDateTime,The following statement contains a magic number: var yearOld = dateTime.Year%100;
Magic Number,GoPro.Hero.Utilities,Extensions,C:\repos\r1pper_GoPro.Hero\src\GoPro.Hero\Utilities\Extensions.cs,ToDateTimeHeroString,The following statement contains a magic number: var year = Convert.ToInt32(split[0]' 16) + 2000;
Magic Number,GoPro.Hero.Utilities,Extensions,C:\repos\r1pper_GoPro.Hero\src\GoPro.Hero\Utilities\Extensions.cs,ToDateTimeHeroString,The following statement contains a magic number: var year = Convert.ToInt32(split[0]' 16) + 2000;
Magic Number,GoPro.Hero.Utilities,Extensions,C:\repos\r1pper_GoPro.Hero\src\GoPro.Hero\Utilities\Extensions.cs,ToDateTimeHeroString,The following statement contains a magic number: var month = Convert.ToInt32(split[1]' 16);
Magic Number,GoPro.Hero.Utilities,Extensions,C:\repos\r1pper_GoPro.Hero\src\GoPro.Hero\Utilities\Extensions.cs,ToDateTimeHeroString,The following statement contains a magic number: var day = Convert.ToInt32(split[2]' 16);
Magic Number,GoPro.Hero.Utilities,Extensions,C:\repos\r1pper_GoPro.Hero\src\GoPro.Hero\Utilities\Extensions.cs,ToDateTimeHeroString,The following statement contains a magic number: var day = Convert.ToInt32(split[2]' 16);
Magic Number,GoPro.Hero.Utilities,Extensions,C:\repos\r1pper_GoPro.Hero\src\GoPro.Hero\Utilities\Extensions.cs,ToDateTimeHeroString,The following statement contains a magic number: var hour = Convert.ToInt32(split[3]' 16);
Magic Number,GoPro.Hero.Utilities,Extensions,C:\repos\r1pper_GoPro.Hero\src\GoPro.Hero\Utilities\Extensions.cs,ToDateTimeHeroString,The following statement contains a magic number: var hour = Convert.ToInt32(split[3]' 16);
Magic Number,GoPro.Hero.Utilities,Extensions,C:\repos\r1pper_GoPro.Hero\src\GoPro.Hero\Utilities\Extensions.cs,ToDateTimeHeroString,The following statement contains a magic number: var minute = Convert.ToInt32(split[4]' 16);
Magic Number,GoPro.Hero.Utilities,Extensions,C:\repos\r1pper_GoPro.Hero\src\GoPro.Hero\Utilities\Extensions.cs,ToDateTimeHeroString,The following statement contains a magic number: var minute = Convert.ToInt32(split[4]' 16);
Magic Number,GoPro.Hero.Utilities,Extensions,C:\repos\r1pper_GoPro.Hero\src\GoPro.Hero\Utilities\Extensions.cs,ToDateTimeHeroString,The following statement contains a magic number: var second = Convert.ToInt32(split[5]' 16);
Magic Number,GoPro.Hero.Utilities,Extensions,C:\repos\r1pper_GoPro.Hero\src\GoPro.Hero\Utilities\Extensions.cs,ToDateTimeHeroString,The following statement contains a magic number: var second = Convert.ToInt32(split[5]' 16);
