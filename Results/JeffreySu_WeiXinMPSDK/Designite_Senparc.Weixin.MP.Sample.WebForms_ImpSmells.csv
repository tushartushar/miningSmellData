Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Senparc.Weixin.MP.Sample.WebForms,Work,C:\repos\JeffreySu_WeiXinMPSDK\src\Senparc.Weixin.MP.Sample.WebForms\Senparc.Weixin.MP.Sample.WebForms\Work.aspx.cs,Page_Load,The length of the statement  "                    messageHandler.RequestDocument.Save(Server.MapPath("~/App_Data/Work/" + DateTime.Now.Ticks + "_Request_" + messageHandler.RequestMessage.FromUserName + ".txt")); " is 161.
Long Statement,Senparc.Weixin.MP.Sample.WebForms,Work,C:\repos\JeffreySu_WeiXinMPSDK\src\Senparc.Weixin.MP.Sample.WebForms\Senparc.Weixin.MP.Sample.WebForms\Work.aspx.cs,Page_Load,The length of the statement  "                    messageHandler.ResponseDocument.Save(Server.MapPath("~/App_Data/Work/" + DateTime.Now.Ticks + "_Response_" + messageHandler.ResponseMessage.ToUserName + ".txt")); " is 162.
Long Statement,Senparc.Weixin.MP.Sample.WebForms,Work,C:\repos\JeffreySu_WeiXinMPSDK\src\Senparc.Weixin.MP.Sample.WebForms\Senparc.Weixin.MP.Sample.WebForms\Work.aspx.cs,Page_Load,The length of the statement  "                    messageHandler.FinalResponseDocument.Save(Server.MapPath("~/App_Data/Work/" + DateTime.Now.Ticks + "_FinalResponse_" + messageHandler.ResponseMessage.ToUserName + ".txt")); " is 172.
Magic Number,Senparc.Weixin.MP.Sample.WebForms,Work,C:\repos\JeffreySu_WeiXinMPSDK\src\Senparc.Weixin.MP.Sample.WebForms\Senparc.Weixin.MP.Sample.WebForms\Work.aspx.cs,Page_Load,The following statement contains a magic number: if (Request.HttpMethod == "GET")              {                  //get method - 仅在微信后台填写URL验证时触发                    var verifyUrl = Senparc.Weixin.Work.Signature.VerifyURL(Token' EncodingAESKey' CorpId' msg_signature' timestamp' nonce'                      echostr);                  if (verifyUrl != null)                  {                      WriteContent(verifyUrl); //返回解密后的随机字符串则表示验证通过                  }                  else                  {                      WriteContent("如果你在浏览器中看到这句话，说明此地址可以被作为微信公众账号后台的Url，请注意保持Token一致。");                  }                    Response.End();              }              else              {                  //post method - 当有用户想公众账号发送消息时触发                  var postModel = new PostModel()                  {                      Msg_Signature = Request.QueryString["msg_signature"]'                      Timestamp = Request.QueryString["timestamp"]'                      Nonce = Request.QueryString["nonce"]'                      //以下保密信息不会（不应该）在网络上传播，请注意                      Token = Token'                      EncodingAESKey = EncodingAESKey'                      CorpId = CorpId'                  };                    var maxRecordCount = 10;                  //自定义MessageHandler，对微信请求的详细判断操作都在这里面。                  var messageHandler = new WorkCustomMessageHandler(Request.InputStream' postModel' maxRecordCount);                    if (messageHandler.RequestMessage== null)                  {                      //验证不通过或接受信息有错误                  }                    try                  {                      //测试时可开启此记录，帮助跟踪数据，使用前请确保App_Data文件夹存在，且有读写权限。                      messageHandler.RequestDocument.Save(Server.MapPath("~/App_Data/Work/" + DateTime.Now.Ticks + "_Request_" + messageHandler.RequestMessage.FromUserName + ".txt"));                      //执行微信处理过程                      messageHandler.Execute();                      //测试时可开启，帮助跟踪数据                      messageHandler.ResponseDocument.Save(Server.MapPath("~/App_Data/Work/" + DateTime.Now.Ticks + "_Response_" + messageHandler.ResponseMessage.ToUserName + ".txt"));                      messageHandler.FinalResponseDocument.Save(Server.MapPath("~/App_Data/Work/" + DateTime.Now.Ticks + "_FinalResponse_" + messageHandler.ResponseMessage.ToUserName + ".txt"));                        //自动返回加密后结果                      WriteContent(messageHandler.FinalResponseDocument.ToString());//为了解决官方微信5.0软件换行bug暂时添加的方法，平时用下面一个方法即可                  }                  catch (Exception ex)                  {                      using (TextWriter tw = new StreamWriter(Server.MapPath("~/App_Data/Work_Error_" + DateTime.Now.Ticks + ".txt")))                      {                          tw.WriteLine("ExecptionMessage:" + ex.Message);                          tw.WriteLine(ex.Source);                          tw.WriteLine(ex.StackTrace);                          //tw.WriteLine("InnerExecptionMessage:" + ex.InnerException.Message);                            if (messageHandler.FinalResponseDocument != null)                          {                              tw.WriteLine(messageHandler.FinalResponseDocument.ToString());                          }                          tw.Flush();                          tw.Close();                      }                  }                  finally                  {                      Response.End();                  }              }
Magic Number,Senparc.Weixin.MP.Sample.WebForms,Work,C:\repos\JeffreySu_WeiXinMPSDK\src\Senparc.Weixin.MP.Sample.WebForms\Senparc.Weixin.MP.Sample.WebForms\Work.aspx.cs,MiniProcess,The following statement contains a magic number: var maxRecordCount = 10;
Magic Number,Senparc.Weixin.MP.Sample.WebForms,Weixin,C:\repos\JeffreySu_WeiXinMPSDK\src\Senparc.Weixin.MP.Sample.WebForms\Senparc.Weixin.MP.Sample.WebForms\Weixin.aspx.cs,Page_Load,The following statement contains a magic number: if (Request.HttpMethod == "GET")              {                  //get method - 仅在微信后台填写URL验证时触发                  if (CheckSignature.Check(signature' timestamp' nonce' Token))                  {                      WriteContent(echostr); //返回随机字符串则表示验证通过                  }                  else                  {                      WriteContent("failed:" + signature + "'" + CheckSignature.GetSignature(timestamp' nonce' Token) + "。" +                                  "如果你在浏览器中看到这句话，说明此地址可以被作为微信公众账号后台的Url，请注意保持Token一致。");                  }                  Response.End();              }              else              {                  //post method - 当有用户想公众账号发送消息时触发                  if (!CheckSignature.Check(signature' timestamp' nonce' Token))                  {                      WriteContent("参数错误！");                      return;                  }                    //post method - 当有用户想公众账号发送消息时触发                  var postModel = new PostModel()                  {                      Signature = Request.QueryString["signature"]'                      Msg_Signature = Request.QueryString["msg_signature"]'                      Timestamp = Request.QueryString["timestamp"]'                      Nonce = Request.QueryString["nonce"]'                      //以下保密信息不会（不应该）在网络上传播，请注意                      Token = Token'                      EncodingAESKey = "mNnY5GekpChwqhy2c4NBH90g3hND6GeI4gii2YCvKLY"'//根据自己后台的设置保持一致                      AppId = "wx669ef95216eef885"//根据自己后台的设置保持一致                  };                    //v4.2.2之后的版本，可以设置每个人上下文消息储存的最大数量，防止内存占用过多，如果该参数小于等于0，则不限制                  var maxRecordCount = 10;                    //自定义MessageHandler，对微信请求的详细判断操作都在这里面。                  var messageHandler = new CustomMessageHandler(Request.InputStream' postModel' maxRecordCount);                    try                  {                      //测试时可开启此记录，帮助跟踪数据，使用前请确保App_Data文件夹存在，且有读写权限。                      messageHandler.RequestDocument.Save(                          Server.MapPath("~/App_Data/" + DateTime.Now.Ticks + "_Request_" +                                         messageHandler.RequestMessage.FromUserName + ".txt"));                      //执行微信处理过程                      messageHandler.Execute();                      //测试时可开启，帮助跟踪数据                      messageHandler.ResponseDocument.Save(                          Server.MapPath("~/App_Data/" + DateTime.Now.Ticks + "_Response_" +                                         messageHandler.ResponseMessage.ToUserName + ".txt"));                      WriteContent(messageHandler.ResponseDocument.ToString());                      return;                  }                  catch (Exception ex)                  {                      using (TextWriter tw = new StreamWriter(Server.MapPath("~/App_Data/Error_" + DateTime.Now.Ticks + ".txt")))                      {                          tw.WriteLine(ex.Message);                          tw.WriteLine(ex.InnerException.Message);                          if (messageHandler.ResponseDocument != null)                          {                              tw.WriteLine(messageHandler.ResponseDocument.ToString());                          }                          tw.Flush();                          tw.Close();                      }                  }                  finally                  {                      Response.End();                  }              }
