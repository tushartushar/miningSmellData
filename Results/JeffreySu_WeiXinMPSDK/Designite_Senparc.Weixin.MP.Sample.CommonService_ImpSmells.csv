Implementation smell,Namespace,Class,File,Method,Description
Long Method,Senparc.Weixin.MP.Sample.CommonService.CustomMessageHandler,CustomMessageHandler,D:\research\architectureSmells\repos\JeffreySu_WeiXinMPSDK\Samples\net45-mvc\Senparc.Weixin.MP.Sample.CommonService\MessageHandlers\CustomMessageHandler\Async\CustomMessageHandlerAsync_Events.cs,OnTextRequestAsync,The method has 273 lines of code.
Long Method,Senparc.Weixin.MP.Sample.CommonService.CustomMessageHandler,CustomMessageHandler,D:\research\architectureSmells\repos\JeffreySu_WeiXinMPSDK\Samples\net45-mvc\Senparc.Weixin.MP.Sample.CommonService\MessageHandlers\CustomMessageHandler\Async\CustomMessageHandlerAsync_Events.cs,OnEvent_ClickRequest,The method has 205 lines of code.
Complex Method,Senparc.Weixin.MP.Sample.CommonService.CustomMessageHandler,CustomMessageHandler,D:\research\architectureSmells\repos\JeffreySu_WeiXinMPSDK\Samples\net45-mvc\Senparc.Weixin.MP.Sample.CommonService\MessageHandlers\CustomMessageHandler\Async\CustomMessageHandlerAsync_Events.cs,OnEvent_ClickRequest,Cyclomatic complexity of the method is 18
Complex Method,Senparc.Weixin.MP.Sample.CommonService.WxOpenMessageHandler,CustomWxOpenMessageHandler,D:\research\architectureSmells\repos\JeffreySu_WeiXinMPSDK\Samples\net45-mvc\Senparc.Weixin.MP.Sample.CommonService\MessageHandlers\WxOpenMessageHandler\CustomWxOpenMessageHandler.cs,OnTextRequest,Cyclomatic complexity of the method is 8
Long Parameter List,Senparc.Weixin.MP.Sample.CommonService.TemplateMessage,WeixinTemplate_ExceptionAlert,D:\research\architectureSmells\repos\JeffreySu_WeiXinMPSDK\Samples\net45-mvc\Senparc.Weixin.MP.Sample.CommonService\TemplateMessage\WeixinTemplate_ExceptionAlert.cs,WeixinTemplate_ExceptionAlert,The method has 8 parameters. Parameters: _first' host' service' status' message' _remark' url' templateId
Long Parameter List,Senparc.Weixin.MP.Sample.CommonService.TemplateMessage.WxOpen,WxOpenTemplateMessage_PaySuccessNotice,D:\research\architectureSmells\repos\JeffreySu_WeiXinMPSDK\Samples\net45-mvc\Senparc.Weixin.MP.Sample.CommonService\TemplateMessage\WxOpen\WxOpenTemplateMessage_PaySuccessNotice.cs,WxOpenTemplateMessage_PaySuccessNotice,The method has 8 parameters. Parameters: payAddress' payTime' productName' orderNumber' orderPrice' hotLine' url' templateId
Long Statement,Senparc.Weixin.MP.Sample.CommonService.CustomMessageHandler,CustomMessageHandler,D:\research\architectureSmells\repos\JeffreySu_WeiXinMPSDK\Samples\net45-mvc\Senparc.Weixin.MP.Sample.CommonService\MessageHandlers\CustomMessageHandler\Async\CustomMessageHandlerAsync_Events.cs,OnEvent_ClickRequestAsync,The length of the statement  "                var syncResponseMessage = OnEvent_ClickRequest(requestMessage);//这里为了保持Demo的连贯性，结果先从同步方法获取，实际使用过程中可以在 OnEvent_ClickRequestAsync 中全部直接定义异步方法 " is 139.
Long Statement,Senparc.Weixin.MP.Sample.CommonService.CustomMessageHandler,CustomMessageHandler,D:\research\architectureSmells\repos\JeffreySu_WeiXinMPSDK\Samples\net45-mvc\Senparc.Weixin.MP.Sample.CommonService\MessageHandlers\CustomMessageHandler\Async\CustomMessageHandlerAsync_Events.cs,OnTextRequestAsync,The length of the statement  "<a href=""https://sdk.weixin.senparc.com/FilterTest/"">点击这里</a>进行客户端约束测试（地址：https://sdk.weixin.senparc.com/FilterTest/），如果在微信外打开将直接返回文字。 " is 136.
Long Statement,Senparc.Weixin.MP.Sample.CommonService.CustomMessageHandler,CustomMessageHandler,D:\research\architectureSmells\repos\JeffreySu_WeiXinMPSDK\Samples\net45-mvc\Senparc.Weixin.MP.Sample.CommonService\MessageHandlers\CustomMessageHandler\Async\CustomMessageHandlerAsync_Events.cs,OnTextRequestAsync,The length of the statement  "<a href=""https://sdk.weixin.senparc.com/FilterTest/Redirect"">点击这里</a>进行客户端约束测试（地址：https://sdk.weixin.senparc.com/FilterTest/Redirect），如果在微信外打开将重定向一次URL。"; " is 156.
Long Statement,Senparc.Weixin.MP.Sample.CommonService.CustomMessageHandler,CustomMessageHandler,D:\research\architectureSmells\repos\JeffreySu_WeiXinMPSDK\Samples\net45-mvc\Senparc.Weixin.MP.Sample.CommonService\MessageHandlers\CustomMessageHandler\Async\CustomMessageHandlerAsync_Events.cs,OnTextRequestAsync,The length of the statement  "                    defaultResponseMessage.Content = string.Format(@"新的验证码为：{0}，请在网页上输入。网址：https://sdk.weixin.senparc.com/AsyncMethods"' checkCode); " is 128.
Long Statement,Senparc.Weixin.MP.Sample.CommonService.CustomMessageHandler,CustomMessageHandler,D:\research\architectureSmells\repos\JeffreySu_WeiXinMPSDK\Samples\net45-mvc\Senparc.Weixin.MP.Sample.CommonService\MessageHandlers\CustomMessageHandler\Async\CustomMessageHandlerAsync_Events.cs,OnTextRequestAsync,The length of the statement  "                        requestMessage.FromUserName' userInfo.nickname' (WeixinSex)userInfo.sex' userInfo.country' userInfo.province' userInfo.city' DateTimeHelper.GetDateTimeFromXml(userInfo.subscribe_time)' userInfo.subscribe); " is 205.
Long Statement,Senparc.Weixin.MP.Sample.CommonService.CustomMessageHandler,CustomMessageHandler,D:\research\architectureSmells\repos\JeffreySu_WeiXinMPSDK\Samples\net45-mvc\Senparc.Weixin.MP.Sample.CommonService\MessageHandlers\CustomMessageHandler\Async\CustomMessageHandlerAsync_Events.cs,OnTextRequestAsync,The length of the statement  "                    var ex = new WeixinException("openid:" + requestMessage.FromUserName + ":这是一条测试异常信息");//回调过程在global的ConfigWeixinTraceLog()方法中 " is 125.
Long Statement,Senparc.Weixin.MP.Sample.CommonService.CustomMessageHandler,CustomMessageHandler,D:\research\architectureSmells\repos\JeffreySu_WeiXinMPSDK\Samples\net45-mvc\Senparc.Weixin.MP.Sample.CommonService\MessageHandlers\CustomMessageHandler\Async\CustomMessageHandlerAsync_Events.cs,OnTextRequestAsync,The length of the statement  "                    defaultResponseMessage.Content = $"感谢您的评价（{requestMessage.Content}）！我们需要您的意见或建议，欢迎向我们反馈！ <a href=\"https://github.com/JeffreySu/WeiXinMPSDK/issues/new\">点击这里</a>"; " is 163.
Long Statement,Senparc.Weixin.MP.Sample.CommonService.CustomMessageHandler,CustomMessageHandler,D:\research\architectureSmells\repos\JeffreySu_WeiXinMPSDK\Samples\net45-mvc\Senparc.Weixin.MP.Sample.CommonService\MessageHandlers\CustomMessageHandler\Async\CustomMessageHandlerAsync_Events.cs,OnEventRequestAsync,The length of the statement  "            var eventResponseMessage = await base.OnEventRequestAsync(requestMessage);//对于Event下属分类的重写方法，见：CustomerMessageHandler_Events.cs " is 127.
Long Statement,Senparc.Weixin.MP.Sample.CommonService.CustomMessageHandler,CustomMessageHandler,D:\research\architectureSmells\repos\JeffreySu_WeiXinMPSDK\Samples\net45-mvc\Senparc.Weixin.MP.Sample.CommonService\MessageHandlers\CustomMessageHandler\Async\CustomMessageHandlerAsync_Events.cs,GetWelcomeInfo,The length of the statement  "                : string.Format("{0}.{1}.{2}"' fileVersionInfo.FileMajorPart' fileVersionInfo.FileMinorPart' fileVersionInfo.FileBuildPart); " is 124.
Long Statement,Senparc.Weixin.MP.Sample.CommonService.MessageHandlers.WebSocket,CustomNet45WebSocketMessageHandler,D:\research\architectureSmells\repos\JeffreySu_WeiXinMPSDK\Samples\net45-mvc\Senparc.Weixin.MP.Sample.CommonService\MessageHandlers\WebSocket\CustomNet45WebSocketMessageHandler.cs,OnMessageReceiced,The length of the statement  "                var tmResult = Senparc.Weixin.WxOpen.AdvancedAPIs.Template.TemplateApi.SendTemplateMessage(appId' openId' "Ap1S3tRvsB8BXsWkiILLz93nhe7S8IgAipZDfygy9Bg"' data' receivedMessage.FormId' "pages/websocket/websocket"' "websocket"' " is 224.
Long Statement,Senparc.Weixin.MP.Sample.CommonService.MessageHandlers.OpenMessageHandler,OpenCheckMessageHandler,D:\research\architectureSmells\repos\JeffreySu_WeiXinMPSDK\Samples\net45-mvc\Senparc.Weixin.MP.Sample.CommonService\MessageHandlers\OpenMessageHandler\OpenCheckMessageHandler.cs,OnTextRequest,The length of the statement  "                    var component_access_token = Open.ComponentAPIs.ComponentApi.GetComponentAccessToken(componentAppId' componentSecret' openTicket).component_access_token; " is 153.
Long Statement,Senparc.Weixin.MP.Sample.CommonService.ThirdPartyMessageHandlers,CustomThirdPartyMessageHandler,D:\research\architectureSmells\repos\JeffreySu_WeiXinMPSDK\Samples\net45-mvc\Senparc.Weixin.MP.Sample.CommonService\MessageHandlers\CustomThirdPartyMessageHandlers\CustomThirdPartyMessageHandler.cs,OnComponentVerifyTicketRequest,The length of the statement  "            using (FileStream fs = new FileStream(Path.Combine(openTicketPath' string.Format("{0}.txt"' RequestMessage.AppId))'FileMode.OpenOrCreate'FileAccess.ReadWrite)) " is 159.
Long Statement,Senparc.Weixin.MP.Sample.CommonService.WxOpenMessageHandler,CustomWxOpenMessageHandler,D:\research\architectureSmells\repos\JeffreySu_WeiXinMPSDK\Samples\net45-mvc\Senparc.Weixin.MP.Sample.CommonService\MessageHandlers\WxOpenMessageHandler\CustomWxOpenMessageHandler.cs,OnTextRequest,The length of the statement  "                Senparc.Weixin.WxOpen.AdvancedAPIs.CustomApi.SendLink(appId' OpenId' "欢迎使用 Senparc.Weixin SDK"' "感谢大家的支持！\r\n\r\n盛派永远在你身边！"' " is 124.
Long Statement,Senparc.Weixin.MP.Sample.CommonService.WxOpenMessageHandler,CustomWxOpenMessageHandler,D:\research\architectureSmells\repos\JeffreySu_WeiXinMPSDK\Samples\net45-mvc\Senparc.Weixin.MP.Sample.CommonService\MessageHandlers\WxOpenMessageHandler\CustomWxOpenMessageHandler.cs,OnTextRequest,The length of the statement  "                var uploadResult = MP.AdvancedAPIs.MediaApi.UploadTemporaryMedia(appId' UploadMediaFileType.image' ServerUtility.ContentRootMapPath("~/Images/Logo.thumb.jpg")); " is 160.
Long Statement,Senparc.Weixin.MP.Sample.CommonService.WxOpenMessageHandler,CustomWxOpenMessageHandler,D:\research\architectureSmells\repos\JeffreySu_WeiXinMPSDK\Samples\net45-mvc\Senparc.Weixin.MP.Sample.CommonService\MessageHandlers\WxOpenMessageHandler\CustomWxOpenMessageHandler.cs,OnTextRequest,The length of the statement  "                Senparc.Weixin.WxOpen.AdvancedAPIs.CustomApi.SendMiniProgramPage(appId' OpenId' "欢迎使用 Senparc.Weixin SDK"' "pages/websocket/websocket"' " is 135.
Long Statement,Senparc.Weixin.MP.Sample.CommonService,TemplateMessageService,D:\research\architectureSmells\repos\JeffreySu_WeiXinMPSDK\Samples\net45-mvc\Senparc.Weixin.MP.Sample.CommonService\TemplateMessageService.cs,RunTemplateTestAsync,The length of the statement  "                var unifiedorderRequestData = await cacheStrategy.GetAsync<TenPayV3UnifiedorderRequestData>($"WxOpenUnifiedorderRequestData-{openId}");//获取订单请求信息缓存 " is 147.
Long Statement,Senparc.Weixin.MP.Sample.CommonService,TemplateMessageService,D:\research\architectureSmells\repos\JeffreySu_WeiXinMPSDK\Samples\net45-mvc\Senparc.Weixin.MP.Sample.CommonService\TemplateMessageService.cs,RunTemplateTestAsync,The length of the statement  "                var unifedorderResult = await cacheStrategy.GetAsync<UnifiedorderResult>($"WxOpenUnifiedorderResultData-{openId}");//获取订单信息缓存 " is 125.
Long Statement,Senparc.Weixin.MP.Sample.CommonService,EventService,D:\research\architectureSmells\repos\JeffreySu_WeiXinMPSDK\Samples\net45-mvc\Senparc.Weixin.MP.Sample.CommonService\EventService.cs,GetResponseMessage,The length of the statement  "                            "欢迎关注【Senparc.Weixin.MP 微信公众平台SDK】，当前运行版本：v{0}。\r\n您还可以发送【位置】【图片】【语音】信息，查看不同格式的回复。\r\nSDK官方地址：https://sdk.weixin.senparc.com"' " is 126.
Long Statement,Senparc.Weixin.MP.Sample.CommonService,EventService,D:\research\architectureSmells\repos\JeffreySu_WeiXinMPSDK\Samples\net45-mvc\Senparc.Weixin.MP.Sample.CommonService\EventService.cs,ConfigOnWeixinExceptionFunc,The length of the statement  "                string url = "https://github.com/JeffreySu/WeiXinMPSDK/blob/master/Samples/netcore3.0-mvc/Senparc.Weixin.Sample.NetCore3/Startup.cs#L410";//需要点击打开的URL " is 150.
Long Statement,Senparc.Weixin.MP.Sample.CommonService,EventService,D:\research\architectureSmells\repos\JeffreySu_WeiXinMPSDK\Samples\net45-mvc\Senparc.Weixin.MP.Sample.CommonService\EventService.cs,ConfigOnWeixinExceptionFunc,The length of the statement  "                    var data = new WeixinTemplate_ExceptionAlert(string.Format("微信发生异常（延时{0}秒）"' sleepSeconds)' host' service' status' message' remark); " is 132.
Long Statement,Senparc.Weixin.MP.Sample.CommonService.Download,ConfigHelper,D:\research\architectureSmells\repos\JeffreySu_WeiXinMPSDK\Samples\net45-mvc\Senparc.Weixin.MP.Sample.CommonService\Download\ConfigHelper.cs,Download,The length of the statement  "            //FileStream fs = new FileStream(_context.ServerUtility.ContentRootMapPath(string.Format("~/App_Data/Document/Files/Senparc.Weixin-v{0}.rar"' version))' FileMode.Open); " is 168.
Long Statement,Senparc.Weixin.MP.Sample.CommonService.Download,ConfigHelper,D:\research\architectureSmells\repos\JeffreySu_WeiXinMPSDK\Samples\net45-mvc\Senparc.Weixin.MP.Sample.CommonService\Download\ConfigHelper.cs,Download,The length of the statement  "            var filePath = ServerUtility.ContentRootMapPath(string.Format("~/App_Data/Document/Files/Senparc.Weixin{0}-v{1}.rar"' isWebVersion ? "-Web" : ""' version)); " is 156.
Empty Catch Block,Senparc.Weixin.MP.Sample.CommonService.CustomMessageHandler,CustomMessageHandler,D:\research\architectureSmells\repos\JeffreySu_WeiXinMPSDK\Samples\net45-mvc\Senparc.Weixin.MP.Sample.CommonService\MessageHandlers\CustomMessageHandler\Async\CustomMessageHandlerAsync_Events.cs,OnVoiceRequestAsync,The method has an empty catch block.
Magic Number,Senparc.Weixin.MP.Sample.CommonService.CustomMessageHandler,CustomMessageHandler,D:\research\architectureSmells\repos\JeffreySu_WeiXinMPSDK\Samples\net45-mvc\Senparc.Weixin.MP.Sample.CommonService\MessageHandlers\CustomMessageHandler\Async\CustomMessageHandlerAsync_Events.cs,CustomMessageHandler,The following statement contains a magic number: GlobalMessageContext.ExpireMinutes = 3;
Magic Number,Senparc.Weixin.MP.Sample.CommonService.CustomMessageHandler,CustomMessageHandler,D:\research\architectureSmells\repos\JeffreySu_WeiXinMPSDK\Samples\net45-mvc\Senparc.Weixin.MP.Sample.CommonService\MessageHandlers\CustomMessageHandler\Async\CustomMessageHandlerAsync_Events.cs,OnTextRequestAsync,The following statement contains a magic number: var requestHandler = await requestMessage.StartHandler()                  //关键字不区分大小写，按照顺序匹配成功后将不再运行下面的逻辑                  .Keyword("约束"' () =>                  {                      defaultResponseMessage.Content =                      @"您正在进行微信内置浏览器约束判断测试。您可以：  <a href=""https://sdk.weixin.senparc.com/FilterTest/"">点击这里</a>进行客户端约束测试（地址：https://sdk.weixin.senparc.com/FilterTest/），如果在微信外打开将直接返回文字。  或：  <a href=""https://sdk.weixin.senparc.com/FilterTest/Redirect"">点击这里</a>进行客户端约束测试（地址：https://sdk.weixin.senparc.com/FilterTest/Redirect），如果在微信外打开将重定向一次URL。";                      return defaultResponseMessage;                  }).                  //匹配任一关键字                  Keywords(new[] { "托管"' "代理" }' () =>                  {                      //开始用代理托管，把请求转到其他服务器上去，然后拿回结果                      //甚至也可以将所有请求在DefaultResponseMessage()中托管到外部。                        var dt1 = SystemTime.Now; //计时开始                        var agentXml = RequestDocument.ToString();                        #region 暂时转发到SDK线上Demo                        agentUrl = "https://sdk.weixin.senparc.com/weixin";                      //agentToken = WebConfigurationManager.AppSettings["WeixinToken"];//Token                        //修改内容，防止死循环                      var agentDoc = XDocument.Parse(agentXml);                      agentDoc.Root.Element("Content").SetValue("代理转发文字：" + requestMessage.Content);                      agentDoc.Root.Element("CreateTime").SetValue(DateTimeHelper.GetUnixDateTime(SystemTime.Now));//修改时间，防止去重                      agentDoc.Root.Element("MsgId").SetValue("123");//防止去重                      agentXml = agentDoc.ToString();                        #endregion                        var responseXml = MessageAgent.RequestXml(this' agentUrl' agentToken' agentXml);                      //获取返回的XML                      //上面的方法也可以使用扩展方法：this.RequestResponseMessage(this'agentUrl' agentToken' RequestDocument.ToString());                        /* 如果有WeiweihiKey，可以直接使用下面的这个MessageAgent.RequestWeiweihiXml()方法。                      * WeiweihiKey专门用于对接www.weiweihi.com平台，获取方式见：https://www.weiweihi.com/ApiDocuments/Item/25#51                      */                      //var responseXml = MessageAgent.RequestWeiweihiXml(weiweihiKey' RequestDocument.ToString());//获取Weiweihi返回的XML                        var dt2 = SystemTime.Now; //计时结束                        //转成实体。                      /* 如果要写成一行，可以直接用：                      * responseMessage = MessageAgent.RequestResponseMessage(agentUrl' agentToken' RequestDocument.ToString());                      * 或                      *                      */                      var msg = string.Format("\r\n\r\n代理过程总耗时：{0}毫秒"' (dt2 - dt1).Milliseconds);                      var agentResponseMessage = responseXml.CreateResponseMessage(this.MessageEntityEnlightener);                      if (agentResponseMessage is ResponseMessageText)                      {                          (agentResponseMessage as ResponseMessageText).Content += msg;                      }                      else if (agentResponseMessage is ResponseMessageNews)                      {                          (agentResponseMessage as ResponseMessageNews).Articles[0].Description += msg;                      }                      return agentResponseMessage;//可能出现多种类型，直接在这里返回                  })                  .Keywords(new[] { "测试"' "退出" }' () =>                  {                      /*                       * 这是一个特殊的过程，此请求通常来自于微微嗨（http://www.weiweihi.com）的“盛派网络小助手”应用请求（https://www.weiweihi.com/User/App/Detail/1），                       * 用于演示微微嗨应用商店的处理过程，由于微微嗨的应用内部可以单独设置对话过期时间，所以这里通常不需要考虑对话状态，只要做最简单的响应。                       */                      if (defaultResponseMessage.Content == "测试")                      {                          //进入APP测试                          defaultResponseMessage.Content = "您已经进入【盛派网络小助手】的测试程序，请发送任意信息进行测试。发送文字【退出】退出测试对话。10分钟内无任何交互将自动退出应用对话状态。";                      }                      else                      {                          //退出APP测试                          defaultResponseMessage.Content = "您已经退出【盛派网络小助手】的测试程序。";                      }                      return defaultResponseMessage;                  })                  .Keyword("AsyncTest"' () =>                  {                      //异步并发测试（提供给单元测试使用）  #if NET45                      var begin = SystemTime.Now;                      int t1' t2' t3;                      System.Threading.ThreadPool.GetAvailableThreads(out t1' out t3);                      System.Threading.ThreadPool.GetMaxThreads(out t2' out t3);                      System.Threading.Thread.Sleep(TimeSpan.FromSeconds(4));                      var end = SystemTime.Now;                      var thread = System.Threading.Thread.CurrentThread;                      defaultResponseMessage.Content = string.Format("TId:{0}\tApp:{1}\tBegin:{2:mm:ss'ffff}\tEnd:{3:mm:ss'ffff}\tTPool：{4}"'                              thread.ManagedThreadId'                              HttpContext.Current != null ? HttpContext.Current.ApplicationInstance.GetHashCode() : -1'                              begin'                              end'                              t2 - t1                              );  #endif                        return defaultResponseMessage;                  })                  .Keyword("OPEN"' () =>                  {                      var openResponseMessage = requestMessage.CreateResponseMessage<ResponseMessageNews>();                      openResponseMessage.Articles.Add(new Article()                      {                          Title = "开放平台微信授权测试！"'                          Description = @"点击进入Open授权页面。    授权之后，您的微信所收到的消息将转发到第三方（盛派网络小助手）的服务器上，并获得对应的回复。    测试完成后，您可以登陆公众号后台取消授权。"'                          Url = "https://sdk.weixin.senparc.com/OpenOAuth/JumpToMpOAuth"                      });                      return openResponseMessage;                  })                  .Keyword("错误"' () =>                  {                      var errorResponseMessage = requestMessage.CreateResponseMessage<ResponseMessageText>();                      //因为没有设置errorResponseMessage.Content，所以这小消息将无法正确返回。                      return errorResponseMessage;                  })                  .Keyword("容错"' () =>                  {                      Thread.Sleep(4900);//故意延时1.5秒，让微信多次发送消息过来，观察返回结果                      var faultTolerantResponseMessage = requestMessage.CreateResponseMessage<ResponseMessageText>();                      faultTolerantResponseMessage.Content = string.Format("测试容错，MsgId：{0}，Ticks：{1}"' requestMessage.MsgId'                          SystemTime.Now.Ticks);                      return faultTolerantResponseMessage;                  })                  .Keyword("TM"' () =>                  {                      var openId = requestMessage.FromUserName;                      var checkCode = Guid.NewGuid().ToString("n").Substring(0' 3);//为了防止openId泄露造成骚扰，这里启用验证码                      TemplateMessageCollection[checkCode] = openId;                      defaultResponseMessage.Content = string.Format(@"新的验证码为：{0}，请在网页上输入。网址：https://sdk.weixin.senparc.com/AsyncMethods"' checkCode);                      return defaultResponseMessage;                  })                  .Keyword("OPENID"' () =>                  {                      var openId = requestMessage.FromUserName;//获取OpenId                      var userInfo = AdvancedAPIs.UserApi.Info(appId' openId' Language.zh_CN);                        defaultResponseMessage.Content = string.Format(                          "您的OpenID为：{0}\r\n昵称：{1}\r\n性别：{2}\r\n地区（国家/省/市）：{3}/{4}/{5}\r\n关注时间：{6}\r\n关注状态：{7}"'                          requestMessage.FromUserName' userInfo.nickname' (WeixinSex)userInfo.sex' userInfo.country' userInfo.province' userInfo.city' DateTimeHelper.GetDateTimeFromXml(userInfo.subscribe_time)' userInfo.subscribe);                      return defaultResponseMessage;                  })                  .Keyword("EX"' () =>                  {                      var ex = new WeixinException("openid:" + requestMessage.FromUserName + ":这是一条测试异常信息");//回调过程在global的ConfigWeixinTraceLog()方法中                      defaultResponseMessage.Content = "请等待异步模板消息发送到此界面上（自动延时数秒）。\r\n当前时间：" + SystemTime.Now.ToString();                      return defaultResponseMessage;                  })                  .Keyword("MUTE"' () => //不回复任何消息                  {                      //方案一：                      return new SuccessResponseMessage();                        //方案二：                      var muteResponseMessage = base.CreateResponseMessage<ResponseMessageNoResponse>();                      return muteResponseMessage;                        //方案三：                      base.TextResponseMessage = "success";                      return null;                        //方案四：                      return null;//在 Action 中结合使用 return new FixWeixinBugWeixinResult(messageHandler);                  })                  .Keyword("JSSDK"' () =>                  {                      defaultResponseMessage.Content = "点击打开：https://sdk.weixin.senparc.com/WeixinJsSdk";                      return defaultResponseMessage;                  })                      //选择菜单，关键字：101（微信服务器端最终格式：id="s:101"'content="满意"）                  .SelectMenuKeyword("101"' () =>                  {                      defaultResponseMessage.Content = $"感谢您的评价（{requestMessage.Content}）！我们会一如既往为提高企业和开发者生产力而努力！";                      return defaultResponseMessage;                  })                  //选择菜单，关键字：102（微信服务器端最终格式：id="s:102"'content="一般"）                  .SelectMenuKeyword("102"' () =>                  {                      defaultResponseMessage.Content = $"感谢您的评价（{requestMessage.Content}）！希望我们的服务能让您越来越满意！";                      return defaultResponseMessage;                  })                  //选择菜单，关键字：103（微信服务器端最终格式：id="s:103"'content="不满意"）                  .SelectMenuKeyword("103"' () =>                  {                      defaultResponseMessage.Content = $"感谢您的评价（{requestMessage.Content}）！我们需要您的意见或建议，欢迎向我们反馈！ <a href=\"https://github.com/JeffreySu/WeiXinMPSDK/issues/new\">点击这里</a>";                      return defaultResponseMessage;                  })                  .SelectMenuKeywords(new[] { "110"' "111" }' () =>                  {                      defaultResponseMessage.Content = $"这里只是演示，可以同时支持多个选择菜单";                      return defaultResponseMessage;                  })                      //“一次订阅消息”接口测试                  .Keyword("订阅"' () =>                  {                      defaultResponseMessage.Content = "点击打开：https://sdk.weixin.senparc.com/SubscribeMsg";                      return defaultResponseMessage;                  })                  //正则表达式                  .Regex(@"^\d+#\d+$"' () =>                  {                      defaultResponseMessage.Content = string.Format("您输入了：{0}，符合正则表达式：^\\d+#\\d+$"' requestMessage.Content);                      return defaultResponseMessage;                  })                    //当 Default 使用异步方法时，需要写在最后一个，且 requestMessage.StartHandler() 前需要使用 await 等待异步方法执行；                  //当 Default 使用同步方法，不一定要在最后一个'并且不需要使用 await                  .Default(async () =>                  {                      var result = new StringBuilder();                      result.AppendFormat("您刚才发送了文字信息：{0}\r\n\r\n"' requestMessage.Content);                        var currentMessageContext = await base.GetCurrentMessageContext();                      if (currentMessageContext.RequestMessages.Count > 1)                      {                          result.AppendFormat("您刚才还发送了如下消息（{0}/{1}）：\r\n"' currentMessageContext.RequestMessages.Count'                              currentMessageContext.StorageData);                          for (int i = currentMessageContext.RequestMessages.Count - 2; i >= 0; i--)                          {                              var historyMessage = currentMessageContext.RequestMessages[i];                              result.AppendFormat("{0} 【{1}】{2}\r\n"'                                  historyMessage.CreateTime.ToString("HH:mm:ss")'                                  historyMessage.MsgType.ToString()'                                  (historyMessage is RequestMessageText)                                      ? (historyMessage as RequestMessageText).Content                                      : "[非文字类型]"                                  );                          }                          result.AppendLine("\r\n");                      }                        result.AppendFormat("如果您在{0}分钟内连续发送消息，记录将被自动保留（当前设置：最多记录{1}条）。过期后记录将会自动清除。\r\n"'                          GlobalMessageContext.ExpireMinutes' GlobalMessageContext.MaxRecordCount);                      result.AppendLine("\r\n");                      result.AppendLine(                          "您还可以发送【位置】【图片】【语音】【视频】等类型的信息（注意是这几种类型，不是这几个文字），查看不同格式的回复。\r\nSDK官方地址：https://sdk.weixin.senparc.com");                        defaultResponseMessage.Content = result.ToString();                        return defaultResponseMessage;                  });
Magic Number,Senparc.Weixin.MP.Sample.CommonService.CustomMessageHandler,CustomMessageHandler,D:\research\architectureSmells\repos\JeffreySu_WeiXinMPSDK\Samples\net45-mvc\Senparc.Weixin.MP.Sample.CommonService\MessageHandlers\CustomMessageHandler\Async\CustomMessageHandlerAsync_Events.cs,OnTextRequestAsync,The following statement contains a magic number: var requestHandler = await requestMessage.StartHandler()                  //关键字不区分大小写，按照顺序匹配成功后将不再运行下面的逻辑                  .Keyword("约束"' () =>                  {                      defaultResponseMessage.Content =                      @"您正在进行微信内置浏览器约束判断测试。您可以：  <a href=""https://sdk.weixin.senparc.com/FilterTest/"">点击这里</a>进行客户端约束测试（地址：https://sdk.weixin.senparc.com/FilterTest/），如果在微信外打开将直接返回文字。  或：  <a href=""https://sdk.weixin.senparc.com/FilterTest/Redirect"">点击这里</a>进行客户端约束测试（地址：https://sdk.weixin.senparc.com/FilterTest/Redirect），如果在微信外打开将重定向一次URL。";                      return defaultResponseMessage;                  }).                  //匹配任一关键字                  Keywords(new[] { "托管"' "代理" }' () =>                  {                      //开始用代理托管，把请求转到其他服务器上去，然后拿回结果                      //甚至也可以将所有请求在DefaultResponseMessage()中托管到外部。                        var dt1 = SystemTime.Now; //计时开始                        var agentXml = RequestDocument.ToString();                        #region 暂时转发到SDK线上Demo                        agentUrl = "https://sdk.weixin.senparc.com/weixin";                      //agentToken = WebConfigurationManager.AppSettings["WeixinToken"];//Token                        //修改内容，防止死循环                      var agentDoc = XDocument.Parse(agentXml);                      agentDoc.Root.Element("Content").SetValue("代理转发文字：" + requestMessage.Content);                      agentDoc.Root.Element("CreateTime").SetValue(DateTimeHelper.GetUnixDateTime(SystemTime.Now));//修改时间，防止去重                      agentDoc.Root.Element("MsgId").SetValue("123");//防止去重                      agentXml = agentDoc.ToString();                        #endregion                        var responseXml = MessageAgent.RequestXml(this' agentUrl' agentToken' agentXml);                      //获取返回的XML                      //上面的方法也可以使用扩展方法：this.RequestResponseMessage(this'agentUrl' agentToken' RequestDocument.ToString());                        /* 如果有WeiweihiKey，可以直接使用下面的这个MessageAgent.RequestWeiweihiXml()方法。                      * WeiweihiKey专门用于对接www.weiweihi.com平台，获取方式见：https://www.weiweihi.com/ApiDocuments/Item/25#51                      */                      //var responseXml = MessageAgent.RequestWeiweihiXml(weiweihiKey' RequestDocument.ToString());//获取Weiweihi返回的XML                        var dt2 = SystemTime.Now; //计时结束                        //转成实体。                      /* 如果要写成一行，可以直接用：                      * responseMessage = MessageAgent.RequestResponseMessage(agentUrl' agentToken' RequestDocument.ToString());                      * 或                      *                      */                      var msg = string.Format("\r\n\r\n代理过程总耗时：{0}毫秒"' (dt2 - dt1).Milliseconds);                      var agentResponseMessage = responseXml.CreateResponseMessage(this.MessageEntityEnlightener);                      if (agentResponseMessage is ResponseMessageText)                      {                          (agentResponseMessage as ResponseMessageText).Content += msg;                      }                      else if (agentResponseMessage is ResponseMessageNews)                      {                          (agentResponseMessage as ResponseMessageNews).Articles[0].Description += msg;                      }                      return agentResponseMessage;//可能出现多种类型，直接在这里返回                  })                  .Keywords(new[] { "测试"' "退出" }' () =>                  {                      /*                       * 这是一个特殊的过程，此请求通常来自于微微嗨（http://www.weiweihi.com）的“盛派网络小助手”应用请求（https://www.weiweihi.com/User/App/Detail/1），                       * 用于演示微微嗨应用商店的处理过程，由于微微嗨的应用内部可以单独设置对话过期时间，所以这里通常不需要考虑对话状态，只要做最简单的响应。                       */                      if (defaultResponseMessage.Content == "测试")                      {                          //进入APP测试                          defaultResponseMessage.Content = "您已经进入【盛派网络小助手】的测试程序，请发送任意信息进行测试。发送文字【退出】退出测试对话。10分钟内无任何交互将自动退出应用对话状态。";                      }                      else                      {                          //退出APP测试                          defaultResponseMessage.Content = "您已经退出【盛派网络小助手】的测试程序。";                      }                      return defaultResponseMessage;                  })                  .Keyword("AsyncTest"' () =>                  {                      //异步并发测试（提供给单元测试使用）  #if NET45                      var begin = SystemTime.Now;                      int t1' t2' t3;                      System.Threading.ThreadPool.GetAvailableThreads(out t1' out t3);                      System.Threading.ThreadPool.GetMaxThreads(out t2' out t3);                      System.Threading.Thread.Sleep(TimeSpan.FromSeconds(4));                      var end = SystemTime.Now;                      var thread = System.Threading.Thread.CurrentThread;                      defaultResponseMessage.Content = string.Format("TId:{0}\tApp:{1}\tBegin:{2:mm:ss'ffff}\tEnd:{3:mm:ss'ffff}\tTPool：{4}"'                              thread.ManagedThreadId'                              HttpContext.Current != null ? HttpContext.Current.ApplicationInstance.GetHashCode() : -1'                              begin'                              end'                              t2 - t1                              );  #endif                        return defaultResponseMessage;                  })                  .Keyword("OPEN"' () =>                  {                      var openResponseMessage = requestMessage.CreateResponseMessage<ResponseMessageNews>();                      openResponseMessage.Articles.Add(new Article()                      {                          Title = "开放平台微信授权测试！"'                          Description = @"点击进入Open授权页面。    授权之后，您的微信所收到的消息将转发到第三方（盛派网络小助手）的服务器上，并获得对应的回复。    测试完成后，您可以登陆公众号后台取消授权。"'                          Url = "https://sdk.weixin.senparc.com/OpenOAuth/JumpToMpOAuth"                      });                      return openResponseMessage;                  })                  .Keyword("错误"' () =>                  {                      var errorResponseMessage = requestMessage.CreateResponseMessage<ResponseMessageText>();                      //因为没有设置errorResponseMessage.Content，所以这小消息将无法正确返回。                      return errorResponseMessage;                  })                  .Keyword("容错"' () =>                  {                      Thread.Sleep(4900);//故意延时1.5秒，让微信多次发送消息过来，观察返回结果                      var faultTolerantResponseMessage = requestMessage.CreateResponseMessage<ResponseMessageText>();                      faultTolerantResponseMessage.Content = string.Format("测试容错，MsgId：{0}，Ticks：{1}"' requestMessage.MsgId'                          SystemTime.Now.Ticks);                      return faultTolerantResponseMessage;                  })                  .Keyword("TM"' () =>                  {                      var openId = requestMessage.FromUserName;                      var checkCode = Guid.NewGuid().ToString("n").Substring(0' 3);//为了防止openId泄露造成骚扰，这里启用验证码                      TemplateMessageCollection[checkCode] = openId;                      defaultResponseMessage.Content = string.Format(@"新的验证码为：{0}，请在网页上输入。网址：https://sdk.weixin.senparc.com/AsyncMethods"' checkCode);                      return defaultResponseMessage;                  })                  .Keyword("OPENID"' () =>                  {                      var openId = requestMessage.FromUserName;//获取OpenId                      var userInfo = AdvancedAPIs.UserApi.Info(appId' openId' Language.zh_CN);                        defaultResponseMessage.Content = string.Format(                          "您的OpenID为：{0}\r\n昵称：{1}\r\n性别：{2}\r\n地区（国家/省/市）：{3}/{4}/{5}\r\n关注时间：{6}\r\n关注状态：{7}"'                          requestMessage.FromUserName' userInfo.nickname' (WeixinSex)userInfo.sex' userInfo.country' userInfo.province' userInfo.city' DateTimeHelper.GetDateTimeFromXml(userInfo.subscribe_time)' userInfo.subscribe);                      return defaultResponseMessage;                  })                  .Keyword("EX"' () =>                  {                      var ex = new WeixinException("openid:" + requestMessage.FromUserName + ":这是一条测试异常信息");//回调过程在global的ConfigWeixinTraceLog()方法中                      defaultResponseMessage.Content = "请等待异步模板消息发送到此界面上（自动延时数秒）。\r\n当前时间：" + SystemTime.Now.ToString();                      return defaultResponseMessage;                  })                  .Keyword("MUTE"' () => //不回复任何消息                  {                      //方案一：                      return new SuccessResponseMessage();                        //方案二：                      var muteResponseMessage = base.CreateResponseMessage<ResponseMessageNoResponse>();                      return muteResponseMessage;                        //方案三：                      base.TextResponseMessage = "success";                      return null;                        //方案四：                      return null;//在 Action 中结合使用 return new FixWeixinBugWeixinResult(messageHandler);                  })                  .Keyword("JSSDK"' () =>                  {                      defaultResponseMessage.Content = "点击打开：https://sdk.weixin.senparc.com/WeixinJsSdk";                      return defaultResponseMessage;                  })                      //选择菜单，关键字：101（微信服务器端最终格式：id="s:101"'content="满意"）                  .SelectMenuKeyword("101"' () =>                  {                      defaultResponseMessage.Content = $"感谢您的评价（{requestMessage.Content}）！我们会一如既往为提高企业和开发者生产力而努力！";                      return defaultResponseMessage;                  })                  //选择菜单，关键字：102（微信服务器端最终格式：id="s:102"'content="一般"）                  .SelectMenuKeyword("102"' () =>                  {                      defaultResponseMessage.Content = $"感谢您的评价（{requestMessage.Content}）！希望我们的服务能让您越来越满意！";                      return defaultResponseMessage;                  })                  //选择菜单，关键字：103（微信服务器端最终格式：id="s:103"'content="不满意"）                  .SelectMenuKeyword("103"' () =>                  {                      defaultResponseMessage.Content = $"感谢您的评价（{requestMessage.Content}）！我们需要您的意见或建议，欢迎向我们反馈！ <a href=\"https://github.com/JeffreySu/WeiXinMPSDK/issues/new\">点击这里</a>";                      return defaultResponseMessage;                  })                  .SelectMenuKeywords(new[] { "110"' "111" }' () =>                  {                      defaultResponseMessage.Content = $"这里只是演示，可以同时支持多个选择菜单";                      return defaultResponseMessage;                  })                      //“一次订阅消息”接口测试                  .Keyword("订阅"' () =>                  {                      defaultResponseMessage.Content = "点击打开：https://sdk.weixin.senparc.com/SubscribeMsg";                      return defaultResponseMessage;                  })                  //正则表达式                  .Regex(@"^\d+#\d+$"' () =>                  {                      defaultResponseMessage.Content = string.Format("您输入了：{0}，符合正则表达式：^\\d+#\\d+$"' requestMessage.Content);                      return defaultResponseMessage;                  })                    //当 Default 使用异步方法时，需要写在最后一个，且 requestMessage.StartHandler() 前需要使用 await 等待异步方法执行；                  //当 Default 使用同步方法，不一定要在最后一个'并且不需要使用 await                  .Default(async () =>                  {                      var result = new StringBuilder();                      result.AppendFormat("您刚才发送了文字信息：{0}\r\n\r\n"' requestMessage.Content);                        var currentMessageContext = await base.GetCurrentMessageContext();                      if (currentMessageContext.RequestMessages.Count > 1)                      {                          result.AppendFormat("您刚才还发送了如下消息（{0}/{1}）：\r\n"' currentMessageContext.RequestMessages.Count'                              currentMessageContext.StorageData);                          for (int i = currentMessageContext.RequestMessages.Count - 2; i >= 0; i--)                          {                              var historyMessage = currentMessageContext.RequestMessages[i];                              result.AppendFormat("{0} 【{1}】{2}\r\n"'                                  historyMessage.CreateTime.ToString("HH:mm:ss")'                                  historyMessage.MsgType.ToString()'                                  (historyMessage is RequestMessageText)                                      ? (historyMessage as RequestMessageText).Content                                      : "[非文字类型]"                                  );                          }                          result.AppendLine("\r\n");                      }                        result.AppendFormat("如果您在{0}分钟内连续发送消息，记录将被自动保留（当前设置：最多记录{1}条）。过期后记录将会自动清除。\r\n"'                          GlobalMessageContext.ExpireMinutes' GlobalMessageContext.MaxRecordCount);                      result.AppendLine("\r\n");                      result.AppendLine(                          "您还可以发送【位置】【图片】【语音】【视频】等类型的信息（注意是这几种类型，不是这几个文字），查看不同格式的回复。\r\nSDK官方地址：https://sdk.weixin.senparc.com");                        defaultResponseMessage.Content = result.ToString();                        return defaultResponseMessage;                  });
Magic Number,Senparc.Weixin.MP.Sample.CommonService.CustomMessageHandler,CustomMessageHandler,D:\research\architectureSmells\repos\JeffreySu_WeiXinMPSDK\Samples\net45-mvc\Senparc.Weixin.MP.Sample.CommonService\MessageHandlers\CustomMessageHandler\Async\CustomMessageHandlerAsync_Events.cs,OnTextRequestAsync,The following statement contains a magic number: var requestHandler = await requestMessage.StartHandler()                  //关键字不区分大小写，按照顺序匹配成功后将不再运行下面的逻辑                  .Keyword("约束"' () =>                  {                      defaultResponseMessage.Content =                      @"您正在进行微信内置浏览器约束判断测试。您可以：  <a href=""https://sdk.weixin.senparc.com/FilterTest/"">点击这里</a>进行客户端约束测试（地址：https://sdk.weixin.senparc.com/FilterTest/），如果在微信外打开将直接返回文字。  或：  <a href=""https://sdk.weixin.senparc.com/FilterTest/Redirect"">点击这里</a>进行客户端约束测试（地址：https://sdk.weixin.senparc.com/FilterTest/Redirect），如果在微信外打开将重定向一次URL。";                      return defaultResponseMessage;                  }).                  //匹配任一关键字                  Keywords(new[] { "托管"' "代理" }' () =>                  {                      //开始用代理托管，把请求转到其他服务器上去，然后拿回结果                      //甚至也可以将所有请求在DefaultResponseMessage()中托管到外部。                        var dt1 = SystemTime.Now; //计时开始                        var agentXml = RequestDocument.ToString();                        #region 暂时转发到SDK线上Demo                        agentUrl = "https://sdk.weixin.senparc.com/weixin";                      //agentToken = WebConfigurationManager.AppSettings["WeixinToken"];//Token                        //修改内容，防止死循环                      var agentDoc = XDocument.Parse(agentXml);                      agentDoc.Root.Element("Content").SetValue("代理转发文字：" + requestMessage.Content);                      agentDoc.Root.Element("CreateTime").SetValue(DateTimeHelper.GetUnixDateTime(SystemTime.Now));//修改时间，防止去重                      agentDoc.Root.Element("MsgId").SetValue("123");//防止去重                      agentXml = agentDoc.ToString();                        #endregion                        var responseXml = MessageAgent.RequestXml(this' agentUrl' agentToken' agentXml);                      //获取返回的XML                      //上面的方法也可以使用扩展方法：this.RequestResponseMessage(this'agentUrl' agentToken' RequestDocument.ToString());                        /* 如果有WeiweihiKey，可以直接使用下面的这个MessageAgent.RequestWeiweihiXml()方法。                      * WeiweihiKey专门用于对接www.weiweihi.com平台，获取方式见：https://www.weiweihi.com/ApiDocuments/Item/25#51                      */                      //var responseXml = MessageAgent.RequestWeiweihiXml(weiweihiKey' RequestDocument.ToString());//获取Weiweihi返回的XML                        var dt2 = SystemTime.Now; //计时结束                        //转成实体。                      /* 如果要写成一行，可以直接用：                      * responseMessage = MessageAgent.RequestResponseMessage(agentUrl' agentToken' RequestDocument.ToString());                      * 或                      *                      */                      var msg = string.Format("\r\n\r\n代理过程总耗时：{0}毫秒"' (dt2 - dt1).Milliseconds);                      var agentResponseMessage = responseXml.CreateResponseMessage(this.MessageEntityEnlightener);                      if (agentResponseMessage is ResponseMessageText)                      {                          (agentResponseMessage as ResponseMessageText).Content += msg;                      }                      else if (agentResponseMessage is ResponseMessageNews)                      {                          (agentResponseMessage as ResponseMessageNews).Articles[0].Description += msg;                      }                      return agentResponseMessage;//可能出现多种类型，直接在这里返回                  })                  .Keywords(new[] { "测试"' "退出" }' () =>                  {                      /*                       * 这是一个特殊的过程，此请求通常来自于微微嗨（http://www.weiweihi.com）的“盛派网络小助手”应用请求（https://www.weiweihi.com/User/App/Detail/1），                       * 用于演示微微嗨应用商店的处理过程，由于微微嗨的应用内部可以单独设置对话过期时间，所以这里通常不需要考虑对话状态，只要做最简单的响应。                       */                      if (defaultResponseMessage.Content == "测试")                      {                          //进入APP测试                          defaultResponseMessage.Content = "您已经进入【盛派网络小助手】的测试程序，请发送任意信息进行测试。发送文字【退出】退出测试对话。10分钟内无任何交互将自动退出应用对话状态。";                      }                      else                      {                          //退出APP测试                          defaultResponseMessage.Content = "您已经退出【盛派网络小助手】的测试程序。";                      }                      return defaultResponseMessage;                  })                  .Keyword("AsyncTest"' () =>                  {                      //异步并发测试（提供给单元测试使用）  #if NET45                      var begin = SystemTime.Now;                      int t1' t2' t3;                      System.Threading.ThreadPool.GetAvailableThreads(out t1' out t3);                      System.Threading.ThreadPool.GetMaxThreads(out t2' out t3);                      System.Threading.Thread.Sleep(TimeSpan.FromSeconds(4));                      var end = SystemTime.Now;                      var thread = System.Threading.Thread.CurrentThread;                      defaultResponseMessage.Content = string.Format("TId:{0}\tApp:{1}\tBegin:{2:mm:ss'ffff}\tEnd:{3:mm:ss'ffff}\tTPool：{4}"'                              thread.ManagedThreadId'                              HttpContext.Current != null ? HttpContext.Current.ApplicationInstance.GetHashCode() : -1'                              begin'                              end'                              t2 - t1                              );  #endif                        return defaultResponseMessage;                  })                  .Keyword("OPEN"' () =>                  {                      var openResponseMessage = requestMessage.CreateResponseMessage<ResponseMessageNews>();                      openResponseMessage.Articles.Add(new Article()                      {                          Title = "开放平台微信授权测试！"'                          Description = @"点击进入Open授权页面。    授权之后，您的微信所收到的消息将转发到第三方（盛派网络小助手）的服务器上，并获得对应的回复。    测试完成后，您可以登陆公众号后台取消授权。"'                          Url = "https://sdk.weixin.senparc.com/OpenOAuth/JumpToMpOAuth"                      });                      return openResponseMessage;                  })                  .Keyword("错误"' () =>                  {                      var errorResponseMessage = requestMessage.CreateResponseMessage<ResponseMessageText>();                      //因为没有设置errorResponseMessage.Content，所以这小消息将无法正确返回。                      return errorResponseMessage;                  })                  .Keyword("容错"' () =>                  {                      Thread.Sleep(4900);//故意延时1.5秒，让微信多次发送消息过来，观察返回结果                      var faultTolerantResponseMessage = requestMessage.CreateResponseMessage<ResponseMessageText>();                      faultTolerantResponseMessage.Content = string.Format("测试容错，MsgId：{0}，Ticks：{1}"' requestMessage.MsgId'                          SystemTime.Now.Ticks);                      return faultTolerantResponseMessage;                  })                  .Keyword("TM"' () =>                  {                      var openId = requestMessage.FromUserName;                      var checkCode = Guid.NewGuid().ToString("n").Substring(0' 3);//为了防止openId泄露造成骚扰，这里启用验证码                      TemplateMessageCollection[checkCode] = openId;                      defaultResponseMessage.Content = string.Format(@"新的验证码为：{0}，请在网页上输入。网址：https://sdk.weixin.senparc.com/AsyncMethods"' checkCode);                      return defaultResponseMessage;                  })                  .Keyword("OPENID"' () =>                  {                      var openId = requestMessage.FromUserName;//获取OpenId                      var userInfo = AdvancedAPIs.UserApi.Info(appId' openId' Language.zh_CN);                        defaultResponseMessage.Content = string.Format(                          "您的OpenID为：{0}\r\n昵称：{1}\r\n性别：{2}\r\n地区（国家/省/市）：{3}/{4}/{5}\r\n关注时间：{6}\r\n关注状态：{7}"'                          requestMessage.FromUserName' userInfo.nickname' (WeixinSex)userInfo.sex' userInfo.country' userInfo.province' userInfo.city' DateTimeHelper.GetDateTimeFromXml(userInfo.subscribe_time)' userInfo.subscribe);                      return defaultResponseMessage;                  })                  .Keyword("EX"' () =>                  {                      var ex = new WeixinException("openid:" + requestMessage.FromUserName + ":这是一条测试异常信息");//回调过程在global的ConfigWeixinTraceLog()方法中                      defaultResponseMessage.Content = "请等待异步模板消息发送到此界面上（自动延时数秒）。\r\n当前时间：" + SystemTime.Now.ToString();                      return defaultResponseMessage;                  })                  .Keyword("MUTE"' () => //不回复任何消息                  {                      //方案一：                      return new SuccessResponseMessage();                        //方案二：                      var muteResponseMessage = base.CreateResponseMessage<ResponseMessageNoResponse>();                      return muteResponseMessage;                        //方案三：                      base.TextResponseMessage = "success";                      return null;                        //方案四：                      return null;//在 Action 中结合使用 return new FixWeixinBugWeixinResult(messageHandler);                  })                  .Keyword("JSSDK"' () =>                  {                      defaultResponseMessage.Content = "点击打开：https://sdk.weixin.senparc.com/WeixinJsSdk";                      return defaultResponseMessage;                  })                      //选择菜单，关键字：101（微信服务器端最终格式：id="s:101"'content="满意"）                  .SelectMenuKeyword("101"' () =>                  {                      defaultResponseMessage.Content = $"感谢您的评价（{requestMessage.Content}）！我们会一如既往为提高企业和开发者生产力而努力！";                      return defaultResponseMessage;                  })                  //选择菜单，关键字：102（微信服务器端最终格式：id="s:102"'content="一般"）                  .SelectMenuKeyword("102"' () =>                  {                      defaultResponseMessage.Content = $"感谢您的评价（{requestMessage.Content}）！希望我们的服务能让您越来越满意！";                      return defaultResponseMessage;                  })                  //选择菜单，关键字：103（微信服务器端最终格式：id="s:103"'content="不满意"）                  .SelectMenuKeyword("103"' () =>                  {                      defaultResponseMessage.Content = $"感谢您的评价（{requestMessage.Content}）！我们需要您的意见或建议，欢迎向我们反馈！ <a href=\"https://github.com/JeffreySu/WeiXinMPSDK/issues/new\">点击这里</a>";                      return defaultResponseMessage;                  })                  .SelectMenuKeywords(new[] { "110"' "111" }' () =>                  {                      defaultResponseMessage.Content = $"这里只是演示，可以同时支持多个选择菜单";                      return defaultResponseMessage;                  })                      //“一次订阅消息”接口测试                  .Keyword("订阅"' () =>                  {                      defaultResponseMessage.Content = "点击打开：https://sdk.weixin.senparc.com/SubscribeMsg";                      return defaultResponseMessage;                  })                  //正则表达式                  .Regex(@"^\d+#\d+$"' () =>                  {                      defaultResponseMessage.Content = string.Format("您输入了：{0}，符合正则表达式：^\\d+#\\d+$"' requestMessage.Content);                      return defaultResponseMessage;                  })                    //当 Default 使用异步方法时，需要写在最后一个，且 requestMessage.StartHandler() 前需要使用 await 等待异步方法执行；                  //当 Default 使用同步方法，不一定要在最后一个'并且不需要使用 await                  .Default(async () =>                  {                      var result = new StringBuilder();                      result.AppendFormat("您刚才发送了文字信息：{0}\r\n\r\n"' requestMessage.Content);                        var currentMessageContext = await base.GetCurrentMessageContext();                      if (currentMessageContext.RequestMessages.Count > 1)                      {                          result.AppendFormat("您刚才还发送了如下消息（{0}/{1}）：\r\n"' currentMessageContext.RequestMessages.Count'                              currentMessageContext.StorageData);                          for (int i = currentMessageContext.RequestMessages.Count - 2; i >= 0; i--)                          {                              var historyMessage = currentMessageContext.RequestMessages[i];                              result.AppendFormat("{0} 【{1}】{2}\r\n"'                                  historyMessage.CreateTime.ToString("HH:mm:ss")'                                  historyMessage.MsgType.ToString()'                                  (historyMessage is RequestMessageText)                                      ? (historyMessage as RequestMessageText).Content                                      : "[非文字类型]"                                  );                          }                          result.AppendLine("\r\n");                      }                        result.AppendFormat("如果您在{0}分钟内连续发送消息，记录将被自动保留（当前设置：最多记录{1}条）。过期后记录将会自动清除。\r\n"'                          GlobalMessageContext.ExpireMinutes' GlobalMessageContext.MaxRecordCount);                      result.AppendLine("\r\n");                      result.AppendLine(                          "您还可以发送【位置】【图片】【语音】【视频】等类型的信息（注意是这几种类型，不是这几个文字），查看不同格式的回复。\r\nSDK官方地址：https://sdk.weixin.senparc.com");                        defaultResponseMessage.Content = result.ToString();                        return defaultResponseMessage;                  });
Magic Number,Senparc.Weixin.MP.Sample.CommonService.CustomMessageHandler,CustomMessageHandler,D:\research\architectureSmells\repos\JeffreySu_WeiXinMPSDK\Samples\net45-mvc\Senparc.Weixin.MP.Sample.CommonService\MessageHandlers\CustomMessageHandler\Async\CustomMessageHandlerAsync_Events.cs,OnTextRequestAsync,The following statement contains a magic number: var requestHandler = await requestMessage.StartHandler()                  //关键字不区分大小写，按照顺序匹配成功后将不再运行下面的逻辑                  .Keyword("约束"' () =>                  {                      defaultResponseMessage.Content =                      @"您正在进行微信内置浏览器约束判断测试。您可以：  <a href=""https://sdk.weixin.senparc.com/FilterTest/"">点击这里</a>进行客户端约束测试（地址：https://sdk.weixin.senparc.com/FilterTest/），如果在微信外打开将直接返回文字。  或：  <a href=""https://sdk.weixin.senparc.com/FilterTest/Redirect"">点击这里</a>进行客户端约束测试（地址：https://sdk.weixin.senparc.com/FilterTest/Redirect），如果在微信外打开将重定向一次URL。";                      return defaultResponseMessage;                  }).                  //匹配任一关键字                  Keywords(new[] { "托管"' "代理" }' () =>                  {                      //开始用代理托管，把请求转到其他服务器上去，然后拿回结果                      //甚至也可以将所有请求在DefaultResponseMessage()中托管到外部。                        var dt1 = SystemTime.Now; //计时开始                        var agentXml = RequestDocument.ToString();                        #region 暂时转发到SDK线上Demo                        agentUrl = "https://sdk.weixin.senparc.com/weixin";                      //agentToken = WebConfigurationManager.AppSettings["WeixinToken"];//Token                        //修改内容，防止死循环                      var agentDoc = XDocument.Parse(agentXml);                      agentDoc.Root.Element("Content").SetValue("代理转发文字：" + requestMessage.Content);                      agentDoc.Root.Element("CreateTime").SetValue(DateTimeHelper.GetUnixDateTime(SystemTime.Now));//修改时间，防止去重                      agentDoc.Root.Element("MsgId").SetValue("123");//防止去重                      agentXml = agentDoc.ToString();                        #endregion                        var responseXml = MessageAgent.RequestXml(this' agentUrl' agentToken' agentXml);                      //获取返回的XML                      //上面的方法也可以使用扩展方法：this.RequestResponseMessage(this'agentUrl' agentToken' RequestDocument.ToString());                        /* 如果有WeiweihiKey，可以直接使用下面的这个MessageAgent.RequestWeiweihiXml()方法。                      * WeiweihiKey专门用于对接www.weiweihi.com平台，获取方式见：https://www.weiweihi.com/ApiDocuments/Item/25#51                      */                      //var responseXml = MessageAgent.RequestWeiweihiXml(weiweihiKey' RequestDocument.ToString());//获取Weiweihi返回的XML                        var dt2 = SystemTime.Now; //计时结束                        //转成实体。                      /* 如果要写成一行，可以直接用：                      * responseMessage = MessageAgent.RequestResponseMessage(agentUrl' agentToken' RequestDocument.ToString());                      * 或                      *                      */                      var msg = string.Format("\r\n\r\n代理过程总耗时：{0}毫秒"' (dt2 - dt1).Milliseconds);                      var agentResponseMessage = responseXml.CreateResponseMessage(this.MessageEntityEnlightener);                      if (agentResponseMessage is ResponseMessageText)                      {                          (agentResponseMessage as ResponseMessageText).Content += msg;                      }                      else if (agentResponseMessage is ResponseMessageNews)                      {                          (agentResponseMessage as ResponseMessageNews).Articles[0].Description += msg;                      }                      return agentResponseMessage;//可能出现多种类型，直接在这里返回                  })                  .Keywords(new[] { "测试"' "退出" }' () =>                  {                      /*                       * 这是一个特殊的过程，此请求通常来自于微微嗨（http://www.weiweihi.com）的“盛派网络小助手”应用请求（https://www.weiweihi.com/User/App/Detail/1），                       * 用于演示微微嗨应用商店的处理过程，由于微微嗨的应用内部可以单独设置对话过期时间，所以这里通常不需要考虑对话状态，只要做最简单的响应。                       */                      if (defaultResponseMessage.Content == "测试")                      {                          //进入APP测试                          defaultResponseMessage.Content = "您已经进入【盛派网络小助手】的测试程序，请发送任意信息进行测试。发送文字【退出】退出测试对话。10分钟内无任何交互将自动退出应用对话状态。";                      }                      else                      {                          //退出APP测试                          defaultResponseMessage.Content = "您已经退出【盛派网络小助手】的测试程序。";                      }                      return defaultResponseMessage;                  })                  .Keyword("AsyncTest"' () =>                  {                      //异步并发测试（提供给单元测试使用）  #if NET45                      var begin = SystemTime.Now;                      int t1' t2' t3;                      System.Threading.ThreadPool.GetAvailableThreads(out t1' out t3);                      System.Threading.ThreadPool.GetMaxThreads(out t2' out t3);                      System.Threading.Thread.Sleep(TimeSpan.FromSeconds(4));                      var end = SystemTime.Now;                      var thread = System.Threading.Thread.CurrentThread;                      defaultResponseMessage.Content = string.Format("TId:{0}\tApp:{1}\tBegin:{2:mm:ss'ffff}\tEnd:{3:mm:ss'ffff}\tTPool：{4}"'                              thread.ManagedThreadId'                              HttpContext.Current != null ? HttpContext.Current.ApplicationInstance.GetHashCode() : -1'                              begin'                              end'                              t2 - t1                              );  #endif                        return defaultResponseMessage;                  })                  .Keyword("OPEN"' () =>                  {                      var openResponseMessage = requestMessage.CreateResponseMessage<ResponseMessageNews>();                      openResponseMessage.Articles.Add(new Article()                      {                          Title = "开放平台微信授权测试！"'                          Description = @"点击进入Open授权页面。    授权之后，您的微信所收到的消息将转发到第三方（盛派网络小助手）的服务器上，并获得对应的回复。    测试完成后，您可以登陆公众号后台取消授权。"'                          Url = "https://sdk.weixin.senparc.com/OpenOAuth/JumpToMpOAuth"                      });                      return openResponseMessage;                  })                  .Keyword("错误"' () =>                  {                      var errorResponseMessage = requestMessage.CreateResponseMessage<ResponseMessageText>();                      //因为没有设置errorResponseMessage.Content，所以这小消息将无法正确返回。                      return errorResponseMessage;                  })                  .Keyword("容错"' () =>                  {                      Thread.Sleep(4900);//故意延时1.5秒，让微信多次发送消息过来，观察返回结果                      var faultTolerantResponseMessage = requestMessage.CreateResponseMessage<ResponseMessageText>();                      faultTolerantResponseMessage.Content = string.Format("测试容错，MsgId：{0}，Ticks：{1}"' requestMessage.MsgId'                          SystemTime.Now.Ticks);                      return faultTolerantResponseMessage;                  })                  .Keyword("TM"' () =>                  {                      var openId = requestMessage.FromUserName;                      var checkCode = Guid.NewGuid().ToString("n").Substring(0' 3);//为了防止openId泄露造成骚扰，这里启用验证码                      TemplateMessageCollection[checkCode] = openId;                      defaultResponseMessage.Content = string.Format(@"新的验证码为：{0}，请在网页上输入。网址：https://sdk.weixin.senparc.com/AsyncMethods"' checkCode);                      return defaultResponseMessage;                  })                  .Keyword("OPENID"' () =>                  {                      var openId = requestMessage.FromUserName;//获取OpenId                      var userInfo = AdvancedAPIs.UserApi.Info(appId' openId' Language.zh_CN);                        defaultResponseMessage.Content = string.Format(                          "您的OpenID为：{0}\r\n昵称：{1}\r\n性别：{2}\r\n地区（国家/省/市）：{3}/{4}/{5}\r\n关注时间：{6}\r\n关注状态：{7}"'                          requestMessage.FromUserName' userInfo.nickname' (WeixinSex)userInfo.sex' userInfo.country' userInfo.province' userInfo.city' DateTimeHelper.GetDateTimeFromXml(userInfo.subscribe_time)' userInfo.subscribe);                      return defaultResponseMessage;                  })                  .Keyword("EX"' () =>                  {                      var ex = new WeixinException("openid:" + requestMessage.FromUserName + ":这是一条测试异常信息");//回调过程在global的ConfigWeixinTraceLog()方法中                      defaultResponseMessage.Content = "请等待异步模板消息发送到此界面上（自动延时数秒）。\r\n当前时间：" + SystemTime.Now.ToString();                      return defaultResponseMessage;                  })                  .Keyword("MUTE"' () => //不回复任何消息                  {                      //方案一：                      return new SuccessResponseMessage();                        //方案二：                      var muteResponseMessage = base.CreateResponseMessage<ResponseMessageNoResponse>();                      return muteResponseMessage;                        //方案三：                      base.TextResponseMessage = "success";                      return null;                        //方案四：                      return null;//在 Action 中结合使用 return new FixWeixinBugWeixinResult(messageHandler);                  })                  .Keyword("JSSDK"' () =>                  {                      defaultResponseMessage.Content = "点击打开：https://sdk.weixin.senparc.com/WeixinJsSdk";                      return defaultResponseMessage;                  })                      //选择菜单，关键字：101（微信服务器端最终格式：id="s:101"'content="满意"）                  .SelectMenuKeyword("101"' () =>                  {                      defaultResponseMessage.Content = $"感谢您的评价（{requestMessage.Content}）！我们会一如既往为提高企业和开发者生产力而努力！";                      return defaultResponseMessage;                  })                  //选择菜单，关键字：102（微信服务器端最终格式：id="s:102"'content="一般"）                  .SelectMenuKeyword("102"' () =>                  {                      defaultResponseMessage.Content = $"感谢您的评价（{requestMessage.Content}）！希望我们的服务能让您越来越满意！";                      return defaultResponseMessage;                  })                  //选择菜单，关键字：103（微信服务器端最终格式：id="s:103"'content="不满意"）                  .SelectMenuKeyword("103"' () =>                  {                      defaultResponseMessage.Content = $"感谢您的评价（{requestMessage.Content}）！我们需要您的意见或建议，欢迎向我们反馈！ <a href=\"https://github.com/JeffreySu/WeiXinMPSDK/issues/new\">点击这里</a>";                      return defaultResponseMessage;                  })                  .SelectMenuKeywords(new[] { "110"' "111" }' () =>                  {                      defaultResponseMessage.Content = $"这里只是演示，可以同时支持多个选择菜单";                      return defaultResponseMessage;                  })                      //“一次订阅消息”接口测试                  .Keyword("订阅"' () =>                  {                      defaultResponseMessage.Content = "点击打开：https://sdk.weixin.senparc.com/SubscribeMsg";                      return defaultResponseMessage;                  })                  //正则表达式                  .Regex(@"^\d+#\d+$"' () =>                  {                      defaultResponseMessage.Content = string.Format("您输入了：{0}，符合正则表达式：^\\d+#\\d+$"' requestMessage.Content);                      return defaultResponseMessage;                  })                    //当 Default 使用异步方法时，需要写在最后一个，且 requestMessage.StartHandler() 前需要使用 await 等待异步方法执行；                  //当 Default 使用同步方法，不一定要在最后一个'并且不需要使用 await                  .Default(async () =>                  {                      var result = new StringBuilder();                      result.AppendFormat("您刚才发送了文字信息：{0}\r\n\r\n"' requestMessage.Content);                        var currentMessageContext = await base.GetCurrentMessageContext();                      if (currentMessageContext.RequestMessages.Count > 1)                      {                          result.AppendFormat("您刚才还发送了如下消息（{0}/{1}）：\r\n"' currentMessageContext.RequestMessages.Count'                              currentMessageContext.StorageData);                          for (int i = currentMessageContext.RequestMessages.Count - 2; i >= 0; i--)                          {                              var historyMessage = currentMessageContext.RequestMessages[i];                              result.AppendFormat("{0} 【{1}】{2}\r\n"'                                  historyMessage.CreateTime.ToString("HH:mm:ss")'                                  historyMessage.MsgType.ToString()'                                  (historyMessage is RequestMessageText)                                      ? (historyMessage as RequestMessageText).Content                                      : "[非文字类型]"                                  );                          }                          result.AppendLine("\r\n");                      }                        result.AppendFormat("如果您在{0}分钟内连续发送消息，记录将被自动保留（当前设置：最多记录{1}条）。过期后记录将会自动清除。\r\n"'                          GlobalMessageContext.ExpireMinutes' GlobalMessageContext.MaxRecordCount);                      result.AppendLine("\r\n");                      result.AppendLine(                          "您还可以发送【位置】【图片】【语音】【视频】等类型的信息（注意是这几种类型，不是这几个文字），查看不同格式的回复。\r\nSDK官方地址：https://sdk.weixin.senparc.com");                        defaultResponseMessage.Content = result.ToString();                        return defaultResponseMessage;                  });
Magic Number,Senparc.Weixin.MP.Sample.CommonService.CustomMessageHandler,CustomMessageHandler,D:\research\architectureSmells\repos\JeffreySu_WeiXinMPSDK\Samples\net45-mvc\Senparc.Weixin.MP.Sample.CommonService\MessageHandlers\CustomMessageHandler\Async\CustomMessageHandlerAsync_Events.cs,OnImageRequestAsync,The following statement contains a magic number: base.GlobalMessageContext.GetMessageContext(requestMessage).RequestMessages.Count() % 2 == 0
Magic Number,Senparc.Weixin.MP.Sample.CommonService.CustomMessageHandler,CustomMessageHandler,D:\research\architectureSmells\repos\JeffreySu_WeiXinMPSDK\Samples\net45-mvc\Senparc.Weixin.MP.Sample.CommonService\MessageHandlers\CustomMessageHandler\Async\CustomMessageHandlerAsync_Events.cs,OnVideoRequestAsync,The following statement contains a magic number: Task.Factory.StartNew(async () =>               {                   //上传素材                   var dir = ServerUtility.ContentRootMapPath("~/App_Data/TempVideo/");                   var file = await MediaApi.GetAsync(appId' requestMessage.MediaId' dir);                   var uploadResult = await MediaApi.UploadTemporaryMediaAsync(appId' UploadMediaFileType.video' file' 50000);                   await CustomApi.SendVideoAsync(appId' base.WeixinOpenId' uploadResult.media_id' "这是您刚才发送的视频"' "这是一条视频消息");               }).ContinueWith(async task =>               {                   if (task.Exception != null)                   {                       WeixinTrace.Log("OnVideoRequest()储存Video过程发生错误："' task.Exception.Message);                         var msg = string.Format("上传素材出错：{0}\r\n{1}"'                                  task.Exception.Message'                                  task.Exception.InnerException != null                                      ? task.Exception.InnerException.Message                                      : null);                       await CustomApi.SendTextAsync(appId' base.WeixinOpenId' msg);                   }               });
Magic Number,Senparc.Weixin.MP.Sample.CommonService.CustomMessageHandler,CustomMessageHandler,D:\research\architectureSmells\repos\JeffreySu_WeiXinMPSDK\Samples\net45-mvc\Senparc.Weixin.MP.Sample.CommonService\MessageHandlers\CustomMessageHandler\Async\CustomMessageHandlerAsync_Events.cs,OnEvent_ClickRequest,The following statement contains a magic number: switch (requestMessage.EventKey)              {                  case "OneClick":                      {                          //这个过程实际已经在OnTextOrEventRequest中命中“OneClick”关键字，并完成回复，这里不会执行到。                          var strongResponseMessage = CreateResponseMessage<ResponseMessageText>();                          reponseMessage = strongResponseMessage;                          strongResponseMessage.Content = "您点击了底部按钮。\r\n为了测试微信软件换行bug的应对措施，这里做了一个——\r\n换行";                      }                      break;                  case "SubClickRoot_Text":                      {                          var strongResponseMessage = CreateResponseMessage<ResponseMessageText>();                          reponseMessage = strongResponseMessage;                          strongResponseMessage.Content = "您点击了子菜单按钮。";                      }                      break;                  case "SubClickRoot_News":                      {                          var strongResponseMessage = CreateResponseMessage<ResponseMessageNews>();                          reponseMessage = strongResponseMessage;                          strongResponseMessage.Articles.Add(new Article()                          {                              Title = "您点击了子菜单图文按钮"'                              Description = "您点击了子菜单图文按钮，这是一条图文信息。这个区域是Description内容\r\n可以使用\\r\\n进行换行。"'                              PicUrl = "https://sdk.weixin.senparc.com/Images/qrcode.jpg"'                              Url = "https://sdk.weixin.senparc.com"                          });                            //随机添加一条图文，或只输出一条图文信息                          if (SystemTime.Now.Second % 2 == 0)                          {                              strongResponseMessage.Articles.Add(new Article()                              {                                  Title = "这是随机产生的第二条图文信息，用于测试多条图文的样式"'                                  Description = "这是随机产生的第二条图文信息，用于测试多条图文的样式"'                                  PicUrl = "https://sdk.weixin.senparc.com/Images/qrcode.jpg"'                                  Url = "https://sdk.weixin.senparc.com"                              });                          }                      }                      break;                  case "SubClickRoot_Music":                      {                          //上传缩略图    #if NET45                          var filePath = "~/Images/Logo.thumb.jpg";  #else                             var filePath = "~/wwwroot/Images/Logo.thumb.jpg";  #endif                            var uploadResult = AdvancedAPIs.MediaApi.UploadTemporaryMedia(appId' UploadMediaFileType.thumb'                                                                      ServerUtility.ContentRootMapPath(filePath));                          //PS：缩略图官方没有特别提示文件大小限制，实际测试哪怕114K也会返回文件过大的错误，因此尽量控制在小一点（当前图片39K）                            //设置音乐信息                          var strongResponseMessage = CreateResponseMessage<ResponseMessageMusic>();                          reponseMessage = strongResponseMessage;                          strongResponseMessage.Music.Title = "天籁之音";                          strongResponseMessage.Music.Description = "真的是天籁之音";                          strongResponseMessage.Music.MusicUrl = "https://sdk.weixin.senparc.com/Content/music1.mp3";                          strongResponseMessage.Music.HQMusicUrl = "https://sdk.weixin.senparc.com/Content/music1.mp3";                          strongResponseMessage.Music.ThumbMediaId = uploadResult.thumb_media_id;                      }                      break;                  case "SubClickRoot_Image":                      {                          //上传图片  #if NET45                          var filePath = "~/Images/Logo.jpg";  #else                          var filePath = "~/wwwroot/Images/Logo.jpg";  #endif                            var uploadResult = AdvancedAPIs.MediaApi.UploadTemporaryMedia(appId' UploadMediaFileType.image'                                                                       ServerUtility.ContentRootMapPath(filePath));                          //设置图片信息                          var strongResponseMessage = CreateResponseMessage<ResponseMessageImage>();                          reponseMessage = strongResponseMessage;                          strongResponseMessage.Image.MediaId = uploadResult.media_id;                      }                      break;                  case "SendMenu"://菜单消息                      {                          //注意：                          //1、此接口可以在任意地方调用（包括后台线程），此处演示为通过                          //2、一下"s:"前缀只是 Senparc.Weixin 的内部约定，可以使用 OnTextRequest事件中的 requestHandler.SelectMenuKeyword() 方法自动匹配到后缀（如101）                            var menuContentList = new List<SendMenuContent>(){                              new SendMenuContent("101"'"满意")'                              new SendMenuContent("102"'"一般")'                              new SendMenuContent("103"'"不满意")                          };                          //使用异步接口                          CustomApi.SendMenuAsync(appId' OpenId' "请对 Senparc.Weixin SDK 给出您的评价"' menuContentList' "感谢您的参与！");                            reponseMessage = new ResponseMessageNoResponse();//不返回任何消息                      }                      break;                  case "SubClickRoot_Agent"://代理消息                      {                          //获取返回的XML                          var dt1 = SystemTime.Now;                          reponseMessage = MessageAgent.RequestResponseMessage(this' agentUrl' agentToken' RequestDocument.ToString());                          //上面的方法也可以使用扩展方法：this.RequestResponseMessage(this'agentUrl' agentToken' RequestDocument.ToString());                            var dt2 = SystemTime.Now;                            if (reponseMessage is ResponseMessageNews)                          {                              (reponseMessage as ResponseMessageNews)                                  .Articles[0]                                  .Description += string.Format("\r\n\r\n代理过程总耗时：{0}毫秒"' (dt2 - dt1).Milliseconds);                          }                      }                      break;                  case "Member"://托管代理会员信息                      {                          //原始方法为：MessageAgent.RequestXml(this'agentUrl' agentToken' RequestDocument.ToString());//获取返回的XML                          reponseMessage = this.RequestResponseMessage(agentUrl' agentToken' RequestDocument.ToString());                      }                      break;                  case "OAuth"://OAuth授权测试                      {                          var strongResponseMessage = CreateResponseMessage<ResponseMessageNews>();                            strongResponseMessage.Articles.Add(new Article()                          {                              Title = "OAuth2.0测试"'                              Description = "选择下面两种不同的方式进行测试，区别在于授权成功后，最后停留的页面。"'                              //Url = "https://sdk.weixin.senparc.com/oauth2"'                              //PicUrl = "https://sdk.weixin.senparc.com/Images/qrcode.jpg"                          });                            strongResponseMessage.Articles.Add(new Article()                          {                              Title = "OAuth2.0测试（不带returnUrl），测试环境可使用"'                              Description = "OAuth2.0测试（不带returnUrl）"'                              Url = "https://sdk.weixin.senparc.com/oauth2"'                              PicUrl = "https://sdk.weixin.senparc.com/Images/qrcode.jpg"                          });                            var returnUrl = "/OAuth2/TestReturnUrl";                          strongResponseMessage.Articles.Add(new Article()                          {                              Title = "OAuth2.0测试（带returnUrl），生产环境强烈推荐使用"'                              Description = "OAuth2.0测试（带returnUrl）"'                              Url = "https://sdk.weixin.senparc.com/oauth2?returnUrl=" + returnUrl.UrlEncode()'                              PicUrl = "https://sdk.weixin.senparc.com/Images/qrcode.jpg"                          });                            reponseMessage = strongResponseMessage;                        }                      break;                  case "Description":                      {                          var strongResponseMessage = CreateResponseMessage<ResponseMessageText>();                          strongResponseMessage.Content = GetWelcomeInfo();                          reponseMessage = strongResponseMessage;                      }                      break;                  case "SubClickRoot_PicPhotoOrAlbum":                      {                          var strongResponseMessage = CreateResponseMessage<ResponseMessageText>();                          reponseMessage = strongResponseMessage;                          strongResponseMessage.Content = "您点击了【微信拍照】按钮。系统将会弹出拍照或者相册发图。";                      }                      break;                  case "SubClickRoot_ScancodePush":                      {                          var strongResponseMessage = CreateResponseMessage<ResponseMessageText>();                          reponseMessage = strongResponseMessage;                          strongResponseMessage.Content = "您点击了【微信扫码】按钮。";                      }                      break;                  case "ConditionalMenu_Male":                      {                          var strongResponseMessage = CreateResponseMessage<ResponseMessageText>();                          reponseMessage = strongResponseMessage;                          strongResponseMessage.Content = "您点击了个性化菜单按钮，您的微信性别设置为：男。";                      }                      break;                  case "ConditionalMenu_Femle":                      {                          var strongResponseMessage = CreateResponseMessage<ResponseMessageText>();                          reponseMessage = strongResponseMessage;                          strongResponseMessage.Content = "您点击了个性化菜单按钮，您的微信性别设置为：女。";                      }                      break;                  case "GetNewMediaId"://获取新的MediaId                      {                          var strongResponseMessage = CreateResponseMessage<ResponseMessageText>();                          try                          {                              var result = AdvancedAPIs.MediaApi.UploadForeverMedia(appId' ServerUtility.ContentRootMapPath("~/Images/logo.jpg"));                              strongResponseMessage.Content = result.media_id;                          }                          catch (Exception e)                          {                              strongResponseMessage.Content = "发生错误：" + e.Message;                              WeixinTrace.SendCustomLog("调用UploadForeverMedia()接口发生异常"' e.Message);                          }                      }                      break;                  default:                      {                          var strongResponseMessage = CreateResponseMessage<ResponseMessageText>();                          strongResponseMessage.Content = "您点击了按钮，EventKey：" + requestMessage.EventKey;                          reponseMessage = strongResponseMessage;                      }                      break;              }
Magic Number,Senparc.Weixin.MP.Sample.CommonService.MessageHandlers.WebSocket,CustomNet45WebSocketMessageHandler,D:\research\architectureSmells\repos\JeffreySu_WeiXinMPSDK\Samples\net45-mvc\Senparc.Weixin.MP.Sample.CommonService\MessageHandlers\WebSocket\CustomNet45WebSocketMessageHandler.cs,OnMessageReceiced,The following statement contains a magic number: await Task.Delay(1000);
Magic Number,Senparc.Weixin.MP.Sample.CommonService.MessageHandlers.WebSocket,CustomNet45WebSocketMessageHandler,D:\research\architectureSmells\repos\JeffreySu_WeiXinMPSDK\Samples\net45-mvc\Senparc.Weixin.MP.Sample.CommonService\MessageHandlers\WebSocket\CustomNet45WebSocketMessageHandler.cs,OnMessageReceiced,The following statement contains a magic number: var data = new                  {                      keyword1 = new TemplateDataItem("来自小程序WebSocket的模板消息")'                      keyword2 = new TemplateDataItem(SystemTime.Now.LocalDateTime.ToString())'                      keyword3 = new TemplateDataItem("Name")'                      keyword4 = new TemplateDataItem("Number")'                      keyword5 = new TemplateDataItem(100.ToString("C"))'                      keyword6 = new TemplateDataItem("400-031-8816")'                  };
Magic Number,Senparc.Weixin.MP.Sample.CommonService.WxOpenMessageHandler,CustomWxOpenMessageHandler,D:\research\architectureSmells\repos\JeffreySu_WeiXinMPSDK\Samples\net45-mvc\Senparc.Weixin.MP.Sample.CommonService\MessageHandlers\WxOpenMessageHandler\CustomWxOpenMessageHandler.cs,CustomWxOpenMessageHandler,The following statement contains a magic number: GlobalMessageContext.ExpireMinutes = 3;
Magic Number,Senparc.Weixin.MP.Sample.CommonService,EventService,D:\research\architectureSmells\repos\JeffreySu_WeiXinMPSDK\Samples\net45-mvc\Senparc.Weixin.MP.Sample.CommonService\EventService.cs,ConfigOnWeixinExceptionFunc,The following statement contains a magic number: int sleepSeconds = 3;
Magic Number,Senparc.Weixin.MP.Sample.CommonService,EventService,D:\research\architectureSmells\repos\JeffreySu_WeiXinMPSDK\Samples\net45-mvc\Senparc.Weixin.MP.Sample.CommonService\EventService.cs,ConfigOnWeixinExceptionFunc,The following statement contains a magic number: Thread.Sleep(sleepSeconds * 1000);
Magic Number,Senparc.Weixin.MP.Sample.CommonService,LocationService,D:\research\architectureSmells\repos\JeffreySu_WeiXinMPSDK\Samples\net45-mvc\Senparc.Weixin.MP.Sample.CommonService\LocationService.cs,GetResponseMessage,The following statement contains a magic number: var mapUrl = BaiduMapHelper.GetBaiduStaticMap(requestMessage.Location_X' requestMessage.Location_Y' 1' 6' markersList);
Magic Number,Senparc.Weixin.MP.Sample.CommonService,LocationService,D:\research\architectureSmells\repos\JeffreySu_WeiXinMPSDK\Samples\net45-mvc\Senparc.Weixin.MP.Sample.CommonService\LocationService.cs,GetResponseMessage,The following statement contains a magic number: var mapUrl = GoogleMapHelper.GetGoogleStaticMap(19 /*requestMessage.Scale*//*微信和GoogleMap的Scale不一致，这里建议使用固定值*/'                                                                                  markersList' mapSize);
