Implementation smell,Namespace,Class,File,Method,Description
Magic Number,Redlock.CSharp,Redlock,D:\research\architectureSmells\repos\JeffreySu_WeiXinMPSDK\src\Senparc.Weixin.Cache\Senparc.Weixin.Cache.Redis.RedLock\redlock-cs\src\Redlock.cs,Lock,The following statement contains a magic number: bool successfull = retry(DefaultRetryCount' DefaultRetryDelay' () =>              {                  try                  {                      int n = 0;                      var startTime = DateTime.Now;                        // Use keys                      for_each_redis_registered(                          redis =>                          {                              if (LockInstance(redis' resource' val' ttl)) n += 1;                          }                      );                        /*                       * Add 2 milliseconds to the drift to account for Redis expires                       * precision' which is 1 millisecond' plus 1 millisecond min drift                        * for small TTLs.                               */                      var drift = Convert.ToInt32((ttl.TotalMilliseconds * ClockDriveFactor) + 2);                      var validity_time = ttl - (DateTime.Now - startTime) - new TimeSpan(0' 0' 0' 0' drift);                        if (n >= Quorum && validity_time.TotalMilliseconds > 0)                      {                          innerLock = new Lock(resource' val' validity_time);                          return true;                      }                      else                      {                          for_each_redis_registered(                              redis =>                              {                                  UnlockInstance(redis' resource' val);                              }                          );                          return false;                      }                  }                  catch (Exception)                  { return false; }              });
