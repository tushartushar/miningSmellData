Implementation smell,Namespace,Class,File,Method,Description
Long Method,Senparc.Weixin.MP.Sample.CommonService.CustomMessageHandler,CustomMessageHandler,C:\repos\JeffreySu_WeiXinMPSDK\src\Senparc.Weixin.MP.Sample\Senparc.Weixin.MP.Sample.CommonService\MessageHandlers\CustomMessageHandler\CustomMessageHandler.cs,OnTextRequest,The method has 245 lines of code.
Long Method,Senparc.Weixin.MP.Sample.CommonService.CustomMessageHandler,CustomMessageHandler,C:\repos\JeffreySu_WeiXinMPSDK\src\Senparc.Weixin.MP.Sample\Senparc.Weixin.MP.Sample.CommonService\MessageHandlers\CustomMessageHandler\CustomMessageHandler.cs,OnEvent_ClickRequest,The method has 183 lines of code.
Long Parameter List,Senparc.Weixin.MP.Sample.CommonService.TemplateMessage,WeixinTemplate_ExceptionAlert,C:\repos\JeffreySu_WeiXinMPSDK\src\Senparc.Weixin.MP.Sample\Senparc.Weixin.MP.Sample.CommonService\TemplateMessage\WeixinTemplate_ExceptionAlert.cs,WeixinTemplate_ExceptionAlert,The method has 8 parameters. Parameters: _first' host' service' status' message' _remark' url' templateId
Long Parameter List,Senparc.Weixin.MP.Sample.CommonService.TemplateMessage.WxOpen,WxOpenTemplateMessage_PaySuccessNotice,C:\repos\JeffreySu_WeiXinMPSDK\src\Senparc.Weixin.MP.Sample\Senparc.Weixin.MP.Sample.CommonService\TemplateMessage\WxOpen\WxOpenTemplateMessage_PaySuccessNotice.cs,WxOpenTemplateMessage_PaySuccessNotice,The method has 8 parameters. Parameters: payAddress' payTime' productName' orderNumber' orderPrice' hotLine' url' templateId
Long Statement,Senparc.Weixin.MP.Sample.CommonService.Download,ConfigHelper,C:\repos\JeffreySu_WeiXinMPSDK\src\Senparc.Weixin.MP.Sample\Senparc.Weixin.MP.Sample.CommonService\Download\ConfigHelper.cs,Download,The length of the statement  "            //FileStream fs = new FileStream(_context.Server.MapPath(string.Format("~/App_Data/Document/Files/Senparc.Weixin-v{0}.rar"' version))' FileMode.Open); " is 150.
Long Statement,Senparc.Weixin.MP.Sample.CommonService.Download,ConfigHelper,C:\repos\JeffreySu_WeiXinMPSDK\src\Senparc.Weixin.MP.Sample\Senparc.Weixin.MP.Sample.CommonService\Download\ConfigHelper.cs,Download,The length of the statement  "            return _context.Server.MapPath(string.Format("~/App_Data/Document/Files/Senparc.Weixin{0}-v{1}.rar"'isWebVersion?"-Web":""' version)); " is 134.
Long Statement,Senparc.Weixin.MP.Sample.CommonService.Download,ConfigHelper,C:\repos\JeffreySu_WeiXinMPSDK\src\Senparc.Weixin.MP.Sample\Senparc.Weixin.MP.Sample.CommonService\Download\ConfigHelper.cs,Download,The length of the statement  "            return Server.GetMapPath(string.Format("~/App_Data/Document/Files/Senparc.Weixin{0}-v{1}.rar"' isWebVersion ? "-Web" : ""' version)); " is 133.
Long Statement,Senparc.Weixin.MP.Sample.CommonService.CustomMessageHandler,CustomMessageHandler,C:\repos\JeffreySu_WeiXinMPSDK\src\Senparc.Weixin.MP.Sample\Senparc.Weixin.MP.Sample.CommonService\MessageHandlers\CustomMessageHandler\CustomMessageHandler.cs,OnTextRequest,The length of the statement  "<a href=""http://sdk.weixin.senparc.com/FilterTest/"">点击这里</a>进行客户端约束测试（地址：http://sdk.weixin.senparc.com/FilterTest/），如果在微信外打开将直接返回文字。 " is 134.
Long Statement,Senparc.Weixin.MP.Sample.CommonService.CustomMessageHandler,CustomMessageHandler,C:\repos\JeffreySu_WeiXinMPSDK\src\Senparc.Weixin.MP.Sample\Senparc.Weixin.MP.Sample.CommonService\MessageHandlers\CustomMessageHandler\CustomMessageHandler.cs,OnTextRequest,The length of the statement  "<a href=""http://sdk.weixin.senparc.com/FilterTest/Redirect"">点击这里</a>进行客户端约束测试（地址：http://sdk.weixin.senparc.com/FilterTest/Redirect），如果在微信外打开将重定向一次URL。"; " is 154.
Long Statement,Senparc.Weixin.MP.Sample.CommonService.CustomMessageHandler,CustomMessageHandler,C:\repos\JeffreySu_WeiXinMPSDK\src\Senparc.Weixin.MP.Sample\Senparc.Weixin.MP.Sample.CommonService\MessageHandlers\CustomMessageHandler\CustomMessageHandler.cs,OnTextRequest,The length of the statement  "                    defaultResponseMessage.Content = string.Format(@"新的验证码为：{0}，请在网页上输入。网址：http://sdk.weixin.senparc.com/AsyncMethods"' checkCode); " is 127.
Long Statement,Senparc.Weixin.MP.Sample.CommonService.CustomMessageHandler,CustomMessageHandler,C:\repos\JeffreySu_WeiXinMPSDK\src\Senparc.Weixin.MP.Sample\Senparc.Weixin.MP.Sample.CommonService\MessageHandlers\CustomMessageHandler\CustomMessageHandler.cs,OnTextRequest,The length of the statement  "                        requestMessage.FromUserName' userInfo.nickname' (Sex)userInfo.sex' userInfo.country' userInfo.province' userInfo.city' DateTimeHelper.GetDateTimeFromXml(userInfo.subscribe_time)' userInfo.subscribe); " is 199.
Long Statement,Senparc.Weixin.MP.Sample.CommonService.CustomMessageHandler,CustomMessageHandler,C:\repos\JeffreySu_WeiXinMPSDK\src\Senparc.Weixin.MP.Sample\Senparc.Weixin.MP.Sample.CommonService\MessageHandlers\CustomMessageHandler\CustomMessageHandler.cs,OnTextRequest,The length of the statement  "                    var ex = new WeixinException("openid:" + requestMessage.FromUserName + ":这是一条测试异常信息");//回调过程在global的ConfigWeixinTraceLog()方法中 " is 125.
Long Statement,Senparc.Weixin.MP.Sample.CommonService.CustomMessageHandler,CustomMessageHandler,C:\repos\JeffreySu_WeiXinMPSDK\src\Senparc.Weixin.MP.Sample\Senparc.Weixin.MP.Sample.CommonService\MessageHandlers\CustomMessageHandler\CustomMessageHandler.cs,GetWelcomeInfo,The length of the statement  "             var fileVersionInfo = FileVersionInfo.GetVersionInfo(HttpContext.Current.Server.MapPath("~/bin/Senparc.Weixin.MP.dll")); " is 120.
Long Statement,Senparc.Weixin.MP.Sample.CommonService.CustomMessageHandler,CustomMessageHandler,C:\repos\JeffreySu_WeiXinMPSDK\src\Senparc.Weixin.MP.Sample\Senparc.Weixin.MP.Sample.CommonService\MessageHandlers\CustomMessageHandler\CustomMessageHandler.cs,GetWelcomeInfo,The length of the statement  "            var version = string.Format("{0}.{1}.{2}"' fileVersionInfo.FileMajorPart' fileVersionInfo.FileMinorPart' fileVersionInfo.FileBuildPart); " is 136.
Long Statement,Senparc.Weixin.MP.Sample.CommonService,EventService,C:\repos\JeffreySu_WeiXinMPSDK\src\Senparc.Weixin.MP.Sample\Senparc.Weixin.MP.Sample.CommonService\EventService.cs,GetResponseMessage,The length of the statement  "                            "欢迎关注【Senparc.Weixin.MP 微信公众平台SDK】，当前运行版本：v{0}。\r\n您还可以发送【位置】【图片】【语音】信息，查看不同格式的回复。\r\nSDK官方地址：http://sdk.weixin.senparc.com"' " is 125.
Long Statement,Senparc.Weixin.MP.Sample.CommonService,EventService,C:\repos\JeffreySu_WeiXinMPSDK\src\Senparc.Weixin.MP.Sample\Senparc.Weixin.MP.Sample.CommonService\EventService.cs,ConfigOnWeixinExceptionFunc,The length of the statement  "                    string url = "https://github.com/JeffreySu/WeiXinMPSDK/blob/24aca11630bf833f6a4b6d36dce80c5b171281d3/src/Senparc.Weixin.MP.Sample/Senparc.Weixin.MP.Sample/Global.asax.cs#L246";//需要点击打开的URL " is 188.
Long Statement,Senparc.Weixin.MP.Sample.CommonService,EventService,C:\repos\JeffreySu_WeiXinMPSDK\src\Senparc.Weixin.MP.Sample\Senparc.Weixin.MP.Sample.CommonService\EventService.cs,ConfigOnWeixinExceptionFunc,The length of the statement  "                        var data = new WeixinTemplate_ExceptionAlert(string.Format("微信发生异常（延时{0}秒）"' sleepSeconds)' host' service' status' message' remark); " is 132.
Long Statement,Senparc.Weixin.MP.Sample.CommonService.MessageHandlers.OpenMessageHandler,OpenCheckMessageHandler,C:\repos\JeffreySu_WeiXinMPSDK\src\Senparc.Weixin.MP.Sample\Senparc.Weixin.MP.Sample.CommonService\MessageHandlers\OpenMessageHandler\OpenCheckMessageHandler.cs,OnTextRequest,The length of the statement  "                    var component_access_token = Open.ComponentAPIs.ComponentApi.GetComponentAccessToken(componentAppId' componentSecret' openTicket).component_access_token; " is 153.
Long Statement,Senparc.Weixin.MP.Sample.CommonService.MessageHandlers.WebSocket,CustomWebSocketMessageHandler,C:\repos\JeffreySu_WeiXinMPSDK\src\Senparc.Weixin.MP.Sample\Senparc.Weixin.MP.Sample.CommonService\MessageHandlers\WebSocket\CustomWebSocketMessageHandler.cs,OnMessageReceiced,The length of the statement  "                var tmResult = Senparc.Weixin.WxOpen.AdvancedAPIs.Template.TemplateApi.SendTemplateMessage(appId' openId' "Ap1S3tRvsB8BXsWkiILLz93nhe7S8IgAipZDfygy9Bg"' data' receivedMessage.FormId' "pages/websocket/websocket"' "websocket"' " is 224.
Long Statement,Senparc.Weixin.MP.Sample.CommonService.ThirdPartyMessageHandlers,CustomThirdPartyMessageHandler,C:\repos\JeffreySu_WeiXinMPSDK\src\Senparc.Weixin.MP.Sample\Senparc.Weixin.MP.Sample.CommonService\MessageHandlers\CustomThirdPartyMessageHandlers\CustomThirdPartyMessageHandler.cs,OnComponentVerifyTicketRequest,The length of the statement  "            using (FileStream fs = new FileStream(Path.Combine(openTicketPath' string.Format("{0}.txt"' RequestMessage.AppId))'FileMode.OpenOrCreate'FileAccess.ReadWrite)) " is 159.
Empty Catch Block,Senparc.Weixin.MP.Sample.CommonService.CustomMessageHandler,CustomMessageHandler,C:\repos\JeffreySu_WeiXinMPSDK\src\Senparc.Weixin.MP.Sample\Senparc.Weixin.MP.Sample.CommonService\MessageHandlers\CustomMessageHandler\CustomMessageHandler.cs,OnVoiceRequest,The method has an empty catch block.
Magic Number,Senparc.Weixin.MP.Sample.CommonService.CustomMessageHandler,CustomMessageHandler,C:\repos\JeffreySu_WeiXinMPSDK\src\Senparc.Weixin.MP.Sample\Senparc.Weixin.MP.Sample.CommonService\MessageHandlers\CustomMessageHandler\CustomMessageHandler.cs,CustomMessageHandler,The following statement contains a magic number: WeixinContext.ExpireMinutes = 3;
Magic Number,Senparc.Weixin.MP.Sample.CommonService.CustomMessageHandler,CustomMessageHandler,C:\repos\JeffreySu_WeiXinMPSDK\src\Senparc.Weixin.MP.Sample\Senparc.Weixin.MP.Sample.CommonService\MessageHandlers\CustomMessageHandler\CustomMessageHandler.cs,OnTextRequest,The following statement contains a magic number: var requestHandler =                  requestMessage.StartHandler()                  //关键字不区分大小写，按照顺序匹配成功后将不再运行下面的逻辑                  .Keyword("约束"' () =>                  {                      defaultResponseMessage.Content =                      @"您正在进行微信内置浏览器约束判断测试。您可以：  <a href=""http://sdk.weixin.senparc.com/FilterTest/"">点击这里</a>进行客户端约束测试（地址：http://sdk.weixin.senparc.com/FilterTest/），如果在微信外打开将直接返回文字。  或：  <a href=""http://sdk.weixin.senparc.com/FilterTest/Redirect"">点击这里</a>进行客户端约束测试（地址：http://sdk.weixin.senparc.com/FilterTest/Redirect），如果在微信外打开将重定向一次URL。";                      return defaultResponseMessage;                  }).                  //匹配任一关键字                  Keywords(new[] { "托管"' "代理" }' () =>                  {                      //开始用代理托管，把请求转到其他服务器上去，然后拿回结果                      //甚至也可以将所有请求在DefaultResponseMessage()中托管到外部。                        DateTime dt1 = DateTime.Now; //计时开始                        var agentXml = RequestDocument.ToString();                        #region 暂时转发到SDK线上Demo                        agentUrl = "http://sdk.weixin.senparc.com/weixin";                      //agentToken = WebConfigurationManager.AppSettings["WeixinToken"];//Token                        //修改内容，防止死循环                      var agentDoc = XDocument.Parse(agentXml);                      agentDoc.Root.Element("Content").SetValue("代理转发文字：" + requestMessage.Content);                      agentDoc.Root.Element("CreateTime").SetValue(DateTimeHelper.GetWeixinDateTime(DateTime.Now));//修改时间，防止去重                      agentDoc.Root.Element("MsgId").SetValue("123");//防止去重                      agentXml = agentDoc.ToString();                        #endregion                        var responseXml = MessageAgent.RequestXml(this' agentUrl' agentToken' agentXml);                      //获取返回的XML                      //上面的方法也可以使用扩展方法：this.RequestResponseMessage(this'agentUrl' agentToken' RequestDocument.ToString());                        /* 如果有WeiweihiKey，可以直接使用下面的这个MessageAgent.RequestWeiweihiXml()方法。                      * WeiweihiKey专门用于对接www.weiweihi.com平台，获取方式见：https://www.weiweihi.com/ApiDocuments/Item/25#51                      */                      //var responseXml = MessageAgent.RequestWeiweihiXml(weiweihiKey' RequestDocument.ToString());//获取Weiweihi返回的XML                        DateTime dt2 = DateTime.Now; //计时结束                        //转成实体。                      /* 如果要写成一行，可以直接用：                      * responseMessage = MessageAgent.RequestResponseMessage(agentUrl' agentToken' RequestDocument.ToString());                      * 或                      *                      */                      var msg = string.Format("\r\n\r\n代理过程总耗时：{0}毫秒"' (dt2 - dt1).Milliseconds);                      var agentResponseMessage = responseXml.CreateResponseMessage();                      if (agentResponseMessage is ResponseMessageText)                      {                          (agentResponseMessage as ResponseMessageText).Content += msg;                      }                      else if (agentResponseMessage is ResponseMessageNews)                      {                          (agentResponseMessage as ResponseMessageNews).Articles[0].Description += msg;                      }                      return agentResponseMessage;//可能出现多种类型，直接在这里返回                  })                  .Keywords(new[] { "测试"' "退出" }' () =>                  {                      /*                       * 这是一个特殊的过程，此请求通常来自于微微嗨（http://www.weiweihi.com）的“盛派网络小助手”应用请求（https://www.weiweihi.com/User/App/Detail/1），                       * 用于演示微微嗨应用商店的处理过程，由于微微嗨的应用内部可以单独设置对话过期时间，所以这里通常不需要考虑对话状态，只要做最简单的响应。                       */                      if (defaultResponseMessage.Content == "测试")                      {                          //进入APP测试                          defaultResponseMessage.Content = "您已经进入【盛派网络小助手】的测试程序，请发送任意信息进行测试。发送文字【退出】退出测试对话。10分钟内无任何交互将自动退出应用对话状态。";                      }                      else                      {                          //退出APP测试                          defaultResponseMessage.Content = "您已经退出【盛派网络小助手】的测试程序。";                      }                      return defaultResponseMessage;                  })                  .Keyword("AsyncTest"' () =>                  {                      //异步并发测试（提供给单元测试使用）  #if NET45                      DateTime begin = DateTime.Now;                      int t1' t2' t3;                      System.Threading.ThreadPool.GetAvailableThreads(out t1' out t3);                      System.Threading.ThreadPool.GetMaxThreads(out t2' out t3);                      System.Threading.Thread.Sleep(TimeSpan.FromSeconds(4));                      DateTime end = DateTime.Now;                      var thread = System.Threading.Thread.CurrentThread;                      defaultResponseMessage.Content = string.Format("TId:{0}\tApp:{1}\tBegin:{2:mm:ss'ffff}\tEnd:{3:mm:ss'ffff}\tTPool：{4}"'                              thread.ManagedThreadId'                              HttpContext.Current != null ? HttpContext.Current.ApplicationInstance.GetHashCode() : -1'                              begin'                              end'                              t2 - t1                              );  #endif                        return defaultResponseMessage;                  })                  .Keyword("OPEN"' () =>                  {                      var openResponseMessage = requestMessage.CreateResponseMessage<ResponseMessageNews>();                      openResponseMessage.Articles.Add(new Article()                      {                          Title = "开放平台微信授权测试"'                          Description = @"点击进入Open授权页面。    授权之后，您的微信所收到的消息将转发到第三方（盛派网络小助手）的服务器上，并获得对应的回复。    测试完成后，您可以登陆公众号后台取消授权。"'                          Url = "http://sdk.weixin.senparc.com/OpenOAuth/JumpToMpOAuth"                      });                      return openResponseMessage;                  })                  .Keyword("错误"' () =>                  {                      var errorResponseMessage = requestMessage.CreateResponseMessage<ResponseMessageText>();                      //因为没有设置errorResponseMessage.Content，所以这小消息将无法正确返回。                      return errorResponseMessage;                  })                  .Keyword("容错"' () =>                  {                      Thread.Sleep(4900);//故意延时1.5秒，让微信多次发送消息过来，观察返回结果                      var faultTolerantResponseMessage = requestMessage.CreateResponseMessage<ResponseMessageText>();                      faultTolerantResponseMessage.Content = string.Format("测试容错，MsgId：{0}，Ticks：{1}"' requestMessage.MsgId'                          DateTime.Now.Ticks);                      return faultTolerantResponseMessage;                  })                  .Keyword("TM"' () =>                  {                      var openId = requestMessage.FromUserName;                      var checkCode = Guid.NewGuid().ToString("n").Substring(0' 3);//为了防止openId泄露造成骚扰，这里启用验证码                      TemplateMessageCollection[checkCode] = openId;                      defaultResponseMessage.Content = string.Format(@"新的验证码为：{0}，请在网页上输入。网址：http://sdk.weixin.senparc.com/AsyncMethods"' checkCode);                      return defaultResponseMessage;                  })                  .Keyword("OPENID"' () =>                  {                      var openId = requestMessage.FromUserName;//获取OpenId                      var userInfo = AdvancedAPIs.UserApi.Info(appId' openId' Language.zh_CN);                        defaultResponseMessage.Content = string.Format(                          "您的OpenID为：{0}\r\n昵称：{1}\r\n性别：{2}\r\n地区（国家/省/市）：{3}/{4}/{5}\r\n关注时间：{6}\r\n关注状态：{7}"'                          requestMessage.FromUserName' userInfo.nickname' (Sex)userInfo.sex' userInfo.country' userInfo.province' userInfo.city' DateTimeHelper.GetDateTimeFromXml(userInfo.subscribe_time)' userInfo.subscribe);                      return defaultResponseMessage;                  })                  .Keyword("EX"' () =>                  {                      var ex = new WeixinException("openid:" + requestMessage.FromUserName + ":这是一条测试异常信息");//回调过程在global的ConfigWeixinTraceLog()方法中                      defaultResponseMessage.Content = "请等待异步模板消息发送到此界面上（自动延时数秒）。\r\n当前时间：" + DateTime.Now.ToString();                      return defaultResponseMessage;                  })                  .Keyword("MUTE"' () => //不回复任何消息                  {                      //方案一：                      return new SuccessResponseMessage();                        //方案二：                      var muteResponseMessage = base.CreateResponseMessage<ResponseMessageNoResponse>();                      return muteResponseMessage;                        //方案三：                      base.TextResponseMessage = "success";                      return null;                  })                  .Keyword("JSSDK"' () =>                  {                      defaultResponseMessage.Content = "点击打开：http://sdk.weixin.senparc.com/WeixinJsSdk";                      return defaultResponseMessage;                  })                  //Default不一定要在最后一个                  .Default(() =>                  {                      var result = new StringBuilder();                      result.AppendFormat("您刚才发送了文字信息：{0}\r\n\r\n"' requestMessage.Content);                        if (CurrentMessageContext.RequestMessages.Count > 1)                      {                          result.AppendFormat("您刚才还发送了如下消息（{0}/{1}）：\r\n"' CurrentMessageContext.RequestMessages.Count'                              CurrentMessageContext.StorageData);                          for (int i = CurrentMessageContext.RequestMessages.Count - 2; i >= 0; i--)                          {                              var historyMessage = CurrentMessageContext.RequestMessages[i];                              result.AppendFormat("{0} 【{1}】{2}\r\n"'                                  historyMessage.CreateTime.ToString("HH:mm:ss")'                                  historyMessage.MsgType.ToString()'                                  (historyMessage is RequestMessageText)                                      ? (historyMessage as RequestMessageText).Content                                      : "[非文字类型]"                                  );                          }                          result.AppendLine("\r\n");                      }                        result.AppendFormat("如果您在{0}分钟内连续发送消息，记录将被自动保留（当前设置：最多记录{1}条）。过期后记录将会自动清除。\r\n"'                          WeixinContext.ExpireMinutes' WeixinContext.MaxRecordCount);                      result.AppendLine("\r\n");                      result.AppendLine(                          "您还可以发送【位置】【图片】【语音】【视频】等类型的信息（注意是这几种类型，不是这几个文字），查看不同格式的回复。\r\nSDK官方地址：http://sdk.weixin.senparc.com");                        defaultResponseMessage.Content = result.ToString();                      return defaultResponseMessage;                  })                  //“一次订阅消息”接口测试                  .Keyword("订阅"' () =>                  {                          defaultResponseMessage.Content = "点击打开：https://sdk.weixin.senparc.com/SubscribeMsg";                          return defaultResponseMessage;                  })                  //正则表达式                  .Regex(@"^\d+#\d+$"' () =>                  {                      defaultResponseMessage.Content = string.Format("您输入了：{0}，符合正则表达式：^\\d+#\\d+$"' requestMessage.Content);                      return defaultResponseMessage;                  });
Magic Number,Senparc.Weixin.MP.Sample.CommonService.CustomMessageHandler,CustomMessageHandler,C:\repos\JeffreySu_WeiXinMPSDK\src\Senparc.Weixin.MP.Sample\Senparc.Weixin.MP.Sample.CommonService\MessageHandlers\CustomMessageHandler\CustomMessageHandler.cs,OnTextRequest,The following statement contains a magic number: var requestHandler =                  requestMessage.StartHandler()                  //关键字不区分大小写，按照顺序匹配成功后将不再运行下面的逻辑                  .Keyword("约束"' () =>                  {                      defaultResponseMessage.Content =                      @"您正在进行微信内置浏览器约束判断测试。您可以：  <a href=""http://sdk.weixin.senparc.com/FilterTest/"">点击这里</a>进行客户端约束测试（地址：http://sdk.weixin.senparc.com/FilterTest/），如果在微信外打开将直接返回文字。  或：  <a href=""http://sdk.weixin.senparc.com/FilterTest/Redirect"">点击这里</a>进行客户端约束测试（地址：http://sdk.weixin.senparc.com/FilterTest/Redirect），如果在微信外打开将重定向一次URL。";                      return defaultResponseMessage;                  }).                  //匹配任一关键字                  Keywords(new[] { "托管"' "代理" }' () =>                  {                      //开始用代理托管，把请求转到其他服务器上去，然后拿回结果                      //甚至也可以将所有请求在DefaultResponseMessage()中托管到外部。                        DateTime dt1 = DateTime.Now; //计时开始                        var agentXml = RequestDocument.ToString();                        #region 暂时转发到SDK线上Demo                        agentUrl = "http://sdk.weixin.senparc.com/weixin";                      //agentToken = WebConfigurationManager.AppSettings["WeixinToken"];//Token                        //修改内容，防止死循环                      var agentDoc = XDocument.Parse(agentXml);                      agentDoc.Root.Element("Content").SetValue("代理转发文字：" + requestMessage.Content);                      agentDoc.Root.Element("CreateTime").SetValue(DateTimeHelper.GetWeixinDateTime(DateTime.Now));//修改时间，防止去重                      agentDoc.Root.Element("MsgId").SetValue("123");//防止去重                      agentXml = agentDoc.ToString();                        #endregion                        var responseXml = MessageAgent.RequestXml(this' agentUrl' agentToken' agentXml);                      //获取返回的XML                      //上面的方法也可以使用扩展方法：this.RequestResponseMessage(this'agentUrl' agentToken' RequestDocument.ToString());                        /* 如果有WeiweihiKey，可以直接使用下面的这个MessageAgent.RequestWeiweihiXml()方法。                      * WeiweihiKey专门用于对接www.weiweihi.com平台，获取方式见：https://www.weiweihi.com/ApiDocuments/Item/25#51                      */                      //var responseXml = MessageAgent.RequestWeiweihiXml(weiweihiKey' RequestDocument.ToString());//获取Weiweihi返回的XML                        DateTime dt2 = DateTime.Now; //计时结束                        //转成实体。                      /* 如果要写成一行，可以直接用：                      * responseMessage = MessageAgent.RequestResponseMessage(agentUrl' agentToken' RequestDocument.ToString());                      * 或                      *                      */                      var msg = string.Format("\r\n\r\n代理过程总耗时：{0}毫秒"' (dt2 - dt1).Milliseconds);                      var agentResponseMessage = responseXml.CreateResponseMessage();                      if (agentResponseMessage is ResponseMessageText)                      {                          (agentResponseMessage as ResponseMessageText).Content += msg;                      }                      else if (agentResponseMessage is ResponseMessageNews)                      {                          (agentResponseMessage as ResponseMessageNews).Articles[0].Description += msg;                      }                      return agentResponseMessage;//可能出现多种类型，直接在这里返回                  })                  .Keywords(new[] { "测试"' "退出" }' () =>                  {                      /*                       * 这是一个特殊的过程，此请求通常来自于微微嗨（http://www.weiweihi.com）的“盛派网络小助手”应用请求（https://www.weiweihi.com/User/App/Detail/1），                       * 用于演示微微嗨应用商店的处理过程，由于微微嗨的应用内部可以单独设置对话过期时间，所以这里通常不需要考虑对话状态，只要做最简单的响应。                       */                      if (defaultResponseMessage.Content == "测试")                      {                          //进入APP测试                          defaultResponseMessage.Content = "您已经进入【盛派网络小助手】的测试程序，请发送任意信息进行测试。发送文字【退出】退出测试对话。10分钟内无任何交互将自动退出应用对话状态。";                      }                      else                      {                          //退出APP测试                          defaultResponseMessage.Content = "您已经退出【盛派网络小助手】的测试程序。";                      }                      return defaultResponseMessage;                  })                  .Keyword("AsyncTest"' () =>                  {                      //异步并发测试（提供给单元测试使用）  #if NET45                      DateTime begin = DateTime.Now;                      int t1' t2' t3;                      System.Threading.ThreadPool.GetAvailableThreads(out t1' out t3);                      System.Threading.ThreadPool.GetMaxThreads(out t2' out t3);                      System.Threading.Thread.Sleep(TimeSpan.FromSeconds(4));                      DateTime end = DateTime.Now;                      var thread = System.Threading.Thread.CurrentThread;                      defaultResponseMessage.Content = string.Format("TId:{0}\tApp:{1}\tBegin:{2:mm:ss'ffff}\tEnd:{3:mm:ss'ffff}\tTPool：{4}"'                              thread.ManagedThreadId'                              HttpContext.Current != null ? HttpContext.Current.ApplicationInstance.GetHashCode() : -1'                              begin'                              end'                              t2 - t1                              );  #endif                        return defaultResponseMessage;                  })                  .Keyword("OPEN"' () =>                  {                      var openResponseMessage = requestMessage.CreateResponseMessage<ResponseMessageNews>();                      openResponseMessage.Articles.Add(new Article()                      {                          Title = "开放平台微信授权测试"'                          Description = @"点击进入Open授权页面。    授权之后，您的微信所收到的消息将转发到第三方（盛派网络小助手）的服务器上，并获得对应的回复。    测试完成后，您可以登陆公众号后台取消授权。"'                          Url = "http://sdk.weixin.senparc.com/OpenOAuth/JumpToMpOAuth"                      });                      return openResponseMessage;                  })                  .Keyword("错误"' () =>                  {                      var errorResponseMessage = requestMessage.CreateResponseMessage<ResponseMessageText>();                      //因为没有设置errorResponseMessage.Content，所以这小消息将无法正确返回。                      return errorResponseMessage;                  })                  .Keyword("容错"' () =>                  {                      Thread.Sleep(4900);//故意延时1.5秒，让微信多次发送消息过来，观察返回结果                      var faultTolerantResponseMessage = requestMessage.CreateResponseMessage<ResponseMessageText>();                      faultTolerantResponseMessage.Content = string.Format("测试容错，MsgId：{0}，Ticks：{1}"' requestMessage.MsgId'                          DateTime.Now.Ticks);                      return faultTolerantResponseMessage;                  })                  .Keyword("TM"' () =>                  {                      var openId = requestMessage.FromUserName;                      var checkCode = Guid.NewGuid().ToString("n").Substring(0' 3);//为了防止openId泄露造成骚扰，这里启用验证码                      TemplateMessageCollection[checkCode] = openId;                      defaultResponseMessage.Content = string.Format(@"新的验证码为：{0}，请在网页上输入。网址：http://sdk.weixin.senparc.com/AsyncMethods"' checkCode);                      return defaultResponseMessage;                  })                  .Keyword("OPENID"' () =>                  {                      var openId = requestMessage.FromUserName;//获取OpenId                      var userInfo = AdvancedAPIs.UserApi.Info(appId' openId' Language.zh_CN);                        defaultResponseMessage.Content = string.Format(                          "您的OpenID为：{0}\r\n昵称：{1}\r\n性别：{2}\r\n地区（国家/省/市）：{3}/{4}/{5}\r\n关注时间：{6}\r\n关注状态：{7}"'                          requestMessage.FromUserName' userInfo.nickname' (Sex)userInfo.sex' userInfo.country' userInfo.province' userInfo.city' DateTimeHelper.GetDateTimeFromXml(userInfo.subscribe_time)' userInfo.subscribe);                      return defaultResponseMessage;                  })                  .Keyword("EX"' () =>                  {                      var ex = new WeixinException("openid:" + requestMessage.FromUserName + ":这是一条测试异常信息");//回调过程在global的ConfigWeixinTraceLog()方法中                      defaultResponseMessage.Content = "请等待异步模板消息发送到此界面上（自动延时数秒）。\r\n当前时间：" + DateTime.Now.ToString();                      return defaultResponseMessage;                  })                  .Keyword("MUTE"' () => //不回复任何消息                  {                      //方案一：                      return new SuccessResponseMessage();                        //方案二：                      var muteResponseMessage = base.CreateResponseMessage<ResponseMessageNoResponse>();                      return muteResponseMessage;                        //方案三：                      base.TextResponseMessage = "success";                      return null;                  })                  .Keyword("JSSDK"' () =>                  {                      defaultResponseMessage.Content = "点击打开：http://sdk.weixin.senparc.com/WeixinJsSdk";                      return defaultResponseMessage;                  })                  //Default不一定要在最后一个                  .Default(() =>                  {                      var result = new StringBuilder();                      result.AppendFormat("您刚才发送了文字信息：{0}\r\n\r\n"' requestMessage.Content);                        if (CurrentMessageContext.RequestMessages.Count > 1)                      {                          result.AppendFormat("您刚才还发送了如下消息（{0}/{1}）：\r\n"' CurrentMessageContext.RequestMessages.Count'                              CurrentMessageContext.StorageData);                          for (int i = CurrentMessageContext.RequestMessages.Count - 2; i >= 0; i--)                          {                              var historyMessage = CurrentMessageContext.RequestMessages[i];                              result.AppendFormat("{0} 【{1}】{2}\r\n"'                                  historyMessage.CreateTime.ToString("HH:mm:ss")'                                  historyMessage.MsgType.ToString()'                                  (historyMessage is RequestMessageText)                                      ? (historyMessage as RequestMessageText).Content                                      : "[非文字类型]"                                  );                          }                          result.AppendLine("\r\n");                      }                        result.AppendFormat("如果您在{0}分钟内连续发送消息，记录将被自动保留（当前设置：最多记录{1}条）。过期后记录将会自动清除。\r\n"'                          WeixinContext.ExpireMinutes' WeixinContext.MaxRecordCount);                      result.AppendLine("\r\n");                      result.AppendLine(                          "您还可以发送【位置】【图片】【语音】【视频】等类型的信息（注意是这几种类型，不是这几个文字），查看不同格式的回复。\r\nSDK官方地址：http://sdk.weixin.senparc.com");                        defaultResponseMessage.Content = result.ToString();                      return defaultResponseMessage;                  })                  //“一次订阅消息”接口测试                  .Keyword("订阅"' () =>                  {                          defaultResponseMessage.Content = "点击打开：https://sdk.weixin.senparc.com/SubscribeMsg";                          return defaultResponseMessage;                  })                  //正则表达式                  .Regex(@"^\d+#\d+$"' () =>                  {                      defaultResponseMessage.Content = string.Format("您输入了：{0}，符合正则表达式：^\\d+#\\d+$"' requestMessage.Content);                      return defaultResponseMessage;                  });
Magic Number,Senparc.Weixin.MP.Sample.CommonService.CustomMessageHandler,CustomMessageHandler,C:\repos\JeffreySu_WeiXinMPSDK\src\Senparc.Weixin.MP.Sample\Senparc.Weixin.MP.Sample.CommonService\MessageHandlers\CustomMessageHandler\CustomMessageHandler.cs,OnTextRequest,The following statement contains a magic number: var requestHandler =                  requestMessage.StartHandler()                  //关键字不区分大小写，按照顺序匹配成功后将不再运行下面的逻辑                  .Keyword("约束"' () =>                  {                      defaultResponseMessage.Content =                      @"您正在进行微信内置浏览器约束判断测试。您可以：  <a href=""http://sdk.weixin.senparc.com/FilterTest/"">点击这里</a>进行客户端约束测试（地址：http://sdk.weixin.senparc.com/FilterTest/），如果在微信外打开将直接返回文字。  或：  <a href=""http://sdk.weixin.senparc.com/FilterTest/Redirect"">点击这里</a>进行客户端约束测试（地址：http://sdk.weixin.senparc.com/FilterTest/Redirect），如果在微信外打开将重定向一次URL。";                      return defaultResponseMessage;                  }).                  //匹配任一关键字                  Keywords(new[] { "托管"' "代理" }' () =>                  {                      //开始用代理托管，把请求转到其他服务器上去，然后拿回结果                      //甚至也可以将所有请求在DefaultResponseMessage()中托管到外部。                        DateTime dt1 = DateTime.Now; //计时开始                        var agentXml = RequestDocument.ToString();                        #region 暂时转发到SDK线上Demo                        agentUrl = "http://sdk.weixin.senparc.com/weixin";                      //agentToken = WebConfigurationManager.AppSettings["WeixinToken"];//Token                        //修改内容，防止死循环                      var agentDoc = XDocument.Parse(agentXml);                      agentDoc.Root.Element("Content").SetValue("代理转发文字：" + requestMessage.Content);                      agentDoc.Root.Element("CreateTime").SetValue(DateTimeHelper.GetWeixinDateTime(DateTime.Now));//修改时间，防止去重                      agentDoc.Root.Element("MsgId").SetValue("123");//防止去重                      agentXml = agentDoc.ToString();                        #endregion                        var responseXml = MessageAgent.RequestXml(this' agentUrl' agentToken' agentXml);                      //获取返回的XML                      //上面的方法也可以使用扩展方法：this.RequestResponseMessage(this'agentUrl' agentToken' RequestDocument.ToString());                        /* 如果有WeiweihiKey，可以直接使用下面的这个MessageAgent.RequestWeiweihiXml()方法。                      * WeiweihiKey专门用于对接www.weiweihi.com平台，获取方式见：https://www.weiweihi.com/ApiDocuments/Item/25#51                      */                      //var responseXml = MessageAgent.RequestWeiweihiXml(weiweihiKey' RequestDocument.ToString());//获取Weiweihi返回的XML                        DateTime dt2 = DateTime.Now; //计时结束                        //转成实体。                      /* 如果要写成一行，可以直接用：                      * responseMessage = MessageAgent.RequestResponseMessage(agentUrl' agentToken' RequestDocument.ToString());                      * 或                      *                      */                      var msg = string.Format("\r\n\r\n代理过程总耗时：{0}毫秒"' (dt2 - dt1).Milliseconds);                      var agentResponseMessage = responseXml.CreateResponseMessage();                      if (agentResponseMessage is ResponseMessageText)                      {                          (agentResponseMessage as ResponseMessageText).Content += msg;                      }                      else if (agentResponseMessage is ResponseMessageNews)                      {                          (agentResponseMessage as ResponseMessageNews).Articles[0].Description += msg;                      }                      return agentResponseMessage;//可能出现多种类型，直接在这里返回                  })                  .Keywords(new[] { "测试"' "退出" }' () =>                  {                      /*                       * 这是一个特殊的过程，此请求通常来自于微微嗨（http://www.weiweihi.com）的“盛派网络小助手”应用请求（https://www.weiweihi.com/User/App/Detail/1），                       * 用于演示微微嗨应用商店的处理过程，由于微微嗨的应用内部可以单独设置对话过期时间，所以这里通常不需要考虑对话状态，只要做最简单的响应。                       */                      if (defaultResponseMessage.Content == "测试")                      {                          //进入APP测试                          defaultResponseMessage.Content = "您已经进入【盛派网络小助手】的测试程序，请发送任意信息进行测试。发送文字【退出】退出测试对话。10分钟内无任何交互将自动退出应用对话状态。";                      }                      else                      {                          //退出APP测试                          defaultResponseMessage.Content = "您已经退出【盛派网络小助手】的测试程序。";                      }                      return defaultResponseMessage;                  })                  .Keyword("AsyncTest"' () =>                  {                      //异步并发测试（提供给单元测试使用）  #if NET45                      DateTime begin = DateTime.Now;                      int t1' t2' t3;                      System.Threading.ThreadPool.GetAvailableThreads(out t1' out t3);                      System.Threading.ThreadPool.GetMaxThreads(out t2' out t3);                      System.Threading.Thread.Sleep(TimeSpan.FromSeconds(4));                      DateTime end = DateTime.Now;                      var thread = System.Threading.Thread.CurrentThread;                      defaultResponseMessage.Content = string.Format("TId:{0}\tApp:{1}\tBegin:{2:mm:ss'ffff}\tEnd:{3:mm:ss'ffff}\tTPool：{4}"'                              thread.ManagedThreadId'                              HttpContext.Current != null ? HttpContext.Current.ApplicationInstance.GetHashCode() : -1'                              begin'                              end'                              t2 - t1                              );  #endif                        return defaultResponseMessage;                  })                  .Keyword("OPEN"' () =>                  {                      var openResponseMessage = requestMessage.CreateResponseMessage<ResponseMessageNews>();                      openResponseMessage.Articles.Add(new Article()                      {                          Title = "开放平台微信授权测试"'                          Description = @"点击进入Open授权页面。    授权之后，您的微信所收到的消息将转发到第三方（盛派网络小助手）的服务器上，并获得对应的回复。    测试完成后，您可以登陆公众号后台取消授权。"'                          Url = "http://sdk.weixin.senparc.com/OpenOAuth/JumpToMpOAuth"                      });                      return openResponseMessage;                  })                  .Keyword("错误"' () =>                  {                      var errorResponseMessage = requestMessage.CreateResponseMessage<ResponseMessageText>();                      //因为没有设置errorResponseMessage.Content，所以这小消息将无法正确返回。                      return errorResponseMessage;                  })                  .Keyword("容错"' () =>                  {                      Thread.Sleep(4900);//故意延时1.5秒，让微信多次发送消息过来，观察返回结果                      var faultTolerantResponseMessage = requestMessage.CreateResponseMessage<ResponseMessageText>();                      faultTolerantResponseMessage.Content = string.Format("测试容错，MsgId：{0}，Ticks：{1}"' requestMessage.MsgId'                          DateTime.Now.Ticks);                      return faultTolerantResponseMessage;                  })                  .Keyword("TM"' () =>                  {                      var openId = requestMessage.FromUserName;                      var checkCode = Guid.NewGuid().ToString("n").Substring(0' 3);//为了防止openId泄露造成骚扰，这里启用验证码                      TemplateMessageCollection[checkCode] = openId;                      defaultResponseMessage.Content = string.Format(@"新的验证码为：{0}，请在网页上输入。网址：http://sdk.weixin.senparc.com/AsyncMethods"' checkCode);                      return defaultResponseMessage;                  })                  .Keyword("OPENID"' () =>                  {                      var openId = requestMessage.FromUserName;//获取OpenId                      var userInfo = AdvancedAPIs.UserApi.Info(appId' openId' Language.zh_CN);                        defaultResponseMessage.Content = string.Format(                          "您的OpenID为：{0}\r\n昵称：{1}\r\n性别：{2}\r\n地区（国家/省/市）：{3}/{4}/{5}\r\n关注时间：{6}\r\n关注状态：{7}"'                          requestMessage.FromUserName' userInfo.nickname' (Sex)userInfo.sex' userInfo.country' userInfo.province' userInfo.city' DateTimeHelper.GetDateTimeFromXml(userInfo.subscribe_time)' userInfo.subscribe);                      return defaultResponseMessage;                  })                  .Keyword("EX"' () =>                  {                      var ex = new WeixinException("openid:" + requestMessage.FromUserName + ":这是一条测试异常信息");//回调过程在global的ConfigWeixinTraceLog()方法中                      defaultResponseMessage.Content = "请等待异步模板消息发送到此界面上（自动延时数秒）。\r\n当前时间：" + DateTime.Now.ToString();                      return defaultResponseMessage;                  })                  .Keyword("MUTE"' () => //不回复任何消息                  {                      //方案一：                      return new SuccessResponseMessage();                        //方案二：                      var muteResponseMessage = base.CreateResponseMessage<ResponseMessageNoResponse>();                      return muteResponseMessage;                        //方案三：                      base.TextResponseMessage = "success";                      return null;                  })                  .Keyword("JSSDK"' () =>                  {                      defaultResponseMessage.Content = "点击打开：http://sdk.weixin.senparc.com/WeixinJsSdk";                      return defaultResponseMessage;                  })                  //Default不一定要在最后一个                  .Default(() =>                  {                      var result = new StringBuilder();                      result.AppendFormat("您刚才发送了文字信息：{0}\r\n\r\n"' requestMessage.Content);                        if (CurrentMessageContext.RequestMessages.Count > 1)                      {                          result.AppendFormat("您刚才还发送了如下消息（{0}/{1}）：\r\n"' CurrentMessageContext.RequestMessages.Count'                              CurrentMessageContext.StorageData);                          for (int i = CurrentMessageContext.RequestMessages.Count - 2; i >= 0; i--)                          {                              var historyMessage = CurrentMessageContext.RequestMessages[i];                              result.AppendFormat("{0} 【{1}】{2}\r\n"'                                  historyMessage.CreateTime.ToString("HH:mm:ss")'                                  historyMessage.MsgType.ToString()'                                  (historyMessage is RequestMessageText)                                      ? (historyMessage as RequestMessageText).Content                                      : "[非文字类型]"                                  );                          }                          result.AppendLine("\r\n");                      }                        result.AppendFormat("如果您在{0}分钟内连续发送消息，记录将被自动保留（当前设置：最多记录{1}条）。过期后记录将会自动清除。\r\n"'                          WeixinContext.ExpireMinutes' WeixinContext.MaxRecordCount);                      result.AppendLine("\r\n");                      result.AppendLine(                          "您还可以发送【位置】【图片】【语音】【视频】等类型的信息（注意是这几种类型，不是这几个文字），查看不同格式的回复。\r\nSDK官方地址：http://sdk.weixin.senparc.com");                        defaultResponseMessage.Content = result.ToString();                      return defaultResponseMessage;                  })                  //“一次订阅消息”接口测试                  .Keyword("订阅"' () =>                  {                          defaultResponseMessage.Content = "点击打开：https://sdk.weixin.senparc.com/SubscribeMsg";                          return defaultResponseMessage;                  })                  //正则表达式                  .Regex(@"^\d+#\d+$"' () =>                  {                      defaultResponseMessage.Content = string.Format("您输入了：{0}，符合正则表达式：^\\d+#\\d+$"' requestMessage.Content);                      return defaultResponseMessage;                  });
Magic Number,Senparc.Weixin.MP.Sample.CommonService.CustomMessageHandler,CustomMessageHandler,C:\repos\JeffreySu_WeiXinMPSDK\src\Senparc.Weixin.MP.Sample\Senparc.Weixin.MP.Sample.CommonService\MessageHandlers\CustomMessageHandler\CustomMessageHandler.cs,OnImageRequest,The following statement contains a magic number: if (base.WeixinContext.GetMessageContext(requestMessage).RequestMessages.Count() % 2 == 0)              {                  var responseMessage = CreateResponseMessage<ResponseMessageNews>();                    responseMessage.Articles.Add(new Article()                  {                      Title = "您刚才发送了图片信息"'                      Description = "您发送的图片将会显示在边上"'                      PicUrl = requestMessage.PicUrl'                      Url = "http://sdk.weixin.senparc.com"                  });                  responseMessage.Articles.Add(new Article()                  {                      Title = "第二条"'                      Description = "第二条带连接的内容"'                      PicUrl = requestMessage.PicUrl'                      Url = "http://sdk.weixin.senparc.com"                  });                    return responseMessage;              }              else              {                  var responseMessage = CreateResponseMessage<ResponseMessageImage>();                  responseMessage.Image.MediaId = requestMessage.MediaId;                  return responseMessage;              }
Magic Number,Senparc.Weixin.MP.Sample.CommonService.CustomMessageHandler,CustomMessageHandler,C:\repos\JeffreySu_WeiXinMPSDK\src\Senparc.Weixin.MP.Sample\Senparc.Weixin.MP.Sample.CommonService\MessageHandlers\CustomMessageHandler\CustomMessageHandler.cs,OnVideoRequest,The following statement contains a magic number: Task.Factory.StartNew(async () =>               {                   //上传素材                   var dir = Server.GetMapPath("~/App_Data/TempVideo/");                   var file = await MediaApi.GetAsync(appId' requestMessage.MediaId' dir);                   var uploadResult = await MediaApi.UploadTemporaryMediaAsync(appId' UploadMediaFileType.video' file' 50000);                   await CustomApi.SendVideoAsync(appId' base.WeixinOpenId' uploadResult.media_id' "这是您刚才发送的视频"' "这是一条视频消息");               }).ContinueWith(async task =>               {                   if (task.Exception != null)                   {                       WeixinTrace.Log("OnVideoRequest()储存Video过程发生错误："' task.Exception.Message);                         var msg = string.Format("上传素材出错：{0}\r\n{1}"'                                  task.Exception.Message'                                  task.Exception.InnerException != null                                      ? task.Exception.InnerException.Message                                      : null);                       await CustomApi.SendTextAsync(appId' base.WeixinOpenId' msg);                   }               });
Magic Number,Senparc.Weixin.MP.Sample.CommonService.CustomMessageHandler,CustomMessageHandler,C:\repos\JeffreySu_WeiXinMPSDK\src\Senparc.Weixin.MP.Sample\Senparc.Weixin.MP.Sample.CommonService\MessageHandlers\CustomMessageHandler\CustomMessageHandler.cs,OnEvent_ClickRequest,The following statement contains a magic number: switch (requestMessage.EventKey)              {                  case "OneClick":                      {                          //这个过程实际已经在OnTextOrEventRequest中完成，这里不会执行到。                          var strongResponseMessage = CreateResponseMessage<ResponseMessageText>();                          reponseMessage = strongResponseMessage;                          strongResponseMessage.Content = "您点击了底部按钮。\r\n为了测试微信软件换行bug的应对措施，这里做了一个——\r\n换行";                      }                      break;                  case "SubClickRoot_Text":                      {                          var strongResponseMessage = CreateResponseMessage<ResponseMessageText>();                          reponseMessage = strongResponseMessage;                          strongResponseMessage.Content = "您点击了子菜单按钮。";                      }                      break;                  case "SubClickRoot_News":                      {                          var strongResponseMessage = CreateResponseMessage<ResponseMessageNews>();                          reponseMessage = strongResponseMessage;                          strongResponseMessage.Articles.Add(new Article()                          {                              Title = "您点击了子菜单图文按钮"'                              Description = "您点击了子菜单图文按钮，这是一条图文信息。这个区域是Description内容\r\n可以使用\\r\\n进行换行。"'                              PicUrl = "http://sdk.weixin.senparc.com/Images/qrcode.jpg"'                              Url = "http://sdk.weixin.senparc.com"                          });                            //随机添加一条图文，或只输出一条图文信息                          if (DateTime.Now.Second % 2 == 0)                          {                              strongResponseMessage.Articles.Add(new Article()                              {                                  Title = "这是随机产生的第二条图文信息，用于测试多条图文的样式"'                                  Description = "这是随机产生的第二条图文信息，用于测试多条图文的样式"'                                  PicUrl = "http://sdk.weixin.senparc.com/Images/qrcode.jpg"'                                  Url = "http://sdk.weixin.senparc.com"                              });                          }                      }                      break;                  case "SubClickRoot_Music":                      {                          //上传缩略图                          var accessToken = Containers.AccessTokenContainer.TryGetAccessToken(appId' appSecret);                          var uploadResult = AdvancedAPIs.MediaApi.UploadTemporaryMedia(accessToken' UploadMediaFileType.thumb'                                                                       Server.GetMapPath("~/Images/Logo.thumb.jpg"));                          //PS：缩略图官方没有特别提示文件大小限制，实际测试哪怕114K也会返回文件过大的错误，因此尽量控制在小一点（当前图片39K）                                                    //设置音乐信息                          var strongResponseMessage = CreateResponseMessage<ResponseMessageMusic>();                          reponseMessage = strongResponseMessage;                          strongResponseMessage.Music.Title = "天籁之音";                          strongResponseMessage.Music.Description = "真的是天籁之音";                          strongResponseMessage.Music.MusicUrl = "https://sdk.weixin.senparc.com/Content/music1.mp3";                          strongResponseMessage.Music.HQMusicUrl = "https://sdk.weixin.senparc.com/Content/music1.mp3";                          strongResponseMessage.Music.ThumbMediaId = uploadResult.thumb_media_id;                      }                      break;                  case "SubClickRoot_Image":                      {                          //上传图片                          var accessToken = Containers.AccessTokenContainer.TryGetAccessToken(appId' appSecret);                          var uploadResult = AdvancedAPIs.MediaApi.UploadTemporaryMedia(accessToken' UploadMediaFileType.image'                                                                       Server.GetMapPath("~/Images/Logo.jpg"));                          //设置图片信息                          var strongResponseMessage = CreateResponseMessage<ResponseMessageImage>();                          reponseMessage = strongResponseMessage;                          strongResponseMessage.Image.MediaId = uploadResult.media_id;                      }                      break;                  case "SubClickRoot_Agent"://代理消息                      {                          //获取返回的XML                          DateTime dt1 = DateTime.Now;                          reponseMessage = MessageAgent.RequestResponseMessage(this' agentUrl' agentToken' RequestDocument.ToString());                          //上面的方法也可以使用扩展方法：this.RequestResponseMessage(this'agentUrl' agentToken' RequestDocument.ToString());                            DateTime dt2 = DateTime.Now;                            if (reponseMessage is ResponseMessageNews)                          {                              (reponseMessage as ResponseMessageNews)                                  .Articles[0]                                  .Description += string.Format("\r\n\r\n代理过程总耗时：{0}毫秒"' (dt2 - dt1).Milliseconds);                          }                      }                      break;                  case "Member"://托管代理会员信息                      {                          //原始方法为：MessageAgent.RequestXml(this'agentUrl' agentToken' RequestDocument.ToString());//获取返回的XML                          reponseMessage = this.RequestResponseMessage(agentUrl' agentToken' RequestDocument.ToString());                      }                      break;                  case "OAuth"://OAuth授权测试                      {                          var strongResponseMessage = CreateResponseMessage<ResponseMessageNews>();                            strongResponseMessage.Articles.Add(new Article()                          {                              Title = "OAuth2.0测试"'                              Description = "选择下面两种不同的方式进行测试，区别在于授权成功后，最后停留的页面。"'                              //Url = "http://sdk.weixin.senparc.com/oauth2"'                              //PicUrl = "http://sdk.weixin.senparc.com/Images/qrcode.jpg"                          });                            strongResponseMessage.Articles.Add(new Article()                          {                              Title = "OAuth2.0测试（不带returnUrl），测试环境可使用"'                              Description = "OAuth2.0测试（不带returnUrl）"'                              Url = "http://sdk.weixin.senparc.com/oauth2"'                              PicUrl = "http://sdk.weixin.senparc.com/Images/qrcode.jpg"                          });                            var returnUrl = "/OAuth2/TestReturnUrl";                          strongResponseMessage.Articles.Add(new Article()                          {                              Title = "OAuth2.0测试（带returnUrl），生产环境强烈推荐使用"'                              Description = "OAuth2.0测试（带returnUrl）"'                              Url = "http://sdk.weixin.senparc.com/oauth2?returnUrl=" + returnUrl.UrlEncode()'                              PicUrl = "http://sdk.weixin.senparc.com/Images/qrcode.jpg"                          });                            reponseMessage = strongResponseMessage;                        }                      break;                  case "Description":                      {                          var strongResponseMessage = CreateResponseMessage<ResponseMessageText>();                          strongResponseMessage.Content = GetWelcomeInfo();                          reponseMessage = strongResponseMessage;                      }                      break;                  case "SubClickRoot_PicPhotoOrAlbum":                      {                          var strongResponseMessage = CreateResponseMessage<ResponseMessageText>();                          reponseMessage = strongResponseMessage;                          strongResponseMessage.Content = "您点击了【微信拍照】按钮。系统将会弹出拍照或者相册发图。";                      }                      break;                  case "SubClickRoot_ScancodePush":                      {                          var strongResponseMessage = CreateResponseMessage<ResponseMessageText>();                          reponseMessage = strongResponseMessage;                          strongResponseMessage.Content = "您点击了【微信扫码】按钮。";                      }                      break;                  case "ConditionalMenu_Male":                      {                          var strongResponseMessage = CreateResponseMessage<ResponseMessageText>();                          reponseMessage = strongResponseMessage;                          strongResponseMessage.Content = "您点击了个性化菜单按钮，您的微信性别设置为：男。";                      }                      break;                  case "ConditionalMenu_Femle":                      {                          var strongResponseMessage = CreateResponseMessage<ResponseMessageText>();                          reponseMessage = strongResponseMessage;                          strongResponseMessage.Content = "您点击了个性化菜单按钮，您的微信性别设置为：女。";                      }                      break;                  case "GetNewMediaId"://获取新的MediaId                      {                          var strongResponseMessage = CreateResponseMessage<ResponseMessageText>();                          try                          {                              var result = AdvancedAPIs.MediaApi.UploadForeverMedia(appId' Server.GetMapPath("~/Images/logo.jpg"));                              strongResponseMessage.Content = result.media_id;                          }                          catch (Exception e)                          {                              strongResponseMessage.Content = "发生错误：" + e.Message;                              WeixinTrace.SendCustomLog("调用UploadForeverMedia()接口发生异常"' e.Message);                          }                      }                      break;                  default:                      {                          var strongResponseMessage = CreateResponseMessage<ResponseMessageText>();                          strongResponseMessage.Content = "您点击了按钮，EventKey：" + requestMessage.EventKey;                          reponseMessage = strongResponseMessage;                      }                      break;              }
Magic Number,Senparc.Weixin.MP.Sample.CommonService,EventService,C:\repos\JeffreySu_WeiXinMPSDK\src\Senparc.Weixin.MP.Sample\Senparc.Weixin.MP.Sample.CommonService\EventService.cs,ConfigOnWeixinExceptionFunc,The following statement contains a magic number: try              {                  Task.Factory.StartNew(async () =>                  {  #if NET45                      var appId = ConfigurationManager.AppSettings["WeixinAppId"];  #else                      var appId = "AppId";  #endif                        string openId = "";//收到通知的管理员OpenId                      var host = "A1 / AccessTokenOrAppId：" + (ex.AccessTokenOrAppId ?? "null");                      string service = null;                      string message = ex.Message;                      var status = ex.GetType().Name;                      var remark = "\r\n这是一条通过OnWeixinExceptionFunc事件发送的异步模板消息";                      string url = "https://github.com/JeffreySu/WeiXinMPSDK/blob/24aca11630bf833f6a4b6d36dce80c5b171281d3/src/Senparc.Weixin.MP.Sample/Senparc.Weixin.MP.Sample/Global.asax.cs#L246";//需要点击打开的URL                        var sendTemplateMessage = true;                        if (ex is ErrorJsonResultException)                      {                          var jsonEx = (ErrorJsonResultException)ex;                          service = jsonEx.Url;                          message = jsonEx.Message;                            //需要忽略的类型                          var ignoreErrorCodes = new[]                          {                                  ReturnCode.获取access_token时AppSecret错误或者access_token无效'                                  ReturnCode.template_id不正确'                                  ReturnCode.缺少access_token参数'                                  ReturnCode.api功能未授权'                                  ReturnCode.用户未授权该api'                                  ReturnCode.参数错误invalid_parameter'                                  ReturnCode.接口调用超过限制'                                  ReturnCode.需要接收者关注'//43004                                    //其他更多可能的情况                              };                          if (ignoreErrorCodes.Contains(jsonEx.JsonResult.errcode))                          {                              sendTemplateMessage = false;//防止无限递归，这种请款那个下不发送消息                          }                            //TODO:防止更多的接口自身错误导致的无限递归。                      }                      else                      {                          if (ex.Message.StartsWith("openid:"))                          {                              openId = ex.Message.Split(':')[1];//发送给指定OpenId                          }                          service = "WeixinException";                          message = ex.Message;                      }                        if (sendTemplateMessage)                      {                          int sleepSeconds = 3;                          Thread.Sleep(sleepSeconds * 1000);                          var data = new WeixinTemplate_ExceptionAlert(string.Format("微信发生异常（延时{0}秒）"' sleepSeconds)' host' service' status' message' remark);                            //修改OpenId、启用以下代码后即可收到模板消息                          if (!string.IsNullOrEmpty(openId))                          {                              var result = await Senparc.Weixin.MP.AdvancedAPIs.TemplateApi.SendTemplateMessageAsync(appId' openId' data.TemplateId'                                url' data);                          }                      }                  });              }              catch (Exception e)              {                  Senparc.Weixin.WeixinTrace.SendCustomLog("OnWeixinExceptionFunc过程错误"' e.Message);              }
Magic Number,Senparc.Weixin.MP.Sample.CommonService,EventService,C:\repos\JeffreySu_WeiXinMPSDK\src\Senparc.Weixin.MP.Sample\Senparc.Weixin.MP.Sample.CommonService\EventService.cs,ConfigOnWeixinExceptionFunc,The following statement contains a magic number: try              {                  Task.Factory.StartNew(async () =>                  {  #if NET45                      var appId = ConfigurationManager.AppSettings["WeixinAppId"];  #else                      var appId = "AppId";  #endif                        string openId = "";//收到通知的管理员OpenId                      var host = "A1 / AccessTokenOrAppId：" + (ex.AccessTokenOrAppId ?? "null");                      string service = null;                      string message = ex.Message;                      var status = ex.GetType().Name;                      var remark = "\r\n这是一条通过OnWeixinExceptionFunc事件发送的异步模板消息";                      string url = "https://github.com/JeffreySu/WeiXinMPSDK/blob/24aca11630bf833f6a4b6d36dce80c5b171281d3/src/Senparc.Weixin.MP.Sample/Senparc.Weixin.MP.Sample/Global.asax.cs#L246";//需要点击打开的URL                        var sendTemplateMessage = true;                        if (ex is ErrorJsonResultException)                      {                          var jsonEx = (ErrorJsonResultException)ex;                          service = jsonEx.Url;                          message = jsonEx.Message;                            //需要忽略的类型                          var ignoreErrorCodes = new[]                          {                                  ReturnCode.获取access_token时AppSecret错误或者access_token无效'                                  ReturnCode.template_id不正确'                                  ReturnCode.缺少access_token参数'                                  ReturnCode.api功能未授权'                                  ReturnCode.用户未授权该api'                                  ReturnCode.参数错误invalid_parameter'                                  ReturnCode.接口调用超过限制'                                  ReturnCode.需要接收者关注'//43004                                    //其他更多可能的情况                              };                          if (ignoreErrorCodes.Contains(jsonEx.JsonResult.errcode))                          {                              sendTemplateMessage = false;//防止无限递归，这种请款那个下不发送消息                          }                            //TODO:防止更多的接口自身错误导致的无限递归。                      }                      else                      {                          if (ex.Message.StartsWith("openid:"))                          {                              openId = ex.Message.Split(':')[1];//发送给指定OpenId                          }                          service = "WeixinException";                          message = ex.Message;                      }                        if (sendTemplateMessage)                      {                          int sleepSeconds = 3;                          Thread.Sleep(sleepSeconds * 1000);                          var data = new WeixinTemplate_ExceptionAlert(string.Format("微信发生异常（延时{0}秒）"' sleepSeconds)' host' service' status' message' remark);                            //修改OpenId、启用以下代码后即可收到模板消息                          if (!string.IsNullOrEmpty(openId))                          {                              var result = await Senparc.Weixin.MP.AdvancedAPIs.TemplateApi.SendTemplateMessageAsync(appId' openId' data.TemplateId'                                url' data);                          }                      }                  });              }              catch (Exception e)              {                  Senparc.Weixin.WeixinTrace.SendCustomLog("OnWeixinExceptionFunc过程错误"' e.Message);              }
Magic Number,Senparc.Weixin.MP.Sample.CommonService,LocationService,C:\repos\JeffreySu_WeiXinMPSDK\src\Senparc.Weixin.MP.Sample\Senparc.Weixin.MP.Sample.CommonService\LocationService.cs,GetResponseMessage,The following statement contains a magic number: {                  var markersList = new List<BaiduMarkers>();                  markersList.Add(new BaiduMarkers()                  {                      Longitude = requestMessage.Location_X'                      Latitude = requestMessage.Location_Y'                      Color = "red"'                      Label = "S"'                      Size = BaiduMarkerSize.m                  });                    var mapUrl = BaiduMapHelper.GetBaiduStaticMap(requestMessage.Location_X' requestMessage.Location_Y' 1' 6' markersList);                  responseMessage.Articles.Add(new Article()                  {                      Description = string.Format("【来自百度地图】您刚才发送了地理位置信息。Location_X：{0}，Location_Y：{1}，Scale：{2}，标签：{3}"'                                 requestMessage.Location_X' requestMessage.Location_Y'                                 requestMessage.Scale' requestMessage.Label)'                      PicUrl = mapUrl'                      Title = "定位地点周边地图"'                      Url = mapUrl                  });              }
Magic Number,Senparc.Weixin.MP.Sample.CommonService,LocationService,C:\repos\JeffreySu_WeiXinMPSDK\src\Senparc.Weixin.MP.Sample\Senparc.Weixin.MP.Sample.CommonService\LocationService.cs,GetResponseMessage,The following statement contains a magic number: {                  var markersList = new List<GoogleMapMarkers>();                  markersList.Add(new GoogleMapMarkers()                  {                      X = requestMessage.Location_X'                      Y = requestMessage.Location_Y'                      Color = "red"'                      Label = "S"'                      Size = GoogleMapMarkerSize.Default'                  });                  var mapSize = "480x600";                  var mapUrl = GoogleMapHelper.GetGoogleStaticMap(19 /*requestMessage.Scale*//*微信和GoogleMap的Scale不一致，这里建议使用固定值*/'                                                                                  markersList' mapSize);                  responseMessage.Articles.Add(new Article()                  {                      Description = string.Format("【来自GoogleMap】您刚才发送了地理位置信息。Location_X：{0}，Location_Y：{1}，Scale：{2}，标签：{3}"'                                    requestMessage.Location_X' requestMessage.Location_Y'                                    requestMessage.Scale' requestMessage.Label)'                      PicUrl = mapUrl'                      Title = "定位地点周边地图"'                      Url = mapUrl                  });              }
Magic Number,Senparc.Weixin.MP.Sample.CommonService.MessageHandlers.WebSocket,CustomWebSocketMessageHandler,C:\repos\JeffreySu_WeiXinMPSDK\src\Senparc.Weixin.MP.Sample\Senparc.Weixin.MP.Sample.CommonService\MessageHandlers\WebSocket\CustomWebSocketMessageHandler.cs,OnMessageReceiced,The following statement contains a magic number: await Task.Delay(1000);
Magic Number,Senparc.Weixin.MP.Sample.CommonService.MessageHandlers.WebSocket,CustomWebSocketMessageHandler,C:\repos\JeffreySu_WeiXinMPSDK\src\Senparc.Weixin.MP.Sample\Senparc.Weixin.MP.Sample.CommonService\MessageHandlers\WebSocket\CustomWebSocketMessageHandler.cs,OnMessageReceiced,The following statement contains a magic number: try              {                  //发送模板消息                  var formId = receivedMessage.FormId;//发送模板消息使用，需要在wxml中设置<form report-submit="true">                    var sessionBag = SessionContainer.GetSession(receivedMessage.SessionId);                    //临时演示使用固定openId                  var openId = sessionBag != null ? sessionBag.OpenId : "onh7q0DGM1dctSDbdByIHvX4imxA";// "用户未正确登陆";                    await webSocketHandler.SendMessage("OpenId：" + openId);                  //await webSocketHandler.SendMessage("FormId：" + formId);                    if (sessionBag == null)                  {                      openId = "onh7q0DGM1dctSDbdByIHvX4imxA";//临时测试                  }                    //var data = new WxOpenTemplateMessage_PaySuccessNotice(                  //    "在线购买"' DateTime.Now' "图书众筹"' "1234567890"'                  //    100' "400-9939-858"' "http://sdk.senparc.weixin.com");                    var data = new                  {                      keyword1 = new TemplateDataItem("来自小程序WebSocket的模板消息")'                      keyword2 = new TemplateDataItem(DateTime.Now.ToString())'                      keyword3 = new TemplateDataItem("Name")'                      keyword4 = new TemplateDataItem("Number")'                      keyword5 = new TemplateDataItem(100.ToString("C"))'                      keyword6 = new TemplateDataItem("400-9939-858")'                  };                    var tmResult = Senparc.Weixin.WxOpen.AdvancedAPIs.Template.TemplateApi.SendTemplateMessage(appId' openId' "Ap1S3tRvsB8BXsWkiILLz93nhe7S8IgAipZDfygy9Bg"' data' receivedMessage.FormId' "pages/websocket/websocket"' "websocket"'                           null);              }              catch (Exception ex)              {                  var msg = ex.Message + "\r\n\r\n" + originalData + "\r\n\r\nAPPID:" + appId;                    await webSocketHandler.SendMessage(msg); //VS2017以下如果编译不通过，可以注释掉这一行                    WeixinTrace.SendCustomLog("WebSocket OnMessageReceiced()过程出错"' msg);              }
Magic Number,Senparc.Weixin.MP.Sample.CommonService.WxOpenMessageHandler,CustomWxOpenMessageHandler,C:\repos\JeffreySu_WeiXinMPSDK\src\Senparc.Weixin.MP.Sample\Senparc.Weixin.MP.Sample.CommonService\MessageHandlers\WxOpenMessageHandler\CustomWxOpenMessageHandler.cs,CustomWxOpenMessageHandler,The following statement contains a magic number: WeixinContext.ExpireMinutes = 3;
Magic Number,Senparc.Weixin.MP.Sample.CommonService.WxOpenMessageHandler,CustomWxOpenMessageHandler,C:\repos\JeffreySu_WeiXinMPSDK\src\Senparc.Weixin.MP.Sample\Senparc.Weixin.MP.Sample.CommonService\MessageHandlers\WxOpenMessageHandler\CustomWxOpenMessageHandler.cs,OnTextRequest,The following statement contains a magic number: if (CurrentMessageContext.RequestMessages.Count > 1)              {                  result.AppendFormat("您刚才还发送了如下消息（{0}/{1}）：\r\n"' CurrentMessageContext.RequestMessages.Count'                      CurrentMessageContext.StorageData);                  for (int i = CurrentMessageContext.RequestMessages.Count - 2; i >= 0; i--)                  {                      var historyMessage = CurrentMessageContext.RequestMessages[i];                      string content = null;                      if (historyMessage is RequestMessageText)                      {                          content = (historyMessage as RequestMessageText).Content;                      }                      else if (historyMessage is RequestMessageEvent_UserEnterTempSession)                      {                          content = "[进入客服]";                      }                      else                      {                          content = string.Format("[非文字信息:{0}]"' historyMessage.GetType().Name);                      }                        result.AppendFormat("{0} 【{1}】{2}\r\n"'                          historyMessage.CreateTime.ToString("HH:mm:ss")'                          historyMessage.MsgType.ToString()'                          content                          );                  }                  result.AppendLine("\r\n");              }
