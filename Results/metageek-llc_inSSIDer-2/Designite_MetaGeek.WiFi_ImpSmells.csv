Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,MetaGeek.WiFi,NetworkData,C:\repos\metageek-llc_inSSIDer-2\MetaGeek.WiFi\NetworkData.cs,NetworkData,The method has 9 parameters. Parameters: timestamp' macAddress' security' ssid' channel' rssi' signalQuality' supportedRates' networkType
Long Parameter List,MetaGeek.WiFi,NetworkData,C:\repos\metageek-llc_inSSIDer-2\MetaGeek.WiFi\NetworkData.cs,NetworkData,The method has 10 parameters. Parameters: timestamp' macAddress' security' ssid' channel' rssi' signalQuality' supportedRates' networkType' age
Complex Conditional,MetaGeek.WiFi,AccessPoint,C:\repos\metageek-llc_inSSIDer-2\MetaGeek.WiFi\AccessPoint.cs,AddData,The conditional expression  "(MyNetworkDataCollection.Count > 1 && nd2.Rssi > MyNetworkDataCollection.Max(nd => nd.Rssi) &&                       (nd2.Rssi > MyNetworkDataCollection[MyNetworkDataCollection.Count - 2].Rssi &&                        MyNetworkDataCollection[MyNetworkDataCollection.Count - 1].Rssi >                        MyNetworkDataCollection[MyNetworkDataCollection.Count - 2].Rssi)) ||                      (nd2.Rssi > -100 && GpsData.SatelliteTime == DateTime.MinValue)"  is complex.
Magic Number,MetaGeek.WiFi,AccessPoint,C:\repos\metageek-llc_inSSIDer-2\MetaGeek.WiFi\AccessPoint.cs,AddData,The following statement contains a magic number: DeleteOldData(Timestamp - TimeSpan.FromMinutes(8));
Magic Number,MetaGeek.WiFi,AccessPoint,C:\repos\metageek-llc_inSSIDer-2\MetaGeek.WiFi\AccessPoint.cs,AddData,The following statement contains a magic number: lock (MyNetworkDataCollection)              {                  //Check if the RSSI had been consistently stronger and stronger than the strongest reading before updating the GPS data                  //This means if this reading and the last reading are both higher than 2 readings ago' update the GPS data                  if ((MyNetworkDataCollection.Count > 1 && nd2.Rssi > MyNetworkDataCollection.Max(nd => nd.Rssi) &&                       (nd2.Rssi > MyNetworkDataCollection[MyNetworkDataCollection.Count - 2].Rssi &&                        MyNetworkDataCollection[MyNetworkDataCollection.Count - 1].Rssi >                        MyNetworkDataCollection[MyNetworkDataCollection.Count - 2].Rssi)) ||                      (nd2.Rssi > -100 && GpsData.SatelliteTime == DateTime.MinValue))                  {                      //Update GPS data                      GpsData = gpsData;                  }                  //Add the data                  MyNetworkDataCollection.Add(nd2);              }
Magic Number,MetaGeek.WiFi,AccessPoint,C:\repos\metageek-llc_inSSIDer-2\MetaGeek.WiFi\AccessPoint.cs,AddData,The following statement contains a magic number: lock (MyNetworkDataCollection)              {                  //Check if the RSSI had been consistently stronger and stronger than the strongest reading before updating the GPS data                  //This means if this reading and the last reading are both higher than 2 readings ago' update the GPS data                  if ((MyNetworkDataCollection.Count > 1 && nd2.Rssi > MyNetworkDataCollection.Max(nd => nd.Rssi) &&                       (nd2.Rssi > MyNetworkDataCollection[MyNetworkDataCollection.Count - 2].Rssi &&                        MyNetworkDataCollection[MyNetworkDataCollection.Count - 1].Rssi >                        MyNetworkDataCollection[MyNetworkDataCollection.Count - 2].Rssi)) ||                      (nd2.Rssi > -100 && GpsData.SatelliteTime == DateTime.MinValue))                  {                      //Update GPS data                      GpsData = gpsData;                  }                  //Add the data                  MyNetworkDataCollection.Add(nd2);              }
Magic Number,MetaGeek.WiFi,AccessPoint,C:\repos\metageek-llc_inSSIDer-2\MetaGeek.WiFi\AccessPoint.cs,AddData,The following statement contains a magic number: lock (MyNetworkDataCollection)              {                  //Check if the RSSI had been consistently stronger and stronger than the strongest reading before updating the GPS data                  //This means if this reading and the last reading are both higher than 2 readings ago' update the GPS data                  if ((MyNetworkDataCollection.Count > 1 && nd2.Rssi > MyNetworkDataCollection.Max(nd => nd.Rssi) &&                       (nd2.Rssi > MyNetworkDataCollection[MyNetworkDataCollection.Count - 2].Rssi &&                        MyNetworkDataCollection[MyNetworkDataCollection.Count - 1].Rssi >                        MyNetworkDataCollection[MyNetworkDataCollection.Count - 2].Rssi)) ||                      (nd2.Rssi > -100 && GpsData.SatelliteTime == DateTime.MinValue))                  {                      //Update GPS data                      GpsData = gpsData;                  }                  //Add the data                  MyNetworkDataCollection.Add(nd2);              }
Magic Number,MetaGeek.WiFi,AccessPoint,C:\repos\metageek-llc_inSSIDer-2\MetaGeek.WiFi\AccessPoint.cs,AddData,The following statement contains a magic number: DeleteOldData(Timestamp - TimeSpan.FromMinutes(8));
Magic Number,MetaGeek.WiFi,AccessPoint,C:\repos\metageek-llc_inSSIDer-2\MetaGeek.WiFi\AccessPoint.cs,GetData,The following statement contains a magic number: return new object[]                         {                             Index'                             Graph'                             /*null'*/ //The signal indicator Image                             MacAddress.ToString()'                             Ssid'                             Spark'                             IsN && NSettings != null && NSettings.Is40Mhz                                 ? NSettings.SecondaryChannelLower                                       ? Channel + " + " + (Channel - 4)                                       : Channel + " + " + (Channel + 4)                                 : Channel.ToString()'                             Vendor'                             Security'                             MaxRate'                             NetworkType'                             FirstSeenTimestamp.ToLongTimeString()'                             LastSeenTimestamp.ToLongTimeString()'                             GpsData.Latitude.ToString("F6")'                             GpsData.Longitude.ToString("F6")                         };
Magic Number,MetaGeek.WiFi,AccessPoint,C:\repos\metageek-llc_inSSIDer-2\MetaGeek.WiFi\AccessPoint.cs,GetData,The following statement contains a magic number: return new object[]                         {                             Index'                             Graph'                             /*null'*/ //The signal indicator Image                             MacAddress.ToString()'                             Ssid'                             Spark'                             IsN && NSettings != null && NSettings.Is40Mhz                                 ? NSettings.SecondaryChannelLower                                       ? Channel + " + " + (Channel - 4)                                       : Channel + " + " + (Channel + 4)                                 : Channel.ToString()'                             Vendor'                             Security'                             MaxRate'                             NetworkType'                             FirstSeenTimestamp.ToLongTimeString()'                             LastSeenTimestamp.ToLongTimeString()'                             GpsData.Latitude.ToString("F6")'                             GpsData.Longitude.ToString("F6")                         };
Magic Number,MetaGeek.WiFi,AdapterVendors,C:\repos\metageek-llc_inSSIDer-2\MetaGeek.WiFi\AdapterVendors.cs,GetVendor,The following statement contains a magic number: string key = mac[0].ToString("X2") + "-" +                           mac[1].ToString("X2") + "-" +                           mac[2].ToString("X2");
Magic Number,MetaGeek.WiFi,MacAddress,C:\repos\metageek-llc_inSSIDer-2\MetaGeek.WiFi\MacAddress.cs,MacAddress,The following statement contains a magic number: foreach (byte b in _bytes)              {                  _myValue = _myValue << 8;                  _myValue |= b;              }
