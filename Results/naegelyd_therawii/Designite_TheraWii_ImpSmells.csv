Implementation smell,Namespace,Class,File,Method,Description
Complex Method,TheraWii,FormPerformance,C:\repos\naegelyd_therawii\FormPerformance.cs,updateChart,Cyclomatic complexity of the method is 17
Complex Method,TheraWii,FormPerformance,C:\repos\naegelyd_therawii\FormPerformance.cs,buttonSave_Click,Cyclomatic complexity of the method is 10
Complex Method,TheraWii,DimensionalTask,C:\repos\naegelyd_therawii\DimensionalTask.cs,getRequiredDevices,Cyclomatic complexity of the method is 10
Complex Method,TheraWii,InputDevice,C:\repos\naegelyd_therawii\InputDevice.cs,returnNew,Cyclomatic complexity of the method is 9
Complex Method,TheraWii,StringLogicalComparer,C:\repos\naegelyd_therawii\StringLogicalComparer.cs,Compare,Cyclomatic complexity of the method is 13
Complex Method,TheraWii,DataStorage,C:\repos\naegelyd_therawii\DataStorage.cs,DeserializeProfile,Cyclomatic complexity of the method is 8
Complex Method,TheraWii,ButtonEndCondition,C:\repos\naegelyd_therawii\EndCondition.cs,isMet,Cyclomatic complexity of the method is 45
Complex Method,TheraWii,TimeLimitEndCondition,C:\repos\naegelyd_therawii\EndCondition.cs,isMet,Cyclomatic complexity of the method is 13
Complex Method,TheraWii,FormRepeatTask,C:\repos\naegelyd_therawii\FormRepeatTask.cs,FormRepeatTask,Cyclomatic complexity of the method is 17
Complex Method,TheraWii,Form3DTask,C:\repos\naegelyd_therawii\Form3DTask.cs,comboBoxPosX_SelectedIndexChanged,Cyclomatic complexity of the method is 17
Complex Method,TheraWii,Form3DTask,C:\repos\naegelyd_therawii\Form3DTask.cs,comboBoxPosY_SelectedIndexChanged,Cyclomatic complexity of the method is 17
Complex Method,TheraWii,Form3DTask,C:\repos\naegelyd_therawii\Form3DTask.cs,comboBoxSizeX_SelectedIndexChanged,Cyclomatic complexity of the method is 17
Complex Method,TheraWii,Form3DTask,C:\repos\naegelyd_therawii\Form3DTask.cs,comboBoxSizeY_SelectedIndexChanged,Cyclomatic complexity of the method is 17
Complex Method,TheraWii,Form3DTask,C:\repos\naegelyd_therawii\Form3DTask.cs,comboBoxPosZ_SelectedIndexChanged,Cyclomatic complexity of the method is 17
Complex Method,TheraWii,Form3DTask,C:\repos\naegelyd_therawii\Form3DTask.cs,comboBoxSizeZ_SelectedIndexChanged,Cyclomatic complexity of the method is 17
Complex Method,TheraWii,Form3DTask,C:\repos\naegelyd_therawii\Form3DTask.cs,comboBoxEndCondition_SelectedIndexChanged,Cyclomatic complexity of the method is 10
Complex Method,TheraWii,FormNewTask,C:\repos\naegelyd_therawii\FormNewTask.cs,buttonCreate_Click,Cyclomatic complexity of the method is 25
Complex Method,TheraWii,Form2DTask,C:\repos\naegelyd_therawii\Form2DTask.cs,buttonOK_Click,Cyclomatic complexity of the method is 15
Complex Method,TheraWii,Form2DTask,C:\repos\naegelyd_therawii\Form2DTask.cs,comboBoxPosX_SelectedIndexChanged,Cyclomatic complexity of the method is 17
Complex Method,TheraWii,Form2DTask,C:\repos\naegelyd_therawii\Form2DTask.cs,comboBoxPosY_SelectedIndexChanged,Cyclomatic complexity of the method is 17
Complex Method,TheraWii,Form2DTask,C:\repos\naegelyd_therawii\Form2DTask.cs,comboBoxSizeX_SelectedIndexChanged,Cyclomatic complexity of the method is 17
Complex Method,TheraWii,Form2DTask,C:\repos\naegelyd_therawii\Form2DTask.cs,comboBoxSizeY_SelectedIndexChanged,Cyclomatic complexity of the method is 17
Complex Method,TheraWii,Form2DTask,C:\repos\naegelyd_therawii\Form2DTask.cs,comboBoxEndCondition_SelectedIndexChanged,Cyclomatic complexity of the method is 20
Complex Method,TheraWii,FormMain,C:\repos\naegelyd_therawii\FormMain.cs,buttonAddTask_Click,Cyclomatic complexity of the method is 11
Complex Method,TheraWii,FormMain,C:\repos\naegelyd_therawii\FormMain.cs,buttonPlay_Click,Cyclomatic complexity of the method is 12
Complex Method,TheraWii,FormMain,C:\repos\naegelyd_therawii\FormMain.cs,buttonDeleteTask_Click,Cyclomatic complexity of the method is 11
Complex Method,TheraWii,FormMain,C:\repos\naegelyd_therawii\FormMain.cs,tabs_SelectedIndexChanged,Cyclomatic complexity of the method is 13
Complex Method,TheraWii,FormMain,C:\repos\naegelyd_therawii\FormMain.cs,pasteMenuItem_Click,Cyclomatic complexity of the method is 13
Complex Method,TheraWii,FormDialogTask,C:\repos\naegelyd_therawii\FormDialogTask.cs,comboBoxEndCondition_SelectedIndexChanged,Cyclomatic complexity of the method is 10
Complex Method,TheraWii,Task2D,C:\repos\naegelyd_therawii\Task2D.cs,Initialize,Cyclomatic complexity of the method is 18
Long Parameter List,TheraWii,Basketball,C:\repos\naegelyd_therawii\Basketball.cs,Basketball,The method has 5 parameters.
Long Parameter List,TheraWii,GameTextBox,C:\repos\naegelyd_therawii\GameTextBox.cs,Initialize,The method has 5 parameters.
Long Parameter List,TheraWii,Cuboid,C:\repos\naegelyd_therawii\Cuboid.cs,Cuboid,The method has 5 parameters.
Long Parameter List,TheraWii,Ellipsoid,C:\repos\naegelyd_therawii\Ellipsoid.cs,Ellipsoid,The method has 5 parameters.
Long Parameter List,TheraWii,DimensionalTask,C:\repos\naegelyd_therawii\DimensionalTask.cs,Initialize,The method has 7 parameters.
Long Parameter List,TheraWii,Hoop,C:\repos\naegelyd_therawii\Hoop.cs,Hoop,The method has 5 parameters.
Long Parameter List,TheraWii,StringLogicalComparer,C:\repos\naegelyd_therawii\StringLogicalComparer.cs,CompareNum,The method has 5 parameters.
Long Parameter List,TheraWii,RepeatTask,C:\repos\naegelyd_therawii\RepeatTask.cs,Initialize,The method has 7 parameters.
Long Parameter List,TheraWii,DialogTask,C:\repos\naegelyd_therawii\DialogTask.cs,Initialize,The method has 7 parameters.
Long Parameter List,TheraWii,Task,C:\repos\naegelyd_therawii\Task.cs,Initialize,The method has 7 parameters.
Long Parameter List,TheraWii,Task2D,C:\repos\naegelyd_therawii\Task2D.cs,Initialize,The method has 7 parameters.
Long Statement,TheraWii,FormPerformance,C:\repos\naegelyd_therawii\FormPerformance.cs,comboBoxMetric_SelectedIndexChanged,The length of the statement  "	if (0 <= comboBoxMetric.SelectedIndex && comboBoxMetric.SelectedIndex < PerformanceMetrics.PerformanceMetricStrings.Length) { " is 125.
Long Statement,TheraWii,FormPerformance,C:\repos\naegelyd_therawii\FormPerformance.cs,buttonSave_Click,The length of the statement  "	saveFileDialog1.Filter = "PNG (*.png)|*.png|JPEG (*.jpg)|*.jpg|EMF-Plus (*.emf)|*.emf|EMF-Dual (*.emf)|*.emf|EMF (*.emf)|*.emf|GIF (*.gif)|*.gif|TIFF (*.tif)|*.tif|Bitmap (*.bmp)|*.bmp"; " is 186.
Long Statement,TheraWii,GameTextBox,C:\repos\naegelyd_therawii\GameTextBox.cs,Initialize,The length of the statement  "	/* Determine the number lines in the display string and the number of characters in the longest line */int maxLength = 0' numLines = 0; " is 135.
Long Statement,TheraWii,DimensionalTask,C:\repos\naegelyd_therawii\DimensionalTask.cs,Initialize,The length of the statement  "	if ((endCondition.GetType () == typeof(TimeLimitEndCondition) && ((TimeLimitEndCondition)endCondition).Type == TimeLimitType.TimeInRegion) || (endCondition.GetType () == typeof(TimeLimitEndCondition) && ((TimeLimitEndCondition)endCondition).Type == TimeLimitType.TimeOutRegion)) " is 278.
Long Statement,TheraWii,DimensionalTask,C:\repos\naegelyd_therawii\DimensionalTask.cs,Update,The length of the statement  "	if ((endCondition.GetType () == typeof(TimeLimitEndCondition) && ((TimeLimitEndCondition)endCondition).Type == TimeLimitType.TimeInRegion) || (endCondition.GetType () == typeof(TimeLimitEndCondition) && ((TimeLimitEndCondition)endCondition).Type == TimeLimitType.TimeOutRegion)) " is 278.
Long Statement,TheraWii,DimensionalTask,C:\repos\naegelyd_therawii\DimensionalTask.cs,Update,The length of the statement  "	output.setData ("RegionX1"' (((RegionParameter)region.rParams [regPT.X]).cPos - ((RegionParameter)region.rParams [regPT.X]).cSize / 2).ToString ()); " is 148.
Long Statement,TheraWii,DimensionalTask,C:\repos\naegelyd_therawii\DimensionalTask.cs,Update,The length of the statement  "	output.setData ("RegionX2"' (((RegionParameter)region.rParams [regPT.X]).cPos + ((RegionParameter)region.rParams [regPT.X]).cSize / 2).ToString ()); " is 148.
Long Statement,TheraWii,DimensionalTask,C:\repos\naegelyd_therawii\DimensionalTask.cs,Update,The length of the statement  "	output.setData ("RegionY1"' (((RegionParameter)region.rParams [regPT.Y]).cPos - ((RegionParameter)region.rParams [regPT.Y]).cSize / 2).ToString ()); " is 148.
Long Statement,TheraWii,DimensionalTask,C:\repos\naegelyd_therawii\DimensionalTask.cs,Update,The length of the statement  "	output.setData ("RegionY2"' (((RegionParameter)region.rParams [regPT.Y]).cPos + ((RegionParameter)region.rParams [regPT.Y]).cSize / 2).ToString ()); " is 148.
Long Statement,TheraWii,DimensionalTask,C:\repos\naegelyd_therawii\DimensionalTask.cs,Update,The length of the statement  "	output.setData ("RegionZ1"' (((RegionParameter)region.rParams [regPT.Z]).cPos - ((RegionParameter)region.rParams [regPT.Z]).cSize / 2).ToString ()); " is 148.
Long Statement,TheraWii,DimensionalTask,C:\repos\naegelyd_therawii\DimensionalTask.cs,Update,The length of the statement  "	output.setData ("RegionZ2"' (((RegionParameter)region.rParams [regPT.Z]).cPos + ((RegionParameter)region.rParams [regPT.Z]).cSize / 2).ToString ()); " is 148.
Long Statement,TheraWii,Hoop,C:\repos\naegelyd_therawii\Hoop.cs,Draw,The length of the statement  "			effect.World = transforms [mesh.ParentBone.Index] * Matrix.CreateTranslation (0.0f' -12.5f' -67.0f) * Matrix.CreateRotationY (MathHelper.ToRadians (-38.0f)) * Matrix.CreateRotationX (MathHelper.ToRadians (10.0f)) * Matrix.CreateScale (0.5f * 0.038f * Scale.X' 0.5f * 0.044f * Scale.Y' 0.5f * 0.038f * Scale.Z) * Matrix.CreateTranslation (Position)//* Matrix.CreateTranslation(2.08f' -0.15f' -3.0f) " is 397.
Long Statement,TheraWii,Line,C:\repos\naegelyd_therawii\Line.cs,Draw,The length of the statement  "	graphicsDevice.DrawUserPrimitives<VertexPositionColor> (PrimitiveType.LineList' pointList' 0' // vertex buffer offset to add to each element of the index buffer " is 160.
Long Statement,TheraWii,InputNunchuckJoystick,C:\repos\naegelyd_therawii\InputDevice.cs,getXYZ,The length of the statement  "	float dx = MathHelper.Clamp ((float)Math.Sqrt (2) * w.joyMagnitude * (float)Math.Sin (MathHelper.ToRadians (w.joyAngle))' -1.0f' 1.0f); " is 135.
Long Statement,TheraWii,InputNunchuckJoystick,C:\repos\naegelyd_therawii\InputDevice.cs,getXYZ,The length of the statement  "	float dy = MathHelper.Clamp ((float)Math.Sqrt (2) * w.joyMagnitude * (float)Math.Cos (MathHelper.ToRadians (w.joyAngle))' -1.0f' 1.0f); " is 135.
Long Statement,TheraWii,PerformanceMetrics,C:\repos\naegelyd_therawii\PerformanceMetric.cs,Update,The length of the statement  "	metrics [(int)PerformanceMetricType.PathEfficiency] = metrics [(int)PerformanceMetricType.PathDistance] / metrics [(int)PerformanceMetricType.PathLength]; " is 154.
Long Statement,TheraWii,PerformanceMetrics,C:\repos\naegelyd_therawii\PerformanceMetric.cs,Update,The length of the statement  "	metrics [(int)PerformanceMetricType.SpeedAverage] = metrics [(int)PerformanceMetricType.PathLength] / metrics [(int)PerformanceMetricType.TotalTime]; " is 149.
Long Statement,TheraWii,Region,C:\repos\naegelyd_therawii\Region.cs,ToString,The length of the statement  "	return "x_pos: " + rParams [regPT.X].cPos.ToString () + "   y_pos: " + rParams [regPT.Y].cPos.ToString () + "    z_pos: " + rParams [regPT.Z].cPos.ToString () + "   x_size: " + rParams [regPT.X].cSize.ToString () + "    y_size:  " + rParams [regPT.Y].cSize.ToString () + "    z_size: " + rParams [regPT.Z].cSize.ToString (); " is 324.
Long Statement,TheraWii,Game,C:\repos\naegelyd_therawii\Game.cs,Update,The length of the statement  "		goodbye.Initialize (this.graphics' this.Content' this.spriteBatch' PREFERRED_WIDTH' PREFERRED_HEIGHT' this.session' Vector3.Zero); " is 130.
Long Statement,TheraWii,DataStorage,C:\repos\naegelyd_therawii\DataStorage.cs,DeserializeDataModel,The length of the statement  "			MessageBox.Show ("Unable to Load Data.  Moving failed data file to: " + fi.FullName' "Warning"' MessageBoxButtons.OK' MessageBoxIcon.Warning); " is 142.
Long Statement,TheraWii,DataStorage,C:\repos\naegelyd_therawii\DataStorage.cs,DeserializeProfile,The length of the statement  "						throw new InvalidOperationException ("There is already an existing profile named " + p.Name + ".  Delete or rename it before importing."); " is 138.
Long Statement,TheraWii,DialogTask,C:\repos\naegelyd_therawii\DialogTask.cs,Initialize,The length of the statement  "	/* create some space in the text message before printing the end condition critera */if (endCondition.GetType () == typeof(ButtonEndCondition)) { " is 145.
Long Statement,TheraWii,FormMain,C:\repos\naegelyd_therawii\FormMain.cs,exportTherapyToolStripMenuItem_Click,The length of the statement  "		MessageBox.Show ("Error: No Therapy selected.\nPlease select a Therapy from the Therapy Editor tab."' "Export Therapy"' MessageBoxButtons.OK' MessageBoxIcon.Error); " is 164.
Long Statement,TheraWii,FormMain,C:\repos\naegelyd_therawii\FormMain.cs,exportProfileToolStripMenuItem_Click,The length of the statement  "		MessageBox.Show ("Error: No Profile selected.\nPlease select a Profile from the Profile Management tab."' "Export Profile"' MessageBoxButtons.OK' MessageBoxIcon.Error); " is 168.
Long Statement,TheraWii,FormMain,C:\repos\naegelyd_therawii\FormMain.cs,buttonAddTask_Click,The length of the statement  "		if (treeViewTasks.SelectedNode != null && (treeViewTasks.SelectedNode.Tag.GetType () == typeof(RepeatTask) || treeViewTasks.SelectedNode.Parent != null)) { " is 155.
Long Statement,TheraWii,FormMain,C:\repos\naegelyd_therawii\FormMain.cs,buttonPlay_Click,The length of the statement  "		DialogResult result = MessageBox.Show ("Could not start Therapy. Please make sure that:\n\n  1. A Therapy is selected.\n  2. The selected Therapy contains at least one task."' caption' MessageBoxButtons.OK' MessageBoxIcon.Warning); " is 231.
Long Statement,TheraWii,FormMain,C:\repos\naegelyd_therawii\FormMain.cs,buttonDeleteProfile_Click,The length of the statement  "		string message = String.Format ("Are you sure you want to delete \"{0}\"?\n\n" + "WARNING:  THIS WILL DELETE ALL SESSION DATA ASSOCIATED WITH \"{0}\""' p); " is 155.
Long Statement,TheraWii,FormMain,C:\repos\naegelyd_therawii\FormMain.cs,buttonDeleteSession_Click,The length of the statement  "		string message = String.Format ("Are you sure you want to delete session #\"{0}\"?"' listViewSessions.SelectedItems [0].Text); " is 126.
Long Statement,TheraWii,Session,C:\repos\naegelyd_therawii\Session.cs,Initialize,The length of the statement  "	string date = createDate.Year + "-" + createDate.Month + "-" + createDate.Day + " " + createDate.Hour + "-" + createDate.Minute + +createDate.Second; " is 149.
Long Statement,TheraWii,Task2D,C:\repos\naegelyd_therawii\Task2D.cs,Initialize,The length of the statement  "		rectangle = new Cuboid (g' c' new Vector3 (((RegionParameter)region.rParams [regPT.X]).cPos' ((RegionParameter)region.rParams [regPT.Y]).cPos' 0.0f)' new Vector3 (((RegionParameter)region.rParams [regPT.X]).cSize' ((RegionParameter)region.rParams [regPT.Y]).cSize' 0.0f)' Color.DarkBlue); " is 288.
Long Statement,TheraWii,Task2D,C:\repos\naegelyd_therawii\Task2D.cs,Initialize,The length of the statement  "		ellipse = new Ellipsoid (g' c' new Vector3 (((RegionParameter)region.rParams [regPT.X]).cPos' ((RegionParameter)region.rParams [regPT.Y]).cPos' 0.0f)' new Vector3 (((RegionParameter)region.rParams [regPT.X]).cSize / 2' ((RegionParameter)region.rParams [regPT.Y]).cSize / 2' 0.0f)' Color.DarkBlue); " is 297.
Long Statement,TheraWii,Task2D,C:\repos\naegelyd_therawii\Task2D.cs,Initialize,The length of the statement  "		hoop = new Hoop (g' c' new Vector3 (((RegionParameter)region.rParams [regPT.X]).cPos' ((RegionParameter)region.rParams [regPT.Y]).cPos' 0.0f)' new Vector3 (((RegionParameter)region.rParams [regPT.X]).cSize' ((RegionParameter)region.rParams [regPT.Y]).cSize' 0.0f)' Color.DarkBlue); " is 281.
Complex Conditional,TheraWii,DimensionalTask,C:\repos\naegelyd_therawii\DimensionalTask.cs,Initialize,The conditional expression  "(endCondition.GetType () == typeof(TimeLimitEndCondition) && ((TimeLimitEndCondition)endCondition).Type == TimeLimitType.TimeInRegion) || (endCondition.GetType () == typeof(TimeLimitEndCondition) && ((TimeLimitEndCondition)endCondition).Type == TimeLimitType.TimeOutRegion)"  is complex.
Complex Conditional,TheraWii,DimensionalTask,C:\repos\naegelyd_therawii\DimensionalTask.cs,Update,The conditional expression  "(endCondition.GetType () == typeof(TimeLimitEndCondition) && ((TimeLimitEndCondition)endCondition).Type == TimeLimitType.TimeInRegion) || (endCondition.GetType () == typeof(TimeLimitEndCondition) && ((TimeLimitEndCondition)endCondition).Type == TimeLimitType.TimeOutRegion)"  is complex.
Complex Conditional,TheraWii,Region,C:\repos\naegelyd_therawii\Region.cs,isIn2DRect,The conditional expression  "minX <= pos.X && pos.X <= maxX && minY <= pos.Y && pos.Y <= maxY"  is complex.
Empty Catch Block,TheraWii,DScsv,C:\repos\naegelyd_therawii\DScsv.cs,delete,The method has an empty catch block.
Empty Catch Block,TheraWii,Profile,C:\repos\naegelyd_therawii\Profile.cs,delete,The method has an empty catch block.
Magic Number,TheraWii,FormAddInputs,C:\repos\naegelyd_therawii\FormAddInput.cs,FormAddInputs_KeyPress,The following statement contains a magic number: if (e.KeyChar.Equals (Convert.ToChar (13))) {  	buttonAdd_Click (this' new EventArgs ());  }  else if (e.KeyChar.Equals (Convert.ToChar (27))) {  	buttonCancel_Click (this' new EventArgs ());  }  
Magic Number,TheraWii,FormAddInputs,C:\repos\naegelyd_therawii\FormAddInput.cs,FormAddInputs_KeyPress,The following statement contains a magic number: if (e.KeyChar.Equals (Convert.ToChar (13))) {  	buttonAdd_Click (this' new EventArgs ());  }  else if (e.KeyChar.Equals (Convert.ToChar (27))) {  	buttonCancel_Click (this' new EventArgs ());  }  
Magic Number,TheraWii,FormAddInputs,C:\repos\naegelyd_therawii\FormAddInput.cs,FormAddInputs_KeyPress,The following statement contains a magic number: if (e.KeyChar.Equals (Convert.ToChar (27))) {  	buttonCancel_Click (this' new EventArgs ());  }  
Magic Number,TheraWii,FormAddInputs,C:\repos\naegelyd_therawii\FormAddInput.cs,FormAddInputs_Load,The following statement contains a magic number: if (prevLocation == null || (prevLocation.X == 0 && prevLocation.Y == 0)) {  	Point center = ((FormMain)this.Tag).getCenterPosition ();  	Point newPosition = new Point ();  	newPosition.X = center.X - this.Width / 2;  	newPosition.Y = center.Y - this.Height / 2;  	if (newPosition.Y < 1)  		newPosition.Y = 1;  	if (newPosition.X < 1)  		newPosition.X = 1;  	this.Location = newPosition;  }  else  	this.Location = prevLocation;  
Magic Number,TheraWii,FormAddInputs,C:\repos\naegelyd_therawii\FormAddInput.cs,FormAddInputs_Load,The following statement contains a magic number: if (prevLocation == null || (prevLocation.X == 0 && prevLocation.Y == 0)) {  	Point center = ((FormMain)this.Tag).getCenterPosition ();  	Point newPosition = new Point ();  	newPosition.X = center.X - this.Width / 2;  	newPosition.Y = center.Y - this.Height / 2;  	if (newPosition.Y < 1)  		newPosition.Y = 1;  	if (newPosition.X < 1)  		newPosition.X = 1;  	this.Location = newPosition;  }  else  	this.Location = prevLocation;  
Magic Number,TheraWii,FormAddInputs,C:\repos\naegelyd_therawii\FormAddInput.cs,FormAddInputs_Load,The following statement contains a magic number: newPosition.X = center.X - this.Width / 2;  
Magic Number,TheraWii,FormAddInputs,C:\repos\naegelyd_therawii\FormAddInput.cs,FormAddInputs_Load,The following statement contains a magic number: newPosition.Y = center.Y - this.Height / 2;  
Magic Number,TheraWii,FormPerformance,C:\repos\naegelyd_therawii\FormPerformance.cs,buttonSave_Click,The following statement contains a magic number: if (saveFileDialog1.ShowDialog () == DialogResult.OK) {  	ChartImageFormat format = ChartImageFormat.Bmp;  	if (saveFileDialog1.FileName.EndsWith ("bmp")) {  		format = ChartImageFormat.Bmp;  	}  	else if (saveFileDialog1.FileName.EndsWith ("jpg")) {  		format = ChartImageFormat.Jpeg;  	}  	else if (saveFileDialog1.FileName.EndsWith ("emf") && saveFileDialog1.FilterIndex == 3) {  		format = ChartImageFormat.EmfPlus;  	}  	else if (saveFileDialog1.FileName.EndsWith ("emf") && saveFileDialog1.FilterIndex == 4) {  		format = ChartImageFormat.EmfDual;  	}  	else if (saveFileDialog1.FileName.EndsWith ("emf")) {  		format = ChartImageFormat.Emf;  	}  	else if (saveFileDialog1.FileName.EndsWith ("gif")) {  		format = ChartImageFormat.Gif;  	}  	else if (saveFileDialog1.FileName.EndsWith ("png")) {  		format = ChartImageFormat.Png;  	}  	else if (saveFileDialog1.FileName.EndsWith ("tif")) {  		format = ChartImageFormat.Tiff;  	}  	// Save image  	chart1.SaveImage (saveFileDialog1.FileName' format);  }  
Magic Number,TheraWii,FormPerformance,C:\repos\naegelyd_therawii\FormPerformance.cs,buttonSave_Click,The following statement contains a magic number: if (saveFileDialog1.ShowDialog () == DialogResult.OK) {  	ChartImageFormat format = ChartImageFormat.Bmp;  	if (saveFileDialog1.FileName.EndsWith ("bmp")) {  		format = ChartImageFormat.Bmp;  	}  	else if (saveFileDialog1.FileName.EndsWith ("jpg")) {  		format = ChartImageFormat.Jpeg;  	}  	else if (saveFileDialog1.FileName.EndsWith ("emf") && saveFileDialog1.FilterIndex == 3) {  		format = ChartImageFormat.EmfPlus;  	}  	else if (saveFileDialog1.FileName.EndsWith ("emf") && saveFileDialog1.FilterIndex == 4) {  		format = ChartImageFormat.EmfDual;  	}  	else if (saveFileDialog1.FileName.EndsWith ("emf")) {  		format = ChartImageFormat.Emf;  	}  	else if (saveFileDialog1.FileName.EndsWith ("gif")) {  		format = ChartImageFormat.Gif;  	}  	else if (saveFileDialog1.FileName.EndsWith ("png")) {  		format = ChartImageFormat.Png;  	}  	else if (saveFileDialog1.FileName.EndsWith ("tif")) {  		format = ChartImageFormat.Tiff;  	}  	// Save image  	chart1.SaveImage (saveFileDialog1.FileName' format);  }  
Magic Number,TheraWii,FormPerformance,C:\repos\naegelyd_therawii\FormPerformance.cs,buttonSave_Click,The following statement contains a magic number: if (saveFileDialog1.FileName.EndsWith ("bmp")) {  	format = ChartImageFormat.Bmp;  }  else if (saveFileDialog1.FileName.EndsWith ("jpg")) {  	format = ChartImageFormat.Jpeg;  }  else if (saveFileDialog1.FileName.EndsWith ("emf") && saveFileDialog1.FilterIndex == 3) {  	format = ChartImageFormat.EmfPlus;  }  else if (saveFileDialog1.FileName.EndsWith ("emf") && saveFileDialog1.FilterIndex == 4) {  	format = ChartImageFormat.EmfDual;  }  else if (saveFileDialog1.FileName.EndsWith ("emf")) {  	format = ChartImageFormat.Emf;  }  else if (saveFileDialog1.FileName.EndsWith ("gif")) {  	format = ChartImageFormat.Gif;  }  else if (saveFileDialog1.FileName.EndsWith ("png")) {  	format = ChartImageFormat.Png;  }  else if (saveFileDialog1.FileName.EndsWith ("tif")) {  	format = ChartImageFormat.Tiff;  }  
Magic Number,TheraWii,FormPerformance,C:\repos\naegelyd_therawii\FormPerformance.cs,buttonSave_Click,The following statement contains a magic number: if (saveFileDialog1.FileName.EndsWith ("bmp")) {  	format = ChartImageFormat.Bmp;  }  else if (saveFileDialog1.FileName.EndsWith ("jpg")) {  	format = ChartImageFormat.Jpeg;  }  else if (saveFileDialog1.FileName.EndsWith ("emf") && saveFileDialog1.FilterIndex == 3) {  	format = ChartImageFormat.EmfPlus;  }  else if (saveFileDialog1.FileName.EndsWith ("emf") && saveFileDialog1.FilterIndex == 4) {  	format = ChartImageFormat.EmfDual;  }  else if (saveFileDialog1.FileName.EndsWith ("emf")) {  	format = ChartImageFormat.Emf;  }  else if (saveFileDialog1.FileName.EndsWith ("gif")) {  	format = ChartImageFormat.Gif;  }  else if (saveFileDialog1.FileName.EndsWith ("png")) {  	format = ChartImageFormat.Png;  }  else if (saveFileDialog1.FileName.EndsWith ("tif")) {  	format = ChartImageFormat.Tiff;  }  
Magic Number,TheraWii,FormPerformance,C:\repos\naegelyd_therawii\FormPerformance.cs,buttonSave_Click,The following statement contains a magic number: if (saveFileDialog1.FileName.EndsWith ("jpg")) {  	format = ChartImageFormat.Jpeg;  }  else if (saveFileDialog1.FileName.EndsWith ("emf") && saveFileDialog1.FilterIndex == 3) {  	format = ChartImageFormat.EmfPlus;  }  else if (saveFileDialog1.FileName.EndsWith ("emf") && saveFileDialog1.FilterIndex == 4) {  	format = ChartImageFormat.EmfDual;  }  else if (saveFileDialog1.FileName.EndsWith ("emf")) {  	format = ChartImageFormat.Emf;  }  else if (saveFileDialog1.FileName.EndsWith ("gif")) {  	format = ChartImageFormat.Gif;  }  else if (saveFileDialog1.FileName.EndsWith ("png")) {  	format = ChartImageFormat.Png;  }  else if (saveFileDialog1.FileName.EndsWith ("tif")) {  	format = ChartImageFormat.Tiff;  }  
Magic Number,TheraWii,FormPerformance,C:\repos\naegelyd_therawii\FormPerformance.cs,buttonSave_Click,The following statement contains a magic number: if (saveFileDialog1.FileName.EndsWith ("jpg")) {  	format = ChartImageFormat.Jpeg;  }  else if (saveFileDialog1.FileName.EndsWith ("emf") && saveFileDialog1.FilterIndex == 3) {  	format = ChartImageFormat.EmfPlus;  }  else if (saveFileDialog1.FileName.EndsWith ("emf") && saveFileDialog1.FilterIndex == 4) {  	format = ChartImageFormat.EmfDual;  }  else if (saveFileDialog1.FileName.EndsWith ("emf")) {  	format = ChartImageFormat.Emf;  }  else if (saveFileDialog1.FileName.EndsWith ("gif")) {  	format = ChartImageFormat.Gif;  }  else if (saveFileDialog1.FileName.EndsWith ("png")) {  	format = ChartImageFormat.Png;  }  else if (saveFileDialog1.FileName.EndsWith ("tif")) {  	format = ChartImageFormat.Tiff;  }  
Magic Number,TheraWii,FormPerformance,C:\repos\naegelyd_therawii\FormPerformance.cs,buttonSave_Click,The following statement contains a magic number: if (saveFileDialog1.FileName.EndsWith ("emf") && saveFileDialog1.FilterIndex == 3) {  	format = ChartImageFormat.EmfPlus;  }  else if (saveFileDialog1.FileName.EndsWith ("emf") && saveFileDialog1.FilterIndex == 4) {  	format = ChartImageFormat.EmfDual;  }  else if (saveFileDialog1.FileName.EndsWith ("emf")) {  	format = ChartImageFormat.Emf;  }  else if (saveFileDialog1.FileName.EndsWith ("gif")) {  	format = ChartImageFormat.Gif;  }  else if (saveFileDialog1.FileName.EndsWith ("png")) {  	format = ChartImageFormat.Png;  }  else if (saveFileDialog1.FileName.EndsWith ("tif")) {  	format = ChartImageFormat.Tiff;  }  
Magic Number,TheraWii,FormPerformance,C:\repos\naegelyd_therawii\FormPerformance.cs,buttonSave_Click,The following statement contains a magic number: if (saveFileDialog1.FileName.EndsWith ("emf") && saveFileDialog1.FilterIndex == 3) {  	format = ChartImageFormat.EmfPlus;  }  else if (saveFileDialog1.FileName.EndsWith ("emf") && saveFileDialog1.FilterIndex == 4) {  	format = ChartImageFormat.EmfDual;  }  else if (saveFileDialog1.FileName.EndsWith ("emf")) {  	format = ChartImageFormat.Emf;  }  else if (saveFileDialog1.FileName.EndsWith ("gif")) {  	format = ChartImageFormat.Gif;  }  else if (saveFileDialog1.FileName.EndsWith ("png")) {  	format = ChartImageFormat.Png;  }  else if (saveFileDialog1.FileName.EndsWith ("tif")) {  	format = ChartImageFormat.Tiff;  }  
Magic Number,TheraWii,FormPerformance,C:\repos\naegelyd_therawii\FormPerformance.cs,buttonSave_Click,The following statement contains a magic number: if (saveFileDialog1.FileName.EndsWith ("emf") && saveFileDialog1.FilterIndex == 4) {  	format = ChartImageFormat.EmfDual;  }  else if (saveFileDialog1.FileName.EndsWith ("emf")) {  	format = ChartImageFormat.Emf;  }  else if (saveFileDialog1.FileName.EndsWith ("gif")) {  	format = ChartImageFormat.Gif;  }  else if (saveFileDialog1.FileName.EndsWith ("png")) {  	format = ChartImageFormat.Png;  }  else if (saveFileDialog1.FileName.EndsWith ("tif")) {  	format = ChartImageFormat.Tiff;  }  
Magic Number,TheraWii,GameTextBox,C:\repos\naegelyd_therawii\GameTextBox.cs,Initialize,The following statement contains a magic number: boxWidth = textWidth + 2 * BORDER_SIZE;  
Magic Number,TheraWii,GameTextBox,C:\repos\naegelyd_therawii\GameTextBox.cs,Initialize,The following statement contains a magic number: boxHeight = textHeight + 2 * BORDER_SIZE;  
Magic Number,TheraWii,GameTextBox,C:\repos\naegelyd_therawii\GameTextBox.cs,Initialize,The following statement contains a magic number: centerX = screenWidth / 2;  
Magic Number,TheraWii,GameTextBox,C:\repos\naegelyd_therawii\GameTextBox.cs,Initialize,The following statement contains a magic number: centerY = screenHeight / 2;  
Magic Number,TheraWii,GameTextBox,C:\repos\naegelyd_therawii\GameTextBox.cs,Initialize,The following statement contains a magic number: textX = centerX - textWidth / 2;  
Magic Number,TheraWii,GameTextBox,C:\repos\naegelyd_therawii\GameTextBox.cs,Initialize,The following statement contains a magic number: textY = centerY - textHeight / 2;  
Magic Number,TheraWii,GameTextBox,C:\repos\naegelyd_therawii\GameTextBox.cs,Initialize,The following statement contains a magic number: boxX = centerX - boxWidth / 2;  
Magic Number,TheraWii,GameTextBox,C:\repos\naegelyd_therawii\GameTextBox.cs,Initialize,The following statement contains a magic number: boxY = centerY - boxHeight / 2;  
Magic Number,TheraWii,DimensionalTask,C:\repos\naegelyd_therawii\DimensionalTask.cs,Update,The following statement contains a magic number: output.setData ("RegionX1"' (((RegionParameter)region.rParams [regPT.X]).cPos - ((RegionParameter)region.rParams [regPT.X]).cSize / 2).ToString ());  
Magic Number,TheraWii,DimensionalTask,C:\repos\naegelyd_therawii\DimensionalTask.cs,Update,The following statement contains a magic number: output.setData ("RegionX2"' (((RegionParameter)region.rParams [regPT.X]).cPos + ((RegionParameter)region.rParams [regPT.X]).cSize / 2).ToString ());  
Magic Number,TheraWii,DimensionalTask,C:\repos\naegelyd_therawii\DimensionalTask.cs,Update,The following statement contains a magic number: output.setData ("RegionY1"' (((RegionParameter)region.rParams [regPT.Y]).cPos - ((RegionParameter)region.rParams [regPT.Y]).cSize / 2).ToString ());  
Magic Number,TheraWii,DimensionalTask,C:\repos\naegelyd_therawii\DimensionalTask.cs,Update,The following statement contains a magic number: output.setData ("RegionY2"' (((RegionParameter)region.rParams [regPT.Y]).cPos + ((RegionParameter)region.rParams [regPT.Y]).cSize / 2).ToString ());  
Magic Number,TheraWii,DimensionalTask,C:\repos\naegelyd_therawii\DimensionalTask.cs,Update,The following statement contains a magic number: output.setData ("RegionZ1"' (((RegionParameter)region.rParams [regPT.Z]).cPos - ((RegionParameter)region.rParams [regPT.Z]).cSize / 2).ToString ());  
Magic Number,TheraWii,DimensionalTask,C:\repos\naegelyd_therawii\DimensionalTask.cs,Update,The following statement contains a magic number: output.setData ("RegionZ2"' (((RegionParameter)region.rParams [regPT.Z]).cPos + ((RegionParameter)region.rParams [regPT.Z]).cSize / 2).ToString ());  
Magic Number,TheraWii,FormProfileChooser,C:\repos\naegelyd_therawii\FormProfileChooser.cs,FormProfileChooser_KeyPress,The following statement contains a magic number: if (e.KeyChar.Equals (Convert.ToChar (13))) {  	buttonOK_Click (this' new EventArgs ());  }  else if (e.KeyChar.Equals (Convert.ToChar (27))) {  	buttonCancel_Click (this' new EventArgs ());  }  
Magic Number,TheraWii,FormProfileChooser,C:\repos\naegelyd_therawii\FormProfileChooser.cs,FormProfileChooser_KeyPress,The following statement contains a magic number: if (e.KeyChar.Equals (Convert.ToChar (13))) {  	buttonOK_Click (this' new EventArgs ());  }  else if (e.KeyChar.Equals (Convert.ToChar (27))) {  	buttonCancel_Click (this' new EventArgs ());  }  
Magic Number,TheraWii,FormProfileChooser,C:\repos\naegelyd_therawii\FormProfileChooser.cs,FormProfileChooser_KeyPress,The following statement contains a magic number: if (e.KeyChar.Equals (Convert.ToChar (27))) {  	buttonCancel_Click (this' new EventArgs ());  }  
Magic Number,TheraWii,FormProfileChooser,C:\repos\naegelyd_therawii\FormProfileChooser.cs,FormProfileChooser_Load,The following statement contains a magic number: if (prevLocation == null || prevLocation.X == 0 && prevLocation.Y == 0) {  	Point center = ((FormMain)this.Tag).getCenterPosition ();  	Point newPosition = new Point ();  	newPosition.X = center.X - this.Width / 2;  	newPosition.Y = center.Y - this.Height / 2;  	if (newPosition.Y < 1)  		newPosition.Y = 1;  	if (newPosition.X < 1)  		newPosition.X = 1;  	this.Location = newPosition;  }  else  	this.Location = prevLocation;  
Magic Number,TheraWii,FormProfileChooser,C:\repos\naegelyd_therawii\FormProfileChooser.cs,FormProfileChooser_Load,The following statement contains a magic number: if (prevLocation == null || prevLocation.X == 0 && prevLocation.Y == 0) {  	Point center = ((FormMain)this.Tag).getCenterPosition ();  	Point newPosition = new Point ();  	newPosition.X = center.X - this.Width / 2;  	newPosition.Y = center.Y - this.Height / 2;  	if (newPosition.Y < 1)  		newPosition.Y = 1;  	if (newPosition.X < 1)  		newPosition.X = 1;  	this.Location = newPosition;  }  else  	this.Location = prevLocation;  
Magic Number,TheraWii,FormProfileChooser,C:\repos\naegelyd_therawii\FormProfileChooser.cs,FormProfileChooser_Load,The following statement contains a magic number: newPosition.X = center.X - this.Width / 2;  
Magic Number,TheraWii,FormProfileChooser,C:\repos\naegelyd_therawii\FormProfileChooser.cs,FormProfileChooser_Load,The following statement contains a magic number: newPosition.Y = center.Y - this.Height / 2;  
Magic Number,TheraWii,Line,C:\repos\naegelyd_therawii\Line.cs,Line,The following statement contains a magic number: pointList = new VertexPositionColor[2];  
Magic Number,TheraWii,Input2D,C:\repos\naegelyd_therawii\InputDevice.cs,GetInputIndex,The following statement contains a magic number: if (i.GetType () == typeof(InputBalanceBoard)) {  	return 0;  }  else if (i.GetType () == typeof(InputRemoteIR)) {  	return 1;  }  else if (i.GetType () == typeof(InputRemoteRollPitch)) {  	return 2;  }  else if (i.GetType () == typeof(InputNunchuckJoystick)) {  	return 3;  }  else if (i.GetType () == typeof(InputNunchuckRollPitch)) {  	return 4;  }  else if (i.GetType () == typeof(InputMouse)) {  	return 5;  }  else {  	return 0;  }  
Magic Number,TheraWii,Input2D,C:\repos\naegelyd_therawii\InputDevice.cs,GetInputIndex,The following statement contains a magic number: if (i.GetType () == typeof(InputBalanceBoard)) {  	return 0;  }  else if (i.GetType () == typeof(InputRemoteIR)) {  	return 1;  }  else if (i.GetType () == typeof(InputRemoteRollPitch)) {  	return 2;  }  else if (i.GetType () == typeof(InputNunchuckJoystick)) {  	return 3;  }  else if (i.GetType () == typeof(InputNunchuckRollPitch)) {  	return 4;  }  else if (i.GetType () == typeof(InputMouse)) {  	return 5;  }  else {  	return 0;  }  
Magic Number,TheraWii,Input2D,C:\repos\naegelyd_therawii\InputDevice.cs,GetInputIndex,The following statement contains a magic number: if (i.GetType () == typeof(InputBalanceBoard)) {  	return 0;  }  else if (i.GetType () == typeof(InputRemoteIR)) {  	return 1;  }  else if (i.GetType () == typeof(InputRemoteRollPitch)) {  	return 2;  }  else if (i.GetType () == typeof(InputNunchuckJoystick)) {  	return 3;  }  else if (i.GetType () == typeof(InputNunchuckRollPitch)) {  	return 4;  }  else if (i.GetType () == typeof(InputMouse)) {  	return 5;  }  else {  	return 0;  }  
Magic Number,TheraWii,Input2D,C:\repos\naegelyd_therawii\InputDevice.cs,GetInputIndex,The following statement contains a magic number: if (i.GetType () == typeof(InputBalanceBoard)) {  	return 0;  }  else if (i.GetType () == typeof(InputRemoteIR)) {  	return 1;  }  else if (i.GetType () == typeof(InputRemoteRollPitch)) {  	return 2;  }  else if (i.GetType () == typeof(InputNunchuckJoystick)) {  	return 3;  }  else if (i.GetType () == typeof(InputNunchuckRollPitch)) {  	return 4;  }  else if (i.GetType () == typeof(InputMouse)) {  	return 5;  }  else {  	return 0;  }  
Magic Number,TheraWii,Input2D,C:\repos\naegelyd_therawii\InputDevice.cs,GetInputIndex,The following statement contains a magic number: if (i.GetType () == typeof(InputRemoteIR)) {  	return 1;  }  else if (i.GetType () == typeof(InputRemoteRollPitch)) {  	return 2;  }  else if (i.GetType () == typeof(InputNunchuckJoystick)) {  	return 3;  }  else if (i.GetType () == typeof(InputNunchuckRollPitch)) {  	return 4;  }  else if (i.GetType () == typeof(InputMouse)) {  	return 5;  }  else {  	return 0;  }  
Magic Number,TheraWii,Input2D,C:\repos\naegelyd_therawii\InputDevice.cs,GetInputIndex,The following statement contains a magic number: if (i.GetType () == typeof(InputRemoteIR)) {  	return 1;  }  else if (i.GetType () == typeof(InputRemoteRollPitch)) {  	return 2;  }  else if (i.GetType () == typeof(InputNunchuckJoystick)) {  	return 3;  }  else if (i.GetType () == typeof(InputNunchuckRollPitch)) {  	return 4;  }  else if (i.GetType () == typeof(InputMouse)) {  	return 5;  }  else {  	return 0;  }  
Magic Number,TheraWii,Input2D,C:\repos\naegelyd_therawii\InputDevice.cs,GetInputIndex,The following statement contains a magic number: if (i.GetType () == typeof(InputRemoteIR)) {  	return 1;  }  else if (i.GetType () == typeof(InputRemoteRollPitch)) {  	return 2;  }  else if (i.GetType () == typeof(InputNunchuckJoystick)) {  	return 3;  }  else if (i.GetType () == typeof(InputNunchuckRollPitch)) {  	return 4;  }  else if (i.GetType () == typeof(InputMouse)) {  	return 5;  }  else {  	return 0;  }  
Magic Number,TheraWii,Input2D,C:\repos\naegelyd_therawii\InputDevice.cs,GetInputIndex,The following statement contains a magic number: if (i.GetType () == typeof(InputRemoteIR)) {  	return 1;  }  else if (i.GetType () == typeof(InputRemoteRollPitch)) {  	return 2;  }  else if (i.GetType () == typeof(InputNunchuckJoystick)) {  	return 3;  }  else if (i.GetType () == typeof(InputNunchuckRollPitch)) {  	return 4;  }  else if (i.GetType () == typeof(InputMouse)) {  	return 5;  }  else {  	return 0;  }  
Magic Number,TheraWii,Input2D,C:\repos\naegelyd_therawii\InputDevice.cs,GetInputIndex,The following statement contains a magic number: if (i.GetType () == typeof(InputRemoteRollPitch)) {  	return 2;  }  else if (i.GetType () == typeof(InputNunchuckJoystick)) {  	return 3;  }  else if (i.GetType () == typeof(InputNunchuckRollPitch)) {  	return 4;  }  else if (i.GetType () == typeof(InputMouse)) {  	return 5;  }  else {  	return 0;  }  
Magic Number,TheraWii,Input2D,C:\repos\naegelyd_therawii\InputDevice.cs,GetInputIndex,The following statement contains a magic number: if (i.GetType () == typeof(InputRemoteRollPitch)) {  	return 2;  }  else if (i.GetType () == typeof(InputNunchuckJoystick)) {  	return 3;  }  else if (i.GetType () == typeof(InputNunchuckRollPitch)) {  	return 4;  }  else if (i.GetType () == typeof(InputMouse)) {  	return 5;  }  else {  	return 0;  }  
Magic Number,TheraWii,Input2D,C:\repos\naegelyd_therawii\InputDevice.cs,GetInputIndex,The following statement contains a magic number: if (i.GetType () == typeof(InputRemoteRollPitch)) {  	return 2;  }  else if (i.GetType () == typeof(InputNunchuckJoystick)) {  	return 3;  }  else if (i.GetType () == typeof(InputNunchuckRollPitch)) {  	return 4;  }  else if (i.GetType () == typeof(InputMouse)) {  	return 5;  }  else {  	return 0;  }  
Magic Number,TheraWii,Input2D,C:\repos\naegelyd_therawii\InputDevice.cs,GetInputIndex,The following statement contains a magic number: if (i.GetType () == typeof(InputRemoteRollPitch)) {  	return 2;  }  else if (i.GetType () == typeof(InputNunchuckJoystick)) {  	return 3;  }  else if (i.GetType () == typeof(InputNunchuckRollPitch)) {  	return 4;  }  else if (i.GetType () == typeof(InputMouse)) {  	return 5;  }  else {  	return 0;  }  
Magic Number,TheraWii,Input2D,C:\repos\naegelyd_therawii\InputDevice.cs,GetInputIndex,The following statement contains a magic number: return 2;  
Magic Number,TheraWii,Input2D,C:\repos\naegelyd_therawii\InputDevice.cs,GetInputIndex,The following statement contains a magic number: if (i.GetType () == typeof(InputNunchuckJoystick)) {  	return 3;  }  else if (i.GetType () == typeof(InputNunchuckRollPitch)) {  	return 4;  }  else if (i.GetType () == typeof(InputMouse)) {  	return 5;  }  else {  	return 0;  }  
Magic Number,TheraWii,Input2D,C:\repos\naegelyd_therawii\InputDevice.cs,GetInputIndex,The following statement contains a magic number: if (i.GetType () == typeof(InputNunchuckJoystick)) {  	return 3;  }  else if (i.GetType () == typeof(InputNunchuckRollPitch)) {  	return 4;  }  else if (i.GetType () == typeof(InputMouse)) {  	return 5;  }  else {  	return 0;  }  
Magic Number,TheraWii,Input2D,C:\repos\naegelyd_therawii\InputDevice.cs,GetInputIndex,The following statement contains a magic number: if (i.GetType () == typeof(InputNunchuckJoystick)) {  	return 3;  }  else if (i.GetType () == typeof(InputNunchuckRollPitch)) {  	return 4;  }  else if (i.GetType () == typeof(InputMouse)) {  	return 5;  }  else {  	return 0;  }  
Magic Number,TheraWii,Input2D,C:\repos\naegelyd_therawii\InputDevice.cs,GetInputIndex,The following statement contains a magic number: return 3;  
Magic Number,TheraWii,Input2D,C:\repos\naegelyd_therawii\InputDevice.cs,GetInputIndex,The following statement contains a magic number: if (i.GetType () == typeof(InputNunchuckRollPitch)) {  	return 4;  }  else if (i.GetType () == typeof(InputMouse)) {  	return 5;  }  else {  	return 0;  }  
Magic Number,TheraWii,Input2D,C:\repos\naegelyd_therawii\InputDevice.cs,GetInputIndex,The following statement contains a magic number: if (i.GetType () == typeof(InputNunchuckRollPitch)) {  	return 4;  }  else if (i.GetType () == typeof(InputMouse)) {  	return 5;  }  else {  	return 0;  }  
Magic Number,TheraWii,Input2D,C:\repos\naegelyd_therawii\InputDevice.cs,GetInputIndex,The following statement contains a magic number: return 4;  
Magic Number,TheraWii,Input2D,C:\repos\naegelyd_therawii\InputDevice.cs,GetInputIndex,The following statement contains a magic number: if (i.GetType () == typeof(InputMouse)) {  	return 5;  }  else {  	return 0;  }  
Magic Number,TheraWii,Input2D,C:\repos\naegelyd_therawii\InputDevice.cs,GetInputIndex,The following statement contains a magic number: return 5;  
Magic Number,TheraWii,Region,C:\repos\naegelyd_therawii\Region.cs,isIn2DEllipse,The following statement contains a magic number: if (rParams [regPT.X].cSize >= rParams [regPT.Y].cSize) {  	twoA = rParams [regPT.X].cSize;  	eccentricity = Math.Sqrt (1 - Math.Pow (rParams [regPT.Y].cSize / rParams [regPT.X].cSize' 2));  	float offset = (float)(eccentricity * twoA / 2);  	c1 = new Vector3 (center.X - offset' center.Y' center.Z);  	c2 = new Vector3 (center.X + offset' center.Y' center.Z);  }  else {  	twoA = rParams [regPT.Y].cSize;  	eccentricity = Math.Sqrt (1 - Math.Pow (rParams [regPT.X].cSize / rParams [regPT.Y].cSize' 2));  	float offset = (float)(eccentricity * twoA / 2);  	c1 = new Vector3 (center.X' center.Y - offset' center.Z);  	c2 = new Vector3 (center.X' center.Y + offset' center.Z);  }  
Magic Number,TheraWii,Region,C:\repos\naegelyd_therawii\Region.cs,isIn2DEllipse,The following statement contains a magic number: if (rParams [regPT.X].cSize >= rParams [regPT.Y].cSize) {  	twoA = rParams [regPT.X].cSize;  	eccentricity = Math.Sqrt (1 - Math.Pow (rParams [regPT.Y].cSize / rParams [regPT.X].cSize' 2));  	float offset = (float)(eccentricity * twoA / 2);  	c1 = new Vector3 (center.X - offset' center.Y' center.Z);  	c2 = new Vector3 (center.X + offset' center.Y' center.Z);  }  else {  	twoA = rParams [regPT.Y].cSize;  	eccentricity = Math.Sqrt (1 - Math.Pow (rParams [regPT.X].cSize / rParams [regPT.Y].cSize' 2));  	float offset = (float)(eccentricity * twoA / 2);  	c1 = new Vector3 (center.X' center.Y - offset' center.Z);  	c2 = new Vector3 (center.X' center.Y + offset' center.Z);  }  
Magic Number,TheraWii,Region,C:\repos\naegelyd_therawii\Region.cs,isIn2DEllipse,The following statement contains a magic number: if (rParams [regPT.X].cSize >= rParams [regPT.Y].cSize) {  	twoA = rParams [regPT.X].cSize;  	eccentricity = Math.Sqrt (1 - Math.Pow (rParams [regPT.Y].cSize / rParams [regPT.X].cSize' 2));  	float offset = (float)(eccentricity * twoA / 2);  	c1 = new Vector3 (center.X - offset' center.Y' center.Z);  	c2 = new Vector3 (center.X + offset' center.Y' center.Z);  }  else {  	twoA = rParams [regPT.Y].cSize;  	eccentricity = Math.Sqrt (1 - Math.Pow (rParams [regPT.X].cSize / rParams [regPT.Y].cSize' 2));  	float offset = (float)(eccentricity * twoA / 2);  	c1 = new Vector3 (center.X' center.Y - offset' center.Z);  	c2 = new Vector3 (center.X' center.Y + offset' center.Z);  }  
Magic Number,TheraWii,Region,C:\repos\naegelyd_therawii\Region.cs,isIn2DEllipse,The following statement contains a magic number: if (rParams [regPT.X].cSize >= rParams [regPT.Y].cSize) {  	twoA = rParams [regPT.X].cSize;  	eccentricity = Math.Sqrt (1 - Math.Pow (rParams [regPT.Y].cSize / rParams [regPT.X].cSize' 2));  	float offset = (float)(eccentricity * twoA / 2);  	c1 = new Vector3 (center.X - offset' center.Y' center.Z);  	c2 = new Vector3 (center.X + offset' center.Y' center.Z);  }  else {  	twoA = rParams [regPT.Y].cSize;  	eccentricity = Math.Sqrt (1 - Math.Pow (rParams [regPT.X].cSize / rParams [regPT.Y].cSize' 2));  	float offset = (float)(eccentricity * twoA / 2);  	c1 = new Vector3 (center.X' center.Y - offset' center.Z);  	c2 = new Vector3 (center.X' center.Y + offset' center.Z);  }  
Magic Number,TheraWii,Region,C:\repos\naegelyd_therawii\Region.cs,isIn2DEllipse,The following statement contains a magic number: eccentricity = Math.Sqrt (1 - Math.Pow (rParams [regPT.Y].cSize / rParams [regPT.X].cSize' 2));  
Magic Number,TheraWii,Region,C:\repos\naegelyd_therawii\Region.cs,isIn2DEllipse,The following statement contains a magic number: eccentricity = Math.Sqrt (1 - Math.Pow (rParams [regPT.X].cSize / rParams [regPT.Y].cSize' 2));  
Magic Number,TheraWii,Region,C:\repos\naegelyd_therawii\Region.cs,isIn2DEllipse,The following statement contains a magic number: d1 = Math.Sqrt (Math.Pow (c1.X - pos.X' 2) + Math.Pow (c1.Y - pos.Y' 2));  
Magic Number,TheraWii,Region,C:\repos\naegelyd_therawii\Region.cs,isIn2DEllipse,The following statement contains a magic number: d1 = Math.Sqrt (Math.Pow (c1.X - pos.X' 2) + Math.Pow (c1.Y - pos.Y' 2));  
Magic Number,TheraWii,Region,C:\repos\naegelyd_therawii\Region.cs,isIn2DEllipse,The following statement contains a magic number: d2 = Math.Sqrt (Math.Pow (c2.X - pos.X' 2) + Math.Pow (c2.Y - pos.Y' 2));  
Magic Number,TheraWii,Region,C:\repos\naegelyd_therawii\Region.cs,isIn2DEllipse,The following statement contains a magic number: d2 = Math.Sqrt (Math.Pow (c2.X - pos.X' 2) + Math.Pow (c2.Y - pos.Y' 2));  
Magic Number,TheraWii,RegionParameter,C:\repos\naegelyd_therawii\RegionParameter.cs,RegionParameter,The following statement contains a magic number: pos = new float[2];  
Magic Number,TheraWii,RegionParameter,C:\repos\naegelyd_therawii\RegionParameter.cs,RegionParameter,The following statement contains a magic number: size = new float[2];  
Magic Number,TheraWii,FormNewProfile,C:\repos\naegelyd_therawii\FormNewProfile.cs,textBoxName_KeyPress,The following statement contains a magic number: if (e.KeyChar.Equals (Convert.ToChar (13))) {  	buttonOk_Click (this' new EventArgs ());  }  else if (e.KeyChar.Equals (Convert.ToChar (27))) {  	buttonCancel_Click (this' new EventArgs ());  }  
Magic Number,TheraWii,FormNewProfile,C:\repos\naegelyd_therawii\FormNewProfile.cs,textBoxName_KeyPress,The following statement contains a magic number: if (e.KeyChar.Equals (Convert.ToChar (13))) {  	buttonOk_Click (this' new EventArgs ());  }  else if (e.KeyChar.Equals (Convert.ToChar (27))) {  	buttonCancel_Click (this' new EventArgs ());  }  
Magic Number,TheraWii,FormNewProfile,C:\repos\naegelyd_therawii\FormNewProfile.cs,textBoxName_KeyPress,The following statement contains a magic number: if (e.KeyChar.Equals (Convert.ToChar (27))) {  	buttonCancel_Click (this' new EventArgs ());  }  
Magic Number,TheraWii,FormNewProfile,C:\repos\naegelyd_therawii\FormNewProfile.cs,FormNewProfile_KeyPress,The following statement contains a magic number: if (e.KeyChar.Equals (Convert.ToChar (13))) {  	buttonOk_Click (this' new EventArgs ());  }  else if (e.KeyChar.Equals (Convert.ToChar (27))) {  	buttonCancel_Click (this' new EventArgs ());  }  
Magic Number,TheraWii,FormNewProfile,C:\repos\naegelyd_therawii\FormNewProfile.cs,FormNewProfile_KeyPress,The following statement contains a magic number: if (e.KeyChar.Equals (Convert.ToChar (13))) {  	buttonOk_Click (this' new EventArgs ());  }  else if (e.KeyChar.Equals (Convert.ToChar (27))) {  	buttonCancel_Click (this' new EventArgs ());  }  
Magic Number,TheraWii,FormNewProfile,C:\repos\naegelyd_therawii\FormNewProfile.cs,FormNewProfile_KeyPress,The following statement contains a magic number: if (e.KeyChar.Equals (Convert.ToChar (27))) {  	buttonCancel_Click (this' new EventArgs ());  }  
Magic Number,TheraWii,FormNewProfile,C:\repos\naegelyd_therawii\FormNewProfile.cs,FormNewProfile_Load,The following statement contains a magic number: if (prevLocation == null || prevLocation.X == 0 && prevLocation.Y == 0) {  	Point center = ((FormMain)this.Tag).getCenterPosition ();  	Point newPosition = new Point ();  	newPosition.X = center.X - this.Width / 2;  	newPosition.Y = center.Y - this.Height / 2;  	if (newPosition.Y < 1)  		newPosition.Y = 1;  	if (newPosition.X < 1)  		newPosition.X = 1;  	this.Location = newPosition;  }  else  	this.Location = prevLocation;  
Magic Number,TheraWii,FormNewProfile,C:\repos\naegelyd_therawii\FormNewProfile.cs,FormNewProfile_Load,The following statement contains a magic number: if (prevLocation == null || prevLocation.X == 0 && prevLocation.Y == 0) {  	Point center = ((FormMain)this.Tag).getCenterPosition ();  	Point newPosition = new Point ();  	newPosition.X = center.X - this.Width / 2;  	newPosition.Y = center.Y - this.Height / 2;  	if (newPosition.Y < 1)  		newPosition.Y = 1;  	if (newPosition.X < 1)  		newPosition.X = 1;  	this.Location = newPosition;  }  else  	this.Location = prevLocation;  
Magic Number,TheraWii,FormNewProfile,C:\repos\naegelyd_therawii\FormNewProfile.cs,FormNewProfile_Load,The following statement contains a magic number: newPosition.X = center.X - this.Width / 2;  
Magic Number,TheraWii,FormNewProfile,C:\repos\naegelyd_therawii\FormNewProfile.cs,FormNewProfile_Load,The following statement contains a magic number: newPosition.Y = center.Y - this.Height / 2;  
Magic Number,TheraWii,FormNewTherapy,C:\repos\naegelyd_therawii\FormNewTherapy.cs,FormNewTherapy_KeyPress,The following statement contains a magic number: if (e.KeyChar.Equals (Convert.ToChar (13))) {  	buttonOk_Click (this' new EventArgs ());  }  else if (e.KeyChar.Equals (Convert.ToChar (27))) {  	buttonCancel_Click (this' new EventArgs ());  }  
Magic Number,TheraWii,FormNewTherapy,C:\repos\naegelyd_therawii\FormNewTherapy.cs,FormNewTherapy_KeyPress,The following statement contains a magic number: if (e.KeyChar.Equals (Convert.ToChar (13))) {  	buttonOk_Click (this' new EventArgs ());  }  else if (e.KeyChar.Equals (Convert.ToChar (27))) {  	buttonCancel_Click (this' new EventArgs ());  }  
Magic Number,TheraWii,FormNewTherapy,C:\repos\naegelyd_therawii\FormNewTherapy.cs,FormNewTherapy_KeyPress,The following statement contains a magic number: if (e.KeyChar.Equals (Convert.ToChar (27))) {  	buttonCancel_Click (this' new EventArgs ());  }  
Magic Number,TheraWii,FormNewTherapy,C:\repos\naegelyd_therawii\FormNewTherapy.cs,FormNewTherapy_Load,The following statement contains a magic number: if (prevLocation == null || prevLocation.X == 0 && prevLocation.Y == 0) {  	Point center = ((FormMain)this.Tag).getCenterPosition ();  	Point newPosition = new Point ();  	newPosition.X = center.X - this.Width / 2;  	newPosition.Y = center.Y - this.Height / 2;  	if (newPosition.Y < 1)  		newPosition.Y = 1;  	if (newPosition.X < 1)  		newPosition.X = 1;  	this.Location = newPosition;  }  else  	this.Location = prevLocation;  
Magic Number,TheraWii,FormNewTherapy,C:\repos\naegelyd_therawii\FormNewTherapy.cs,FormNewTherapy_Load,The following statement contains a magic number: if (prevLocation == null || prevLocation.X == 0 && prevLocation.Y == 0) {  	Point center = ((FormMain)this.Tag).getCenterPosition ();  	Point newPosition = new Point ();  	newPosition.X = center.X - this.Width / 2;  	newPosition.Y = center.Y - this.Height / 2;  	if (newPosition.Y < 1)  		newPosition.Y = 1;  	if (newPosition.X < 1)  		newPosition.X = 1;  	this.Location = newPosition;  }  else  	this.Location = prevLocation;  
Magic Number,TheraWii,FormNewTherapy,C:\repos\naegelyd_therawii\FormNewTherapy.cs,FormNewTherapy_Load,The following statement contains a magic number: newPosition.X = center.X - this.Width / 2;  
Magic Number,TheraWii,FormNewTherapy,C:\repos\naegelyd_therawii\FormNewTherapy.cs,FormNewTherapy_Load,The following statement contains a magic number: newPosition.Y = center.Y - this.Height / 2;  
Magic Number,TheraWii,Game,C:\repos\naegelyd_therawii\Game.cs,Initialize,The following statement contains a magic number: Mouse.SetPosition (PREFERRED_WIDTH / 2' PREFERRED_HEIGHT / 2);  
Magic Number,TheraWii,Game,C:\repos\naegelyd_therawii\Game.cs,Initialize,The following statement contains a magic number: Mouse.SetPosition (PREFERRED_WIDTH / 2' PREFERRED_HEIGHT / 2);  
Magic Number,TheraWii,Game,C:\repos\naegelyd_therawii\Game.cs,Update,The following statement contains a magic number: if (therapy.tasks.isComplete () && goodbye == null) {  	goodbye = new DialogTask ();  	goodbye.endCondition = new TimeLimitEndCondition ();  	((TimeLimitEndCondition)goodbye.endCondition).TimeLimit = (double)2.0;  	((TimeLimitEndCondition)goodbye.endCondition).Type = TimeLimitType.TotalTime;  	goodbye.DisplayText = "Therapy Complete!";  	goodbye.Name = "Complete";  	goodbye.Initialize (this.graphics' this.Content' this.spriteBatch' PREFERRED_WIDTH' PREFERRED_HEIGHT' this.session' Vector3.Zero);  	goodbye.textBox.Initialize (goodbye.DisplayText' this.Content' this.spriteBatch' PREFERRED_WIDTH' PREFERRED_HEIGHT);  }  
Magic Number,TheraWii,Game,C:\repos\naegelyd_therawii\Game.cs,Update,The following statement contains a magic number: ((TimeLimitEndCondition)goodbye.endCondition).TimeLimit = (double)2.0;  
Magic Number,TheraWii,RepeatTask,C:\repos\naegelyd_therawii\RepeatTask.cs,RepeatTask,The following statement contains a magic number: numRepeats = 5;  
Magic Number,TheraWii,RepeatTask,C:\repos\naegelyd_therawii\RepeatTask.cs,RepeatTask,The following statement contains a magic number: TimeLimit = 30;  
Magic Number,TheraWii,ButtonEndCondition,C:\repos\naegelyd_therawii\EndCondition.cs,getRequiredDevices,The following statement contains a magic number: if ((int)Button <= 1)  	wt.Add (WiiType.Mouse);  else if ((int)Button <= 12)  	wt.Add (WiiType.Remote);  else if ((int)Button == 13)  	wt.Add (WiiType.BalanceBoard);  
Magic Number,TheraWii,ButtonEndCondition,C:\repos\naegelyd_therawii\EndCondition.cs,getRequiredDevices,The following statement contains a magic number: if ((int)Button <= 1)  	wt.Add (WiiType.Mouse);  else if ((int)Button <= 12)  	wt.Add (WiiType.Remote);  else if ((int)Button == 13)  	wt.Add (WiiType.BalanceBoard);  
Magic Number,TheraWii,ButtonEndCondition,C:\repos\naegelyd_therawii\EndCondition.cs,getRequiredDevices,The following statement contains a magic number: if ((int)Button <= 12)  	wt.Add (WiiType.Remote);  else if ((int)Button == 13)  	wt.Add (WiiType.BalanceBoard);  
Magic Number,TheraWii,ButtonEndCondition,C:\repos\naegelyd_therawii\EndCondition.cs,getRequiredDevices,The following statement contains a magic number: if ((int)Button <= 12)  	wt.Add (WiiType.Remote);  else if ((int)Button == 13)  	wt.Add (WiiType.BalanceBoard);  
Magic Number,TheraWii,ButtonEndCondition,C:\repos\naegelyd_therawii\EndCondition.cs,getRequiredDevices,The following statement contains a magic number: if ((int)Button == 13)  	wt.Add (WiiType.BalanceBoard);  
Magic Number,TheraWii,TimeLimitEndCondition,C:\repos\naegelyd_therawii\EndCondition.cs,TimeLimitEndCondition,The following statement contains a magic number: TimeLimit = 5;  
Magic Number,TheraWii,FormRepeatTask,C:\repos\naegelyd_therawii\FormRepeatTask.cs,FormRepeatTask_KeyPress,The following statement contains a magic number: if (e.KeyChar.Equals (Convert.ToChar (13))) {  	buttonOk_Click (this' new EventArgs ());  }  else if (e.KeyChar.Equals (Convert.ToChar (27))) {  	buttonCancel_Click (this' new EventArgs ());  }  
Magic Number,TheraWii,FormRepeatTask,C:\repos\naegelyd_therawii\FormRepeatTask.cs,FormRepeatTask_KeyPress,The following statement contains a magic number: if (e.KeyChar.Equals (Convert.ToChar (13))) {  	buttonOk_Click (this' new EventArgs ());  }  else if (e.KeyChar.Equals (Convert.ToChar (27))) {  	buttonCancel_Click (this' new EventArgs ());  }  
Magic Number,TheraWii,FormRepeatTask,C:\repos\naegelyd_therawii\FormRepeatTask.cs,FormRepeatTask_KeyPress,The following statement contains a magic number: if (e.KeyChar.Equals (Convert.ToChar (27))) {  	buttonCancel_Click (this' new EventArgs ());  }  
Magic Number,TheraWii,FormRepeatTask,C:\repos\naegelyd_therawii\FormRepeatTask.cs,FormRepeatTask_Load,The following statement contains a magic number: if (prevLocation == null || prevLocation.X == 0 && prevLocation.Y == 0) {  	Point center = ((FormMain)this.Tag).getCenterPosition ();  	Point newPosition = new Point ();  	newPosition.X = center.X - this.Width / 2;  	newPosition.Y = center.Y - this.Height / 2;  	if (newPosition.Y < 1)  		newPosition.Y = 1;  	if (newPosition.X < 1)  		newPosition.X = 1;  	this.Location = newPosition;  }  else  	this.Location = prevLocation;  
Magic Number,TheraWii,FormRepeatTask,C:\repos\naegelyd_therawii\FormRepeatTask.cs,FormRepeatTask_Load,The following statement contains a magic number: if (prevLocation == null || prevLocation.X == 0 && prevLocation.Y == 0) {  	Point center = ((FormMain)this.Tag).getCenterPosition ();  	Point newPosition = new Point ();  	newPosition.X = center.X - this.Width / 2;  	newPosition.Y = center.Y - this.Height / 2;  	if (newPosition.Y < 1)  		newPosition.Y = 1;  	if (newPosition.X < 1)  		newPosition.X = 1;  	this.Location = newPosition;  }  else  	this.Location = prevLocation;  
Magic Number,TheraWii,FormRepeatTask,C:\repos\naegelyd_therawii\FormRepeatTask.cs,FormRepeatTask_Load,The following statement contains a magic number: newPosition.X = center.X - this.Width / 2;  
Magic Number,TheraWii,FormRepeatTask,C:\repos\naegelyd_therawii\FormRepeatTask.cs,FormRepeatTask_Load,The following statement contains a magic number: newPosition.Y = center.Y - this.Height / 2;  
Magic Number,TheraWii,Form3DTask,C:\repos\naegelyd_therawii\Form3DTask.cs,comboBoxPosX_SelectedIndexChanged,The following statement contains a magic number: switch (comboBoxPosX.SelectedIndex) {  case 0:  	labelPosX1.Text = "Value";  	labelPosX2.Visible = false;  	numericUpDownPosX1.Visible = false;  	break;  case 1:  	labelPosX1.Text = "Start";  	labelPosX2.Visible = true;  	labelPosX2.Text = "End";  	numericUpDownPosX1.Visible = true;  	break;  case 2:  	labelPosX1.Text = "Min";  	labelPosX2.Visible = true;  	labelPosX2.Text = "Max";  	numericUpDownPosX1.Visible = true;  	break;  }  
Magic Number,TheraWii,Form3DTask,C:\repos\naegelyd_therawii\Form3DTask.cs,comboBoxPosY_SelectedIndexChanged,The following statement contains a magic number: switch (comboBoxPosY.SelectedIndex) {  case 0:  	labelPosY1.Text = "Value";  	labelPosY2.Visible = false;  	numericUpDownPosY1.Visible = false;  	break;  case 1:  	labelPosY1.Text = "Start";  	labelPosY2.Visible = true;  	labelPosY2.Text = "End";  	numericUpDownPosY1.Visible = true;  	break;  case 2:  	labelPosY1.Text = "Min";  	labelPosY2.Visible = true;  	labelPosY2.Text = "Max";  	numericUpDownPosY1.Visible = true;  	break;  }  
Magic Number,TheraWii,Form3DTask,C:\repos\naegelyd_therawii\Form3DTask.cs,comboBoxSizeX_SelectedIndexChanged,The following statement contains a magic number: switch (comboBoxSizeX.SelectedIndex) {  case 0:  	labelSizeX1.Text = "Value";  	labelSizeX2.Visible = false;  	numericUpDownSizeX1.Visible = false;  	break;  case 1:  	labelSizeX1.Text = "Start";  	labelSizeX2.Visible = true;  	labelSizeX2.Text = "End";  	numericUpDownSizeX1.Visible = true;  	break;  case 2:  	labelSizeX1.Text = "Min";  	labelSizeX2.Visible = true;  	labelSizeX2.Text = "Max";  	numericUpDownSizeX1.Visible = true;  	break;  }  
Magic Number,TheraWii,Form3DTask,C:\repos\naegelyd_therawii\Form3DTask.cs,comboBoxSizeY_SelectedIndexChanged,The following statement contains a magic number: switch (comboBoxSizeY.SelectedIndex) {  case 0:  	labelSizeY1.Text = "Value";  	labelSizeY2.Visible = false;  	numericUpDownSizeY1.Visible = false;  	break;  case 1:  	labelSizeY1.Text = "Start";  	labelSizeY2.Visible = true;  	labelSizeY2.Text = "End";  	numericUpDownSizeY1.Visible = true;  	break;  case 2:  	labelSizeY1.Text = "Min";  	labelSizeY2.Visible = true;  	labelSizeY2.Text = "Max";  	numericUpDownSizeY1.Visible = true;  	break;  }  
Magic Number,TheraWii,Form3DTask,C:\repos\naegelyd_therawii\Form3DTask.cs,comboBoxPosZ_SelectedIndexChanged,The following statement contains a magic number: switch (comboBoxPosZ.SelectedIndex) {  case 0:  	labelPosZ1.Text = "Value";  	labelPosZ2.Visible = false;  	numericUpDownPosZ1.Visible = false;  	break;  case 1:  	labelPosZ1.Text = "Start";  	labelPosZ2.Visible = true;  	labelPosZ2.Text = "End";  	numericUpDownPosZ1.Visible = true;  	break;  case 2:  	labelPosZ1.Text = "Min";  	labelPosZ2.Visible = true;  	labelPosZ2.Text = "Max";  	numericUpDownPosZ1.Visible = true;  	break;  }  
Magic Number,TheraWii,Form3DTask,C:\repos\naegelyd_therawii\Form3DTask.cs,comboBoxSizeZ_SelectedIndexChanged,The following statement contains a magic number: switch (comboBoxSizeZ.SelectedIndex) {  case 0:  	labelSizeZ1.Text = "Value";  	labelSizeZ2.Visible = false;  	numericUpDownSizeZ1.Visible = false;  	break;  case 1:  	labelSizeZ1.Text = "Start";  	labelSizeZ2.Visible = true;  	labelSizeZ2.Text = "End";  	numericUpDownSizeZ1.Visible = true;  	break;  case 2:  	labelSizeZ1.Text = "Min";  	labelSizeZ2.Visible = true;  	labelSizeZ2.Text = "Max";  	numericUpDownSizeZ1.Visible = true;  	break;  }  
Magic Number,TheraWii,Form3DTask,C:\repos\naegelyd_therawii\Form3DTask.cs,Form3DTask_Load,The following statement contains a magic number: if (prevLocation == null || prevLocation.X == 0 && prevLocation.Y == 0) {  	Point center = ((FormMain)this.Tag).getCenterPosition ();  	Point newPosition = new Point ();  	newPosition.X = center.X - this.Width / 2;  	newPosition.Y = center.Y - this.Height / 2;  	if (newPosition.Y < 1)  		newPosition.Y = 1;  	if (newPosition.X < 1)  		newPosition.X = 1;  	this.Location = newPosition;  }  else  	this.Location = prevLocation;  
Magic Number,TheraWii,Form3DTask,C:\repos\naegelyd_therawii\Form3DTask.cs,Form3DTask_Load,The following statement contains a magic number: if (prevLocation == null || prevLocation.X == 0 && prevLocation.Y == 0) {  	Point center = ((FormMain)this.Tag).getCenterPosition ();  	Point newPosition = new Point ();  	newPosition.X = center.X - this.Width / 2;  	newPosition.Y = center.Y - this.Height / 2;  	if (newPosition.Y < 1)  		newPosition.Y = 1;  	if (newPosition.X < 1)  		newPosition.X = 1;  	this.Location = newPosition;  }  else  	this.Location = prevLocation;  
Magic Number,TheraWii,Form3DTask,C:\repos\naegelyd_therawii\Form3DTask.cs,Form3DTask_Load,The following statement contains a magic number: newPosition.X = center.X - this.Width / 2;  
Magic Number,TheraWii,Form3DTask,C:\repos\naegelyd_therawii\Form3DTask.cs,Form3DTask_Load,The following statement contains a magic number: newPosition.Y = center.Y - this.Height / 2;  
Magic Number,TheraWii,FormAbout,C:\repos\naegelyd_therawii\FormAbout.cs,FormAbout_KeyPress,The following statement contains a magic number: if (e.KeyChar.Equals (Convert.ToChar (13))) {  	okButton_Click (this' new EventArgs ());  }  else if (e.KeyChar.Equals (Convert.ToChar (27))) {  	okButton_Click (this' new EventArgs ());  }  
Magic Number,TheraWii,FormAbout,C:\repos\naegelyd_therawii\FormAbout.cs,FormAbout_KeyPress,The following statement contains a magic number: if (e.KeyChar.Equals (Convert.ToChar (13))) {  	okButton_Click (this' new EventArgs ());  }  else if (e.KeyChar.Equals (Convert.ToChar (27))) {  	okButton_Click (this' new EventArgs ());  }  
Magic Number,TheraWii,FormAbout,C:\repos\naegelyd_therawii\FormAbout.cs,FormAbout_KeyPress,The following statement contains a magic number: if (e.KeyChar.Equals (Convert.ToChar (27))) {  	okButton_Click (this' new EventArgs ());  }  
Magic Number,TheraWii,FormAbout,C:\repos\naegelyd_therawii\FormAbout.cs,FormAbout_Load,The following statement contains a magic number: if (prevLocation == null || prevLocation.X == 0 && prevLocation.Y == 0) {  	Point center = ((FormMain)this.Tag).getCenterPosition ();  	Point newPosition = new Point ();  	newPosition.X = center.X - this.Width / 2;  	newPosition.Y = center.Y - this.Height / 2;  	if (newPosition.Y < 1)  		newPosition.Y = 1;  	if (newPosition.X < 1)  		newPosition.X = 1;  	this.Location = newPosition;  }  else  	this.Location = prevLocation;  
Magic Number,TheraWii,FormAbout,C:\repos\naegelyd_therawii\FormAbout.cs,FormAbout_Load,The following statement contains a magic number: if (prevLocation == null || prevLocation.X == 0 && prevLocation.Y == 0) {  	Point center = ((FormMain)this.Tag).getCenterPosition ();  	Point newPosition = new Point ();  	newPosition.X = center.X - this.Width / 2;  	newPosition.Y = center.Y - this.Height / 2;  	if (newPosition.Y < 1)  		newPosition.Y = 1;  	if (newPosition.X < 1)  		newPosition.X = 1;  	this.Location = newPosition;  }  else  	this.Location = prevLocation;  
Magic Number,TheraWii,FormAbout,C:\repos\naegelyd_therawii\FormAbout.cs,FormAbout_Load,The following statement contains a magic number: newPosition.X = center.X - this.Width / 2;  
Magic Number,TheraWii,FormAbout,C:\repos\naegelyd_therawii\FormAbout.cs,FormAbout_Load,The following statement contains a magic number: newPosition.Y = center.Y - this.Height / 2;  
Magic Number,TheraWii,FormAddDevices,C:\repos\naegelyd_therawii\FormAddDevices.cs,FormAddDevices_KeyPress,The following statement contains a magic number: if (e.KeyChar.Equals (Convert.ToChar (13))) {  	buttonAdd_Click (this' new EventArgs ());  }  else if (e.KeyChar.Equals (Convert.ToChar (27))) {  	buttonCancel_Click (this' new EventArgs ());  }  
Magic Number,TheraWii,FormAddDevices,C:\repos\naegelyd_therawii\FormAddDevices.cs,FormAddDevices_KeyPress,The following statement contains a magic number: if (e.KeyChar.Equals (Convert.ToChar (13))) {  	buttonAdd_Click (this' new EventArgs ());  }  else if (e.KeyChar.Equals (Convert.ToChar (27))) {  	buttonCancel_Click (this' new EventArgs ());  }  
Magic Number,TheraWii,FormAddDevices,C:\repos\naegelyd_therawii\FormAddDevices.cs,FormAddDevices_KeyPress,The following statement contains a magic number: if (e.KeyChar.Equals (Convert.ToChar (27))) {  	buttonCancel_Click (this' new EventArgs ());  }  
Magic Number,TheraWii,FormAddDevices,C:\repos\naegelyd_therawii\FormAddDevices.cs,FormAddDevices_Load,The following statement contains a magic number: if (prevLocation == null || prevLocation.X == 0 && prevLocation.Y == 0) {  	Point center = ((FormMain)this.Tag).getCenterPosition ();  	Point newPosition = new Point ();  	newPosition.X = center.X - this.Width / 2;  	newPosition.Y = center.Y - this.Height / 2;  	if (newPosition.Y < 1)  		newPosition.Y = 1;  	if (newPosition.X < 1)  		newPosition.X = 1;  	this.Location = newPosition;  }  else  	this.Location = prevLocation;  
Magic Number,TheraWii,FormAddDevices,C:\repos\naegelyd_therawii\FormAddDevices.cs,FormAddDevices_Load,The following statement contains a magic number: if (prevLocation == null || prevLocation.X == 0 && prevLocation.Y == 0) {  	Point center = ((FormMain)this.Tag).getCenterPosition ();  	Point newPosition = new Point ();  	newPosition.X = center.X - this.Width / 2;  	newPosition.Y = center.Y - this.Height / 2;  	if (newPosition.Y < 1)  		newPosition.Y = 1;  	if (newPosition.X < 1)  		newPosition.X = 1;  	this.Location = newPosition;  }  else  	this.Location = prevLocation;  
Magic Number,TheraWii,FormAddDevices,C:\repos\naegelyd_therawii\FormAddDevices.cs,FormAddDevices_Load,The following statement contains a magic number: newPosition.X = center.X - this.Width / 2;  
Magic Number,TheraWii,FormAddDevices,C:\repos\naegelyd_therawii\FormAddDevices.cs,FormAddDevices_Load,The following statement contains a magic number: newPosition.Y = center.Y - this.Height / 2;  
Magic Number,TheraWii,FormNewTask,C:\repos\naegelyd_therawii\FormNewTask.cs,NewTask_Load,The following statement contains a magic number: if (prevLocation == null || prevLocation.X == 0 && prevLocation.Y == 0) {  	Point center = ((FormMain)this.Tag).getCenterPosition ();  	Point newPosition = new Point ();  	newPosition.X = center.X - this.Width / 2;  	newPosition.Y = center.Y - this.Height / 2;  	if (newPosition.Y < 1)  		newPosition.Y = 1;  	if (newPosition.X < 1)  		newPosition.X = 1;  	this.Location = newPosition;  }  else  	this.Location = prevLocation;  
Magic Number,TheraWii,FormNewTask,C:\repos\naegelyd_therawii\FormNewTask.cs,NewTask_Load,The following statement contains a magic number: if (prevLocation == null || prevLocation.X == 0 && prevLocation.Y == 0) {  	Point center = ((FormMain)this.Tag).getCenterPosition ();  	Point newPosition = new Point ();  	newPosition.X = center.X - this.Width / 2;  	newPosition.Y = center.Y - this.Height / 2;  	if (newPosition.Y < 1)  		newPosition.Y = 1;  	if (newPosition.X < 1)  		newPosition.X = 1;  	this.Location = newPosition;  }  else  	this.Location = prevLocation;  
Magic Number,TheraWii,FormNewTask,C:\repos\naegelyd_therawii\FormNewTask.cs,NewTask_Load,The following statement contains a magic number: newPosition.X = center.X - this.Width / 2;  
Magic Number,TheraWii,FormNewTask,C:\repos\naegelyd_therawii\FormNewTask.cs,NewTask_Load,The following statement contains a magic number: newPosition.Y = center.Y - this.Height / 2;  
Magic Number,TheraWii,FormNewTask,C:\repos\naegelyd_therawii\FormNewTask.cs,buttonCreate_Click,The following statement contains a magic number: switch (listBoxTasks.SelectedIndex) {  case 0:  	newTask = new DialogTask ();  	newTaskForm = new FormDialogTask ((DialogTask)newTask);  	break;  case 1:  	newTask = new Task2D ();  	newTaskForm = new Form2DTask ((Task2D)newTask);  	break;  case 2:  	newTask = new RepeatTask ();  	newTaskForm = new FormRepeatTask ((RepeatTask)newTask);  	break;  default:  	return;  }  
Magic Number,TheraWii,FormNewTask,C:\repos\naegelyd_therawii\FormNewTask.cs,buttonCreate_Click,The following statement contains a magic number: if (result == DialogResult.OK) {  	//if the task name is left empty then set it to a generic name based on the task type  	if (newTask.Name == null || newTask.Name.Length == 0) {  		switch (listBoxTasks.SelectedIndex) {  		case 0:  			newTask.Name = "Dialog Task";  			break;  		case 1:  			newTask.Name = "2D Task";  			break;  		case 2:  			newTask.Name = "Repeat Task";  			break;  		default:  			newTask.Name = "Task Name";  			return;  		}  	}  	therapy.addTask (newTask);  	this.DialogResult = DialogResult.OK;  }  else  	this.DialogResult = DialogResult.Cancel;  
Magic Number,TheraWii,FormNewTask,C:\repos\naegelyd_therawii\FormNewTask.cs,buttonCreate_Click,The following statement contains a magic number: if (newTask.Name == null || newTask.Name.Length == 0) {  	switch (listBoxTasks.SelectedIndex) {  	case 0:  		newTask.Name = "Dialog Task";  		break;  	case 1:  		newTask.Name = "2D Task";  		break;  	case 2:  		newTask.Name = "Repeat Task";  		break;  	default:  		newTask.Name = "Task Name";  		return;  	}  }  
Magic Number,TheraWii,FormNewTask,C:\repos\naegelyd_therawii\FormNewTask.cs,buttonCreate_Click,The following statement contains a magic number: switch (listBoxTasks.SelectedIndex) {  case 0:  	newTask.Name = "Dialog Task";  	break;  case 1:  	newTask.Name = "2D Task";  	break;  case 2:  	newTask.Name = "Repeat Task";  	break;  default:  	newTask.Name = "Task Name";  	return;  }  
Magic Number,TheraWii,FormNewTask,C:\repos\naegelyd_therawii\FormNewTask.cs,FormNewTask_KeyPress,The following statement contains a magic number: if (e.KeyChar.Equals (Convert.ToChar (13))) {  	buttonCreate_Click (this' new EventArgs ());  }  else if (e.KeyChar.Equals (Convert.ToChar (27))) {  	buttonCancel_Click (this' new EventArgs ());  }  
Magic Number,TheraWii,FormNewTask,C:\repos\naegelyd_therawii\FormNewTask.cs,FormNewTask_KeyPress,The following statement contains a magic number: if (e.KeyChar.Equals (Convert.ToChar (13))) {  	buttonCreate_Click (this' new EventArgs ());  }  else if (e.KeyChar.Equals (Convert.ToChar (27))) {  	buttonCancel_Click (this' new EventArgs ());  }  
Magic Number,TheraWii,FormNewTask,C:\repos\naegelyd_therawii\FormNewTask.cs,FormNewTask_KeyPress,The following statement contains a magic number: if (e.KeyChar.Equals (Convert.ToChar (27))) {  	buttonCancel_Click (this' new EventArgs ());  }  
Magic Number,TheraWii,FormSessionDetail,C:\repos\naegelyd_therawii\FormSessionDetail.cs,FormSessionDetail_KeyPress,The following statement contains a magic number: if (e.KeyChar.Equals (Convert.ToChar (27))) {  	this.Close ();  }  
Magic Number,TheraWii,FormSessionDetail,C:\repos\naegelyd_therawii\FormSessionDetail.cs,FormSessionDetail_Load,The following statement contains a magic number: if (prevLocation == null || prevLocation.X == 0 && prevLocation.Y == 0) {  	Point center = ((FormMain)this.Tag).getCenterPosition ();  	Point newPosition = new Point ();  	newPosition.X = center.X - this.Width / 2;  	newPosition.Y = center.Y - this.Height / 2;  	if (newPosition.Y < 1)  		newPosition.Y = 1;  	if (newPosition.X < 1)  		newPosition.X = 1;  	this.Location = newPosition;  }  else  	this.Location = prevLocation;  
Magic Number,TheraWii,FormSessionDetail,C:\repos\naegelyd_therawii\FormSessionDetail.cs,FormSessionDetail_Load,The following statement contains a magic number: if (prevLocation == null || prevLocation.X == 0 && prevLocation.Y == 0) {  	Point center = ((FormMain)this.Tag).getCenterPosition ();  	Point newPosition = new Point ();  	newPosition.X = center.X - this.Width / 2;  	newPosition.Y = center.Y - this.Height / 2;  	if (newPosition.Y < 1)  		newPosition.Y = 1;  	if (newPosition.X < 1)  		newPosition.X = 1;  	this.Location = newPosition;  }  else  	this.Location = prevLocation;  
Magic Number,TheraWii,FormSessionDetail,C:\repos\naegelyd_therawii\FormSessionDetail.cs,FormSessionDetail_Load,The following statement contains a magic number: newPosition.X = center.X - this.Width / 2;  
Magic Number,TheraWii,FormSessionDetail,C:\repos\naegelyd_therawii\FormSessionDetail.cs,FormSessionDetail_Load,The following statement contains a magic number: newPosition.Y = center.Y - this.Height / 2;  
Magic Number,TheraWii,Form2DTask,C:\repos\naegelyd_therawii\Form2DTask.cs,Form2DTask,The following statement contains a magic number: if (task.endCondition.GetType () == typeof(ButtonEndCondition)) {  	buttonEnd = (ButtonEndCondition)task.endCondition;  	timeEnd = new TimeLimitEndCondition ();  	comboBoxEndCondition.SelectedIndex = 0;  }  else {  	buttonEnd = new ButtonEndCondition ();  	timeEnd = (TimeLimitEndCondition)task.endCondition;  	if (((TimeLimitEndCondition)task.endCondition).Type == TimeLimitType.TotalTime)  		comboBoxEndCondition.SelectedIndex = 1;  	else if (((TimeLimitEndCondition)task.endCondition).Type == TimeLimitType.TimeInRegion)  		comboBoxEndCondition.SelectedIndex = 2;  	else if (((TimeLimitEndCondition)task.endCondition).Type == TimeLimitType.TimeOutRegion)  		comboBoxEndCondition.SelectedIndex = 3;  }  
Magic Number,TheraWii,Form2DTask,C:\repos\naegelyd_therawii\Form2DTask.cs,Form2DTask,The following statement contains a magic number: if (task.endCondition.GetType () == typeof(ButtonEndCondition)) {  	buttonEnd = (ButtonEndCondition)task.endCondition;  	timeEnd = new TimeLimitEndCondition ();  	comboBoxEndCondition.SelectedIndex = 0;  }  else {  	buttonEnd = new ButtonEndCondition ();  	timeEnd = (TimeLimitEndCondition)task.endCondition;  	if (((TimeLimitEndCondition)task.endCondition).Type == TimeLimitType.TotalTime)  		comboBoxEndCondition.SelectedIndex = 1;  	else if (((TimeLimitEndCondition)task.endCondition).Type == TimeLimitType.TimeInRegion)  		comboBoxEndCondition.SelectedIndex = 2;  	else if (((TimeLimitEndCondition)task.endCondition).Type == TimeLimitType.TimeOutRegion)  		comboBoxEndCondition.SelectedIndex = 3;  }  
Magic Number,TheraWii,Form2DTask,C:\repos\naegelyd_therawii\Form2DTask.cs,Form2DTask,The following statement contains a magic number: if (((TimeLimitEndCondition)task.endCondition).Type == TimeLimitType.TotalTime)  	comboBoxEndCondition.SelectedIndex = 1;  else if (((TimeLimitEndCondition)task.endCondition).Type == TimeLimitType.TimeInRegion)  	comboBoxEndCondition.SelectedIndex = 2;  else if (((TimeLimitEndCondition)task.endCondition).Type == TimeLimitType.TimeOutRegion)  	comboBoxEndCondition.SelectedIndex = 3;  
Magic Number,TheraWii,Form2DTask,C:\repos\naegelyd_therawii\Form2DTask.cs,Form2DTask,The following statement contains a magic number: if (((TimeLimitEndCondition)task.endCondition).Type == TimeLimitType.TotalTime)  	comboBoxEndCondition.SelectedIndex = 1;  else if (((TimeLimitEndCondition)task.endCondition).Type == TimeLimitType.TimeInRegion)  	comboBoxEndCondition.SelectedIndex = 2;  else if (((TimeLimitEndCondition)task.endCondition).Type == TimeLimitType.TimeOutRegion)  	comboBoxEndCondition.SelectedIndex = 3;  
Magic Number,TheraWii,Form2DTask,C:\repos\naegelyd_therawii\Form2DTask.cs,Form2DTask,The following statement contains a magic number: if (((TimeLimitEndCondition)task.endCondition).Type == TimeLimitType.TimeInRegion)  	comboBoxEndCondition.SelectedIndex = 2;  else if (((TimeLimitEndCondition)task.endCondition).Type == TimeLimitType.TimeOutRegion)  	comboBoxEndCondition.SelectedIndex = 3;  
Magic Number,TheraWii,Form2DTask,C:\repos\naegelyd_therawii\Form2DTask.cs,Form2DTask,The following statement contains a magic number: if (((TimeLimitEndCondition)task.endCondition).Type == TimeLimitType.TimeInRegion)  	comboBoxEndCondition.SelectedIndex = 2;  else if (((TimeLimitEndCondition)task.endCondition).Type == TimeLimitType.TimeOutRegion)  	comboBoxEndCondition.SelectedIndex = 3;  
Magic Number,TheraWii,Form2DTask,C:\repos\naegelyd_therawii\Form2DTask.cs,Form2DTask,The following statement contains a magic number: comboBoxEndCondition.SelectedIndex = 2;  
Magic Number,TheraWii,Form2DTask,C:\repos\naegelyd_therawii\Form2DTask.cs,Form2DTask,The following statement contains a magic number: if (((TimeLimitEndCondition)task.endCondition).Type == TimeLimitType.TimeOutRegion)  	comboBoxEndCondition.SelectedIndex = 3;  
Magic Number,TheraWii,Form2DTask,C:\repos\naegelyd_therawii\Form2DTask.cs,Form2DTask,The following statement contains a magic number: comboBoxEndCondition.SelectedIndex = 3;  
Magic Number,TheraWii,Form2DTask,C:\repos\naegelyd_therawii\Form2DTask.cs,buttonOK_Click,The following statement contains a magic number: switch (comboBoxEndCondition.SelectedIndex) {  case 0:  	// Button Press  	task.endCondition = buttonEnd;  	break;  case 1:  	// Time Limit  	timeEnd.Type = TimeLimitType.TotalTime;  	task.endCondition = timeEnd;  	break;  case 2:  	// Time In Region  	timeEnd.Type = TimeLimitType.TimeInRegion;  	task.endCondition = timeEnd;  	break;  case 3:  	// Time Out of Region  	timeEnd.Type = TimeLimitType.TimeOutRegion;  	task.endCondition = timeEnd;  	break;  }  
Magic Number,TheraWii,Form2DTask,C:\repos\naegelyd_therawii\Form2DTask.cs,buttonOK_Click,The following statement contains a magic number: switch (comboBoxEndCondition.SelectedIndex) {  case 0:  	// Button Press  	task.endCondition = buttonEnd;  	break;  case 1:  	// Time Limit  	timeEnd.Type = TimeLimitType.TotalTime;  	task.endCondition = timeEnd;  	break;  case 2:  	// Time In Region  	timeEnd.Type = TimeLimitType.TimeInRegion;  	task.endCondition = timeEnd;  	break;  case 3:  	// Time Out of Region  	timeEnd.Type = TimeLimitType.TimeOutRegion;  	task.endCondition = timeEnd;  	break;  }  
Magic Number,TheraWii,Form2DTask,C:\repos\naegelyd_therawii\Form2DTask.cs,comboBoxPosX_SelectedIndexChanged,The following statement contains a magic number: switch (comboBoxPosX.SelectedIndex) {  case 0:  	labelPosX1.Text = "Value";  	labelPosX2.Visible = false;  	numericUpDownPosX1.Visible = false;  	break;  case 1:  	labelPosX1.Text = "Start";  	labelPosX2.Visible = true;  	labelPosX2.Text = "End";  	numericUpDownPosX1.Visible = true;  	break;  case 2:  	labelPosX1.Text = "Min";  	labelPosX2.Visible = true;  	labelPosX2.Text = "Max";  	numericUpDownPosX1.Visible = true;  	break;  }  
Magic Number,TheraWii,Form2DTask,C:\repos\naegelyd_therawii\Form2DTask.cs,comboBoxPosY_SelectedIndexChanged,The following statement contains a magic number: switch (comboBoxPosY.SelectedIndex) {  case 0:  	labelPosY1.Text = "Value";  	labelPosY2.Visible = false;  	numericUpDownPosY1.Visible = false;  	break;  case 1:  	labelPosY1.Text = "Start";  	labelPosY2.Visible = true;  	labelPosY2.Text = "End";  	numericUpDownPosY1.Visible = true;  	break;  case 2:  	labelPosY1.Text = "Min";  	labelPosY2.Visible = true;  	labelPosY2.Text = "Max";  	numericUpDownPosY1.Visible = true;  	break;  }  
Magic Number,TheraWii,Form2DTask,C:\repos\naegelyd_therawii\Form2DTask.cs,comboBoxSizeX_SelectedIndexChanged,The following statement contains a magic number: switch (comboBoxSizeX.SelectedIndex) {  case 0:  	labelSizeX1.Text = "Value";  	labelSizeX2.Visible = false;  	numericUpDownSizeX1.Visible = false;  	break;  case 1:  	labelSizeX1.Text = "Start";  	labelSizeX2.Visible = true;  	labelSizeX2.Text = "End";  	numericUpDownSizeX1.Visible = true;  	break;  case 2:  	labelSizeX1.Text = "Min";  	labelSizeX2.Visible = true;  	labelSizeX2.Text = "Max";  	numericUpDownSizeX1.Visible = true;  	break;  }  
Magic Number,TheraWii,Form2DTask,C:\repos\naegelyd_therawii\Form2DTask.cs,comboBoxSizeY_SelectedIndexChanged,The following statement contains a magic number: switch (comboBoxSizeY.SelectedIndex) {  case 0:  	labelSizeY1.Text = "Value";  	labelSizeY2.Visible = false;  	numericUpDownSizeY1.Visible = false;  	break;  case 1:  	labelSizeY1.Text = "Start";  	labelSizeY2.Visible = true;  	labelSizeY2.Text = "End";  	numericUpDownSizeY1.Visible = true;  	break;  case 2:  	labelSizeY1.Text = "Min";  	labelSizeY2.Visible = true;  	labelSizeY2.Text = "Max";  	numericUpDownSizeY1.Visible = true;  	break;  }  
Magic Number,TheraWii,Form2DTask,C:\repos\naegelyd_therawii\Form2DTask.cs,comboBoxEndCondition_SelectedIndexChanged,The following statement contains a magic number: switch (comboBoxEndCondition.SelectedIndex) {  case 0:  	// Button Press  	labelEndSeconds.Visible = false;  	numericUpDownEndSeconds.Visible = false;  	comboBoxEndButton.Visible = true;  	break;  case 1:  	// Time Limit  	labelEndSeconds.Visible = true;  	numericUpDownEndSeconds.Visible = true;  	comboBoxEndButton.Visible = false;  	break;  case 2:  	// Time in Region  	labelEndSeconds.Visible = true;  	numericUpDownEndSeconds.Visible = true;  	comboBoxEndButton.Visible = false;  	break;  case 3:  	// Time out of Region  	labelEndSeconds.Visible = true;  	numericUpDownEndSeconds.Visible = true;  	comboBoxEndButton.Visible = false;  	break;  }  
Magic Number,TheraWii,Form2DTask,C:\repos\naegelyd_therawii\Form2DTask.cs,comboBoxEndCondition_SelectedIndexChanged,The following statement contains a magic number: switch (comboBoxEndCondition.SelectedIndex) {  case 0:  	// Button Press  	labelEndSeconds.Visible = false;  	numericUpDownEndSeconds.Visible = false;  	comboBoxEndButton.Visible = true;  	break;  case 1:  	// Time Limit  	labelEndSeconds.Visible = true;  	numericUpDownEndSeconds.Visible = true;  	comboBoxEndButton.Visible = false;  	break;  case 2:  	// Time in Region  	labelEndSeconds.Visible = true;  	numericUpDownEndSeconds.Visible = true;  	comboBoxEndButton.Visible = false;  	break;  case 3:  	// Time out of Region  	labelEndSeconds.Visible = true;  	numericUpDownEndSeconds.Visible = true;  	comboBoxEndButton.Visible = false;  	break;  }  
Magic Number,TheraWii,Form2DTask,C:\repos\naegelyd_therawii\Form2DTask.cs,Form2DTask_Load,The following statement contains a magic number: if (prevLocation == null || prevLocation.X == 0 && prevLocation.Y == 0) {  	Point center = ((FormMain)this.Tag).getCenterPosition ();  	Point newPosition = new Point ();  	newPosition.X = center.X - this.Width / 2;  	newPosition.Y = center.Y - this.Height / 2;  	if (newPosition.Y < 1)  		newPosition.Y = 1;  	if (newPosition.X < 1)  		newPosition.X = 1;  	this.Location = newPosition;  }  else  	this.Location = prevLocation;  
Magic Number,TheraWii,Form2DTask,C:\repos\naegelyd_therawii\Form2DTask.cs,Form2DTask_Load,The following statement contains a magic number: if (prevLocation == null || prevLocation.X == 0 && prevLocation.Y == 0) {  	Point center = ((FormMain)this.Tag).getCenterPosition ();  	Point newPosition = new Point ();  	newPosition.X = center.X - this.Width / 2;  	newPosition.Y = center.Y - this.Height / 2;  	if (newPosition.Y < 1)  		newPosition.Y = 1;  	if (newPosition.X < 1)  		newPosition.X = 1;  	this.Location = newPosition;  }  else  	this.Location = prevLocation;  
Magic Number,TheraWii,Form2DTask,C:\repos\naegelyd_therawii\Form2DTask.cs,Form2DTask_Load,The following statement contains a magic number: newPosition.X = center.X - this.Width / 2;  
Magic Number,TheraWii,Form2DTask,C:\repos\naegelyd_therawii\Form2DTask.cs,Form2DTask_Load,The following statement contains a magic number: newPosition.Y = center.Y - this.Height / 2;  
Magic Number,TheraWii,FormMain,C:\repos\naegelyd_therawii\FormMain.cs,getCenterPosition,The following statement contains a magic number: p.X += (this.Width / 2);  
Magic Number,TheraWii,FormMain,C:\repos\naegelyd_therawii\FormMain.cs,getCenterPosition,The following statement contains a magic number: p.Y += (this.Height / 2);  
Magic Number,TheraWii,FormMain,C:\repos\naegelyd_therawii\FormMain.cs,buttonAddTask_Click,The following statement contains a magic number: if (r == DialogResult.OK) {  	//are we adding to a repeat task?  	if (treeViewTasks.SelectedNode != null && (treeViewTasks.SelectedNode.Tag.GetType () == typeof(RepeatTask) || treeViewTasks.SelectedNode.Parent != null)) {  		t = treeViewTasks.SelectedNode;  		Task newTask = selectedTherapy.tasks.tasks [selectedTherapy.tasks.Count - 1];  		// nest the new task under the repeat task  		if (t.Tag.GetType () == typeof(RepeatTask)) {  			((RepeatTask)t.Tag).addTask (newTask);  			selectedTherapy.tasks.tasks.RemoveAt (selectedTherapy.tasks.Count - 1);  		}  		// we selected a sibling' add newtask to the parent repeat task  		else {  			((RepeatTask)t.Parent.Tag).addTask (newTask);  			selectedTherapy.tasks.tasks.RemoveAt (selectedTherapy.tasks.Count - 1);  		}  	}  	// preserve the node's location  	if (t != null) {  		path.Add (t.Index);  		while (t.Parent != null) {  			t = t.Parent;  			path.Add (t.Index);  		}  	}  	ds.SerializeDataModel ();  	treeViewTasksRefresh ();  	// select the previously selected node  	if (t != null) {  		t = treeViewTasks.Nodes [path [path.Count - 1]];  		for (int iter = path.Count - 2; iter >= 0; --iter) {  			t = t.Nodes [path [iter]];  		}  		if (t.Tag.GetType () == typeof(RepeatTask) && t.GetNodeCount (false) > 0)  			treeViewTasks.SelectedNode = t.Nodes [t.GetNodeCount (false) - 1];  		else if (t.NextNode != null) {  			treeViewTasks.SelectedNode = t;  			while (treeViewTasks.SelectedNode.NextNode != null) {  				treeViewTasks.SelectedNode = treeViewTasks.SelectedNode.NextNode;  			}  		}  		else  			treeViewTasks.SelectedNode = t;  	}  }  
Magic Number,TheraWii,FormMain,C:\repos\naegelyd_therawii\FormMain.cs,buttonAddTask_Click,The following statement contains a magic number: if (t != null) {  	t = treeViewTasks.Nodes [path [path.Count - 1]];  	for (int iter = path.Count - 2; iter >= 0; --iter) {  		t = t.Nodes [path [iter]];  	}  	if (t.Tag.GetType () == typeof(RepeatTask) && t.GetNodeCount (false) > 0)  		treeViewTasks.SelectedNode = t.Nodes [t.GetNodeCount (false) - 1];  	else if (t.NextNode != null) {  		treeViewTasks.SelectedNode = t;  		while (treeViewTasks.SelectedNode.NextNode != null) {  			treeViewTasks.SelectedNode = treeViewTasks.SelectedNode.NextNode;  		}  	}  	else  		treeViewTasks.SelectedNode = t;  }  
Magic Number,TheraWii,FormMain,C:\repos\naegelyd_therawii\FormMain.cs,buttonAddTask_Click,The following statement contains a magic number: for (int iter = path.Count - 2; iter >= 0; --iter) {  	t = t.Nodes [path [iter]];  }  
Magic Number,TheraWii,FormMain,C:\repos\naegelyd_therawii\FormMain.cs,buttonTaskMoveUp_Click,The following statement contains a magic number: if (treeViewTasks.SelectedNode != null) {  	path.Add (t.Index);  	while (t.Parent != null) {  		t = t.Parent;  		path.Add (t.Index);  	}  	path = ((Therapy)listTherapies.SelectedItem).MoveUp (path);  	treeViewTasksRefresh ();  	t = treeViewTasks.Nodes [path [path.Count - 1]];  	for (int iter = path.Count - 2; iter >= 0; --iter) {  		t = t.Nodes [path [iter]];  	}  	treeViewTasks.SelectedNode = t;  }  
Magic Number,TheraWii,FormMain,C:\repos\naegelyd_therawii\FormMain.cs,buttonTaskMoveUp_Click,The following statement contains a magic number: for (int iter = path.Count - 2; iter >= 0; --iter) {  	t = t.Nodes [path [iter]];  }  
Magic Number,TheraWii,FormMain,C:\repos\naegelyd_therawii\FormMain.cs,buttonTaskMoveDown_Click,The following statement contains a magic number: if (treeViewTasks.SelectedNode != null) {  	path.Add (t.Index);  	while (t.Parent != null) {  		t = t.Parent;  		path.Add (t.Index);  	}  	path = ((Therapy)listTherapies.SelectedItem).MoveDown (path);  	treeViewTasksRefresh ();  	t = treeViewTasks.Nodes [path [path.Count - 1]];  	for (int iter = path.Count - 2; iter >= 0; --iter) {  		t = t.Nodes [path [iter]];  	}  	treeViewTasks.SelectedNode = t;  }  
Magic Number,TheraWii,FormMain,C:\repos\naegelyd_therawii\FormMain.cs,buttonTaskMoveDown_Click,The following statement contains a magic number: for (int iter = path.Count - 2; iter >= 0; --iter) {  	t = t.Nodes [path [iter]];  }  
Magic Number,TheraWii,FormDialogTask,C:\repos\naegelyd_therawii\FormDialogTask.cs,FormDialogTask_KeyPress,The following statement contains a magic number: if (this.ActiveControl != textBoxDisplayText && e.KeyChar.Equals (Convert.ToChar (13))) {  	buttonOk_Click (this' new EventArgs ());  }  else if (e.KeyChar.Equals (Convert.ToChar (27))) {  	buttonCancel_Click (this' new EventArgs ());  }  
Magic Number,TheraWii,FormDialogTask,C:\repos\naegelyd_therawii\FormDialogTask.cs,FormDialogTask_KeyPress,The following statement contains a magic number: if (this.ActiveControl != textBoxDisplayText && e.KeyChar.Equals (Convert.ToChar (13))) {  	buttonOk_Click (this' new EventArgs ());  }  else if (e.KeyChar.Equals (Convert.ToChar (27))) {  	buttonCancel_Click (this' new EventArgs ());  }  
Magic Number,TheraWii,FormDialogTask,C:\repos\naegelyd_therawii\FormDialogTask.cs,FormDialogTask_KeyPress,The following statement contains a magic number: if (e.KeyChar.Equals (Convert.ToChar (27))) {  	buttonCancel_Click (this' new EventArgs ());  }  
Magic Number,TheraWii,FormDialogTask,C:\repos\naegelyd_therawii\FormDialogTask.cs,FormDialogTask_Load,The following statement contains a magic number: if (prevLocation == null || prevLocation.X == 0 && prevLocation.Y == 0) {  	Point center = ((FormMain)this.Tag).getCenterPosition ();  	Point newPosition = new Point ();  	newPosition.X = center.X - this.Width / 2;  	newPosition.Y = center.Y - this.Height / 2;  	if (newPosition.Y < 1)  		newPosition.Y = 1;  	if (newPosition.X < 1)  		newPosition.X = 1;  	this.Location = newPosition;  }  else  	this.Location = prevLocation;  
Magic Number,TheraWii,FormDialogTask,C:\repos\naegelyd_therawii\FormDialogTask.cs,FormDialogTask_Load,The following statement contains a magic number: if (prevLocation == null || prevLocation.X == 0 && prevLocation.Y == 0) {  	Point center = ((FormMain)this.Tag).getCenterPosition ();  	Point newPosition = new Point ();  	newPosition.X = center.X - this.Width / 2;  	newPosition.Y = center.Y - this.Height / 2;  	if (newPosition.Y < 1)  		newPosition.Y = 1;  	if (newPosition.X < 1)  		newPosition.X = 1;  	this.Location = newPosition;  }  else  	this.Location = prevLocation;  
Magic Number,TheraWii,FormDialogTask,C:\repos\naegelyd_therawii\FormDialogTask.cs,FormDialogTask_Load,The following statement contains a magic number: newPosition.X = center.X - this.Width / 2;  
Magic Number,TheraWii,FormDialogTask,C:\repos\naegelyd_therawii\FormDialogTask.cs,FormDialogTask_Load,The following statement contains a magic number: newPosition.Y = center.Y - this.Height / 2;  
Magic Number,TheraWii,Task2D,C:\repos\naegelyd_therawii\Task2D.cs,Task2D,The following statement contains a magic number: ((RegionParameter)region.rParams [regPT.Z]).pos = new float[2] {  	0'  	0  };  
Magic Number,TheraWii,Task2D,C:\repos\naegelyd_therawii\Task2D.cs,Task2D,The following statement contains a magic number: ((RegionParameter)region.rParams [regPT.Z]).size = new float[2] {  	0'  	0  };  
Magic Number,TheraWii,Task2D,C:\repos\naegelyd_therawii\Task2D.cs,Initialize,The following statement contains a magic number: foreach (RegionParameter r in region.rParams.Values) {  	// update current position x'y'z  	if (r.SL_pos == SpecifierLabel.Static)  		r.cPos = r.pos [1];  	else if (r.SL_pos == SpecifierLabel.Random) {  		l = (int)((r.pos [0] + 1) * 100);  		h = (int)((r.pos [1] + 1) * 100);  		r.cPos = ((float)rand.Next (l' h) / 100) - 1;  	}  	else if (r.SL_pos == SpecifierLabel.Dynamic) {  		if (currRep == 0)  			r.cPos = r.pos [0];  		else if (currRep < totalReps)  			r.cPos += (r.pos [1] - r.pos [0]) / (totalReps - 1);  	}  	// update current size x'y'z  	if (r.SL_size == SpecifierLabel.Static)  		r.cSize = r.size [1];  	else if (r.SL_size == SpecifierLabel.Random) {  		l = (int)((r.size [0]) * 100);  		h = (int)((r.size [1]) * 100);  		r.cSize = ((float)rand.Next (l' h) / 100);  	}  	else if (r.SL_size == SpecifierLabel.Dynamic) {  		if (currRep == 0)  			r.cSize = r.size [0];  		else if (currRep < totalReps)  			r.cSize += (r.size [1] - r.size [0]) / (totalReps - 1);  	}  	// make sure no region is partially outside the coordinate system  	if (region.Shape == ShapeType.Rectangle) {  		if (r.cPos - r.cSize / 2 < -1)  			r.cPos += (-1 - (r.cPos - r.cSize / 2));  		else if (r.cPos + r.cSize / 2 > 1)  			r.cPos -= (-1 + (r.cPos + r.cSize / 2));  	}  	this.swish = c.Load<SoundEffect> ("Sounds\\bbswish");  }  
Magic Number,TheraWii,Task2D,C:\repos\naegelyd_therawii\Task2D.cs,Initialize,The following statement contains a magic number: foreach (RegionParameter r in region.rParams.Values) {  	// update current position x'y'z  	if (r.SL_pos == SpecifierLabel.Static)  		r.cPos = r.pos [1];  	else if (r.SL_pos == SpecifierLabel.Random) {  		l = (int)((r.pos [0] + 1) * 100);  		h = (int)((r.pos [1] + 1) * 100);  		r.cPos = ((float)rand.Next (l' h) / 100) - 1;  	}  	else if (r.SL_pos == SpecifierLabel.Dynamic) {  		if (currRep == 0)  			r.cPos = r.pos [0];  		else if (currRep < totalReps)  			r.cPos += (r.pos [1] - r.pos [0]) / (totalReps - 1);  	}  	// update current size x'y'z  	if (r.SL_size == SpecifierLabel.Static)  		r.cSize = r.size [1];  	else if (r.SL_size == SpecifierLabel.Random) {  		l = (int)((r.size [0]) * 100);  		h = (int)((r.size [1]) * 100);  		r.cSize = ((float)rand.Next (l' h) / 100);  	}  	else if (r.SL_size == SpecifierLabel.Dynamic) {  		if (currRep == 0)  			r.cSize = r.size [0];  		else if (currRep < totalReps)  			r.cSize += (r.size [1] - r.size [0]) / (totalReps - 1);  	}  	// make sure no region is partially outside the coordinate system  	if (region.Shape == ShapeType.Rectangle) {  		if (r.cPos - r.cSize / 2 < -1)  			r.cPos += (-1 - (r.cPos - r.cSize / 2));  		else if (r.cPos + r.cSize / 2 > 1)  			r.cPos -= (-1 + (r.cPos + r.cSize / 2));  	}  	this.swish = c.Load<SoundEffect> ("Sounds\\bbswish");  }  
Magic Number,TheraWii,Task2D,C:\repos\naegelyd_therawii\Task2D.cs,Initialize,The following statement contains a magic number: foreach (RegionParameter r in region.rParams.Values) {  	// update current position x'y'z  	if (r.SL_pos == SpecifierLabel.Static)  		r.cPos = r.pos [1];  	else if (r.SL_pos == SpecifierLabel.Random) {  		l = (int)((r.pos [0] + 1) * 100);  		h = (int)((r.pos [1] + 1) * 100);  		r.cPos = ((float)rand.Next (l' h) / 100) - 1;  	}  	else if (r.SL_pos == SpecifierLabel.Dynamic) {  		if (currRep == 0)  			r.cPos = r.pos [0];  		else if (currRep < totalReps)  			r.cPos += (r.pos [1] - r.pos [0]) / (totalReps - 1);  	}  	// update current size x'y'z  	if (r.SL_size == SpecifierLabel.Static)  		r.cSize = r.size [1];  	else if (r.SL_size == SpecifierLabel.Random) {  		l = (int)((r.size [0]) * 100);  		h = (int)((r.size [1]) * 100);  		r.cSize = ((float)rand.Next (l' h) / 100);  	}  	else if (r.SL_size == SpecifierLabel.Dynamic) {  		if (currRep == 0)  			r.cSize = r.size [0];  		else if (currRep < totalReps)  			r.cSize += (r.size [1] - r.size [0]) / (totalReps - 1);  	}  	// make sure no region is partially outside the coordinate system  	if (region.Shape == ShapeType.Rectangle) {  		if (r.cPos - r.cSize / 2 < -1)  			r.cPos += (-1 - (r.cPos - r.cSize / 2));  		else if (r.cPos + r.cSize / 2 > 1)  			r.cPos -= (-1 + (r.cPos + r.cSize / 2));  	}  	this.swish = c.Load<SoundEffect> ("Sounds\\bbswish");  }  
Magic Number,TheraWii,Task2D,C:\repos\naegelyd_therawii\Task2D.cs,Initialize,The following statement contains a magic number: foreach (RegionParameter r in region.rParams.Values) {  	// update current position x'y'z  	if (r.SL_pos == SpecifierLabel.Static)  		r.cPos = r.pos [1];  	else if (r.SL_pos == SpecifierLabel.Random) {  		l = (int)((r.pos [0] + 1) * 100);  		h = (int)((r.pos [1] + 1) * 100);  		r.cPos = ((float)rand.Next (l' h) / 100) - 1;  	}  	else if (r.SL_pos == SpecifierLabel.Dynamic) {  		if (currRep == 0)  			r.cPos = r.pos [0];  		else if (currRep < totalReps)  			r.cPos += (r.pos [1] - r.pos [0]) / (totalReps - 1);  	}  	// update current size x'y'z  	if (r.SL_size == SpecifierLabel.Static)  		r.cSize = r.size [1];  	else if (r.SL_size == SpecifierLabel.Random) {  		l = (int)((r.size [0]) * 100);  		h = (int)((r.size [1]) * 100);  		r.cSize = ((float)rand.Next (l' h) / 100);  	}  	else if (r.SL_size == SpecifierLabel.Dynamic) {  		if (currRep == 0)  			r.cSize = r.size [0];  		else if (currRep < totalReps)  			r.cSize += (r.size [1] - r.size [0]) / (totalReps - 1);  	}  	// make sure no region is partially outside the coordinate system  	if (region.Shape == ShapeType.Rectangle) {  		if (r.cPos - r.cSize / 2 < -1)  			r.cPos += (-1 - (r.cPos - r.cSize / 2));  		else if (r.cPos + r.cSize / 2 > 1)  			r.cPos -= (-1 + (r.cPos + r.cSize / 2));  	}  	this.swish = c.Load<SoundEffect> ("Sounds\\bbswish");  }  
Magic Number,TheraWii,Task2D,C:\repos\naegelyd_therawii\Task2D.cs,Initialize,The following statement contains a magic number: foreach (RegionParameter r in region.rParams.Values) {  	// update current position x'y'z  	if (r.SL_pos == SpecifierLabel.Static)  		r.cPos = r.pos [1];  	else if (r.SL_pos == SpecifierLabel.Random) {  		l = (int)((r.pos [0] + 1) * 100);  		h = (int)((r.pos [1] + 1) * 100);  		r.cPos = ((float)rand.Next (l' h) / 100) - 1;  	}  	else if (r.SL_pos == SpecifierLabel.Dynamic) {  		if (currRep == 0)  			r.cPos = r.pos [0];  		else if (currRep < totalReps)  			r.cPos += (r.pos [1] - r.pos [0]) / (totalReps - 1);  	}  	// update current size x'y'z  	if (r.SL_size == SpecifierLabel.Static)  		r.cSize = r.size [1];  	else if (r.SL_size == SpecifierLabel.Random) {  		l = (int)((r.size [0]) * 100);  		h = (int)((r.size [1]) * 100);  		r.cSize = ((float)rand.Next (l' h) / 100);  	}  	else if (r.SL_size == SpecifierLabel.Dynamic) {  		if (currRep == 0)  			r.cSize = r.size [0];  		else if (currRep < totalReps)  			r.cSize += (r.size [1] - r.size [0]) / (totalReps - 1);  	}  	// make sure no region is partially outside the coordinate system  	if (region.Shape == ShapeType.Rectangle) {  		if (r.cPos - r.cSize / 2 < -1)  			r.cPos += (-1 - (r.cPos - r.cSize / 2));  		else if (r.cPos + r.cSize / 2 > 1)  			r.cPos -= (-1 + (r.cPos + r.cSize / 2));  	}  	this.swish = c.Load<SoundEffect> ("Sounds\\bbswish");  }  
Magic Number,TheraWii,Task2D,C:\repos\naegelyd_therawii\Task2D.cs,Initialize,The following statement contains a magic number: foreach (RegionParameter r in region.rParams.Values) {  	// update current position x'y'z  	if (r.SL_pos == SpecifierLabel.Static)  		r.cPos = r.pos [1];  	else if (r.SL_pos == SpecifierLabel.Random) {  		l = (int)((r.pos [0] + 1) * 100);  		h = (int)((r.pos [1] + 1) * 100);  		r.cPos = ((float)rand.Next (l' h) / 100) - 1;  	}  	else if (r.SL_pos == SpecifierLabel.Dynamic) {  		if (currRep == 0)  			r.cPos = r.pos [0];  		else if (currRep < totalReps)  			r.cPos += (r.pos [1] - r.pos [0]) / (totalReps - 1);  	}  	// update current size x'y'z  	if (r.SL_size == SpecifierLabel.Static)  		r.cSize = r.size [1];  	else if (r.SL_size == SpecifierLabel.Random) {  		l = (int)((r.size [0]) * 100);  		h = (int)((r.size [1]) * 100);  		r.cSize = ((float)rand.Next (l' h) / 100);  	}  	else if (r.SL_size == SpecifierLabel.Dynamic) {  		if (currRep == 0)  			r.cSize = r.size [0];  		else if (currRep < totalReps)  			r.cSize += (r.size [1] - r.size [0]) / (totalReps - 1);  	}  	// make sure no region is partially outside the coordinate system  	if (region.Shape == ShapeType.Rectangle) {  		if (r.cPos - r.cSize / 2 < -1)  			r.cPos += (-1 - (r.cPos - r.cSize / 2));  		else if (r.cPos + r.cSize / 2 > 1)  			r.cPos -= (-1 + (r.cPos + r.cSize / 2));  	}  	this.swish = c.Load<SoundEffect> ("Sounds\\bbswish");  }  
Magic Number,TheraWii,Task2D,C:\repos\naegelyd_therawii\Task2D.cs,Initialize,The following statement contains a magic number: foreach (RegionParameter r in region.rParams.Values) {  	// update current position x'y'z  	if (r.SL_pos == SpecifierLabel.Static)  		r.cPos = r.pos [1];  	else if (r.SL_pos == SpecifierLabel.Random) {  		l = (int)((r.pos [0] + 1) * 100);  		h = (int)((r.pos [1] + 1) * 100);  		r.cPos = ((float)rand.Next (l' h) / 100) - 1;  	}  	else if (r.SL_pos == SpecifierLabel.Dynamic) {  		if (currRep == 0)  			r.cPos = r.pos [0];  		else if (currRep < totalReps)  			r.cPos += (r.pos [1] - r.pos [0]) / (totalReps - 1);  	}  	// update current size x'y'z  	if (r.SL_size == SpecifierLabel.Static)  		r.cSize = r.size [1];  	else if (r.SL_size == SpecifierLabel.Random) {  		l = (int)((r.size [0]) * 100);  		h = (int)((r.size [1]) * 100);  		r.cSize = ((float)rand.Next (l' h) / 100);  	}  	else if (r.SL_size == SpecifierLabel.Dynamic) {  		if (currRep == 0)  			r.cSize = r.size [0];  		else if (currRep < totalReps)  			r.cSize += (r.size [1] - r.size [0]) / (totalReps - 1);  	}  	// make sure no region is partially outside the coordinate system  	if (region.Shape == ShapeType.Rectangle) {  		if (r.cPos - r.cSize / 2 < -1)  			r.cPos += (-1 - (r.cPos - r.cSize / 2));  		else if (r.cPos + r.cSize / 2 > 1)  			r.cPos -= (-1 + (r.cPos + r.cSize / 2));  	}  	this.swish = c.Load<SoundEffect> ("Sounds\\bbswish");  }  
Magic Number,TheraWii,Task2D,C:\repos\naegelyd_therawii\Task2D.cs,Initialize,The following statement contains a magic number: foreach (RegionParameter r in region.rParams.Values) {  	// update current position x'y'z  	if (r.SL_pos == SpecifierLabel.Static)  		r.cPos = r.pos [1];  	else if (r.SL_pos == SpecifierLabel.Random) {  		l = (int)((r.pos [0] + 1) * 100);  		h = (int)((r.pos [1] + 1) * 100);  		r.cPos = ((float)rand.Next (l' h) / 100) - 1;  	}  	else if (r.SL_pos == SpecifierLabel.Dynamic) {  		if (currRep == 0)  			r.cPos = r.pos [0];  		else if (currRep < totalReps)  			r.cPos += (r.pos [1] - r.pos [0]) / (totalReps - 1);  	}  	// update current size x'y'z  	if (r.SL_size == SpecifierLabel.Static)  		r.cSize = r.size [1];  	else if (r.SL_size == SpecifierLabel.Random) {  		l = (int)((r.size [0]) * 100);  		h = (int)((r.size [1]) * 100);  		r.cSize = ((float)rand.Next (l' h) / 100);  	}  	else if (r.SL_size == SpecifierLabel.Dynamic) {  		if (currRep == 0)  			r.cSize = r.size [0];  		else if (currRep < totalReps)  			r.cSize += (r.size [1] - r.size [0]) / (totalReps - 1);  	}  	// make sure no region is partially outside the coordinate system  	if (region.Shape == ShapeType.Rectangle) {  		if (r.cPos - r.cSize / 2 < -1)  			r.cPos += (-1 - (r.cPos - r.cSize / 2));  		else if (r.cPos + r.cSize / 2 > 1)  			r.cPos -= (-1 + (r.cPos + r.cSize / 2));  	}  	this.swish = c.Load<SoundEffect> ("Sounds\\bbswish");  }  
Magic Number,TheraWii,Task2D,C:\repos\naegelyd_therawii\Task2D.cs,Initialize,The following statement contains a magic number: foreach (RegionParameter r in region.rParams.Values) {  	// update current position x'y'z  	if (r.SL_pos == SpecifierLabel.Static)  		r.cPos = r.pos [1];  	else if (r.SL_pos == SpecifierLabel.Random) {  		l = (int)((r.pos [0] + 1) * 100);  		h = (int)((r.pos [1] + 1) * 100);  		r.cPos = ((float)rand.Next (l' h) / 100) - 1;  	}  	else if (r.SL_pos == SpecifierLabel.Dynamic) {  		if (currRep == 0)  			r.cPos = r.pos [0];  		else if (currRep < totalReps)  			r.cPos += (r.pos [1] - r.pos [0]) / (totalReps - 1);  	}  	// update current size x'y'z  	if (r.SL_size == SpecifierLabel.Static)  		r.cSize = r.size [1];  	else if (r.SL_size == SpecifierLabel.Random) {  		l = (int)((r.size [0]) * 100);  		h = (int)((r.size [1]) * 100);  		r.cSize = ((float)rand.Next (l' h) / 100);  	}  	else if (r.SL_size == SpecifierLabel.Dynamic) {  		if (currRep == 0)  			r.cSize = r.size [0];  		else if (currRep < totalReps)  			r.cSize += (r.size [1] - r.size [0]) / (totalReps - 1);  	}  	// make sure no region is partially outside the coordinate system  	if (region.Shape == ShapeType.Rectangle) {  		if (r.cPos - r.cSize / 2 < -1)  			r.cPos += (-1 - (r.cPos - r.cSize / 2));  		else if (r.cPos + r.cSize / 2 > 1)  			r.cPos -= (-1 + (r.cPos + r.cSize / 2));  	}  	this.swish = c.Load<SoundEffect> ("Sounds\\bbswish");  }  
Magic Number,TheraWii,Task2D,C:\repos\naegelyd_therawii\Task2D.cs,Initialize,The following statement contains a magic number: foreach (RegionParameter r in region.rParams.Values) {  	// update current position x'y'z  	if (r.SL_pos == SpecifierLabel.Static)  		r.cPos = r.pos [1];  	else if (r.SL_pos == SpecifierLabel.Random) {  		l = (int)((r.pos [0] + 1) * 100);  		h = (int)((r.pos [1] + 1) * 100);  		r.cPos = ((float)rand.Next (l' h) / 100) - 1;  	}  	else if (r.SL_pos == SpecifierLabel.Dynamic) {  		if (currRep == 0)  			r.cPos = r.pos [0];  		else if (currRep < totalReps)  			r.cPos += (r.pos [1] - r.pos [0]) / (totalReps - 1);  	}  	// update current size x'y'z  	if (r.SL_size == SpecifierLabel.Static)  		r.cSize = r.size [1];  	else if (r.SL_size == SpecifierLabel.Random) {  		l = (int)((r.size [0]) * 100);  		h = (int)((r.size [1]) * 100);  		r.cSize = ((float)rand.Next (l' h) / 100);  	}  	else if (r.SL_size == SpecifierLabel.Dynamic) {  		if (currRep == 0)  			r.cSize = r.size [0];  		else if (currRep < totalReps)  			r.cSize += (r.size [1] - r.size [0]) / (totalReps - 1);  	}  	// make sure no region is partially outside the coordinate system  	if (region.Shape == ShapeType.Rectangle) {  		if (r.cPos - r.cSize / 2 < -1)  			r.cPos += (-1 - (r.cPos - r.cSize / 2));  		else if (r.cPos + r.cSize / 2 > 1)  			r.cPos -= (-1 + (r.cPos + r.cSize / 2));  	}  	this.swish = c.Load<SoundEffect> ("Sounds\\bbswish");  }  
Magic Number,TheraWii,Task2D,C:\repos\naegelyd_therawii\Task2D.cs,Initialize,The following statement contains a magic number: if (r.SL_pos == SpecifierLabel.Static)  	r.cPos = r.pos [1];  else if (r.SL_pos == SpecifierLabel.Random) {  	l = (int)((r.pos [0] + 1) * 100);  	h = (int)((r.pos [1] + 1) * 100);  	r.cPos = ((float)rand.Next (l' h) / 100) - 1;  }  else if (r.SL_pos == SpecifierLabel.Dynamic) {  	if (currRep == 0)  		r.cPos = r.pos [0];  	else if (currRep < totalReps)  		r.cPos += (r.pos [1] - r.pos [0]) / (totalReps - 1);  }  
Magic Number,TheraWii,Task2D,C:\repos\naegelyd_therawii\Task2D.cs,Initialize,The following statement contains a magic number: if (r.SL_pos == SpecifierLabel.Static)  	r.cPos = r.pos [1];  else if (r.SL_pos == SpecifierLabel.Random) {  	l = (int)((r.pos [0] + 1) * 100);  	h = (int)((r.pos [1] + 1) * 100);  	r.cPos = ((float)rand.Next (l' h) / 100) - 1;  }  else if (r.SL_pos == SpecifierLabel.Dynamic) {  	if (currRep == 0)  		r.cPos = r.pos [0];  	else if (currRep < totalReps)  		r.cPos += (r.pos [1] - r.pos [0]) / (totalReps - 1);  }  
Magic Number,TheraWii,Task2D,C:\repos\naegelyd_therawii\Task2D.cs,Initialize,The following statement contains a magic number: if (r.SL_pos == SpecifierLabel.Static)  	r.cPos = r.pos [1];  else if (r.SL_pos == SpecifierLabel.Random) {  	l = (int)((r.pos [0] + 1) * 100);  	h = (int)((r.pos [1] + 1) * 100);  	r.cPos = ((float)rand.Next (l' h) / 100) - 1;  }  else if (r.SL_pos == SpecifierLabel.Dynamic) {  	if (currRep == 0)  		r.cPos = r.pos [0];  	else if (currRep < totalReps)  		r.cPos += (r.pos [1] - r.pos [0]) / (totalReps - 1);  }  
Magic Number,TheraWii,Task2D,C:\repos\naegelyd_therawii\Task2D.cs,Initialize,The following statement contains a magic number: if (r.SL_pos == SpecifierLabel.Random) {  	l = (int)((r.pos [0] + 1) * 100);  	h = (int)((r.pos [1] + 1) * 100);  	r.cPos = ((float)rand.Next (l' h) / 100) - 1;  }  else if (r.SL_pos == SpecifierLabel.Dynamic) {  	if (currRep == 0)  		r.cPos = r.pos [0];  	else if (currRep < totalReps)  		r.cPos += (r.pos [1] - r.pos [0]) / (totalReps - 1);  }  
Magic Number,TheraWii,Task2D,C:\repos\naegelyd_therawii\Task2D.cs,Initialize,The following statement contains a magic number: if (r.SL_pos == SpecifierLabel.Random) {  	l = (int)((r.pos [0] + 1) * 100);  	h = (int)((r.pos [1] + 1) * 100);  	r.cPos = ((float)rand.Next (l' h) / 100) - 1;  }  else if (r.SL_pos == SpecifierLabel.Dynamic) {  	if (currRep == 0)  		r.cPos = r.pos [0];  	else if (currRep < totalReps)  		r.cPos += (r.pos [1] - r.pos [0]) / (totalReps - 1);  }  
Magic Number,TheraWii,Task2D,C:\repos\naegelyd_therawii\Task2D.cs,Initialize,The following statement contains a magic number: if (r.SL_pos == SpecifierLabel.Random) {  	l = (int)((r.pos [0] + 1) * 100);  	h = (int)((r.pos [1] + 1) * 100);  	r.cPos = ((float)rand.Next (l' h) / 100) - 1;  }  else if (r.SL_pos == SpecifierLabel.Dynamic) {  	if (currRep == 0)  		r.cPos = r.pos [0];  	else if (currRep < totalReps)  		r.cPos += (r.pos [1] - r.pos [0]) / (totalReps - 1);  }  
Magic Number,TheraWii,Task2D,C:\repos\naegelyd_therawii\Task2D.cs,Initialize,The following statement contains a magic number: l = (int)((r.pos [0] + 1) * 100);  
Magic Number,TheraWii,Task2D,C:\repos\naegelyd_therawii\Task2D.cs,Initialize,The following statement contains a magic number: h = (int)((r.pos [1] + 1) * 100);  
Magic Number,TheraWii,Task2D,C:\repos\naegelyd_therawii\Task2D.cs,Initialize,The following statement contains a magic number: r.cPos = ((float)rand.Next (l' h) / 100) - 1;  
Magic Number,TheraWii,Task2D,C:\repos\naegelyd_therawii\Task2D.cs,Initialize,The following statement contains a magic number: if (r.SL_size == SpecifierLabel.Static)  	r.cSize = r.size [1];  else if (r.SL_size == SpecifierLabel.Random) {  	l = (int)((r.size [0]) * 100);  	h = (int)((r.size [1]) * 100);  	r.cSize = ((float)rand.Next (l' h) / 100);  }  else if (r.SL_size == SpecifierLabel.Dynamic) {  	if (currRep == 0)  		r.cSize = r.size [0];  	else if (currRep < totalReps)  		r.cSize += (r.size [1] - r.size [0]) / (totalReps - 1);  }  
Magic Number,TheraWii,Task2D,C:\repos\naegelyd_therawii\Task2D.cs,Initialize,The following statement contains a magic number: if (r.SL_size == SpecifierLabel.Static)  	r.cSize = r.size [1];  else if (r.SL_size == SpecifierLabel.Random) {  	l = (int)((r.size [0]) * 100);  	h = (int)((r.size [1]) * 100);  	r.cSize = ((float)rand.Next (l' h) / 100);  }  else if (r.SL_size == SpecifierLabel.Dynamic) {  	if (currRep == 0)  		r.cSize = r.size [0];  	else if (currRep < totalReps)  		r.cSize += (r.size [1] - r.size [0]) / (totalReps - 1);  }  
Magic Number,TheraWii,Task2D,C:\repos\naegelyd_therawii\Task2D.cs,Initialize,The following statement contains a magic number: if (r.SL_size == SpecifierLabel.Static)  	r.cSize = r.size [1];  else if (r.SL_size == SpecifierLabel.Random) {  	l = (int)((r.size [0]) * 100);  	h = (int)((r.size [1]) * 100);  	r.cSize = ((float)rand.Next (l' h) / 100);  }  else if (r.SL_size == SpecifierLabel.Dynamic) {  	if (currRep == 0)  		r.cSize = r.size [0];  	else if (currRep < totalReps)  		r.cSize += (r.size [1] - r.size [0]) / (totalReps - 1);  }  
Magic Number,TheraWii,Task2D,C:\repos\naegelyd_therawii\Task2D.cs,Initialize,The following statement contains a magic number: if (r.SL_size == SpecifierLabel.Random) {  	l = (int)((r.size [0]) * 100);  	h = (int)((r.size [1]) * 100);  	r.cSize = ((float)rand.Next (l' h) / 100);  }  else if (r.SL_size == SpecifierLabel.Dynamic) {  	if (currRep == 0)  		r.cSize = r.size [0];  	else if (currRep < totalReps)  		r.cSize += (r.size [1] - r.size [0]) / (totalReps - 1);  }  
Magic Number,TheraWii,Task2D,C:\repos\naegelyd_therawii\Task2D.cs,Initialize,The following statement contains a magic number: if (r.SL_size == SpecifierLabel.Random) {  	l = (int)((r.size [0]) * 100);  	h = (int)((r.size [1]) * 100);  	r.cSize = ((float)rand.Next (l' h) / 100);  }  else if (r.SL_size == SpecifierLabel.Dynamic) {  	if (currRep == 0)  		r.cSize = r.size [0];  	else if (currRep < totalReps)  		r.cSize += (r.size [1] - r.size [0]) / (totalReps - 1);  }  
Magic Number,TheraWii,Task2D,C:\repos\naegelyd_therawii\Task2D.cs,Initialize,The following statement contains a magic number: if (r.SL_size == SpecifierLabel.Random) {  	l = (int)((r.size [0]) * 100);  	h = (int)((r.size [1]) * 100);  	r.cSize = ((float)rand.Next (l' h) / 100);  }  else if (r.SL_size == SpecifierLabel.Dynamic) {  	if (currRep == 0)  		r.cSize = r.size [0];  	else if (currRep < totalReps)  		r.cSize += (r.size [1] - r.size [0]) / (totalReps - 1);  }  
Magic Number,TheraWii,Task2D,C:\repos\naegelyd_therawii\Task2D.cs,Initialize,The following statement contains a magic number: l = (int)((r.size [0]) * 100);  
Magic Number,TheraWii,Task2D,C:\repos\naegelyd_therawii\Task2D.cs,Initialize,The following statement contains a magic number: h = (int)((r.size [1]) * 100);  
Magic Number,TheraWii,Task2D,C:\repos\naegelyd_therawii\Task2D.cs,Initialize,The following statement contains a magic number: r.cSize = ((float)rand.Next (l' h) / 100);  
Magic Number,TheraWii,Task2D,C:\repos\naegelyd_therawii\Task2D.cs,Initialize,The following statement contains a magic number: if (region.Shape == ShapeType.Rectangle) {  	if (r.cPos - r.cSize / 2 < -1)  		r.cPos += (-1 - (r.cPos - r.cSize / 2));  	else if (r.cPos + r.cSize / 2 > 1)  		r.cPos -= (-1 + (r.cPos + r.cSize / 2));  }  
Magic Number,TheraWii,Task2D,C:\repos\naegelyd_therawii\Task2D.cs,Initialize,The following statement contains a magic number: if (region.Shape == ShapeType.Rectangle) {  	if (r.cPos - r.cSize / 2 < -1)  		r.cPos += (-1 - (r.cPos - r.cSize / 2));  	else if (r.cPos + r.cSize / 2 > 1)  		r.cPos -= (-1 + (r.cPos + r.cSize / 2));  }  
Magic Number,TheraWii,Task2D,C:\repos\naegelyd_therawii\Task2D.cs,Initialize,The following statement contains a magic number: if (region.Shape == ShapeType.Rectangle) {  	if (r.cPos - r.cSize / 2 < -1)  		r.cPos += (-1 - (r.cPos - r.cSize / 2));  	else if (r.cPos + r.cSize / 2 > 1)  		r.cPos -= (-1 + (r.cPos + r.cSize / 2));  }  
Magic Number,TheraWii,Task2D,C:\repos\naegelyd_therawii\Task2D.cs,Initialize,The following statement contains a magic number: if (region.Shape == ShapeType.Rectangle) {  	if (r.cPos - r.cSize / 2 < -1)  		r.cPos += (-1 - (r.cPos - r.cSize / 2));  	else if (r.cPos + r.cSize / 2 > 1)  		r.cPos -= (-1 + (r.cPos + r.cSize / 2));  }  
Magic Number,TheraWii,Task2D,C:\repos\naegelyd_therawii\Task2D.cs,Initialize,The following statement contains a magic number: if (r.cPos - r.cSize / 2 < -1)  	r.cPos += (-1 - (r.cPos - r.cSize / 2));  else if (r.cPos + r.cSize / 2 > 1)  	r.cPos -= (-1 + (r.cPos + r.cSize / 2));  
Magic Number,TheraWii,Task2D,C:\repos\naegelyd_therawii\Task2D.cs,Initialize,The following statement contains a magic number: if (r.cPos - r.cSize / 2 < -1)  	r.cPos += (-1 - (r.cPos - r.cSize / 2));  else if (r.cPos + r.cSize / 2 > 1)  	r.cPos -= (-1 + (r.cPos + r.cSize / 2));  
Magic Number,TheraWii,Task2D,C:\repos\naegelyd_therawii\Task2D.cs,Initialize,The following statement contains a magic number: if (r.cPos - r.cSize / 2 < -1)  	r.cPos += (-1 - (r.cPos - r.cSize / 2));  else if (r.cPos + r.cSize / 2 > 1)  	r.cPos -= (-1 + (r.cPos + r.cSize / 2));  
Magic Number,TheraWii,Task2D,C:\repos\naegelyd_therawii\Task2D.cs,Initialize,The following statement contains a magic number: if (r.cPos - r.cSize / 2 < -1)  	r.cPos += (-1 - (r.cPos - r.cSize / 2));  else if (r.cPos + r.cSize / 2 > 1)  	r.cPos -= (-1 + (r.cPos + r.cSize / 2));  
Magic Number,TheraWii,Task2D,C:\repos\naegelyd_therawii\Task2D.cs,Initialize,The following statement contains a magic number: r.cPos += (-1 - (r.cPos - r.cSize / 2));  
Magic Number,TheraWii,Task2D,C:\repos\naegelyd_therawii\Task2D.cs,Initialize,The following statement contains a magic number: if (r.cPos + r.cSize / 2 > 1)  	r.cPos -= (-1 + (r.cPos + r.cSize / 2));  
Magic Number,TheraWii,Task2D,C:\repos\naegelyd_therawii\Task2D.cs,Initialize,The following statement contains a magic number: if (r.cPos + r.cSize / 2 > 1)  	r.cPos -= (-1 + (r.cPos + r.cSize / 2));  
Magic Number,TheraWii,Task2D,C:\repos\naegelyd_therawii\Task2D.cs,Initialize,The following statement contains a magic number: r.cPos -= (-1 + (r.cPos + r.cSize / 2));  
Magic Number,TheraWii,Task2D,C:\repos\naegelyd_therawii\Task2D.cs,Initialize,The following statement contains a magic number: if (region.Shape == ShapeType.Rectangle) {  	rectangle = new Cuboid (g' c' new Vector3 (((RegionParameter)region.rParams [regPT.X]).cPos' ((RegionParameter)region.rParams [regPT.Y]).cPos' 0.0f)' new Vector3 (((RegionParameter)region.rParams [regPT.X]).cSize' ((RegionParameter)region.rParams [regPT.Y]).cSize' 0.0f)' Color.DarkBlue);  }  else if (region.Shape == ShapeType.Ellipse) {  	ellipse = new Ellipsoid (g' c' new Vector3 (((RegionParameter)region.rParams [regPT.X]).cPos' ((RegionParameter)region.rParams [regPT.Y]).cPos' 0.0f)' new Vector3 (((RegionParameter)region.rParams [regPT.X]).cSize / 2' ((RegionParameter)region.rParams [regPT.Y]).cSize / 2' 0.0f)' Color.DarkBlue);  }  else if (region.Shape == ShapeType.Hoop) {  	hoop = new Hoop (g' c' new Vector3 (((RegionParameter)region.rParams [regPT.X]).cPos' ((RegionParameter)region.rParams [regPT.Y]).cPos' 0.0f)' new Vector3 (((RegionParameter)region.rParams [regPT.X]).cSize' ((RegionParameter)region.rParams [regPT.Y]).cSize' 0.0f)' Color.DarkBlue);  }  
Magic Number,TheraWii,Task2D,C:\repos\naegelyd_therawii\Task2D.cs,Initialize,The following statement contains a magic number: if (region.Shape == ShapeType.Rectangle) {  	rectangle = new Cuboid (g' c' new Vector3 (((RegionParameter)region.rParams [regPT.X]).cPos' ((RegionParameter)region.rParams [regPT.Y]).cPos' 0.0f)' new Vector3 (((RegionParameter)region.rParams [regPT.X]).cSize' ((RegionParameter)region.rParams [regPT.Y]).cSize' 0.0f)' Color.DarkBlue);  }  else if (region.Shape == ShapeType.Ellipse) {  	ellipse = new Ellipsoid (g' c' new Vector3 (((RegionParameter)region.rParams [regPT.X]).cPos' ((RegionParameter)region.rParams [regPT.Y]).cPos' 0.0f)' new Vector3 (((RegionParameter)region.rParams [regPT.X]).cSize / 2' ((RegionParameter)region.rParams [regPT.Y]).cSize / 2' 0.0f)' Color.DarkBlue);  }  else if (region.Shape == ShapeType.Hoop) {  	hoop = new Hoop (g' c' new Vector3 (((RegionParameter)region.rParams [regPT.X]).cPos' ((RegionParameter)region.rParams [regPT.Y]).cPos' 0.0f)' new Vector3 (((RegionParameter)region.rParams [regPT.X]).cSize' ((RegionParameter)region.rParams [regPT.Y]).cSize' 0.0f)' Color.DarkBlue);  }  
Magic Number,TheraWii,Task2D,C:\repos\naegelyd_therawii\Task2D.cs,Initialize,The following statement contains a magic number: if (region.Shape == ShapeType.Ellipse) {  	ellipse = new Ellipsoid (g' c' new Vector3 (((RegionParameter)region.rParams [regPT.X]).cPos' ((RegionParameter)region.rParams [regPT.Y]).cPos' 0.0f)' new Vector3 (((RegionParameter)region.rParams [regPT.X]).cSize / 2' ((RegionParameter)region.rParams [regPT.Y]).cSize / 2' 0.0f)' Color.DarkBlue);  }  else if (region.Shape == ShapeType.Hoop) {  	hoop = new Hoop (g' c' new Vector3 (((RegionParameter)region.rParams [regPT.X]).cPos' ((RegionParameter)region.rParams [regPT.Y]).cPos' 0.0f)' new Vector3 (((RegionParameter)region.rParams [regPT.X]).cSize' ((RegionParameter)region.rParams [regPT.Y]).cSize' 0.0f)' Color.DarkBlue);  }  
Magic Number,TheraWii,Task2D,C:\repos\naegelyd_therawii\Task2D.cs,Initialize,The following statement contains a magic number: if (region.Shape == ShapeType.Ellipse) {  	ellipse = new Ellipsoid (g' c' new Vector3 (((RegionParameter)region.rParams [regPT.X]).cPos' ((RegionParameter)region.rParams [regPT.Y]).cPos' 0.0f)' new Vector3 (((RegionParameter)region.rParams [regPT.X]).cSize / 2' ((RegionParameter)region.rParams [regPT.Y]).cSize / 2' 0.0f)' Color.DarkBlue);  }  else if (region.Shape == ShapeType.Hoop) {  	hoop = new Hoop (g' c' new Vector3 (((RegionParameter)region.rParams [regPT.X]).cPos' ((RegionParameter)region.rParams [regPT.Y]).cPos' 0.0f)' new Vector3 (((RegionParameter)region.rParams [regPT.X]).cSize' ((RegionParameter)region.rParams [regPT.Y]).cSize' 0.0f)' Color.DarkBlue);  }  
Magic Number,TheraWii,Task2D,C:\repos\naegelyd_therawii\Task2D.cs,Initialize,The following statement contains a magic number: ellipse = new Ellipsoid (g' c' new Vector3 (((RegionParameter)region.rParams [regPT.X]).cPos' ((RegionParameter)region.rParams [regPT.Y]).cPos' 0.0f)' new Vector3 (((RegionParameter)region.rParams [regPT.X]).cSize / 2' ((RegionParameter)region.rParams [regPT.Y]).cSize / 2' 0.0f)' Color.DarkBlue);  
Magic Number,TheraWii,Task2D,C:\repos\naegelyd_therawii\Task2D.cs,Initialize,The following statement contains a magic number: ellipse = new Ellipsoid (g' c' new Vector3 (((RegionParameter)region.rParams [regPT.X]).cPos' ((RegionParameter)region.rParams [regPT.Y]).cPos' 0.0f)' new Vector3 (((RegionParameter)region.rParams [regPT.X]).cSize / 2' ((RegionParameter)region.rParams [regPT.Y]).cSize / 2' 0.0f)' Color.DarkBlue);  
Magic Number,TheraWii,Therapy,C:\repos\naegelyd_therawii\Therapy.cs,MoveUp,The following statement contains a magic number: for (int i = path.Count - 1; i > -1; --i) {  	if (i == 1)  		parTask = (RepeatTask)((RepeatTask)selTask).tasks [path [i]];  	else if (i == 2)  		grandParTask = (RepeatTask)((RepeatTask)selTask).tasks [path [i]];  	selTask = ((RepeatTask)selTask).tasks [path [i]];  }  
Magic Number,TheraWii,Therapy,C:\repos\naegelyd_therawii\Therapy.cs,MoveUp,The following statement contains a magic number: if (i == 1)  	parTask = (RepeatTask)((RepeatTask)selTask).tasks [path [i]];  else if (i == 2)  	grandParTask = (RepeatTask)((RepeatTask)selTask).tasks [path [i]];  
Magic Number,TheraWii,Therapy,C:\repos\naegelyd_therawii\Therapy.cs,MoveUp,The following statement contains a magic number: if (i == 2)  	grandParTask = (RepeatTask)((RepeatTask)selTask).tasks [path [i]];  
Magic Number,TheraWii,Therapy,C:\repos\naegelyd_therawii\Therapy.cs,MoveDown,The following statement contains a magic number: for (int i = path.Count - 1; i > -1; --i) {  	if (i == 1)  		parTask = (RepeatTask)((RepeatTask)selTask).tasks [path [i]];  	else if (i == 2)  		grandParTask = (RepeatTask)((RepeatTask)selTask).tasks [path [i]];  	selTask = ((RepeatTask)selTask).tasks [path [i]];  }  
Magic Number,TheraWii,Therapy,C:\repos\naegelyd_therawii\Therapy.cs,MoveDown,The following statement contains a magic number: if (i == 1)  	parTask = (RepeatTask)((RepeatTask)selTask).tasks [path [i]];  else if (i == 2)  	grandParTask = (RepeatTask)((RepeatTask)selTask).tasks [path [i]];  
Magic Number,TheraWii,Therapy,C:\repos\naegelyd_therawii\Therapy.cs,MoveDown,The following statement contains a magic number: if (i == 2)  	grandParTask = (RepeatTask)((RepeatTask)selTask).tasks [path [i]];  
Magic Number,TheraWii,WiiUse,C:\repos\naegelyd_therawii\WiiUse.cs,startupPolling,The following statement contains a magic number: for (int i = 0; i < 40; i++) {  	Poll ();  }  
Missing Default,TheraWii,Form3DTask,C:\repos\naegelyd_therawii\Form3DTask.cs,buttonOK_Click,The following switch statement is missing a default case: switch (comboBoxEndCondition.SelectedIndex) {  case 0:  	// Button Press  	task.endCondition = buttonEnd;  	break;  case 1:  	// Time Limit  	task.endCondition = timeEnd;  	break;  }  
Missing Default,TheraWii,Form3DTask,C:\repos\naegelyd_therawii\Form3DTask.cs,comboBoxPosX_SelectedIndexChanged,The following switch statement is missing a default case: switch (comboBoxPosX.SelectedIndex) {  case 0:  	labelPosX1.Text = "Value";  	labelPosX2.Visible = false;  	numericUpDownPosX1.Visible = false;  	break;  case 1:  	labelPosX1.Text = "Start";  	labelPosX2.Visible = true;  	labelPosX2.Text = "End";  	numericUpDownPosX1.Visible = true;  	break;  case 2:  	labelPosX1.Text = "Min";  	labelPosX2.Visible = true;  	labelPosX2.Text = "Max";  	numericUpDownPosX1.Visible = true;  	break;  }  
Missing Default,TheraWii,Form3DTask,C:\repos\naegelyd_therawii\Form3DTask.cs,comboBoxPosY_SelectedIndexChanged,The following switch statement is missing a default case: switch (comboBoxPosY.SelectedIndex) {  case 0:  	labelPosY1.Text = "Value";  	labelPosY2.Visible = false;  	numericUpDownPosY1.Visible = false;  	break;  case 1:  	labelPosY1.Text = "Start";  	labelPosY2.Visible = true;  	labelPosY2.Text = "End";  	numericUpDownPosY1.Visible = true;  	break;  case 2:  	labelPosY1.Text = "Min";  	labelPosY2.Visible = true;  	labelPosY2.Text = "Max";  	numericUpDownPosY1.Visible = true;  	break;  }  
Missing Default,TheraWii,Form3DTask,C:\repos\naegelyd_therawii\Form3DTask.cs,comboBoxSizeX_SelectedIndexChanged,The following switch statement is missing a default case: switch (comboBoxSizeX.SelectedIndex) {  case 0:  	labelSizeX1.Text = "Value";  	labelSizeX2.Visible = false;  	numericUpDownSizeX1.Visible = false;  	break;  case 1:  	labelSizeX1.Text = "Start";  	labelSizeX2.Visible = true;  	labelSizeX2.Text = "End";  	numericUpDownSizeX1.Visible = true;  	break;  case 2:  	labelSizeX1.Text = "Min";  	labelSizeX2.Visible = true;  	labelSizeX2.Text = "Max";  	numericUpDownSizeX1.Visible = true;  	break;  }  
Missing Default,TheraWii,Form3DTask,C:\repos\naegelyd_therawii\Form3DTask.cs,comboBoxSizeY_SelectedIndexChanged,The following switch statement is missing a default case: switch (comboBoxSizeY.SelectedIndex) {  case 0:  	labelSizeY1.Text = "Value";  	labelSizeY2.Visible = false;  	numericUpDownSizeY1.Visible = false;  	break;  case 1:  	labelSizeY1.Text = "Start";  	labelSizeY2.Visible = true;  	labelSizeY2.Text = "End";  	numericUpDownSizeY1.Visible = true;  	break;  case 2:  	labelSizeY1.Text = "Min";  	labelSizeY2.Visible = true;  	labelSizeY2.Text = "Max";  	numericUpDownSizeY1.Visible = true;  	break;  }  
Missing Default,TheraWii,Form3DTask,C:\repos\naegelyd_therawii\Form3DTask.cs,comboBoxPosZ_SelectedIndexChanged,The following switch statement is missing a default case: switch (comboBoxPosZ.SelectedIndex) {  case 0:  	labelPosZ1.Text = "Value";  	labelPosZ2.Visible = false;  	numericUpDownPosZ1.Visible = false;  	break;  case 1:  	labelPosZ1.Text = "Start";  	labelPosZ2.Visible = true;  	labelPosZ2.Text = "End";  	numericUpDownPosZ1.Visible = true;  	break;  case 2:  	labelPosZ1.Text = "Min";  	labelPosZ2.Visible = true;  	labelPosZ2.Text = "Max";  	numericUpDownPosZ1.Visible = true;  	break;  }  
Missing Default,TheraWii,Form3DTask,C:\repos\naegelyd_therawii\Form3DTask.cs,comboBoxSizeZ_SelectedIndexChanged,The following switch statement is missing a default case: switch (comboBoxSizeZ.SelectedIndex) {  case 0:  	labelSizeZ1.Text = "Value";  	labelSizeZ2.Visible = false;  	numericUpDownSizeZ1.Visible = false;  	break;  case 1:  	labelSizeZ1.Text = "Start";  	labelSizeZ2.Visible = true;  	labelSizeZ2.Text = "End";  	numericUpDownSizeZ1.Visible = true;  	break;  case 2:  	labelSizeZ1.Text = "Min";  	labelSizeZ2.Visible = true;  	labelSizeZ2.Text = "Max";  	numericUpDownSizeZ1.Visible = true;  	break;  }  
Missing Default,TheraWii,Form3DTask,C:\repos\naegelyd_therawii\Form3DTask.cs,comboBoxEndCondition_SelectedIndexChanged,The following switch statement is missing a default case: switch (comboBoxEndCondition.SelectedIndex) {  case 0:  	// Button Press  	labelEndSeconds.Visible = false;  	numericUpDownEndSeconds.Visible = false;  	comboBoxEndButton.Visible = true;  	break;  case 1:  	// Time Limit  	labelEndSeconds.Visible = true;  	numericUpDownEndSeconds.Visible = true;  	comboBoxEndButton.Visible = false;  	break;  }  
Missing Default,TheraWii,Form2DTask,C:\repos\naegelyd_therawii\Form2DTask.cs,buttonOK_Click,The following switch statement is missing a default case: switch (comboBoxEndCondition.SelectedIndex) {  case 0:  	// Button Press  	task.endCondition = buttonEnd;  	break;  case 1:  	// Time Limit  	timeEnd.Type = TimeLimitType.TotalTime;  	task.endCondition = timeEnd;  	break;  case 2:  	// Time In Region  	timeEnd.Type = TimeLimitType.TimeInRegion;  	task.endCondition = timeEnd;  	break;  case 3:  	// Time Out of Region  	timeEnd.Type = TimeLimitType.TimeOutRegion;  	task.endCondition = timeEnd;  	break;  }  
Missing Default,TheraWii,Form2DTask,C:\repos\naegelyd_therawii\Form2DTask.cs,comboBoxPosX_SelectedIndexChanged,The following switch statement is missing a default case: switch (comboBoxPosX.SelectedIndex) {  case 0:  	labelPosX1.Text = "Value";  	labelPosX2.Visible = false;  	numericUpDownPosX1.Visible = false;  	break;  case 1:  	labelPosX1.Text = "Start";  	labelPosX2.Visible = true;  	labelPosX2.Text = "End";  	numericUpDownPosX1.Visible = true;  	break;  case 2:  	labelPosX1.Text = "Min";  	labelPosX2.Visible = true;  	labelPosX2.Text = "Max";  	numericUpDownPosX1.Visible = true;  	break;  }  
Missing Default,TheraWii,Form2DTask,C:\repos\naegelyd_therawii\Form2DTask.cs,comboBoxPosY_SelectedIndexChanged,The following switch statement is missing a default case: switch (comboBoxPosY.SelectedIndex) {  case 0:  	labelPosY1.Text = "Value";  	labelPosY2.Visible = false;  	numericUpDownPosY1.Visible = false;  	break;  case 1:  	labelPosY1.Text = "Start";  	labelPosY2.Visible = true;  	labelPosY2.Text = "End";  	numericUpDownPosY1.Visible = true;  	break;  case 2:  	labelPosY1.Text = "Min";  	labelPosY2.Visible = true;  	labelPosY2.Text = "Max";  	numericUpDownPosY1.Visible = true;  	break;  }  
Missing Default,TheraWii,Form2DTask,C:\repos\naegelyd_therawii\Form2DTask.cs,comboBoxSizeX_SelectedIndexChanged,The following switch statement is missing a default case: switch (comboBoxSizeX.SelectedIndex) {  case 0:  	labelSizeX1.Text = "Value";  	labelSizeX2.Visible = false;  	numericUpDownSizeX1.Visible = false;  	break;  case 1:  	labelSizeX1.Text = "Start";  	labelSizeX2.Visible = true;  	labelSizeX2.Text = "End";  	numericUpDownSizeX1.Visible = true;  	break;  case 2:  	labelSizeX1.Text = "Min";  	labelSizeX2.Visible = true;  	labelSizeX2.Text = "Max";  	numericUpDownSizeX1.Visible = true;  	break;  }  
Missing Default,TheraWii,Form2DTask,C:\repos\naegelyd_therawii\Form2DTask.cs,comboBoxSizeY_SelectedIndexChanged,The following switch statement is missing a default case: switch (comboBoxSizeY.SelectedIndex) {  case 0:  	labelSizeY1.Text = "Value";  	labelSizeY2.Visible = false;  	numericUpDownSizeY1.Visible = false;  	break;  case 1:  	labelSizeY1.Text = "Start";  	labelSizeY2.Visible = true;  	labelSizeY2.Text = "End";  	numericUpDownSizeY1.Visible = true;  	break;  case 2:  	labelSizeY1.Text = "Min";  	labelSizeY2.Visible = true;  	labelSizeY2.Text = "Max";  	numericUpDownSizeY1.Visible = true;  	break;  }  
Missing Default,TheraWii,Form2DTask,C:\repos\naegelyd_therawii\Form2DTask.cs,comboBoxEndCondition_SelectedIndexChanged,The following switch statement is missing a default case: switch (comboBoxEndCondition.SelectedIndex) {  case 0:  	// Button Press  	labelEndSeconds.Visible = false;  	numericUpDownEndSeconds.Visible = false;  	comboBoxEndButton.Visible = true;  	break;  case 1:  	// Time Limit  	labelEndSeconds.Visible = true;  	numericUpDownEndSeconds.Visible = true;  	comboBoxEndButton.Visible = false;  	break;  case 2:  	// Time in Region  	labelEndSeconds.Visible = true;  	numericUpDownEndSeconds.Visible = true;  	comboBoxEndButton.Visible = false;  	break;  case 3:  	// Time out of Region  	labelEndSeconds.Visible = true;  	numericUpDownEndSeconds.Visible = true;  	comboBoxEndButton.Visible = false;  	break;  }  
Missing Default,TheraWii,FormMain,C:\repos\naegelyd_therawii\FormMain.cs,pasteMenuItem_Click,The following switch statement is missing a default case: switch (editAction) {  case CopyCut.copyTherapy:  	dm.Therapies.Add (new Therapy (tempCopyTherapy));  	listTherapiesRefresh ();  	ds.SerializeDataModel ();  	break;  case CopyCut.copyTask:  	if (tempCopyTask.GetType () == typeof(DialogTask))  		((Therapy)listTherapies.SelectedItem).addTask (new DialogTask ((DialogTask)tempCopyTask));  	else if (tempCopyTask.GetType () == typeof(Task2D))  		((Therapy)listTherapies.SelectedItem).addTask (new Task2D ((Task2D)tempCopyTask));  	else if (tempCopyTask.GetType () == typeof(RepeatTask))  		((Therapy)listTherapies.SelectedItem).addTask (new RepeatTask ((RepeatTask)tempCopyTask));  	treeViewTasksRefresh ();  	ds.SerializeDataModel ();  	break;  }  
Missing Default,TheraWii,FormDialogTask,C:\repos\naegelyd_therawii\FormDialogTask.cs,buttonOk_Click,The following switch statement is missing a default case: switch (comboBoxEndCondition.SelectedIndex) {  case 0:  	// Button Press  	task.endCondition = buttonEnd;  	break;  case 1:  	// Time Limit  	task.endCondition = timeEnd;  	break;  }  
Missing Default,TheraWii,FormDialogTask,C:\repos\naegelyd_therawii\FormDialogTask.cs,comboBoxEndCondition_SelectedIndexChanged,The following switch statement is missing a default case: switch (comboBoxEndCondition.SelectedIndex) {  case 0:  	// Button Press  	labelEndSeconds.Visible = false;  	numericUpDownEndSeconds.Visible = false;  	comboBoxEndButton.Visible = true;  	break;  case 1:  	// Time Limit  	labelEndSeconds.Visible = true;  	numericUpDownEndSeconds.Visible = true;  	comboBoxEndButton.Visible = false;  	break;  }  
