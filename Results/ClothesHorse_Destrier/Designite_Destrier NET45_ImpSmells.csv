Implementation smell,Namespace,Class,File,Method,Description
Long Method,Destrier,CommandBuilder<T>,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\CommandBuilder.cs,GenerateSelect,The method has 110 lines of code.
Long Method,Destrier,Model,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\Model.cs,GenerateSetInstanceValuesDelegate,The method has 198 lines of code.
Complex Method,Destrier,CommandBuilder<T>,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\CommandBuilder.cs,GenerateSelect,Cyclomatic complexity of the method is 19
Complex Method,Destrier,Database,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\Database.cs,Create,Cyclomatic complexity of the method is 11
Complex Method,Destrier,Database,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\Database.cs,Update,Cyclomatic complexity of the method is 9
Complex Method,Destrier,IndexedSqlDataReader,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\IndexedSqlDataReader.cs,DeepPopulate,Cyclomatic complexity of the method is 14
Complex Method,Destrier,Model,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\Model.cs,GenerateSetInstanceValuesDelegate,Cyclomatic complexity of the method is 16
Complex Method,Destrier,Model,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\Model.cs,_generateMembersImpl,Cyclomatic complexity of the method is 10
Complex Method,Destrier,Model,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\Model.cs,_emitInt32,Cyclomatic complexity of the method is 12
Complex Method,Destrier,ModelValidation,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\Model.cs,CheckColumns,Cyclomatic complexity of the method is 9
Complex Method,Destrier,SqlExpressionVisitor<T>,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\SqlExpressionVisitor.cs,Visit,Cyclomatic complexity of the method is 9
Complex Method,Destrier,SqlExpressionVisitor<T>,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\SqlExpressionVisitor.cs,Reduce,Cyclomatic complexity of the method is 11
Complex Method,Destrier,SqlExpressionVisitor<T>,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\SqlExpressionVisitor.cs,VisitCallExpression,Cyclomatic complexity of the method is 14
Complex Method,Destrier,SqlExpressionVisitor<T>,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\SqlExpressionVisitor.cs,ListToSet,Cyclomatic complexity of the method is 9
Complex Method,Destrier,SqlExpressionVisitor<T>,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\SqlExpressionVisitor.cs,Evaluate,Cyclomatic complexity of the method is 9
Complex Method,Destrier,SqlExpressionVisitor<T>,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\SqlExpressionVisitor.cs,GetOperator,Cyclomatic complexity of the method is 11
Long Parameter List,Destrier,Utility,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\Execute.cs,AddParameterToCommand,The method has 5 parameters. Parameters: name' value' cmd' connectionName' dbType
Long Parameter List,Destrier,Utility,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\Execute.cs,AddParameterToCommand,The method has 5 parameters. Parameters: name' value' cmd' provider' dbType
Long Parameter List,Destrier,IndexedSqlDataReader,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\IndexedSqlDataReader.cs,GetBytes,The method has 5 parameters. Parameters: i' fieldOffset' buffer' bufferoffset' length
Long Parameter List,Destrier,IndexedSqlDataReader,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\IndexedSqlDataReader.cs,GetChars,The method has 5 parameters. Parameters: i' fieldoffset' buffer' bufferoffset' length
Long Parameter List,Destrier,IndexedSqlDataReader,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\IndexedSqlDataReader.cs,ReadIntoParentCollection,The method has 5 parameters. Parameters: type' doStuffToAddToParent' advanceToNextResultAfter' populateFullResults' objectLookups
Long Parameter List,Destrier,IndexedSqlDataReader,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\IndexedSqlDataReader.cs,DeepPopulate,The method has 5 parameters. Parameters: instance' thisType' rootMember' parentMember' objectLookups
Long Parameter List,Destrier,SqlExpressionVisitor<T>,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\SqlExpressionVisitor.cs,UpdateBinary,The method has 6 parameters. Parameters: b' left' right' conversion' isLiftedToNull' method
Long Identifier,Destrier,ModelCache,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\ModelCache.cs,,The length of the parameter _columnMemberLookupStandardizedCache is 36.
Long Identifier,Destrier,ModelCache,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\ModelCache.cs,,The length of the parameter _hasChildCollectionPropertiesCache is 34.
Long Identifier,Destrier,ModelCache,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\ModelCache.cs,,The length of the parameter _hasReferencedObjectPropertiesCache is 35.
Long Identifier,Destrier,ModelCache,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\ModelCache.cs,,The length of the parameter _referencedObjectMemberPropertyCache is 36.
Long Identifier,Destrier,ModelCache,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\ModelCache.cs,,The length of the parameter _childCollectionMemberPropertyCache is 35.
Long Identifier,Destrier,ModelCache,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\ModelCache.cs,,The length of the parameter _setInstanceValuesDelegateCache is 31.
Long Statement,Destrier,CommandBuilder<T>,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\CommandBuilder.cs,AddOrderBy,The length of the statement  "            _orderByClause.Add(new OrderByElement() { Member = columnMember' Ascending = true });//String.Format("[{0}].[{1}] ASC"' columnMember.TableAlias' columnMember.Name); " is 164.
Long Statement,Destrier,CommandBuilder<T>,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\CommandBuilder.cs,_getOutputPrimaryKeyMembers,The length of the statement  "            foreach (var m in members.Select(m => m as ColumnMember).Where(cm => cm != null && cm.IsPrimaryKey && cm.Parent == null)) " is 121.
Long Statement,Destrier,CommandBuilder<T>,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\CommandBuilder.cs,GenerateSelect,The length of the statement  "            Command.AppendFormat("\n\t{0} [{1}] {2}"' this.FullyQualifiedTableName' this.TableAlias' this.UseNoLock ? "(NOLOCK)" : String.Empty); " is 133.
Long Statement,Destrier,CommandBuilder<T>,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\CommandBuilder.cs,GenerateSelect,The length of the statement  "                    var primaryKey = Members.Values.FirstOrDefault(m => m is ColumnMember && ((ColumnMember)m).IsPrimaryKey) as ColumnMember; " is 121.
Long Statement,Destrier,CommandBuilder<T>,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\CommandBuilder.cs,GenerateSelect,The length of the statement  "                        Command.AppendLine(String.Format("\n\tAND [{0}].[{1}] = @{2}"' primaryKey.TableAlias' primaryKey.FullyQualifiedName' parameterName)); " is 133.
Long Statement,Destrier,CommandBuilder<T>,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\CommandBuilder.cs,_addJoins,The length of the statement  "                foreach (var rom in members.Where(m => m is ReferencedObjectMember && !m.IsLazy && !m.AnyParent(rm => rm is ChildCollectionMember)).Select(m => m as ReferencedObjectMember)) " is 173.
Long Statement,Destrier,Execute,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\Execute.cs,Command,The length of the statement  "                connectionString = DatabaseConfigurationContext.ConnectionStrings.ContainsKey(connectionName) ? DatabaseConfigurationContext.ConnectionStrings[connectionName] : DatabaseConfigurationContext.DefaultConnectionString; " is 214.
Long Statement,Destrier,IndexedSqlDataReader,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\IndexedSqlDataReader.cs,Get,The length of the statement  "            if (columnIndex != null) { return Get(member.Type' columnIndex.Value' member.IsNullableType' member.UnderlyingGenericType); } " is 125.
Long Statement,Destrier,IndexedSqlDataReader,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\IndexedSqlDataReader.cs,DeepPopulate,The length of the statement  "                foreach (ReferencedObjectMember rom in Model.GenerateMembers(thisType' rootMember' parentMember).Where(m => m is ReferencedObjectMember && !m.AnyParent(p => p is ChildCollectionMember))) " is 186.
Long Statement,Destrier,IndexedSqlDataReader,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\IndexedSqlDataReader.cs,DeepPopulate,The length of the statement  "                    foreach (ChildCollectionMember cm in Model.GenerateMembers(thisType' rootMember' parentMember).Where(m => m is ChildCollectionMember && m.IsLazy)) " is 146.
Long Statement,Destrier,IndexedSqlDataReader,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\IndexedSqlDataReader.cs,ThrowDataException,The length of the statement  "                toThrow = new DataException(String.Format("Exception reading column {0}: ({1} = {2}) for {3} as {4})"' columnIndex' name' value' memberName' memberType)' ex); " is 158.
Long Statement,Destrier,ModelReflection,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\Model.cs,ReferencedObjectAttribute,The length of the statement  "            return property.GetCustomAttributes(typeof(ReferencedObjectAttribute)' false).FirstOrDefault() as ReferencedObjectAttribute; " is 124.
Long Statement,Destrier,ModelReflection,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\Model.cs,ChildCollectionAttribute,The length of the statement  "            return property.GetCustomAttributes(typeof(ChildCollectionAttribute)' false).FirstOrDefault() as ChildCollectionAttribute; " is 122.
Long Statement,Destrier,Model,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\Model.cs,ConnectionString,The length of the statement  "                throw new SchemaMetadataException("Base Model classes must have a 'Table' attribute specifying the relation in the database to interact with!"); " is 144.
Long Statement,Destrier,Model,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\Model.cs,MemberForPropertyName,The length of the statement  "                member = members.Values.FirstOrDefault(m => m.FullyQualifiedName.Equals(propertyName' StringComparison.InvariantCultureIgnoreCase)); " is 132.
Long Statement,Destrier,Model,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\Model.cs,GenerateRootMemberForType,The length of the statement  "            return new RootMember(type) { TableAlias = Model.GenerateAlias()' OutputTableName = Model.GenerateAlias()' UseNoLock = Model.UseNoLock(type) }; " is 143.
Long Statement,Destrier,Model,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\Model.cs,GenerateSetInstanceValuesDelegate,The length of the statement  "            DynamicMethod dyn = new DynamicMethod("SetInstanceValues"' typeof(void)' new Type[] { typeof(IndexedSqlDataReader)' typeof(object) }); " is 134.
Long Statement,Destrier,ModelValidation,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\Model.cs,CheckColumns,The length of the statement  "                        var databaseColumn = databaseColumns.FirstOrDefault(c => c.Name.Equals(cm.Name' StringComparison.InvariantCultureIgnoreCase)); " is 126.
Long Statement,Destrier,ModelValidation,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\Model.cs,CheckColumns,The length of the statement  "                            throw new ColumnNullabilityException(String.Format("Column Nullability Mismatch : {4} DBColumn: {0} {2} ModelColumn: {1} {3}" " is 125.
Long Statement,Destrier,ModelValidation,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\Model.cs,CheckColumns,The length of the statement  "                            throw new ColumnMissingException(String.Format("\'{0}\' : Column in the schema ({1}) doesn't map to the model."' column.Name' Model.TableName(t))); " is 147.
Long Statement,Destrier,ReflectionHelper,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\ReflectionHelper.cs,GetValueOfPropertyForObject,The length of the statement  "            return propList.FirstOrDefault(p => p.Name.Equals(propertyName' ignoreCasing ? StringComparison.InvariantCultureIgnoreCase : StringComparison.InvariantCulture)).GetValue(target' null); " is 184.
Long Statement,Destrier,SqlExpressionVisitor<T>,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\SqlExpressionVisitor.cs,VisitMemberAccess,The length of the statement  "                    && (parentNodeType == null || (parentNodeType != null && parentNodeType.Value != ExpressionType.Equal && parentNodeType.Value != ExpressionType.NotEqual)); " is 155.
Long Statement,Destrier,SqlExpressionVisitor<T>,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\SqlExpressionVisitor.cs,VisitCallExpression,The length of the statement  "                        if (ReflectionHelper.HasInterface(m.Method.DeclaringType' typeof(System.Collections.IList)) && argumentType.Equals(this.Type)) " is 126.
Long Statement,Destrier,SqlExpressionVisitor<T>,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\SqlExpressionVisitor.cs,VisitCallExpression,The length of the statement  "                        && (parentNodeType == null || (parentNodeType != null && parentNodeType.Value != ExpressionType.Equal && parentNodeType.Value != ExpressionType.NotEqual)); " is 155.
Long Statement,Destrier,SqlExpressionVisitor<T>,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\SqlExpressionVisitor.cs,UpdateBinary,The length of the statement  "            if (left != b.Left || right != b.Right || conversion != b.Conversion || method != b.Method || isLiftedToNull != b.IsLiftedToNull) " is 129.
Long Statement,Destrier,SqlExpressionVisitor<T>,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\SqlExpressionVisitor.cs,Evaluate,The length of the statement  "                if (ReflectionHelper.IsNullableType(u.Operand.Type) && ReflectionHelper.GetUnderlyingTypeForNullable(u.Operand.Type) == ReflectionHelper.GetUnderlyingTypeForNullable(type)) " is 172.
Long Statement,Destrier,SqlExpressionVisitor<T>,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\SqlExpressionVisitor.cs,Evaluate,The length of the statement  "                if (e.Type != type && ReflectionHelper.GetUnderlyingTypeForNullable(e.Type) == ReflectionHelper.GetUnderlyingTypeForNullable(type)) " is 131.
Complex Conditional,Destrier,CommandBuilder<T>,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\CommandBuilder.cs,_generateMemberMap,The conditional expression  "col_m != null                      && col_m.AlwaysInclude                      && !col_m.AnyParent(p => p is ChildCollectionMember && !((ChildCollectionMember)p).AlwaysInclude)                      && !col_m.IsLazy"  is complex.
Complex Conditional,Destrier,SqlExpressionVisitor<T>,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\SqlExpressionVisitor.cs,UpdateBinary,The conditional expression  "left != b.Left || right != b.Right || conversion != b.Conversion || method != b.Method || isLiftedToNull != b.IsLiftedToNull"  is complex.
Empty Catch Block,Destrier,Execute,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\Execute.cs,cmd_Disposed,The method has an empty catch block.
Magic Number,Destrier,Model,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\Model.cs,_emitInt32,The following statement contains a magic number: switch (value)              {                  case -1:                      il.Emit(OpCodes.Ldc_I4_M1);                      break;                  case 0:                      il.Emit(OpCodes.Ldc_I4_0);                      break;                  case 1:                      il.Emit(OpCodes.Ldc_I4_1);                      break;                  case 2:                      il.Emit(OpCodes.Ldc_I4_2);                      break;                  case 3:                      il.Emit(OpCodes.Ldc_I4_3);                      break;                  case 4:                      il.Emit(OpCodes.Ldc_I4_4);                      break;                  case 5:                      il.Emit(OpCodes.Ldc_I4_5);                      break;                  case 6:                      il.Emit(OpCodes.Ldc_I4_6);                      break;                  case 7:                      il.Emit(OpCodes.Ldc_I4_7);                      break;                  case 8:                      il.Emit(OpCodes.Ldc_I4_8);                      break;                  default:                      if (value >= -128 && value <= 127)                      {                          il.Emit(OpCodes.Ldc_I4_S' (sbyte)value);                      }                      else                      {                          il.Emit(OpCodes.Ldc_I4' value);                      }                      break;              }
Magic Number,Destrier,Model,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\Model.cs,_emitInt32,The following statement contains a magic number: switch (value)              {                  case -1:                      il.Emit(OpCodes.Ldc_I4_M1);                      break;                  case 0:                      il.Emit(OpCodes.Ldc_I4_0);                      break;                  case 1:                      il.Emit(OpCodes.Ldc_I4_1);                      break;                  case 2:                      il.Emit(OpCodes.Ldc_I4_2);                      break;                  case 3:                      il.Emit(OpCodes.Ldc_I4_3);                      break;                  case 4:                      il.Emit(OpCodes.Ldc_I4_4);                      break;                  case 5:                      il.Emit(OpCodes.Ldc_I4_5);                      break;                  case 6:                      il.Emit(OpCodes.Ldc_I4_6);                      break;                  case 7:                      il.Emit(OpCodes.Ldc_I4_7);                      break;                  case 8:                      il.Emit(OpCodes.Ldc_I4_8);                      break;                  default:                      if (value >= -128 && value <= 127)                      {                          il.Emit(OpCodes.Ldc_I4_S' (sbyte)value);                      }                      else                      {                          il.Emit(OpCodes.Ldc_I4' value);                      }                      break;              }
Magic Number,Destrier,Model,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\Model.cs,_emitInt32,The following statement contains a magic number: switch (value)              {                  case -1:                      il.Emit(OpCodes.Ldc_I4_M1);                      break;                  case 0:                      il.Emit(OpCodes.Ldc_I4_0);                      break;                  case 1:                      il.Emit(OpCodes.Ldc_I4_1);                      break;                  case 2:                      il.Emit(OpCodes.Ldc_I4_2);                      break;                  case 3:                      il.Emit(OpCodes.Ldc_I4_3);                      break;                  case 4:                      il.Emit(OpCodes.Ldc_I4_4);                      break;                  case 5:                      il.Emit(OpCodes.Ldc_I4_5);                      break;                  case 6:                      il.Emit(OpCodes.Ldc_I4_6);                      break;                  case 7:                      il.Emit(OpCodes.Ldc_I4_7);                      break;                  case 8:                      il.Emit(OpCodes.Ldc_I4_8);                      break;                  default:                      if (value >= -128 && value <= 127)                      {                          il.Emit(OpCodes.Ldc_I4_S' (sbyte)value);                      }                      else                      {                          il.Emit(OpCodes.Ldc_I4' value);                      }                      break;              }
Magic Number,Destrier,Model,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\Model.cs,_emitInt32,The following statement contains a magic number: switch (value)              {                  case -1:                      il.Emit(OpCodes.Ldc_I4_M1);                      break;                  case 0:                      il.Emit(OpCodes.Ldc_I4_0);                      break;                  case 1:                      il.Emit(OpCodes.Ldc_I4_1);                      break;                  case 2:                      il.Emit(OpCodes.Ldc_I4_2);                      break;                  case 3:                      il.Emit(OpCodes.Ldc_I4_3);                      break;                  case 4:                      il.Emit(OpCodes.Ldc_I4_4);                      break;                  case 5:                      il.Emit(OpCodes.Ldc_I4_5);                      break;                  case 6:                      il.Emit(OpCodes.Ldc_I4_6);                      break;                  case 7:                      il.Emit(OpCodes.Ldc_I4_7);                      break;                  case 8:                      il.Emit(OpCodes.Ldc_I4_8);                      break;                  default:                      if (value >= -128 && value <= 127)                      {                          il.Emit(OpCodes.Ldc_I4_S' (sbyte)value);                      }                      else                      {                          il.Emit(OpCodes.Ldc_I4' value);                      }                      break;              }
Magic Number,Destrier,Model,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\Model.cs,_emitInt32,The following statement contains a magic number: switch (value)              {                  case -1:                      il.Emit(OpCodes.Ldc_I4_M1);                      break;                  case 0:                      il.Emit(OpCodes.Ldc_I4_0);                      break;                  case 1:                      il.Emit(OpCodes.Ldc_I4_1);                      break;                  case 2:                      il.Emit(OpCodes.Ldc_I4_2);                      break;                  case 3:                      il.Emit(OpCodes.Ldc_I4_3);                      break;                  case 4:                      il.Emit(OpCodes.Ldc_I4_4);                      break;                  case 5:                      il.Emit(OpCodes.Ldc_I4_5);                      break;                  case 6:                      il.Emit(OpCodes.Ldc_I4_6);                      break;                  case 7:                      il.Emit(OpCodes.Ldc_I4_7);                      break;                  case 8:                      il.Emit(OpCodes.Ldc_I4_8);                      break;                  default:                      if (value >= -128 && value <= 127)                      {                          il.Emit(OpCodes.Ldc_I4_S' (sbyte)value);                      }                      else                      {                          il.Emit(OpCodes.Ldc_I4' value);                      }                      break;              }
Magic Number,Destrier,Model,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\Model.cs,_emitInt32,The following statement contains a magic number: switch (value)              {                  case -1:                      il.Emit(OpCodes.Ldc_I4_M1);                      break;                  case 0:                      il.Emit(OpCodes.Ldc_I4_0);                      break;                  case 1:                      il.Emit(OpCodes.Ldc_I4_1);                      break;                  case 2:                      il.Emit(OpCodes.Ldc_I4_2);                      break;                  case 3:                      il.Emit(OpCodes.Ldc_I4_3);                      break;                  case 4:                      il.Emit(OpCodes.Ldc_I4_4);                      break;                  case 5:                      il.Emit(OpCodes.Ldc_I4_5);                      break;                  case 6:                      il.Emit(OpCodes.Ldc_I4_6);                      break;                  case 7:                      il.Emit(OpCodes.Ldc_I4_7);                      break;                  case 8:                      il.Emit(OpCodes.Ldc_I4_8);                      break;                  default:                      if (value >= -128 && value <= 127)                      {                          il.Emit(OpCodes.Ldc_I4_S' (sbyte)value);                      }                      else                      {                          il.Emit(OpCodes.Ldc_I4' value);                      }                      break;              }
Magic Number,Destrier,Model,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\Model.cs,_emitInt32,The following statement contains a magic number: switch (value)              {                  case -1:                      il.Emit(OpCodes.Ldc_I4_M1);                      break;                  case 0:                      il.Emit(OpCodes.Ldc_I4_0);                      break;                  case 1:                      il.Emit(OpCodes.Ldc_I4_1);                      break;                  case 2:                      il.Emit(OpCodes.Ldc_I4_2);                      break;                  case 3:                      il.Emit(OpCodes.Ldc_I4_3);                      break;                  case 4:                      il.Emit(OpCodes.Ldc_I4_4);                      break;                  case 5:                      il.Emit(OpCodes.Ldc_I4_5);                      break;                  case 6:                      il.Emit(OpCodes.Ldc_I4_6);                      break;                  case 7:                      il.Emit(OpCodes.Ldc_I4_7);                      break;                  case 8:                      il.Emit(OpCodes.Ldc_I4_8);                      break;                  default:                      if (value >= -128 && value <= 127)                      {                          il.Emit(OpCodes.Ldc_I4_S' (sbyte)value);                      }                      else                      {                          il.Emit(OpCodes.Ldc_I4' value);                      }                      break;              }
Magic Number,Destrier,Model,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\Model.cs,_emitInt32,The following statement contains a magic number: switch (value)              {                  case -1:                      il.Emit(OpCodes.Ldc_I4_M1);                      break;                  case 0:                      il.Emit(OpCodes.Ldc_I4_0);                      break;                  case 1:                      il.Emit(OpCodes.Ldc_I4_1);                      break;                  case 2:                      il.Emit(OpCodes.Ldc_I4_2);                      break;                  case 3:                      il.Emit(OpCodes.Ldc_I4_3);                      break;                  case 4:                      il.Emit(OpCodes.Ldc_I4_4);                      break;                  case 5:                      il.Emit(OpCodes.Ldc_I4_5);                      break;                  case 6:                      il.Emit(OpCodes.Ldc_I4_6);                      break;                  case 7:                      il.Emit(OpCodes.Ldc_I4_7);                      break;                  case 8:                      il.Emit(OpCodes.Ldc_I4_8);                      break;                  default:                      if (value >= -128 && value <= 127)                      {                          il.Emit(OpCodes.Ldc_I4_S' (sbyte)value);                      }                      else                      {                          il.Emit(OpCodes.Ldc_I4' value);                      }                      break;              }
Magic Number,Destrier,Model,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\Model.cs,_emitInt32,The following statement contains a magic number: switch (value)              {                  case -1:                      il.Emit(OpCodes.Ldc_I4_M1);                      break;                  case 0:                      il.Emit(OpCodes.Ldc_I4_0);                      break;                  case 1:                      il.Emit(OpCodes.Ldc_I4_1);                      break;                  case 2:                      il.Emit(OpCodes.Ldc_I4_2);                      break;                  case 3:                      il.Emit(OpCodes.Ldc_I4_3);                      break;                  case 4:                      il.Emit(OpCodes.Ldc_I4_4);                      break;                  case 5:                      il.Emit(OpCodes.Ldc_I4_5);                      break;                  case 6:                      il.Emit(OpCodes.Ldc_I4_6);                      break;                  case 7:                      il.Emit(OpCodes.Ldc_I4_7);                      break;                  case 8:                      il.Emit(OpCodes.Ldc_I4_8);                      break;                  default:                      if (value >= -128 && value <= 127)                      {                          il.Emit(OpCodes.Ldc_I4_S' (sbyte)value);                      }                      else                      {                          il.Emit(OpCodes.Ldc_I4' value);                      }                      break;              }
Magic Number,Destrier.Extensions,StringExtensions,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\StringExtensions.cs,ToNumericsOnly,The following statement contains a magic number: text.Length < 100
Magic Number,Destrier.Extensions,StringExtensions,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\StringExtensions.cs,ToNonNumericsOnly,The following statement contains a magic number: text.Length < 100
Missing Default,Destrier,SqlExpressionVisitor<T>,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\SqlExpressionVisitor.cs,VisitCallExpression,The following switch statement is missing a default case: switch (m.Method.Name)                          {                              case "StartsWith":                                  Buffer.Append("(");                                  this.Visit(m.Object);                                  Buffer.Append(String.Format(" {0} "' like));                                  this.Visit(m.Arguments[0]);                                  Buffer.Append(String.Format(" {0} '%')"' concat));                                  return;                              case "EndsWith":                                  Buffer.Append("(");                                  this.Visit(m.Object);                                  Buffer.Append(String.Format(" {0} '%' {1} "' like' concat));                                  this.Visit(m.Arguments[0]);                                  Buffer.Append(")");                                  return;                              case "Contains":                                  Buffer.Append("(");                                  this.Visit(m.Object);                                  Buffer.Append(String.Format(" {0} '%' {1} "' like' concat));                                  this.Visit(m.Arguments[0]);                                  Buffer.Append(String.Format(" {0} '%')"' concat));                                  return;                              case "ToUpper":                                  Buffer.Append("UPPER(");                                  this.Visit(m.Object);                                  Buffer.Append(")");                                  return;                              case "ToLower":                                  Buffer.Append("LOWER(");                                  this.Visit(m.Object);                                  Buffer.Append(")");                                  return;                              case "Replace":                                  Buffer.Append("REPLACE(");                                  this.Visit(m.Object);                                  Buffer.Append("' ");                                  this.Visit(m.Arguments[0]);                                  Buffer.Append("' ");                                  this.Visit(m.Arguments[1]);                                  Buffer.Append(")");                                  return;                              case "Trim":                                  Buffer.Append("RTRIM(LTRIM(");                                  this.Visit(m.Object);                                  Buffer.Append("))");                                  return;                          }
Missing Default,Destrier,SqlExpressionVisitor<T>,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\SqlExpressionVisitor.cs,VisitCallExpression,The following switch statement is missing a default case: switch (m.Method.Name)                              {                                  case "Contains":                                      Visit(m.Arguments[0]);                                      Buffer.Append(" IN ");                                      ListToSet(Evaluate(Reduce(m.Object)) as System.Collections.IList);                                      break;                              }
Missing Default,Destrier,SqlExpressionVisitor<T>,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\SqlExpressionVisitor.cs,ReduceArgumentList,The following switch statement is missing a default case: switch (exp.NodeType)                  {                      case ExpressionType.MemberAccess:                      case ExpressionType.Constant:                          resolvedExpressions.Add(exp);                          break;                  }
Missing Default,Destrier,SqlExpressionVisitor<T>,D:\research\architectureSmells\repos\ClothesHorse_Destrier\Destrier NET40\SqlExpressionVisitor.cs,GetUnaryOperator,The following switch statement is missing a default case: switch (nodeType)              {                  case ExpressionType.Not:                      op = "NOT";                      break;              }
