Implementation smell,Namespace,Class,File,Method,Description
Long Method,Internal,PocoData,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\PetaPoco.cs,GetFactory,The method has 160 lines of code.
Long Method,ORMComparison,Program,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\Program.cs,Main,The method has 139 lines of code.
Complex Method,PetaPoco,Database,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\PetaPoco.cs,AddParam,Cyclomatic complexity of the method is 12
Complex Method,PetaPoco,Database,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\PetaPoco.cs,Insert,Cyclomatic complexity of the method is 10
Complex Method,PetaPoco,Database,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\PetaPoco.cs,Update,Cyclomatic complexity of the method is 11
Complex Method,PetaPoco,Database,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\PetaPoco.cs,IsNew,Cyclomatic complexity of the method is 11
Complex Method,Internal,DatabaseType,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\PetaPoco.cs,Resolve,Cyclomatic complexity of the method is 14
Complex Method,Internal,PocoData,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\PetaPoco.cs,GetConverter,Cyclomatic complexity of the method is 8
Complex Method,ORMComparison,Program,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\Program.cs,Main,Cyclomatic complexity of the method is 8
Long Parameter List,PetaPoco,Database,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\PetaPoco.cs,BuildPageQueries,The method has 6 parameters. Parameters: skip' take' sql' args' sqlCount' sqlPage
Long Parameter List,PetaPoco,Database,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\PetaPoco.cs,Page,The method has 6 parameters. Parameters: page' itemsPerPage' sqlCount' countArgs' sqlPage' pageArgs
Long Parameter List,PetaPoco,Database,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\PetaPoco.cs,Update,The method has 5 parameters. Parameters: tableName' primaryKeyName' poco' primaryKeyValue' columns
Long Parameter List,Internal,MultiPocoFactory,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\PetaPoco.cs,FindSplitPoint,The method has 6 parameters. Parameters: typeThis' typeNext' ConnectionString' sql' r' pos
Long Parameter List,Internal,PocoData,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\PetaPoco.cs,GetFactory,The method has 5 parameters. Parameters: sql' connString' firstColumn' countColumns' r
Long Statement,PetaPoco,Database,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\PetaPoco.cs,AddParam,The length of the statement  "					// out of memory exception occurs if trying to save more than 4000 characters to SQL Server CE NText column. Set before attempting to set Size' or Size will always max out at 4000 " is 179.
Long Statement,PetaPoco,Database,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\PetaPoco.cs,Query,The length of the statement  "					var factory = pd.GetFactory(cmd.CommandText' _sharedConnection.ConnectionString' 0' r.FieldCount' r) as Func<IDataReader' T>; " is 125.
Long Statement,PetaPoco,Database,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\PetaPoco.cs,Exists,The length of the statement  "			return Exists<T>(string.Format("{0}=@0"' _dbType.EscapeSqlIdentifier(PocoData.ForType(typeof(T)).TableInfo.PrimaryKey))' primaryKey); " is 133.
Long Statement,PetaPoco,Database,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\PetaPoco.cs,Single,The length of the statement  "			return Single<T>(string.Format("WHERE {0}=@0"' _dbType.EscapeSqlIdentifier(PocoData.ForType(typeof(T)).TableInfo.PrimaryKey))' primaryKey); " is 139.
Long Statement,PetaPoco,Database,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\PetaPoco.cs,SingleOrDefault,The length of the statement  "			return SingleOrDefault<T>(string.Format("WHERE {0}=@0"' _dbType.EscapeSqlIdentifier(PocoData.ForType(typeof(T)).TableInfo.PrimaryKey))' primaryKey); " is 148.
Long Statement,PetaPoco,Database,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\PetaPoco.cs,Delete,The length of the statement  "			var sql = string.Format("DELETE FROM {0} WHERE {1}=@0"' _dbType.EscapeTableName(tableName)' _dbType.EscapeSqlIdentifier(primaryKeyName)); " is 137.
Long Statement,PetaPoco,Database,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\PetaPoco.cs,IsNew,The length of the statement  "					throw new ArgumentException(string.Format("The object doesn't have a property matching the primary key column name '{0}'"' primaryKeyName)); " is 140.
Long Statement,PetaPoco,Database,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\PetaPoco.cs,IsNew,The length of the statement  "				throw new InvalidOperationException("IsNew() and Save() are only supported on tables with auto-increment/identity primary key columns"); " is 136.
Long Statement,PetaPoco,Database,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\PetaPoco.cs,FormatCommand,The length of the statement  "			return FormatCommand(cmd.CommandText' (from IDataParameter parameter in cmd.Parameters select parameter.Value).ToArray()); " is 122.
Long Statement,Internal,MultiPocoFactory,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\PetaPoco.cs,GetAutoMapper,The length of the statement  "									throw new InvalidOperationException(string.Format("Can't auto join {0} as {1} has more than one property of type {0}"' types[i]' types[j])); " is 140.
Long Statement,Internal,MultiPocoFactory,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\PetaPoco.cs,FindSplitPoint,The length of the statement  "					if (usedColumns.ContainsKey(fieldName) || (!pdThis.Columns.ContainsKey(fieldName) && pdNext.Columns.ContainsKey(fieldName))) " is 124.
Long Statement,Internal,MultiPocoFactory,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\PetaPoco.cs,FindSplitPoint,The length of the statement  "				throw new InvalidOperationException(string.Format("Couldn't find split point between {0} and {1}"' typeThis' typeNext)); " is 120.
Long Statement,Internal,MultiPocoFactory,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\PetaPoco.cs,CreateMultiPocoFactory,The length of the statement  "				var m = new DynamicMethod("petapoco_multipoco_factory"' typeof(TRet)' new Type[] { typeof(MultiPocoFactory)' typeof(IDataReader)' typeof(object) }' typeof(MultiPocoFactory)); " is 174.
Long Statement,Internal,MultiPocoFactory,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\PetaPoco.cs,CreateMultiPocoFactory,The length of the statement  "				il.Emit(OpCodes.Callvirt' Expression.GetFuncType(types.Concat(new Type[] { typeof(TRet) }).ToArray()).GetMethod("Invoke")); " is 123.
Long Statement,Internal,MultiPocoFactory,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\PetaPoco.cs,CreateMultiPocoFactory,The length of the statement  "				return (Func<IDataReader' object' TRet>)m.CreateDelegate(typeof(Func<IDataReader' object' TRet>)' new MultiPocoFactory() { _delegates = dels }); " is 144.
Long Statement,Internal,MultiPocoFactory,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\PetaPoco.cs,GetFactory,The length of the statement  "				var key = Tuple.Create<Type' ArrayKey<Type>' string' string>(typeof(TRet)' new ArrayKey<Type>(types)' ConnectionString' sql); " is 125.
Long Statement,Internal,PocoData,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\PetaPoco.cs,GetFactory,The length of the statement  "					var m = new DynamicMethod("petapoco_factory_" + PocoFactories.Count.ToString()' type' new Type[] { typeof(IDataReader) }' true); " is 128.
Long Statement,Internal,PocoData,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\PetaPoco.cs,GetFactory,The length of the statement  "							il.Emit(OpCodes.Newobj' type.GetConstructor(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic' null' new Type[0]' null)); " is 140.
Long Statement,Internal,PocoData,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\PetaPoco.cs,GetFactory,The length of the statement  "							var fnOnLoaded = RecurseInheritedTypes<MethodInfo>(type' (x) => x.GetMethod("OnLoaded"' BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic' null' new Type[0]' null)); " is 184.
Long Statement,Internal,PocoData,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\PetaPoco.cs,GetConverter,The length of the statement  "				if (pc!=null && pc.ForceToUtc && srcType == typeof(DateTime) && (dstType == typeof(DateTime) || dstType == typeof(DateTime?))) " is 126.
Long Statement,Internal,AutoSelectHelper,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\PetaPoco.cs,AddSelectClause,The length of the statement  "					string cols = pd.Columns.Count != 0 ? string.Join("' "' (from c in pd.QueryColumns select tableName + "." + DatabaseType.EscapeSqlIdentifier(c)).ToArray()) : "NULL"; " is 165.
Long Statement,Internal,PagingHelper,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\PetaPoco.cs,SplitSQL,The length of the statement  "					parts.sqlCount = sql.Substring(0' g.Index) + "COUNT(" + m.Groups[1].ToString().Trim() + ") " + sql.Substring(g.Index + g.Length); " is 129.
Long Statement,Internal,ParametersHelper,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\PetaPoco.cs,ProcessParams,The length of the statement  "							throw new ArgumentOutOfRangeException(string.Format("Parameter '@{0}' specified but only {1} parameters supplied (in `{2}`)"' paramIndex' args_src.Length' sql)); " is 161.
Long Statement,Internal,ParametersHelper,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\PetaPoco.cs,ProcessParams,The length of the statement  "							throw new ArgumentException(string.Format("Parameter '@{0}' specified but none of the passed arguments have a property with this name (in '{1}')"' param' sql)); " is 160.
Long Statement,DatabaseTypes,SqlServerCEDatabaseType,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\PetaPoco.cs,BuildPageQuery,The length of the statement  "				var	sqlPage = string.Format("{0}\nOFFSET @{1} ROWS FETCH NEXT @{2} ROWS ONLY"' parts.sql' args.Length' args.Length + 1); " is 120.
Long Statement,DatabaseTypes,SqlServerDatabaseType,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\PetaPoco.cs,BuildPageQuery,The length of the statement  "				var sqlPage = string.Format("SELECT * FROM (SELECT ROW_NUMBER() OVER ({0}) peta_rn' {1}) peta_paged WHERE peta_rn>@{2} AND peta_rn<=@{3}"' " is 138.
Long Statement,DatabaseTypes,SqlServerDatabaseType,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\PetaPoco.cs,BuildPageQuery,The length of the statement  "										parts.sqlOrderBy == null ? "ORDER BY (SELECT NULL)" : parts.sqlOrderBy' parts.sqlSelectRemoved' args.Length' args.Length + 1); " is 126.
Long Statement,ORMComparison,Program,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\Program.cs,Main,The length of the statement  "                var dbFactory = new ServiceStack.OrmLite.OrmLiteConnectionFactory(CONNECTION_STRING' ServiceStack.OrmLite.SqlServerDialect.Provider); " is 133.
Complex Conditional,Internal,PocoData,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\PetaPoco.cs,GetFactory,The conditional expression  "valuegetter != null  											&& valuegetter.ReturnType == srcType  											&& (valuegetter.ReturnType == dstType || valuegetter.ReturnType == Nullable.GetUnderlyingType(dstType))"  is complex.
Complex Conditional,Internal,PocoData,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\PetaPoco.cs,GetConverter,The conditional expression  "pc!=null && pc.ForceToUtc && srcType == typeof(DateTime) && (dstType == typeof(DateTime) || dstType == typeof(DateTime?))"  is complex.
Magic Number,PetaPoco,Database,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\PetaPoco.cs,Database,The following statement contains a magic number: _sharedConnectionDepth = 2;
Magic Number,PetaPoco,Sql,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\PetaPoco.cs,Build,The following statement contains a magic number: sql = "AND " + sql.Substring(6);
Magic Number,PetaPoco,Sql,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\PetaPoco.cs,Build,The following statement contains a magic number: sql = "' " + sql.Substring(9);
Magic Number,Internal,ArrayKey<T>,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\PetaPoco.cs,ArrayKey,The following statement contains a magic number: _hashCode = 17;
Magic Number,Internal,ArrayKey<T>,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\PetaPoco.cs,ArrayKey,The following statement contains a magic number: _hashCode = _hashCode * 23 + (k==null ? 0 : k.GetHashCode());
Magic Number,ORMComparison,Program,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\Program.cs,Main,The following statement contains a magic number: Func<List<TestObject>> rawAction = () =>              {  				var provider = Destrier.DatabaseConfigurationContext.DefaultProviderFactory;                    var list = new List<TestObject>();  				using (var conn = provider.CreateConnection())                  {  					conn.ConnectionString = DatabaseConfigurationContext.DefaultConnectionString;                      conn.Open();                      using (var cmd = provider.CreateCommand())                      {                          cmd.Connection = conn;                          cmd.CommandText = QUERY;                          cmd.CommandType = System.Data.CommandType.Text;                            using (var dr = cmd.ExecuteReader())                          {                              while (dr.Read())                              {                                  var testObject = ReflectionHelper.GetNewObject<TestObject>();                                   								testObject.Id = dr.GetInt32(0);                                  testObject.Active = dr.GetBoolean(1);                                  testObject.Name = dr.GetString(2);  								testObject.NullName = !dr.IsDBNull(3) ? dr.GetString(3) : null;  								testObject.Created = dr.GetDateTime(4);  								testObject.Modified = !dr.IsDBNull(5) ? (DateTime?)dr.GetDateTime(5) : null;  								testObject.NullableId = !dr.IsDBNull(6) ? (int?)dr.GetInt32(6) : null;  								testObject.ReferencedObjectId = !dr.IsDBNull(7) ? dr.GetInt32(7) : default(Int32);  								testObject.Type = (TestObjectTypeId)dr.GetInt32(8);  								testObject.NullableType = !dr.IsDBNull(9) ? (Int32?)dr.GetInt32(9) : null;  								testObject.SingleChar = dr.GetString(10);  								testObject.Single = (Single)dr.GetDouble(11);  								testObject.Double = !dr.IsDBNull(12) ? dr.GetDouble(12) : default(Double);  								testObject.NullableDouble = !dr.IsDBNull(13) ? (Double?)dr.GetDouble(13) : null;  								testObject.Guid = !dr.IsDBNull(14) ? dr.GetGuid(14) : default(Guid);  								testObject.NullableGuid = !dr.IsDBNull(15) ? (Guid?)dr.GetGuid(15) : null;                                    list.Add(testObject);                              }                          }                      }                  }                  return list;              };
Magic Number,ORMComparison,Program,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\Program.cs,Main,The following statement contains a magic number: Func<List<TestObject>> rawAction = () =>              {  				var provider = Destrier.DatabaseConfigurationContext.DefaultProviderFactory;                    var list = new List<TestObject>();  				using (var conn = provider.CreateConnection())                  {  					conn.ConnectionString = DatabaseConfigurationContext.DefaultConnectionString;                      conn.Open();                      using (var cmd = provider.CreateCommand())                      {                          cmd.Connection = conn;                          cmd.CommandText = QUERY;                          cmd.CommandType = System.Data.CommandType.Text;                            using (var dr = cmd.ExecuteReader())                          {                              while (dr.Read())                              {                                  var testObject = ReflectionHelper.GetNewObject<TestObject>();                                   								testObject.Id = dr.GetInt32(0);                                  testObject.Active = dr.GetBoolean(1);                                  testObject.Name = dr.GetString(2);  								testObject.NullName = !dr.IsDBNull(3) ? dr.GetString(3) : null;  								testObject.Created = dr.GetDateTime(4);  								testObject.Modified = !dr.IsDBNull(5) ? (DateTime?)dr.GetDateTime(5) : null;  								testObject.NullableId = !dr.IsDBNull(6) ? (int?)dr.GetInt32(6) : null;  								testObject.ReferencedObjectId = !dr.IsDBNull(7) ? dr.GetInt32(7) : default(Int32);  								testObject.Type = (TestObjectTypeId)dr.GetInt32(8);  								testObject.NullableType = !dr.IsDBNull(9) ? (Int32?)dr.GetInt32(9) : null;  								testObject.SingleChar = dr.GetString(10);  								testObject.Single = (Single)dr.GetDouble(11);  								testObject.Double = !dr.IsDBNull(12) ? dr.GetDouble(12) : default(Double);  								testObject.NullableDouble = !dr.IsDBNull(13) ? (Double?)dr.GetDouble(13) : null;  								testObject.Guid = !dr.IsDBNull(14) ? dr.GetGuid(14) : default(Guid);  								testObject.NullableGuid = !dr.IsDBNull(15) ? (Guid?)dr.GetGuid(15) : null;                                    list.Add(testObject);                              }                          }                      }                  }                  return list;              };
Magic Number,ORMComparison,Program,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\Program.cs,Main,The following statement contains a magic number: Func<List<TestObject>> rawAction = () =>              {  				var provider = Destrier.DatabaseConfigurationContext.DefaultProviderFactory;                    var list = new List<TestObject>();  				using (var conn = provider.CreateConnection())                  {  					conn.ConnectionString = DatabaseConfigurationContext.DefaultConnectionString;                      conn.Open();                      using (var cmd = provider.CreateCommand())                      {                          cmd.Connection = conn;                          cmd.CommandText = QUERY;                          cmd.CommandType = System.Data.CommandType.Text;                            using (var dr = cmd.ExecuteReader())                          {                              while (dr.Read())                              {                                  var testObject = ReflectionHelper.GetNewObject<TestObject>();                                   								testObject.Id = dr.GetInt32(0);                                  testObject.Active = dr.GetBoolean(1);                                  testObject.Name = dr.GetString(2);  								testObject.NullName = !dr.IsDBNull(3) ? dr.GetString(3) : null;  								testObject.Created = dr.GetDateTime(4);  								testObject.Modified = !dr.IsDBNull(5) ? (DateTime?)dr.GetDateTime(5) : null;  								testObject.NullableId = !dr.IsDBNull(6) ? (int?)dr.GetInt32(6) : null;  								testObject.ReferencedObjectId = !dr.IsDBNull(7) ? dr.GetInt32(7) : default(Int32);  								testObject.Type = (TestObjectTypeId)dr.GetInt32(8);  								testObject.NullableType = !dr.IsDBNull(9) ? (Int32?)dr.GetInt32(9) : null;  								testObject.SingleChar = dr.GetString(10);  								testObject.Single = (Single)dr.GetDouble(11);  								testObject.Double = !dr.IsDBNull(12) ? dr.GetDouble(12) : default(Double);  								testObject.NullableDouble = !dr.IsDBNull(13) ? (Double?)dr.GetDouble(13) : null;  								testObject.Guid = !dr.IsDBNull(14) ? dr.GetGuid(14) : default(Guid);  								testObject.NullableGuid = !dr.IsDBNull(15) ? (Guid?)dr.GetGuid(15) : null;                                    list.Add(testObject);                              }                          }                      }                  }                  return list;              };
Magic Number,ORMComparison,Program,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\Program.cs,Main,The following statement contains a magic number: Func<List<TestObject>> rawAction = () =>              {  				var provider = Destrier.DatabaseConfigurationContext.DefaultProviderFactory;                    var list = new List<TestObject>();  				using (var conn = provider.CreateConnection())                  {  					conn.ConnectionString = DatabaseConfigurationContext.DefaultConnectionString;                      conn.Open();                      using (var cmd = provider.CreateCommand())                      {                          cmd.Connection = conn;                          cmd.CommandText = QUERY;                          cmd.CommandType = System.Data.CommandType.Text;                            using (var dr = cmd.ExecuteReader())                          {                              while (dr.Read())                              {                                  var testObject = ReflectionHelper.GetNewObject<TestObject>();                                   								testObject.Id = dr.GetInt32(0);                                  testObject.Active = dr.GetBoolean(1);                                  testObject.Name = dr.GetString(2);  								testObject.NullName = !dr.IsDBNull(3) ? dr.GetString(3) : null;  								testObject.Created = dr.GetDateTime(4);  								testObject.Modified = !dr.IsDBNull(5) ? (DateTime?)dr.GetDateTime(5) : null;  								testObject.NullableId = !dr.IsDBNull(6) ? (int?)dr.GetInt32(6) : null;  								testObject.ReferencedObjectId = !dr.IsDBNull(7) ? dr.GetInt32(7) : default(Int32);  								testObject.Type = (TestObjectTypeId)dr.GetInt32(8);  								testObject.NullableType = !dr.IsDBNull(9) ? (Int32?)dr.GetInt32(9) : null;  								testObject.SingleChar = dr.GetString(10);  								testObject.Single = (Single)dr.GetDouble(11);  								testObject.Double = !dr.IsDBNull(12) ? dr.GetDouble(12) : default(Double);  								testObject.NullableDouble = !dr.IsDBNull(13) ? (Double?)dr.GetDouble(13) : null;  								testObject.Guid = !dr.IsDBNull(14) ? dr.GetGuid(14) : default(Guid);  								testObject.NullableGuid = !dr.IsDBNull(15) ? (Guid?)dr.GetGuid(15) : null;                                    list.Add(testObject);                              }                          }                      }                  }                  return list;              };
Magic Number,ORMComparison,Program,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\Program.cs,Main,The following statement contains a magic number: Func<List<TestObject>> rawAction = () =>              {  				var provider = Destrier.DatabaseConfigurationContext.DefaultProviderFactory;                    var list = new List<TestObject>();  				using (var conn = provider.CreateConnection())                  {  					conn.ConnectionString = DatabaseConfigurationContext.DefaultConnectionString;                      conn.Open();                      using (var cmd = provider.CreateCommand())                      {                          cmd.Connection = conn;                          cmd.CommandText = QUERY;                          cmd.CommandType = System.Data.CommandType.Text;                            using (var dr = cmd.ExecuteReader())                          {                              while (dr.Read())                              {                                  var testObject = ReflectionHelper.GetNewObject<TestObject>();                                   								testObject.Id = dr.GetInt32(0);                                  testObject.Active = dr.GetBoolean(1);                                  testObject.Name = dr.GetString(2);  								testObject.NullName = !dr.IsDBNull(3) ? dr.GetString(3) : null;  								testObject.Created = dr.GetDateTime(4);  								testObject.Modified = !dr.IsDBNull(5) ? (DateTime?)dr.GetDateTime(5) : null;  								testObject.NullableId = !dr.IsDBNull(6) ? (int?)dr.GetInt32(6) : null;  								testObject.ReferencedObjectId = !dr.IsDBNull(7) ? dr.GetInt32(7) : default(Int32);  								testObject.Type = (TestObjectTypeId)dr.GetInt32(8);  								testObject.NullableType = !dr.IsDBNull(9) ? (Int32?)dr.GetInt32(9) : null;  								testObject.SingleChar = dr.GetString(10);  								testObject.Single = (Single)dr.GetDouble(11);  								testObject.Double = !dr.IsDBNull(12) ? dr.GetDouble(12) : default(Double);  								testObject.NullableDouble = !dr.IsDBNull(13) ? (Double?)dr.GetDouble(13) : null;  								testObject.Guid = !dr.IsDBNull(14) ? dr.GetGuid(14) : default(Guid);  								testObject.NullableGuid = !dr.IsDBNull(15) ? (Guid?)dr.GetGuid(15) : null;                                    list.Add(testObject);                              }                          }                      }                  }                  return list;              };
Magic Number,ORMComparison,Program,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\Program.cs,Main,The following statement contains a magic number: Func<List<TestObject>> rawAction = () =>              {  				var provider = Destrier.DatabaseConfigurationContext.DefaultProviderFactory;                    var list = new List<TestObject>();  				using (var conn = provider.CreateConnection())                  {  					conn.ConnectionString = DatabaseConfigurationContext.DefaultConnectionString;                      conn.Open();                      using (var cmd = provider.CreateCommand())                      {                          cmd.Connection = conn;                          cmd.CommandText = QUERY;                          cmd.CommandType = System.Data.CommandType.Text;                            using (var dr = cmd.ExecuteReader())                          {                              while (dr.Read())                              {                                  var testObject = ReflectionHelper.GetNewObject<TestObject>();                                   								testObject.Id = dr.GetInt32(0);                                  testObject.Active = dr.GetBoolean(1);                                  testObject.Name = dr.GetString(2);  								testObject.NullName = !dr.IsDBNull(3) ? dr.GetString(3) : null;  								testObject.Created = dr.GetDateTime(4);  								testObject.Modified = !dr.IsDBNull(5) ? (DateTime?)dr.GetDateTime(5) : null;  								testObject.NullableId = !dr.IsDBNull(6) ? (int?)dr.GetInt32(6) : null;  								testObject.ReferencedObjectId = !dr.IsDBNull(7) ? dr.GetInt32(7) : default(Int32);  								testObject.Type = (TestObjectTypeId)dr.GetInt32(8);  								testObject.NullableType = !dr.IsDBNull(9) ? (Int32?)dr.GetInt32(9) : null;  								testObject.SingleChar = dr.GetString(10);  								testObject.Single = (Single)dr.GetDouble(11);  								testObject.Double = !dr.IsDBNull(12) ? dr.GetDouble(12) : default(Double);  								testObject.NullableDouble = !dr.IsDBNull(13) ? (Double?)dr.GetDouble(13) : null;  								testObject.Guid = !dr.IsDBNull(14) ? dr.GetGuid(14) : default(Guid);  								testObject.NullableGuid = !dr.IsDBNull(15) ? (Guid?)dr.GetGuid(15) : null;                                    list.Add(testObject);                              }                          }                      }                  }                  return list;              };
Magic Number,ORMComparison,Program,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\Program.cs,Main,The following statement contains a magic number: Func<List<TestObject>> rawAction = () =>              {  				var provider = Destrier.DatabaseConfigurationContext.DefaultProviderFactory;                    var list = new List<TestObject>();  				using (var conn = provider.CreateConnection())                  {  					conn.ConnectionString = DatabaseConfigurationContext.DefaultConnectionString;                      conn.Open();                      using (var cmd = provider.CreateCommand())                      {                          cmd.Connection = conn;                          cmd.CommandText = QUERY;                          cmd.CommandType = System.Data.CommandType.Text;                            using (var dr = cmd.ExecuteReader())                          {                              while (dr.Read())                              {                                  var testObject = ReflectionHelper.GetNewObject<TestObject>();                                   								testObject.Id = dr.GetInt32(0);                                  testObject.Active = dr.GetBoolean(1);                                  testObject.Name = dr.GetString(2);  								testObject.NullName = !dr.IsDBNull(3) ? dr.GetString(3) : null;  								testObject.Created = dr.GetDateTime(4);  								testObject.Modified = !dr.IsDBNull(5) ? (DateTime?)dr.GetDateTime(5) : null;  								testObject.NullableId = !dr.IsDBNull(6) ? (int?)dr.GetInt32(6) : null;  								testObject.ReferencedObjectId = !dr.IsDBNull(7) ? dr.GetInt32(7) : default(Int32);  								testObject.Type = (TestObjectTypeId)dr.GetInt32(8);  								testObject.NullableType = !dr.IsDBNull(9) ? (Int32?)dr.GetInt32(9) : null;  								testObject.SingleChar = dr.GetString(10);  								testObject.Single = (Single)dr.GetDouble(11);  								testObject.Double = !dr.IsDBNull(12) ? dr.GetDouble(12) : default(Double);  								testObject.NullableDouble = !dr.IsDBNull(13) ? (Double?)dr.GetDouble(13) : null;  								testObject.Guid = !dr.IsDBNull(14) ? dr.GetGuid(14) : default(Guid);  								testObject.NullableGuid = !dr.IsDBNull(15) ? (Guid?)dr.GetGuid(15) : null;                                    list.Add(testObject);                              }                          }                      }                  }                  return list;              };
Magic Number,ORMComparison,Program,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\Program.cs,Main,The following statement contains a magic number: Func<List<TestObject>> rawAction = () =>              {  				var provider = Destrier.DatabaseConfigurationContext.DefaultProviderFactory;                    var list = new List<TestObject>();  				using (var conn = provider.CreateConnection())                  {  					conn.ConnectionString = DatabaseConfigurationContext.DefaultConnectionString;                      conn.Open();                      using (var cmd = provider.CreateCommand())                      {                          cmd.Connection = conn;                          cmd.CommandText = QUERY;                          cmd.CommandType = System.Data.CommandType.Text;                            using (var dr = cmd.ExecuteReader())                          {                              while (dr.Read())                              {                                  var testObject = ReflectionHelper.GetNewObject<TestObject>();                                   								testObject.Id = dr.GetInt32(0);                                  testObject.Active = dr.GetBoolean(1);                                  testObject.Name = dr.GetString(2);  								testObject.NullName = !dr.IsDBNull(3) ? dr.GetString(3) : null;  								testObject.Created = dr.GetDateTime(4);  								testObject.Modified = !dr.IsDBNull(5) ? (DateTime?)dr.GetDateTime(5) : null;  								testObject.NullableId = !dr.IsDBNull(6) ? (int?)dr.GetInt32(6) : null;  								testObject.ReferencedObjectId = !dr.IsDBNull(7) ? dr.GetInt32(7) : default(Int32);  								testObject.Type = (TestObjectTypeId)dr.GetInt32(8);  								testObject.NullableType = !dr.IsDBNull(9) ? (Int32?)dr.GetInt32(9) : null;  								testObject.SingleChar = dr.GetString(10);  								testObject.Single = (Single)dr.GetDouble(11);  								testObject.Double = !dr.IsDBNull(12) ? dr.GetDouble(12) : default(Double);  								testObject.NullableDouble = !dr.IsDBNull(13) ? (Double?)dr.GetDouble(13) : null;  								testObject.Guid = !dr.IsDBNull(14) ? dr.GetGuid(14) : default(Guid);  								testObject.NullableGuid = !dr.IsDBNull(15) ? (Guid?)dr.GetGuid(15) : null;                                    list.Add(testObject);                              }                          }                      }                  }                  return list;              };
Magic Number,ORMComparison,Program,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\Program.cs,Main,The following statement contains a magic number: Func<List<TestObject>> rawAction = () =>              {  				var provider = Destrier.DatabaseConfigurationContext.DefaultProviderFactory;                    var list = new List<TestObject>();  				using (var conn = provider.CreateConnection())                  {  					conn.ConnectionString = DatabaseConfigurationContext.DefaultConnectionString;                      conn.Open();                      using (var cmd = provider.CreateCommand())                      {                          cmd.Connection = conn;                          cmd.CommandText = QUERY;                          cmd.CommandType = System.Data.CommandType.Text;                            using (var dr = cmd.ExecuteReader())                          {                              while (dr.Read())                              {                                  var testObject = ReflectionHelper.GetNewObject<TestObject>();                                   								testObject.Id = dr.GetInt32(0);                                  testObject.Active = dr.GetBoolean(1);                                  testObject.Name = dr.GetString(2);  								testObject.NullName = !dr.IsDBNull(3) ? dr.GetString(3) : null;  								testObject.Created = dr.GetDateTime(4);  								testObject.Modified = !dr.IsDBNull(5) ? (DateTime?)dr.GetDateTime(5) : null;  								testObject.NullableId = !dr.IsDBNull(6) ? (int?)dr.GetInt32(6) : null;  								testObject.ReferencedObjectId = !dr.IsDBNull(7) ? dr.GetInt32(7) : default(Int32);  								testObject.Type = (TestObjectTypeId)dr.GetInt32(8);  								testObject.NullableType = !dr.IsDBNull(9) ? (Int32?)dr.GetInt32(9) : null;  								testObject.SingleChar = dr.GetString(10);  								testObject.Single = (Single)dr.GetDouble(11);  								testObject.Double = !dr.IsDBNull(12) ? dr.GetDouble(12) : default(Double);  								testObject.NullableDouble = !dr.IsDBNull(13) ? (Double?)dr.GetDouble(13) : null;  								testObject.Guid = !dr.IsDBNull(14) ? dr.GetGuid(14) : default(Guid);  								testObject.NullableGuid = !dr.IsDBNull(15) ? (Guid?)dr.GetGuid(15) : null;                                    list.Add(testObject);                              }                          }                      }                  }                  return list;              };
Magic Number,ORMComparison,Program,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\Program.cs,Main,The following statement contains a magic number: Func<List<TestObject>> rawAction = () =>              {  				var provider = Destrier.DatabaseConfigurationContext.DefaultProviderFactory;                    var list = new List<TestObject>();  				using (var conn = provider.CreateConnection())                  {  					conn.ConnectionString = DatabaseConfigurationContext.DefaultConnectionString;                      conn.Open();                      using (var cmd = provider.CreateCommand())                      {                          cmd.Connection = conn;                          cmd.CommandText = QUERY;                          cmd.CommandType = System.Data.CommandType.Text;                            using (var dr = cmd.ExecuteReader())                          {                              while (dr.Read())                              {                                  var testObject = ReflectionHelper.GetNewObject<TestObject>();                                   								testObject.Id = dr.GetInt32(0);                                  testObject.Active = dr.GetBoolean(1);                                  testObject.Name = dr.GetString(2);  								testObject.NullName = !dr.IsDBNull(3) ? dr.GetString(3) : null;  								testObject.Created = dr.GetDateTime(4);  								testObject.Modified = !dr.IsDBNull(5) ? (DateTime?)dr.GetDateTime(5) : null;  								testObject.NullableId = !dr.IsDBNull(6) ? (int?)dr.GetInt32(6) : null;  								testObject.ReferencedObjectId = !dr.IsDBNull(7) ? dr.GetInt32(7) : default(Int32);  								testObject.Type = (TestObjectTypeId)dr.GetInt32(8);  								testObject.NullableType = !dr.IsDBNull(9) ? (Int32?)dr.GetInt32(9) : null;  								testObject.SingleChar = dr.GetString(10);  								testObject.Single = (Single)dr.GetDouble(11);  								testObject.Double = !dr.IsDBNull(12) ? dr.GetDouble(12) : default(Double);  								testObject.NullableDouble = !dr.IsDBNull(13) ? (Double?)dr.GetDouble(13) : null;  								testObject.Guid = !dr.IsDBNull(14) ? dr.GetGuid(14) : default(Guid);  								testObject.NullableGuid = !dr.IsDBNull(15) ? (Guid?)dr.GetGuid(15) : null;                                    list.Add(testObject);                              }                          }                      }                  }                  return list;              };
Magic Number,ORMComparison,Program,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\Program.cs,Main,The following statement contains a magic number: Func<List<TestObject>> rawAction = () =>              {  				var provider = Destrier.DatabaseConfigurationContext.DefaultProviderFactory;                    var list = new List<TestObject>();  				using (var conn = provider.CreateConnection())                  {  					conn.ConnectionString = DatabaseConfigurationContext.DefaultConnectionString;                      conn.Open();                      using (var cmd = provider.CreateCommand())                      {                          cmd.Connection = conn;                          cmd.CommandText = QUERY;                          cmd.CommandType = System.Data.CommandType.Text;                            using (var dr = cmd.ExecuteReader())                          {                              while (dr.Read())                              {                                  var testObject = ReflectionHelper.GetNewObject<TestObject>();                                   								testObject.Id = dr.GetInt32(0);                                  testObject.Active = dr.GetBoolean(1);                                  testObject.Name = dr.GetString(2);  								testObject.NullName = !dr.IsDBNull(3) ? dr.GetString(3) : null;  								testObject.Created = dr.GetDateTime(4);  								testObject.Modified = !dr.IsDBNull(5) ? (DateTime?)dr.GetDateTime(5) : null;  								testObject.NullableId = !dr.IsDBNull(6) ? (int?)dr.GetInt32(6) : null;  								testObject.ReferencedObjectId = !dr.IsDBNull(7) ? dr.GetInt32(7) : default(Int32);  								testObject.Type = (TestObjectTypeId)dr.GetInt32(8);  								testObject.NullableType = !dr.IsDBNull(9) ? (Int32?)dr.GetInt32(9) : null;  								testObject.SingleChar = dr.GetString(10);  								testObject.Single = (Single)dr.GetDouble(11);  								testObject.Double = !dr.IsDBNull(12) ? dr.GetDouble(12) : default(Double);  								testObject.NullableDouble = !dr.IsDBNull(13) ? (Double?)dr.GetDouble(13) : null;  								testObject.Guid = !dr.IsDBNull(14) ? dr.GetGuid(14) : default(Guid);  								testObject.NullableGuid = !dr.IsDBNull(15) ? (Guid?)dr.GetGuid(15) : null;                                    list.Add(testObject);                              }                          }                      }                  }                  return list;              };
Magic Number,ORMComparison,Program,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\Program.cs,Main,The following statement contains a magic number: Func<List<TestObject>> rawAction = () =>              {  				var provider = Destrier.DatabaseConfigurationContext.DefaultProviderFactory;                    var list = new List<TestObject>();  				using (var conn = provider.CreateConnection())                  {  					conn.ConnectionString = DatabaseConfigurationContext.DefaultConnectionString;                      conn.Open();                      using (var cmd = provider.CreateCommand())                      {                          cmd.Connection = conn;                          cmd.CommandText = QUERY;                          cmd.CommandType = System.Data.CommandType.Text;                            using (var dr = cmd.ExecuteReader())                          {                              while (dr.Read())                              {                                  var testObject = ReflectionHelper.GetNewObject<TestObject>();                                   								testObject.Id = dr.GetInt32(0);                                  testObject.Active = dr.GetBoolean(1);                                  testObject.Name = dr.GetString(2);  								testObject.NullName = !dr.IsDBNull(3) ? dr.GetString(3) : null;  								testObject.Created = dr.GetDateTime(4);  								testObject.Modified = !dr.IsDBNull(5) ? (DateTime?)dr.GetDateTime(5) : null;  								testObject.NullableId = !dr.IsDBNull(6) ? (int?)dr.GetInt32(6) : null;  								testObject.ReferencedObjectId = !dr.IsDBNull(7) ? dr.GetInt32(7) : default(Int32);  								testObject.Type = (TestObjectTypeId)dr.GetInt32(8);  								testObject.NullableType = !dr.IsDBNull(9) ? (Int32?)dr.GetInt32(9) : null;  								testObject.SingleChar = dr.GetString(10);  								testObject.Single = (Single)dr.GetDouble(11);  								testObject.Double = !dr.IsDBNull(12) ? dr.GetDouble(12) : default(Double);  								testObject.NullableDouble = !dr.IsDBNull(13) ? (Double?)dr.GetDouble(13) : null;  								testObject.Guid = !dr.IsDBNull(14) ? dr.GetGuid(14) : default(Guid);  								testObject.NullableGuid = !dr.IsDBNull(15) ? (Guid?)dr.GetGuid(15) : null;                                    list.Add(testObject);                              }                          }                      }                  }                  return list;              };
Magic Number,ORMComparison,Program,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\Program.cs,Main,The following statement contains a magic number: Func<List<TestObject>> rawAction = () =>              {  				var provider = Destrier.DatabaseConfigurationContext.DefaultProviderFactory;                    var list = new List<TestObject>();  				using (var conn = provider.CreateConnection())                  {  					conn.ConnectionString = DatabaseConfigurationContext.DefaultConnectionString;                      conn.Open();                      using (var cmd = provider.CreateCommand())                      {                          cmd.Connection = conn;                          cmd.CommandText = QUERY;                          cmd.CommandType = System.Data.CommandType.Text;                            using (var dr = cmd.ExecuteReader())                          {                              while (dr.Read())                              {                                  var testObject = ReflectionHelper.GetNewObject<TestObject>();                                   								testObject.Id = dr.GetInt32(0);                                  testObject.Active = dr.GetBoolean(1);                                  testObject.Name = dr.GetString(2);  								testObject.NullName = !dr.IsDBNull(3) ? dr.GetString(3) : null;  								testObject.Created = dr.GetDateTime(4);  								testObject.Modified = !dr.IsDBNull(5) ? (DateTime?)dr.GetDateTime(5) : null;  								testObject.NullableId = !dr.IsDBNull(6) ? (int?)dr.GetInt32(6) : null;  								testObject.ReferencedObjectId = !dr.IsDBNull(7) ? dr.GetInt32(7) : default(Int32);  								testObject.Type = (TestObjectTypeId)dr.GetInt32(8);  								testObject.NullableType = !dr.IsDBNull(9) ? (Int32?)dr.GetInt32(9) : null;  								testObject.SingleChar = dr.GetString(10);  								testObject.Single = (Single)dr.GetDouble(11);  								testObject.Double = !dr.IsDBNull(12) ? dr.GetDouble(12) : default(Double);  								testObject.NullableDouble = !dr.IsDBNull(13) ? (Double?)dr.GetDouble(13) : null;  								testObject.Guid = !dr.IsDBNull(14) ? dr.GetGuid(14) : default(Guid);  								testObject.NullableGuid = !dr.IsDBNull(15) ? (Guid?)dr.GetGuid(15) : null;                                    list.Add(testObject);                              }                          }                      }                  }                  return list;              };
Magic Number,ORMComparison,Program,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\Program.cs,Main,The following statement contains a magic number: Func<List<TestObject>> rawAction = () =>              {  				var provider = Destrier.DatabaseConfigurationContext.DefaultProviderFactory;                    var list = new List<TestObject>();  				using (var conn = provider.CreateConnection())                  {  					conn.ConnectionString = DatabaseConfigurationContext.DefaultConnectionString;                      conn.Open();                      using (var cmd = provider.CreateCommand())                      {                          cmd.Connection = conn;                          cmd.CommandText = QUERY;                          cmd.CommandType = System.Data.CommandType.Text;                            using (var dr = cmd.ExecuteReader())                          {                              while (dr.Read())                              {                                  var testObject = ReflectionHelper.GetNewObject<TestObject>();                                   								testObject.Id = dr.GetInt32(0);                                  testObject.Active = dr.GetBoolean(1);                                  testObject.Name = dr.GetString(2);  								testObject.NullName = !dr.IsDBNull(3) ? dr.GetString(3) : null;  								testObject.Created = dr.GetDateTime(4);  								testObject.Modified = !dr.IsDBNull(5) ? (DateTime?)dr.GetDateTime(5) : null;  								testObject.NullableId = !dr.IsDBNull(6) ? (int?)dr.GetInt32(6) : null;  								testObject.ReferencedObjectId = !dr.IsDBNull(7) ? dr.GetInt32(7) : default(Int32);  								testObject.Type = (TestObjectTypeId)dr.GetInt32(8);  								testObject.NullableType = !dr.IsDBNull(9) ? (Int32?)dr.GetInt32(9) : null;  								testObject.SingleChar = dr.GetString(10);  								testObject.Single = (Single)dr.GetDouble(11);  								testObject.Double = !dr.IsDBNull(12) ? dr.GetDouble(12) : default(Double);  								testObject.NullableDouble = !dr.IsDBNull(13) ? (Double?)dr.GetDouble(13) : null;  								testObject.Guid = !dr.IsDBNull(14) ? dr.GetGuid(14) : default(Guid);  								testObject.NullableGuid = !dr.IsDBNull(15) ? (Guid?)dr.GetGuid(15) : null;                                    list.Add(testObject);                              }                          }                      }                  }                  return list;              };
Magic Number,ORMComparison,Program,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\Program.cs,Main,The following statement contains a magic number: Func<List<TestObject>> rawAction = () =>              {  				var provider = Destrier.DatabaseConfigurationContext.DefaultProviderFactory;                    var list = new List<TestObject>();  				using (var conn = provider.CreateConnection())                  {  					conn.ConnectionString = DatabaseConfigurationContext.DefaultConnectionString;                      conn.Open();                      using (var cmd = provider.CreateCommand())                      {                          cmd.Connection = conn;                          cmd.CommandText = QUERY;                          cmd.CommandType = System.Data.CommandType.Text;                            using (var dr = cmd.ExecuteReader())                          {                              while (dr.Read())                              {                                  var testObject = ReflectionHelper.GetNewObject<TestObject>();                                   								testObject.Id = dr.GetInt32(0);                                  testObject.Active = dr.GetBoolean(1);                                  testObject.Name = dr.GetString(2);  								testObject.NullName = !dr.IsDBNull(3) ? dr.GetString(3) : null;  								testObject.Created = dr.GetDateTime(4);  								testObject.Modified = !dr.IsDBNull(5) ? (DateTime?)dr.GetDateTime(5) : null;  								testObject.NullableId = !dr.IsDBNull(6) ? (int?)dr.GetInt32(6) : null;  								testObject.ReferencedObjectId = !dr.IsDBNull(7) ? dr.GetInt32(7) : default(Int32);  								testObject.Type = (TestObjectTypeId)dr.GetInt32(8);  								testObject.NullableType = !dr.IsDBNull(9) ? (Int32?)dr.GetInt32(9) : null;  								testObject.SingleChar = dr.GetString(10);  								testObject.Single = (Single)dr.GetDouble(11);  								testObject.Double = !dr.IsDBNull(12) ? dr.GetDouble(12) : default(Double);  								testObject.NullableDouble = !dr.IsDBNull(13) ? (Double?)dr.GetDouble(13) : null;  								testObject.Guid = !dr.IsDBNull(14) ? dr.GetGuid(14) : default(Guid);  								testObject.NullableGuid = !dr.IsDBNull(15) ? (Guid?)dr.GetGuid(15) : null;                                    list.Add(testObject);                              }                          }                      }                  }                  return list;              };
Magic Number,ORMComparison,Program,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\Program.cs,Main,The following statement contains a magic number: Func<List<TestObject>> rawAction = () =>              {  				var provider = Destrier.DatabaseConfigurationContext.DefaultProviderFactory;                    var list = new List<TestObject>();  				using (var conn = provider.CreateConnection())                  {  					conn.ConnectionString = DatabaseConfigurationContext.DefaultConnectionString;                      conn.Open();                      using (var cmd = provider.CreateCommand())                      {                          cmd.Connection = conn;                          cmd.CommandText = QUERY;                          cmd.CommandType = System.Data.CommandType.Text;                            using (var dr = cmd.ExecuteReader())                          {                              while (dr.Read())                              {                                  var testObject = ReflectionHelper.GetNewObject<TestObject>();                                   								testObject.Id = dr.GetInt32(0);                                  testObject.Active = dr.GetBoolean(1);                                  testObject.Name = dr.GetString(2);  								testObject.NullName = !dr.IsDBNull(3) ? dr.GetString(3) : null;  								testObject.Created = dr.GetDateTime(4);  								testObject.Modified = !dr.IsDBNull(5) ? (DateTime?)dr.GetDateTime(5) : null;  								testObject.NullableId = !dr.IsDBNull(6) ? (int?)dr.GetInt32(6) : null;  								testObject.ReferencedObjectId = !dr.IsDBNull(7) ? dr.GetInt32(7) : default(Int32);  								testObject.Type = (TestObjectTypeId)dr.GetInt32(8);  								testObject.NullableType = !dr.IsDBNull(9) ? (Int32?)dr.GetInt32(9) : null;  								testObject.SingleChar = dr.GetString(10);  								testObject.Single = (Single)dr.GetDouble(11);  								testObject.Double = !dr.IsDBNull(12) ? dr.GetDouble(12) : default(Double);  								testObject.NullableDouble = !dr.IsDBNull(13) ? (Double?)dr.GetDouble(13) : null;  								testObject.Guid = !dr.IsDBNull(14) ? dr.GetGuid(14) : default(Guid);  								testObject.NullableGuid = !dr.IsDBNull(15) ? (Guid?)dr.GetGuid(15) : null;                                    list.Add(testObject);                              }                          }                      }                  }                  return list;              };
Magic Number,ORMComparison,Program,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\Program.cs,Main,The following statement contains a magic number: Func<List<TestObject>> rawAction = () =>              {  				var provider = Destrier.DatabaseConfigurationContext.DefaultProviderFactory;                    var list = new List<TestObject>();  				using (var conn = provider.CreateConnection())                  {  					conn.ConnectionString = DatabaseConfigurationContext.DefaultConnectionString;                      conn.Open();                      using (var cmd = provider.CreateCommand())                      {                          cmd.Connection = conn;                          cmd.CommandText = QUERY;                          cmd.CommandType = System.Data.CommandType.Text;                            using (var dr = cmd.ExecuteReader())                          {                              while (dr.Read())                              {                                  var testObject = ReflectionHelper.GetNewObject<TestObject>();                                   								testObject.Id = dr.GetInt32(0);                                  testObject.Active = dr.GetBoolean(1);                                  testObject.Name = dr.GetString(2);  								testObject.NullName = !dr.IsDBNull(3) ? dr.GetString(3) : null;  								testObject.Created = dr.GetDateTime(4);  								testObject.Modified = !dr.IsDBNull(5) ? (DateTime?)dr.GetDateTime(5) : null;  								testObject.NullableId = !dr.IsDBNull(6) ? (int?)dr.GetInt32(6) : null;  								testObject.ReferencedObjectId = !dr.IsDBNull(7) ? dr.GetInt32(7) : default(Int32);  								testObject.Type = (TestObjectTypeId)dr.GetInt32(8);  								testObject.NullableType = !dr.IsDBNull(9) ? (Int32?)dr.GetInt32(9) : null;  								testObject.SingleChar = dr.GetString(10);  								testObject.Single = (Single)dr.GetDouble(11);  								testObject.Double = !dr.IsDBNull(12) ? dr.GetDouble(12) : default(Double);  								testObject.NullableDouble = !dr.IsDBNull(13) ? (Double?)dr.GetDouble(13) : null;  								testObject.Guid = !dr.IsDBNull(14) ? dr.GetGuid(14) : default(Guid);  								testObject.NullableGuid = !dr.IsDBNull(15) ? (Guid?)dr.GetGuid(15) : null;                                    list.Add(testObject);                              }                          }                      }                  }                  return list;              };
Magic Number,ORMComparison,Program,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\Program.cs,Main,The following statement contains a magic number: Func<List<TestObject>> rawAction = () =>              {  				var provider = Destrier.DatabaseConfigurationContext.DefaultProviderFactory;                    var list = new List<TestObject>();  				using (var conn = provider.CreateConnection())                  {  					conn.ConnectionString = DatabaseConfigurationContext.DefaultConnectionString;                      conn.Open();                      using (var cmd = provider.CreateCommand())                      {                          cmd.Connection = conn;                          cmd.CommandText = QUERY;                          cmd.CommandType = System.Data.CommandType.Text;                            using (var dr = cmd.ExecuteReader())                          {                              while (dr.Read())                              {                                  var testObject = ReflectionHelper.GetNewObject<TestObject>();                                   								testObject.Id = dr.GetInt32(0);                                  testObject.Active = dr.GetBoolean(1);                                  testObject.Name = dr.GetString(2);  								testObject.NullName = !dr.IsDBNull(3) ? dr.GetString(3) : null;  								testObject.Created = dr.GetDateTime(4);  								testObject.Modified = !dr.IsDBNull(5) ? (DateTime?)dr.GetDateTime(5) : null;  								testObject.NullableId = !dr.IsDBNull(6) ? (int?)dr.GetInt32(6) : null;  								testObject.ReferencedObjectId = !dr.IsDBNull(7) ? dr.GetInt32(7) : default(Int32);  								testObject.Type = (TestObjectTypeId)dr.GetInt32(8);  								testObject.NullableType = !dr.IsDBNull(9) ? (Int32?)dr.GetInt32(9) : null;  								testObject.SingleChar = dr.GetString(10);  								testObject.Single = (Single)dr.GetDouble(11);  								testObject.Double = !dr.IsDBNull(12) ? dr.GetDouble(12) : default(Double);  								testObject.NullableDouble = !dr.IsDBNull(13) ? (Double?)dr.GetDouble(13) : null;  								testObject.Guid = !dr.IsDBNull(14) ? dr.GetGuid(14) : default(Guid);  								testObject.NullableGuid = !dr.IsDBNull(15) ? (Guid?)dr.GetGuid(15) : null;                                    list.Add(testObject);                              }                          }                      }                  }                  return list;              };
Magic Number,ORMComparison,Program,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\Program.cs,Main,The following statement contains a magic number: Func<List<TestObject>> rawAction = () =>              {  				var provider = Destrier.DatabaseConfigurationContext.DefaultProviderFactory;                    var list = new List<TestObject>();  				using (var conn = provider.CreateConnection())                  {  					conn.ConnectionString = DatabaseConfigurationContext.DefaultConnectionString;                      conn.Open();                      using (var cmd = provider.CreateCommand())                      {                          cmd.Connection = conn;                          cmd.CommandText = QUERY;                          cmd.CommandType = System.Data.CommandType.Text;                            using (var dr = cmd.ExecuteReader())                          {                              while (dr.Read())                              {                                  var testObject = ReflectionHelper.GetNewObject<TestObject>();                                   								testObject.Id = dr.GetInt32(0);                                  testObject.Active = dr.GetBoolean(1);                                  testObject.Name = dr.GetString(2);  								testObject.NullName = !dr.IsDBNull(3) ? dr.GetString(3) : null;  								testObject.Created = dr.GetDateTime(4);  								testObject.Modified = !dr.IsDBNull(5) ? (DateTime?)dr.GetDateTime(5) : null;  								testObject.NullableId = !dr.IsDBNull(6) ? (int?)dr.GetInt32(6) : null;  								testObject.ReferencedObjectId = !dr.IsDBNull(7) ? dr.GetInt32(7) : default(Int32);  								testObject.Type = (TestObjectTypeId)dr.GetInt32(8);  								testObject.NullableType = !dr.IsDBNull(9) ? (Int32?)dr.GetInt32(9) : null;  								testObject.SingleChar = dr.GetString(10);  								testObject.Single = (Single)dr.GetDouble(11);  								testObject.Double = !dr.IsDBNull(12) ? dr.GetDouble(12) : default(Double);  								testObject.NullableDouble = !dr.IsDBNull(13) ? (Double?)dr.GetDouble(13) : null;  								testObject.Guid = !dr.IsDBNull(14) ? dr.GetGuid(14) : default(Guid);  								testObject.NullableGuid = !dr.IsDBNull(15) ? (Guid?)dr.GetGuid(15) : null;                                    list.Add(testObject);                              }                          }                      }                  }                  return list;              };
Magic Number,ORMComparison,Program,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\Program.cs,Main,The following statement contains a magic number: Func<List<TestObject>> rawAction = () =>              {  				var provider = Destrier.DatabaseConfigurationContext.DefaultProviderFactory;                    var list = new List<TestObject>();  				using (var conn = provider.CreateConnection())                  {  					conn.ConnectionString = DatabaseConfigurationContext.DefaultConnectionString;                      conn.Open();                      using (var cmd = provider.CreateCommand())                      {                          cmd.Connection = conn;                          cmd.CommandText = QUERY;                          cmd.CommandType = System.Data.CommandType.Text;                            using (var dr = cmd.ExecuteReader())                          {                              while (dr.Read())                              {                                  var testObject = ReflectionHelper.GetNewObject<TestObject>();                                   								testObject.Id = dr.GetInt32(0);                                  testObject.Active = dr.GetBoolean(1);                                  testObject.Name = dr.GetString(2);  								testObject.NullName = !dr.IsDBNull(3) ? dr.GetString(3) : null;  								testObject.Created = dr.GetDateTime(4);  								testObject.Modified = !dr.IsDBNull(5) ? (DateTime?)dr.GetDateTime(5) : null;  								testObject.NullableId = !dr.IsDBNull(6) ? (int?)dr.GetInt32(6) : null;  								testObject.ReferencedObjectId = !dr.IsDBNull(7) ? dr.GetInt32(7) : default(Int32);  								testObject.Type = (TestObjectTypeId)dr.GetInt32(8);  								testObject.NullableType = !dr.IsDBNull(9) ? (Int32?)dr.GetInt32(9) : null;  								testObject.SingleChar = dr.GetString(10);  								testObject.Single = (Single)dr.GetDouble(11);  								testObject.Double = !dr.IsDBNull(12) ? dr.GetDouble(12) : default(Double);  								testObject.NullableDouble = !dr.IsDBNull(13) ? (Double?)dr.GetDouble(13) : null;  								testObject.Guid = !dr.IsDBNull(14) ? dr.GetGuid(14) : default(Guid);  								testObject.NullableGuid = !dr.IsDBNull(15) ? (Guid?)dr.GetGuid(15) : null;                                    list.Add(testObject);                              }                          }                      }                  }                  return list;              };
Magic Number,ORMComparison,Program,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\Program.cs,Main,The following statement contains a magic number: Func<List<TestObject>> rawAction = () =>              {  				var provider = Destrier.DatabaseConfigurationContext.DefaultProviderFactory;                    var list = new List<TestObject>();  				using (var conn = provider.CreateConnection())                  {  					conn.ConnectionString = DatabaseConfigurationContext.DefaultConnectionString;                      conn.Open();                      using (var cmd = provider.CreateCommand())                      {                          cmd.Connection = conn;                          cmd.CommandText = QUERY;                          cmd.CommandType = System.Data.CommandType.Text;                            using (var dr = cmd.ExecuteReader())                          {                              while (dr.Read())                              {                                  var testObject = ReflectionHelper.GetNewObject<TestObject>();                                   								testObject.Id = dr.GetInt32(0);                                  testObject.Active = dr.GetBoolean(1);                                  testObject.Name = dr.GetString(2);  								testObject.NullName = !dr.IsDBNull(3) ? dr.GetString(3) : null;  								testObject.Created = dr.GetDateTime(4);  								testObject.Modified = !dr.IsDBNull(5) ? (DateTime?)dr.GetDateTime(5) : null;  								testObject.NullableId = !dr.IsDBNull(6) ? (int?)dr.GetInt32(6) : null;  								testObject.ReferencedObjectId = !dr.IsDBNull(7) ? dr.GetInt32(7) : default(Int32);  								testObject.Type = (TestObjectTypeId)dr.GetInt32(8);  								testObject.NullableType = !dr.IsDBNull(9) ? (Int32?)dr.GetInt32(9) : null;  								testObject.SingleChar = dr.GetString(10);  								testObject.Single = (Single)dr.GetDouble(11);  								testObject.Double = !dr.IsDBNull(12) ? dr.GetDouble(12) : default(Double);  								testObject.NullableDouble = !dr.IsDBNull(13) ? (Double?)dr.GetDouble(13) : null;  								testObject.Guid = !dr.IsDBNull(14) ? dr.GetGuid(14) : default(Guid);  								testObject.NullableGuid = !dr.IsDBNull(15) ? (Guid?)dr.GetGuid(15) : null;                                    list.Add(testObject);                              }                          }                      }                  }                  return list;              };
Magic Number,ORMComparison,Program,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\Program.cs,Main,The following statement contains a magic number: Func<List<TestObject>> rawAction = () =>              {  				var provider = Destrier.DatabaseConfigurationContext.DefaultProviderFactory;                    var list = new List<TestObject>();  				using (var conn = provider.CreateConnection())                  {  					conn.ConnectionString = DatabaseConfigurationContext.DefaultConnectionString;                      conn.Open();                      using (var cmd = provider.CreateCommand())                      {                          cmd.Connection = conn;                          cmd.CommandText = QUERY;                          cmd.CommandType = System.Data.CommandType.Text;                            using (var dr = cmd.ExecuteReader())                          {                              while (dr.Read())                              {                                  var testObject = ReflectionHelper.GetNewObject<TestObject>();                                   								testObject.Id = dr.GetInt32(0);                                  testObject.Active = dr.GetBoolean(1);                                  testObject.Name = dr.GetString(2);  								testObject.NullName = !dr.IsDBNull(3) ? dr.GetString(3) : null;  								testObject.Created = dr.GetDateTime(4);  								testObject.Modified = !dr.IsDBNull(5) ? (DateTime?)dr.GetDateTime(5) : null;  								testObject.NullableId = !dr.IsDBNull(6) ? (int?)dr.GetInt32(6) : null;  								testObject.ReferencedObjectId = !dr.IsDBNull(7) ? dr.GetInt32(7) : default(Int32);  								testObject.Type = (TestObjectTypeId)dr.GetInt32(8);  								testObject.NullableType = !dr.IsDBNull(9) ? (Int32?)dr.GetInt32(9) : null;  								testObject.SingleChar = dr.GetString(10);  								testObject.Single = (Single)dr.GetDouble(11);  								testObject.Double = !dr.IsDBNull(12) ? dr.GetDouble(12) : default(Double);  								testObject.NullableDouble = !dr.IsDBNull(13) ? (Double?)dr.GetDouble(13) : null;  								testObject.Guid = !dr.IsDBNull(14) ? dr.GetGuid(14) : default(Guid);  								testObject.NullableGuid = !dr.IsDBNull(15) ? (Guid?)dr.GetGuid(15) : null;                                    list.Add(testObject);                              }                          }                      }                  }                  return list;              };
Magic Number,ORMComparison,Program,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\Program.cs,Main,The following statement contains a magic number: Func<List<TestObject>> rawAction = () =>              {  				var provider = Destrier.DatabaseConfigurationContext.DefaultProviderFactory;                    var list = new List<TestObject>();  				using (var conn = provider.CreateConnection())                  {  					conn.ConnectionString = DatabaseConfigurationContext.DefaultConnectionString;                      conn.Open();                      using (var cmd = provider.CreateCommand())                      {                          cmd.Connection = conn;                          cmd.CommandText = QUERY;                          cmd.CommandType = System.Data.CommandType.Text;                            using (var dr = cmd.ExecuteReader())                          {                              while (dr.Read())                              {                                  var testObject = ReflectionHelper.GetNewObject<TestObject>();                                   								testObject.Id = dr.GetInt32(0);                                  testObject.Active = dr.GetBoolean(1);                                  testObject.Name = dr.GetString(2);  								testObject.NullName = !dr.IsDBNull(3) ? dr.GetString(3) : null;  								testObject.Created = dr.GetDateTime(4);  								testObject.Modified = !dr.IsDBNull(5) ? (DateTime?)dr.GetDateTime(5) : null;  								testObject.NullableId = !dr.IsDBNull(6) ? (int?)dr.GetInt32(6) : null;  								testObject.ReferencedObjectId = !dr.IsDBNull(7) ? dr.GetInt32(7) : default(Int32);  								testObject.Type = (TestObjectTypeId)dr.GetInt32(8);  								testObject.NullableType = !dr.IsDBNull(9) ? (Int32?)dr.GetInt32(9) : null;  								testObject.SingleChar = dr.GetString(10);  								testObject.Single = (Single)dr.GetDouble(11);  								testObject.Double = !dr.IsDBNull(12) ? dr.GetDouble(12) : default(Double);  								testObject.NullableDouble = !dr.IsDBNull(13) ? (Double?)dr.GetDouble(13) : null;  								testObject.Guid = !dr.IsDBNull(14) ? dr.GetGuid(14) : default(Guid);  								testObject.NullableGuid = !dr.IsDBNull(15) ? (Guid?)dr.GetGuid(15) : null;                                    list.Add(testObject);                              }                          }                      }                  }                  return list;              };
Magic Number,ORMComparison,Program,D:\research\architectureSmells\repos\ClothesHorse_Destrier\ORMComparison\Program.cs,Main,The following statement contains a magic number: int spaces = 25 - kvp.Key.Length;
