Implementation smell,Namespace,Class,File,Method,Description
Complex Method,SampleSitecoreProject,SampleSitecoreLogic,C:\repos\hermanussen_Sitecore-FixtureDataProvider\SampleSitecoreProject\SampleSitecoreLogic.cs,ImportKml,Cyclomatic complexity of the method is 11
Long Statement,SampleSitecoreProject,SampleSitecoreLogic,C:\repos\hermanussen_Sitecore-FixtureDataProvider\SampleSitecoreProject\SampleSitecoreLogic.cs,ImportKml,The length of the statement  "	Item importRoot = contentRoot.Add (string.Format ("Imported content {0}"' timeStamp.ToString ("yyyy MM dd"))' new TemplateItem (folderTemplate)); " is 145.
Long Statement,SampleSitecoreProject,SampleSitecoreLogic,C:\repos\hermanussen_Sitecore-FixtureDataProvider\SampleSitecoreProject\SampleSitecoreLogic.cs,ImportKml,The length of the statement  "			Item placemarkItem = importRoot.Add (ItemUtil.ProposeValidItemName (name.Value.Replace (":"' ""))' new TemplateItem (placemarkTemplate)); " is 137.
Long Statement,SampleSitecoreProject,SampleSitecoreLogic,C:\repos\hermanussen_Sitecore-FixtureDataProvider\SampleSitecoreProject\SampleSitecoreLogic.cs,ImportImage,The length of the statement  "	mediaCreatorOptions.Destination = string.Format ("{0}/{1}"' parentItem.Paths.FullPath' ItemUtil.ProposeValidItemName (Path.GetFileNameWithoutExtension (sampleImage))); " is 167.
Magic Number,SampleSitecoreProject,SampleSitecoreLogic,C:\repos\hermanussen_Sitecore-FixtureDataProvider\SampleSitecoreProject\SampleSitecoreLogic.cs,ImportKml,The following statement contains a magic number: foreach (XElement placemarkElement in kmlDocument.Descendants (XName.Get ("Placemark"' kmlNamespace))) {  	XElement name = placemarkElement.Element (XName.Get ("name"' kmlNamespace));  	XElement description = placemarkElement.Element (XName.Get ("description"' kmlNamespace));  	XElement point = placemarkElement.Element (XName.Get ("Point"' kmlNamespace));  	if (name != null && !string.IsNullOrWhiteSpace (name.Value)) {  		Item placemarkItem = importRoot.Add (ItemUtil.ProposeValidItemName (name.Value.Replace (":"' ""))' new TemplateItem (placemarkTemplate));  		using (new EditContext (placemarkItem)) {  			if (description != null && !string.IsNullOrWhiteSpace (description.Value)) {  				placemarkItem ["Description"] = description.Value;  			}  			if (point != null) {  				XElement coordinates = point.Element (XName.Get ("coordinates"' kmlNamespace));  				if (coordinates != null && !string.IsNullOrWhiteSpace (coordinates.Value)) {  					string[] splitCoordinates = coordinates.Value.Split (new[] {  						'''  					}' StringSplitOptions.RemoveEmptyEntries);  					if (splitCoordinates.Length > 0) {  						placemarkItem ["Longitude"] = splitCoordinates [0];  					}  					if (splitCoordinates.Length > 1) {  						placemarkItem ["Latitude"] = splitCoordinates [1];  					}  					if (splitCoordinates.Length > 2) {  						placemarkItem ["Altitude"] = splitCoordinates [2];  					}  				}  			}  		}  	}  }  
Magic Number,SampleSitecoreProject,SampleSitecoreLogic,C:\repos\hermanussen_Sitecore-FixtureDataProvider\SampleSitecoreProject\SampleSitecoreLogic.cs,ImportKml,The following statement contains a magic number: foreach (XElement placemarkElement in kmlDocument.Descendants (XName.Get ("Placemark"' kmlNamespace))) {  	XElement name = placemarkElement.Element (XName.Get ("name"' kmlNamespace));  	XElement description = placemarkElement.Element (XName.Get ("description"' kmlNamespace));  	XElement point = placemarkElement.Element (XName.Get ("Point"' kmlNamespace));  	if (name != null && !string.IsNullOrWhiteSpace (name.Value)) {  		Item placemarkItem = importRoot.Add (ItemUtil.ProposeValidItemName (name.Value.Replace (":"' ""))' new TemplateItem (placemarkTemplate));  		using (new EditContext (placemarkItem)) {  			if (description != null && !string.IsNullOrWhiteSpace (description.Value)) {  				placemarkItem ["Description"] = description.Value;  			}  			if (point != null) {  				XElement coordinates = point.Element (XName.Get ("coordinates"' kmlNamespace));  				if (coordinates != null && !string.IsNullOrWhiteSpace (coordinates.Value)) {  					string[] splitCoordinates = coordinates.Value.Split (new[] {  						'''  					}' StringSplitOptions.RemoveEmptyEntries);  					if (splitCoordinates.Length > 0) {  						placemarkItem ["Longitude"] = splitCoordinates [0];  					}  					if (splitCoordinates.Length > 1) {  						placemarkItem ["Latitude"] = splitCoordinates [1];  					}  					if (splitCoordinates.Length > 2) {  						placemarkItem ["Altitude"] = splitCoordinates [2];  					}  				}  			}  		}  	}  }  
Magic Number,SampleSitecoreProject,SampleSitecoreLogic,C:\repos\hermanussen_Sitecore-FixtureDataProvider\SampleSitecoreProject\SampleSitecoreLogic.cs,ImportKml,The following statement contains a magic number: if (name != null && !string.IsNullOrWhiteSpace (name.Value)) {  	Item placemarkItem = importRoot.Add (ItemUtil.ProposeValidItemName (name.Value.Replace (":"' ""))' new TemplateItem (placemarkTemplate));  	using (new EditContext (placemarkItem)) {  		if (description != null && !string.IsNullOrWhiteSpace (description.Value)) {  			placemarkItem ["Description"] = description.Value;  		}  		if (point != null) {  			XElement coordinates = point.Element (XName.Get ("coordinates"' kmlNamespace));  			if (coordinates != null && !string.IsNullOrWhiteSpace (coordinates.Value)) {  				string[] splitCoordinates = coordinates.Value.Split (new[] {  					'''  				}' StringSplitOptions.RemoveEmptyEntries);  				if (splitCoordinates.Length > 0) {  					placemarkItem ["Longitude"] = splitCoordinates [0];  				}  				if (splitCoordinates.Length > 1) {  					placemarkItem ["Latitude"] = splitCoordinates [1];  				}  				if (splitCoordinates.Length > 2) {  					placemarkItem ["Altitude"] = splitCoordinates [2];  				}  			}  		}  	}  }  
Magic Number,SampleSitecoreProject,SampleSitecoreLogic,C:\repos\hermanussen_Sitecore-FixtureDataProvider\SampleSitecoreProject\SampleSitecoreLogic.cs,ImportKml,The following statement contains a magic number: if (name != null && !string.IsNullOrWhiteSpace (name.Value)) {  	Item placemarkItem = importRoot.Add (ItemUtil.ProposeValidItemName (name.Value.Replace (":"' ""))' new TemplateItem (placemarkTemplate));  	using (new EditContext (placemarkItem)) {  		if (description != null && !string.IsNullOrWhiteSpace (description.Value)) {  			placemarkItem ["Description"] = description.Value;  		}  		if (point != null) {  			XElement coordinates = point.Element (XName.Get ("coordinates"' kmlNamespace));  			if (coordinates != null && !string.IsNullOrWhiteSpace (coordinates.Value)) {  				string[] splitCoordinates = coordinates.Value.Split (new[] {  					'''  				}' StringSplitOptions.RemoveEmptyEntries);  				if (splitCoordinates.Length > 0) {  					placemarkItem ["Longitude"] = splitCoordinates [0];  				}  				if (splitCoordinates.Length > 1) {  					placemarkItem ["Latitude"] = splitCoordinates [1];  				}  				if (splitCoordinates.Length > 2) {  					placemarkItem ["Altitude"] = splitCoordinates [2];  				}  			}  		}  	}  }  
Magic Number,SampleSitecoreProject,SampleSitecoreLogic,C:\repos\hermanussen_Sitecore-FixtureDataProvider\SampleSitecoreProject\SampleSitecoreLogic.cs,ImportKml,The following statement contains a magic number: using (new EditContext (placemarkItem)) {  	if (description != null && !string.IsNullOrWhiteSpace (description.Value)) {  		placemarkItem ["Description"] = description.Value;  	}  	if (point != null) {  		XElement coordinates = point.Element (XName.Get ("coordinates"' kmlNamespace));  		if (coordinates != null && !string.IsNullOrWhiteSpace (coordinates.Value)) {  			string[] splitCoordinates = coordinates.Value.Split (new[] {  				'''  			}' StringSplitOptions.RemoveEmptyEntries);  			if (splitCoordinates.Length > 0) {  				placemarkItem ["Longitude"] = splitCoordinates [0];  			}  			if (splitCoordinates.Length > 1) {  				placemarkItem ["Latitude"] = splitCoordinates [1];  			}  			if (splitCoordinates.Length > 2) {  				placemarkItem ["Altitude"] = splitCoordinates [2];  			}  		}  	}  }  
Magic Number,SampleSitecoreProject,SampleSitecoreLogic,C:\repos\hermanussen_Sitecore-FixtureDataProvider\SampleSitecoreProject\SampleSitecoreLogic.cs,ImportKml,The following statement contains a magic number: using (new EditContext (placemarkItem)) {  	if (description != null && !string.IsNullOrWhiteSpace (description.Value)) {  		placemarkItem ["Description"] = description.Value;  	}  	if (point != null) {  		XElement coordinates = point.Element (XName.Get ("coordinates"' kmlNamespace));  		if (coordinates != null && !string.IsNullOrWhiteSpace (coordinates.Value)) {  			string[] splitCoordinates = coordinates.Value.Split (new[] {  				'''  			}' StringSplitOptions.RemoveEmptyEntries);  			if (splitCoordinates.Length > 0) {  				placemarkItem ["Longitude"] = splitCoordinates [0];  			}  			if (splitCoordinates.Length > 1) {  				placemarkItem ["Latitude"] = splitCoordinates [1];  			}  			if (splitCoordinates.Length > 2) {  				placemarkItem ["Altitude"] = splitCoordinates [2];  			}  		}  	}  }  
Magic Number,SampleSitecoreProject,SampleSitecoreLogic,C:\repos\hermanussen_Sitecore-FixtureDataProvider\SampleSitecoreProject\SampleSitecoreLogic.cs,ImportKml,The following statement contains a magic number: if (point != null) {  	XElement coordinates = point.Element (XName.Get ("coordinates"' kmlNamespace));  	if (coordinates != null && !string.IsNullOrWhiteSpace (coordinates.Value)) {  		string[] splitCoordinates = coordinates.Value.Split (new[] {  			'''  		}' StringSplitOptions.RemoveEmptyEntries);  		if (splitCoordinates.Length > 0) {  			placemarkItem ["Longitude"] = splitCoordinates [0];  		}  		if (splitCoordinates.Length > 1) {  			placemarkItem ["Latitude"] = splitCoordinates [1];  		}  		if (splitCoordinates.Length > 2) {  			placemarkItem ["Altitude"] = splitCoordinates [2];  		}  	}  }  
Magic Number,SampleSitecoreProject,SampleSitecoreLogic,C:\repos\hermanussen_Sitecore-FixtureDataProvider\SampleSitecoreProject\SampleSitecoreLogic.cs,ImportKml,The following statement contains a magic number: if (point != null) {  	XElement coordinates = point.Element (XName.Get ("coordinates"' kmlNamespace));  	if (coordinates != null && !string.IsNullOrWhiteSpace (coordinates.Value)) {  		string[] splitCoordinates = coordinates.Value.Split (new[] {  			'''  		}' StringSplitOptions.RemoveEmptyEntries);  		if (splitCoordinates.Length > 0) {  			placemarkItem ["Longitude"] = splitCoordinates [0];  		}  		if (splitCoordinates.Length > 1) {  			placemarkItem ["Latitude"] = splitCoordinates [1];  		}  		if (splitCoordinates.Length > 2) {  			placemarkItem ["Altitude"] = splitCoordinates [2];  		}  	}  }  
Magic Number,SampleSitecoreProject,SampleSitecoreLogic,C:\repos\hermanussen_Sitecore-FixtureDataProvider\SampleSitecoreProject\SampleSitecoreLogic.cs,ImportKml,The following statement contains a magic number: if (coordinates != null && !string.IsNullOrWhiteSpace (coordinates.Value)) {  	string[] splitCoordinates = coordinates.Value.Split (new[] {  		'''  	}' StringSplitOptions.RemoveEmptyEntries);  	if (splitCoordinates.Length > 0) {  		placemarkItem ["Longitude"] = splitCoordinates [0];  	}  	if (splitCoordinates.Length > 1) {  		placemarkItem ["Latitude"] = splitCoordinates [1];  	}  	if (splitCoordinates.Length > 2) {  		placemarkItem ["Altitude"] = splitCoordinates [2];  	}  }  
Magic Number,SampleSitecoreProject,SampleSitecoreLogic,C:\repos\hermanussen_Sitecore-FixtureDataProvider\SampleSitecoreProject\SampleSitecoreLogic.cs,ImportKml,The following statement contains a magic number: if (coordinates != null && !string.IsNullOrWhiteSpace (coordinates.Value)) {  	string[] splitCoordinates = coordinates.Value.Split (new[] {  		'''  	}' StringSplitOptions.RemoveEmptyEntries);  	if (splitCoordinates.Length > 0) {  		placemarkItem ["Longitude"] = splitCoordinates [0];  	}  	if (splitCoordinates.Length > 1) {  		placemarkItem ["Latitude"] = splitCoordinates [1];  	}  	if (splitCoordinates.Length > 2) {  		placemarkItem ["Altitude"] = splitCoordinates [2];  	}  }  
Magic Number,SampleSitecoreProject,SampleSitecoreLogic,C:\repos\hermanussen_Sitecore-FixtureDataProvider\SampleSitecoreProject\SampleSitecoreLogic.cs,ImportKml,The following statement contains a magic number: if (splitCoordinates.Length > 2) {  	placemarkItem ["Altitude"] = splitCoordinates [2];  }  
Magic Number,SampleSitecoreProject,SampleSitecoreLogic,C:\repos\hermanussen_Sitecore-FixtureDataProvider\SampleSitecoreProject\SampleSitecoreLogic.cs,ImportKml,The following statement contains a magic number: if (splitCoordinates.Length > 2) {  	placemarkItem ["Altitude"] = splitCoordinates [2];  }  
Magic Number,SampleSitecoreProject,SampleSitecoreLogic,C:\repos\hermanussen_Sitecore-FixtureDataProvider\SampleSitecoreProject\SampleSitecoreLogic.cs,ImportKml,The following statement contains a magic number: placemarkItem ["Altitude"] = splitCoordinates [2];  
