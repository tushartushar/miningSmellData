Implementation smell,Namespace,Class,File,Method,Description
Long Statement,RedisMemoryCacheInvalidation,InvalidationManager,C:\repos\Cybermaxs_RedisMemoryCacheInvalidation\src\RedisMemoryCacheInvalidation\InvalidationManager.cs,CreateChangeMonitor,The length of the statement  "                throw new InvalidOperationException("Could not create a change monitor when InvalidationStrategy is DefaultMemoryCacheRemoval"); " is 128.
Long Statement,RedisMemoryCacheInvalidation.Core,NotificationManager,C:\repos\Cybermaxs_RedisMemoryCacheInvalidation\src\RedisMemoryCacheInvalidation\Core\NotificationManager.cs,Notify,The length of the statement  "            var subscriptions = SubscriptionsByTopic.GetOrAdd(topicKey' new SynchronizedCollection<INotificationObserver<string>>()); " is 121.
Long Statement,RedisMemoryCacheInvalidation.Core,NotificationManager,C:\repos\Cybermaxs_RedisMemoryCacheInvalidation\src\RedisMemoryCacheInvalidation\Core\NotificationManager.cs,Subscribe,The length of the statement  "            var subscriptions = SubscriptionsByTopic.GetOrAdd(topicKey' new SynchronizedCollection<INotificationObserver<string>>()); " is 121.
Long Statement,RedisMemoryCacheInvalidation.Core,RedisNotificationBus,C:\repos\Cybermaxs_RedisMemoryCacheInvalidation\src\RedisMemoryCacheInvalidation\Core\RedisNotificationBus.cs,ProcessInvalidationMessage,The length of the statement  "            if ((this.InvalidationStrategy & InvalidationStrategyType.AutoCacheRemoval) == InvalidationStrategyType.AutoCacheRemoval) " is 121.
Long Statement,RedisMemoryCacheInvalidation.Redis,RedisConnectionBase,C:\repos\Cybermaxs_RedisMemoryCacheInvalidation\src\RedisMemoryCacheInvalidation\Redis\RedisConnectionBase.cs,GetServer,The length of the statement  "                if (result != null) throw new InvalidOperationException("Requires exactly one master endpoint (found " + server.EndPoint + " and " + result.EndPoint + ")"); " is 156.
Long Statement,RedisMemoryCacheInvalidation.Redis,StandaloneRedisConnection,C:\repos\Cybermaxs_RedisMemoryCacheInvalidation\src\RedisMemoryCacheInvalidation\Redis\StandaloneRedisConnection.cs,Connect,The length of the statement  "                this.options.ClientName = "InvalidationClient_" + System.Environment.MachineName + "_" + Assembly.GetCallingAssembly().GetName().Version; " is 137.
Magic Number,RedisMemoryCacheInvalidation.Core,RedisNotificationBus,C:\repos\Cybermaxs_RedisMemoryCacheInvalidation\src\RedisMemoryCacheInvalidation\Core\RedisNotificationBus.cs,OnKeySpaceNotificationMessage,The following statement contains a magic number: var prefix = pattern.ToString().Substring(0' 10);
Magic Number,RedisMemoryCacheInvalidation.Redis,StandaloneRedisConnection,C:\repos\Cybermaxs_RedisMemoryCacheInvalidation\src\RedisMemoryCacheInvalidation\Redis\StandaloneRedisConnection.cs,Connect,The following statement contains a magic number: if (this.multiplexer == null)              {                  //myope overrides here                  this.options.ConnectTimeout = 5000;                  this.options.ConnectRetry = 3;                  this.options.DefaultVersion = new Version("2.8.0");                  this.options.KeepAlive = 90;                  this.options.AbortOnConnectFail = false;                  this.options.ClientName = "InvalidationClient_" + System.Environment.MachineName + "_" + Assembly.GetCallingAssembly().GetName().Version;                    this.multiplexer = ConnectionMultiplexer.Connect(options);              }
Magic Number,RedisMemoryCacheInvalidation.Redis,StandaloneRedisConnection,C:\repos\Cybermaxs_RedisMemoryCacheInvalidation\src\RedisMemoryCacheInvalidation\Redis\StandaloneRedisConnection.cs,Connect,The following statement contains a magic number: if (this.multiplexer == null)              {                  //myope overrides here                  this.options.ConnectTimeout = 5000;                  this.options.ConnectRetry = 3;                  this.options.DefaultVersion = new Version("2.8.0");                  this.options.KeepAlive = 90;                  this.options.AbortOnConnectFail = false;                  this.options.ClientName = "InvalidationClient_" + System.Environment.MachineName + "_" + Assembly.GetCallingAssembly().GetName().Version;                    this.multiplexer = ConnectionMultiplexer.Connect(options);              }
Magic Number,RedisMemoryCacheInvalidation.Redis,StandaloneRedisConnection,C:\repos\Cybermaxs_RedisMemoryCacheInvalidation\src\RedisMemoryCacheInvalidation\Redis\StandaloneRedisConnection.cs,Connect,The following statement contains a magic number: if (this.multiplexer == null)              {                  //myope overrides here                  this.options.ConnectTimeout = 5000;                  this.options.ConnectRetry = 3;                  this.options.DefaultVersion = new Version("2.8.0");                  this.options.KeepAlive = 90;                  this.options.AbortOnConnectFail = false;                  this.options.ClientName = "InvalidationClient_" + System.Environment.MachineName + "_" + Assembly.GetCallingAssembly().GetName().Version;                    this.multiplexer = ConnectionMultiplexer.Connect(options);              }
