Implementation smell,Namespace,Class,File,Method,Description
Long Statement,RedisMemoryCacheInvalidation.Tests.Core,RedisNotificationBusTests,D:\research\architectureSmells\repos\Cybermaxs_RedisMemoryCacheInvalidation\tests\RedisMemoryCacheInvalidation.Tests\Core\RedisNotificationBusTests.cs,RedisNotificationBus_WhenStart_ShouldConnectAndSubscribe,The length of the statement  "            this.MockOfConnection.Verify(c => c.Subscribe(Constants.DEFAULT_INVALIDATION_CHANNEL' It.IsAny<Action<RedisChannel' RedisValue>>())' Times.Once); " is 145.
Long Statement,RedisMemoryCacheInvalidation.Tests.Core,RedisNotificationBusTests,D:\research\architectureSmells\repos\Cybermaxs_RedisMemoryCacheInvalidation\tests\RedisMemoryCacheInvalidation.Tests\Core\RedisNotificationBusTests.cs,RedisNotificationBus_WhenInvalidation_ShouldRemoveFromDefaultCache,The length of the statement  "            var bus = new RedisNotificationBus("localhost:6379"' new InvalidationSettings() { TargetCache = lcache' InvalidationStrategy = InvalidationStrategyType.AutoCacheRemoval }); " is 172.
Long Statement,RedisMemoryCacheInvalidation.Tests.Core,RedisNotificationBusTests,D:\research\architectureSmells\repos\Cybermaxs_RedisMemoryCacheInvalidation\tests\RedisMemoryCacheInvalidation.Tests\Core\RedisNotificationBusTests.cs,RedisNotificationBus_WhenInvalidation_ShouldRemoveFromDefaultCache,The length of the statement  "            lcache.Add("mykey"' DateTime.UtcNow' new CacheItemPolicy() { AbsoluteExpiration = DateTime.UtcNow.AddDays(1)' ChangeMonitors = { monitor } }); " is 142.
Long Statement,RedisMemoryCacheInvalidation.Tests.Core,RedisNotificationBusTests,D:\research\architectureSmells\repos\Cybermaxs_RedisMemoryCacheInvalidation\tests\RedisMemoryCacheInvalidation.Tests\Core\RedisNotificationBusTests.cs,RedisNotificationBus_WhenInvalidation_ShouldDisposeMonitor,The length of the statement  "            var bus = new RedisNotificationBus("localhost:6379"' new InvalidationSettings() { TargetCache = lcache' InvalidationStrategy = InvalidationStrategyType.ChangeMonitor }); " is 169.
Long Statement,RedisMemoryCacheInvalidation.Tests.Core,RedisNotificationBusTests,D:\research\architectureSmells\repos\Cybermaxs_RedisMemoryCacheInvalidation\tests\RedisMemoryCacheInvalidation.Tests\Core\RedisNotificationBusTests.cs,RedisNotificationBus_WhenInvalidation_ShouldDisposeMonitor,The length of the statement  "            lcache.Add("mykey"' DateTime.UtcNow' new CacheItemPolicy() { AbsoluteExpiration = DateTime.UtcNow.AddDays(1)' ChangeMonitors = { monitor } }); " is 142.
Long Statement,RedisMemoryCacheInvalidation.Tests.Core,RedisNotificationBusTests,D:\research\architectureSmells\repos\Cybermaxs_RedisMemoryCacheInvalidation\tests\RedisMemoryCacheInvalidation.Tests\Core\RedisNotificationBusTests.cs,RedisNotificationBus_WhenInvalidation_ShouldInvokeCallback,The length of the statement  "            var bus = new RedisNotificationBus("localhost:6379"' new InvalidationSettings() { InvalidationStrategy = InvalidationStrategyType.External' InvalidationCallback = cb }); " is 169.
Long Statement,RedisMemoryCacheInvalidation.Tests.Core,RedisNotificationBusTests,D:\research\architectureSmells\repos\Cybermaxs_RedisMemoryCacheInvalidation\tests\RedisMemoryCacheInvalidation.Tests\Core\RedisNotificationBusTests.cs,RedisNotificationBus_WhenInvalidation_ShouldInvokeCallback,The length of the statement  "            lcache.Add("mykey"' DateTime.UtcNow' new CacheItemPolicy() { AbsoluteExpiration = DateTime.UtcNow.AddDays(1)' ChangeMonitors = { monitor } }); " is 142.
Long Statement,RedisMemoryCacheInvalidation.Tests.Monitor,RedisChangeMonitorTest,D:\research\architectureSmells\repos\Cybermaxs_RedisMemoryCacheInvalidation\tests\RedisMemoryCacheInvalidation.Tests\Monitor\RedisChangeMonitorTest.cs,WhenExceptionInCtor_ShouldBeDisposed,The length of the statement  "            this.mockOfBus.Setup(e => e.Subscribe(It.IsAny<string>()' It.IsAny<INotificationObserver<string>>())).Throws<InvalidOperationException>(); " is 138.
Magic Number,RedisMemoryCacheInvalidation.Tests.Redis,ExistingRedisConnectionTests,D:\research\architectureSmells\repos\Cybermaxs_RedisMemoryCacheInvalidation\tests\RedisMemoryCacheInvalidation.Tests\Redis\ExistingRedisConnectionTests.cs,ExistingRedisConnectionTests,The following statement contains a magic number: mockOfSubscriber.Setup(s => s.PublishAsync(It.IsAny<RedisChannel>()' It.IsAny<RedisValue>()' It.IsAny<CommandFlags>())).ReturnsAsync(10L);
Magic Number,RedisMemoryCacheInvalidation.Tests.Redis,ExistingRedisConnectionTests,D:\research\architectureSmells\repos\Cybermaxs_RedisMemoryCacheInvalidation\tests\RedisMemoryCacheInvalidation.Tests\Redis\ExistingRedisConnectionTests.cs,WhenPublishAsync_ShouldPublishMessages,The following statement contains a magic number: Assert.Equal(10L' published);
Magic Number,RedisMemoryCacheInvalidation.Tests.Fixtures,RedisServerFixture,D:\research\architectureSmells\repos\Cybermaxs_RedisMemoryCacheInvalidation\tests\RedisMemoryCacheInvalidation.Tests\Fixture\RedisServerFixture.cs,RedisServerFixture,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,RedisMemoryCacheInvalidation.Integration.Tests,InvalidationTests,D:\research\architectureSmells\repos\Cybermaxs_RedisMemoryCacheInvalidation\tests\RedisMemoryCacheInvalidation.Tests\Integration\InvalidationTests.cs,InvalidationTests,The following statement contains a magic number: localCache.Trim(100);
Magic Number,RedisMemoryCacheInvalidation.Integration.Tests,InvalidationTests,D:\research\architectureSmells\repos\Cybermaxs_RedisMemoryCacheInvalidation\tests\RedisMemoryCacheInvalidation.Tests\Integration\InvalidationTests.cs,MultiplesDeps_WhenChangeMonitor_WhenInvalidation_ShouldRemoved,The following statement contains a magic number: Assert.Equal(2' localCache.GetCount());
Magic Number,RedisMemoryCacheInvalidation.Integration.Tests,InvalidationTests,D:\research\architectureSmells\repos\Cybermaxs_RedisMemoryCacheInvalidation\tests\RedisMemoryCacheInvalidation.Tests\Integration\InvalidationTests.cs,MultiplesDeps_WhenChangeMonitor_WhenInvalidation_ShouldRemoved,The following statement contains a magic number: Thread.Sleep(50);
Magic Number,RedisMemoryCacheInvalidation.Integration.Tests,InvalidationTests,D:\research\architectureSmells\repos\Cybermaxs_RedisMemoryCacheInvalidation\tests\RedisMemoryCacheInvalidation.Tests\Integration\InvalidationTests.cs,MultiplesDeps_WhenImplicitRemoval_WhenInvalidation_ShouldRemoved,The following statement contains a magic number: Assert.Equal(2' localCache.GetCount());
Magic Number,RedisMemoryCacheInvalidation.Integration.Tests,InvalidationTests,D:\research\architectureSmells\repos\Cybermaxs_RedisMemoryCacheInvalidation\tests\RedisMemoryCacheInvalidation.Tests\Integration\InvalidationTests.cs,MultiplesDeps_WhenImplicitRemoval_WhenInvalidation_ShouldRemoved,The following statement contains a magic number: Thread.Sleep(50);
Magic Number,RedisMemoryCacheInvalidation.Integration.Tests,InvalidationTests,D:\research\architectureSmells\repos\Cybermaxs_RedisMemoryCacheInvalidation\tests\RedisMemoryCacheInvalidation.Tests\Integration\InvalidationTests.cs,MultiplesDeps_WhenSpaceNotification_ShouldBeRemoved,The following statement contains a magic number: Thread.Sleep(200);
Magic Number,RedisMemoryCacheInvalidation.Tests.Core,RedisNotificationBusTests,D:\research\architectureSmells\repos\Cybermaxs_RedisMemoryCacheInvalidation\tests\RedisMemoryCacheInvalidation.Tests\Core\RedisNotificationBusTests.cs,RedisNotificationBusTests,The following statement contains a magic number: this.MockOfConnection.Setup(c => c.PublishAsync(It.IsAny<string>()' It.IsAny<string>())).ReturnsAsync(5);
Magic Number,RedisMemoryCacheInvalidation.Tests.Core,RedisNotificationBusTests,D:\research\architectureSmells\repos\Cybermaxs_RedisMemoryCacheInvalidation\tests\RedisMemoryCacheInvalidation.Tests\Core\RedisNotificationBusTests.cs,RedisNotificationBus_WhenNotify_ShouldPublishAsync,The following statement contains a magic number: Assert.Equal(5' notifyTask.Result);
Magic Number,RedisMemoryCacheInvalidation.Tests.Core,RedisNotificationBusTests,D:\research\architectureSmells\repos\Cybermaxs_RedisMemoryCacheInvalidation\tests\RedisMemoryCacheInvalidation.Tests\Core\RedisNotificationBusTests.cs,RedisNotificationBus_WhenStop_ShouldDisconnect,The following statement contains a magic number: Assert.Equal(5' notifyTask.Result);
Magic Number,RedisMemoryCacheInvalidation.Tests.Core,UnsubscriberTests,D:\research\architectureSmells\repos\Cybermaxs_RedisMemoryCacheInvalidation\tests\RedisMemoryCacheInvalidation.Tests\Core\UnsubscriberTests.cs,WhenUnsubscribe_ShouldBeDisposed,The following statement contains a magic number: Assert.Equal(2' obs.Count);
