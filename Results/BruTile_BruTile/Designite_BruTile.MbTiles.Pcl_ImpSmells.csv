Implementation smell,Namespace,Class,File,Method,Description
Long Statement,BruTile,MbTilesTileSource,C:\repos\BruTile_BruTile\BruTile.MbTiles.Pcl\MbTilesTileSource.cs,ReadZoomLevelsFromTilesTable,The length of the statement  "                var sql = $"select min(tile_column) AS tc_min' max(tile_column) AS tc_max' min(tile_row) AS tr_min' max(tile_row) AS tr_max from {tableName} where zoom_level = {zoomLevel};"; " is 174.
Magic Number,BruTile,MbTilesTileSource,C:\repos\BruTile_BruTile\BruTile.MbTiles.Pcl\MbTilesTileSource.cs,ReadExtent,The following statement contains a magic number: try              {                    var extentString = connection.ExecuteScalar<string>(sql' "bounds");                  var components = extentString.Split(''');                  var extent = new Extent(                      double.Parse(components[0]' NumberFormatInfo.InvariantInfo)'                      double.Parse(components[1]' NumberFormatInfo.InvariantInfo)'                      double.Parse(components[2]' NumberFormatInfo.InvariantInfo)'                      double.Parse(components[3]' NumberFormatInfo.InvariantInfo)                      );                    return ToMercator(extent);                }              catch (Exception)              {                  return new Extent(-20037508.342789' -20037508.342789' 20037508.342789' 20037508.342789);              }
Magic Number,BruTile,MbTilesTileSource,C:\repos\BruTile_BruTile\BruTile.MbTiles.Pcl\MbTilesTileSource.cs,ReadExtent,The following statement contains a magic number: try              {                    var extentString = connection.ExecuteScalar<string>(sql' "bounds");                  var components = extentString.Split(''');                  var extent = new Extent(                      double.Parse(components[0]' NumberFormatInfo.InvariantInfo)'                      double.Parse(components[1]' NumberFormatInfo.InvariantInfo)'                      double.Parse(components[2]' NumberFormatInfo.InvariantInfo)'                      double.Parse(components[3]' NumberFormatInfo.InvariantInfo)                      );                    return ToMercator(extent);                }              catch (Exception)              {                  return new Extent(-20037508.342789' -20037508.342789' 20037508.342789' 20037508.342789);              }
Magic Number,BruTile,MbTilesTileSource,C:\repos\BruTile_BruTile\BruTile.MbTiles.Pcl\MbTilesTileSource.cs,ReadExtent,The following statement contains a magic number: try              {                    var extentString = connection.ExecuteScalar<string>(sql' "bounds");                  var components = extentString.Split(''');                  var extent = new Extent(                      double.Parse(components[0]' NumberFormatInfo.InvariantInfo)'                      double.Parse(components[1]' NumberFormatInfo.InvariantInfo)'                      double.Parse(components[2]' NumberFormatInfo.InvariantInfo)'                      double.Parse(components[3]' NumberFormatInfo.InvariantInfo)                      );                    return ToMercator(extent);                }              catch (Exception)              {                  return new Extent(-20037508.342789' -20037508.342789' 20037508.342789' 20037508.342789);              }
Magic Number,BruTile,MbTilesTileSource,C:\repos\BruTile_BruTile\BruTile.MbTiles.Pcl\MbTilesTileSource.cs,ReadExtent,The following statement contains a magic number: try              {                    var extentString = connection.ExecuteScalar<string>(sql' "bounds");                  var components = extentString.Split(''');                  var extent = new Extent(                      double.Parse(components[0]' NumberFormatInfo.InvariantInfo)'                      double.Parse(components[1]' NumberFormatInfo.InvariantInfo)'                      double.Parse(components[2]' NumberFormatInfo.InvariantInfo)'                      double.Parse(components[3]' NumberFormatInfo.InvariantInfo)                      );                    return ToMercator(extent);                }              catch (Exception)              {                  return new Extent(-20037508.342789' -20037508.342789' 20037508.342789' 20037508.342789);              }
Magic Number,BruTile,MbTilesTileSource,C:\repos\BruTile_BruTile\BruTile.MbTiles.Pcl\MbTilesTileSource.cs,ReadExtent,The following statement contains a magic number: try              {                    var extentString = connection.ExecuteScalar<string>(sql' "bounds");                  var components = extentString.Split(''');                  var extent = new Extent(                      double.Parse(components[0]' NumberFormatInfo.InvariantInfo)'                      double.Parse(components[1]' NumberFormatInfo.InvariantInfo)'                      double.Parse(components[2]' NumberFormatInfo.InvariantInfo)'                      double.Parse(components[3]' NumberFormatInfo.InvariantInfo)                      );                    return ToMercator(extent);                }              catch (Exception)              {                  return new Extent(-20037508.342789' -20037508.342789' 20037508.342789' 20037508.342789);              }
Magic Number,BruTile,MbTilesTileSource,C:\repos\BruTile_BruTile\BruTile.MbTiles.Pcl\MbTilesTileSource.cs,ReadExtent,The following statement contains a magic number: try              {                    var extentString = connection.ExecuteScalar<string>(sql' "bounds");                  var components = extentString.Split(''');                  var extent = new Extent(                      double.Parse(components[0]' NumberFormatInfo.InvariantInfo)'                      double.Parse(components[1]' NumberFormatInfo.InvariantInfo)'                      double.Parse(components[2]' NumberFormatInfo.InvariantInfo)'                      double.Parse(components[3]' NumberFormatInfo.InvariantInfo)                      );                    return ToMercator(extent);                }              catch (Exception)              {                  return new Extent(-20037508.342789' -20037508.342789' 20037508.342789' 20037508.342789);              }
Magic Number,BruTile,MbTilesTileSource,C:\repos\BruTile_BruTile\BruTile.MbTiles.Pcl\MbTilesTileSource.cs,ToMercator,The following statement contains a magic number: if ((Math.Abs(mercatorXLon) > 180 || Math.Abs(mercatorYLat) > 90))                  return;
Magic Number,BruTile,MbTilesTileSource,C:\repos\BruTile_BruTile\BruTile.MbTiles.Pcl\MbTilesTileSource.cs,ToMercator,The following statement contains a magic number: if ((Math.Abs(mercatorXLon) > 180 || Math.Abs(mercatorYLat) > 90))                  return;
Magic Number,BruTile,MbTilesTileSource,C:\repos\BruTile_BruTile\BruTile.MbTiles.Pcl\MbTilesTileSource.cs,ToMercator,The following statement contains a magic number: double num = mercatorXLon * 0.017453292519943295;
Magic Number,BruTile,MbTilesTileSource,C:\repos\BruTile_BruTile\BruTile.MbTiles.Pcl\MbTilesTileSource.cs,ToMercator,The following statement contains a magic number: double x = 6378137.0 * num;
Magic Number,BruTile,MbTilesTileSource,C:\repos\BruTile_BruTile\BruTile.MbTiles.Pcl\MbTilesTileSource.cs,ToMercator,The following statement contains a magic number: double a = mercatorYLat * 0.017453292519943295;
Magic Number,BruTile,MbTilesTileSource,C:\repos\BruTile_BruTile\BruTile.MbTiles.Pcl\MbTilesTileSource.cs,ToMercator,The following statement contains a magic number: mercatorYLat = 3189068.5 * Math.Log((1.0 + Math.Sin(a)) / (1.0 - Math.Sin(a)));
