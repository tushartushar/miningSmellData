Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,BruTile.Samples.VectorTileToBitmap,HttpVectorTileSource,D:\research\architectureSmells\repos\BruTile_BruTile\Samples\BruTile.Samples.VectorTileToBitmap\HttpVectorTileSource.cs,HttpVectorTileSource,The method has 7 parameters. Parameters: tileSchema' urlFormatter' serverNodes' apiKey' name' persistentCache' tileFetcher
Long Parameter List,BruTile.Samples.VectorTileToBitmap,GeoJSONRenderer,D:\research\architectureSmells\repos\BruTile_BruTile\Samples\BruTile.Samples.VectorTileToBitmap\GeoJsonRenderer.cs,CreateTransformMatrix,The method has 6 parameters. Parameters: canvasWidth' canvasHeight' minX' minY' width' height
Long Statement,BruTile.Samples.VectorTileToBitmap,GeoJSONToOpenTKRenderer,D:\research\architectureSmells\repos\BruTile_BruTile\Samples\BruTile.Samples.VectorTileToBitmap\GeoJsonToOpenTKRenderer.cs,Render,The length of the statement  "                // There needs to be a gamewindow even though we don't write to screen. It is created but not used explicitly in our code. " is 122.
Long Statement,BruTile.Samples.VectorTileToBitmap,GeoJSONToOpenTKRenderer,D:\research\architectureSmells\repos\BruTile_BruTile\Samples\BruTile.Samples.VectorTileToBitmap\GeoJsonToOpenTKRenderer.cs,Set2DViewport,The length of the statement  "            OpenTK.Graphics.OpenGL.GL.Ortho(0' pixelWidth' pixelHeight' 0' -1' 1); // This has no effect: OpenTK.Graphics.ES11.GL.Ortho(0' width' height' 0' 0' 1);  " is 151.
Long Statement,BruTile.Samples.VectorTileToBitmap,GraphicsContextToBitmapConverter,D:\research\architectureSmells\repos\BruTile_BruTile\Samples\BruTile.Samples.VectorTileToBitmap\GraphicsContextToBitmapConverter.cs,GrabScreenshot,The length of the statement  "            BitmapData data = bitmap.LockBits(new Rectangle(0' 0' width' height)' ImageLockMode.WriteOnly' System.Drawing.Imaging.PixelFormat.Format24bppRgb); " is 146.
Long Statement,BruTile.Samples.VectorTileToBitmap,GeoJSONRenderer,D:\research\architectureSmells\repos\BruTile_BruTile\Samples\BruTile.Samples.VectorTileToBitmap\GeoJsonRenderer.cs,Render,The length of the statement  "                                canvas.Transform = CreateTransformMatrix(_canvasWidth' _canvasHeight' _extentMinX' _extentMinY' _extentWidth' _extentHeight); " is 125.
Magic Number,BruTile.Samples.VectorTileToBitmap,GeoJSONToOpenTKRenderer,D:\research\architectureSmells\repos\BruTile_BruTile\Samples\BruTile.Samples.VectorTileToBitmap\GeoJsonToOpenTKRenderer.cs,GeoJSONToOpenTKRenderer,The following statement contains a magic number: _extentWidth = (float)boundingBox[2] - _extentMinX;
Magic Number,BruTile.Samples.VectorTileToBitmap,GeoJSONToOpenTKRenderer,D:\research\architectureSmells\repos\BruTile_BruTile\Samples\BruTile.Samples.VectorTileToBitmap\GeoJsonToOpenTKRenderer.cs,GeoJSONToOpenTKRenderer,The following statement contains a magic number: _extentHeight = (float)boundingBox[3] - _extentMinY;
Magic Number,BruTile.Samples.VectorTileToBitmap,GeoJSONToOpenTKRenderer,D:\research\architectureSmells\repos\BruTile_BruTile\Samples\BruTile.Samples.VectorTileToBitmap\GeoJsonToOpenTKRenderer.cs,RenderPolygon,The following statement contains a magic number: GL.Color4(0' 0' 0' 255);
Magic Number,BruTile.Samples.VectorTileToBitmap,GeoJSONToOpenTKRenderer,D:\research\architectureSmells\repos\BruTile_BruTile\Samples\BruTile.Samples.VectorTileToBitmap\GeoJsonToOpenTKRenderer.cs,RenderPolygon,The following statement contains a magic number: GL.VertexPointer(2' All.Float' 0' points);
Magic Number,BruTile.Samples.VectorTileToBitmap,GeoJSONToOpenTKRenderer,D:\research\architectureSmells\repos\BruTile_BruTile\Samples\BruTile.Samples.VectorTileToBitmap\GeoJsonToOpenTKRenderer.cs,RenderPolygon,The following statement contains a magic number: GL.DrawArrays(All.LineLoop' 0' points.Length / 2);
Magic Number,BruTile.Samples.VectorTileToBitmap,GeoJSONToOpenTKRenderer,D:\research\architectureSmells\repos\BruTile_BruTile\Samples\BruTile.Samples.VectorTileToBitmap\GeoJsonToOpenTKRenderer.cs,ToOpenTK,The following statement contains a magic number: const int dimensions = 2;
Magic Number,BruTile.Samples.VectorTileToBitmap,GeoJSONToOpenTKRenderer,D:\research\architectureSmells\repos\BruTile_BruTile\Samples\BruTile.Samples.VectorTileToBitmap\GeoJsonToOpenTKRenderer.cs,ToOpenTK,The following statement contains a magic number: points[counter * 2 + 0] = point.X;
Magic Number,BruTile.Samples.VectorTileToBitmap,GeoJSONToOpenTKRenderer,D:\research\architectureSmells\repos\BruTile_BruTile\Samples\BruTile.Samples.VectorTileToBitmap\GeoJsonToOpenTKRenderer.cs,ToOpenTK,The following statement contains a magic number: points[counter * 2 + 1] = point.Y;
Magic Number,BruTile.Samples.VectorTileToBitmap,SphericalMercator,D:\research\architectureSmells\repos\BruTile_BruTile\Samples\BruTile.Samples.VectorTileToBitmap\SphericalMercator.cs,FromLonLat,The following statement contains a magic number: var y = Radius * Math.Log(Math.Tan(Math.PI * 0.25 + latRadians * 0.5));
Magic Number,BruTile.Samples.VectorTileToBitmap,SphericalMercator,D:\research\architectureSmells\repos\BruTile_BruTile\Samples\BruTile.Samples.VectorTileToBitmap\SphericalMercator.cs,FromLonLat,The following statement contains a magic number: var y = Radius * Math.Log(Math.Tan(Math.PI * 0.25 + latRadians * 0.5));
Magic Number,BruTile.Samples.VectorTileToBitmap,SphericalMercator,D:\research\architectureSmells\repos\BruTile_BruTile\Samples\BruTile.Samples.VectorTileToBitmap\SphericalMercator.cs,ToLonLat,The following statement contains a magic number: var latRadians = HalfPi - 2 * Math.Atan(ts);
Magic Number,BruTile.Samples.VectorTileToBitmap,GeoJSONRenderer,D:\research\architectureSmells\repos\BruTile_BruTile\Samples\BruTile.Samples.VectorTileToBitmap\GeoJsonRenderer.cs,GeoJSONRenderer,The following statement contains a magic number: _extentWidth = (float)boundingBox[2] -_extentMinX;
Magic Number,BruTile.Samples.VectorTileToBitmap,GeoJSONRenderer,D:\research\architectureSmells\repos\BruTile_BruTile\Samples\BruTile.Samples.VectorTileToBitmap\GeoJsonRenderer.cs,GeoJSONRenderer,The following statement contains a magic number: _extentHeight = (float)boundingBox[3] - _extentMinY;
