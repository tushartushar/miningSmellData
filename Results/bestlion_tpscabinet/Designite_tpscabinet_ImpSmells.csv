Implementation smell,Namespace,Class,File,Method,Description
Long Method,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The method has 125 lines of code.
Complex Method,tpscabinet,App,C:\repos\bestlion_tpscabinet\tpscabinet\App.cs,SetNotifyWindowsPos,Cyclomatic complexity of the method is 16
Complex Method,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,Cyclomatic complexity of the method is 15
Complex Method,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,Cyclomatic complexity of the method is 26
Long Statement,tpscabinet,App,C:\repos\bestlion_tpscabinet\tpscabinet\App.cs,UpdateInfo,The length of the statement  "			if (!NotifyFrm.Visible && Properties.Settings.Default.PaymentNotify && (DateTime.Now - this.InfoNotifyWasShown ["PaymentNotify"]).TotalHours >= 4 && DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) == DateTime.Now.Day) { " is 232.
Long Statement,tpscabinet,App,C:\repos\bestlion_tpscabinet\tpscabinet\App.cs,UpdateInfo,The length of the statement  "			if (!NotifyFrm.Visible && Properties.Settings.Default.PackageTimeoutNotify && tps_cabinet.TraffLeft == 0 && tps_cabinet.HasPackage && tps_cabinet.Packages [0].TotalHoursLeft < 24 && (DateTime.Now - this.InfoNotifyWasShown ["PackageTimeoutNotify"]).TotalHours >= 4) { " is 266.
Long Statement,tpscabinet,App,C:\repos\bestlion_tpscabinet\tpscabinet\App.cs,UpdateInfo,The length of the statement  "			if (!NotifyFrm.Visible && Properties.Settings.Default.TraffNotify && (DateTime.Now - this.InfoNotifyWasShown ["TraffNotify"]).TotalHours >= 4 && tps_cabinet.LastUpdate != DateTime.MinValue && ((tps_cabinet.TraffLeft != 0 && tps_cabinet.TraffLeft < Properties.Settings.Default.TraffNotifyLimit) || (tps_cabinet.TraffLeft == 0 && tps_cabinet.HasPackage && tps_cabinet.Packages [0].TraffLeft < Properties.Settings.Default.TraffNotifyLimit))) { " is 440.
Long Statement,tpscabinet,App,C:\repos\bestlion_tpscabinet\tpscabinet\App.cs,UpdateInfo,The length of the statement  "					"\r\nОстаток трафика меньше установленного лимита (" + ((tps_cabinet.TraffLeft != 0) ? tps_cabinet.TraffLeft : tps_cabinet.Packages [0].TraffLeft) + " Мб)\r\n\r\n"' " is 164.
Long Statement,tpscabinet,CookieWebClient,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,GetWebRequest,The length of the statement  "	request.UserAgent = "Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/534.7 (KHTML' like Gecko) Chrome/7.0.517.41 Safari/534.7"; " is 139.
Long Statement,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The length of the statement  "			float.TryParse (GetCabinetVal (@"traffic\s*:\s*'Использовано''\s*value:\s*(\d+(?:\.\d{1'2})?)\s*}")' out this.TraffUsed); " is 121.
Long Statement,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The length of the statement  "			float.TryParse (GetCabinetVal (@"<strong\s+class=""balance""\s+data-accid=""\d+"">\s*(-?\d+(?:\.\d{1'2})?)\s*</strong>")' out this.Balance); " is 140.
Long Statement,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The length of the statement  "				this.PackagesHTML = UTF8Encoding.UTF8.GetString (wc.DownloadData ("https://cabinet.tps.uz/packages/list/" + this.CabinetID)); " is 125.
Long Statement,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The length of the statement  "				MatchCollection PackageMatches = Regex.Matches (this.PackagesHTML' @"<p class=""service-header"">[\s\S]+?<span>([\s\S]+?)</span>[\s\S]+?Стоимость[\s\S]+?<p class=""col-sm-7""><strong>\$?(\d+(?:\.\d{1'2})?)[\s\S]+?Дата начала действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Дата окончания действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Трафик по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?Остаток трафика по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?"' RegexOptions.Compiled | RegexOptions.Multiline | RegexOptions.IgnoreCase | RegexOptions.CultureInvariant); " is 630.
Long Statement,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The length of the statement  "						DateTime.TryParseExact (PackangeMatch.Groups [3].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.StartDT); " is 193.
Long Statement,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The length of the statement  "						DateTime.TryParseExact (PackangeMatch.Groups [4].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.EndDT); " is 191.
Long Statement,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,GetCabinetVal,The length of the statement  "	Match CabinetValMatch = Regex.Match (this.CabinetHTML' pattern' RegexOptions.Compiled | RegexOptions.Multiline | RegexOptions.IgnoreCase | RegexOptions.CultureInvariant); " is 170.
Long Statement,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,OnResize,The length of the statement  "	this.BorderPath = helper.CreateRoundRect (new Rectangle (0' 0' this.Width - 1' this.Height - 1)' 4' helper.RectangleCorners.All); " is 129.
Long Statement,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,OnResize,The length of the statement  "	this.RegionPath = helper.CreateRoundRect (new Rectangle (0' 0' this.Width' this.Height)' 4' helper.RectangleCorners.All); " is 121.
Long Statement,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,OnPaint,The length of the statement  "		e.Graphics.FillPath (new LinearGradientBrush (new Rectangle (0' 0' this.Width' this.Height)' Color.FromArgb (254' 254' 254)' Color.FromArgb (228' 229' 240)' LinearGradientMode.Vertical)' BorderPath); " is 199.
Long Statement,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The length of the statement  "							g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle); " is 141.
Long Statement,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The length of the statement  "		lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n"; " is 177.
Long Statement,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The length of the statement  "			PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)"; " is 161.
Long Statement,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The length of the statement  "					PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)"; " is 128.
Long Statement,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The length of the statement  "					PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)"; " is 133.
Long Statement,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The length of the statement  "		lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n"; " is 134.
Long Statement,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The length of the statement  "			//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб"; " is 169.
Long Statement,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The length of the statement  "			lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб"; " is 124.
Long Statement,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The length of the statement  "			//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб"; " is 169.
Long Statement,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The length of the statement  "			lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб"; " is 124.
Complex Conditional,tpscabinet,App,C:\repos\bestlion_tpscabinet\tpscabinet\App.cs,UpdateInfo,The conditional expression  "!NotifyFrm.Visible && Properties.Settings.Default.PaymentNotify && (DateTime.Now - this.InfoNotifyWasShown ["PaymentNotify"]).TotalHours >= 4 && DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) == DateTime.Now.Day"  is complex.
Complex Conditional,tpscabinet,App,C:\repos\bestlion_tpscabinet\tpscabinet\App.cs,UpdateInfo,The conditional expression  "!NotifyFrm.Visible && Properties.Settings.Default.PackageTimeoutNotify && tps_cabinet.TraffLeft == 0 && tps_cabinet.HasPackage && tps_cabinet.Packages [0].TotalHoursLeft < 24 && (DateTime.Now - this.InfoNotifyWasShown ["PackageTimeoutNotify"]).TotalHours >= 4"  is complex.
Complex Conditional,tpscabinet,App,C:\repos\bestlion_tpscabinet\tpscabinet\App.cs,UpdateInfo,The conditional expression  "!NotifyFrm.Visible && Properties.Settings.Default.TraffNotify && (DateTime.Now - this.InfoNotifyWasShown ["TraffNotify"]).TotalHours >= 4 && tps_cabinet.LastUpdate != DateTime.MinValue && ((tps_cabinet.TraffLeft != 0 && tps_cabinet.TraffLeft < Properties.Settings.Default.TraffNotifyLimit) || (tps_cabinet.TraffLeft == 0 && tps_cabinet.HasPackage && tps_cabinet.Packages [0].TraffLeft < Properties.Settings.Default.TraffNotifyLimit))"  is complex.
Empty Catch Block,tpscabinet,App,C:\repos\bestlion_tpscabinet\tpscabinet\App.cs,UpdateInfo,The method has an empty catch block.
Empty Catch Block,tpscabinet,App,C:\repos\bestlion_tpscabinet\tpscabinet\App.cs,OnApplicationExit,The method has an empty catch block.
Empty Catch Block,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,frm_notify,The method has an empty catch block.
Empty Catch Block,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,frm_notify,The method has an empty catch block.
Empty Catch Block,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,frm_notify_FormClosing,The method has an empty catch block.
Magic Number,tpscabinet,App,C:\repos\bestlion_tpscabinet\tpscabinet\App.cs,InitializeComponent,The following statement contains a magic number: timer_update.Interval = Properties.Settings.Default.UpdateInterval * 60 * 1000;  
Magic Number,tpscabinet,App,C:\repos\bestlion_tpscabinet\tpscabinet\App.cs,InitializeComponent,The following statement contains a magic number: timer_update.Interval = Properties.Settings.Default.UpdateInterval * 60 * 1000;  
Magic Number,tpscabinet,App,C:\repos\bestlion_tpscabinet\tpscabinet\App.cs,ShowNotify,The following statement contains a magic number: NotifyFrm.Show ((Permanent) ? 0 : 4000);  
Magic Number,tpscabinet,App,C:\repos\bestlion_tpscabinet\tpscabinet\App.cs,UpdateInfo,The following statement contains a magic number: try {  	if (!String.IsNullOrEmpty (tps_cabinet.Login) && !String.IsNullOrEmpty (tps_cabinet.Password)) {  		tps_cabinet.LoadData ();  		/// notify  		////// notify if we need to pay today (show one time in 4h) \ !NotifyFrm.Visible for not override other notify  		if (!NotifyFrm.Visible && Properties.Settings.Default.PaymentNotify && (DateTime.Now - this.InfoNotifyWasShown ["PaymentNotify"]).TotalHours >= 4 && DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) == DateTime.Now.Day) {  			Program.invokerControl.Invoke (new delegate_ShowNotify (ShowNotify)' new object[] {  				"\r\nСегодня последний день оплаты\r\n\r\n"'  				true  			});  			this.InfoNotifyWasShown ["PaymentNotify"] = DateTime.Now;  		}  		////// notify if package will end in next 24h (show one time in 4h)  		if (!NotifyFrm.Visible && Properties.Settings.Default.PackageTimeoutNotify && tps_cabinet.TraffLeft == 0 && tps_cabinet.HasPackage && tps_cabinet.Packages [0].TotalHoursLeft < 24 && (DateTime.Now - this.InfoNotifyWasShown ["PackageTimeoutNotify"]).TotalHours >= 4) {  			Program.invokerControl.Invoke (new delegate_ShowNotify (ShowNotify)' new object[] {  				"\r\nДо окончания пакета: " + tps_cabinet.Packages [0].TimeLeftStr + "\r\n\r\n"'  				true  			});  			this.InfoNotifyWasShown ["PackageTimeoutNotify"] = DateTime.Now;  		}  		////// notify if traff less than limits (show one time in 4h)  		if (!NotifyFrm.Visible && Properties.Settings.Default.TraffNotify && (DateTime.Now - this.InfoNotifyWasShown ["TraffNotify"]).TotalHours >= 4 && tps_cabinet.LastUpdate != DateTime.MinValue && ((tps_cabinet.TraffLeft != 0 && tps_cabinet.TraffLeft < Properties.Settings.Default.TraffNotifyLimit) || (tps_cabinet.TraffLeft == 0 && tps_cabinet.HasPackage && tps_cabinet.Packages [0].TraffLeft < Properties.Settings.Default.TraffNotifyLimit))) {  			Program.invokerControl.Invoke (new delegate_ShowNotify (ShowNotify)' new object[] {  				"\r\nОстаток трафика меньше установленного лимита (" + ((tps_cabinet.TraffLeft != 0) ? tps_cabinet.TraffLeft : tps_cabinet.Packages [0].TraffLeft) + " Мб)\r\n\r\n"'  				true  			});  			this.InfoNotifyWasShown ["TraffNotify"] = DateTime.Now;  		}  	}  }  catch (Exception ex) {  	try {  		if (Program.DebugMode)  			Program.invokerControl.BeginInvoke (new delegate_ShowNotify (ShowNotify)' new object[] {  				"Ошибка: " + ex.Message'  				false  			});  	}  	catch {  	}  }  
Magic Number,tpscabinet,App,C:\repos\bestlion_tpscabinet\tpscabinet\App.cs,UpdateInfo,The following statement contains a magic number: try {  	if (!String.IsNullOrEmpty (tps_cabinet.Login) && !String.IsNullOrEmpty (tps_cabinet.Password)) {  		tps_cabinet.LoadData ();  		/// notify  		////// notify if we need to pay today (show one time in 4h) \ !NotifyFrm.Visible for not override other notify  		if (!NotifyFrm.Visible && Properties.Settings.Default.PaymentNotify && (DateTime.Now - this.InfoNotifyWasShown ["PaymentNotify"]).TotalHours >= 4 && DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) == DateTime.Now.Day) {  			Program.invokerControl.Invoke (new delegate_ShowNotify (ShowNotify)' new object[] {  				"\r\nСегодня последний день оплаты\r\n\r\n"'  				true  			});  			this.InfoNotifyWasShown ["PaymentNotify"] = DateTime.Now;  		}  		////// notify if package will end in next 24h (show one time in 4h)  		if (!NotifyFrm.Visible && Properties.Settings.Default.PackageTimeoutNotify && tps_cabinet.TraffLeft == 0 && tps_cabinet.HasPackage && tps_cabinet.Packages [0].TotalHoursLeft < 24 && (DateTime.Now - this.InfoNotifyWasShown ["PackageTimeoutNotify"]).TotalHours >= 4) {  			Program.invokerControl.Invoke (new delegate_ShowNotify (ShowNotify)' new object[] {  				"\r\nДо окончания пакета: " + tps_cabinet.Packages [0].TimeLeftStr + "\r\n\r\n"'  				true  			});  			this.InfoNotifyWasShown ["PackageTimeoutNotify"] = DateTime.Now;  		}  		////// notify if traff less than limits (show one time in 4h)  		if (!NotifyFrm.Visible && Properties.Settings.Default.TraffNotify && (DateTime.Now - this.InfoNotifyWasShown ["TraffNotify"]).TotalHours >= 4 && tps_cabinet.LastUpdate != DateTime.MinValue && ((tps_cabinet.TraffLeft != 0 && tps_cabinet.TraffLeft < Properties.Settings.Default.TraffNotifyLimit) || (tps_cabinet.TraffLeft == 0 && tps_cabinet.HasPackage && tps_cabinet.Packages [0].TraffLeft < Properties.Settings.Default.TraffNotifyLimit))) {  			Program.invokerControl.Invoke (new delegate_ShowNotify (ShowNotify)' new object[] {  				"\r\nОстаток трафика меньше установленного лимита (" + ((tps_cabinet.TraffLeft != 0) ? tps_cabinet.TraffLeft : tps_cabinet.Packages [0].TraffLeft) + " Мб)\r\n\r\n"'  				true  			});  			this.InfoNotifyWasShown ["TraffNotify"] = DateTime.Now;  		}  	}  }  catch (Exception ex) {  	try {  		if (Program.DebugMode)  			Program.invokerControl.BeginInvoke (new delegate_ShowNotify (ShowNotify)' new object[] {  				"Ошибка: " + ex.Message'  				false  			});  	}  	catch {  	}  }  
Magic Number,tpscabinet,App,C:\repos\bestlion_tpscabinet\tpscabinet\App.cs,UpdateInfo,The following statement contains a magic number: try {  	if (!String.IsNullOrEmpty (tps_cabinet.Login) && !String.IsNullOrEmpty (tps_cabinet.Password)) {  		tps_cabinet.LoadData ();  		/// notify  		////// notify if we need to pay today (show one time in 4h) \ !NotifyFrm.Visible for not override other notify  		if (!NotifyFrm.Visible && Properties.Settings.Default.PaymentNotify && (DateTime.Now - this.InfoNotifyWasShown ["PaymentNotify"]).TotalHours >= 4 && DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) == DateTime.Now.Day) {  			Program.invokerControl.Invoke (new delegate_ShowNotify (ShowNotify)' new object[] {  				"\r\nСегодня последний день оплаты\r\n\r\n"'  				true  			});  			this.InfoNotifyWasShown ["PaymentNotify"] = DateTime.Now;  		}  		////// notify if package will end in next 24h (show one time in 4h)  		if (!NotifyFrm.Visible && Properties.Settings.Default.PackageTimeoutNotify && tps_cabinet.TraffLeft == 0 && tps_cabinet.HasPackage && tps_cabinet.Packages [0].TotalHoursLeft < 24 && (DateTime.Now - this.InfoNotifyWasShown ["PackageTimeoutNotify"]).TotalHours >= 4) {  			Program.invokerControl.Invoke (new delegate_ShowNotify (ShowNotify)' new object[] {  				"\r\nДо окончания пакета: " + tps_cabinet.Packages [0].TimeLeftStr + "\r\n\r\n"'  				true  			});  			this.InfoNotifyWasShown ["PackageTimeoutNotify"] = DateTime.Now;  		}  		////// notify if traff less than limits (show one time in 4h)  		if (!NotifyFrm.Visible && Properties.Settings.Default.TraffNotify && (DateTime.Now - this.InfoNotifyWasShown ["TraffNotify"]).TotalHours >= 4 && tps_cabinet.LastUpdate != DateTime.MinValue && ((tps_cabinet.TraffLeft != 0 && tps_cabinet.TraffLeft < Properties.Settings.Default.TraffNotifyLimit) || (tps_cabinet.TraffLeft == 0 && tps_cabinet.HasPackage && tps_cabinet.Packages [0].TraffLeft < Properties.Settings.Default.TraffNotifyLimit))) {  			Program.invokerControl.Invoke (new delegate_ShowNotify (ShowNotify)' new object[] {  				"\r\nОстаток трафика меньше установленного лимита (" + ((tps_cabinet.TraffLeft != 0) ? tps_cabinet.TraffLeft : tps_cabinet.Packages [0].TraffLeft) + " Мб)\r\n\r\n"'  				true  			});  			this.InfoNotifyWasShown ["TraffNotify"] = DateTime.Now;  		}  	}  }  catch (Exception ex) {  	try {  		if (Program.DebugMode)  			Program.invokerControl.BeginInvoke (new delegate_ShowNotify (ShowNotify)' new object[] {  				"Ошибка: " + ex.Message'  				false  			});  	}  	catch {  	}  }  
Magic Number,tpscabinet,App,C:\repos\bestlion_tpscabinet\tpscabinet\App.cs,UpdateInfo,The following statement contains a magic number: try {  	if (!String.IsNullOrEmpty (tps_cabinet.Login) && !String.IsNullOrEmpty (tps_cabinet.Password)) {  		tps_cabinet.LoadData ();  		/// notify  		////// notify if we need to pay today (show one time in 4h) \ !NotifyFrm.Visible for not override other notify  		if (!NotifyFrm.Visible && Properties.Settings.Default.PaymentNotify && (DateTime.Now - this.InfoNotifyWasShown ["PaymentNotify"]).TotalHours >= 4 && DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) == DateTime.Now.Day) {  			Program.invokerControl.Invoke (new delegate_ShowNotify (ShowNotify)' new object[] {  				"\r\nСегодня последний день оплаты\r\n\r\n"'  				true  			});  			this.InfoNotifyWasShown ["PaymentNotify"] = DateTime.Now;  		}  		////// notify if package will end in next 24h (show one time in 4h)  		if (!NotifyFrm.Visible && Properties.Settings.Default.PackageTimeoutNotify && tps_cabinet.TraffLeft == 0 && tps_cabinet.HasPackage && tps_cabinet.Packages [0].TotalHoursLeft < 24 && (DateTime.Now - this.InfoNotifyWasShown ["PackageTimeoutNotify"]).TotalHours >= 4) {  			Program.invokerControl.Invoke (new delegate_ShowNotify (ShowNotify)' new object[] {  				"\r\nДо окончания пакета: " + tps_cabinet.Packages [0].TimeLeftStr + "\r\n\r\n"'  				true  			});  			this.InfoNotifyWasShown ["PackageTimeoutNotify"] = DateTime.Now;  		}  		////// notify if traff less than limits (show one time in 4h)  		if (!NotifyFrm.Visible && Properties.Settings.Default.TraffNotify && (DateTime.Now - this.InfoNotifyWasShown ["TraffNotify"]).TotalHours >= 4 && tps_cabinet.LastUpdate != DateTime.MinValue && ((tps_cabinet.TraffLeft != 0 && tps_cabinet.TraffLeft < Properties.Settings.Default.TraffNotifyLimit) || (tps_cabinet.TraffLeft == 0 && tps_cabinet.HasPackage && tps_cabinet.Packages [0].TraffLeft < Properties.Settings.Default.TraffNotifyLimit))) {  			Program.invokerControl.Invoke (new delegate_ShowNotify (ShowNotify)' new object[] {  				"\r\nОстаток трафика меньше установленного лимита (" + ((tps_cabinet.TraffLeft != 0) ? tps_cabinet.TraffLeft : tps_cabinet.Packages [0].TraffLeft) + " Мб)\r\n\r\n"'  				true  			});  			this.InfoNotifyWasShown ["TraffNotify"] = DateTime.Now;  		}  	}  }  catch (Exception ex) {  	try {  		if (Program.DebugMode)  			Program.invokerControl.BeginInvoke (new delegate_ShowNotify (ShowNotify)' new object[] {  				"Ошибка: " + ex.Message'  				false  			});  	}  	catch {  	}  }  
Magic Number,tpscabinet,App,C:\repos\bestlion_tpscabinet\tpscabinet\App.cs,UpdateInfo,The following statement contains a magic number: if (!String.IsNullOrEmpty (tps_cabinet.Login) && !String.IsNullOrEmpty (tps_cabinet.Password)) {  	tps_cabinet.LoadData ();  	/// notify  	////// notify if we need to pay today (show one time in 4h) \ !NotifyFrm.Visible for not override other notify  	if (!NotifyFrm.Visible && Properties.Settings.Default.PaymentNotify && (DateTime.Now - this.InfoNotifyWasShown ["PaymentNotify"]).TotalHours >= 4 && DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) == DateTime.Now.Day) {  		Program.invokerControl.Invoke (new delegate_ShowNotify (ShowNotify)' new object[] {  			"\r\nСегодня последний день оплаты\r\n\r\n"'  			true  		});  		this.InfoNotifyWasShown ["PaymentNotify"] = DateTime.Now;  	}  	////// notify if package will end in next 24h (show one time in 4h)  	if (!NotifyFrm.Visible && Properties.Settings.Default.PackageTimeoutNotify && tps_cabinet.TraffLeft == 0 && tps_cabinet.HasPackage && tps_cabinet.Packages [0].TotalHoursLeft < 24 && (DateTime.Now - this.InfoNotifyWasShown ["PackageTimeoutNotify"]).TotalHours >= 4) {  		Program.invokerControl.Invoke (new delegate_ShowNotify (ShowNotify)' new object[] {  			"\r\nДо окончания пакета: " + tps_cabinet.Packages [0].TimeLeftStr + "\r\n\r\n"'  			true  		});  		this.InfoNotifyWasShown ["PackageTimeoutNotify"] = DateTime.Now;  	}  	////// notify if traff less than limits (show one time in 4h)  	if (!NotifyFrm.Visible && Properties.Settings.Default.TraffNotify && (DateTime.Now - this.InfoNotifyWasShown ["TraffNotify"]).TotalHours >= 4 && tps_cabinet.LastUpdate != DateTime.MinValue && ((tps_cabinet.TraffLeft != 0 && tps_cabinet.TraffLeft < Properties.Settings.Default.TraffNotifyLimit) || (tps_cabinet.TraffLeft == 0 && tps_cabinet.HasPackage && tps_cabinet.Packages [0].TraffLeft < Properties.Settings.Default.TraffNotifyLimit))) {  		Program.invokerControl.Invoke (new delegate_ShowNotify (ShowNotify)' new object[] {  			"\r\nОстаток трафика меньше установленного лимита (" + ((tps_cabinet.TraffLeft != 0) ? tps_cabinet.TraffLeft : tps_cabinet.Packages [0].TraffLeft) + " Мб)\r\n\r\n"'  			true  		});  		this.InfoNotifyWasShown ["TraffNotify"] = DateTime.Now;  	}  }  
Magic Number,tpscabinet,App,C:\repos\bestlion_tpscabinet\tpscabinet\App.cs,UpdateInfo,The following statement contains a magic number: if (!String.IsNullOrEmpty (tps_cabinet.Login) && !String.IsNullOrEmpty (tps_cabinet.Password)) {  	tps_cabinet.LoadData ();  	/// notify  	////// notify if we need to pay today (show one time in 4h) \ !NotifyFrm.Visible for not override other notify  	if (!NotifyFrm.Visible && Properties.Settings.Default.PaymentNotify && (DateTime.Now - this.InfoNotifyWasShown ["PaymentNotify"]).TotalHours >= 4 && DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) == DateTime.Now.Day) {  		Program.invokerControl.Invoke (new delegate_ShowNotify (ShowNotify)' new object[] {  			"\r\nСегодня последний день оплаты\r\n\r\n"'  			true  		});  		this.InfoNotifyWasShown ["PaymentNotify"] = DateTime.Now;  	}  	////// notify if package will end in next 24h (show one time in 4h)  	if (!NotifyFrm.Visible && Properties.Settings.Default.PackageTimeoutNotify && tps_cabinet.TraffLeft == 0 && tps_cabinet.HasPackage && tps_cabinet.Packages [0].TotalHoursLeft < 24 && (DateTime.Now - this.InfoNotifyWasShown ["PackageTimeoutNotify"]).TotalHours >= 4) {  		Program.invokerControl.Invoke (new delegate_ShowNotify (ShowNotify)' new object[] {  			"\r\nДо окончания пакета: " + tps_cabinet.Packages [0].TimeLeftStr + "\r\n\r\n"'  			true  		});  		this.InfoNotifyWasShown ["PackageTimeoutNotify"] = DateTime.Now;  	}  	////// notify if traff less than limits (show one time in 4h)  	if (!NotifyFrm.Visible && Properties.Settings.Default.TraffNotify && (DateTime.Now - this.InfoNotifyWasShown ["TraffNotify"]).TotalHours >= 4 && tps_cabinet.LastUpdate != DateTime.MinValue && ((tps_cabinet.TraffLeft != 0 && tps_cabinet.TraffLeft < Properties.Settings.Default.TraffNotifyLimit) || (tps_cabinet.TraffLeft == 0 && tps_cabinet.HasPackage && tps_cabinet.Packages [0].TraffLeft < Properties.Settings.Default.TraffNotifyLimit))) {  		Program.invokerControl.Invoke (new delegate_ShowNotify (ShowNotify)' new object[] {  			"\r\nОстаток трафика меньше установленного лимита (" + ((tps_cabinet.TraffLeft != 0) ? tps_cabinet.TraffLeft : tps_cabinet.Packages [0].TraffLeft) + " Мб)\r\n\r\n"'  			true  		});  		this.InfoNotifyWasShown ["TraffNotify"] = DateTime.Now;  	}  }  
Magic Number,tpscabinet,App,C:\repos\bestlion_tpscabinet\tpscabinet\App.cs,UpdateInfo,The following statement contains a magic number: if (!String.IsNullOrEmpty (tps_cabinet.Login) && !String.IsNullOrEmpty (tps_cabinet.Password)) {  	tps_cabinet.LoadData ();  	/// notify  	////// notify if we need to pay today (show one time in 4h) \ !NotifyFrm.Visible for not override other notify  	if (!NotifyFrm.Visible && Properties.Settings.Default.PaymentNotify && (DateTime.Now - this.InfoNotifyWasShown ["PaymentNotify"]).TotalHours >= 4 && DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) == DateTime.Now.Day) {  		Program.invokerControl.Invoke (new delegate_ShowNotify (ShowNotify)' new object[] {  			"\r\nСегодня последний день оплаты\r\n\r\n"'  			true  		});  		this.InfoNotifyWasShown ["PaymentNotify"] = DateTime.Now;  	}  	////// notify if package will end in next 24h (show one time in 4h)  	if (!NotifyFrm.Visible && Properties.Settings.Default.PackageTimeoutNotify && tps_cabinet.TraffLeft == 0 && tps_cabinet.HasPackage && tps_cabinet.Packages [0].TotalHoursLeft < 24 && (DateTime.Now - this.InfoNotifyWasShown ["PackageTimeoutNotify"]).TotalHours >= 4) {  		Program.invokerControl.Invoke (new delegate_ShowNotify (ShowNotify)' new object[] {  			"\r\nДо окончания пакета: " + tps_cabinet.Packages [0].TimeLeftStr + "\r\n\r\n"'  			true  		});  		this.InfoNotifyWasShown ["PackageTimeoutNotify"] = DateTime.Now;  	}  	////// notify if traff less than limits (show one time in 4h)  	if (!NotifyFrm.Visible && Properties.Settings.Default.TraffNotify && (DateTime.Now - this.InfoNotifyWasShown ["TraffNotify"]).TotalHours >= 4 && tps_cabinet.LastUpdate != DateTime.MinValue && ((tps_cabinet.TraffLeft != 0 && tps_cabinet.TraffLeft < Properties.Settings.Default.TraffNotifyLimit) || (tps_cabinet.TraffLeft == 0 && tps_cabinet.HasPackage && tps_cabinet.Packages [0].TraffLeft < Properties.Settings.Default.TraffNotifyLimit))) {  		Program.invokerControl.Invoke (new delegate_ShowNotify (ShowNotify)' new object[] {  			"\r\nОстаток трафика меньше установленного лимита (" + ((tps_cabinet.TraffLeft != 0) ? tps_cabinet.TraffLeft : tps_cabinet.Packages [0].TraffLeft) + " Мб)\r\n\r\n"'  			true  		});  		this.InfoNotifyWasShown ["TraffNotify"] = DateTime.Now;  	}  }  
Magic Number,tpscabinet,App,C:\repos\bestlion_tpscabinet\tpscabinet\App.cs,UpdateInfo,The following statement contains a magic number: if (!String.IsNullOrEmpty (tps_cabinet.Login) && !String.IsNullOrEmpty (tps_cabinet.Password)) {  	tps_cabinet.LoadData ();  	/// notify  	////// notify if we need to pay today (show one time in 4h) \ !NotifyFrm.Visible for not override other notify  	if (!NotifyFrm.Visible && Properties.Settings.Default.PaymentNotify && (DateTime.Now - this.InfoNotifyWasShown ["PaymentNotify"]).TotalHours >= 4 && DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) == DateTime.Now.Day) {  		Program.invokerControl.Invoke (new delegate_ShowNotify (ShowNotify)' new object[] {  			"\r\nСегодня последний день оплаты\r\n\r\n"'  			true  		});  		this.InfoNotifyWasShown ["PaymentNotify"] = DateTime.Now;  	}  	////// notify if package will end in next 24h (show one time in 4h)  	if (!NotifyFrm.Visible && Properties.Settings.Default.PackageTimeoutNotify && tps_cabinet.TraffLeft == 0 && tps_cabinet.HasPackage && tps_cabinet.Packages [0].TotalHoursLeft < 24 && (DateTime.Now - this.InfoNotifyWasShown ["PackageTimeoutNotify"]).TotalHours >= 4) {  		Program.invokerControl.Invoke (new delegate_ShowNotify (ShowNotify)' new object[] {  			"\r\nДо окончания пакета: " + tps_cabinet.Packages [0].TimeLeftStr + "\r\n\r\n"'  			true  		});  		this.InfoNotifyWasShown ["PackageTimeoutNotify"] = DateTime.Now;  	}  	////// notify if traff less than limits (show one time in 4h)  	if (!NotifyFrm.Visible && Properties.Settings.Default.TraffNotify && (DateTime.Now - this.InfoNotifyWasShown ["TraffNotify"]).TotalHours >= 4 && tps_cabinet.LastUpdate != DateTime.MinValue && ((tps_cabinet.TraffLeft != 0 && tps_cabinet.TraffLeft < Properties.Settings.Default.TraffNotifyLimit) || (tps_cabinet.TraffLeft == 0 && tps_cabinet.HasPackage && tps_cabinet.Packages [0].TraffLeft < Properties.Settings.Default.TraffNotifyLimit))) {  		Program.invokerControl.Invoke (new delegate_ShowNotify (ShowNotify)' new object[] {  			"\r\nОстаток трафика меньше установленного лимита (" + ((tps_cabinet.TraffLeft != 0) ? tps_cabinet.TraffLeft : tps_cabinet.Packages [0].TraffLeft) + " Мб)\r\n\r\n"'  			true  		});  		this.InfoNotifyWasShown ["TraffNotify"] = DateTime.Now;  	}  }  
Magic Number,tpscabinet,App,C:\repos\bestlion_tpscabinet\tpscabinet\App.cs,UpdateInfo,The following statement contains a magic number: if (!NotifyFrm.Visible && Properties.Settings.Default.PaymentNotify && (DateTime.Now - this.InfoNotifyWasShown ["PaymentNotify"]).TotalHours >= 4 && DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) == DateTime.Now.Day) {  	Program.invokerControl.Invoke (new delegate_ShowNotify (ShowNotify)' new object[] {  		"\r\nСегодня последний день оплаты\r\n\r\n"'  		true  	});  	this.InfoNotifyWasShown ["PaymentNotify"] = DateTime.Now;  }  
Magic Number,tpscabinet,App,C:\repos\bestlion_tpscabinet\tpscabinet\App.cs,UpdateInfo,The following statement contains a magic number: if (!NotifyFrm.Visible && Properties.Settings.Default.PackageTimeoutNotify && tps_cabinet.TraffLeft == 0 && tps_cabinet.HasPackage && tps_cabinet.Packages [0].TotalHoursLeft < 24 && (DateTime.Now - this.InfoNotifyWasShown ["PackageTimeoutNotify"]).TotalHours >= 4) {  	Program.invokerControl.Invoke (new delegate_ShowNotify (ShowNotify)' new object[] {  		"\r\nДо окончания пакета: " + tps_cabinet.Packages [0].TimeLeftStr + "\r\n\r\n"'  		true  	});  	this.InfoNotifyWasShown ["PackageTimeoutNotify"] = DateTime.Now;  }  
Magic Number,tpscabinet,App,C:\repos\bestlion_tpscabinet\tpscabinet\App.cs,UpdateInfo,The following statement contains a magic number: if (!NotifyFrm.Visible && Properties.Settings.Default.PackageTimeoutNotify && tps_cabinet.TraffLeft == 0 && tps_cabinet.HasPackage && tps_cabinet.Packages [0].TotalHoursLeft < 24 && (DateTime.Now - this.InfoNotifyWasShown ["PackageTimeoutNotify"]).TotalHours >= 4) {  	Program.invokerControl.Invoke (new delegate_ShowNotify (ShowNotify)' new object[] {  		"\r\nДо окончания пакета: " + tps_cabinet.Packages [0].TimeLeftStr + "\r\n\r\n"'  		true  	});  	this.InfoNotifyWasShown ["PackageTimeoutNotify"] = DateTime.Now;  }  
Magic Number,tpscabinet,App,C:\repos\bestlion_tpscabinet\tpscabinet\App.cs,UpdateInfo,The following statement contains a magic number: if (!NotifyFrm.Visible && Properties.Settings.Default.TraffNotify && (DateTime.Now - this.InfoNotifyWasShown ["TraffNotify"]).TotalHours >= 4 && tps_cabinet.LastUpdate != DateTime.MinValue && ((tps_cabinet.TraffLeft != 0 && tps_cabinet.TraffLeft < Properties.Settings.Default.TraffNotifyLimit) || (tps_cabinet.TraffLeft == 0 && tps_cabinet.HasPackage && tps_cabinet.Packages [0].TraffLeft < Properties.Settings.Default.TraffNotifyLimit))) {  	Program.invokerControl.Invoke (new delegate_ShowNotify (ShowNotify)' new object[] {  		"\r\nОстаток трафика меньше установленного лимита (" + ((tps_cabinet.TraffLeft != 0) ? tps_cabinet.TraffLeft : tps_cabinet.Packages [0].TraffLeft) + " Мб)\r\n\r\n"'  		true  	});  	this.InfoNotifyWasShown ["TraffNotify"] = DateTime.Now;  }  
Magic Number,tpscabinet,App,C:\repos\bestlion_tpscabinet\tpscabinet\App.cs,mnu_Options_Click,The following statement contains a magic number: if (frmOptions.DialogResult == DialogResult.OK) {  	timer_update.Stop ();  	// stop update timer  	timer_update.Interval = Properties.Settings.Default.UpdateInterval * 60 * 1000;  	///set new values  	tps_cabinet.Login = Properties.Settings.Default.TPSLogin;  	tps_cabinet.Password = Properties.Settings.Default.TPSPassword;  	/// reset values  	this.InfoNotifyWasShown ["TraffNotify"] = DateTime.MinValue;  	this.InfoNotifyWasShown ["PaymentNotify"] = DateTime.MinValue;  	/// update notification  	if (!NotifyFrm.Visible)  		NotifyFrm.FillData (tps_cabinet);  	mnu_ForceUpdate_Click (null' null);  	//force update  	timer_update.Start ();  	// start update timer  }  
Magic Number,tpscabinet,App,C:\repos\bestlion_tpscabinet\tpscabinet\App.cs,mnu_Options_Click,The following statement contains a magic number: if (frmOptions.DialogResult == DialogResult.OK) {  	timer_update.Stop ();  	// stop update timer  	timer_update.Interval = Properties.Settings.Default.UpdateInterval * 60 * 1000;  	///set new values  	tps_cabinet.Login = Properties.Settings.Default.TPSLogin;  	tps_cabinet.Password = Properties.Settings.Default.TPSPassword;  	/// reset values  	this.InfoNotifyWasShown ["TraffNotify"] = DateTime.MinValue;  	this.InfoNotifyWasShown ["PaymentNotify"] = DateTime.MinValue;  	/// update notification  	if (!NotifyFrm.Visible)  		NotifyFrm.FillData (tps_cabinet);  	mnu_ForceUpdate_Click (null' null);  	//force update  	timer_update.Start ();  	// start update timer  }  
Magic Number,tpscabinet,App,C:\repos\bestlion_tpscabinet\tpscabinet\App.cs,mnu_Options_Click,The following statement contains a magic number: timer_update.Interval = Properties.Settings.Default.UpdateInterval * 60 * 1000;  
Magic Number,tpscabinet,App,C:\repos\bestlion_tpscabinet\tpscabinet\App.cs,mnu_Options_Click,The following statement contains a magic number: timer_update.Interval = Properties.Settings.Default.UpdateInterval * 60 * 1000;  
Magic Number,tpscabinet,CookieWebClient,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,GetWebRequest,The following statement contains a magic number: request.Timeout = 10000;  
Magic Number,tpscabinet,CookieWebClient,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,GetWebRequest,The following statement contains a magic number: request.ReadWriteTimeout = 120000;  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: using (CookieWebClient wc = new CookieWebClient ()) {  	///System.Threading.Thread.Sleep(3000);  	wc.Headers [HttpRequestHeader.ContentType] = "application/x-www-form-urlencoded";  	NameValueCollection post_vars = new NameValueCollection ();  	post_vars.Add ("LoginForm[username]"' this.Login);  	post_vars.Add ("LoginForm[password]"' this.Password);  	post_vars.Add ("yt0"' "submit");  	this.CabinetHTML = UTF8Encoding.UTF8.GetString (wc.UploadValues ("https://cabinet.tps.uz/login"' "POST"' post_vars));  	#if DEBUG  	System.IO.File.WriteAllText ("out" + DateTime.Now.Ticks + ".html"' this.CabinetHTML' Encoding.UTF8);  	#endif  	if (String.IsNullOrEmpty (this.CabinetHTML)) {  		this.LastError = new Error ("Данные кабинета не получены"' false);  		return;  	}  	if (this.CabinetHTML.Contains ("Вход в персональный кабинет")) {  		this.LastError = new Error ("Логин\\пароль не верны"' true);  		return;  	}  	/// if all ok ///  	if (!String.IsNullOrEmpty (this.CabinetHTML)) {  		float.TryParse (GetCabinetVal (@"traffic\s*:\s*'Использовано''\s*value:\s*(\d+(?:\.\d{1'2})?)\s*}")' out this.TraffUsed);  		float.TryParse (GetCabinetVal (@"traffic\s*:\s*'Осталось''\s*value:\s*(-?\d+(?:\.\d{1'2})?)\s*}")' out this.TraffLeft);  		if (TraffLeft < 0)  			TraffLeft = 0;  		#if DEBUG  		TraffLeft = 1500;  		#endif  		float.TryParse (GetCabinetVal (@"<strong\s+class=""balance""\s+data-accid=""\d+"">\s*(-?\d+(?:\.\d{1'2})?)\s*</strong>")' out this.Balance);  		int.TryParse (GetCabinetVal (@"/pppoe_session\?id=(\d+)")' out this.CabinetID);  		float.TryParse (GetCabinetVal (@"<th>Статус</th>[\s\S]+?<td>\s*\$(\d+(?:\.\d{1'2})?)\s*</td>")' out this.AbonentPlata);  		float.TryParse (GetCabinetVal (@"<p>1\s*доллар\s*США\s*=\s*(\d+(?:\.\d{1'2})?)")' out this.Kurs);  		/// load packages page  		if (this.CabinetID != 0)  			this.PackagesHTML = UTF8Encoding.UTF8.GetString (wc.DownloadData ("https://cabinet.tps.uz/packages/list/" + this.CabinetID));  		if (!String.IsNullOrEmpty (this.PackagesHTML)) {  			MatchCollection PackageMatches = Regex.Matches (this.PackagesHTML' @"<p class=""service-header"">[\s\S]+?<span>([\s\S]+?)</span>[\s\S]+?Стоимость[\s\S]+?<p class=""col-sm-7""><strong>\$?(\d+(?:\.\d{1'2})?)[\s\S]+?Дата начала действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Дата окончания действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Трафик по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?Остаток трафика по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?"' RegexOptions.Compiled | RegexOptions.Multiline | RegexOptions.IgnoreCase | RegexOptions.CultureInvariant);  			if (PackageMatches.Count > 0) {  				this.Packages.Clear ();  				foreach (Match PackangeMatch in PackageMatches) {  					if (!PackangeMatch.Success)  						continue;  					Package NewPackage = new Package ();  					NewPackage.Name = PackangeMatch.Groups [1].Value.Trim ();  					float.TryParse (PackangeMatch.Groups [2].Value' out NewPackage.Cost);  					DateTime.TryParseExact (PackangeMatch.Groups [3].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.StartDT);  					DateTime.TryParseExact (PackangeMatch.Groups [4].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.EndDT);  					float.TryParse (PackangeMatch.Groups [5].Value' out NewPackage.TraffAll);  					float.TryParse (PackangeMatch.Groups [6].Value' out NewPackage.TraffLeft);  					#if DEBUG  					if (NewPackage.StartDT.Day == 22) {  						NewPackage.StartDT = DateTime.Now.AddDays (-40);  						NewPackage.EndDT = DateTime.Now.AddDays (40);  						NewPackage.TraffAll = 3000;  						NewPackage.TraffLeft = 600;  					}  					#endif  					if (NewPackage.isActive)  						// add only active packages  						this.Packages.Add (NewPackage);  				}  				/// sort by start date... package with early start date in use first  				this.Packages.Sort (delegate (Package pk1' Package pk2) {  					return pk1.StartDT.CompareTo (pk2.StartDT);  				});  			}  			#if DEBUG  			//this.Packages.Clear();      			StringBuilder pkStr = new StringBuilder ();  			foreach (Package pk in this.Packages) {  				pkStr.Append (pk.Cost.ToString ("f2") + "\t");  				pkStr.Append (pk.StartDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  				pkStr.Append (pk.EndDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  				pkStr.Append (pk.TraffAll.ToString ("f2") + "\t");  				pkStr.Append (pk.TraffLeft.ToString ("f2") + "\t");  				pkStr.Append (pk.isActive + "\t");  				pkStr.AppendLine ();  			}  			System.IO.File.WriteAllText ("packages" + DateTime.Now.Ticks + ".txt"' pkStr.ToString ()' Encoding.UTF8);  			#endif  		}  		else {  			this.LastError = new Error ("Данные по пакетам не получены"' false);  			return;  		}  		this.LastError = null;  		this.LastUpdate = DateTime.Now;  	}  }  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: using (CookieWebClient wc = new CookieWebClient ()) {  	///System.Threading.Thread.Sleep(3000);  	wc.Headers [HttpRequestHeader.ContentType] = "application/x-www-form-urlencoded";  	NameValueCollection post_vars = new NameValueCollection ();  	post_vars.Add ("LoginForm[username]"' this.Login);  	post_vars.Add ("LoginForm[password]"' this.Password);  	post_vars.Add ("yt0"' "submit");  	this.CabinetHTML = UTF8Encoding.UTF8.GetString (wc.UploadValues ("https://cabinet.tps.uz/login"' "POST"' post_vars));  	#if DEBUG  	System.IO.File.WriteAllText ("out" + DateTime.Now.Ticks + ".html"' this.CabinetHTML' Encoding.UTF8);  	#endif  	if (String.IsNullOrEmpty (this.CabinetHTML)) {  		this.LastError = new Error ("Данные кабинета не получены"' false);  		return;  	}  	if (this.CabinetHTML.Contains ("Вход в персональный кабинет")) {  		this.LastError = new Error ("Логин\\пароль не верны"' true);  		return;  	}  	/// if all ok ///  	if (!String.IsNullOrEmpty (this.CabinetHTML)) {  		float.TryParse (GetCabinetVal (@"traffic\s*:\s*'Использовано''\s*value:\s*(\d+(?:\.\d{1'2})?)\s*}")' out this.TraffUsed);  		float.TryParse (GetCabinetVal (@"traffic\s*:\s*'Осталось''\s*value:\s*(-?\d+(?:\.\d{1'2})?)\s*}")' out this.TraffLeft);  		if (TraffLeft < 0)  			TraffLeft = 0;  		#if DEBUG  		TraffLeft = 1500;  		#endif  		float.TryParse (GetCabinetVal (@"<strong\s+class=""balance""\s+data-accid=""\d+"">\s*(-?\d+(?:\.\d{1'2})?)\s*</strong>")' out this.Balance);  		int.TryParse (GetCabinetVal (@"/pppoe_session\?id=(\d+)")' out this.CabinetID);  		float.TryParse (GetCabinetVal (@"<th>Статус</th>[\s\S]+?<td>\s*\$(\d+(?:\.\d{1'2})?)\s*</td>")' out this.AbonentPlata);  		float.TryParse (GetCabinetVal (@"<p>1\s*доллар\s*США\s*=\s*(\d+(?:\.\d{1'2})?)")' out this.Kurs);  		/// load packages page  		if (this.CabinetID != 0)  			this.PackagesHTML = UTF8Encoding.UTF8.GetString (wc.DownloadData ("https://cabinet.tps.uz/packages/list/" + this.CabinetID));  		if (!String.IsNullOrEmpty (this.PackagesHTML)) {  			MatchCollection PackageMatches = Regex.Matches (this.PackagesHTML' @"<p class=""service-header"">[\s\S]+?<span>([\s\S]+?)</span>[\s\S]+?Стоимость[\s\S]+?<p class=""col-sm-7""><strong>\$?(\d+(?:\.\d{1'2})?)[\s\S]+?Дата начала действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Дата окончания действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Трафик по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?Остаток трафика по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?"' RegexOptions.Compiled | RegexOptions.Multiline | RegexOptions.IgnoreCase | RegexOptions.CultureInvariant);  			if (PackageMatches.Count > 0) {  				this.Packages.Clear ();  				foreach (Match PackangeMatch in PackageMatches) {  					if (!PackangeMatch.Success)  						continue;  					Package NewPackage = new Package ();  					NewPackage.Name = PackangeMatch.Groups [1].Value.Trim ();  					float.TryParse (PackangeMatch.Groups [2].Value' out NewPackage.Cost);  					DateTime.TryParseExact (PackangeMatch.Groups [3].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.StartDT);  					DateTime.TryParseExact (PackangeMatch.Groups [4].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.EndDT);  					float.TryParse (PackangeMatch.Groups [5].Value' out NewPackage.TraffAll);  					float.TryParse (PackangeMatch.Groups [6].Value' out NewPackage.TraffLeft);  					#if DEBUG  					if (NewPackage.StartDT.Day == 22) {  						NewPackage.StartDT = DateTime.Now.AddDays (-40);  						NewPackage.EndDT = DateTime.Now.AddDays (40);  						NewPackage.TraffAll = 3000;  						NewPackage.TraffLeft = 600;  					}  					#endif  					if (NewPackage.isActive)  						// add only active packages  						this.Packages.Add (NewPackage);  				}  				/// sort by start date... package with early start date in use first  				this.Packages.Sort (delegate (Package pk1' Package pk2) {  					return pk1.StartDT.CompareTo (pk2.StartDT);  				});  			}  			#if DEBUG  			//this.Packages.Clear();      			StringBuilder pkStr = new StringBuilder ();  			foreach (Package pk in this.Packages) {  				pkStr.Append (pk.Cost.ToString ("f2") + "\t");  				pkStr.Append (pk.StartDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  				pkStr.Append (pk.EndDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  				pkStr.Append (pk.TraffAll.ToString ("f2") + "\t");  				pkStr.Append (pk.TraffLeft.ToString ("f2") + "\t");  				pkStr.Append (pk.isActive + "\t");  				pkStr.AppendLine ();  			}  			System.IO.File.WriteAllText ("packages" + DateTime.Now.Ticks + ".txt"' pkStr.ToString ()' Encoding.UTF8);  			#endif  		}  		else {  			this.LastError = new Error ("Данные по пакетам не получены"' false);  			return;  		}  		this.LastError = null;  		this.LastUpdate = DateTime.Now;  	}  }  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: using (CookieWebClient wc = new CookieWebClient ()) {  	///System.Threading.Thread.Sleep(3000);  	wc.Headers [HttpRequestHeader.ContentType] = "application/x-www-form-urlencoded";  	NameValueCollection post_vars = new NameValueCollection ();  	post_vars.Add ("LoginForm[username]"' this.Login);  	post_vars.Add ("LoginForm[password]"' this.Password);  	post_vars.Add ("yt0"' "submit");  	this.CabinetHTML = UTF8Encoding.UTF8.GetString (wc.UploadValues ("https://cabinet.tps.uz/login"' "POST"' post_vars));  	#if DEBUG  	System.IO.File.WriteAllText ("out" + DateTime.Now.Ticks + ".html"' this.CabinetHTML' Encoding.UTF8);  	#endif  	if (String.IsNullOrEmpty (this.CabinetHTML)) {  		this.LastError = new Error ("Данные кабинета не получены"' false);  		return;  	}  	if (this.CabinetHTML.Contains ("Вход в персональный кабинет")) {  		this.LastError = new Error ("Логин\\пароль не верны"' true);  		return;  	}  	/// if all ok ///  	if (!String.IsNullOrEmpty (this.CabinetHTML)) {  		float.TryParse (GetCabinetVal (@"traffic\s*:\s*'Использовано''\s*value:\s*(\d+(?:\.\d{1'2})?)\s*}")' out this.TraffUsed);  		float.TryParse (GetCabinetVal (@"traffic\s*:\s*'Осталось''\s*value:\s*(-?\d+(?:\.\d{1'2})?)\s*}")' out this.TraffLeft);  		if (TraffLeft < 0)  			TraffLeft = 0;  		#if DEBUG  		TraffLeft = 1500;  		#endif  		float.TryParse (GetCabinetVal (@"<strong\s+class=""balance""\s+data-accid=""\d+"">\s*(-?\d+(?:\.\d{1'2})?)\s*</strong>")' out this.Balance);  		int.TryParse (GetCabinetVal (@"/pppoe_session\?id=(\d+)")' out this.CabinetID);  		float.TryParse (GetCabinetVal (@"<th>Статус</th>[\s\S]+?<td>\s*\$(\d+(?:\.\d{1'2})?)\s*</td>")' out this.AbonentPlata);  		float.TryParse (GetCabinetVal (@"<p>1\s*доллар\s*США\s*=\s*(\d+(?:\.\d{1'2})?)")' out this.Kurs);  		/// load packages page  		if (this.CabinetID != 0)  			this.PackagesHTML = UTF8Encoding.UTF8.GetString (wc.DownloadData ("https://cabinet.tps.uz/packages/list/" + this.CabinetID));  		if (!String.IsNullOrEmpty (this.PackagesHTML)) {  			MatchCollection PackageMatches = Regex.Matches (this.PackagesHTML' @"<p class=""service-header"">[\s\S]+?<span>([\s\S]+?)</span>[\s\S]+?Стоимость[\s\S]+?<p class=""col-sm-7""><strong>\$?(\d+(?:\.\d{1'2})?)[\s\S]+?Дата начала действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Дата окончания действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Трафик по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?Остаток трафика по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?"' RegexOptions.Compiled | RegexOptions.Multiline | RegexOptions.IgnoreCase | RegexOptions.CultureInvariant);  			if (PackageMatches.Count > 0) {  				this.Packages.Clear ();  				foreach (Match PackangeMatch in PackageMatches) {  					if (!PackangeMatch.Success)  						continue;  					Package NewPackage = new Package ();  					NewPackage.Name = PackangeMatch.Groups [1].Value.Trim ();  					float.TryParse (PackangeMatch.Groups [2].Value' out NewPackage.Cost);  					DateTime.TryParseExact (PackangeMatch.Groups [3].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.StartDT);  					DateTime.TryParseExact (PackangeMatch.Groups [4].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.EndDT);  					float.TryParse (PackangeMatch.Groups [5].Value' out NewPackage.TraffAll);  					float.TryParse (PackangeMatch.Groups [6].Value' out NewPackage.TraffLeft);  					#if DEBUG  					if (NewPackage.StartDT.Day == 22) {  						NewPackage.StartDT = DateTime.Now.AddDays (-40);  						NewPackage.EndDT = DateTime.Now.AddDays (40);  						NewPackage.TraffAll = 3000;  						NewPackage.TraffLeft = 600;  					}  					#endif  					if (NewPackage.isActive)  						// add only active packages  						this.Packages.Add (NewPackage);  				}  				/// sort by start date... package with early start date in use first  				this.Packages.Sort (delegate (Package pk1' Package pk2) {  					return pk1.StartDT.CompareTo (pk2.StartDT);  				});  			}  			#if DEBUG  			//this.Packages.Clear();      			StringBuilder pkStr = new StringBuilder ();  			foreach (Package pk in this.Packages) {  				pkStr.Append (pk.Cost.ToString ("f2") + "\t");  				pkStr.Append (pk.StartDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  				pkStr.Append (pk.EndDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  				pkStr.Append (pk.TraffAll.ToString ("f2") + "\t");  				pkStr.Append (pk.TraffLeft.ToString ("f2") + "\t");  				pkStr.Append (pk.isActive + "\t");  				pkStr.AppendLine ();  			}  			System.IO.File.WriteAllText ("packages" + DateTime.Now.Ticks + ".txt"' pkStr.ToString ()' Encoding.UTF8);  			#endif  		}  		else {  			this.LastError = new Error ("Данные по пакетам не получены"' false);  			return;  		}  		this.LastError = null;  		this.LastUpdate = DateTime.Now;  	}  }  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: using (CookieWebClient wc = new CookieWebClient ()) {  	///System.Threading.Thread.Sleep(3000);  	wc.Headers [HttpRequestHeader.ContentType] = "application/x-www-form-urlencoded";  	NameValueCollection post_vars = new NameValueCollection ();  	post_vars.Add ("LoginForm[username]"' this.Login);  	post_vars.Add ("LoginForm[password]"' this.Password);  	post_vars.Add ("yt0"' "submit");  	this.CabinetHTML = UTF8Encoding.UTF8.GetString (wc.UploadValues ("https://cabinet.tps.uz/login"' "POST"' post_vars));  	#if DEBUG  	System.IO.File.WriteAllText ("out" + DateTime.Now.Ticks + ".html"' this.CabinetHTML' Encoding.UTF8);  	#endif  	if (String.IsNullOrEmpty (this.CabinetHTML)) {  		this.LastError = new Error ("Данные кабинета не получены"' false);  		return;  	}  	if (this.CabinetHTML.Contains ("Вход в персональный кабинет")) {  		this.LastError = new Error ("Логин\\пароль не верны"' true);  		return;  	}  	/// if all ok ///  	if (!String.IsNullOrEmpty (this.CabinetHTML)) {  		float.TryParse (GetCabinetVal (@"traffic\s*:\s*'Использовано''\s*value:\s*(\d+(?:\.\d{1'2})?)\s*}")' out this.TraffUsed);  		float.TryParse (GetCabinetVal (@"traffic\s*:\s*'Осталось''\s*value:\s*(-?\d+(?:\.\d{1'2})?)\s*}")' out this.TraffLeft);  		if (TraffLeft < 0)  			TraffLeft = 0;  		#if DEBUG  		TraffLeft = 1500;  		#endif  		float.TryParse (GetCabinetVal (@"<strong\s+class=""balance""\s+data-accid=""\d+"">\s*(-?\d+(?:\.\d{1'2})?)\s*</strong>")' out this.Balance);  		int.TryParse (GetCabinetVal (@"/pppoe_session\?id=(\d+)")' out this.CabinetID);  		float.TryParse (GetCabinetVal (@"<th>Статус</th>[\s\S]+?<td>\s*\$(\d+(?:\.\d{1'2})?)\s*</td>")' out this.AbonentPlata);  		float.TryParse (GetCabinetVal (@"<p>1\s*доллар\s*США\s*=\s*(\d+(?:\.\d{1'2})?)")' out this.Kurs);  		/// load packages page  		if (this.CabinetID != 0)  			this.PackagesHTML = UTF8Encoding.UTF8.GetString (wc.DownloadData ("https://cabinet.tps.uz/packages/list/" + this.CabinetID));  		if (!String.IsNullOrEmpty (this.PackagesHTML)) {  			MatchCollection PackageMatches = Regex.Matches (this.PackagesHTML' @"<p class=""service-header"">[\s\S]+?<span>([\s\S]+?)</span>[\s\S]+?Стоимость[\s\S]+?<p class=""col-sm-7""><strong>\$?(\d+(?:\.\d{1'2})?)[\s\S]+?Дата начала действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Дата окончания действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Трафик по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?Остаток трафика по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?"' RegexOptions.Compiled | RegexOptions.Multiline | RegexOptions.IgnoreCase | RegexOptions.CultureInvariant);  			if (PackageMatches.Count > 0) {  				this.Packages.Clear ();  				foreach (Match PackangeMatch in PackageMatches) {  					if (!PackangeMatch.Success)  						continue;  					Package NewPackage = new Package ();  					NewPackage.Name = PackangeMatch.Groups [1].Value.Trim ();  					float.TryParse (PackangeMatch.Groups [2].Value' out NewPackage.Cost);  					DateTime.TryParseExact (PackangeMatch.Groups [3].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.StartDT);  					DateTime.TryParseExact (PackangeMatch.Groups [4].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.EndDT);  					float.TryParse (PackangeMatch.Groups [5].Value' out NewPackage.TraffAll);  					float.TryParse (PackangeMatch.Groups [6].Value' out NewPackage.TraffLeft);  					#if DEBUG  					if (NewPackage.StartDT.Day == 22) {  						NewPackage.StartDT = DateTime.Now.AddDays (-40);  						NewPackage.EndDT = DateTime.Now.AddDays (40);  						NewPackage.TraffAll = 3000;  						NewPackage.TraffLeft = 600;  					}  					#endif  					if (NewPackage.isActive)  						// add only active packages  						this.Packages.Add (NewPackage);  				}  				/// sort by start date... package with early start date in use first  				this.Packages.Sort (delegate (Package pk1' Package pk2) {  					return pk1.StartDT.CompareTo (pk2.StartDT);  				});  			}  			#if DEBUG  			//this.Packages.Clear();      			StringBuilder pkStr = new StringBuilder ();  			foreach (Package pk in this.Packages) {  				pkStr.Append (pk.Cost.ToString ("f2") + "\t");  				pkStr.Append (pk.StartDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  				pkStr.Append (pk.EndDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  				pkStr.Append (pk.TraffAll.ToString ("f2") + "\t");  				pkStr.Append (pk.TraffLeft.ToString ("f2") + "\t");  				pkStr.Append (pk.isActive + "\t");  				pkStr.AppendLine ();  			}  			System.IO.File.WriteAllText ("packages" + DateTime.Now.Ticks + ".txt"' pkStr.ToString ()' Encoding.UTF8);  			#endif  		}  		else {  			this.LastError = new Error ("Данные по пакетам не получены"' false);  			return;  		}  		this.LastError = null;  		this.LastUpdate = DateTime.Now;  	}  }  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: using (CookieWebClient wc = new CookieWebClient ()) {  	///System.Threading.Thread.Sleep(3000);  	wc.Headers [HttpRequestHeader.ContentType] = "application/x-www-form-urlencoded";  	NameValueCollection post_vars = new NameValueCollection ();  	post_vars.Add ("LoginForm[username]"' this.Login);  	post_vars.Add ("LoginForm[password]"' this.Password);  	post_vars.Add ("yt0"' "submit");  	this.CabinetHTML = UTF8Encoding.UTF8.GetString (wc.UploadValues ("https://cabinet.tps.uz/login"' "POST"' post_vars));  	#if DEBUG  	System.IO.File.WriteAllText ("out" + DateTime.Now.Ticks + ".html"' this.CabinetHTML' Encoding.UTF8);  	#endif  	if (String.IsNullOrEmpty (this.CabinetHTML)) {  		this.LastError = new Error ("Данные кабинета не получены"' false);  		return;  	}  	if (this.CabinetHTML.Contains ("Вход в персональный кабинет")) {  		this.LastError = new Error ("Логин\\пароль не верны"' true);  		return;  	}  	/// if all ok ///  	if (!String.IsNullOrEmpty (this.CabinetHTML)) {  		float.TryParse (GetCabinetVal (@"traffic\s*:\s*'Использовано''\s*value:\s*(\d+(?:\.\d{1'2})?)\s*}")' out this.TraffUsed);  		float.TryParse (GetCabinetVal (@"traffic\s*:\s*'Осталось''\s*value:\s*(-?\d+(?:\.\d{1'2})?)\s*}")' out this.TraffLeft);  		if (TraffLeft < 0)  			TraffLeft = 0;  		#if DEBUG  		TraffLeft = 1500;  		#endif  		float.TryParse (GetCabinetVal (@"<strong\s+class=""balance""\s+data-accid=""\d+"">\s*(-?\d+(?:\.\d{1'2})?)\s*</strong>")' out this.Balance);  		int.TryParse (GetCabinetVal (@"/pppoe_session\?id=(\d+)")' out this.CabinetID);  		float.TryParse (GetCabinetVal (@"<th>Статус</th>[\s\S]+?<td>\s*\$(\d+(?:\.\d{1'2})?)\s*</td>")' out this.AbonentPlata);  		float.TryParse (GetCabinetVal (@"<p>1\s*доллар\s*США\s*=\s*(\d+(?:\.\d{1'2})?)")' out this.Kurs);  		/// load packages page  		if (this.CabinetID != 0)  			this.PackagesHTML = UTF8Encoding.UTF8.GetString (wc.DownloadData ("https://cabinet.tps.uz/packages/list/" + this.CabinetID));  		if (!String.IsNullOrEmpty (this.PackagesHTML)) {  			MatchCollection PackageMatches = Regex.Matches (this.PackagesHTML' @"<p class=""service-header"">[\s\S]+?<span>([\s\S]+?)</span>[\s\S]+?Стоимость[\s\S]+?<p class=""col-sm-7""><strong>\$?(\d+(?:\.\d{1'2})?)[\s\S]+?Дата начала действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Дата окончания действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Трафик по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?Остаток трафика по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?"' RegexOptions.Compiled | RegexOptions.Multiline | RegexOptions.IgnoreCase | RegexOptions.CultureInvariant);  			if (PackageMatches.Count > 0) {  				this.Packages.Clear ();  				foreach (Match PackangeMatch in PackageMatches) {  					if (!PackangeMatch.Success)  						continue;  					Package NewPackage = new Package ();  					NewPackage.Name = PackangeMatch.Groups [1].Value.Trim ();  					float.TryParse (PackangeMatch.Groups [2].Value' out NewPackage.Cost);  					DateTime.TryParseExact (PackangeMatch.Groups [3].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.StartDT);  					DateTime.TryParseExact (PackangeMatch.Groups [4].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.EndDT);  					float.TryParse (PackangeMatch.Groups [5].Value' out NewPackage.TraffAll);  					float.TryParse (PackangeMatch.Groups [6].Value' out NewPackage.TraffLeft);  					#if DEBUG  					if (NewPackage.StartDT.Day == 22) {  						NewPackage.StartDT = DateTime.Now.AddDays (-40);  						NewPackage.EndDT = DateTime.Now.AddDays (40);  						NewPackage.TraffAll = 3000;  						NewPackage.TraffLeft = 600;  					}  					#endif  					if (NewPackage.isActive)  						// add only active packages  						this.Packages.Add (NewPackage);  				}  				/// sort by start date... package with early start date in use first  				this.Packages.Sort (delegate (Package pk1' Package pk2) {  					return pk1.StartDT.CompareTo (pk2.StartDT);  				});  			}  			#if DEBUG  			//this.Packages.Clear();      			StringBuilder pkStr = new StringBuilder ();  			foreach (Package pk in this.Packages) {  				pkStr.Append (pk.Cost.ToString ("f2") + "\t");  				pkStr.Append (pk.StartDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  				pkStr.Append (pk.EndDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  				pkStr.Append (pk.TraffAll.ToString ("f2") + "\t");  				pkStr.Append (pk.TraffLeft.ToString ("f2") + "\t");  				pkStr.Append (pk.isActive + "\t");  				pkStr.AppendLine ();  			}  			System.IO.File.WriteAllText ("packages" + DateTime.Now.Ticks + ".txt"' pkStr.ToString ()' Encoding.UTF8);  			#endif  		}  		else {  			this.LastError = new Error ("Данные по пакетам не получены"' false);  			return;  		}  		this.LastError = null;  		this.LastUpdate = DateTime.Now;  	}  }  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: using (CookieWebClient wc = new CookieWebClient ()) {  	///System.Threading.Thread.Sleep(3000);  	wc.Headers [HttpRequestHeader.ContentType] = "application/x-www-form-urlencoded";  	NameValueCollection post_vars = new NameValueCollection ();  	post_vars.Add ("LoginForm[username]"' this.Login);  	post_vars.Add ("LoginForm[password]"' this.Password);  	post_vars.Add ("yt0"' "submit");  	this.CabinetHTML = UTF8Encoding.UTF8.GetString (wc.UploadValues ("https://cabinet.tps.uz/login"' "POST"' post_vars));  	#if DEBUG  	System.IO.File.WriteAllText ("out" + DateTime.Now.Ticks + ".html"' this.CabinetHTML' Encoding.UTF8);  	#endif  	if (String.IsNullOrEmpty (this.CabinetHTML)) {  		this.LastError = new Error ("Данные кабинета не получены"' false);  		return;  	}  	if (this.CabinetHTML.Contains ("Вход в персональный кабинет")) {  		this.LastError = new Error ("Логин\\пароль не верны"' true);  		return;  	}  	/// if all ok ///  	if (!String.IsNullOrEmpty (this.CabinetHTML)) {  		float.TryParse (GetCabinetVal (@"traffic\s*:\s*'Использовано''\s*value:\s*(\d+(?:\.\d{1'2})?)\s*}")' out this.TraffUsed);  		float.TryParse (GetCabinetVal (@"traffic\s*:\s*'Осталось''\s*value:\s*(-?\d+(?:\.\d{1'2})?)\s*}")' out this.TraffLeft);  		if (TraffLeft < 0)  			TraffLeft = 0;  		#if DEBUG  		TraffLeft = 1500;  		#endif  		float.TryParse (GetCabinetVal (@"<strong\s+class=""balance""\s+data-accid=""\d+"">\s*(-?\d+(?:\.\d{1'2})?)\s*</strong>")' out this.Balance);  		int.TryParse (GetCabinetVal (@"/pppoe_session\?id=(\d+)")' out this.CabinetID);  		float.TryParse (GetCabinetVal (@"<th>Статус</th>[\s\S]+?<td>\s*\$(\d+(?:\.\d{1'2})?)\s*</td>")' out this.AbonentPlata);  		float.TryParse (GetCabinetVal (@"<p>1\s*доллар\s*США\s*=\s*(\d+(?:\.\d{1'2})?)")' out this.Kurs);  		/// load packages page  		if (this.CabinetID != 0)  			this.PackagesHTML = UTF8Encoding.UTF8.GetString (wc.DownloadData ("https://cabinet.tps.uz/packages/list/" + this.CabinetID));  		if (!String.IsNullOrEmpty (this.PackagesHTML)) {  			MatchCollection PackageMatches = Regex.Matches (this.PackagesHTML' @"<p class=""service-header"">[\s\S]+?<span>([\s\S]+?)</span>[\s\S]+?Стоимость[\s\S]+?<p class=""col-sm-7""><strong>\$?(\d+(?:\.\d{1'2})?)[\s\S]+?Дата начала действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Дата окончания действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Трафик по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?Остаток трафика по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?"' RegexOptions.Compiled | RegexOptions.Multiline | RegexOptions.IgnoreCase | RegexOptions.CultureInvariant);  			if (PackageMatches.Count > 0) {  				this.Packages.Clear ();  				foreach (Match PackangeMatch in PackageMatches) {  					if (!PackangeMatch.Success)  						continue;  					Package NewPackage = new Package ();  					NewPackage.Name = PackangeMatch.Groups [1].Value.Trim ();  					float.TryParse (PackangeMatch.Groups [2].Value' out NewPackage.Cost);  					DateTime.TryParseExact (PackangeMatch.Groups [3].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.StartDT);  					DateTime.TryParseExact (PackangeMatch.Groups [4].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.EndDT);  					float.TryParse (PackangeMatch.Groups [5].Value' out NewPackage.TraffAll);  					float.TryParse (PackangeMatch.Groups [6].Value' out NewPackage.TraffLeft);  					#if DEBUG  					if (NewPackage.StartDT.Day == 22) {  						NewPackage.StartDT = DateTime.Now.AddDays (-40);  						NewPackage.EndDT = DateTime.Now.AddDays (40);  						NewPackage.TraffAll = 3000;  						NewPackage.TraffLeft = 600;  					}  					#endif  					if (NewPackage.isActive)  						// add only active packages  						this.Packages.Add (NewPackage);  				}  				/// sort by start date... package with early start date in use first  				this.Packages.Sort (delegate (Package pk1' Package pk2) {  					return pk1.StartDT.CompareTo (pk2.StartDT);  				});  			}  			#if DEBUG  			//this.Packages.Clear();      			StringBuilder pkStr = new StringBuilder ();  			foreach (Package pk in this.Packages) {  				pkStr.Append (pk.Cost.ToString ("f2") + "\t");  				pkStr.Append (pk.StartDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  				pkStr.Append (pk.EndDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  				pkStr.Append (pk.TraffAll.ToString ("f2") + "\t");  				pkStr.Append (pk.TraffLeft.ToString ("f2") + "\t");  				pkStr.Append (pk.isActive + "\t");  				pkStr.AppendLine ();  			}  			System.IO.File.WriteAllText ("packages" + DateTime.Now.Ticks + ".txt"' pkStr.ToString ()' Encoding.UTF8);  			#endif  		}  		else {  			this.LastError = new Error ("Данные по пакетам не получены"' false);  			return;  		}  		this.LastError = null;  		this.LastUpdate = DateTime.Now;  	}  }  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: using (CookieWebClient wc = new CookieWebClient ()) {  	///System.Threading.Thread.Sleep(3000);  	wc.Headers [HttpRequestHeader.ContentType] = "application/x-www-form-urlencoded";  	NameValueCollection post_vars = new NameValueCollection ();  	post_vars.Add ("LoginForm[username]"' this.Login);  	post_vars.Add ("LoginForm[password]"' this.Password);  	post_vars.Add ("yt0"' "submit");  	this.CabinetHTML = UTF8Encoding.UTF8.GetString (wc.UploadValues ("https://cabinet.tps.uz/login"' "POST"' post_vars));  	#if DEBUG  	System.IO.File.WriteAllText ("out" + DateTime.Now.Ticks + ".html"' this.CabinetHTML' Encoding.UTF8);  	#endif  	if (String.IsNullOrEmpty (this.CabinetHTML)) {  		this.LastError = new Error ("Данные кабинета не получены"' false);  		return;  	}  	if (this.CabinetHTML.Contains ("Вход в персональный кабинет")) {  		this.LastError = new Error ("Логин\\пароль не верны"' true);  		return;  	}  	/// if all ok ///  	if (!String.IsNullOrEmpty (this.CabinetHTML)) {  		float.TryParse (GetCabinetVal (@"traffic\s*:\s*'Использовано''\s*value:\s*(\d+(?:\.\d{1'2})?)\s*}")' out this.TraffUsed);  		float.TryParse (GetCabinetVal (@"traffic\s*:\s*'Осталось''\s*value:\s*(-?\d+(?:\.\d{1'2})?)\s*}")' out this.TraffLeft);  		if (TraffLeft < 0)  			TraffLeft = 0;  		#if DEBUG  		TraffLeft = 1500;  		#endif  		float.TryParse (GetCabinetVal (@"<strong\s+class=""balance""\s+data-accid=""\d+"">\s*(-?\d+(?:\.\d{1'2})?)\s*</strong>")' out this.Balance);  		int.TryParse (GetCabinetVal (@"/pppoe_session\?id=(\d+)")' out this.CabinetID);  		float.TryParse (GetCabinetVal (@"<th>Статус</th>[\s\S]+?<td>\s*\$(\d+(?:\.\d{1'2})?)\s*</td>")' out this.AbonentPlata);  		float.TryParse (GetCabinetVal (@"<p>1\s*доллар\s*США\s*=\s*(\d+(?:\.\d{1'2})?)")' out this.Kurs);  		/// load packages page  		if (this.CabinetID != 0)  			this.PackagesHTML = UTF8Encoding.UTF8.GetString (wc.DownloadData ("https://cabinet.tps.uz/packages/list/" + this.CabinetID));  		if (!String.IsNullOrEmpty (this.PackagesHTML)) {  			MatchCollection PackageMatches = Regex.Matches (this.PackagesHTML' @"<p class=""service-header"">[\s\S]+?<span>([\s\S]+?)</span>[\s\S]+?Стоимость[\s\S]+?<p class=""col-sm-7""><strong>\$?(\d+(?:\.\d{1'2})?)[\s\S]+?Дата начала действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Дата окончания действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Трафик по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?Остаток трафика по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?"' RegexOptions.Compiled | RegexOptions.Multiline | RegexOptions.IgnoreCase | RegexOptions.CultureInvariant);  			if (PackageMatches.Count > 0) {  				this.Packages.Clear ();  				foreach (Match PackangeMatch in PackageMatches) {  					if (!PackangeMatch.Success)  						continue;  					Package NewPackage = new Package ();  					NewPackage.Name = PackangeMatch.Groups [1].Value.Trim ();  					float.TryParse (PackangeMatch.Groups [2].Value' out NewPackage.Cost);  					DateTime.TryParseExact (PackangeMatch.Groups [3].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.StartDT);  					DateTime.TryParseExact (PackangeMatch.Groups [4].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.EndDT);  					float.TryParse (PackangeMatch.Groups [5].Value' out NewPackage.TraffAll);  					float.TryParse (PackangeMatch.Groups [6].Value' out NewPackage.TraffLeft);  					#if DEBUG  					if (NewPackage.StartDT.Day == 22) {  						NewPackage.StartDT = DateTime.Now.AddDays (-40);  						NewPackage.EndDT = DateTime.Now.AddDays (40);  						NewPackage.TraffAll = 3000;  						NewPackage.TraffLeft = 600;  					}  					#endif  					if (NewPackage.isActive)  						// add only active packages  						this.Packages.Add (NewPackage);  				}  				/// sort by start date... package with early start date in use first  				this.Packages.Sort (delegate (Package pk1' Package pk2) {  					return pk1.StartDT.CompareTo (pk2.StartDT);  				});  			}  			#if DEBUG  			//this.Packages.Clear();      			StringBuilder pkStr = new StringBuilder ();  			foreach (Package pk in this.Packages) {  				pkStr.Append (pk.Cost.ToString ("f2") + "\t");  				pkStr.Append (pk.StartDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  				pkStr.Append (pk.EndDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  				pkStr.Append (pk.TraffAll.ToString ("f2") + "\t");  				pkStr.Append (pk.TraffLeft.ToString ("f2") + "\t");  				pkStr.Append (pk.isActive + "\t");  				pkStr.AppendLine ();  			}  			System.IO.File.WriteAllText ("packages" + DateTime.Now.Ticks + ".txt"' pkStr.ToString ()' Encoding.UTF8);  			#endif  		}  		else {  			this.LastError = new Error ("Данные по пакетам не получены"' false);  			return;  		}  		this.LastError = null;  		this.LastUpdate = DateTime.Now;  	}  }  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: using (CookieWebClient wc = new CookieWebClient ()) {  	///System.Threading.Thread.Sleep(3000);  	wc.Headers [HttpRequestHeader.ContentType] = "application/x-www-form-urlencoded";  	NameValueCollection post_vars = new NameValueCollection ();  	post_vars.Add ("LoginForm[username]"' this.Login);  	post_vars.Add ("LoginForm[password]"' this.Password);  	post_vars.Add ("yt0"' "submit");  	this.CabinetHTML = UTF8Encoding.UTF8.GetString (wc.UploadValues ("https://cabinet.tps.uz/login"' "POST"' post_vars));  	#if DEBUG  	System.IO.File.WriteAllText ("out" + DateTime.Now.Ticks + ".html"' this.CabinetHTML' Encoding.UTF8);  	#endif  	if (String.IsNullOrEmpty (this.CabinetHTML)) {  		this.LastError = new Error ("Данные кабинета не получены"' false);  		return;  	}  	if (this.CabinetHTML.Contains ("Вход в персональный кабинет")) {  		this.LastError = new Error ("Логин\\пароль не верны"' true);  		return;  	}  	/// if all ok ///  	if (!String.IsNullOrEmpty (this.CabinetHTML)) {  		float.TryParse (GetCabinetVal (@"traffic\s*:\s*'Использовано''\s*value:\s*(\d+(?:\.\d{1'2})?)\s*}")' out this.TraffUsed);  		float.TryParse (GetCabinetVal (@"traffic\s*:\s*'Осталось''\s*value:\s*(-?\d+(?:\.\d{1'2})?)\s*}")' out this.TraffLeft);  		if (TraffLeft < 0)  			TraffLeft = 0;  		#if DEBUG  		TraffLeft = 1500;  		#endif  		float.TryParse (GetCabinetVal (@"<strong\s+class=""balance""\s+data-accid=""\d+"">\s*(-?\d+(?:\.\d{1'2})?)\s*</strong>")' out this.Balance);  		int.TryParse (GetCabinetVal (@"/pppoe_session\?id=(\d+)")' out this.CabinetID);  		float.TryParse (GetCabinetVal (@"<th>Статус</th>[\s\S]+?<td>\s*\$(\d+(?:\.\d{1'2})?)\s*</td>")' out this.AbonentPlata);  		float.TryParse (GetCabinetVal (@"<p>1\s*доллар\s*США\s*=\s*(\d+(?:\.\d{1'2})?)")' out this.Kurs);  		/// load packages page  		if (this.CabinetID != 0)  			this.PackagesHTML = UTF8Encoding.UTF8.GetString (wc.DownloadData ("https://cabinet.tps.uz/packages/list/" + this.CabinetID));  		if (!String.IsNullOrEmpty (this.PackagesHTML)) {  			MatchCollection PackageMatches = Regex.Matches (this.PackagesHTML' @"<p class=""service-header"">[\s\S]+?<span>([\s\S]+?)</span>[\s\S]+?Стоимость[\s\S]+?<p class=""col-sm-7""><strong>\$?(\d+(?:\.\d{1'2})?)[\s\S]+?Дата начала действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Дата окончания действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Трафик по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?Остаток трафика по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?"' RegexOptions.Compiled | RegexOptions.Multiline | RegexOptions.IgnoreCase | RegexOptions.CultureInvariant);  			if (PackageMatches.Count > 0) {  				this.Packages.Clear ();  				foreach (Match PackangeMatch in PackageMatches) {  					if (!PackangeMatch.Success)  						continue;  					Package NewPackage = new Package ();  					NewPackage.Name = PackangeMatch.Groups [1].Value.Trim ();  					float.TryParse (PackangeMatch.Groups [2].Value' out NewPackage.Cost);  					DateTime.TryParseExact (PackangeMatch.Groups [3].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.StartDT);  					DateTime.TryParseExact (PackangeMatch.Groups [4].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.EndDT);  					float.TryParse (PackangeMatch.Groups [5].Value' out NewPackage.TraffAll);  					float.TryParse (PackangeMatch.Groups [6].Value' out NewPackage.TraffLeft);  					#if DEBUG  					if (NewPackage.StartDT.Day == 22) {  						NewPackage.StartDT = DateTime.Now.AddDays (-40);  						NewPackage.EndDT = DateTime.Now.AddDays (40);  						NewPackage.TraffAll = 3000;  						NewPackage.TraffLeft = 600;  					}  					#endif  					if (NewPackage.isActive)  						// add only active packages  						this.Packages.Add (NewPackage);  				}  				/// sort by start date... package with early start date in use first  				this.Packages.Sort (delegate (Package pk1' Package pk2) {  					return pk1.StartDT.CompareTo (pk2.StartDT);  				});  			}  			#if DEBUG  			//this.Packages.Clear();      			StringBuilder pkStr = new StringBuilder ();  			foreach (Package pk in this.Packages) {  				pkStr.Append (pk.Cost.ToString ("f2") + "\t");  				pkStr.Append (pk.StartDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  				pkStr.Append (pk.EndDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  				pkStr.Append (pk.TraffAll.ToString ("f2") + "\t");  				pkStr.Append (pk.TraffLeft.ToString ("f2") + "\t");  				pkStr.Append (pk.isActive + "\t");  				pkStr.AppendLine ();  			}  			System.IO.File.WriteAllText ("packages" + DateTime.Now.Ticks + ".txt"' pkStr.ToString ()' Encoding.UTF8);  			#endif  		}  		else {  			this.LastError = new Error ("Данные по пакетам не получены"' false);  			return;  		}  		this.LastError = null;  		this.LastUpdate = DateTime.Now;  	}  }  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: using (CookieWebClient wc = new CookieWebClient ()) {  	///System.Threading.Thread.Sleep(3000);  	wc.Headers [HttpRequestHeader.ContentType] = "application/x-www-form-urlencoded";  	NameValueCollection post_vars = new NameValueCollection ();  	post_vars.Add ("LoginForm[username]"' this.Login);  	post_vars.Add ("LoginForm[password]"' this.Password);  	post_vars.Add ("yt0"' "submit");  	this.CabinetHTML = UTF8Encoding.UTF8.GetString (wc.UploadValues ("https://cabinet.tps.uz/login"' "POST"' post_vars));  	#if DEBUG  	System.IO.File.WriteAllText ("out" + DateTime.Now.Ticks + ".html"' this.CabinetHTML' Encoding.UTF8);  	#endif  	if (String.IsNullOrEmpty (this.CabinetHTML)) {  		this.LastError = new Error ("Данные кабинета не получены"' false);  		return;  	}  	if (this.CabinetHTML.Contains ("Вход в персональный кабинет")) {  		this.LastError = new Error ("Логин\\пароль не верны"' true);  		return;  	}  	/// if all ok ///  	if (!String.IsNullOrEmpty (this.CabinetHTML)) {  		float.TryParse (GetCabinetVal (@"traffic\s*:\s*'Использовано''\s*value:\s*(\d+(?:\.\d{1'2})?)\s*}")' out this.TraffUsed);  		float.TryParse (GetCabinetVal (@"traffic\s*:\s*'Осталось''\s*value:\s*(-?\d+(?:\.\d{1'2})?)\s*}")' out this.TraffLeft);  		if (TraffLeft < 0)  			TraffLeft = 0;  		#if DEBUG  		TraffLeft = 1500;  		#endif  		float.TryParse (GetCabinetVal (@"<strong\s+class=""balance""\s+data-accid=""\d+"">\s*(-?\d+(?:\.\d{1'2})?)\s*</strong>")' out this.Balance);  		int.TryParse (GetCabinetVal (@"/pppoe_session\?id=(\d+)")' out this.CabinetID);  		float.TryParse (GetCabinetVal (@"<th>Статус</th>[\s\S]+?<td>\s*\$(\d+(?:\.\d{1'2})?)\s*</td>")' out this.AbonentPlata);  		float.TryParse (GetCabinetVal (@"<p>1\s*доллар\s*США\s*=\s*(\d+(?:\.\d{1'2})?)")' out this.Kurs);  		/// load packages page  		if (this.CabinetID != 0)  			this.PackagesHTML = UTF8Encoding.UTF8.GetString (wc.DownloadData ("https://cabinet.tps.uz/packages/list/" + this.CabinetID));  		if (!String.IsNullOrEmpty (this.PackagesHTML)) {  			MatchCollection PackageMatches = Regex.Matches (this.PackagesHTML' @"<p class=""service-header"">[\s\S]+?<span>([\s\S]+?)</span>[\s\S]+?Стоимость[\s\S]+?<p class=""col-sm-7""><strong>\$?(\d+(?:\.\d{1'2})?)[\s\S]+?Дата начала действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Дата окончания действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Трафик по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?Остаток трафика по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?"' RegexOptions.Compiled | RegexOptions.Multiline | RegexOptions.IgnoreCase | RegexOptions.CultureInvariant);  			if (PackageMatches.Count > 0) {  				this.Packages.Clear ();  				foreach (Match PackangeMatch in PackageMatches) {  					if (!PackangeMatch.Success)  						continue;  					Package NewPackage = new Package ();  					NewPackage.Name = PackangeMatch.Groups [1].Value.Trim ();  					float.TryParse (PackangeMatch.Groups [2].Value' out NewPackage.Cost);  					DateTime.TryParseExact (PackangeMatch.Groups [3].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.StartDT);  					DateTime.TryParseExact (PackangeMatch.Groups [4].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.EndDT);  					float.TryParse (PackangeMatch.Groups [5].Value' out NewPackage.TraffAll);  					float.TryParse (PackangeMatch.Groups [6].Value' out NewPackage.TraffLeft);  					#if DEBUG  					if (NewPackage.StartDT.Day == 22) {  						NewPackage.StartDT = DateTime.Now.AddDays (-40);  						NewPackage.EndDT = DateTime.Now.AddDays (40);  						NewPackage.TraffAll = 3000;  						NewPackage.TraffLeft = 600;  					}  					#endif  					if (NewPackage.isActive)  						// add only active packages  						this.Packages.Add (NewPackage);  				}  				/// sort by start date... package with early start date in use first  				this.Packages.Sort (delegate (Package pk1' Package pk2) {  					return pk1.StartDT.CompareTo (pk2.StartDT);  				});  			}  			#if DEBUG  			//this.Packages.Clear();      			StringBuilder pkStr = new StringBuilder ();  			foreach (Package pk in this.Packages) {  				pkStr.Append (pk.Cost.ToString ("f2") + "\t");  				pkStr.Append (pk.StartDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  				pkStr.Append (pk.EndDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  				pkStr.Append (pk.TraffAll.ToString ("f2") + "\t");  				pkStr.Append (pk.TraffLeft.ToString ("f2") + "\t");  				pkStr.Append (pk.isActive + "\t");  				pkStr.AppendLine ();  			}  			System.IO.File.WriteAllText ("packages" + DateTime.Now.Ticks + ".txt"' pkStr.ToString ()' Encoding.UTF8);  			#endif  		}  		else {  			this.LastError = new Error ("Данные по пакетам не получены"' false);  			return;  		}  		this.LastError = null;  		this.LastUpdate = DateTime.Now;  	}  }  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: using (CookieWebClient wc = new CookieWebClient ()) {  	///System.Threading.Thread.Sleep(3000);  	wc.Headers [HttpRequestHeader.ContentType] = "application/x-www-form-urlencoded";  	NameValueCollection post_vars = new NameValueCollection ();  	post_vars.Add ("LoginForm[username]"' this.Login);  	post_vars.Add ("LoginForm[password]"' this.Password);  	post_vars.Add ("yt0"' "submit");  	this.CabinetHTML = UTF8Encoding.UTF8.GetString (wc.UploadValues ("https://cabinet.tps.uz/login"' "POST"' post_vars));  	#if DEBUG  	System.IO.File.WriteAllText ("out" + DateTime.Now.Ticks + ".html"' this.CabinetHTML' Encoding.UTF8);  	#endif  	if (String.IsNullOrEmpty (this.CabinetHTML)) {  		this.LastError = new Error ("Данные кабинета не получены"' false);  		return;  	}  	if (this.CabinetHTML.Contains ("Вход в персональный кабинет")) {  		this.LastError = new Error ("Логин\\пароль не верны"' true);  		return;  	}  	/// if all ok ///  	if (!String.IsNullOrEmpty (this.CabinetHTML)) {  		float.TryParse (GetCabinetVal (@"traffic\s*:\s*'Использовано''\s*value:\s*(\d+(?:\.\d{1'2})?)\s*}")' out this.TraffUsed);  		float.TryParse (GetCabinetVal (@"traffic\s*:\s*'Осталось''\s*value:\s*(-?\d+(?:\.\d{1'2})?)\s*}")' out this.TraffLeft);  		if (TraffLeft < 0)  			TraffLeft = 0;  		#if DEBUG  		TraffLeft = 1500;  		#endif  		float.TryParse (GetCabinetVal (@"<strong\s+class=""balance""\s+data-accid=""\d+"">\s*(-?\d+(?:\.\d{1'2})?)\s*</strong>")' out this.Balance);  		int.TryParse (GetCabinetVal (@"/pppoe_session\?id=(\d+)")' out this.CabinetID);  		float.TryParse (GetCabinetVal (@"<th>Статус</th>[\s\S]+?<td>\s*\$(\d+(?:\.\d{1'2})?)\s*</td>")' out this.AbonentPlata);  		float.TryParse (GetCabinetVal (@"<p>1\s*доллар\s*США\s*=\s*(\d+(?:\.\d{1'2})?)")' out this.Kurs);  		/// load packages page  		if (this.CabinetID != 0)  			this.PackagesHTML = UTF8Encoding.UTF8.GetString (wc.DownloadData ("https://cabinet.tps.uz/packages/list/" + this.CabinetID));  		if (!String.IsNullOrEmpty (this.PackagesHTML)) {  			MatchCollection PackageMatches = Regex.Matches (this.PackagesHTML' @"<p class=""service-header"">[\s\S]+?<span>([\s\S]+?)</span>[\s\S]+?Стоимость[\s\S]+?<p class=""col-sm-7""><strong>\$?(\d+(?:\.\d{1'2})?)[\s\S]+?Дата начала действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Дата окончания действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Трафик по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?Остаток трафика по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?"' RegexOptions.Compiled | RegexOptions.Multiline | RegexOptions.IgnoreCase | RegexOptions.CultureInvariant);  			if (PackageMatches.Count > 0) {  				this.Packages.Clear ();  				foreach (Match PackangeMatch in PackageMatches) {  					if (!PackangeMatch.Success)  						continue;  					Package NewPackage = new Package ();  					NewPackage.Name = PackangeMatch.Groups [1].Value.Trim ();  					float.TryParse (PackangeMatch.Groups [2].Value' out NewPackage.Cost);  					DateTime.TryParseExact (PackangeMatch.Groups [3].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.StartDT);  					DateTime.TryParseExact (PackangeMatch.Groups [4].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.EndDT);  					float.TryParse (PackangeMatch.Groups [5].Value' out NewPackage.TraffAll);  					float.TryParse (PackangeMatch.Groups [6].Value' out NewPackage.TraffLeft);  					#if DEBUG  					if (NewPackage.StartDT.Day == 22) {  						NewPackage.StartDT = DateTime.Now.AddDays (-40);  						NewPackage.EndDT = DateTime.Now.AddDays (40);  						NewPackage.TraffAll = 3000;  						NewPackage.TraffLeft = 600;  					}  					#endif  					if (NewPackage.isActive)  						// add only active packages  						this.Packages.Add (NewPackage);  				}  				/// sort by start date... package with early start date in use first  				this.Packages.Sort (delegate (Package pk1' Package pk2) {  					return pk1.StartDT.CompareTo (pk2.StartDT);  				});  			}  			#if DEBUG  			//this.Packages.Clear();      			StringBuilder pkStr = new StringBuilder ();  			foreach (Package pk in this.Packages) {  				pkStr.Append (pk.Cost.ToString ("f2") + "\t");  				pkStr.Append (pk.StartDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  				pkStr.Append (pk.EndDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  				pkStr.Append (pk.TraffAll.ToString ("f2") + "\t");  				pkStr.Append (pk.TraffLeft.ToString ("f2") + "\t");  				pkStr.Append (pk.isActive + "\t");  				pkStr.AppendLine ();  			}  			System.IO.File.WriteAllText ("packages" + DateTime.Now.Ticks + ".txt"' pkStr.ToString ()' Encoding.UTF8);  			#endif  		}  		else {  			this.LastError = new Error ("Данные по пакетам не получены"' false);  			return;  		}  		this.LastError = null;  		this.LastUpdate = DateTime.Now;  	}  }  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: using (CookieWebClient wc = new CookieWebClient ()) {  	///System.Threading.Thread.Sleep(3000);  	wc.Headers [HttpRequestHeader.ContentType] = "application/x-www-form-urlencoded";  	NameValueCollection post_vars = new NameValueCollection ();  	post_vars.Add ("LoginForm[username]"' this.Login);  	post_vars.Add ("LoginForm[password]"' this.Password);  	post_vars.Add ("yt0"' "submit");  	this.CabinetHTML = UTF8Encoding.UTF8.GetString (wc.UploadValues ("https://cabinet.tps.uz/login"' "POST"' post_vars));  	#if DEBUG  	System.IO.File.WriteAllText ("out" + DateTime.Now.Ticks + ".html"' this.CabinetHTML' Encoding.UTF8);  	#endif  	if (String.IsNullOrEmpty (this.CabinetHTML)) {  		this.LastError = new Error ("Данные кабинета не получены"' false);  		return;  	}  	if (this.CabinetHTML.Contains ("Вход в персональный кабинет")) {  		this.LastError = new Error ("Логин\\пароль не верны"' true);  		return;  	}  	/// if all ok ///  	if (!String.IsNullOrEmpty (this.CabinetHTML)) {  		float.TryParse (GetCabinetVal (@"traffic\s*:\s*'Использовано''\s*value:\s*(\d+(?:\.\d{1'2})?)\s*}")' out this.TraffUsed);  		float.TryParse (GetCabinetVal (@"traffic\s*:\s*'Осталось''\s*value:\s*(-?\d+(?:\.\d{1'2})?)\s*}")' out this.TraffLeft);  		if (TraffLeft < 0)  			TraffLeft = 0;  		#if DEBUG  		TraffLeft = 1500;  		#endif  		float.TryParse (GetCabinetVal (@"<strong\s+class=""balance""\s+data-accid=""\d+"">\s*(-?\d+(?:\.\d{1'2})?)\s*</strong>")' out this.Balance);  		int.TryParse (GetCabinetVal (@"/pppoe_session\?id=(\d+)")' out this.CabinetID);  		float.TryParse (GetCabinetVal (@"<th>Статус</th>[\s\S]+?<td>\s*\$(\d+(?:\.\d{1'2})?)\s*</td>")' out this.AbonentPlata);  		float.TryParse (GetCabinetVal (@"<p>1\s*доллар\s*США\s*=\s*(\d+(?:\.\d{1'2})?)")' out this.Kurs);  		/// load packages page  		if (this.CabinetID != 0)  			this.PackagesHTML = UTF8Encoding.UTF8.GetString (wc.DownloadData ("https://cabinet.tps.uz/packages/list/" + this.CabinetID));  		if (!String.IsNullOrEmpty (this.PackagesHTML)) {  			MatchCollection PackageMatches = Regex.Matches (this.PackagesHTML' @"<p class=""service-header"">[\s\S]+?<span>([\s\S]+?)</span>[\s\S]+?Стоимость[\s\S]+?<p class=""col-sm-7""><strong>\$?(\d+(?:\.\d{1'2})?)[\s\S]+?Дата начала действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Дата окончания действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Трафик по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?Остаток трафика по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?"' RegexOptions.Compiled | RegexOptions.Multiline | RegexOptions.IgnoreCase | RegexOptions.CultureInvariant);  			if (PackageMatches.Count > 0) {  				this.Packages.Clear ();  				foreach (Match PackangeMatch in PackageMatches) {  					if (!PackangeMatch.Success)  						continue;  					Package NewPackage = new Package ();  					NewPackage.Name = PackangeMatch.Groups [1].Value.Trim ();  					float.TryParse (PackangeMatch.Groups [2].Value' out NewPackage.Cost);  					DateTime.TryParseExact (PackangeMatch.Groups [3].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.StartDT);  					DateTime.TryParseExact (PackangeMatch.Groups [4].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.EndDT);  					float.TryParse (PackangeMatch.Groups [5].Value' out NewPackage.TraffAll);  					float.TryParse (PackangeMatch.Groups [6].Value' out NewPackage.TraffLeft);  					#if DEBUG  					if (NewPackage.StartDT.Day == 22) {  						NewPackage.StartDT = DateTime.Now.AddDays (-40);  						NewPackage.EndDT = DateTime.Now.AddDays (40);  						NewPackage.TraffAll = 3000;  						NewPackage.TraffLeft = 600;  					}  					#endif  					if (NewPackage.isActive)  						// add only active packages  						this.Packages.Add (NewPackage);  				}  				/// sort by start date... package with early start date in use first  				this.Packages.Sort (delegate (Package pk1' Package pk2) {  					return pk1.StartDT.CompareTo (pk2.StartDT);  				});  			}  			#if DEBUG  			//this.Packages.Clear();      			StringBuilder pkStr = new StringBuilder ();  			foreach (Package pk in this.Packages) {  				pkStr.Append (pk.Cost.ToString ("f2") + "\t");  				pkStr.Append (pk.StartDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  				pkStr.Append (pk.EndDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  				pkStr.Append (pk.TraffAll.ToString ("f2") + "\t");  				pkStr.Append (pk.TraffLeft.ToString ("f2") + "\t");  				pkStr.Append (pk.isActive + "\t");  				pkStr.AppendLine ();  			}  			System.IO.File.WriteAllText ("packages" + DateTime.Now.Ticks + ".txt"' pkStr.ToString ()' Encoding.UTF8);  			#endif  		}  		else {  			this.LastError = new Error ("Данные по пакетам не получены"' false);  			return;  		}  		this.LastError = null;  		this.LastUpdate = DateTime.Now;  	}  }  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: if (!String.IsNullOrEmpty (this.CabinetHTML)) {  	float.TryParse (GetCabinetVal (@"traffic\s*:\s*'Использовано''\s*value:\s*(\d+(?:\.\d{1'2})?)\s*}")' out this.TraffUsed);  	float.TryParse (GetCabinetVal (@"traffic\s*:\s*'Осталось''\s*value:\s*(-?\d+(?:\.\d{1'2})?)\s*}")' out this.TraffLeft);  	if (TraffLeft < 0)  		TraffLeft = 0;  	#if DEBUG  	TraffLeft = 1500;  	#endif  	float.TryParse (GetCabinetVal (@"<strong\s+class=""balance""\s+data-accid=""\d+"">\s*(-?\d+(?:\.\d{1'2})?)\s*</strong>")' out this.Balance);  	int.TryParse (GetCabinetVal (@"/pppoe_session\?id=(\d+)")' out this.CabinetID);  	float.TryParse (GetCabinetVal (@"<th>Статус</th>[\s\S]+?<td>\s*\$(\d+(?:\.\d{1'2})?)\s*</td>")' out this.AbonentPlata);  	float.TryParse (GetCabinetVal (@"<p>1\s*доллар\s*США\s*=\s*(\d+(?:\.\d{1'2})?)")' out this.Kurs);  	/// load packages page  	if (this.CabinetID != 0)  		this.PackagesHTML = UTF8Encoding.UTF8.GetString (wc.DownloadData ("https://cabinet.tps.uz/packages/list/" + this.CabinetID));  	if (!String.IsNullOrEmpty (this.PackagesHTML)) {  		MatchCollection PackageMatches = Regex.Matches (this.PackagesHTML' @"<p class=""service-header"">[\s\S]+?<span>([\s\S]+?)</span>[\s\S]+?Стоимость[\s\S]+?<p class=""col-sm-7""><strong>\$?(\d+(?:\.\d{1'2})?)[\s\S]+?Дата начала действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Дата окончания действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Трафик по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?Остаток трафика по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?"' RegexOptions.Compiled | RegexOptions.Multiline | RegexOptions.IgnoreCase | RegexOptions.CultureInvariant);  		if (PackageMatches.Count > 0) {  			this.Packages.Clear ();  			foreach (Match PackangeMatch in PackageMatches) {  				if (!PackangeMatch.Success)  					continue;  				Package NewPackage = new Package ();  				NewPackage.Name = PackangeMatch.Groups [1].Value.Trim ();  				float.TryParse (PackangeMatch.Groups [2].Value' out NewPackage.Cost);  				DateTime.TryParseExact (PackangeMatch.Groups [3].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.StartDT);  				DateTime.TryParseExact (PackangeMatch.Groups [4].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.EndDT);  				float.TryParse (PackangeMatch.Groups [5].Value' out NewPackage.TraffAll);  				float.TryParse (PackangeMatch.Groups [6].Value' out NewPackage.TraffLeft);  				#if DEBUG  				if (NewPackage.StartDT.Day == 22) {  					NewPackage.StartDT = DateTime.Now.AddDays (-40);  					NewPackage.EndDT = DateTime.Now.AddDays (40);  					NewPackage.TraffAll = 3000;  					NewPackage.TraffLeft = 600;  				}  				#endif  				if (NewPackage.isActive)  					// add only active packages  					this.Packages.Add (NewPackage);  			}  			/// sort by start date... package with early start date in use first  			this.Packages.Sort (delegate (Package pk1' Package pk2) {  				return pk1.StartDT.CompareTo (pk2.StartDT);  			});  		}  		#if DEBUG  		//this.Packages.Clear();      		StringBuilder pkStr = new StringBuilder ();  		foreach (Package pk in this.Packages) {  			pkStr.Append (pk.Cost.ToString ("f2") + "\t");  			pkStr.Append (pk.StartDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  			pkStr.Append (pk.EndDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  			pkStr.Append (pk.TraffAll.ToString ("f2") + "\t");  			pkStr.Append (pk.TraffLeft.ToString ("f2") + "\t");  			pkStr.Append (pk.isActive + "\t");  			pkStr.AppendLine ();  		}  		System.IO.File.WriteAllText ("packages" + DateTime.Now.Ticks + ".txt"' pkStr.ToString ()' Encoding.UTF8);  		#endif  	}  	else {  		this.LastError = new Error ("Данные по пакетам не получены"' false);  		return;  	}  	this.LastError = null;  	this.LastUpdate = DateTime.Now;  }  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: if (!String.IsNullOrEmpty (this.CabinetHTML)) {  	float.TryParse (GetCabinetVal (@"traffic\s*:\s*'Использовано''\s*value:\s*(\d+(?:\.\d{1'2})?)\s*}")' out this.TraffUsed);  	float.TryParse (GetCabinetVal (@"traffic\s*:\s*'Осталось''\s*value:\s*(-?\d+(?:\.\d{1'2})?)\s*}")' out this.TraffLeft);  	if (TraffLeft < 0)  		TraffLeft = 0;  	#if DEBUG  	TraffLeft = 1500;  	#endif  	float.TryParse (GetCabinetVal (@"<strong\s+class=""balance""\s+data-accid=""\d+"">\s*(-?\d+(?:\.\d{1'2})?)\s*</strong>")' out this.Balance);  	int.TryParse (GetCabinetVal (@"/pppoe_session\?id=(\d+)")' out this.CabinetID);  	float.TryParse (GetCabinetVal (@"<th>Статус</th>[\s\S]+?<td>\s*\$(\d+(?:\.\d{1'2})?)\s*</td>")' out this.AbonentPlata);  	float.TryParse (GetCabinetVal (@"<p>1\s*доллар\s*США\s*=\s*(\d+(?:\.\d{1'2})?)")' out this.Kurs);  	/// load packages page  	if (this.CabinetID != 0)  		this.PackagesHTML = UTF8Encoding.UTF8.GetString (wc.DownloadData ("https://cabinet.tps.uz/packages/list/" + this.CabinetID));  	if (!String.IsNullOrEmpty (this.PackagesHTML)) {  		MatchCollection PackageMatches = Regex.Matches (this.PackagesHTML' @"<p class=""service-header"">[\s\S]+?<span>([\s\S]+?)</span>[\s\S]+?Стоимость[\s\S]+?<p class=""col-sm-7""><strong>\$?(\d+(?:\.\d{1'2})?)[\s\S]+?Дата начала действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Дата окончания действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Трафик по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?Остаток трафика по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?"' RegexOptions.Compiled | RegexOptions.Multiline | RegexOptions.IgnoreCase | RegexOptions.CultureInvariant);  		if (PackageMatches.Count > 0) {  			this.Packages.Clear ();  			foreach (Match PackangeMatch in PackageMatches) {  				if (!PackangeMatch.Success)  					continue;  				Package NewPackage = new Package ();  				NewPackage.Name = PackangeMatch.Groups [1].Value.Trim ();  				float.TryParse (PackangeMatch.Groups [2].Value' out NewPackage.Cost);  				DateTime.TryParseExact (PackangeMatch.Groups [3].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.StartDT);  				DateTime.TryParseExact (PackangeMatch.Groups [4].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.EndDT);  				float.TryParse (PackangeMatch.Groups [5].Value' out NewPackage.TraffAll);  				float.TryParse (PackangeMatch.Groups [6].Value' out NewPackage.TraffLeft);  				#if DEBUG  				if (NewPackage.StartDT.Day == 22) {  					NewPackage.StartDT = DateTime.Now.AddDays (-40);  					NewPackage.EndDT = DateTime.Now.AddDays (40);  					NewPackage.TraffAll = 3000;  					NewPackage.TraffLeft = 600;  				}  				#endif  				if (NewPackage.isActive)  					// add only active packages  					this.Packages.Add (NewPackage);  			}  			/// sort by start date... package with early start date in use first  			this.Packages.Sort (delegate (Package pk1' Package pk2) {  				return pk1.StartDT.CompareTo (pk2.StartDT);  			});  		}  		#if DEBUG  		//this.Packages.Clear();      		StringBuilder pkStr = new StringBuilder ();  		foreach (Package pk in this.Packages) {  			pkStr.Append (pk.Cost.ToString ("f2") + "\t");  			pkStr.Append (pk.StartDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  			pkStr.Append (pk.EndDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  			pkStr.Append (pk.TraffAll.ToString ("f2") + "\t");  			pkStr.Append (pk.TraffLeft.ToString ("f2") + "\t");  			pkStr.Append (pk.isActive + "\t");  			pkStr.AppendLine ();  		}  		System.IO.File.WriteAllText ("packages" + DateTime.Now.Ticks + ".txt"' pkStr.ToString ()' Encoding.UTF8);  		#endif  	}  	else {  		this.LastError = new Error ("Данные по пакетам не получены"' false);  		return;  	}  	this.LastError = null;  	this.LastUpdate = DateTime.Now;  }  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: if (!String.IsNullOrEmpty (this.CabinetHTML)) {  	float.TryParse (GetCabinetVal (@"traffic\s*:\s*'Использовано''\s*value:\s*(\d+(?:\.\d{1'2})?)\s*}")' out this.TraffUsed);  	float.TryParse (GetCabinetVal (@"traffic\s*:\s*'Осталось''\s*value:\s*(-?\d+(?:\.\d{1'2})?)\s*}")' out this.TraffLeft);  	if (TraffLeft < 0)  		TraffLeft = 0;  	#if DEBUG  	TraffLeft = 1500;  	#endif  	float.TryParse (GetCabinetVal (@"<strong\s+class=""balance""\s+data-accid=""\d+"">\s*(-?\d+(?:\.\d{1'2})?)\s*</strong>")' out this.Balance);  	int.TryParse (GetCabinetVal (@"/pppoe_session\?id=(\d+)")' out this.CabinetID);  	float.TryParse (GetCabinetVal (@"<th>Статус</th>[\s\S]+?<td>\s*\$(\d+(?:\.\d{1'2})?)\s*</td>")' out this.AbonentPlata);  	float.TryParse (GetCabinetVal (@"<p>1\s*доллар\s*США\s*=\s*(\d+(?:\.\d{1'2})?)")' out this.Kurs);  	/// load packages page  	if (this.CabinetID != 0)  		this.PackagesHTML = UTF8Encoding.UTF8.GetString (wc.DownloadData ("https://cabinet.tps.uz/packages/list/" + this.CabinetID));  	if (!String.IsNullOrEmpty (this.PackagesHTML)) {  		MatchCollection PackageMatches = Regex.Matches (this.PackagesHTML' @"<p class=""service-header"">[\s\S]+?<span>([\s\S]+?)</span>[\s\S]+?Стоимость[\s\S]+?<p class=""col-sm-7""><strong>\$?(\d+(?:\.\d{1'2})?)[\s\S]+?Дата начала действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Дата окончания действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Трафик по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?Остаток трафика по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?"' RegexOptions.Compiled | RegexOptions.Multiline | RegexOptions.IgnoreCase | RegexOptions.CultureInvariant);  		if (PackageMatches.Count > 0) {  			this.Packages.Clear ();  			foreach (Match PackangeMatch in PackageMatches) {  				if (!PackangeMatch.Success)  					continue;  				Package NewPackage = new Package ();  				NewPackage.Name = PackangeMatch.Groups [1].Value.Trim ();  				float.TryParse (PackangeMatch.Groups [2].Value' out NewPackage.Cost);  				DateTime.TryParseExact (PackangeMatch.Groups [3].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.StartDT);  				DateTime.TryParseExact (PackangeMatch.Groups [4].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.EndDT);  				float.TryParse (PackangeMatch.Groups [5].Value' out NewPackage.TraffAll);  				float.TryParse (PackangeMatch.Groups [6].Value' out NewPackage.TraffLeft);  				#if DEBUG  				if (NewPackage.StartDT.Day == 22) {  					NewPackage.StartDT = DateTime.Now.AddDays (-40);  					NewPackage.EndDT = DateTime.Now.AddDays (40);  					NewPackage.TraffAll = 3000;  					NewPackage.TraffLeft = 600;  				}  				#endif  				if (NewPackage.isActive)  					// add only active packages  					this.Packages.Add (NewPackage);  			}  			/// sort by start date... package with early start date in use first  			this.Packages.Sort (delegate (Package pk1' Package pk2) {  				return pk1.StartDT.CompareTo (pk2.StartDT);  			});  		}  		#if DEBUG  		//this.Packages.Clear();      		StringBuilder pkStr = new StringBuilder ();  		foreach (Package pk in this.Packages) {  			pkStr.Append (pk.Cost.ToString ("f2") + "\t");  			pkStr.Append (pk.StartDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  			pkStr.Append (pk.EndDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  			pkStr.Append (pk.TraffAll.ToString ("f2") + "\t");  			pkStr.Append (pk.TraffLeft.ToString ("f2") + "\t");  			pkStr.Append (pk.isActive + "\t");  			pkStr.AppendLine ();  		}  		System.IO.File.WriteAllText ("packages" + DateTime.Now.Ticks + ".txt"' pkStr.ToString ()' Encoding.UTF8);  		#endif  	}  	else {  		this.LastError = new Error ("Данные по пакетам не получены"' false);  		return;  	}  	this.LastError = null;  	this.LastUpdate = DateTime.Now;  }  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: if (!String.IsNullOrEmpty (this.CabinetHTML)) {  	float.TryParse (GetCabinetVal (@"traffic\s*:\s*'Использовано''\s*value:\s*(\d+(?:\.\d{1'2})?)\s*}")' out this.TraffUsed);  	float.TryParse (GetCabinetVal (@"traffic\s*:\s*'Осталось''\s*value:\s*(-?\d+(?:\.\d{1'2})?)\s*}")' out this.TraffLeft);  	if (TraffLeft < 0)  		TraffLeft = 0;  	#if DEBUG  	TraffLeft = 1500;  	#endif  	float.TryParse (GetCabinetVal (@"<strong\s+class=""balance""\s+data-accid=""\d+"">\s*(-?\d+(?:\.\d{1'2})?)\s*</strong>")' out this.Balance);  	int.TryParse (GetCabinetVal (@"/pppoe_session\?id=(\d+)")' out this.CabinetID);  	float.TryParse (GetCabinetVal (@"<th>Статус</th>[\s\S]+?<td>\s*\$(\d+(?:\.\d{1'2})?)\s*</td>")' out this.AbonentPlata);  	float.TryParse (GetCabinetVal (@"<p>1\s*доллар\s*США\s*=\s*(\d+(?:\.\d{1'2})?)")' out this.Kurs);  	/// load packages page  	if (this.CabinetID != 0)  		this.PackagesHTML = UTF8Encoding.UTF8.GetString (wc.DownloadData ("https://cabinet.tps.uz/packages/list/" + this.CabinetID));  	if (!String.IsNullOrEmpty (this.PackagesHTML)) {  		MatchCollection PackageMatches = Regex.Matches (this.PackagesHTML' @"<p class=""service-header"">[\s\S]+?<span>([\s\S]+?)</span>[\s\S]+?Стоимость[\s\S]+?<p class=""col-sm-7""><strong>\$?(\d+(?:\.\d{1'2})?)[\s\S]+?Дата начала действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Дата окончания действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Трафик по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?Остаток трафика по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?"' RegexOptions.Compiled | RegexOptions.Multiline | RegexOptions.IgnoreCase | RegexOptions.CultureInvariant);  		if (PackageMatches.Count > 0) {  			this.Packages.Clear ();  			foreach (Match PackangeMatch in PackageMatches) {  				if (!PackangeMatch.Success)  					continue;  				Package NewPackage = new Package ();  				NewPackage.Name = PackangeMatch.Groups [1].Value.Trim ();  				float.TryParse (PackangeMatch.Groups [2].Value' out NewPackage.Cost);  				DateTime.TryParseExact (PackangeMatch.Groups [3].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.StartDT);  				DateTime.TryParseExact (PackangeMatch.Groups [4].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.EndDT);  				float.TryParse (PackangeMatch.Groups [5].Value' out NewPackage.TraffAll);  				float.TryParse (PackangeMatch.Groups [6].Value' out NewPackage.TraffLeft);  				#if DEBUG  				if (NewPackage.StartDT.Day == 22) {  					NewPackage.StartDT = DateTime.Now.AddDays (-40);  					NewPackage.EndDT = DateTime.Now.AddDays (40);  					NewPackage.TraffAll = 3000;  					NewPackage.TraffLeft = 600;  				}  				#endif  				if (NewPackage.isActive)  					// add only active packages  					this.Packages.Add (NewPackage);  			}  			/// sort by start date... package with early start date in use first  			this.Packages.Sort (delegate (Package pk1' Package pk2) {  				return pk1.StartDT.CompareTo (pk2.StartDT);  			});  		}  		#if DEBUG  		//this.Packages.Clear();      		StringBuilder pkStr = new StringBuilder ();  		foreach (Package pk in this.Packages) {  			pkStr.Append (pk.Cost.ToString ("f2") + "\t");  			pkStr.Append (pk.StartDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  			pkStr.Append (pk.EndDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  			pkStr.Append (pk.TraffAll.ToString ("f2") + "\t");  			pkStr.Append (pk.TraffLeft.ToString ("f2") + "\t");  			pkStr.Append (pk.isActive + "\t");  			pkStr.AppendLine ();  		}  		System.IO.File.WriteAllText ("packages" + DateTime.Now.Ticks + ".txt"' pkStr.ToString ()' Encoding.UTF8);  		#endif  	}  	else {  		this.LastError = new Error ("Данные по пакетам не получены"' false);  		return;  	}  	this.LastError = null;  	this.LastUpdate = DateTime.Now;  }  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: if (!String.IsNullOrEmpty (this.CabinetHTML)) {  	float.TryParse (GetCabinetVal (@"traffic\s*:\s*'Использовано''\s*value:\s*(\d+(?:\.\d{1'2})?)\s*}")' out this.TraffUsed);  	float.TryParse (GetCabinetVal (@"traffic\s*:\s*'Осталось''\s*value:\s*(-?\d+(?:\.\d{1'2})?)\s*}")' out this.TraffLeft);  	if (TraffLeft < 0)  		TraffLeft = 0;  	#if DEBUG  	TraffLeft = 1500;  	#endif  	float.TryParse (GetCabinetVal (@"<strong\s+class=""balance""\s+data-accid=""\d+"">\s*(-?\d+(?:\.\d{1'2})?)\s*</strong>")' out this.Balance);  	int.TryParse (GetCabinetVal (@"/pppoe_session\?id=(\d+)")' out this.CabinetID);  	float.TryParse (GetCabinetVal (@"<th>Статус</th>[\s\S]+?<td>\s*\$(\d+(?:\.\d{1'2})?)\s*</td>")' out this.AbonentPlata);  	float.TryParse (GetCabinetVal (@"<p>1\s*доллар\s*США\s*=\s*(\d+(?:\.\d{1'2})?)")' out this.Kurs);  	/// load packages page  	if (this.CabinetID != 0)  		this.PackagesHTML = UTF8Encoding.UTF8.GetString (wc.DownloadData ("https://cabinet.tps.uz/packages/list/" + this.CabinetID));  	if (!String.IsNullOrEmpty (this.PackagesHTML)) {  		MatchCollection PackageMatches = Regex.Matches (this.PackagesHTML' @"<p class=""service-header"">[\s\S]+?<span>([\s\S]+?)</span>[\s\S]+?Стоимость[\s\S]+?<p class=""col-sm-7""><strong>\$?(\d+(?:\.\d{1'2})?)[\s\S]+?Дата начала действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Дата окончания действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Трафик по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?Остаток трафика по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?"' RegexOptions.Compiled | RegexOptions.Multiline | RegexOptions.IgnoreCase | RegexOptions.CultureInvariant);  		if (PackageMatches.Count > 0) {  			this.Packages.Clear ();  			foreach (Match PackangeMatch in PackageMatches) {  				if (!PackangeMatch.Success)  					continue;  				Package NewPackage = new Package ();  				NewPackage.Name = PackangeMatch.Groups [1].Value.Trim ();  				float.TryParse (PackangeMatch.Groups [2].Value' out NewPackage.Cost);  				DateTime.TryParseExact (PackangeMatch.Groups [3].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.StartDT);  				DateTime.TryParseExact (PackangeMatch.Groups [4].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.EndDT);  				float.TryParse (PackangeMatch.Groups [5].Value' out NewPackage.TraffAll);  				float.TryParse (PackangeMatch.Groups [6].Value' out NewPackage.TraffLeft);  				#if DEBUG  				if (NewPackage.StartDT.Day == 22) {  					NewPackage.StartDT = DateTime.Now.AddDays (-40);  					NewPackage.EndDT = DateTime.Now.AddDays (40);  					NewPackage.TraffAll = 3000;  					NewPackage.TraffLeft = 600;  				}  				#endif  				if (NewPackage.isActive)  					// add only active packages  					this.Packages.Add (NewPackage);  			}  			/// sort by start date... package with early start date in use first  			this.Packages.Sort (delegate (Package pk1' Package pk2) {  				return pk1.StartDT.CompareTo (pk2.StartDT);  			});  		}  		#if DEBUG  		//this.Packages.Clear();      		StringBuilder pkStr = new StringBuilder ();  		foreach (Package pk in this.Packages) {  			pkStr.Append (pk.Cost.ToString ("f2") + "\t");  			pkStr.Append (pk.StartDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  			pkStr.Append (pk.EndDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  			pkStr.Append (pk.TraffAll.ToString ("f2") + "\t");  			pkStr.Append (pk.TraffLeft.ToString ("f2") + "\t");  			pkStr.Append (pk.isActive + "\t");  			pkStr.AppendLine ();  		}  		System.IO.File.WriteAllText ("packages" + DateTime.Now.Ticks + ".txt"' pkStr.ToString ()' Encoding.UTF8);  		#endif  	}  	else {  		this.LastError = new Error ("Данные по пакетам не получены"' false);  		return;  	}  	this.LastError = null;  	this.LastUpdate = DateTime.Now;  }  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: if (!String.IsNullOrEmpty (this.CabinetHTML)) {  	float.TryParse (GetCabinetVal (@"traffic\s*:\s*'Использовано''\s*value:\s*(\d+(?:\.\d{1'2})?)\s*}")' out this.TraffUsed);  	float.TryParse (GetCabinetVal (@"traffic\s*:\s*'Осталось''\s*value:\s*(-?\d+(?:\.\d{1'2})?)\s*}")' out this.TraffLeft);  	if (TraffLeft < 0)  		TraffLeft = 0;  	#if DEBUG  	TraffLeft = 1500;  	#endif  	float.TryParse (GetCabinetVal (@"<strong\s+class=""balance""\s+data-accid=""\d+"">\s*(-?\d+(?:\.\d{1'2})?)\s*</strong>")' out this.Balance);  	int.TryParse (GetCabinetVal (@"/pppoe_session\?id=(\d+)")' out this.CabinetID);  	float.TryParse (GetCabinetVal (@"<th>Статус</th>[\s\S]+?<td>\s*\$(\d+(?:\.\d{1'2})?)\s*</td>")' out this.AbonentPlata);  	float.TryParse (GetCabinetVal (@"<p>1\s*доллар\s*США\s*=\s*(\d+(?:\.\d{1'2})?)")' out this.Kurs);  	/// load packages page  	if (this.CabinetID != 0)  		this.PackagesHTML = UTF8Encoding.UTF8.GetString (wc.DownloadData ("https://cabinet.tps.uz/packages/list/" + this.CabinetID));  	if (!String.IsNullOrEmpty (this.PackagesHTML)) {  		MatchCollection PackageMatches = Regex.Matches (this.PackagesHTML' @"<p class=""service-header"">[\s\S]+?<span>([\s\S]+?)</span>[\s\S]+?Стоимость[\s\S]+?<p class=""col-sm-7""><strong>\$?(\d+(?:\.\d{1'2})?)[\s\S]+?Дата начала действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Дата окончания действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Трафик по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?Остаток трафика по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?"' RegexOptions.Compiled | RegexOptions.Multiline | RegexOptions.IgnoreCase | RegexOptions.CultureInvariant);  		if (PackageMatches.Count > 0) {  			this.Packages.Clear ();  			foreach (Match PackangeMatch in PackageMatches) {  				if (!PackangeMatch.Success)  					continue;  				Package NewPackage = new Package ();  				NewPackage.Name = PackangeMatch.Groups [1].Value.Trim ();  				float.TryParse (PackangeMatch.Groups [2].Value' out NewPackage.Cost);  				DateTime.TryParseExact (PackangeMatch.Groups [3].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.StartDT);  				DateTime.TryParseExact (PackangeMatch.Groups [4].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.EndDT);  				float.TryParse (PackangeMatch.Groups [5].Value' out NewPackage.TraffAll);  				float.TryParse (PackangeMatch.Groups [6].Value' out NewPackage.TraffLeft);  				#if DEBUG  				if (NewPackage.StartDT.Day == 22) {  					NewPackage.StartDT = DateTime.Now.AddDays (-40);  					NewPackage.EndDT = DateTime.Now.AddDays (40);  					NewPackage.TraffAll = 3000;  					NewPackage.TraffLeft = 600;  				}  				#endif  				if (NewPackage.isActive)  					// add only active packages  					this.Packages.Add (NewPackage);  			}  			/// sort by start date... package with early start date in use first  			this.Packages.Sort (delegate (Package pk1' Package pk2) {  				return pk1.StartDT.CompareTo (pk2.StartDT);  			});  		}  		#if DEBUG  		//this.Packages.Clear();      		StringBuilder pkStr = new StringBuilder ();  		foreach (Package pk in this.Packages) {  			pkStr.Append (pk.Cost.ToString ("f2") + "\t");  			pkStr.Append (pk.StartDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  			pkStr.Append (pk.EndDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  			pkStr.Append (pk.TraffAll.ToString ("f2") + "\t");  			pkStr.Append (pk.TraffLeft.ToString ("f2") + "\t");  			pkStr.Append (pk.isActive + "\t");  			pkStr.AppendLine ();  		}  		System.IO.File.WriteAllText ("packages" + DateTime.Now.Ticks + ".txt"' pkStr.ToString ()' Encoding.UTF8);  		#endif  	}  	else {  		this.LastError = new Error ("Данные по пакетам не получены"' false);  		return;  	}  	this.LastError = null;  	this.LastUpdate = DateTime.Now;  }  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: if (!String.IsNullOrEmpty (this.CabinetHTML)) {  	float.TryParse (GetCabinetVal (@"traffic\s*:\s*'Использовано''\s*value:\s*(\d+(?:\.\d{1'2})?)\s*}")' out this.TraffUsed);  	float.TryParse (GetCabinetVal (@"traffic\s*:\s*'Осталось''\s*value:\s*(-?\d+(?:\.\d{1'2})?)\s*}")' out this.TraffLeft);  	if (TraffLeft < 0)  		TraffLeft = 0;  	#if DEBUG  	TraffLeft = 1500;  	#endif  	float.TryParse (GetCabinetVal (@"<strong\s+class=""balance""\s+data-accid=""\d+"">\s*(-?\d+(?:\.\d{1'2})?)\s*</strong>")' out this.Balance);  	int.TryParse (GetCabinetVal (@"/pppoe_session\?id=(\d+)")' out this.CabinetID);  	float.TryParse (GetCabinetVal (@"<th>Статус</th>[\s\S]+?<td>\s*\$(\d+(?:\.\d{1'2})?)\s*</td>")' out this.AbonentPlata);  	float.TryParse (GetCabinetVal (@"<p>1\s*доллар\s*США\s*=\s*(\d+(?:\.\d{1'2})?)")' out this.Kurs);  	/// load packages page  	if (this.CabinetID != 0)  		this.PackagesHTML = UTF8Encoding.UTF8.GetString (wc.DownloadData ("https://cabinet.tps.uz/packages/list/" + this.CabinetID));  	if (!String.IsNullOrEmpty (this.PackagesHTML)) {  		MatchCollection PackageMatches = Regex.Matches (this.PackagesHTML' @"<p class=""service-header"">[\s\S]+?<span>([\s\S]+?)</span>[\s\S]+?Стоимость[\s\S]+?<p class=""col-sm-7""><strong>\$?(\d+(?:\.\d{1'2})?)[\s\S]+?Дата начала действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Дата окончания действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Трафик по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?Остаток трафика по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?"' RegexOptions.Compiled | RegexOptions.Multiline | RegexOptions.IgnoreCase | RegexOptions.CultureInvariant);  		if (PackageMatches.Count > 0) {  			this.Packages.Clear ();  			foreach (Match PackangeMatch in PackageMatches) {  				if (!PackangeMatch.Success)  					continue;  				Package NewPackage = new Package ();  				NewPackage.Name = PackangeMatch.Groups [1].Value.Trim ();  				float.TryParse (PackangeMatch.Groups [2].Value' out NewPackage.Cost);  				DateTime.TryParseExact (PackangeMatch.Groups [3].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.StartDT);  				DateTime.TryParseExact (PackangeMatch.Groups [4].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.EndDT);  				float.TryParse (PackangeMatch.Groups [5].Value' out NewPackage.TraffAll);  				float.TryParse (PackangeMatch.Groups [6].Value' out NewPackage.TraffLeft);  				#if DEBUG  				if (NewPackage.StartDT.Day == 22) {  					NewPackage.StartDT = DateTime.Now.AddDays (-40);  					NewPackage.EndDT = DateTime.Now.AddDays (40);  					NewPackage.TraffAll = 3000;  					NewPackage.TraffLeft = 600;  				}  				#endif  				if (NewPackage.isActive)  					// add only active packages  					this.Packages.Add (NewPackage);  			}  			/// sort by start date... package with early start date in use first  			this.Packages.Sort (delegate (Package pk1' Package pk2) {  				return pk1.StartDT.CompareTo (pk2.StartDT);  			});  		}  		#if DEBUG  		//this.Packages.Clear();      		StringBuilder pkStr = new StringBuilder ();  		foreach (Package pk in this.Packages) {  			pkStr.Append (pk.Cost.ToString ("f2") + "\t");  			pkStr.Append (pk.StartDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  			pkStr.Append (pk.EndDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  			pkStr.Append (pk.TraffAll.ToString ("f2") + "\t");  			pkStr.Append (pk.TraffLeft.ToString ("f2") + "\t");  			pkStr.Append (pk.isActive + "\t");  			pkStr.AppendLine ();  		}  		System.IO.File.WriteAllText ("packages" + DateTime.Now.Ticks + ".txt"' pkStr.ToString ()' Encoding.UTF8);  		#endif  	}  	else {  		this.LastError = new Error ("Данные по пакетам не получены"' false);  		return;  	}  	this.LastError = null;  	this.LastUpdate = DateTime.Now;  }  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: if (!String.IsNullOrEmpty (this.CabinetHTML)) {  	float.TryParse (GetCabinetVal (@"traffic\s*:\s*'Использовано''\s*value:\s*(\d+(?:\.\d{1'2})?)\s*}")' out this.TraffUsed);  	float.TryParse (GetCabinetVal (@"traffic\s*:\s*'Осталось''\s*value:\s*(-?\d+(?:\.\d{1'2})?)\s*}")' out this.TraffLeft);  	if (TraffLeft < 0)  		TraffLeft = 0;  	#if DEBUG  	TraffLeft = 1500;  	#endif  	float.TryParse (GetCabinetVal (@"<strong\s+class=""balance""\s+data-accid=""\d+"">\s*(-?\d+(?:\.\d{1'2})?)\s*</strong>")' out this.Balance);  	int.TryParse (GetCabinetVal (@"/pppoe_session\?id=(\d+)")' out this.CabinetID);  	float.TryParse (GetCabinetVal (@"<th>Статус</th>[\s\S]+?<td>\s*\$(\d+(?:\.\d{1'2})?)\s*</td>")' out this.AbonentPlata);  	float.TryParse (GetCabinetVal (@"<p>1\s*доллар\s*США\s*=\s*(\d+(?:\.\d{1'2})?)")' out this.Kurs);  	/// load packages page  	if (this.CabinetID != 0)  		this.PackagesHTML = UTF8Encoding.UTF8.GetString (wc.DownloadData ("https://cabinet.tps.uz/packages/list/" + this.CabinetID));  	if (!String.IsNullOrEmpty (this.PackagesHTML)) {  		MatchCollection PackageMatches = Regex.Matches (this.PackagesHTML' @"<p class=""service-header"">[\s\S]+?<span>([\s\S]+?)</span>[\s\S]+?Стоимость[\s\S]+?<p class=""col-sm-7""><strong>\$?(\d+(?:\.\d{1'2})?)[\s\S]+?Дата начала действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Дата окончания действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Трафик по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?Остаток трафика по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?"' RegexOptions.Compiled | RegexOptions.Multiline | RegexOptions.IgnoreCase | RegexOptions.CultureInvariant);  		if (PackageMatches.Count > 0) {  			this.Packages.Clear ();  			foreach (Match PackangeMatch in PackageMatches) {  				if (!PackangeMatch.Success)  					continue;  				Package NewPackage = new Package ();  				NewPackage.Name = PackangeMatch.Groups [1].Value.Trim ();  				float.TryParse (PackangeMatch.Groups [2].Value' out NewPackage.Cost);  				DateTime.TryParseExact (PackangeMatch.Groups [3].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.StartDT);  				DateTime.TryParseExact (PackangeMatch.Groups [4].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.EndDT);  				float.TryParse (PackangeMatch.Groups [5].Value' out NewPackage.TraffAll);  				float.TryParse (PackangeMatch.Groups [6].Value' out NewPackage.TraffLeft);  				#if DEBUG  				if (NewPackage.StartDT.Day == 22) {  					NewPackage.StartDT = DateTime.Now.AddDays (-40);  					NewPackage.EndDT = DateTime.Now.AddDays (40);  					NewPackage.TraffAll = 3000;  					NewPackage.TraffLeft = 600;  				}  				#endif  				if (NewPackage.isActive)  					// add only active packages  					this.Packages.Add (NewPackage);  			}  			/// sort by start date... package with early start date in use first  			this.Packages.Sort (delegate (Package pk1' Package pk2) {  				return pk1.StartDT.CompareTo (pk2.StartDT);  			});  		}  		#if DEBUG  		//this.Packages.Clear();      		StringBuilder pkStr = new StringBuilder ();  		foreach (Package pk in this.Packages) {  			pkStr.Append (pk.Cost.ToString ("f2") + "\t");  			pkStr.Append (pk.StartDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  			pkStr.Append (pk.EndDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  			pkStr.Append (pk.TraffAll.ToString ("f2") + "\t");  			pkStr.Append (pk.TraffLeft.ToString ("f2") + "\t");  			pkStr.Append (pk.isActive + "\t");  			pkStr.AppendLine ();  		}  		System.IO.File.WriteAllText ("packages" + DateTime.Now.Ticks + ".txt"' pkStr.ToString ()' Encoding.UTF8);  		#endif  	}  	else {  		this.LastError = new Error ("Данные по пакетам не получены"' false);  		return;  	}  	this.LastError = null;  	this.LastUpdate = DateTime.Now;  }  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: if (!String.IsNullOrEmpty (this.CabinetHTML)) {  	float.TryParse (GetCabinetVal (@"traffic\s*:\s*'Использовано''\s*value:\s*(\d+(?:\.\d{1'2})?)\s*}")' out this.TraffUsed);  	float.TryParse (GetCabinetVal (@"traffic\s*:\s*'Осталось''\s*value:\s*(-?\d+(?:\.\d{1'2})?)\s*}")' out this.TraffLeft);  	if (TraffLeft < 0)  		TraffLeft = 0;  	#if DEBUG  	TraffLeft = 1500;  	#endif  	float.TryParse (GetCabinetVal (@"<strong\s+class=""balance""\s+data-accid=""\d+"">\s*(-?\d+(?:\.\d{1'2})?)\s*</strong>")' out this.Balance);  	int.TryParse (GetCabinetVal (@"/pppoe_session\?id=(\d+)")' out this.CabinetID);  	float.TryParse (GetCabinetVal (@"<th>Статус</th>[\s\S]+?<td>\s*\$(\d+(?:\.\d{1'2})?)\s*</td>")' out this.AbonentPlata);  	float.TryParse (GetCabinetVal (@"<p>1\s*доллар\s*США\s*=\s*(\d+(?:\.\d{1'2})?)")' out this.Kurs);  	/// load packages page  	if (this.CabinetID != 0)  		this.PackagesHTML = UTF8Encoding.UTF8.GetString (wc.DownloadData ("https://cabinet.tps.uz/packages/list/" + this.CabinetID));  	if (!String.IsNullOrEmpty (this.PackagesHTML)) {  		MatchCollection PackageMatches = Regex.Matches (this.PackagesHTML' @"<p class=""service-header"">[\s\S]+?<span>([\s\S]+?)</span>[\s\S]+?Стоимость[\s\S]+?<p class=""col-sm-7""><strong>\$?(\d+(?:\.\d{1'2})?)[\s\S]+?Дата начала действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Дата окончания действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Трафик по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?Остаток трафика по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?"' RegexOptions.Compiled | RegexOptions.Multiline | RegexOptions.IgnoreCase | RegexOptions.CultureInvariant);  		if (PackageMatches.Count > 0) {  			this.Packages.Clear ();  			foreach (Match PackangeMatch in PackageMatches) {  				if (!PackangeMatch.Success)  					continue;  				Package NewPackage = new Package ();  				NewPackage.Name = PackangeMatch.Groups [1].Value.Trim ();  				float.TryParse (PackangeMatch.Groups [2].Value' out NewPackage.Cost);  				DateTime.TryParseExact (PackangeMatch.Groups [3].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.StartDT);  				DateTime.TryParseExact (PackangeMatch.Groups [4].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.EndDT);  				float.TryParse (PackangeMatch.Groups [5].Value' out NewPackage.TraffAll);  				float.TryParse (PackangeMatch.Groups [6].Value' out NewPackage.TraffLeft);  				#if DEBUG  				if (NewPackage.StartDT.Day == 22) {  					NewPackage.StartDT = DateTime.Now.AddDays (-40);  					NewPackage.EndDT = DateTime.Now.AddDays (40);  					NewPackage.TraffAll = 3000;  					NewPackage.TraffLeft = 600;  				}  				#endif  				if (NewPackage.isActive)  					// add only active packages  					this.Packages.Add (NewPackage);  			}  			/// sort by start date... package with early start date in use first  			this.Packages.Sort (delegate (Package pk1' Package pk2) {  				return pk1.StartDT.CompareTo (pk2.StartDT);  			});  		}  		#if DEBUG  		//this.Packages.Clear();      		StringBuilder pkStr = new StringBuilder ();  		foreach (Package pk in this.Packages) {  			pkStr.Append (pk.Cost.ToString ("f2") + "\t");  			pkStr.Append (pk.StartDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  			pkStr.Append (pk.EndDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  			pkStr.Append (pk.TraffAll.ToString ("f2") + "\t");  			pkStr.Append (pk.TraffLeft.ToString ("f2") + "\t");  			pkStr.Append (pk.isActive + "\t");  			pkStr.AppendLine ();  		}  		System.IO.File.WriteAllText ("packages" + DateTime.Now.Ticks + ".txt"' pkStr.ToString ()' Encoding.UTF8);  		#endif  	}  	else {  		this.LastError = new Error ("Данные по пакетам не получены"' false);  		return;  	}  	this.LastError = null;  	this.LastUpdate = DateTime.Now;  }  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: if (!String.IsNullOrEmpty (this.CabinetHTML)) {  	float.TryParse (GetCabinetVal (@"traffic\s*:\s*'Использовано''\s*value:\s*(\d+(?:\.\d{1'2})?)\s*}")' out this.TraffUsed);  	float.TryParse (GetCabinetVal (@"traffic\s*:\s*'Осталось''\s*value:\s*(-?\d+(?:\.\d{1'2})?)\s*}")' out this.TraffLeft);  	if (TraffLeft < 0)  		TraffLeft = 0;  	#if DEBUG  	TraffLeft = 1500;  	#endif  	float.TryParse (GetCabinetVal (@"<strong\s+class=""balance""\s+data-accid=""\d+"">\s*(-?\d+(?:\.\d{1'2})?)\s*</strong>")' out this.Balance);  	int.TryParse (GetCabinetVal (@"/pppoe_session\?id=(\d+)")' out this.CabinetID);  	float.TryParse (GetCabinetVal (@"<th>Статус</th>[\s\S]+?<td>\s*\$(\d+(?:\.\d{1'2})?)\s*</td>")' out this.AbonentPlata);  	float.TryParse (GetCabinetVal (@"<p>1\s*доллар\s*США\s*=\s*(\d+(?:\.\d{1'2})?)")' out this.Kurs);  	/// load packages page  	if (this.CabinetID != 0)  		this.PackagesHTML = UTF8Encoding.UTF8.GetString (wc.DownloadData ("https://cabinet.tps.uz/packages/list/" + this.CabinetID));  	if (!String.IsNullOrEmpty (this.PackagesHTML)) {  		MatchCollection PackageMatches = Regex.Matches (this.PackagesHTML' @"<p class=""service-header"">[\s\S]+?<span>([\s\S]+?)</span>[\s\S]+?Стоимость[\s\S]+?<p class=""col-sm-7""><strong>\$?(\d+(?:\.\d{1'2})?)[\s\S]+?Дата начала действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Дата окончания действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Трафик по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?Остаток трафика по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?"' RegexOptions.Compiled | RegexOptions.Multiline | RegexOptions.IgnoreCase | RegexOptions.CultureInvariant);  		if (PackageMatches.Count > 0) {  			this.Packages.Clear ();  			foreach (Match PackangeMatch in PackageMatches) {  				if (!PackangeMatch.Success)  					continue;  				Package NewPackage = new Package ();  				NewPackage.Name = PackangeMatch.Groups [1].Value.Trim ();  				float.TryParse (PackangeMatch.Groups [2].Value' out NewPackage.Cost);  				DateTime.TryParseExact (PackangeMatch.Groups [3].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.StartDT);  				DateTime.TryParseExact (PackangeMatch.Groups [4].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.EndDT);  				float.TryParse (PackangeMatch.Groups [5].Value' out NewPackage.TraffAll);  				float.TryParse (PackangeMatch.Groups [6].Value' out NewPackage.TraffLeft);  				#if DEBUG  				if (NewPackage.StartDT.Day == 22) {  					NewPackage.StartDT = DateTime.Now.AddDays (-40);  					NewPackage.EndDT = DateTime.Now.AddDays (40);  					NewPackage.TraffAll = 3000;  					NewPackage.TraffLeft = 600;  				}  				#endif  				if (NewPackage.isActive)  					// add only active packages  					this.Packages.Add (NewPackage);  			}  			/// sort by start date... package with early start date in use first  			this.Packages.Sort (delegate (Package pk1' Package pk2) {  				return pk1.StartDT.CompareTo (pk2.StartDT);  			});  		}  		#if DEBUG  		//this.Packages.Clear();      		StringBuilder pkStr = new StringBuilder ();  		foreach (Package pk in this.Packages) {  			pkStr.Append (pk.Cost.ToString ("f2") + "\t");  			pkStr.Append (pk.StartDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  			pkStr.Append (pk.EndDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  			pkStr.Append (pk.TraffAll.ToString ("f2") + "\t");  			pkStr.Append (pk.TraffLeft.ToString ("f2") + "\t");  			pkStr.Append (pk.isActive + "\t");  			pkStr.AppendLine ();  		}  		System.IO.File.WriteAllText ("packages" + DateTime.Now.Ticks + ".txt"' pkStr.ToString ()' Encoding.UTF8);  		#endif  	}  	else {  		this.LastError = new Error ("Данные по пакетам не получены"' false);  		return;  	}  	this.LastError = null;  	this.LastUpdate = DateTime.Now;  }  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: if (!String.IsNullOrEmpty (this.CabinetHTML)) {  	float.TryParse (GetCabinetVal (@"traffic\s*:\s*'Использовано''\s*value:\s*(\d+(?:\.\d{1'2})?)\s*}")' out this.TraffUsed);  	float.TryParse (GetCabinetVal (@"traffic\s*:\s*'Осталось''\s*value:\s*(-?\d+(?:\.\d{1'2})?)\s*}")' out this.TraffLeft);  	if (TraffLeft < 0)  		TraffLeft = 0;  	#if DEBUG  	TraffLeft = 1500;  	#endif  	float.TryParse (GetCabinetVal (@"<strong\s+class=""balance""\s+data-accid=""\d+"">\s*(-?\d+(?:\.\d{1'2})?)\s*</strong>")' out this.Balance);  	int.TryParse (GetCabinetVal (@"/pppoe_session\?id=(\d+)")' out this.CabinetID);  	float.TryParse (GetCabinetVal (@"<th>Статус</th>[\s\S]+?<td>\s*\$(\d+(?:\.\d{1'2})?)\s*</td>")' out this.AbonentPlata);  	float.TryParse (GetCabinetVal (@"<p>1\s*доллар\s*США\s*=\s*(\d+(?:\.\d{1'2})?)")' out this.Kurs);  	/// load packages page  	if (this.CabinetID != 0)  		this.PackagesHTML = UTF8Encoding.UTF8.GetString (wc.DownloadData ("https://cabinet.tps.uz/packages/list/" + this.CabinetID));  	if (!String.IsNullOrEmpty (this.PackagesHTML)) {  		MatchCollection PackageMatches = Regex.Matches (this.PackagesHTML' @"<p class=""service-header"">[\s\S]+?<span>([\s\S]+?)</span>[\s\S]+?Стоимость[\s\S]+?<p class=""col-sm-7""><strong>\$?(\d+(?:\.\d{1'2})?)[\s\S]+?Дата начала действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Дата окончания действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Трафик по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?Остаток трафика по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?"' RegexOptions.Compiled | RegexOptions.Multiline | RegexOptions.IgnoreCase | RegexOptions.CultureInvariant);  		if (PackageMatches.Count > 0) {  			this.Packages.Clear ();  			foreach (Match PackangeMatch in PackageMatches) {  				if (!PackangeMatch.Success)  					continue;  				Package NewPackage = new Package ();  				NewPackage.Name = PackangeMatch.Groups [1].Value.Trim ();  				float.TryParse (PackangeMatch.Groups [2].Value' out NewPackage.Cost);  				DateTime.TryParseExact (PackangeMatch.Groups [3].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.StartDT);  				DateTime.TryParseExact (PackangeMatch.Groups [4].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.EndDT);  				float.TryParse (PackangeMatch.Groups [5].Value' out NewPackage.TraffAll);  				float.TryParse (PackangeMatch.Groups [6].Value' out NewPackage.TraffLeft);  				#if DEBUG  				if (NewPackage.StartDT.Day == 22) {  					NewPackage.StartDT = DateTime.Now.AddDays (-40);  					NewPackage.EndDT = DateTime.Now.AddDays (40);  					NewPackage.TraffAll = 3000;  					NewPackage.TraffLeft = 600;  				}  				#endif  				if (NewPackage.isActive)  					// add only active packages  					this.Packages.Add (NewPackage);  			}  			/// sort by start date... package with early start date in use first  			this.Packages.Sort (delegate (Package pk1' Package pk2) {  				return pk1.StartDT.CompareTo (pk2.StartDT);  			});  		}  		#if DEBUG  		//this.Packages.Clear();      		StringBuilder pkStr = new StringBuilder ();  		foreach (Package pk in this.Packages) {  			pkStr.Append (pk.Cost.ToString ("f2") + "\t");  			pkStr.Append (pk.StartDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  			pkStr.Append (pk.EndDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  			pkStr.Append (pk.TraffAll.ToString ("f2") + "\t");  			pkStr.Append (pk.TraffLeft.ToString ("f2") + "\t");  			pkStr.Append (pk.isActive + "\t");  			pkStr.AppendLine ();  		}  		System.IO.File.WriteAllText ("packages" + DateTime.Now.Ticks + ".txt"' pkStr.ToString ()' Encoding.UTF8);  		#endif  	}  	else {  		this.LastError = new Error ("Данные по пакетам не получены"' false);  		return;  	}  	this.LastError = null;  	this.LastUpdate = DateTime.Now;  }  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: TraffLeft = 1500;  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: if (!String.IsNullOrEmpty (this.PackagesHTML)) {  	MatchCollection PackageMatches = Regex.Matches (this.PackagesHTML' @"<p class=""service-header"">[\s\S]+?<span>([\s\S]+?)</span>[\s\S]+?Стоимость[\s\S]+?<p class=""col-sm-7""><strong>\$?(\d+(?:\.\d{1'2})?)[\s\S]+?Дата начала действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Дата окончания действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Трафик по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?Остаток трафика по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?"' RegexOptions.Compiled | RegexOptions.Multiline | RegexOptions.IgnoreCase | RegexOptions.CultureInvariant);  	if (PackageMatches.Count > 0) {  		this.Packages.Clear ();  		foreach (Match PackangeMatch in PackageMatches) {  			if (!PackangeMatch.Success)  				continue;  			Package NewPackage = new Package ();  			NewPackage.Name = PackangeMatch.Groups [1].Value.Trim ();  			float.TryParse (PackangeMatch.Groups [2].Value' out NewPackage.Cost);  			DateTime.TryParseExact (PackangeMatch.Groups [3].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.StartDT);  			DateTime.TryParseExact (PackangeMatch.Groups [4].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.EndDT);  			float.TryParse (PackangeMatch.Groups [5].Value' out NewPackage.TraffAll);  			float.TryParse (PackangeMatch.Groups [6].Value' out NewPackage.TraffLeft);  			#if DEBUG  			if (NewPackage.StartDT.Day == 22) {  				NewPackage.StartDT = DateTime.Now.AddDays (-40);  				NewPackage.EndDT = DateTime.Now.AddDays (40);  				NewPackage.TraffAll = 3000;  				NewPackage.TraffLeft = 600;  			}  			#endif  			if (NewPackage.isActive)  				// add only active packages  				this.Packages.Add (NewPackage);  		}  		/// sort by start date... package with early start date in use first  		this.Packages.Sort (delegate (Package pk1' Package pk2) {  			return pk1.StartDT.CompareTo (pk2.StartDT);  		});  	}  	#if DEBUG  	//this.Packages.Clear();      	StringBuilder pkStr = new StringBuilder ();  	foreach (Package pk in this.Packages) {  		pkStr.Append (pk.Cost.ToString ("f2") + "\t");  		pkStr.Append (pk.StartDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  		pkStr.Append (pk.EndDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  		pkStr.Append (pk.TraffAll.ToString ("f2") + "\t");  		pkStr.Append (pk.TraffLeft.ToString ("f2") + "\t");  		pkStr.Append (pk.isActive + "\t");  		pkStr.AppendLine ();  	}  	System.IO.File.WriteAllText ("packages" + DateTime.Now.Ticks + ".txt"' pkStr.ToString ()' Encoding.UTF8);  	#endif  }  else {  	this.LastError = new Error ("Данные по пакетам не получены"' false);  	return;  }  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: if (!String.IsNullOrEmpty (this.PackagesHTML)) {  	MatchCollection PackageMatches = Regex.Matches (this.PackagesHTML' @"<p class=""service-header"">[\s\S]+?<span>([\s\S]+?)</span>[\s\S]+?Стоимость[\s\S]+?<p class=""col-sm-7""><strong>\$?(\d+(?:\.\d{1'2})?)[\s\S]+?Дата начала действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Дата окончания действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Трафик по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?Остаток трафика по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?"' RegexOptions.Compiled | RegexOptions.Multiline | RegexOptions.IgnoreCase | RegexOptions.CultureInvariant);  	if (PackageMatches.Count > 0) {  		this.Packages.Clear ();  		foreach (Match PackangeMatch in PackageMatches) {  			if (!PackangeMatch.Success)  				continue;  			Package NewPackage = new Package ();  			NewPackage.Name = PackangeMatch.Groups [1].Value.Trim ();  			float.TryParse (PackangeMatch.Groups [2].Value' out NewPackage.Cost);  			DateTime.TryParseExact (PackangeMatch.Groups [3].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.StartDT);  			DateTime.TryParseExact (PackangeMatch.Groups [4].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.EndDT);  			float.TryParse (PackangeMatch.Groups [5].Value' out NewPackage.TraffAll);  			float.TryParse (PackangeMatch.Groups [6].Value' out NewPackage.TraffLeft);  			#if DEBUG  			if (NewPackage.StartDT.Day == 22) {  				NewPackage.StartDT = DateTime.Now.AddDays (-40);  				NewPackage.EndDT = DateTime.Now.AddDays (40);  				NewPackage.TraffAll = 3000;  				NewPackage.TraffLeft = 600;  			}  			#endif  			if (NewPackage.isActive)  				// add only active packages  				this.Packages.Add (NewPackage);  		}  		/// sort by start date... package with early start date in use first  		this.Packages.Sort (delegate (Package pk1' Package pk2) {  			return pk1.StartDT.CompareTo (pk2.StartDT);  		});  	}  	#if DEBUG  	//this.Packages.Clear();      	StringBuilder pkStr = new StringBuilder ();  	foreach (Package pk in this.Packages) {  		pkStr.Append (pk.Cost.ToString ("f2") + "\t");  		pkStr.Append (pk.StartDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  		pkStr.Append (pk.EndDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  		pkStr.Append (pk.TraffAll.ToString ("f2") + "\t");  		pkStr.Append (pk.TraffLeft.ToString ("f2") + "\t");  		pkStr.Append (pk.isActive + "\t");  		pkStr.AppendLine ();  	}  	System.IO.File.WriteAllText ("packages" + DateTime.Now.Ticks + ".txt"' pkStr.ToString ()' Encoding.UTF8);  	#endif  }  else {  	this.LastError = new Error ("Данные по пакетам не получены"' false);  	return;  }  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: if (!String.IsNullOrEmpty (this.PackagesHTML)) {  	MatchCollection PackageMatches = Regex.Matches (this.PackagesHTML' @"<p class=""service-header"">[\s\S]+?<span>([\s\S]+?)</span>[\s\S]+?Стоимость[\s\S]+?<p class=""col-sm-7""><strong>\$?(\d+(?:\.\d{1'2})?)[\s\S]+?Дата начала действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Дата окончания действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Трафик по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?Остаток трафика по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?"' RegexOptions.Compiled | RegexOptions.Multiline | RegexOptions.IgnoreCase | RegexOptions.CultureInvariant);  	if (PackageMatches.Count > 0) {  		this.Packages.Clear ();  		foreach (Match PackangeMatch in PackageMatches) {  			if (!PackangeMatch.Success)  				continue;  			Package NewPackage = new Package ();  			NewPackage.Name = PackangeMatch.Groups [1].Value.Trim ();  			float.TryParse (PackangeMatch.Groups [2].Value' out NewPackage.Cost);  			DateTime.TryParseExact (PackangeMatch.Groups [3].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.StartDT);  			DateTime.TryParseExact (PackangeMatch.Groups [4].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.EndDT);  			float.TryParse (PackangeMatch.Groups [5].Value' out NewPackage.TraffAll);  			float.TryParse (PackangeMatch.Groups [6].Value' out NewPackage.TraffLeft);  			#if DEBUG  			if (NewPackage.StartDT.Day == 22) {  				NewPackage.StartDT = DateTime.Now.AddDays (-40);  				NewPackage.EndDT = DateTime.Now.AddDays (40);  				NewPackage.TraffAll = 3000;  				NewPackage.TraffLeft = 600;  			}  			#endif  			if (NewPackage.isActive)  				// add only active packages  				this.Packages.Add (NewPackage);  		}  		/// sort by start date... package with early start date in use first  		this.Packages.Sort (delegate (Package pk1' Package pk2) {  			return pk1.StartDT.CompareTo (pk2.StartDT);  		});  	}  	#if DEBUG  	//this.Packages.Clear();      	StringBuilder pkStr = new StringBuilder ();  	foreach (Package pk in this.Packages) {  		pkStr.Append (pk.Cost.ToString ("f2") + "\t");  		pkStr.Append (pk.StartDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  		pkStr.Append (pk.EndDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  		pkStr.Append (pk.TraffAll.ToString ("f2") + "\t");  		pkStr.Append (pk.TraffLeft.ToString ("f2") + "\t");  		pkStr.Append (pk.isActive + "\t");  		pkStr.AppendLine ();  	}  	System.IO.File.WriteAllText ("packages" + DateTime.Now.Ticks + ".txt"' pkStr.ToString ()' Encoding.UTF8);  	#endif  }  else {  	this.LastError = new Error ("Данные по пакетам не получены"' false);  	return;  }  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: if (!String.IsNullOrEmpty (this.PackagesHTML)) {  	MatchCollection PackageMatches = Regex.Matches (this.PackagesHTML' @"<p class=""service-header"">[\s\S]+?<span>([\s\S]+?)</span>[\s\S]+?Стоимость[\s\S]+?<p class=""col-sm-7""><strong>\$?(\d+(?:\.\d{1'2})?)[\s\S]+?Дата начала действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Дата окончания действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Трафик по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?Остаток трафика по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?"' RegexOptions.Compiled | RegexOptions.Multiline | RegexOptions.IgnoreCase | RegexOptions.CultureInvariant);  	if (PackageMatches.Count > 0) {  		this.Packages.Clear ();  		foreach (Match PackangeMatch in PackageMatches) {  			if (!PackangeMatch.Success)  				continue;  			Package NewPackage = new Package ();  			NewPackage.Name = PackangeMatch.Groups [1].Value.Trim ();  			float.TryParse (PackangeMatch.Groups [2].Value' out NewPackage.Cost);  			DateTime.TryParseExact (PackangeMatch.Groups [3].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.StartDT);  			DateTime.TryParseExact (PackangeMatch.Groups [4].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.EndDT);  			float.TryParse (PackangeMatch.Groups [5].Value' out NewPackage.TraffAll);  			float.TryParse (PackangeMatch.Groups [6].Value' out NewPackage.TraffLeft);  			#if DEBUG  			if (NewPackage.StartDT.Day == 22) {  				NewPackage.StartDT = DateTime.Now.AddDays (-40);  				NewPackage.EndDT = DateTime.Now.AddDays (40);  				NewPackage.TraffAll = 3000;  				NewPackage.TraffLeft = 600;  			}  			#endif  			if (NewPackage.isActive)  				// add only active packages  				this.Packages.Add (NewPackage);  		}  		/// sort by start date... package with early start date in use first  		this.Packages.Sort (delegate (Package pk1' Package pk2) {  			return pk1.StartDT.CompareTo (pk2.StartDT);  		});  	}  	#if DEBUG  	//this.Packages.Clear();      	StringBuilder pkStr = new StringBuilder ();  	foreach (Package pk in this.Packages) {  		pkStr.Append (pk.Cost.ToString ("f2") + "\t");  		pkStr.Append (pk.StartDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  		pkStr.Append (pk.EndDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  		pkStr.Append (pk.TraffAll.ToString ("f2") + "\t");  		pkStr.Append (pk.TraffLeft.ToString ("f2") + "\t");  		pkStr.Append (pk.isActive + "\t");  		pkStr.AppendLine ();  	}  	System.IO.File.WriteAllText ("packages" + DateTime.Now.Ticks + ".txt"' pkStr.ToString ()' Encoding.UTF8);  	#endif  }  else {  	this.LastError = new Error ("Данные по пакетам не получены"' false);  	return;  }  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: if (!String.IsNullOrEmpty (this.PackagesHTML)) {  	MatchCollection PackageMatches = Regex.Matches (this.PackagesHTML' @"<p class=""service-header"">[\s\S]+?<span>([\s\S]+?)</span>[\s\S]+?Стоимость[\s\S]+?<p class=""col-sm-7""><strong>\$?(\d+(?:\.\d{1'2})?)[\s\S]+?Дата начала действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Дата окончания действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Трафик по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?Остаток трафика по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?"' RegexOptions.Compiled | RegexOptions.Multiline | RegexOptions.IgnoreCase | RegexOptions.CultureInvariant);  	if (PackageMatches.Count > 0) {  		this.Packages.Clear ();  		foreach (Match PackangeMatch in PackageMatches) {  			if (!PackangeMatch.Success)  				continue;  			Package NewPackage = new Package ();  			NewPackage.Name = PackangeMatch.Groups [1].Value.Trim ();  			float.TryParse (PackangeMatch.Groups [2].Value' out NewPackage.Cost);  			DateTime.TryParseExact (PackangeMatch.Groups [3].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.StartDT);  			DateTime.TryParseExact (PackangeMatch.Groups [4].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.EndDT);  			float.TryParse (PackangeMatch.Groups [5].Value' out NewPackage.TraffAll);  			float.TryParse (PackangeMatch.Groups [6].Value' out NewPackage.TraffLeft);  			#if DEBUG  			if (NewPackage.StartDT.Day == 22) {  				NewPackage.StartDT = DateTime.Now.AddDays (-40);  				NewPackage.EndDT = DateTime.Now.AddDays (40);  				NewPackage.TraffAll = 3000;  				NewPackage.TraffLeft = 600;  			}  			#endif  			if (NewPackage.isActive)  				// add only active packages  				this.Packages.Add (NewPackage);  		}  		/// sort by start date... package with early start date in use first  		this.Packages.Sort (delegate (Package pk1' Package pk2) {  			return pk1.StartDT.CompareTo (pk2.StartDT);  		});  	}  	#if DEBUG  	//this.Packages.Clear();      	StringBuilder pkStr = new StringBuilder ();  	foreach (Package pk in this.Packages) {  		pkStr.Append (pk.Cost.ToString ("f2") + "\t");  		pkStr.Append (pk.StartDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  		pkStr.Append (pk.EndDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  		pkStr.Append (pk.TraffAll.ToString ("f2") + "\t");  		pkStr.Append (pk.TraffLeft.ToString ("f2") + "\t");  		pkStr.Append (pk.isActive + "\t");  		pkStr.AppendLine ();  	}  	System.IO.File.WriteAllText ("packages" + DateTime.Now.Ticks + ".txt"' pkStr.ToString ()' Encoding.UTF8);  	#endif  }  else {  	this.LastError = new Error ("Данные по пакетам не получены"' false);  	return;  }  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: if (!String.IsNullOrEmpty (this.PackagesHTML)) {  	MatchCollection PackageMatches = Regex.Matches (this.PackagesHTML' @"<p class=""service-header"">[\s\S]+?<span>([\s\S]+?)</span>[\s\S]+?Стоимость[\s\S]+?<p class=""col-sm-7""><strong>\$?(\d+(?:\.\d{1'2})?)[\s\S]+?Дата начала действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Дата окончания действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Трафик по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?Остаток трафика по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?"' RegexOptions.Compiled | RegexOptions.Multiline | RegexOptions.IgnoreCase | RegexOptions.CultureInvariant);  	if (PackageMatches.Count > 0) {  		this.Packages.Clear ();  		foreach (Match PackangeMatch in PackageMatches) {  			if (!PackangeMatch.Success)  				continue;  			Package NewPackage = new Package ();  			NewPackage.Name = PackangeMatch.Groups [1].Value.Trim ();  			float.TryParse (PackangeMatch.Groups [2].Value' out NewPackage.Cost);  			DateTime.TryParseExact (PackangeMatch.Groups [3].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.StartDT);  			DateTime.TryParseExact (PackangeMatch.Groups [4].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.EndDT);  			float.TryParse (PackangeMatch.Groups [5].Value' out NewPackage.TraffAll);  			float.TryParse (PackangeMatch.Groups [6].Value' out NewPackage.TraffLeft);  			#if DEBUG  			if (NewPackage.StartDT.Day == 22) {  				NewPackage.StartDT = DateTime.Now.AddDays (-40);  				NewPackage.EndDT = DateTime.Now.AddDays (40);  				NewPackage.TraffAll = 3000;  				NewPackage.TraffLeft = 600;  			}  			#endif  			if (NewPackage.isActive)  				// add only active packages  				this.Packages.Add (NewPackage);  		}  		/// sort by start date... package with early start date in use first  		this.Packages.Sort (delegate (Package pk1' Package pk2) {  			return pk1.StartDT.CompareTo (pk2.StartDT);  		});  	}  	#if DEBUG  	//this.Packages.Clear();      	StringBuilder pkStr = new StringBuilder ();  	foreach (Package pk in this.Packages) {  		pkStr.Append (pk.Cost.ToString ("f2") + "\t");  		pkStr.Append (pk.StartDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  		pkStr.Append (pk.EndDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  		pkStr.Append (pk.TraffAll.ToString ("f2") + "\t");  		pkStr.Append (pk.TraffLeft.ToString ("f2") + "\t");  		pkStr.Append (pk.isActive + "\t");  		pkStr.AppendLine ();  	}  	System.IO.File.WriteAllText ("packages" + DateTime.Now.Ticks + ".txt"' pkStr.ToString ()' Encoding.UTF8);  	#endif  }  else {  	this.LastError = new Error ("Данные по пакетам не получены"' false);  	return;  }  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: if (!String.IsNullOrEmpty (this.PackagesHTML)) {  	MatchCollection PackageMatches = Regex.Matches (this.PackagesHTML' @"<p class=""service-header"">[\s\S]+?<span>([\s\S]+?)</span>[\s\S]+?Стоимость[\s\S]+?<p class=""col-sm-7""><strong>\$?(\d+(?:\.\d{1'2})?)[\s\S]+?Дата начала действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Дата окончания действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Трафик по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?Остаток трафика по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?"' RegexOptions.Compiled | RegexOptions.Multiline | RegexOptions.IgnoreCase | RegexOptions.CultureInvariant);  	if (PackageMatches.Count > 0) {  		this.Packages.Clear ();  		foreach (Match PackangeMatch in PackageMatches) {  			if (!PackangeMatch.Success)  				continue;  			Package NewPackage = new Package ();  			NewPackage.Name = PackangeMatch.Groups [1].Value.Trim ();  			float.TryParse (PackangeMatch.Groups [2].Value' out NewPackage.Cost);  			DateTime.TryParseExact (PackangeMatch.Groups [3].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.StartDT);  			DateTime.TryParseExact (PackangeMatch.Groups [4].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.EndDT);  			float.TryParse (PackangeMatch.Groups [5].Value' out NewPackage.TraffAll);  			float.TryParse (PackangeMatch.Groups [6].Value' out NewPackage.TraffLeft);  			#if DEBUG  			if (NewPackage.StartDT.Day == 22) {  				NewPackage.StartDT = DateTime.Now.AddDays (-40);  				NewPackage.EndDT = DateTime.Now.AddDays (40);  				NewPackage.TraffAll = 3000;  				NewPackage.TraffLeft = 600;  			}  			#endif  			if (NewPackage.isActive)  				// add only active packages  				this.Packages.Add (NewPackage);  		}  		/// sort by start date... package with early start date in use first  		this.Packages.Sort (delegate (Package pk1' Package pk2) {  			return pk1.StartDT.CompareTo (pk2.StartDT);  		});  	}  	#if DEBUG  	//this.Packages.Clear();      	StringBuilder pkStr = new StringBuilder ();  	foreach (Package pk in this.Packages) {  		pkStr.Append (pk.Cost.ToString ("f2") + "\t");  		pkStr.Append (pk.StartDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  		pkStr.Append (pk.EndDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  		pkStr.Append (pk.TraffAll.ToString ("f2") + "\t");  		pkStr.Append (pk.TraffLeft.ToString ("f2") + "\t");  		pkStr.Append (pk.isActive + "\t");  		pkStr.AppendLine ();  	}  	System.IO.File.WriteAllText ("packages" + DateTime.Now.Ticks + ".txt"' pkStr.ToString ()' Encoding.UTF8);  	#endif  }  else {  	this.LastError = new Error ("Данные по пакетам не получены"' false);  	return;  }  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: if (!String.IsNullOrEmpty (this.PackagesHTML)) {  	MatchCollection PackageMatches = Regex.Matches (this.PackagesHTML' @"<p class=""service-header"">[\s\S]+?<span>([\s\S]+?)</span>[\s\S]+?Стоимость[\s\S]+?<p class=""col-sm-7""><strong>\$?(\d+(?:\.\d{1'2})?)[\s\S]+?Дата начала действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Дата окончания действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Трафик по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?Остаток трафика по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?"' RegexOptions.Compiled | RegexOptions.Multiline | RegexOptions.IgnoreCase | RegexOptions.CultureInvariant);  	if (PackageMatches.Count > 0) {  		this.Packages.Clear ();  		foreach (Match PackangeMatch in PackageMatches) {  			if (!PackangeMatch.Success)  				continue;  			Package NewPackage = new Package ();  			NewPackage.Name = PackangeMatch.Groups [1].Value.Trim ();  			float.TryParse (PackangeMatch.Groups [2].Value' out NewPackage.Cost);  			DateTime.TryParseExact (PackangeMatch.Groups [3].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.StartDT);  			DateTime.TryParseExact (PackangeMatch.Groups [4].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.EndDT);  			float.TryParse (PackangeMatch.Groups [5].Value' out NewPackage.TraffAll);  			float.TryParse (PackangeMatch.Groups [6].Value' out NewPackage.TraffLeft);  			#if DEBUG  			if (NewPackage.StartDT.Day == 22) {  				NewPackage.StartDT = DateTime.Now.AddDays (-40);  				NewPackage.EndDT = DateTime.Now.AddDays (40);  				NewPackage.TraffAll = 3000;  				NewPackage.TraffLeft = 600;  			}  			#endif  			if (NewPackage.isActive)  				// add only active packages  				this.Packages.Add (NewPackage);  		}  		/// sort by start date... package with early start date in use first  		this.Packages.Sort (delegate (Package pk1' Package pk2) {  			return pk1.StartDT.CompareTo (pk2.StartDT);  		});  	}  	#if DEBUG  	//this.Packages.Clear();      	StringBuilder pkStr = new StringBuilder ();  	foreach (Package pk in this.Packages) {  		pkStr.Append (pk.Cost.ToString ("f2") + "\t");  		pkStr.Append (pk.StartDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  		pkStr.Append (pk.EndDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  		pkStr.Append (pk.TraffAll.ToString ("f2") + "\t");  		pkStr.Append (pk.TraffLeft.ToString ("f2") + "\t");  		pkStr.Append (pk.isActive + "\t");  		pkStr.AppendLine ();  	}  	System.IO.File.WriteAllText ("packages" + DateTime.Now.Ticks + ".txt"' pkStr.ToString ()' Encoding.UTF8);  	#endif  }  else {  	this.LastError = new Error ("Данные по пакетам не получены"' false);  	return;  }  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: if (!String.IsNullOrEmpty (this.PackagesHTML)) {  	MatchCollection PackageMatches = Regex.Matches (this.PackagesHTML' @"<p class=""service-header"">[\s\S]+?<span>([\s\S]+?)</span>[\s\S]+?Стоимость[\s\S]+?<p class=""col-sm-7""><strong>\$?(\d+(?:\.\d{1'2})?)[\s\S]+?Дата начала действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Дата окончания действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Трафик по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?Остаток трафика по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?"' RegexOptions.Compiled | RegexOptions.Multiline | RegexOptions.IgnoreCase | RegexOptions.CultureInvariant);  	if (PackageMatches.Count > 0) {  		this.Packages.Clear ();  		foreach (Match PackangeMatch in PackageMatches) {  			if (!PackangeMatch.Success)  				continue;  			Package NewPackage = new Package ();  			NewPackage.Name = PackangeMatch.Groups [1].Value.Trim ();  			float.TryParse (PackangeMatch.Groups [2].Value' out NewPackage.Cost);  			DateTime.TryParseExact (PackangeMatch.Groups [3].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.StartDT);  			DateTime.TryParseExact (PackangeMatch.Groups [4].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.EndDT);  			float.TryParse (PackangeMatch.Groups [5].Value' out NewPackage.TraffAll);  			float.TryParse (PackangeMatch.Groups [6].Value' out NewPackage.TraffLeft);  			#if DEBUG  			if (NewPackage.StartDT.Day == 22) {  				NewPackage.StartDT = DateTime.Now.AddDays (-40);  				NewPackage.EndDT = DateTime.Now.AddDays (40);  				NewPackage.TraffAll = 3000;  				NewPackage.TraffLeft = 600;  			}  			#endif  			if (NewPackage.isActive)  				// add only active packages  				this.Packages.Add (NewPackage);  		}  		/// sort by start date... package with early start date in use first  		this.Packages.Sort (delegate (Package pk1' Package pk2) {  			return pk1.StartDT.CompareTo (pk2.StartDT);  		});  	}  	#if DEBUG  	//this.Packages.Clear();      	StringBuilder pkStr = new StringBuilder ();  	foreach (Package pk in this.Packages) {  		pkStr.Append (pk.Cost.ToString ("f2") + "\t");  		pkStr.Append (pk.StartDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  		pkStr.Append (pk.EndDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  		pkStr.Append (pk.TraffAll.ToString ("f2") + "\t");  		pkStr.Append (pk.TraffLeft.ToString ("f2") + "\t");  		pkStr.Append (pk.isActive + "\t");  		pkStr.AppendLine ();  	}  	System.IO.File.WriteAllText ("packages" + DateTime.Now.Ticks + ".txt"' pkStr.ToString ()' Encoding.UTF8);  	#endif  }  else {  	this.LastError = new Error ("Данные по пакетам не получены"' false);  	return;  }  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: if (!String.IsNullOrEmpty (this.PackagesHTML)) {  	MatchCollection PackageMatches = Regex.Matches (this.PackagesHTML' @"<p class=""service-header"">[\s\S]+?<span>([\s\S]+?)</span>[\s\S]+?Стоимость[\s\S]+?<p class=""col-sm-7""><strong>\$?(\d+(?:\.\d{1'2})?)[\s\S]+?Дата начала действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Дата окончания действия[\s\S]+?<p class=""col-sm-7"">([\.\s0-9:]+)</p>[\s\S]+?Трафик по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?Остаток трафика по пакету[\s\S]+?<p class=""col-sm-7"">(\d+(?:\.\d{1'2})?)[\s\S]+?"' RegexOptions.Compiled | RegexOptions.Multiline | RegexOptions.IgnoreCase | RegexOptions.CultureInvariant);  	if (PackageMatches.Count > 0) {  		this.Packages.Clear ();  		foreach (Match PackangeMatch in PackageMatches) {  			if (!PackangeMatch.Success)  				continue;  			Package NewPackage = new Package ();  			NewPackage.Name = PackangeMatch.Groups [1].Value.Trim ();  			float.TryParse (PackangeMatch.Groups [2].Value' out NewPackage.Cost);  			DateTime.TryParseExact (PackangeMatch.Groups [3].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.StartDT);  			DateTime.TryParseExact (PackangeMatch.Groups [4].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.EndDT);  			float.TryParse (PackangeMatch.Groups [5].Value' out NewPackage.TraffAll);  			float.TryParse (PackangeMatch.Groups [6].Value' out NewPackage.TraffLeft);  			#if DEBUG  			if (NewPackage.StartDT.Day == 22) {  				NewPackage.StartDT = DateTime.Now.AddDays (-40);  				NewPackage.EndDT = DateTime.Now.AddDays (40);  				NewPackage.TraffAll = 3000;  				NewPackage.TraffLeft = 600;  			}  			#endif  			if (NewPackage.isActive)  				// add only active packages  				this.Packages.Add (NewPackage);  		}  		/// sort by start date... package with early start date in use first  		this.Packages.Sort (delegate (Package pk1' Package pk2) {  			return pk1.StartDT.CompareTo (pk2.StartDT);  		});  	}  	#if DEBUG  	//this.Packages.Clear();      	StringBuilder pkStr = new StringBuilder ();  	foreach (Package pk in this.Packages) {  		pkStr.Append (pk.Cost.ToString ("f2") + "\t");  		pkStr.Append (pk.StartDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  		pkStr.Append (pk.EndDT.ToString ("dd.MM.yyyy HH:mm") + "\t");  		pkStr.Append (pk.TraffAll.ToString ("f2") + "\t");  		pkStr.Append (pk.TraffLeft.ToString ("f2") + "\t");  		pkStr.Append (pk.isActive + "\t");  		pkStr.AppendLine ();  	}  	System.IO.File.WriteAllText ("packages" + DateTime.Now.Ticks + ".txt"' pkStr.ToString ()' Encoding.UTF8);  	#endif  }  else {  	this.LastError = new Error ("Данные по пакетам не получены"' false);  	return;  }  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: if (PackageMatches.Count > 0) {  	this.Packages.Clear ();  	foreach (Match PackangeMatch in PackageMatches) {  		if (!PackangeMatch.Success)  			continue;  		Package NewPackage = new Package ();  		NewPackage.Name = PackangeMatch.Groups [1].Value.Trim ();  		float.TryParse (PackangeMatch.Groups [2].Value' out NewPackage.Cost);  		DateTime.TryParseExact (PackangeMatch.Groups [3].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.StartDT);  		DateTime.TryParseExact (PackangeMatch.Groups [4].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.EndDT);  		float.TryParse (PackangeMatch.Groups [5].Value' out NewPackage.TraffAll);  		float.TryParse (PackangeMatch.Groups [6].Value' out NewPackage.TraffLeft);  		#if DEBUG  		if (NewPackage.StartDT.Day == 22) {  			NewPackage.StartDT = DateTime.Now.AddDays (-40);  			NewPackage.EndDT = DateTime.Now.AddDays (40);  			NewPackage.TraffAll = 3000;  			NewPackage.TraffLeft = 600;  		}  		#endif  		if (NewPackage.isActive)  			// add only active packages  			this.Packages.Add (NewPackage);  	}  	/// sort by start date... package with early start date in use first  	this.Packages.Sort (delegate (Package pk1' Package pk2) {  		return pk1.StartDT.CompareTo (pk2.StartDT);  	});  }  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: if (PackageMatches.Count > 0) {  	this.Packages.Clear ();  	foreach (Match PackangeMatch in PackageMatches) {  		if (!PackangeMatch.Success)  			continue;  		Package NewPackage = new Package ();  		NewPackage.Name = PackangeMatch.Groups [1].Value.Trim ();  		float.TryParse (PackangeMatch.Groups [2].Value' out NewPackage.Cost);  		DateTime.TryParseExact (PackangeMatch.Groups [3].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.StartDT);  		DateTime.TryParseExact (PackangeMatch.Groups [4].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.EndDT);  		float.TryParse (PackangeMatch.Groups [5].Value' out NewPackage.TraffAll);  		float.TryParse (PackangeMatch.Groups [6].Value' out NewPackage.TraffLeft);  		#if DEBUG  		if (NewPackage.StartDT.Day == 22) {  			NewPackage.StartDT = DateTime.Now.AddDays (-40);  			NewPackage.EndDT = DateTime.Now.AddDays (40);  			NewPackage.TraffAll = 3000;  			NewPackage.TraffLeft = 600;  		}  		#endif  		if (NewPackage.isActive)  			// add only active packages  			this.Packages.Add (NewPackage);  	}  	/// sort by start date... package with early start date in use first  	this.Packages.Sort (delegate (Package pk1' Package pk2) {  		return pk1.StartDT.CompareTo (pk2.StartDT);  	});  }  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: if (PackageMatches.Count > 0) {  	this.Packages.Clear ();  	foreach (Match PackangeMatch in PackageMatches) {  		if (!PackangeMatch.Success)  			continue;  		Package NewPackage = new Package ();  		NewPackage.Name = PackangeMatch.Groups [1].Value.Trim ();  		float.TryParse (PackangeMatch.Groups [2].Value' out NewPackage.Cost);  		DateTime.TryParseExact (PackangeMatch.Groups [3].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.StartDT);  		DateTime.TryParseExact (PackangeMatch.Groups [4].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.EndDT);  		float.TryParse (PackangeMatch.Groups [5].Value' out NewPackage.TraffAll);  		float.TryParse (PackangeMatch.Groups [6].Value' out NewPackage.TraffLeft);  		#if DEBUG  		if (NewPackage.StartDT.Day == 22) {  			NewPackage.StartDT = DateTime.Now.AddDays (-40);  			NewPackage.EndDT = DateTime.Now.AddDays (40);  			NewPackage.TraffAll = 3000;  			NewPackage.TraffLeft = 600;  		}  		#endif  		if (NewPackage.isActive)  			// add only active packages  			this.Packages.Add (NewPackage);  	}  	/// sort by start date... package with early start date in use first  	this.Packages.Sort (delegate (Package pk1' Package pk2) {  		return pk1.StartDT.CompareTo (pk2.StartDT);  	});  }  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: if (PackageMatches.Count > 0) {  	this.Packages.Clear ();  	foreach (Match PackangeMatch in PackageMatches) {  		if (!PackangeMatch.Success)  			continue;  		Package NewPackage = new Package ();  		NewPackage.Name = PackangeMatch.Groups [1].Value.Trim ();  		float.TryParse (PackangeMatch.Groups [2].Value' out NewPackage.Cost);  		DateTime.TryParseExact (PackangeMatch.Groups [3].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.StartDT);  		DateTime.TryParseExact (PackangeMatch.Groups [4].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.EndDT);  		float.TryParse (PackangeMatch.Groups [5].Value' out NewPackage.TraffAll);  		float.TryParse (PackangeMatch.Groups [6].Value' out NewPackage.TraffLeft);  		#if DEBUG  		if (NewPackage.StartDT.Day == 22) {  			NewPackage.StartDT = DateTime.Now.AddDays (-40);  			NewPackage.EndDT = DateTime.Now.AddDays (40);  			NewPackage.TraffAll = 3000;  			NewPackage.TraffLeft = 600;  		}  		#endif  		if (NewPackage.isActive)  			// add only active packages  			this.Packages.Add (NewPackage);  	}  	/// sort by start date... package with early start date in use first  	this.Packages.Sort (delegate (Package pk1' Package pk2) {  		return pk1.StartDT.CompareTo (pk2.StartDT);  	});  }  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: if (PackageMatches.Count > 0) {  	this.Packages.Clear ();  	foreach (Match PackangeMatch in PackageMatches) {  		if (!PackangeMatch.Success)  			continue;  		Package NewPackage = new Package ();  		NewPackage.Name = PackangeMatch.Groups [1].Value.Trim ();  		float.TryParse (PackangeMatch.Groups [2].Value' out NewPackage.Cost);  		DateTime.TryParseExact (PackangeMatch.Groups [3].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.StartDT);  		DateTime.TryParseExact (PackangeMatch.Groups [4].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.EndDT);  		float.TryParse (PackangeMatch.Groups [5].Value' out NewPackage.TraffAll);  		float.TryParse (PackangeMatch.Groups [6].Value' out NewPackage.TraffLeft);  		#if DEBUG  		if (NewPackage.StartDT.Day == 22) {  			NewPackage.StartDT = DateTime.Now.AddDays (-40);  			NewPackage.EndDT = DateTime.Now.AddDays (40);  			NewPackage.TraffAll = 3000;  			NewPackage.TraffLeft = 600;  		}  		#endif  		if (NewPackage.isActive)  			// add only active packages  			this.Packages.Add (NewPackage);  	}  	/// sort by start date... package with early start date in use first  	this.Packages.Sort (delegate (Package pk1' Package pk2) {  		return pk1.StartDT.CompareTo (pk2.StartDT);  	});  }  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: if (PackageMatches.Count > 0) {  	this.Packages.Clear ();  	foreach (Match PackangeMatch in PackageMatches) {  		if (!PackangeMatch.Success)  			continue;  		Package NewPackage = new Package ();  		NewPackage.Name = PackangeMatch.Groups [1].Value.Trim ();  		float.TryParse (PackangeMatch.Groups [2].Value' out NewPackage.Cost);  		DateTime.TryParseExact (PackangeMatch.Groups [3].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.StartDT);  		DateTime.TryParseExact (PackangeMatch.Groups [4].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.EndDT);  		float.TryParse (PackangeMatch.Groups [5].Value' out NewPackage.TraffAll);  		float.TryParse (PackangeMatch.Groups [6].Value' out NewPackage.TraffLeft);  		#if DEBUG  		if (NewPackage.StartDT.Day == 22) {  			NewPackage.StartDT = DateTime.Now.AddDays (-40);  			NewPackage.EndDT = DateTime.Now.AddDays (40);  			NewPackage.TraffAll = 3000;  			NewPackage.TraffLeft = 600;  		}  		#endif  		if (NewPackage.isActive)  			// add only active packages  			this.Packages.Add (NewPackage);  	}  	/// sort by start date... package with early start date in use first  	this.Packages.Sort (delegate (Package pk1' Package pk2) {  		return pk1.StartDT.CompareTo (pk2.StartDT);  	});  }  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: if (PackageMatches.Count > 0) {  	this.Packages.Clear ();  	foreach (Match PackangeMatch in PackageMatches) {  		if (!PackangeMatch.Success)  			continue;  		Package NewPackage = new Package ();  		NewPackage.Name = PackangeMatch.Groups [1].Value.Trim ();  		float.TryParse (PackangeMatch.Groups [2].Value' out NewPackage.Cost);  		DateTime.TryParseExact (PackangeMatch.Groups [3].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.StartDT);  		DateTime.TryParseExact (PackangeMatch.Groups [4].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.EndDT);  		float.TryParse (PackangeMatch.Groups [5].Value' out NewPackage.TraffAll);  		float.TryParse (PackangeMatch.Groups [6].Value' out NewPackage.TraffLeft);  		#if DEBUG  		if (NewPackage.StartDT.Day == 22) {  			NewPackage.StartDT = DateTime.Now.AddDays (-40);  			NewPackage.EndDT = DateTime.Now.AddDays (40);  			NewPackage.TraffAll = 3000;  			NewPackage.TraffLeft = 600;  		}  		#endif  		if (NewPackage.isActive)  			// add only active packages  			this.Packages.Add (NewPackage);  	}  	/// sort by start date... package with early start date in use first  	this.Packages.Sort (delegate (Package pk1' Package pk2) {  		return pk1.StartDT.CompareTo (pk2.StartDT);  	});  }  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: if (PackageMatches.Count > 0) {  	this.Packages.Clear ();  	foreach (Match PackangeMatch in PackageMatches) {  		if (!PackangeMatch.Success)  			continue;  		Package NewPackage = new Package ();  		NewPackage.Name = PackangeMatch.Groups [1].Value.Trim ();  		float.TryParse (PackangeMatch.Groups [2].Value' out NewPackage.Cost);  		DateTime.TryParseExact (PackangeMatch.Groups [3].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.StartDT);  		DateTime.TryParseExact (PackangeMatch.Groups [4].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.EndDT);  		float.TryParse (PackangeMatch.Groups [5].Value' out NewPackage.TraffAll);  		float.TryParse (PackangeMatch.Groups [6].Value' out NewPackage.TraffLeft);  		#if DEBUG  		if (NewPackage.StartDT.Day == 22) {  			NewPackage.StartDT = DateTime.Now.AddDays (-40);  			NewPackage.EndDT = DateTime.Now.AddDays (40);  			NewPackage.TraffAll = 3000;  			NewPackage.TraffLeft = 600;  		}  		#endif  		if (NewPackage.isActive)  			// add only active packages  			this.Packages.Add (NewPackage);  	}  	/// sort by start date... package with early start date in use first  	this.Packages.Sort (delegate (Package pk1' Package pk2) {  		return pk1.StartDT.CompareTo (pk2.StartDT);  	});  }  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: if (PackageMatches.Count > 0) {  	this.Packages.Clear ();  	foreach (Match PackangeMatch in PackageMatches) {  		if (!PackangeMatch.Success)  			continue;  		Package NewPackage = new Package ();  		NewPackage.Name = PackangeMatch.Groups [1].Value.Trim ();  		float.TryParse (PackangeMatch.Groups [2].Value' out NewPackage.Cost);  		DateTime.TryParseExact (PackangeMatch.Groups [3].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.StartDT);  		DateTime.TryParseExact (PackangeMatch.Groups [4].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.EndDT);  		float.TryParse (PackangeMatch.Groups [5].Value' out NewPackage.TraffAll);  		float.TryParse (PackangeMatch.Groups [6].Value' out NewPackage.TraffLeft);  		#if DEBUG  		if (NewPackage.StartDT.Day == 22) {  			NewPackage.StartDT = DateTime.Now.AddDays (-40);  			NewPackage.EndDT = DateTime.Now.AddDays (40);  			NewPackage.TraffAll = 3000;  			NewPackage.TraffLeft = 600;  		}  		#endif  		if (NewPackage.isActive)  			// add only active packages  			this.Packages.Add (NewPackage);  	}  	/// sort by start date... package with early start date in use first  	this.Packages.Sort (delegate (Package pk1' Package pk2) {  		return pk1.StartDT.CompareTo (pk2.StartDT);  	});  }  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: if (PackageMatches.Count > 0) {  	this.Packages.Clear ();  	foreach (Match PackangeMatch in PackageMatches) {  		if (!PackangeMatch.Success)  			continue;  		Package NewPackage = new Package ();  		NewPackage.Name = PackangeMatch.Groups [1].Value.Trim ();  		float.TryParse (PackangeMatch.Groups [2].Value' out NewPackage.Cost);  		DateTime.TryParseExact (PackangeMatch.Groups [3].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.StartDT);  		DateTime.TryParseExact (PackangeMatch.Groups [4].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.EndDT);  		float.TryParse (PackangeMatch.Groups [5].Value' out NewPackage.TraffAll);  		float.TryParse (PackangeMatch.Groups [6].Value' out NewPackage.TraffLeft);  		#if DEBUG  		if (NewPackage.StartDT.Day == 22) {  			NewPackage.StartDT = DateTime.Now.AddDays (-40);  			NewPackage.EndDT = DateTime.Now.AddDays (40);  			NewPackage.TraffAll = 3000;  			NewPackage.TraffLeft = 600;  		}  		#endif  		if (NewPackage.isActive)  			// add only active packages  			this.Packages.Add (NewPackage);  	}  	/// sort by start date... package with early start date in use first  	this.Packages.Sort (delegate (Package pk1' Package pk2) {  		return pk1.StartDT.CompareTo (pk2.StartDT);  	});  }  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: foreach (Match PackangeMatch in PackageMatches) {  	if (!PackangeMatch.Success)  		continue;  	Package NewPackage = new Package ();  	NewPackage.Name = PackangeMatch.Groups [1].Value.Trim ();  	float.TryParse (PackangeMatch.Groups [2].Value' out NewPackage.Cost);  	DateTime.TryParseExact (PackangeMatch.Groups [3].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.StartDT);  	DateTime.TryParseExact (PackangeMatch.Groups [4].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.EndDT);  	float.TryParse (PackangeMatch.Groups [5].Value' out NewPackage.TraffAll);  	float.TryParse (PackangeMatch.Groups [6].Value' out NewPackage.TraffLeft);  	#if DEBUG  	if (NewPackage.StartDT.Day == 22) {  		NewPackage.StartDT = DateTime.Now.AddDays (-40);  		NewPackage.EndDT = DateTime.Now.AddDays (40);  		NewPackage.TraffAll = 3000;  		NewPackage.TraffLeft = 600;  	}  	#endif  	if (NewPackage.isActive)  		// add only active packages  		this.Packages.Add (NewPackage);  }  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: foreach (Match PackangeMatch in PackageMatches) {  	if (!PackangeMatch.Success)  		continue;  	Package NewPackage = new Package ();  	NewPackage.Name = PackangeMatch.Groups [1].Value.Trim ();  	float.TryParse (PackangeMatch.Groups [2].Value' out NewPackage.Cost);  	DateTime.TryParseExact (PackangeMatch.Groups [3].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.StartDT);  	DateTime.TryParseExact (PackangeMatch.Groups [4].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.EndDT);  	float.TryParse (PackangeMatch.Groups [5].Value' out NewPackage.TraffAll);  	float.TryParse (PackangeMatch.Groups [6].Value' out NewPackage.TraffLeft);  	#if DEBUG  	if (NewPackage.StartDT.Day == 22) {  		NewPackage.StartDT = DateTime.Now.AddDays (-40);  		NewPackage.EndDT = DateTime.Now.AddDays (40);  		NewPackage.TraffAll = 3000;  		NewPackage.TraffLeft = 600;  	}  	#endif  	if (NewPackage.isActive)  		// add only active packages  		this.Packages.Add (NewPackage);  }  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: foreach (Match PackangeMatch in PackageMatches) {  	if (!PackangeMatch.Success)  		continue;  	Package NewPackage = new Package ();  	NewPackage.Name = PackangeMatch.Groups [1].Value.Trim ();  	float.TryParse (PackangeMatch.Groups [2].Value' out NewPackage.Cost);  	DateTime.TryParseExact (PackangeMatch.Groups [3].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.StartDT);  	DateTime.TryParseExact (PackangeMatch.Groups [4].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.EndDT);  	float.TryParse (PackangeMatch.Groups [5].Value' out NewPackage.TraffAll);  	float.TryParse (PackangeMatch.Groups [6].Value' out NewPackage.TraffLeft);  	#if DEBUG  	if (NewPackage.StartDT.Day == 22) {  		NewPackage.StartDT = DateTime.Now.AddDays (-40);  		NewPackage.EndDT = DateTime.Now.AddDays (40);  		NewPackage.TraffAll = 3000;  		NewPackage.TraffLeft = 600;  	}  	#endif  	if (NewPackage.isActive)  		// add only active packages  		this.Packages.Add (NewPackage);  }  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: foreach (Match PackangeMatch in PackageMatches) {  	if (!PackangeMatch.Success)  		continue;  	Package NewPackage = new Package ();  	NewPackage.Name = PackangeMatch.Groups [1].Value.Trim ();  	float.TryParse (PackangeMatch.Groups [2].Value' out NewPackage.Cost);  	DateTime.TryParseExact (PackangeMatch.Groups [3].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.StartDT);  	DateTime.TryParseExact (PackangeMatch.Groups [4].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.EndDT);  	float.TryParse (PackangeMatch.Groups [5].Value' out NewPackage.TraffAll);  	float.TryParse (PackangeMatch.Groups [6].Value' out NewPackage.TraffLeft);  	#if DEBUG  	if (NewPackage.StartDT.Day == 22) {  		NewPackage.StartDT = DateTime.Now.AddDays (-40);  		NewPackage.EndDT = DateTime.Now.AddDays (40);  		NewPackage.TraffAll = 3000;  		NewPackage.TraffLeft = 600;  	}  	#endif  	if (NewPackage.isActive)  		// add only active packages  		this.Packages.Add (NewPackage);  }  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: foreach (Match PackangeMatch in PackageMatches) {  	if (!PackangeMatch.Success)  		continue;  	Package NewPackage = new Package ();  	NewPackage.Name = PackangeMatch.Groups [1].Value.Trim ();  	float.TryParse (PackangeMatch.Groups [2].Value' out NewPackage.Cost);  	DateTime.TryParseExact (PackangeMatch.Groups [3].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.StartDT);  	DateTime.TryParseExact (PackangeMatch.Groups [4].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.EndDT);  	float.TryParse (PackangeMatch.Groups [5].Value' out NewPackage.TraffAll);  	float.TryParse (PackangeMatch.Groups [6].Value' out NewPackage.TraffLeft);  	#if DEBUG  	if (NewPackage.StartDT.Day == 22) {  		NewPackage.StartDT = DateTime.Now.AddDays (-40);  		NewPackage.EndDT = DateTime.Now.AddDays (40);  		NewPackage.TraffAll = 3000;  		NewPackage.TraffLeft = 600;  	}  	#endif  	if (NewPackage.isActive)  		// add only active packages  		this.Packages.Add (NewPackage);  }  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: foreach (Match PackangeMatch in PackageMatches) {  	if (!PackangeMatch.Success)  		continue;  	Package NewPackage = new Package ();  	NewPackage.Name = PackangeMatch.Groups [1].Value.Trim ();  	float.TryParse (PackangeMatch.Groups [2].Value' out NewPackage.Cost);  	DateTime.TryParseExact (PackangeMatch.Groups [3].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.StartDT);  	DateTime.TryParseExact (PackangeMatch.Groups [4].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.EndDT);  	float.TryParse (PackangeMatch.Groups [5].Value' out NewPackage.TraffAll);  	float.TryParse (PackangeMatch.Groups [6].Value' out NewPackage.TraffLeft);  	#if DEBUG  	if (NewPackage.StartDT.Day == 22) {  		NewPackage.StartDT = DateTime.Now.AddDays (-40);  		NewPackage.EndDT = DateTime.Now.AddDays (40);  		NewPackage.TraffAll = 3000;  		NewPackage.TraffLeft = 600;  	}  	#endif  	if (NewPackage.isActive)  		// add only active packages  		this.Packages.Add (NewPackage);  }  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: foreach (Match PackangeMatch in PackageMatches) {  	if (!PackangeMatch.Success)  		continue;  	Package NewPackage = new Package ();  	NewPackage.Name = PackangeMatch.Groups [1].Value.Trim ();  	float.TryParse (PackangeMatch.Groups [2].Value' out NewPackage.Cost);  	DateTime.TryParseExact (PackangeMatch.Groups [3].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.StartDT);  	DateTime.TryParseExact (PackangeMatch.Groups [4].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.EndDT);  	float.TryParse (PackangeMatch.Groups [5].Value' out NewPackage.TraffAll);  	float.TryParse (PackangeMatch.Groups [6].Value' out NewPackage.TraffLeft);  	#if DEBUG  	if (NewPackage.StartDT.Day == 22) {  		NewPackage.StartDT = DateTime.Now.AddDays (-40);  		NewPackage.EndDT = DateTime.Now.AddDays (40);  		NewPackage.TraffAll = 3000;  		NewPackage.TraffLeft = 600;  	}  	#endif  	if (NewPackage.isActive)  		// add only active packages  		this.Packages.Add (NewPackage);  }  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: foreach (Match PackangeMatch in PackageMatches) {  	if (!PackangeMatch.Success)  		continue;  	Package NewPackage = new Package ();  	NewPackage.Name = PackangeMatch.Groups [1].Value.Trim ();  	float.TryParse (PackangeMatch.Groups [2].Value' out NewPackage.Cost);  	DateTime.TryParseExact (PackangeMatch.Groups [3].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.StartDT);  	DateTime.TryParseExact (PackangeMatch.Groups [4].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.EndDT);  	float.TryParse (PackangeMatch.Groups [5].Value' out NewPackage.TraffAll);  	float.TryParse (PackangeMatch.Groups [6].Value' out NewPackage.TraffLeft);  	#if DEBUG  	if (NewPackage.StartDT.Day == 22) {  		NewPackage.StartDT = DateTime.Now.AddDays (-40);  		NewPackage.EndDT = DateTime.Now.AddDays (40);  		NewPackage.TraffAll = 3000;  		NewPackage.TraffLeft = 600;  	}  	#endif  	if (NewPackage.isActive)  		// add only active packages  		this.Packages.Add (NewPackage);  }  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: foreach (Match PackangeMatch in PackageMatches) {  	if (!PackangeMatch.Success)  		continue;  	Package NewPackage = new Package ();  	NewPackage.Name = PackangeMatch.Groups [1].Value.Trim ();  	float.TryParse (PackangeMatch.Groups [2].Value' out NewPackage.Cost);  	DateTime.TryParseExact (PackangeMatch.Groups [3].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.StartDT);  	DateTime.TryParseExact (PackangeMatch.Groups [4].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.EndDT);  	float.TryParse (PackangeMatch.Groups [5].Value' out NewPackage.TraffAll);  	float.TryParse (PackangeMatch.Groups [6].Value' out NewPackage.TraffLeft);  	#if DEBUG  	if (NewPackage.StartDT.Day == 22) {  		NewPackage.StartDT = DateTime.Now.AddDays (-40);  		NewPackage.EndDT = DateTime.Now.AddDays (40);  		NewPackage.TraffAll = 3000;  		NewPackage.TraffLeft = 600;  	}  	#endif  	if (NewPackage.isActive)  		// add only active packages  		this.Packages.Add (NewPackage);  }  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: foreach (Match PackangeMatch in PackageMatches) {  	if (!PackangeMatch.Success)  		continue;  	Package NewPackage = new Package ();  	NewPackage.Name = PackangeMatch.Groups [1].Value.Trim ();  	float.TryParse (PackangeMatch.Groups [2].Value' out NewPackage.Cost);  	DateTime.TryParseExact (PackangeMatch.Groups [3].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.StartDT);  	DateTime.TryParseExact (PackangeMatch.Groups [4].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.EndDT);  	float.TryParse (PackangeMatch.Groups [5].Value' out NewPackage.TraffAll);  	float.TryParse (PackangeMatch.Groups [6].Value' out NewPackage.TraffLeft);  	#if DEBUG  	if (NewPackage.StartDT.Day == 22) {  		NewPackage.StartDT = DateTime.Now.AddDays (-40);  		NewPackage.EndDT = DateTime.Now.AddDays (40);  		NewPackage.TraffAll = 3000;  		NewPackage.TraffLeft = 600;  	}  	#endif  	if (NewPackage.isActive)  		// add only active packages  		this.Packages.Add (NewPackage);  }  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: float.TryParse (PackangeMatch.Groups [2].Value' out NewPackage.Cost);  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: DateTime.TryParseExact (PackangeMatch.Groups [3].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.StartDT);  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: DateTime.TryParseExact (PackangeMatch.Groups [4].Value' "dd.MM.yyyy HH:mm"' System.Globalization.CultureInfo.InvariantCulture' System.Globalization.DateTimeStyles.None' out NewPackage.EndDT);  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: float.TryParse (PackangeMatch.Groups [5].Value' out NewPackage.TraffAll);  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: float.TryParse (PackangeMatch.Groups [6].Value' out NewPackage.TraffLeft);  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: if (NewPackage.StartDT.Day == 22) {  	NewPackage.StartDT = DateTime.Now.AddDays (-40);  	NewPackage.EndDT = DateTime.Now.AddDays (40);  	NewPackage.TraffAll = 3000;  	NewPackage.TraffLeft = 600;  }  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: if (NewPackage.StartDT.Day == 22) {  	NewPackage.StartDT = DateTime.Now.AddDays (-40);  	NewPackage.EndDT = DateTime.Now.AddDays (40);  	NewPackage.TraffAll = 3000;  	NewPackage.TraffLeft = 600;  }  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: if (NewPackage.StartDT.Day == 22) {  	NewPackage.StartDT = DateTime.Now.AddDays (-40);  	NewPackage.EndDT = DateTime.Now.AddDays (40);  	NewPackage.TraffAll = 3000;  	NewPackage.TraffLeft = 600;  }  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: if (NewPackage.StartDT.Day == 22) {  	NewPackage.StartDT = DateTime.Now.AddDays (-40);  	NewPackage.EndDT = DateTime.Now.AddDays (40);  	NewPackage.TraffAll = 3000;  	NewPackage.TraffLeft = 600;  }  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: if (NewPackage.StartDT.Day == 22) {  	NewPackage.StartDT = DateTime.Now.AddDays (-40);  	NewPackage.EndDT = DateTime.Now.AddDays (40);  	NewPackage.TraffAll = 3000;  	NewPackage.TraffLeft = 600;  }  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: NewPackage.StartDT = DateTime.Now.AddDays (-40);  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: NewPackage.EndDT = DateTime.Now.AddDays (40);  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: NewPackage.TraffAll = 3000;  
Magic Number,tpscabinet,CabinetScraper,C:\repos\bestlion_tpscabinet\tpscabinet\cabinetScraper.cs,LoadData,The following statement contains a magic number: NewPackage.TraffLeft = 600;  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,frm_notify,The following statement contains a magic number: BorderPen = new Pen (Color.FromArgb (118' 118' 118));  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,frm_notify,The following statement contains a magic number: BorderPen = new Pen (Color.FromArgb (118' 118' 118));  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,frm_notify,The following statement contains a magic number: BorderPen = new Pen (Color.FromArgb (118' 118' 118));  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,frm_notify,The following statement contains a magic number: FadeOutTimer = new System.Timers.Timer (120);  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,OnResize,The following statement contains a magic number: this.BorderPath = helper.CreateRoundRect (new Rectangle (0' 0' this.Width - 1' this.Height - 1)' 4' helper.RectangleCorners.All);  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,OnResize,The following statement contains a magic number: this.RegionPath = helper.CreateRoundRect (new Rectangle (0' 0' this.Width' this.Height)' 4' helper.RectangleCorners.All);  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,OnPaint,The following statement contains a magic number: if (BorderPath != null && RegionPath != null) {  	e.Graphics.SmoothingMode = SmoothingMode.AntiAlias;  	e.Graphics.CompositingQuality = CompositingQuality.AssumeLinear;  	e.Graphics.InterpolationMode = InterpolationMode.NearestNeighbor;  	e.Graphics.FillPath (new LinearGradientBrush (new Rectangle (0' 0' this.Width' this.Height)' Color.FromArgb (254' 254' 254)' Color.FromArgb (228' 229' 240)' LinearGradientMode.Vertical)' BorderPath);  	e.Graphics.DrawPath (BorderPen' BorderPath);  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,OnPaint,The following statement contains a magic number: if (BorderPath != null && RegionPath != null) {  	e.Graphics.SmoothingMode = SmoothingMode.AntiAlias;  	e.Graphics.CompositingQuality = CompositingQuality.AssumeLinear;  	e.Graphics.InterpolationMode = InterpolationMode.NearestNeighbor;  	e.Graphics.FillPath (new LinearGradientBrush (new Rectangle (0' 0' this.Width' this.Height)' Color.FromArgb (254' 254' 254)' Color.FromArgb (228' 229' 240)' LinearGradientMode.Vertical)' BorderPath);  	e.Graphics.DrawPath (BorderPen' BorderPath);  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,OnPaint,The following statement contains a magic number: if (BorderPath != null && RegionPath != null) {  	e.Graphics.SmoothingMode = SmoothingMode.AntiAlias;  	e.Graphics.CompositingQuality = CompositingQuality.AssumeLinear;  	e.Graphics.InterpolationMode = InterpolationMode.NearestNeighbor;  	e.Graphics.FillPath (new LinearGradientBrush (new Rectangle (0' 0' this.Width' this.Height)' Color.FromArgb (254' 254' 254)' Color.FromArgb (228' 229' 240)' LinearGradientMode.Vertical)' BorderPath);  	e.Graphics.DrawPath (BorderPen' BorderPath);  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,OnPaint,The following statement contains a magic number: if (BorderPath != null && RegionPath != null) {  	e.Graphics.SmoothingMode = SmoothingMode.AntiAlias;  	e.Graphics.CompositingQuality = CompositingQuality.AssumeLinear;  	e.Graphics.InterpolationMode = InterpolationMode.NearestNeighbor;  	e.Graphics.FillPath (new LinearGradientBrush (new Rectangle (0' 0' this.Width' this.Height)' Color.FromArgb (254' 254' 254)' Color.FromArgb (228' 229' 240)' LinearGradientMode.Vertical)' BorderPath);  	e.Graphics.DrawPath (BorderPen' BorderPath);  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,OnPaint,The following statement contains a magic number: if (BorderPath != null && RegionPath != null) {  	e.Graphics.SmoothingMode = SmoothingMode.AntiAlias;  	e.Graphics.CompositingQuality = CompositingQuality.AssumeLinear;  	e.Graphics.InterpolationMode = InterpolationMode.NearestNeighbor;  	e.Graphics.FillPath (new LinearGradientBrush (new Rectangle (0' 0' this.Width' this.Height)' Color.FromArgb (254' 254' 254)' Color.FromArgb (228' 229' 240)' LinearGradientMode.Vertical)' BorderPath);  	e.Graphics.DrawPath (BorderPen' BorderPath);  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,OnPaint,The following statement contains a magic number: if (BorderPath != null && RegionPath != null) {  	e.Graphics.SmoothingMode = SmoothingMode.AntiAlias;  	e.Graphics.CompositingQuality = CompositingQuality.AssumeLinear;  	e.Graphics.InterpolationMode = InterpolationMode.NearestNeighbor;  	e.Graphics.FillPath (new LinearGradientBrush (new Rectangle (0' 0' this.Width' this.Height)' Color.FromArgb (254' 254' 254)' Color.FromArgb (228' 229' 240)' LinearGradientMode.Vertical)' BorderPath);  	e.Graphics.DrawPath (BorderPen' BorderPath);  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,OnPaint,The following statement contains a magic number: e.Graphics.FillPath (new LinearGradientBrush (new Rectangle (0' 0' this.Width' this.Height)' Color.FromArgb (254' 254' 254)' Color.FromArgb (228' 229' 240)' LinearGradientMode.Vertical)' BorderPath);  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,OnPaint,The following statement contains a magic number: e.Graphics.FillPath (new LinearGradientBrush (new Rectangle (0' 0' this.Width' this.Height)' Color.FromArgb (254' 254' 254)' Color.FromArgb (228' 229' 240)' LinearGradientMode.Vertical)' BorderPath);  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,OnPaint,The following statement contains a magic number: e.Graphics.FillPath (new LinearGradientBrush (new Rectangle (0' 0' this.Width' this.Height)' Color.FromArgb (254' 254' 254)' Color.FromArgb (228' 229' 240)' LinearGradientMode.Vertical)' BorderPath);  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,OnPaint,The following statement contains a magic number: e.Graphics.FillPath (new LinearGradientBrush (new Rectangle (0' 0' this.Width' this.Height)' Color.FromArgb (254' 254' 254)' Color.FromArgb (228' 229' 240)' LinearGradientMode.Vertical)' BorderPath);  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,OnPaint,The following statement contains a magic number: e.Graphics.FillPath (new LinearGradientBrush (new Rectangle (0' 0' this.Width' this.Height)' Color.FromArgb (254' 254' 254)' Color.FromArgb (228' 229' 240)' LinearGradientMode.Vertical)' BorderPath);  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,OnPaint,The following statement contains a magic number: e.Graphics.FillPath (new LinearGradientBrush (new Rectangle (0' 0' this.Width' this.Height)' Color.FromArgb (254' 254' 254)' Color.FromArgb (228' 229' 240)' LinearGradientMode.Vertical)' BorderPath);  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: lbl_Info.Left = 7;  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.Login.Trim () == "" || tps_cabinet.Password.Trim () == "")  	this.FillData ("\r\nВы не ввели свои логин\\пароль\r\n\r\n");  else if (tps_cabinet.LastError != null && tps_cabinet.LastError.isCritical)  	this.FillData ("\r\n" + tps_cabinet.LastError.Message + "\r\n\r\n");  else if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.Login.Trim () == "" || tps_cabinet.Password.Trim () == "")  	this.FillData ("\r\nВы не ввели свои логин\\пароль\r\n\r\n");  else if (tps_cabinet.LastError != null && tps_cabinet.LastError.isCritical)  	this.FillData ("\r\n" + tps_cabinet.LastError.Message + "\r\n\r\n");  else if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.Login.Trim () == "" || tps_cabinet.Password.Trim () == "")  	this.FillData ("\r\nВы не ввели свои логин\\пароль\r\n\r\n");  else if (tps_cabinet.LastError != null && tps_cabinet.LastError.isCritical)  	this.FillData ("\r\n" + tps_cabinet.LastError.Message + "\r\n\r\n");  else if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.Login.Trim () == "" || tps_cabinet.Password.Trim () == "")  	this.FillData ("\r\nВы не ввели свои логин\\пароль\r\n\r\n");  else if (tps_cabinet.LastError != null && tps_cabinet.LastError.isCritical)  	this.FillData ("\r\n" + tps_cabinet.LastError.Message + "\r\n\r\n");  else if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.Login.Trim () == "" || tps_cabinet.Password.Trim () == "")  	this.FillData ("\r\nВы не ввели свои логин\\пароль\r\n\r\n");  else if (tps_cabinet.LastError != null && tps_cabinet.LastError.isCritical)  	this.FillData ("\r\n" + tps_cabinet.LastError.Message + "\r\n\r\n");  else if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.Login.Trim () == "" || tps_cabinet.Password.Trim () == "")  	this.FillData ("\r\nВы не ввели свои логин\\пароль\r\n\r\n");  else if (tps_cabinet.LastError != null && tps_cabinet.LastError.isCritical)  	this.FillData ("\r\n" + tps_cabinet.LastError.Message + "\r\n\r\n");  else if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.Login.Trim () == "" || tps_cabinet.Password.Trim () == "")  	this.FillData ("\r\nВы не ввели свои логин\\пароль\r\n\r\n");  else if (tps_cabinet.LastError != null && tps_cabinet.LastError.isCritical)  	this.FillData ("\r\n" + tps_cabinet.LastError.Message + "\r\n\r\n");  else if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.Login.Trim () == "" || tps_cabinet.Password.Trim () == "")  	this.FillData ("\r\nВы не ввели свои логин\\пароль\r\n\r\n");  else if (tps_cabinet.LastError != null && tps_cabinet.LastError.isCritical)  	this.FillData ("\r\n" + tps_cabinet.LastError.Message + "\r\n\r\n");  else if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.Login.Trim () == "" || tps_cabinet.Password.Trim () == "")  	this.FillData ("\r\nВы не ввели свои логин\\пароль\r\n\r\n");  else if (tps_cabinet.LastError != null && tps_cabinet.LastError.isCritical)  	this.FillData ("\r\n" + tps_cabinet.LastError.Message + "\r\n\r\n");  else if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.Login.Trim () == "" || tps_cabinet.Password.Trim () == "")  	this.FillData ("\r\nВы не ввели свои логин\\пароль\r\n\r\n");  else if (tps_cabinet.LastError != null && tps_cabinet.LastError.isCritical)  	this.FillData ("\r\n" + tps_cabinet.LastError.Message + "\r\n\r\n");  else if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.Login.Trim () == "" || tps_cabinet.Password.Trim () == "")  	this.FillData ("\r\nВы не ввели свои логин\\пароль\r\n\r\n");  else if (tps_cabinet.LastError != null && tps_cabinet.LastError.isCritical)  	this.FillData ("\r\n" + tps_cabinet.LastError.Message + "\r\n\r\n");  else if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.Login.Trim () == "" || tps_cabinet.Password.Trim () == "")  	this.FillData ("\r\nВы не ввели свои логин\\пароль\r\n\r\n");  else if (tps_cabinet.LastError != null && tps_cabinet.LastError.isCritical)  	this.FillData ("\r\n" + tps_cabinet.LastError.Message + "\r\n\r\n");  else if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.Login.Trim () == "" || tps_cabinet.Password.Trim () == "")  	this.FillData ("\r\nВы не ввели свои логин\\пароль\r\n\r\n");  else if (tps_cabinet.LastError != null && tps_cabinet.LastError.isCritical)  	this.FillData ("\r\n" + tps_cabinet.LastError.Message + "\r\n\r\n");  else if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.Login.Trim () == "" || tps_cabinet.Password.Trim () == "")  	this.FillData ("\r\nВы не ввели свои логин\\пароль\r\n\r\n");  else if (tps_cabinet.LastError != null && tps_cabinet.LastError.isCritical)  	this.FillData ("\r\n" + tps_cabinet.LastError.Message + "\r\n\r\n");  else if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.Login.Trim () == "" || tps_cabinet.Password.Trim () == "")  	this.FillData ("\r\nВы не ввели свои логин\\пароль\r\n\r\n");  else if (tps_cabinet.LastError != null && tps_cabinet.LastError.isCritical)  	this.FillData ("\r\n" + tps_cabinet.LastError.Message + "\r\n\r\n");  else if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.Login.Trim () == "" || tps_cabinet.Password.Trim () == "")  	this.FillData ("\r\nВы не ввели свои логин\\пароль\r\n\r\n");  else if (tps_cabinet.LastError != null && tps_cabinet.LastError.isCritical)  	this.FillData ("\r\n" + tps_cabinet.LastError.Message + "\r\n\r\n");  else if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.Login.Trim () == "" || tps_cabinet.Password.Trim () == "")  	this.FillData ("\r\nВы не ввели свои логин\\пароль\r\n\r\n");  else if (tps_cabinet.LastError != null && tps_cabinet.LastError.isCritical)  	this.FillData ("\r\n" + tps_cabinet.LastError.Message + "\r\n\r\n");  else if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.Login.Trim () == "" || tps_cabinet.Password.Trim () == "")  	this.FillData ("\r\nВы не ввели свои логин\\пароль\r\n\r\n");  else if (tps_cabinet.LastError != null && tps_cabinet.LastError.isCritical)  	this.FillData ("\r\n" + tps_cabinet.LastError.Message + "\r\n\r\n");  else if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.Login.Trim () == "" || tps_cabinet.Password.Trim () == "")  	this.FillData ("\r\nВы не ввели свои логин\\пароль\r\n\r\n");  else if (tps_cabinet.LastError != null && tps_cabinet.LastError.isCritical)  	this.FillData ("\r\n" + tps_cabinet.LastError.Message + "\r\n\r\n");  else if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.Login.Trim () == "" || tps_cabinet.Password.Trim () == "")  	this.FillData ("\r\nВы не ввели свои логин\\пароль\r\n\r\n");  else if (tps_cabinet.LastError != null && tps_cabinet.LastError.isCritical)  	this.FillData ("\r\n" + tps_cabinet.LastError.Message + "\r\n\r\n");  else if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.Login.Trim () == "" || tps_cabinet.Password.Trim () == "")  	this.FillData ("\r\nВы не ввели свои логин\\пароль\r\n\r\n");  else if (tps_cabinet.LastError != null && tps_cabinet.LastError.isCritical)  	this.FillData ("\r\n" + tps_cabinet.LastError.Message + "\r\n\r\n");  else if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.Login.Trim () == "" || tps_cabinet.Password.Trim () == "")  	this.FillData ("\r\nВы не ввели свои логин\\пароль\r\n\r\n");  else if (tps_cabinet.LastError != null && tps_cabinet.LastError.isCritical)  	this.FillData ("\r\n" + tps_cabinet.LastError.Message + "\r\n\r\n");  else if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.LastError != null && tps_cabinet.LastError.isCritical)  	this.FillData ("\r\n" + tps_cabinet.LastError.Message + "\r\n\r\n");  else if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.LastError != null && tps_cabinet.LastError.isCritical)  	this.FillData ("\r\n" + tps_cabinet.LastError.Message + "\r\n\r\n");  else if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.LastError != null && tps_cabinet.LastError.isCritical)  	this.FillData ("\r\n" + tps_cabinet.LastError.Message + "\r\n\r\n");  else if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.LastError != null && tps_cabinet.LastError.isCritical)  	this.FillData ("\r\n" + tps_cabinet.LastError.Message + "\r\n\r\n");  else if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.LastError != null && tps_cabinet.LastError.isCritical)  	this.FillData ("\r\n" + tps_cabinet.LastError.Message + "\r\n\r\n");  else if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.LastError != null && tps_cabinet.LastError.isCritical)  	this.FillData ("\r\n" + tps_cabinet.LastError.Message + "\r\n\r\n");  else if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.LastError != null && tps_cabinet.LastError.isCritical)  	this.FillData ("\r\n" + tps_cabinet.LastError.Message + "\r\n\r\n");  else if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.LastError != null && tps_cabinet.LastError.isCritical)  	this.FillData ("\r\n" + tps_cabinet.LastError.Message + "\r\n\r\n");  else if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.LastError != null && tps_cabinet.LastError.isCritical)  	this.FillData ("\r\n" + tps_cabinet.LastError.Message + "\r\n\r\n");  else if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.LastError != null && tps_cabinet.LastError.isCritical)  	this.FillData ("\r\n" + tps_cabinet.LastError.Message + "\r\n\r\n");  else if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.LastError != null && tps_cabinet.LastError.isCritical)  	this.FillData ("\r\n" + tps_cabinet.LastError.Message + "\r\n\r\n");  else if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.LastError != null && tps_cabinet.LastError.isCritical)  	this.FillData ("\r\n" + tps_cabinet.LastError.Message + "\r\n\r\n");  else if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.LastError != null && tps_cabinet.LastError.isCritical)  	this.FillData ("\r\n" + tps_cabinet.LastError.Message + "\r\n\r\n");  else if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.LastError != null && tps_cabinet.LastError.isCritical)  	this.FillData ("\r\n" + tps_cabinet.LastError.Message + "\r\n\r\n");  else if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.LastError != null && tps_cabinet.LastError.isCritical)  	this.FillData ("\r\n" + tps_cabinet.LastError.Message + "\r\n\r\n");  else if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.LastError != null && tps_cabinet.LastError.isCritical)  	this.FillData ("\r\n" + tps_cabinet.LastError.Message + "\r\n\r\n");  else if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.LastError != null && tps_cabinet.LastError.isCritical)  	this.FillData ("\r\n" + tps_cabinet.LastError.Message + "\r\n\r\n");  else if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.LastError != null && tps_cabinet.LastError.isCritical)  	this.FillData ("\r\n" + tps_cabinet.LastError.Message + "\r\n\r\n");  else if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.LastError != null && tps_cabinet.LastError.isCritical)  	this.FillData ("\r\n" + tps_cabinet.LastError.Message + "\r\n\r\n");  else if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.LastError != null && tps_cabinet.LastError.isCritical)  	this.FillData ("\r\n" + tps_cabinet.LastError.Message + "\r\n\r\n");  else if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.LastError != null && tps_cabinet.LastError.isCritical)  	this.FillData ("\r\n" + tps_cabinet.LastError.Message + "\r\n\r\n");  else if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.LastError != null && tps_cabinet.LastError.isCritical)  	this.FillData ("\r\n" + tps_cabinet.LastError.Message + "\r\n\r\n");  else if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.LastUpdate == DateTime.MinValue)  	this.FillData ("\r\nОбновление...\r\n\r\n");  else {  	this.SuspendLayout ();  	tbl_Packages.Visible = true;  	lbl_Info.Left = 91;  	///// draw traf use piechart ////  	if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  		Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  		using (Graphics g = Graphics.FromImage (bmp)) {  			g.SmoothingMode = SmoothingMode.AntiAlias;  			g.CompositingQuality = CompositingQuality.HighQuality;  			g.InterpolationMode = InterpolationMode.Bicubic;  			g.Clear (Color.Transparent);  			g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  			float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  			g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  			if (tps_cabinet.HasPackage) {  				#if DEBUG  				tps_cabinet.Packages [0].TraffLeft = 600;  				tps_cabinet.Packages [1].TraffLeft = 600;  				#endif  				/// if have show first package  				float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package1_SweepAngle > Prepaid_SweepAngle)  					Package1_SweepAngle = Prepaid_SweepAngle;  				// if package traff more prepaid show only part  				if (tps_cabinet.TraffLeft == 0) {  					Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  				//// if have second package and have space show it  				if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  					float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  					if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  						Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  					// if package traff more prepaid+package1 show only part  					if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  						Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  						if (Package2_SweepAngle > (360 - Package1_SweepAngle))  							Package2_SweepAngle = 360 - Package1_SweepAngle;  						// if package traff more package1 show only part  						g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  					}  					else if (!Properties.Settings.Default.DisablePackageDiagramm)  						g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  				}  			}  		}  		if (pic_Graph.Image != null) {  			pic_Graph.Image.Dispose ();  			pic_Graph.Image = null;  		}  		pic_Graph.Image = bmp;  		pic_Graph.Visible = true;  	}  	else  		pic_Graph.Visible = false;  	////////////////////////////////  	int MinFromLastUpdate = (int)(DateTime.Now - tps_cabinet.LastUpdate).TotalMinutes;  	lbl_Info.Text = "Обновлено: " + tps_cabinet.LastUpdate.ToString ("d MMM HH:mm") + " (" + ((MinFromLastUpdate == 0) ? "только что" : MinFromLastUpdate + " мин. назад") + ")\r\n";  	string DayUsed = "";  	if (tps_cabinet.TraffUsed > 0 && tps_cabinet.TraffLeft != 0)  		DayUsed = " (" + (tps_cabinet.TraffUsed / DateTime.Now.Day).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0)  		lbl_Info.Text += "Использовано (П): " + tps_cabinet.Packages [0].TraffUsed + " Мб\r\n";  	else  		lbl_Info.Text += "Использовано: " + tps_cabinet.TraffUsed + " Мб" + DayUsed + "\r\n";  	string PlaningDayUse = "";  	if (tps_cabinet.TraffLeft > 0 && (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day) > 0)  		PlaningDayUse = " (" + (tps_cabinet.TraffLeft / (DateTime.DaysInMonth (DateTime.Now.Year' DateTime.Now.Month) - DateTime.Now.Day)).ToString ("f2") + " Мб/день)";  	if (tps_cabinet.HasPackage && tps_cabinet.TraffLeft == 0) {  		if (tps_cabinet.Packages [0].TraffLeft > 0) {  			if (tps_cabinet.Packages [0].DaysLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].DaysLeft)).ToString ("f2") + " Мб/день)";  			else if (tps_cabinet.Packages [0].TotalHoursLeft > 0)  				PlaningDayUse = " (" + (tps_cabinet.Packages [0].TraffLeft / (tps_cabinet.Packages [0].TotalHoursLeft)).ToString ("f2") + " Мб/час)";  		}  		lbl_Info.Text += "Остаток (П): " + tps_cabinet.Packages [0].TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	}  	else  		lbl_Info.Text += "Остаток: " + tps_cabinet.TraffLeft + " Мб" + PlaningDayUse + "\r\n";  	lbl_Info.Text += "Баланс: $ " + tps_cabinet.Balance + " / Курс: " + tps_cabinet.Kurs.ToString ("f2") + "\r\n";  	lbl_Info.Text += "К оплате (1-го): " + ((tps_cabinet.AbonentPlata - tps_cabinet.Balance) * tps_cabinet.Kurs).ToString ("f2") + "\r\n";  	if (tps_cabinet.Packages.Count > 0) {  		lbl_package1.ForeColor = Color.DarkGreen;  		//lbl_package1.Text = tps_cabinet.Packages[0].DaysLeft + " " + tps_cabinet.Packages[0].DaysLeftPlural + " - " + tps_cabinet.Packages[0].TraffLeft.ToString("f0") + " Мб";  		lbl_package1.Text = tps_cabinet.Packages [0].TimeLeftStr + " " + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб";  		strTip_package1 = "Пакет: " + tps_cabinet.Packages [0].Name + "\r\n";  		strTip_package1 += "Активирован: " + tps_cabinet.Packages [0].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Кончается: " + tps_cabinet.Packages [0].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package1 += "Всего:" + tps_cabinet.Packages [0].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package1 += "Остаток:" + tps_cabinet.Packages [0].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		lbl_package1.ForeColor = SystemColors.ControlText;  		lbl_package1.Text = "Нет пакетов";  		strTip_package1 = "";  	}  	if (tps_cabinet.Packages.Count > 1) {  		//lbl_package2.Text = tps_cabinet.Packages[1].DaysLeft + " " + tps_cabinet.Packages[1].DaysLeftPlural + " - " + tps_cabinet.Packages[1].TraffLeft.ToString("f0") + " Мб";  		lbl_package2.Text = tps_cabinet.Packages [1].TimeLeftStr + " " + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб";  		strTip_package2 = "Пакет: " + tps_cabinet.Packages [1].Name + "\r\n";  		strTip_package2 += "Активирован: " + tps_cabinet.Packages [1].StartDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Кончается: " + tps_cabinet.Packages [1].EndDT.ToString ("dd.MM.yy в H:mm") + "\r\n";  		strTip_package2 += "Всего:" + tps_cabinet.Packages [1].TraffAll.ToString ("f0") + " Мб\r\n";  		strTip_package2 += "Остаток:" + tps_cabinet.Packages [1].TraffLeft.ToString ("f0") + " Мб\r\n";  	}  	else {  		strTip_package2 = "";  		lbl_package2.Text = "";  	}  	this.ResumeLayout ();  	//AppIcon.Text += "CabinetID = " + tps_cabinet.CabinetID + "\r\n";  	///AppIcon.Text += "AbonentPlata = " + tps_cabinet.AbonentPlata + "\r\n";  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: lbl_Info.Left = 91;  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  	Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  	using (Graphics g = Graphics.FromImage (bmp)) {  		g.SmoothingMode = SmoothingMode.AntiAlias;  		g.CompositingQuality = CompositingQuality.HighQuality;  		g.InterpolationMode = InterpolationMode.Bicubic;  		g.Clear (Color.Transparent);  		g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  		float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  		g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  		if (tps_cabinet.HasPackage) {  			#if DEBUG  			tps_cabinet.Packages [0].TraffLeft = 600;  			tps_cabinet.Packages [1].TraffLeft = 600;  			#endif  			/// if have show first package  			float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  			if (Package1_SweepAngle > Prepaid_SweepAngle)  				Package1_SweepAngle = Prepaid_SweepAngle;  			// if package traff more prepaid show only part  			if (tps_cabinet.TraffLeft == 0) {  				Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  				g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  			}  			else if (!Properties.Settings.Default.DisablePackageDiagramm)  				g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  			//// if have second package and have space show it  			if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  				float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  					Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  				// if package traff more prepaid+package1 show only part  				if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  					Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					if (Package2_SweepAngle > (360 - Package1_SweepAngle))  						Package2_SweepAngle = 360 - Package1_SweepAngle;  					// if package traff more package1 show only part  					g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  			}  		}  	}  	if (pic_Graph.Image != null) {  		pic_Graph.Image.Dispose ();  		pic_Graph.Image = null;  	}  	pic_Graph.Image = bmp;  	pic_Graph.Visible = true;  }  else  	pic_Graph.Visible = false;  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  	Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  	using (Graphics g = Graphics.FromImage (bmp)) {  		g.SmoothingMode = SmoothingMode.AntiAlias;  		g.CompositingQuality = CompositingQuality.HighQuality;  		g.InterpolationMode = InterpolationMode.Bicubic;  		g.Clear (Color.Transparent);  		g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  		float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  		g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  		if (tps_cabinet.HasPackage) {  			#if DEBUG  			tps_cabinet.Packages [0].TraffLeft = 600;  			tps_cabinet.Packages [1].TraffLeft = 600;  			#endif  			/// if have show first package  			float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  			if (Package1_SweepAngle > Prepaid_SweepAngle)  				Package1_SweepAngle = Prepaid_SweepAngle;  			// if package traff more prepaid show only part  			if (tps_cabinet.TraffLeft == 0) {  				Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  				g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  			}  			else if (!Properties.Settings.Default.DisablePackageDiagramm)  				g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  			//// if have second package and have space show it  			if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  				float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  					Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  				// if package traff more prepaid+package1 show only part  				if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  					Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					if (Package2_SweepAngle > (360 - Package1_SweepAngle))  						Package2_SweepAngle = 360 - Package1_SweepAngle;  					// if package traff more package1 show only part  					g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  			}  		}  	}  	if (pic_Graph.Image != null) {  		pic_Graph.Image.Dispose ();  		pic_Graph.Image = null;  	}  	pic_Graph.Image = bmp;  	pic_Graph.Visible = true;  }  else  	pic_Graph.Visible = false;  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  	Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  	using (Graphics g = Graphics.FromImage (bmp)) {  		g.SmoothingMode = SmoothingMode.AntiAlias;  		g.CompositingQuality = CompositingQuality.HighQuality;  		g.InterpolationMode = InterpolationMode.Bicubic;  		g.Clear (Color.Transparent);  		g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  		float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  		g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  		if (tps_cabinet.HasPackage) {  			#if DEBUG  			tps_cabinet.Packages [0].TraffLeft = 600;  			tps_cabinet.Packages [1].TraffLeft = 600;  			#endif  			/// if have show first package  			float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  			if (Package1_SweepAngle > Prepaid_SweepAngle)  				Package1_SweepAngle = Prepaid_SweepAngle;  			// if package traff more prepaid show only part  			if (tps_cabinet.TraffLeft == 0) {  				Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  				g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  			}  			else if (!Properties.Settings.Default.DisablePackageDiagramm)  				g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  			//// if have second package and have space show it  			if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  				float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  					Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  				// if package traff more prepaid+package1 show only part  				if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  					Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					if (Package2_SweepAngle > (360 - Package1_SweepAngle))  						Package2_SweepAngle = 360 - Package1_SweepAngle;  					// if package traff more package1 show only part  					g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  			}  		}  	}  	if (pic_Graph.Image != null) {  		pic_Graph.Image.Dispose ();  		pic_Graph.Image = null;  	}  	pic_Graph.Image = bmp;  	pic_Graph.Visible = true;  }  else  	pic_Graph.Visible = false;  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  	Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  	using (Graphics g = Graphics.FromImage (bmp)) {  		g.SmoothingMode = SmoothingMode.AntiAlias;  		g.CompositingQuality = CompositingQuality.HighQuality;  		g.InterpolationMode = InterpolationMode.Bicubic;  		g.Clear (Color.Transparent);  		g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  		float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  		g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  		if (tps_cabinet.HasPackage) {  			#if DEBUG  			tps_cabinet.Packages [0].TraffLeft = 600;  			tps_cabinet.Packages [1].TraffLeft = 600;  			#endif  			/// if have show first package  			float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  			if (Package1_SweepAngle > Prepaid_SweepAngle)  				Package1_SweepAngle = Prepaid_SweepAngle;  			// if package traff more prepaid show only part  			if (tps_cabinet.TraffLeft == 0) {  				Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  				g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  			}  			else if (!Properties.Settings.Default.DisablePackageDiagramm)  				g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  			//// if have second package and have space show it  			if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  				float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  					Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  				// if package traff more prepaid+package1 show only part  				if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  					Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					if (Package2_SweepAngle > (360 - Package1_SweepAngle))  						Package2_SweepAngle = 360 - Package1_SweepAngle;  					// if package traff more package1 show only part  					g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  			}  		}  	}  	if (pic_Graph.Image != null) {  		pic_Graph.Image.Dispose ();  		pic_Graph.Image = null;  	}  	pic_Graph.Image = bmp;  	pic_Graph.Visible = true;  }  else  	pic_Graph.Visible = false;  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  	Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  	using (Graphics g = Graphics.FromImage (bmp)) {  		g.SmoothingMode = SmoothingMode.AntiAlias;  		g.CompositingQuality = CompositingQuality.HighQuality;  		g.InterpolationMode = InterpolationMode.Bicubic;  		g.Clear (Color.Transparent);  		g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  		float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  		g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  		if (tps_cabinet.HasPackage) {  			#if DEBUG  			tps_cabinet.Packages [0].TraffLeft = 600;  			tps_cabinet.Packages [1].TraffLeft = 600;  			#endif  			/// if have show first package  			float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  			if (Package1_SweepAngle > Prepaid_SweepAngle)  				Package1_SweepAngle = Prepaid_SweepAngle;  			// if package traff more prepaid show only part  			if (tps_cabinet.TraffLeft == 0) {  				Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  				g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  			}  			else if (!Properties.Settings.Default.DisablePackageDiagramm)  				g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  			//// if have second package and have space show it  			if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  				float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  					Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  				// if package traff more prepaid+package1 show only part  				if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  					Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					if (Package2_SweepAngle > (360 - Package1_SweepAngle))  						Package2_SweepAngle = 360 - Package1_SweepAngle;  					// if package traff more package1 show only part  					g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  			}  		}  	}  	if (pic_Graph.Image != null) {  		pic_Graph.Image.Dispose ();  		pic_Graph.Image = null;  	}  	pic_Graph.Image = bmp;  	pic_Graph.Visible = true;  }  else  	pic_Graph.Visible = false;  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  	Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  	using (Graphics g = Graphics.FromImage (bmp)) {  		g.SmoothingMode = SmoothingMode.AntiAlias;  		g.CompositingQuality = CompositingQuality.HighQuality;  		g.InterpolationMode = InterpolationMode.Bicubic;  		g.Clear (Color.Transparent);  		g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  		float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  		g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  		if (tps_cabinet.HasPackage) {  			#if DEBUG  			tps_cabinet.Packages [0].TraffLeft = 600;  			tps_cabinet.Packages [1].TraffLeft = 600;  			#endif  			/// if have show first package  			float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  			if (Package1_SweepAngle > Prepaid_SweepAngle)  				Package1_SweepAngle = Prepaid_SweepAngle;  			// if package traff more prepaid show only part  			if (tps_cabinet.TraffLeft == 0) {  				Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  				g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  			}  			else if (!Properties.Settings.Default.DisablePackageDiagramm)  				g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  			//// if have second package and have space show it  			if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  				float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  					Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  				// if package traff more prepaid+package1 show only part  				if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  					Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					if (Package2_SweepAngle > (360 - Package1_SweepAngle))  						Package2_SweepAngle = 360 - Package1_SweepAngle;  					// if package traff more package1 show only part  					g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  			}  		}  	}  	if (pic_Graph.Image != null) {  		pic_Graph.Image.Dispose ();  		pic_Graph.Image = null;  	}  	pic_Graph.Image = bmp;  	pic_Graph.Visible = true;  }  else  	pic_Graph.Visible = false;  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  	Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  	using (Graphics g = Graphics.FromImage (bmp)) {  		g.SmoothingMode = SmoothingMode.AntiAlias;  		g.CompositingQuality = CompositingQuality.HighQuality;  		g.InterpolationMode = InterpolationMode.Bicubic;  		g.Clear (Color.Transparent);  		g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  		float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  		g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  		if (tps_cabinet.HasPackage) {  			#if DEBUG  			tps_cabinet.Packages [0].TraffLeft = 600;  			tps_cabinet.Packages [1].TraffLeft = 600;  			#endif  			/// if have show first package  			float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  			if (Package1_SweepAngle > Prepaid_SweepAngle)  				Package1_SweepAngle = Prepaid_SweepAngle;  			// if package traff more prepaid show only part  			if (tps_cabinet.TraffLeft == 0) {  				Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  				g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  			}  			else if (!Properties.Settings.Default.DisablePackageDiagramm)  				g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  			//// if have second package and have space show it  			if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  				float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  					Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  				// if package traff more prepaid+package1 show only part  				if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  					Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					if (Package2_SweepAngle > (360 - Package1_SweepAngle))  						Package2_SweepAngle = 360 - Package1_SweepAngle;  					// if package traff more package1 show only part  					g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  			}  		}  	}  	if (pic_Graph.Image != null) {  		pic_Graph.Image.Dispose ();  		pic_Graph.Image = null;  	}  	pic_Graph.Image = bmp;  	pic_Graph.Visible = true;  }  else  	pic_Graph.Visible = false;  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  	Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  	using (Graphics g = Graphics.FromImage (bmp)) {  		g.SmoothingMode = SmoothingMode.AntiAlias;  		g.CompositingQuality = CompositingQuality.HighQuality;  		g.InterpolationMode = InterpolationMode.Bicubic;  		g.Clear (Color.Transparent);  		g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  		float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  		g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  		if (tps_cabinet.HasPackage) {  			#if DEBUG  			tps_cabinet.Packages [0].TraffLeft = 600;  			tps_cabinet.Packages [1].TraffLeft = 600;  			#endif  			/// if have show first package  			float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  			if (Package1_SweepAngle > Prepaid_SweepAngle)  				Package1_SweepAngle = Prepaid_SweepAngle;  			// if package traff more prepaid show only part  			if (tps_cabinet.TraffLeft == 0) {  				Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  				g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  			}  			else if (!Properties.Settings.Default.DisablePackageDiagramm)  				g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  			//// if have second package and have space show it  			if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  				float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  					Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  				// if package traff more prepaid+package1 show only part  				if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  					Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					if (Package2_SweepAngle > (360 - Package1_SweepAngle))  						Package2_SweepAngle = 360 - Package1_SweepAngle;  					// if package traff more package1 show only part  					g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  			}  		}  	}  	if (pic_Graph.Image != null) {  		pic_Graph.Image.Dispose ();  		pic_Graph.Image = null;  	}  	pic_Graph.Image = bmp;  	pic_Graph.Visible = true;  }  else  	pic_Graph.Visible = false;  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  	Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  	using (Graphics g = Graphics.FromImage (bmp)) {  		g.SmoothingMode = SmoothingMode.AntiAlias;  		g.CompositingQuality = CompositingQuality.HighQuality;  		g.InterpolationMode = InterpolationMode.Bicubic;  		g.Clear (Color.Transparent);  		g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  		float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  		g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  		if (tps_cabinet.HasPackage) {  			#if DEBUG  			tps_cabinet.Packages [0].TraffLeft = 600;  			tps_cabinet.Packages [1].TraffLeft = 600;  			#endif  			/// if have show first package  			float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  			if (Package1_SweepAngle > Prepaid_SweepAngle)  				Package1_SweepAngle = Prepaid_SweepAngle;  			// if package traff more prepaid show only part  			if (tps_cabinet.TraffLeft == 0) {  				Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  				g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  			}  			else if (!Properties.Settings.Default.DisablePackageDiagramm)  				g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  			//// if have second package and have space show it  			if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  				float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  					Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  				// if package traff more prepaid+package1 show only part  				if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  					Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					if (Package2_SweepAngle > (360 - Package1_SweepAngle))  						Package2_SweepAngle = 360 - Package1_SweepAngle;  					// if package traff more package1 show only part  					g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  			}  		}  	}  	if (pic_Graph.Image != null) {  		pic_Graph.Image.Dispose ();  		pic_Graph.Image = null;  	}  	pic_Graph.Image = bmp;  	pic_Graph.Visible = true;  }  else  	pic_Graph.Visible = false;  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  	Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  	using (Graphics g = Graphics.FromImage (bmp)) {  		g.SmoothingMode = SmoothingMode.AntiAlias;  		g.CompositingQuality = CompositingQuality.HighQuality;  		g.InterpolationMode = InterpolationMode.Bicubic;  		g.Clear (Color.Transparent);  		g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  		float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  		g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  		if (tps_cabinet.HasPackage) {  			#if DEBUG  			tps_cabinet.Packages [0].TraffLeft = 600;  			tps_cabinet.Packages [1].TraffLeft = 600;  			#endif  			/// if have show first package  			float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  			if (Package1_SweepAngle > Prepaid_SweepAngle)  				Package1_SweepAngle = Prepaid_SweepAngle;  			// if package traff more prepaid show only part  			if (tps_cabinet.TraffLeft == 0) {  				Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  				g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  			}  			else if (!Properties.Settings.Default.DisablePackageDiagramm)  				g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  			//// if have second package and have space show it  			if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  				float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  					Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  				// if package traff more prepaid+package1 show only part  				if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  					Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					if (Package2_SweepAngle > (360 - Package1_SweepAngle))  						Package2_SweepAngle = 360 - Package1_SweepAngle;  					// if package traff more package1 show only part  					g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  			}  		}  	}  	if (pic_Graph.Image != null) {  		pic_Graph.Image.Dispose ();  		pic_Graph.Image = null;  	}  	pic_Graph.Image = bmp;  	pic_Graph.Visible = true;  }  else  	pic_Graph.Visible = false;  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  	Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  	using (Graphics g = Graphics.FromImage (bmp)) {  		g.SmoothingMode = SmoothingMode.AntiAlias;  		g.CompositingQuality = CompositingQuality.HighQuality;  		g.InterpolationMode = InterpolationMode.Bicubic;  		g.Clear (Color.Transparent);  		g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  		float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  		g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  		if (tps_cabinet.HasPackage) {  			#if DEBUG  			tps_cabinet.Packages [0].TraffLeft = 600;  			tps_cabinet.Packages [1].TraffLeft = 600;  			#endif  			/// if have show first package  			float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  			if (Package1_SweepAngle > Prepaid_SweepAngle)  				Package1_SweepAngle = Prepaid_SweepAngle;  			// if package traff more prepaid show only part  			if (tps_cabinet.TraffLeft == 0) {  				Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  				g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  			}  			else if (!Properties.Settings.Default.DisablePackageDiagramm)  				g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  			//// if have second package and have space show it  			if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  				float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  					Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  				// if package traff more prepaid+package1 show only part  				if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  					Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					if (Package2_SweepAngle > (360 - Package1_SweepAngle))  						Package2_SweepAngle = 360 - Package1_SweepAngle;  					// if package traff more package1 show only part  					g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  			}  		}  	}  	if (pic_Graph.Image != null) {  		pic_Graph.Image.Dispose ();  		pic_Graph.Image = null;  	}  	pic_Graph.Image = bmp;  	pic_Graph.Visible = true;  }  else  	pic_Graph.Visible = false;  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  	Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  	using (Graphics g = Graphics.FromImage (bmp)) {  		g.SmoothingMode = SmoothingMode.AntiAlias;  		g.CompositingQuality = CompositingQuality.HighQuality;  		g.InterpolationMode = InterpolationMode.Bicubic;  		g.Clear (Color.Transparent);  		g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  		float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  		g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  		if (tps_cabinet.HasPackage) {  			#if DEBUG  			tps_cabinet.Packages [0].TraffLeft = 600;  			tps_cabinet.Packages [1].TraffLeft = 600;  			#endif  			/// if have show first package  			float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  			if (Package1_SweepAngle > Prepaid_SweepAngle)  				Package1_SweepAngle = Prepaid_SweepAngle;  			// if package traff more prepaid show only part  			if (tps_cabinet.TraffLeft == 0) {  				Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  				g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  			}  			else if (!Properties.Settings.Default.DisablePackageDiagramm)  				g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  			//// if have second package and have space show it  			if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  				float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  					Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  				// if package traff more prepaid+package1 show only part  				if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  					Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					if (Package2_SweepAngle > (360 - Package1_SweepAngle))  						Package2_SweepAngle = 360 - Package1_SweepAngle;  					// if package traff more package1 show only part  					g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  			}  		}  	}  	if (pic_Graph.Image != null) {  		pic_Graph.Image.Dispose ();  		pic_Graph.Image = null;  	}  	pic_Graph.Image = bmp;  	pic_Graph.Visible = true;  }  else  	pic_Graph.Visible = false;  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  	Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  	using (Graphics g = Graphics.FromImage (bmp)) {  		g.SmoothingMode = SmoothingMode.AntiAlias;  		g.CompositingQuality = CompositingQuality.HighQuality;  		g.InterpolationMode = InterpolationMode.Bicubic;  		g.Clear (Color.Transparent);  		g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  		float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  		g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  		if (tps_cabinet.HasPackage) {  			#if DEBUG  			tps_cabinet.Packages [0].TraffLeft = 600;  			tps_cabinet.Packages [1].TraffLeft = 600;  			#endif  			/// if have show first package  			float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  			if (Package1_SweepAngle > Prepaid_SweepAngle)  				Package1_SweepAngle = Prepaid_SweepAngle;  			// if package traff more prepaid show only part  			if (tps_cabinet.TraffLeft == 0) {  				Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  				g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  			}  			else if (!Properties.Settings.Default.DisablePackageDiagramm)  				g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  			//// if have second package and have space show it  			if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  				float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  					Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  				// if package traff more prepaid+package1 show only part  				if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  					Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					if (Package2_SweepAngle > (360 - Package1_SweepAngle))  						Package2_SweepAngle = 360 - Package1_SweepAngle;  					// if package traff more package1 show only part  					g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  			}  		}  	}  	if (pic_Graph.Image != null) {  		pic_Graph.Image.Dispose ();  		pic_Graph.Image = null;  	}  	pic_Graph.Image = bmp;  	pic_Graph.Visible = true;  }  else  	pic_Graph.Visible = false;  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  	Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  	using (Graphics g = Graphics.FromImage (bmp)) {  		g.SmoothingMode = SmoothingMode.AntiAlias;  		g.CompositingQuality = CompositingQuality.HighQuality;  		g.InterpolationMode = InterpolationMode.Bicubic;  		g.Clear (Color.Transparent);  		g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  		float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  		g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  		if (tps_cabinet.HasPackage) {  			#if DEBUG  			tps_cabinet.Packages [0].TraffLeft = 600;  			tps_cabinet.Packages [1].TraffLeft = 600;  			#endif  			/// if have show first package  			float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  			if (Package1_SweepAngle > Prepaid_SweepAngle)  				Package1_SweepAngle = Prepaid_SweepAngle;  			// if package traff more prepaid show only part  			if (tps_cabinet.TraffLeft == 0) {  				Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  				g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  			}  			else if (!Properties.Settings.Default.DisablePackageDiagramm)  				g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  			//// if have second package and have space show it  			if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  				float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  					Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  				// if package traff more prepaid+package1 show only part  				if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  					Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					if (Package2_SweepAngle > (360 - Package1_SweepAngle))  						Package2_SweepAngle = 360 - Package1_SweepAngle;  					// if package traff more package1 show only part  					g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  			}  		}  	}  	if (pic_Graph.Image != null) {  		pic_Graph.Image.Dispose ();  		pic_Graph.Image = null;  	}  	pic_Graph.Image = bmp;  	pic_Graph.Visible = true;  }  else  	pic_Graph.Visible = false;  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  	Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  	using (Graphics g = Graphics.FromImage (bmp)) {  		g.SmoothingMode = SmoothingMode.AntiAlias;  		g.CompositingQuality = CompositingQuality.HighQuality;  		g.InterpolationMode = InterpolationMode.Bicubic;  		g.Clear (Color.Transparent);  		g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  		float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  		g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  		if (tps_cabinet.HasPackage) {  			#if DEBUG  			tps_cabinet.Packages [0].TraffLeft = 600;  			tps_cabinet.Packages [1].TraffLeft = 600;  			#endif  			/// if have show first package  			float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  			if (Package1_SweepAngle > Prepaid_SweepAngle)  				Package1_SweepAngle = Prepaid_SweepAngle;  			// if package traff more prepaid show only part  			if (tps_cabinet.TraffLeft == 0) {  				Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  				g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  			}  			else if (!Properties.Settings.Default.DisablePackageDiagramm)  				g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  			//// if have second package and have space show it  			if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  				float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  					Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  				// if package traff more prepaid+package1 show only part  				if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  					Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					if (Package2_SweepAngle > (360 - Package1_SweepAngle))  						Package2_SweepAngle = 360 - Package1_SweepAngle;  					// if package traff more package1 show only part  					g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  			}  		}  	}  	if (pic_Graph.Image != null) {  		pic_Graph.Image.Dispose ();  		pic_Graph.Image = null;  	}  	pic_Graph.Image = bmp;  	pic_Graph.Visible = true;  }  else  	pic_Graph.Visible = false;  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  	Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  	using (Graphics g = Graphics.FromImage (bmp)) {  		g.SmoothingMode = SmoothingMode.AntiAlias;  		g.CompositingQuality = CompositingQuality.HighQuality;  		g.InterpolationMode = InterpolationMode.Bicubic;  		g.Clear (Color.Transparent);  		g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  		float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  		g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  		if (tps_cabinet.HasPackage) {  			#if DEBUG  			tps_cabinet.Packages [0].TraffLeft = 600;  			tps_cabinet.Packages [1].TraffLeft = 600;  			#endif  			/// if have show first package  			float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  			if (Package1_SweepAngle > Prepaid_SweepAngle)  				Package1_SweepAngle = Prepaid_SweepAngle;  			// if package traff more prepaid show only part  			if (tps_cabinet.TraffLeft == 0) {  				Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  				g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  			}  			else if (!Properties.Settings.Default.DisablePackageDiagramm)  				g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  			//// if have second package and have space show it  			if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  				float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  					Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  				// if package traff more prepaid+package1 show only part  				if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  					Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					if (Package2_SweepAngle > (360 - Package1_SweepAngle))  						Package2_SweepAngle = 360 - Package1_SweepAngle;  					// if package traff more package1 show only part  					g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  			}  		}  	}  	if (pic_Graph.Image != null) {  		pic_Graph.Image.Dispose ();  		pic_Graph.Image = null;  	}  	pic_Graph.Image = bmp;  	pic_Graph.Visible = true;  }  else  	pic_Graph.Visible = false;  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  	Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  	using (Graphics g = Graphics.FromImage (bmp)) {  		g.SmoothingMode = SmoothingMode.AntiAlias;  		g.CompositingQuality = CompositingQuality.HighQuality;  		g.InterpolationMode = InterpolationMode.Bicubic;  		g.Clear (Color.Transparent);  		g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  		float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  		g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  		if (tps_cabinet.HasPackage) {  			#if DEBUG  			tps_cabinet.Packages [0].TraffLeft = 600;  			tps_cabinet.Packages [1].TraffLeft = 600;  			#endif  			/// if have show first package  			float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  			if (Package1_SweepAngle > Prepaid_SweepAngle)  				Package1_SweepAngle = Prepaid_SweepAngle;  			// if package traff more prepaid show only part  			if (tps_cabinet.TraffLeft == 0) {  				Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  				g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  			}  			else if (!Properties.Settings.Default.DisablePackageDiagramm)  				g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  			//// if have second package and have space show it  			if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  				float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  					Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  				// if package traff more prepaid+package1 show only part  				if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  					Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					if (Package2_SweepAngle > (360 - Package1_SweepAngle))  						Package2_SweepAngle = 360 - Package1_SweepAngle;  					// if package traff more package1 show only part  					g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  			}  		}  	}  	if (pic_Graph.Image != null) {  		pic_Graph.Image.Dispose ();  		pic_Graph.Image = null;  	}  	pic_Graph.Image = bmp;  	pic_Graph.Visible = true;  }  else  	pic_Graph.Visible = false;  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  	Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  	using (Graphics g = Graphics.FromImage (bmp)) {  		g.SmoothingMode = SmoothingMode.AntiAlias;  		g.CompositingQuality = CompositingQuality.HighQuality;  		g.InterpolationMode = InterpolationMode.Bicubic;  		g.Clear (Color.Transparent);  		g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  		float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  		g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  		if (tps_cabinet.HasPackage) {  			#if DEBUG  			tps_cabinet.Packages [0].TraffLeft = 600;  			tps_cabinet.Packages [1].TraffLeft = 600;  			#endif  			/// if have show first package  			float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  			if (Package1_SweepAngle > Prepaid_SweepAngle)  				Package1_SweepAngle = Prepaid_SweepAngle;  			// if package traff more prepaid show only part  			if (tps_cabinet.TraffLeft == 0) {  				Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  				g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  			}  			else if (!Properties.Settings.Default.DisablePackageDiagramm)  				g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  			//// if have second package and have space show it  			if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  				float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  					Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  				// if package traff more prepaid+package1 show only part  				if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  					Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					if (Package2_SweepAngle > (360 - Package1_SweepAngle))  						Package2_SweepAngle = 360 - Package1_SweepAngle;  					// if package traff more package1 show only part  					g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  			}  		}  	}  	if (pic_Graph.Image != null) {  		pic_Graph.Image.Dispose ();  		pic_Graph.Image = null;  	}  	pic_Graph.Image = bmp;  	pic_Graph.Visible = true;  }  else  	pic_Graph.Visible = false;  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  	Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  	using (Graphics g = Graphics.FromImage (bmp)) {  		g.SmoothingMode = SmoothingMode.AntiAlias;  		g.CompositingQuality = CompositingQuality.HighQuality;  		g.InterpolationMode = InterpolationMode.Bicubic;  		g.Clear (Color.Transparent);  		g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  		float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  		g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  		if (tps_cabinet.HasPackage) {  			#if DEBUG  			tps_cabinet.Packages [0].TraffLeft = 600;  			tps_cabinet.Packages [1].TraffLeft = 600;  			#endif  			/// if have show first package  			float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  			if (Package1_SweepAngle > Prepaid_SweepAngle)  				Package1_SweepAngle = Prepaid_SweepAngle;  			// if package traff more prepaid show only part  			if (tps_cabinet.TraffLeft == 0) {  				Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  				g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  			}  			else if (!Properties.Settings.Default.DisablePackageDiagramm)  				g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  			//// if have second package and have space show it  			if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  				float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  					Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  				// if package traff more prepaid+package1 show only part  				if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  					Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					if (Package2_SweepAngle > (360 - Package1_SweepAngle))  						Package2_SweepAngle = 360 - Package1_SweepAngle;  					// if package traff more package1 show only part  					g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  			}  		}  	}  	if (pic_Graph.Image != null) {  		pic_Graph.Image.Dispose ();  		pic_Graph.Image = null;  	}  	pic_Graph.Image = bmp;  	pic_Graph.Visible = true;  }  else  	pic_Graph.Visible = false;  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  	Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  	using (Graphics g = Graphics.FromImage (bmp)) {  		g.SmoothingMode = SmoothingMode.AntiAlias;  		g.CompositingQuality = CompositingQuality.HighQuality;  		g.InterpolationMode = InterpolationMode.Bicubic;  		g.Clear (Color.Transparent);  		g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  		float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  		g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  		if (tps_cabinet.HasPackage) {  			#if DEBUG  			tps_cabinet.Packages [0].TraffLeft = 600;  			tps_cabinet.Packages [1].TraffLeft = 600;  			#endif  			/// if have show first package  			float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  			if (Package1_SweepAngle > Prepaid_SweepAngle)  				Package1_SweepAngle = Prepaid_SweepAngle;  			// if package traff more prepaid show only part  			if (tps_cabinet.TraffLeft == 0) {  				Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  				g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  			}  			else if (!Properties.Settings.Default.DisablePackageDiagramm)  				g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  			//// if have second package and have space show it  			if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  				float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  					Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  				// if package traff more prepaid+package1 show only part  				if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  					Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					if (Package2_SweepAngle > (360 - Package1_SweepAngle))  						Package2_SweepAngle = 360 - Package1_SweepAngle;  					// if package traff more package1 show only part  					g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  			}  		}  	}  	if (pic_Graph.Image != null) {  		pic_Graph.Image.Dispose ();  		pic_Graph.Image = null;  	}  	pic_Graph.Image = bmp;  	pic_Graph.Visible = true;  }  else  	pic_Graph.Visible = false;  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if ((tps_cabinet.TraffUsed + tps_cabinet.TraffLeft) != 0) {  	Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  	using (Graphics g = Graphics.FromImage (bmp)) {  		g.SmoothingMode = SmoothingMode.AntiAlias;  		g.CompositingQuality = CompositingQuality.HighQuality;  		g.InterpolationMode = InterpolationMode.Bicubic;  		g.Clear (Color.Transparent);  		g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  		float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  		g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  		if (tps_cabinet.HasPackage) {  			#if DEBUG  			tps_cabinet.Packages [0].TraffLeft = 600;  			tps_cabinet.Packages [1].TraffLeft = 600;  			#endif  			/// if have show first package  			float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  			if (Package1_SweepAngle > Prepaid_SweepAngle)  				Package1_SweepAngle = Prepaid_SweepAngle;  			// if package traff more prepaid show only part  			if (tps_cabinet.TraffLeft == 0) {  				Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  				g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  			}  			else if (!Properties.Settings.Default.DisablePackageDiagramm)  				g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  			//// if have second package and have space show it  			if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  				float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  				if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  					Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  				// if package traff more prepaid+package1 show only part  				if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  					Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  					if (Package2_SweepAngle > (360 - Package1_SweepAngle))  						Package2_SweepAngle = 360 - Package1_SweepAngle;  					// if package traff more package1 show only part  					g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  				}  				else if (!Properties.Settings.Default.DisablePackageDiagramm)  					g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  			}  		}  	}  	if (pic_Graph.Image != null) {  		pic_Graph.Image.Dispose ();  		pic_Graph.Image = null;  	}  	pic_Graph.Image = bmp;  	pic_Graph.Visible = true;  }  else  	pic_Graph.Visible = false;  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (bmp)) {  	g.SmoothingMode = SmoothingMode.AntiAlias;  	g.CompositingQuality = CompositingQuality.HighQuality;  	g.InterpolationMode = InterpolationMode.Bicubic;  	g.Clear (Color.Transparent);  	g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  	float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  	g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  	if (tps_cabinet.HasPackage) {  		#if DEBUG  		tps_cabinet.Packages [0].TraffLeft = 600;  		tps_cabinet.Packages [1].TraffLeft = 600;  		#endif  		/// if have show first package  		float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  		if (Package1_SweepAngle > Prepaid_SweepAngle)  			Package1_SweepAngle = Prepaid_SweepAngle;  		// if package traff more prepaid show only part  		if (tps_cabinet.TraffLeft == 0) {  			Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  			g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  		}  		else if (!Properties.Settings.Default.DisablePackageDiagramm)  			g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  		//// if have second package and have space show it  		if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  			float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  			if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  				Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  			// if package traff more prepaid+package1 show only part  			if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  				Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  				if (Package2_SweepAngle > (360 - Package1_SweepAngle))  					Package2_SweepAngle = 360 - Package1_SweepAngle;  				// if package traff more package1 show only part  				g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  			}  			else if (!Properties.Settings.Default.DisablePackageDiagramm)  				g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  		}  	}  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (bmp)) {  	g.SmoothingMode = SmoothingMode.AntiAlias;  	g.CompositingQuality = CompositingQuality.HighQuality;  	g.InterpolationMode = InterpolationMode.Bicubic;  	g.Clear (Color.Transparent);  	g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  	float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  	g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  	if (tps_cabinet.HasPackage) {  		#if DEBUG  		tps_cabinet.Packages [0].TraffLeft = 600;  		tps_cabinet.Packages [1].TraffLeft = 600;  		#endif  		/// if have show first package  		float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  		if (Package1_SweepAngle > Prepaid_SweepAngle)  			Package1_SweepAngle = Prepaid_SweepAngle;  		// if package traff more prepaid show only part  		if (tps_cabinet.TraffLeft == 0) {  			Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  			g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  		}  		else if (!Properties.Settings.Default.DisablePackageDiagramm)  			g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  		//// if have second package and have space show it  		if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  			float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  			if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  				Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  			// if package traff more prepaid+package1 show only part  			if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  				Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  				if (Package2_SweepAngle > (360 - Package1_SweepAngle))  					Package2_SweepAngle = 360 - Package1_SweepAngle;  				// if package traff more package1 show only part  				g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  			}  			else if (!Properties.Settings.Default.DisablePackageDiagramm)  				g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  		}  	}  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (bmp)) {  	g.SmoothingMode = SmoothingMode.AntiAlias;  	g.CompositingQuality = CompositingQuality.HighQuality;  	g.InterpolationMode = InterpolationMode.Bicubic;  	g.Clear (Color.Transparent);  	g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  	float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  	g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  	if (tps_cabinet.HasPackage) {  		#if DEBUG  		tps_cabinet.Packages [0].TraffLeft = 600;  		tps_cabinet.Packages [1].TraffLeft = 600;  		#endif  		/// if have show first package  		float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  		if (Package1_SweepAngle > Prepaid_SweepAngle)  			Package1_SweepAngle = Prepaid_SweepAngle;  		// if package traff more prepaid show only part  		if (tps_cabinet.TraffLeft == 0) {  			Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  			g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  		}  		else if (!Properties.Settings.Default.DisablePackageDiagramm)  			g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  		//// if have second package and have space show it  		if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  			float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  			if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  				Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  			// if package traff more prepaid+package1 show only part  			if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  				Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  				if (Package2_SweepAngle > (360 - Package1_SweepAngle))  					Package2_SweepAngle = 360 - Package1_SweepAngle;  				// if package traff more package1 show only part  				g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  			}  			else if (!Properties.Settings.Default.DisablePackageDiagramm)  				g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  		}  	}  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (bmp)) {  	g.SmoothingMode = SmoothingMode.AntiAlias;  	g.CompositingQuality = CompositingQuality.HighQuality;  	g.InterpolationMode = InterpolationMode.Bicubic;  	g.Clear (Color.Transparent);  	g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  	float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  	g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  	if (tps_cabinet.HasPackage) {  		#if DEBUG  		tps_cabinet.Packages [0].TraffLeft = 600;  		tps_cabinet.Packages [1].TraffLeft = 600;  		#endif  		/// if have show first package  		float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  		if (Package1_SweepAngle > Prepaid_SweepAngle)  			Package1_SweepAngle = Prepaid_SweepAngle;  		// if package traff more prepaid show only part  		if (tps_cabinet.TraffLeft == 0) {  			Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  			g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  		}  		else if (!Properties.Settings.Default.DisablePackageDiagramm)  			g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  		//// if have second package and have space show it  		if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  			float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  			if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  				Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  			// if package traff more prepaid+package1 show only part  			if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  				Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  				if (Package2_SweepAngle > (360 - Package1_SweepAngle))  					Package2_SweepAngle = 360 - Package1_SweepAngle;  				// if package traff more package1 show only part  				g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  			}  			else if (!Properties.Settings.Default.DisablePackageDiagramm)  				g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  		}  	}  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (bmp)) {  	g.SmoothingMode = SmoothingMode.AntiAlias;  	g.CompositingQuality = CompositingQuality.HighQuality;  	g.InterpolationMode = InterpolationMode.Bicubic;  	g.Clear (Color.Transparent);  	g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  	float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  	g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  	if (tps_cabinet.HasPackage) {  		#if DEBUG  		tps_cabinet.Packages [0].TraffLeft = 600;  		tps_cabinet.Packages [1].TraffLeft = 600;  		#endif  		/// if have show first package  		float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  		if (Package1_SweepAngle > Prepaid_SweepAngle)  			Package1_SweepAngle = Prepaid_SweepAngle;  		// if package traff more prepaid show only part  		if (tps_cabinet.TraffLeft == 0) {  			Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  			g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  		}  		else if (!Properties.Settings.Default.DisablePackageDiagramm)  			g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  		//// if have second package and have space show it  		if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  			float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  			if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  				Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  			// if package traff more prepaid+package1 show only part  			if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  				Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  				if (Package2_SweepAngle > (360 - Package1_SweepAngle))  					Package2_SweepAngle = 360 - Package1_SweepAngle;  				// if package traff more package1 show only part  				g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  			}  			else if (!Properties.Settings.Default.DisablePackageDiagramm)  				g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  		}  	}  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (bmp)) {  	g.SmoothingMode = SmoothingMode.AntiAlias;  	g.CompositingQuality = CompositingQuality.HighQuality;  	g.InterpolationMode = InterpolationMode.Bicubic;  	g.Clear (Color.Transparent);  	g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  	float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  	g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  	if (tps_cabinet.HasPackage) {  		#if DEBUG  		tps_cabinet.Packages [0].TraffLeft = 600;  		tps_cabinet.Packages [1].TraffLeft = 600;  		#endif  		/// if have show first package  		float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  		if (Package1_SweepAngle > Prepaid_SweepAngle)  			Package1_SweepAngle = Prepaid_SweepAngle;  		// if package traff more prepaid show only part  		if (tps_cabinet.TraffLeft == 0) {  			Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  			g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  		}  		else if (!Properties.Settings.Default.DisablePackageDiagramm)  			g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  		//// if have second package and have space show it  		if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  			float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  			if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  				Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  			// if package traff more prepaid+package1 show only part  			if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  				Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  				if (Package2_SweepAngle > (360 - Package1_SweepAngle))  					Package2_SweepAngle = 360 - Package1_SweepAngle;  				// if package traff more package1 show only part  				g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  			}  			else if (!Properties.Settings.Default.DisablePackageDiagramm)  				g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  		}  	}  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (bmp)) {  	g.SmoothingMode = SmoothingMode.AntiAlias;  	g.CompositingQuality = CompositingQuality.HighQuality;  	g.InterpolationMode = InterpolationMode.Bicubic;  	g.Clear (Color.Transparent);  	g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  	float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  	g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  	if (tps_cabinet.HasPackage) {  		#if DEBUG  		tps_cabinet.Packages [0].TraffLeft = 600;  		tps_cabinet.Packages [1].TraffLeft = 600;  		#endif  		/// if have show first package  		float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  		if (Package1_SweepAngle > Prepaid_SweepAngle)  			Package1_SweepAngle = Prepaid_SweepAngle;  		// if package traff more prepaid show only part  		if (tps_cabinet.TraffLeft == 0) {  			Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  			g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  		}  		else if (!Properties.Settings.Default.DisablePackageDiagramm)  			g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  		//// if have second package and have space show it  		if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  			float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  			if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  				Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  			// if package traff more prepaid+package1 show only part  			if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  				Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  				if (Package2_SweepAngle > (360 - Package1_SweepAngle))  					Package2_SweepAngle = 360 - Package1_SweepAngle;  				// if package traff more package1 show only part  				g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  			}  			else if (!Properties.Settings.Default.DisablePackageDiagramm)  				g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  		}  	}  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (bmp)) {  	g.SmoothingMode = SmoothingMode.AntiAlias;  	g.CompositingQuality = CompositingQuality.HighQuality;  	g.InterpolationMode = InterpolationMode.Bicubic;  	g.Clear (Color.Transparent);  	g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  	float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  	g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  	if (tps_cabinet.HasPackage) {  		#if DEBUG  		tps_cabinet.Packages [0].TraffLeft = 600;  		tps_cabinet.Packages [1].TraffLeft = 600;  		#endif  		/// if have show first package  		float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  		if (Package1_SweepAngle > Prepaid_SweepAngle)  			Package1_SweepAngle = Prepaid_SweepAngle;  		// if package traff more prepaid show only part  		if (tps_cabinet.TraffLeft == 0) {  			Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  			g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  		}  		else if (!Properties.Settings.Default.DisablePackageDiagramm)  			g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  		//// if have second package and have space show it  		if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  			float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  			if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  				Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  			// if package traff more prepaid+package1 show only part  			if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  				Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  				if (Package2_SweepAngle > (360 - Package1_SweepAngle))  					Package2_SweepAngle = 360 - Package1_SweepAngle;  				// if package traff more package1 show only part  				g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  			}  			else if (!Properties.Settings.Default.DisablePackageDiagramm)  				g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  		}  	}  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (bmp)) {  	g.SmoothingMode = SmoothingMode.AntiAlias;  	g.CompositingQuality = CompositingQuality.HighQuality;  	g.InterpolationMode = InterpolationMode.Bicubic;  	g.Clear (Color.Transparent);  	g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  	float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  	g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  	if (tps_cabinet.HasPackage) {  		#if DEBUG  		tps_cabinet.Packages [0].TraffLeft = 600;  		tps_cabinet.Packages [1].TraffLeft = 600;  		#endif  		/// if have show first package  		float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  		if (Package1_SweepAngle > Prepaid_SweepAngle)  			Package1_SweepAngle = Prepaid_SweepAngle;  		// if package traff more prepaid show only part  		if (tps_cabinet.TraffLeft == 0) {  			Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  			g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  		}  		else if (!Properties.Settings.Default.DisablePackageDiagramm)  			g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  		//// if have second package and have space show it  		if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  			float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  			if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  				Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  			// if package traff more prepaid+package1 show only part  			if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  				Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  				if (Package2_SweepAngle > (360 - Package1_SweepAngle))  					Package2_SweepAngle = 360 - Package1_SweepAngle;  				// if package traff more package1 show only part  				g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  			}  			else if (!Properties.Settings.Default.DisablePackageDiagramm)  				g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  		}  	}  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (bmp)) {  	g.SmoothingMode = SmoothingMode.AntiAlias;  	g.CompositingQuality = CompositingQuality.HighQuality;  	g.InterpolationMode = InterpolationMode.Bicubic;  	g.Clear (Color.Transparent);  	g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  	float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  	g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  	if (tps_cabinet.HasPackage) {  		#if DEBUG  		tps_cabinet.Packages [0].TraffLeft = 600;  		tps_cabinet.Packages [1].TraffLeft = 600;  		#endif  		/// if have show first package  		float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  		if (Package1_SweepAngle > Prepaid_SweepAngle)  			Package1_SweepAngle = Prepaid_SweepAngle;  		// if package traff more prepaid show only part  		if (tps_cabinet.TraffLeft == 0) {  			Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  			g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  		}  		else if (!Properties.Settings.Default.DisablePackageDiagramm)  			g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  		//// if have second package and have space show it  		if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  			float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  			if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  				Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  			// if package traff more prepaid+package1 show only part  			if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  				Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  				if (Package2_SweepAngle > (360 - Package1_SweepAngle))  					Package2_SweepAngle = 360 - Package1_SweepAngle;  				// if package traff more package1 show only part  				g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  			}  			else if (!Properties.Settings.Default.DisablePackageDiagramm)  				g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  		}  	}  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (bmp)) {  	g.SmoothingMode = SmoothingMode.AntiAlias;  	g.CompositingQuality = CompositingQuality.HighQuality;  	g.InterpolationMode = InterpolationMode.Bicubic;  	g.Clear (Color.Transparent);  	g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  	float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  	g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  	if (tps_cabinet.HasPackage) {  		#if DEBUG  		tps_cabinet.Packages [0].TraffLeft = 600;  		tps_cabinet.Packages [1].TraffLeft = 600;  		#endif  		/// if have show first package  		float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  		if (Package1_SweepAngle > Prepaid_SweepAngle)  			Package1_SweepAngle = Prepaid_SweepAngle;  		// if package traff more prepaid show only part  		if (tps_cabinet.TraffLeft == 0) {  			Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  			g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  		}  		else if (!Properties.Settings.Default.DisablePackageDiagramm)  			g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  		//// if have second package and have space show it  		if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  			float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  			if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  				Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  			// if package traff more prepaid+package1 show only part  			if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  				Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  				if (Package2_SweepAngle > (360 - Package1_SweepAngle))  					Package2_SweepAngle = 360 - Package1_SweepAngle;  				// if package traff more package1 show only part  				g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  			}  			else if (!Properties.Settings.Default.DisablePackageDiagramm)  				g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  		}  	}  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (bmp)) {  	g.SmoothingMode = SmoothingMode.AntiAlias;  	g.CompositingQuality = CompositingQuality.HighQuality;  	g.InterpolationMode = InterpolationMode.Bicubic;  	g.Clear (Color.Transparent);  	g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  	float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  	g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  	if (tps_cabinet.HasPackage) {  		#if DEBUG  		tps_cabinet.Packages [0].TraffLeft = 600;  		tps_cabinet.Packages [1].TraffLeft = 600;  		#endif  		/// if have show first package  		float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  		if (Package1_SweepAngle > Prepaid_SweepAngle)  			Package1_SweepAngle = Prepaid_SweepAngle;  		// if package traff more prepaid show only part  		if (tps_cabinet.TraffLeft == 0) {  			Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  			g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  		}  		else if (!Properties.Settings.Default.DisablePackageDiagramm)  			g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  		//// if have second package and have space show it  		if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  			float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  			if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  				Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  			// if package traff more prepaid+package1 show only part  			if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  				Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  				if (Package2_SweepAngle > (360 - Package1_SweepAngle))  					Package2_SweepAngle = 360 - Package1_SweepAngle;  				// if package traff more package1 show only part  				g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  			}  			else if (!Properties.Settings.Default.DisablePackageDiagramm)  				g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  		}  	}  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (bmp)) {  	g.SmoothingMode = SmoothingMode.AntiAlias;  	g.CompositingQuality = CompositingQuality.HighQuality;  	g.InterpolationMode = InterpolationMode.Bicubic;  	g.Clear (Color.Transparent);  	g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  	float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  	g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  	if (tps_cabinet.HasPackage) {  		#if DEBUG  		tps_cabinet.Packages [0].TraffLeft = 600;  		tps_cabinet.Packages [1].TraffLeft = 600;  		#endif  		/// if have show first package  		float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  		if (Package1_SweepAngle > Prepaid_SweepAngle)  			Package1_SweepAngle = Prepaid_SweepAngle;  		// if package traff more prepaid show only part  		if (tps_cabinet.TraffLeft == 0) {  			Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  			g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  		}  		else if (!Properties.Settings.Default.DisablePackageDiagramm)  			g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  		//// if have second package and have space show it  		if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  			float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  			if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  				Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  			// if package traff more prepaid+package1 show only part  			if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  				Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  				if (Package2_SweepAngle > (360 - Package1_SweepAngle))  					Package2_SweepAngle = 360 - Package1_SweepAngle;  				// if package traff more package1 show only part  				g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  			}  			else if (!Properties.Settings.Default.DisablePackageDiagramm)  				g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  		}  	}  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (bmp)) {  	g.SmoothingMode = SmoothingMode.AntiAlias;  	g.CompositingQuality = CompositingQuality.HighQuality;  	g.InterpolationMode = InterpolationMode.Bicubic;  	g.Clear (Color.Transparent);  	g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  	float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  	g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  	if (tps_cabinet.HasPackage) {  		#if DEBUG  		tps_cabinet.Packages [0].TraffLeft = 600;  		tps_cabinet.Packages [1].TraffLeft = 600;  		#endif  		/// if have show first package  		float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  		if (Package1_SweepAngle > Prepaid_SweepAngle)  			Package1_SweepAngle = Prepaid_SweepAngle;  		// if package traff more prepaid show only part  		if (tps_cabinet.TraffLeft == 0) {  			Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  			g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  		}  		else if (!Properties.Settings.Default.DisablePackageDiagramm)  			g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  		//// if have second package and have space show it  		if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  			float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  			if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  				Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  			// if package traff more prepaid+package1 show only part  			if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  				Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  				if (Package2_SweepAngle > (360 - Package1_SweepAngle))  					Package2_SweepAngle = 360 - Package1_SweepAngle;  				// if package traff more package1 show only part  				g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  			}  			else if (!Properties.Settings.Default.DisablePackageDiagramm)  				g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  		}  	}  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (bmp)) {  	g.SmoothingMode = SmoothingMode.AntiAlias;  	g.CompositingQuality = CompositingQuality.HighQuality;  	g.InterpolationMode = InterpolationMode.Bicubic;  	g.Clear (Color.Transparent);  	g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  	float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  	g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  	if (tps_cabinet.HasPackage) {  		#if DEBUG  		tps_cabinet.Packages [0].TraffLeft = 600;  		tps_cabinet.Packages [1].TraffLeft = 600;  		#endif  		/// if have show first package  		float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  		if (Package1_SweepAngle > Prepaid_SweepAngle)  			Package1_SweepAngle = Prepaid_SweepAngle;  		// if package traff more prepaid show only part  		if (tps_cabinet.TraffLeft == 0) {  			Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  			g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  		}  		else if (!Properties.Settings.Default.DisablePackageDiagramm)  			g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  		//// if have second package and have space show it  		if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  			float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  			if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  				Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  			// if package traff more prepaid+package1 show only part  			if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  				Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  				if (Package2_SweepAngle > (360 - Package1_SweepAngle))  					Package2_SweepAngle = 360 - Package1_SweepAngle;  				// if package traff more package1 show only part  				g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  			}  			else if (!Properties.Settings.Default.DisablePackageDiagramm)  				g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  		}  	}  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (bmp)) {  	g.SmoothingMode = SmoothingMode.AntiAlias;  	g.CompositingQuality = CompositingQuality.HighQuality;  	g.InterpolationMode = InterpolationMode.Bicubic;  	g.Clear (Color.Transparent);  	g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  	float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  	g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  	if (tps_cabinet.HasPackage) {  		#if DEBUG  		tps_cabinet.Packages [0].TraffLeft = 600;  		tps_cabinet.Packages [1].TraffLeft = 600;  		#endif  		/// if have show first package  		float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  		if (Package1_SweepAngle > Prepaid_SweepAngle)  			Package1_SweepAngle = Prepaid_SweepAngle;  		// if package traff more prepaid show only part  		if (tps_cabinet.TraffLeft == 0) {  			Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  			g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  		}  		else if (!Properties.Settings.Default.DisablePackageDiagramm)  			g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  		//// if have second package and have space show it  		if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  			float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  			if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  				Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  			// if package traff more prepaid+package1 show only part  			if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  				Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  				if (Package2_SweepAngle > (360 - Package1_SweepAngle))  					Package2_SweepAngle = 360 - Package1_SweepAngle;  				// if package traff more package1 show only part  				g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  			}  			else if (!Properties.Settings.Default.DisablePackageDiagramm)  				g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  		}  	}  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (bmp)) {  	g.SmoothingMode = SmoothingMode.AntiAlias;  	g.CompositingQuality = CompositingQuality.HighQuality;  	g.InterpolationMode = InterpolationMode.Bicubic;  	g.Clear (Color.Transparent);  	g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  	float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  	g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  	if (tps_cabinet.HasPackage) {  		#if DEBUG  		tps_cabinet.Packages [0].TraffLeft = 600;  		tps_cabinet.Packages [1].TraffLeft = 600;  		#endif  		/// if have show first package  		float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  		if (Package1_SweepAngle > Prepaid_SweepAngle)  			Package1_SweepAngle = Prepaid_SweepAngle;  		// if package traff more prepaid show only part  		if (tps_cabinet.TraffLeft == 0) {  			Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  			g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  		}  		else if (!Properties.Settings.Default.DisablePackageDiagramm)  			g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  		//// if have second package and have space show it  		if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  			float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  			if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  				Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  			// if package traff more prepaid+package1 show only part  			if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  				Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  				if (Package2_SweepAngle > (360 - Package1_SweepAngle))  					Package2_SweepAngle = 360 - Package1_SweepAngle;  				// if package traff more package1 show only part  				g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  			}  			else if (!Properties.Settings.Default.DisablePackageDiagramm)  				g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  		}  	}  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (bmp)) {  	g.SmoothingMode = SmoothingMode.AntiAlias;  	g.CompositingQuality = CompositingQuality.HighQuality;  	g.InterpolationMode = InterpolationMode.Bicubic;  	g.Clear (Color.Transparent);  	g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  	float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  	g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  	if (tps_cabinet.HasPackage) {  		#if DEBUG  		tps_cabinet.Packages [0].TraffLeft = 600;  		tps_cabinet.Packages [1].TraffLeft = 600;  		#endif  		/// if have show first package  		float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  		if (Package1_SweepAngle > Prepaid_SweepAngle)  			Package1_SweepAngle = Prepaid_SweepAngle;  		// if package traff more prepaid show only part  		if (tps_cabinet.TraffLeft == 0) {  			Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  			g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  		}  		else if (!Properties.Settings.Default.DisablePackageDiagramm)  			g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  		//// if have second package and have space show it  		if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  			float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  			if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  				Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  			// if package traff more prepaid+package1 show only part  			if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  				Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  				if (Package2_SweepAngle > (360 - Package1_SweepAngle))  					Package2_SweepAngle = 360 - Package1_SweepAngle;  				// if package traff more package1 show only part  				g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  			}  			else if (!Properties.Settings.Default.DisablePackageDiagramm)  				g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  		}  	}  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (bmp)) {  	g.SmoothingMode = SmoothingMode.AntiAlias;  	g.CompositingQuality = CompositingQuality.HighQuality;  	g.InterpolationMode = InterpolationMode.Bicubic;  	g.Clear (Color.Transparent);  	g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  	float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  	g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  	if (tps_cabinet.HasPackage) {  		#if DEBUG  		tps_cabinet.Packages [0].TraffLeft = 600;  		tps_cabinet.Packages [1].TraffLeft = 600;  		#endif  		/// if have show first package  		float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  		if (Package1_SweepAngle > Prepaid_SweepAngle)  			Package1_SweepAngle = Prepaid_SweepAngle;  		// if package traff more prepaid show only part  		if (tps_cabinet.TraffLeft == 0) {  			Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  			g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  		}  		else if (!Properties.Settings.Default.DisablePackageDiagramm)  			g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  		//// if have second package and have space show it  		if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  			float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  			if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  				Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  			// if package traff more prepaid+package1 show only part  			if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  				Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  				if (Package2_SweepAngle > (360 - Package1_SweepAngle))  					Package2_SweepAngle = 360 - Package1_SweepAngle;  				// if package traff more package1 show only part  				g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  			}  			else if (!Properties.Settings.Default.DisablePackageDiagramm)  				g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  		}  	}  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (bmp)) {  	g.SmoothingMode = SmoothingMode.AntiAlias;  	g.CompositingQuality = CompositingQuality.HighQuality;  	g.InterpolationMode = InterpolationMode.Bicubic;  	g.Clear (Color.Transparent);  	g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  	float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  	g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  	if (tps_cabinet.HasPackage) {  		#if DEBUG  		tps_cabinet.Packages [0].TraffLeft = 600;  		tps_cabinet.Packages [1].TraffLeft = 600;  		#endif  		/// if have show first package  		float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  		if (Package1_SweepAngle > Prepaid_SweepAngle)  			Package1_SweepAngle = Prepaid_SweepAngle;  		// if package traff more prepaid show only part  		if (tps_cabinet.TraffLeft == 0) {  			Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  			g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  		}  		else if (!Properties.Settings.Default.DisablePackageDiagramm)  			g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  		//// if have second package and have space show it  		if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  			float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  			if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  				Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  			// if package traff more prepaid+package1 show only part  			if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  				Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  				if (Package2_SweepAngle > (360 - Package1_SweepAngle))  					Package2_SweepAngle = 360 - Package1_SweepAngle;  				// if package traff more package1 show only part  				g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  			}  			else if (!Properties.Settings.Default.DisablePackageDiagramm)  				g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  		}  	}  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (bmp)) {  	g.SmoothingMode = SmoothingMode.AntiAlias;  	g.CompositingQuality = CompositingQuality.HighQuality;  	g.InterpolationMode = InterpolationMode.Bicubic;  	g.Clear (Color.Transparent);  	g.FillEllipse (Brushes.LightBlue' 0' 0' bmp.Width - 1' bmp.Height - 1);  	float Prepaid_SweepAngle = tps_cabinet.TraffUsed * 360 / tps_cabinet.TraffAll;  	g.FillPie (Brushes.Red' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' Prepaid_SweepAngle);  	if (tps_cabinet.HasPackage) {  		#if DEBUG  		tps_cabinet.Packages [0].TraffLeft = 600;  		tps_cabinet.Packages [1].TraffLeft = 600;  		#endif  		/// if have show first package  		float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  		if (Package1_SweepAngle > Prepaid_SweepAngle)  			Package1_SweepAngle = Prepaid_SweepAngle;  		// if package traff more prepaid show only part  		if (tps_cabinet.TraffLeft == 0) {  			Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  			g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  		}  		else if (!Properties.Settings.Default.DisablePackageDiagramm)  			g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  		//// if have second package and have space show it  		if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  			float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  			if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  				Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  			// if package traff more prepaid+package1 show only part  			if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  				Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  				if (Package2_SweepAngle > (360 - Package1_SweepAngle))  					Package2_SweepAngle = 360 - Package1_SweepAngle;  				// if package traff more package1 show only part  				g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  			}  			else if (!Properties.Settings.Default.DisablePackageDiagramm)  				g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  		}  	}  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.HasPackage) {  	#if DEBUG  	tps_cabinet.Packages [0].TraffLeft = 600;  	tps_cabinet.Packages [1].TraffLeft = 600;  	#endif  	/// if have show first package  	float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  	if (Package1_SweepAngle > Prepaid_SweepAngle)  		Package1_SweepAngle = Prepaid_SweepAngle;  	// if package traff more prepaid show only part  	if (tps_cabinet.TraffLeft == 0) {  		Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  		g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  	}  	else if (!Properties.Settings.Default.DisablePackageDiagramm)  		g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  	//// if have second package and have space show it  	if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  		float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  		if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  			Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  		// if package traff more prepaid+package1 show only part  		if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  			Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  			if (Package2_SweepAngle > (360 - Package1_SweepAngle))  				Package2_SweepAngle = 360 - Package1_SweepAngle;  			// if package traff more package1 show only part  			g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  		}  		else if (!Properties.Settings.Default.DisablePackageDiagramm)  			g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  	}  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.HasPackage) {  	#if DEBUG  	tps_cabinet.Packages [0].TraffLeft = 600;  	tps_cabinet.Packages [1].TraffLeft = 600;  	#endif  	/// if have show first package  	float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  	if (Package1_SweepAngle > Prepaid_SweepAngle)  		Package1_SweepAngle = Prepaid_SweepAngle;  	// if package traff more prepaid show only part  	if (tps_cabinet.TraffLeft == 0) {  		Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  		g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  	}  	else if (!Properties.Settings.Default.DisablePackageDiagramm)  		g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  	//// if have second package and have space show it  	if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  		float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  		if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  			Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  		// if package traff more prepaid+package1 show only part  		if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  			Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  			if (Package2_SweepAngle > (360 - Package1_SweepAngle))  				Package2_SweepAngle = 360 - Package1_SweepAngle;  			// if package traff more package1 show only part  			g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  		}  		else if (!Properties.Settings.Default.DisablePackageDiagramm)  			g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  	}  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.HasPackage) {  	#if DEBUG  	tps_cabinet.Packages [0].TraffLeft = 600;  	tps_cabinet.Packages [1].TraffLeft = 600;  	#endif  	/// if have show first package  	float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  	if (Package1_SweepAngle > Prepaid_SweepAngle)  		Package1_SweepAngle = Prepaid_SweepAngle;  	// if package traff more prepaid show only part  	if (tps_cabinet.TraffLeft == 0) {  		Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  		g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  	}  	else if (!Properties.Settings.Default.DisablePackageDiagramm)  		g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  	//// if have second package and have space show it  	if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  		float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  		if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  			Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  		// if package traff more prepaid+package1 show only part  		if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  			Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  			if (Package2_SweepAngle > (360 - Package1_SweepAngle))  				Package2_SweepAngle = 360 - Package1_SweepAngle;  			// if package traff more package1 show only part  			g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  		}  		else if (!Properties.Settings.Default.DisablePackageDiagramm)  			g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  	}  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.HasPackage) {  	#if DEBUG  	tps_cabinet.Packages [0].TraffLeft = 600;  	tps_cabinet.Packages [1].TraffLeft = 600;  	#endif  	/// if have show first package  	float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  	if (Package1_SweepAngle > Prepaid_SweepAngle)  		Package1_SweepAngle = Prepaid_SweepAngle;  	// if package traff more prepaid show only part  	if (tps_cabinet.TraffLeft == 0) {  		Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  		g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  	}  	else if (!Properties.Settings.Default.DisablePackageDiagramm)  		g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  	//// if have second package and have space show it  	if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  		float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  		if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  			Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  		// if package traff more prepaid+package1 show only part  		if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  			Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  			if (Package2_SweepAngle > (360 - Package1_SweepAngle))  				Package2_SweepAngle = 360 - Package1_SweepAngle;  			// if package traff more package1 show only part  			g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  		}  		else if (!Properties.Settings.Default.DisablePackageDiagramm)  			g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  	}  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.HasPackage) {  	#if DEBUG  	tps_cabinet.Packages [0].TraffLeft = 600;  	tps_cabinet.Packages [1].TraffLeft = 600;  	#endif  	/// if have show first package  	float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  	if (Package1_SweepAngle > Prepaid_SweepAngle)  		Package1_SweepAngle = Prepaid_SweepAngle;  	// if package traff more prepaid show only part  	if (tps_cabinet.TraffLeft == 0) {  		Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  		g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  	}  	else if (!Properties.Settings.Default.DisablePackageDiagramm)  		g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  	//// if have second package and have space show it  	if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  		float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  		if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  			Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  		// if package traff more prepaid+package1 show only part  		if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  			Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  			if (Package2_SweepAngle > (360 - Package1_SweepAngle))  				Package2_SweepAngle = 360 - Package1_SweepAngle;  			// if package traff more package1 show only part  			g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  		}  		else if (!Properties.Settings.Default.DisablePackageDiagramm)  			g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  	}  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.HasPackage) {  	#if DEBUG  	tps_cabinet.Packages [0].TraffLeft = 600;  	tps_cabinet.Packages [1].TraffLeft = 600;  	#endif  	/// if have show first package  	float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  	if (Package1_SweepAngle > Prepaid_SweepAngle)  		Package1_SweepAngle = Prepaid_SweepAngle;  	// if package traff more prepaid show only part  	if (tps_cabinet.TraffLeft == 0) {  		Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  		g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  	}  	else if (!Properties.Settings.Default.DisablePackageDiagramm)  		g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  	//// if have second package and have space show it  	if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  		float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  		if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  			Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  		// if package traff more prepaid+package1 show only part  		if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  			Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  			if (Package2_SweepAngle > (360 - Package1_SweepAngle))  				Package2_SweepAngle = 360 - Package1_SweepAngle;  			// if package traff more package1 show only part  			g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  		}  		else if (!Properties.Settings.Default.DisablePackageDiagramm)  			g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  	}  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.HasPackage) {  	#if DEBUG  	tps_cabinet.Packages [0].TraffLeft = 600;  	tps_cabinet.Packages [1].TraffLeft = 600;  	#endif  	/// if have show first package  	float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  	if (Package1_SweepAngle > Prepaid_SweepAngle)  		Package1_SweepAngle = Prepaid_SweepAngle;  	// if package traff more prepaid show only part  	if (tps_cabinet.TraffLeft == 0) {  		Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  		g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  	}  	else if (!Properties.Settings.Default.DisablePackageDiagramm)  		g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  	//// if have second package and have space show it  	if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  		float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  		if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  			Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  		// if package traff more prepaid+package1 show only part  		if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  			Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  			if (Package2_SweepAngle > (360 - Package1_SweepAngle))  				Package2_SweepAngle = 360 - Package1_SweepAngle;  			// if package traff more package1 show only part  			g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  		}  		else if (!Properties.Settings.Default.DisablePackageDiagramm)  			g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  	}  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.HasPackage) {  	#if DEBUG  	tps_cabinet.Packages [0].TraffLeft = 600;  	tps_cabinet.Packages [1].TraffLeft = 600;  	#endif  	/// if have show first package  	float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  	if (Package1_SweepAngle > Prepaid_SweepAngle)  		Package1_SweepAngle = Prepaid_SweepAngle;  	// if package traff more prepaid show only part  	if (tps_cabinet.TraffLeft == 0) {  		Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  		g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  	}  	else if (!Properties.Settings.Default.DisablePackageDiagramm)  		g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  	//// if have second package and have space show it  	if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  		float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  		if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  			Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  		// if package traff more prepaid+package1 show only part  		if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  			Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  			if (Package2_SweepAngle > (360 - Package1_SweepAngle))  				Package2_SweepAngle = 360 - Package1_SweepAngle;  			// if package traff more package1 show only part  			g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  		}  		else if (!Properties.Settings.Default.DisablePackageDiagramm)  			g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  	}  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.HasPackage) {  	#if DEBUG  	tps_cabinet.Packages [0].TraffLeft = 600;  	tps_cabinet.Packages [1].TraffLeft = 600;  	#endif  	/// if have show first package  	float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  	if (Package1_SweepAngle > Prepaid_SweepAngle)  		Package1_SweepAngle = Prepaid_SweepAngle;  	// if package traff more prepaid show only part  	if (tps_cabinet.TraffLeft == 0) {  		Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  		g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  	}  	else if (!Properties.Settings.Default.DisablePackageDiagramm)  		g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  	//// if have second package and have space show it  	if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  		float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  		if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  			Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  		// if package traff more prepaid+package1 show only part  		if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  			Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  			if (Package2_SweepAngle > (360 - Package1_SweepAngle))  				Package2_SweepAngle = 360 - Package1_SweepAngle;  			// if package traff more package1 show only part  			g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  		}  		else if (!Properties.Settings.Default.DisablePackageDiagramm)  			g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  	}  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.HasPackage) {  	#if DEBUG  	tps_cabinet.Packages [0].TraffLeft = 600;  	tps_cabinet.Packages [1].TraffLeft = 600;  	#endif  	/// if have show first package  	float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  	if (Package1_SweepAngle > Prepaid_SweepAngle)  		Package1_SweepAngle = Prepaid_SweepAngle;  	// if package traff more prepaid show only part  	if (tps_cabinet.TraffLeft == 0) {  		Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  		g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  	}  	else if (!Properties.Settings.Default.DisablePackageDiagramm)  		g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  	//// if have second package and have space show it  	if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  		float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  		if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  			Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  		// if package traff more prepaid+package1 show only part  		if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  			Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  			if (Package2_SweepAngle > (360 - Package1_SweepAngle))  				Package2_SweepAngle = 360 - Package1_SweepAngle;  			// if package traff more package1 show only part  			g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  		}  		else if (!Properties.Settings.Default.DisablePackageDiagramm)  			g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  	}  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.HasPackage) {  	#if DEBUG  	tps_cabinet.Packages [0].TraffLeft = 600;  	tps_cabinet.Packages [1].TraffLeft = 600;  	#endif  	/// if have show first package  	float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  	if (Package1_SweepAngle > Prepaid_SweepAngle)  		Package1_SweepAngle = Prepaid_SweepAngle;  	// if package traff more prepaid show only part  	if (tps_cabinet.TraffLeft == 0) {  		Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  		g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  	}  	else if (!Properties.Settings.Default.DisablePackageDiagramm)  		g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  	//// if have second package and have space show it  	if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  		float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  		if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  			Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  		// if package traff more prepaid+package1 show only part  		if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  			Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  			if (Package2_SweepAngle > (360 - Package1_SweepAngle))  				Package2_SweepAngle = 360 - Package1_SweepAngle;  			// if package traff more package1 show only part  			g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  		}  		else if (!Properties.Settings.Default.DisablePackageDiagramm)  			g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  	}  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.HasPackage) {  	#if DEBUG  	tps_cabinet.Packages [0].TraffLeft = 600;  	tps_cabinet.Packages [1].TraffLeft = 600;  	#endif  	/// if have show first package  	float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  	if (Package1_SweepAngle > Prepaid_SweepAngle)  		Package1_SweepAngle = Prepaid_SweepAngle;  	// if package traff more prepaid show only part  	if (tps_cabinet.TraffLeft == 0) {  		Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  		g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  	}  	else if (!Properties.Settings.Default.DisablePackageDiagramm)  		g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  	//// if have second package and have space show it  	if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  		float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  		if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  			Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  		// if package traff more prepaid+package1 show only part  		if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  			Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  			if (Package2_SweepAngle > (360 - Package1_SweepAngle))  				Package2_SweepAngle = 360 - Package1_SweepAngle;  			// if package traff more package1 show only part  			g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  		}  		else if (!Properties.Settings.Default.DisablePackageDiagramm)  			g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  	}  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.HasPackage) {  	#if DEBUG  	tps_cabinet.Packages [0].TraffLeft = 600;  	tps_cabinet.Packages [1].TraffLeft = 600;  	#endif  	/// if have show first package  	float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  	if (Package1_SweepAngle > Prepaid_SweepAngle)  		Package1_SweepAngle = Prepaid_SweepAngle;  	// if package traff more prepaid show only part  	if (tps_cabinet.TraffLeft == 0) {  		Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  		g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  	}  	else if (!Properties.Settings.Default.DisablePackageDiagramm)  		g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  	//// if have second package and have space show it  	if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  		float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  		if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  			Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  		// if package traff more prepaid+package1 show only part  		if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  			Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  			if (Package2_SweepAngle > (360 - Package1_SweepAngle))  				Package2_SweepAngle = 360 - Package1_SweepAngle;  			// if package traff more package1 show only part  			g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  		}  		else if (!Properties.Settings.Default.DisablePackageDiagramm)  			g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  	}  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.HasPackage) {  	#if DEBUG  	tps_cabinet.Packages [0].TraffLeft = 600;  	tps_cabinet.Packages [1].TraffLeft = 600;  	#endif  	/// if have show first package  	float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  	if (Package1_SweepAngle > Prepaid_SweepAngle)  		Package1_SweepAngle = Prepaid_SweepAngle;  	// if package traff more prepaid show only part  	if (tps_cabinet.TraffLeft == 0) {  		Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  		g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  	}  	else if (!Properties.Settings.Default.DisablePackageDiagramm)  		g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  	//// if have second package and have space show it  	if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  		float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  		if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  			Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  		// if package traff more prepaid+package1 show only part  		if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  			Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  			if (Package2_SweepAngle > (360 - Package1_SweepAngle))  				Package2_SweepAngle = 360 - Package1_SweepAngle;  			// if package traff more package1 show only part  			g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  		}  		else if (!Properties.Settings.Default.DisablePackageDiagramm)  			g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  	}  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.HasPackage) {  	#if DEBUG  	tps_cabinet.Packages [0].TraffLeft = 600;  	tps_cabinet.Packages [1].TraffLeft = 600;  	#endif  	/// if have show first package  	float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  	if (Package1_SweepAngle > Prepaid_SweepAngle)  		Package1_SweepAngle = Prepaid_SweepAngle;  	// if package traff more prepaid show only part  	if (tps_cabinet.TraffLeft == 0) {  		Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  		g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  	}  	else if (!Properties.Settings.Default.DisablePackageDiagramm)  		g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  	//// if have second package and have space show it  	if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  		float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  		if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  			Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  		// if package traff more prepaid+package1 show only part  		if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  			Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  			if (Package2_SweepAngle > (360 - Package1_SweepAngle))  				Package2_SweepAngle = 360 - Package1_SweepAngle;  			// if package traff more package1 show only part  			g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  		}  		else if (!Properties.Settings.Default.DisablePackageDiagramm)  			g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  	}  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.HasPackage) {  	#if DEBUG  	tps_cabinet.Packages [0].TraffLeft = 600;  	tps_cabinet.Packages [1].TraffLeft = 600;  	#endif  	/// if have show first package  	float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  	if (Package1_SweepAngle > Prepaid_SweepAngle)  		Package1_SweepAngle = Prepaid_SweepAngle;  	// if package traff more prepaid show only part  	if (tps_cabinet.TraffLeft == 0) {  		Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  		g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  	}  	else if (!Properties.Settings.Default.DisablePackageDiagramm)  		g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  	//// if have second package and have space show it  	if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  		float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  		if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  			Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  		// if package traff more prepaid+package1 show only part  		if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  			Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  			if (Package2_SweepAngle > (360 - Package1_SweepAngle))  				Package2_SweepAngle = 360 - Package1_SweepAngle;  			// if package traff more package1 show only part  			g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  		}  		else if (!Properties.Settings.Default.DisablePackageDiagramm)  			g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  	}  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.HasPackage) {  	#if DEBUG  	tps_cabinet.Packages [0].TraffLeft = 600;  	tps_cabinet.Packages [1].TraffLeft = 600;  	#endif  	/// if have show first package  	float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  	if (Package1_SweepAngle > Prepaid_SweepAngle)  		Package1_SweepAngle = Prepaid_SweepAngle;  	// if package traff more prepaid show only part  	if (tps_cabinet.TraffLeft == 0) {  		Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  		g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  	}  	else if (!Properties.Settings.Default.DisablePackageDiagramm)  		g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  	//// if have second package and have space show it  	if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  		float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  		if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  			Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  		// if package traff more prepaid+package1 show only part  		if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  			Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  			if (Package2_SweepAngle > (360 - Package1_SweepAngle))  				Package2_SweepAngle = 360 - Package1_SweepAngle;  			// if package traff more package1 show only part  			g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  		}  		else if (!Properties.Settings.Default.DisablePackageDiagramm)  			g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  	}  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.HasPackage) {  	#if DEBUG  	tps_cabinet.Packages [0].TraffLeft = 600;  	tps_cabinet.Packages [1].TraffLeft = 600;  	#endif  	/// if have show first package  	float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  	if (Package1_SweepAngle > Prepaid_SweepAngle)  		Package1_SweepAngle = Prepaid_SweepAngle;  	// if package traff more prepaid show only part  	if (tps_cabinet.TraffLeft == 0) {  		Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  		g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  	}  	else if (!Properties.Settings.Default.DisablePackageDiagramm)  		g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  	//// if have second package and have space show it  	if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  		float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  		if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  			Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  		// if package traff more prepaid+package1 show only part  		if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  			Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  			if (Package2_SweepAngle > (360 - Package1_SweepAngle))  				Package2_SweepAngle = 360 - Package1_SweepAngle;  			// if package traff more package1 show only part  			g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  		}  		else if (!Properties.Settings.Default.DisablePackageDiagramm)  			g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  	}  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.HasPackage) {  	#if DEBUG  	tps_cabinet.Packages [0].TraffLeft = 600;  	tps_cabinet.Packages [1].TraffLeft = 600;  	#endif  	/// if have show first package  	float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  	if (Package1_SweepAngle > Prepaid_SweepAngle)  		Package1_SweepAngle = Prepaid_SweepAngle;  	// if package traff more prepaid show only part  	if (tps_cabinet.TraffLeft == 0) {  		Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  		g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  	}  	else if (!Properties.Settings.Default.DisablePackageDiagramm)  		g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  	//// if have second package and have space show it  	if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  		float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  		if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  			Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  		// if package traff more prepaid+package1 show only part  		if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  			Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  			if (Package2_SweepAngle > (360 - Package1_SweepAngle))  				Package2_SweepAngle = 360 - Package1_SweepAngle;  			// if package traff more package1 show only part  			g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  		}  		else if (!Properties.Settings.Default.DisablePackageDiagramm)  			g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  	}  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.HasPackage) {  	#if DEBUG  	tps_cabinet.Packages [0].TraffLeft = 600;  	tps_cabinet.Packages [1].TraffLeft = 600;  	#endif  	/// if have show first package  	float Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.TraffAll;  	if (Package1_SweepAngle > Prepaid_SweepAngle)  		Package1_SweepAngle = Prepaid_SweepAngle;  	// if package traff more prepaid show only part  	if (tps_cabinet.TraffLeft == 0) {  		Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  		g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  	}  	else if (!Properties.Settings.Default.DisablePackageDiagramm)  		g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  	//// if have second package and have space show it  	if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  		float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  		if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  			Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  		// if package traff more prepaid+package1 show only part  		if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  			Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  			if (Package2_SweepAngle > (360 - Package1_SweepAngle))  				Package2_SweepAngle = 360 - Package1_SweepAngle;  			// if package traff more package1 show only part  			g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  		}  		else if (!Properties.Settings.Default.DisablePackageDiagramm)  			g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  	}  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: tps_cabinet.Packages [0].TraffLeft = 600;  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: tps_cabinet.Packages [1].TraffLeft = 600;  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.TraffLeft == 0) {  	Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  	g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  }  else if (!Properties.Settings.Default.DisablePackageDiagramm)  	g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.TraffLeft == 0) {  	Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  	g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  }  else if (!Properties.Settings.Default.DisablePackageDiagramm)  	g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.TraffLeft == 0) {  	Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  	g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  }  else if (!Properties.Settings.Default.DisablePackageDiagramm)  	g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.TraffLeft == 0) {  	Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  	g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  }  else if (!Properties.Settings.Default.DisablePackageDiagramm)  	g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.TraffLeft == 0) {  	Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  	g.FillPie (Brushes.DarkSeaGreen' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' -Package1_SweepAngle);  }  else if (!Properties.Settings.Default.DisablePackageDiagramm)  	g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: Package1_SweepAngle = tps_cabinet.Packages [0].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (!Properties.Settings.Default.DisablePackageDiagramm)  	g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (!Properties.Settings.Default.DisablePackageDiagramm)  	g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (!Properties.Settings.Default.DisablePackageDiagramm)  	g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (!Properties.Settings.Default.DisablePackageDiagramm)  	g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: g.FillPie (Brushes.DarkSeaGreen' 7' 7' bmp.Width - 15' bmp.Height - 15' Prepaid_SweepAngle' -Package1_SweepAngle);  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  	float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  	if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  		Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  	// if package traff more prepaid+package1 show only part  	if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  		Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  		if (Package2_SweepAngle > (360 - Package1_SweepAngle))  			Package2_SweepAngle = 360 - Package1_SweepAngle;  		// if package traff more package1 show only part  		g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  	}  	else if (!Properties.Settings.Default.DisablePackageDiagramm)  		g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  	float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  	if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  		Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  	// if package traff more prepaid+package1 show only part  	if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  		Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  		if (Package2_SweepAngle > (360 - Package1_SweepAngle))  			Package2_SweepAngle = 360 - Package1_SweepAngle;  		// if package traff more package1 show only part  		g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  	}  	else if (!Properties.Settings.Default.DisablePackageDiagramm)  		g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  	float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  	if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  		Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  	// if package traff more prepaid+package1 show only part  	if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  		Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  		if (Package2_SweepAngle > (360 - Package1_SweepAngle))  			Package2_SweepAngle = 360 - Package1_SweepAngle;  		// if package traff more package1 show only part  		g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  	}  	else if (!Properties.Settings.Default.DisablePackageDiagramm)  		g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  	float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  	if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  		Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  	// if package traff more prepaid+package1 show only part  	if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  		Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  		if (Package2_SweepAngle > (360 - Package1_SweepAngle))  			Package2_SweepAngle = 360 - Package1_SweepAngle;  		// if package traff more package1 show only part  		g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  	}  	else if (!Properties.Settings.Default.DisablePackageDiagramm)  		g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  	float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  	if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  		Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  	// if package traff more prepaid+package1 show only part  	if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  		Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  		if (Package2_SweepAngle > (360 - Package1_SweepAngle))  			Package2_SweepAngle = 360 - Package1_SweepAngle;  		// if package traff more package1 show only part  		g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  	}  	else if (!Properties.Settings.Default.DisablePackageDiagramm)  		g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  	float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  	if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  		Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  	// if package traff more prepaid+package1 show only part  	if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  		Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  		if (Package2_SweepAngle > (360 - Package1_SweepAngle))  			Package2_SweepAngle = 360 - Package1_SweepAngle;  		// if package traff more package1 show only part  		g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  	}  	else if (!Properties.Settings.Default.DisablePackageDiagramm)  		g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  	float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  	if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  		Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  	// if package traff more prepaid+package1 show only part  	if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  		Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  		if (Package2_SweepAngle > (360 - Package1_SweepAngle))  			Package2_SweepAngle = 360 - Package1_SweepAngle;  		// if package traff more package1 show only part  		g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  	}  	else if (!Properties.Settings.Default.DisablePackageDiagramm)  		g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  	float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  	if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  		Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  	// if package traff more prepaid+package1 show only part  	if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  		Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  		if (Package2_SweepAngle > (360 - Package1_SweepAngle))  			Package2_SweepAngle = 360 - Package1_SweepAngle;  		// if package traff more package1 show only part  		g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  	}  	else if (!Properties.Settings.Default.DisablePackageDiagramm)  		g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  	float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  	if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  		Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  	// if package traff more prepaid+package1 show only part  	if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  		Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  		if (Package2_SweepAngle > (360 - Package1_SweepAngle))  			Package2_SweepAngle = 360 - Package1_SweepAngle;  		// if package traff more package1 show only part  		g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  	}  	else if (!Properties.Settings.Default.DisablePackageDiagramm)  		g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  	float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  	if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  		Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  	// if package traff more prepaid+package1 show only part  	if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  		Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  		if (Package2_SweepAngle > (360 - Package1_SweepAngle))  			Package2_SweepAngle = 360 - Package1_SweepAngle;  		// if package traff more package1 show only part  		g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  	}  	else if (!Properties.Settings.Default.DisablePackageDiagramm)  		g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  	float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  	if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  		Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  	// if package traff more prepaid+package1 show only part  	if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  		Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  		if (Package2_SweepAngle > (360 - Package1_SweepAngle))  			Package2_SweepAngle = 360 - Package1_SweepAngle;  		// if package traff more package1 show only part  		g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  	}  	else if (!Properties.Settings.Default.DisablePackageDiagramm)  		g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.Packages.Count > 1 && Package1_SweepAngle != Prepaid_SweepAngle) {  	float Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.TraffAll;  	if (Package2_SweepAngle > (Prepaid_SweepAngle - Package1_SweepAngle))  		Package2_SweepAngle = Prepaid_SweepAngle - Package1_SweepAngle;  	// if package traff more prepaid+package1 show only part  	if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  		Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  		if (Package2_SweepAngle > (360 - Package1_SweepAngle))  			Package2_SweepAngle = 360 - Package1_SweepAngle;  		// if package traff more package1 show only part  		g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  	}  	else if (!Properties.Settings.Default.DisablePackageDiagramm)  		g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  	Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  	if (Package2_SweepAngle > (360 - Package1_SweepAngle))  		Package2_SweepAngle = 360 - Package1_SweepAngle;  	// if package traff more package1 show only part  	g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  }  else if (!Properties.Settings.Default.DisablePackageDiagramm)  	g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  	Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  	if (Package2_SweepAngle > (360 - Package1_SweepAngle))  		Package2_SweepAngle = 360 - Package1_SweepAngle;  	// if package traff more package1 show only part  	g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  }  else if (!Properties.Settings.Default.DisablePackageDiagramm)  	g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  	Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  	if (Package2_SweepAngle > (360 - Package1_SweepAngle))  		Package2_SweepAngle = 360 - Package1_SweepAngle;  	// if package traff more package1 show only part  	g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  }  else if (!Properties.Settings.Default.DisablePackageDiagramm)  	g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  	Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  	if (Package2_SweepAngle > (360 - Package1_SweepAngle))  		Package2_SweepAngle = 360 - Package1_SweepAngle;  	// if package traff more package1 show only part  	g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  }  else if (!Properties.Settings.Default.DisablePackageDiagramm)  	g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  	Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  	if (Package2_SweepAngle > (360 - Package1_SweepAngle))  		Package2_SweepAngle = 360 - Package1_SweepAngle;  	// if package traff more package1 show only part  	g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  }  else if (!Properties.Settings.Default.DisablePackageDiagramm)  	g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  	Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  	if (Package2_SweepAngle > (360 - Package1_SweepAngle))  		Package2_SweepAngle = 360 - Package1_SweepAngle;  	// if package traff more package1 show only part  	g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  }  else if (!Properties.Settings.Default.DisablePackageDiagramm)  	g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  	Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  	if (Package2_SweepAngle > (360 - Package1_SweepAngle))  		Package2_SweepAngle = 360 - Package1_SweepAngle;  	// if package traff more package1 show only part  	g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  }  else if (!Properties.Settings.Default.DisablePackageDiagramm)  	g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  	Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  	if (Package2_SweepAngle > (360 - Package1_SweepAngle))  		Package2_SweepAngle = 360 - Package1_SweepAngle;  	// if package traff more package1 show only part  	g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  }  else if (!Properties.Settings.Default.DisablePackageDiagramm)  	g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  	Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  	if (Package2_SweepAngle > (360 - Package1_SweepAngle))  		Package2_SweepAngle = 360 - Package1_SweepAngle;  	// if package traff more package1 show only part  	g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  }  else if (!Properties.Settings.Default.DisablePackageDiagramm)  	g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  	Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  	if (Package2_SweepAngle > (360 - Package1_SweepAngle))  		Package2_SweepAngle = 360 - Package1_SweepAngle;  	// if package traff more package1 show only part  	g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  }  else if (!Properties.Settings.Default.DisablePackageDiagramm)  	g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (tps_cabinet.TraffLeft == 0 && !Properties.Settings.Default.DisablePackageDiagramm) {  	Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  	if (Package2_SweepAngle > (360 - Package1_SweepAngle))  		Package2_SweepAngle = 360 - Package1_SweepAngle;  	// if package traff more package1 show only part  	g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  }  else if (!Properties.Settings.Default.DisablePackageDiagramm)  	g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: Package2_SweepAngle = tps_cabinet.Packages [1].TraffLeft * 360 / tps_cabinet.Packages [0].TraffAll;  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (Package2_SweepAngle > (360 - Package1_SweepAngle))  	Package2_SweepAngle = 360 - Package1_SweepAngle;  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (Package2_SweepAngle > (360 - Package1_SweepAngle))  	Package2_SweepAngle = 360 - Package1_SweepAngle;  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: Package2_SweepAngle = 360 - Package1_SweepAngle;  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: g.FillPie (Brushes.MediumTurquoise' 7' 7' bmp.Width - 15' bmp.Height - 15' -Package1_SweepAngle' -Package2_SweepAngle);  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (!Properties.Settings.Default.DisablePackageDiagramm)  	g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (!Properties.Settings.Default.DisablePackageDiagramm)  	g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (!Properties.Settings.Default.DisablePackageDiagramm)  	g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: if (!Properties.Settings.Default.DisablePackageDiagramm)  	g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FillData,The following statement contains a magic number: g.FillPie (Brushes.MediumTurquoise' 19' 19' bmp.Width - 39' bmp.Height - 39' Prepaid_SweepAngle - Package1_SweepAngle' -Package2_SweepAngle);  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FadeOutAnimation,The following statement contains a magic number: this.Opacity -= .04;  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,FadeOutAnimation,The following statement contains a magic number: if (this.Opacity <= 0.2) {  	FadeOutTimer.Stop ();  	this.Hide ();  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,DrawPackagePieChart,The following statement contains a magic number: if (pkg.TraffAll != 0 && pic_Graph.Visible) {  	Bitmap bmp = new Bitmap (pic_Graph.Width' pic_Graph.Height);  	using (Graphics g = Graphics.FromImage (bmp)) {  		g.SmoothingMode = SmoothingMode.AntiAlias;  		g.CompositingQuality = CompositingQuality.HighQuality;  		g.InterpolationMode = InterpolationMode.Bicubic;  		g.Clear (Color.Transparent);  		g.FillEllipse (graphBrush' 0' 0' bmp.Width - 1' bmp.Height - 1);  		g.FillPie (Brushes.IndianRed' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' pkg.TraffUsed * 360 / pkg.TraffAll);  	}  	if (pic_Graph.Image != null) {  		saved_pic_Graph = (Image)pic_Graph.Image.Clone ();  		pic_Graph.Image.Dispose ();  		pic_Graph.Image = null;  	}  	pic_Graph.Image = bmp;  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,DrawPackagePieChart,The following statement contains a magic number: using (Graphics g = Graphics.FromImage (bmp)) {  	g.SmoothingMode = SmoothingMode.AntiAlias;  	g.CompositingQuality = CompositingQuality.HighQuality;  	g.InterpolationMode = InterpolationMode.Bicubic;  	g.Clear (Color.Transparent);  	g.FillEllipse (graphBrush' 0' 0' bmp.Width - 1' bmp.Height - 1);  	g.FillPie (Brushes.IndianRed' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' pkg.TraffUsed * 360 / pkg.TraffAll);  }  
Magic Number,tpscabinet,frm_notify,C:\repos\bestlion_tpscabinet\tpscabinet\frm_notify.cs,DrawPackagePieChart,The following statement contains a magic number: g.FillPie (Brushes.IndianRed' 0' 0' bmp.Width - 1' bmp.Height - 1' 0' pkg.TraffUsed * 360 / pkg.TraffAll);  
Magic Number,tpscabinet,helper,C:\repos\bestlion_tpscabinet\tpscabinet\helper.cs,CreateRoundRect,The following statement contains a magic number: trc.X = r.Right - 2 * radius;  
Magic Number,tpscabinet,helper,C:\repos\bestlion_tpscabinet\tpscabinet\helper.cs,CreateRoundRect,The following statement contains a magic number: blc.Y = r.Bottom - 2 * radius;  
Magic Number,tpscabinet,helper,C:\repos\bestlion_tpscabinet\tpscabinet\helper.cs,CreateRoundRect,The following statement contains a magic number: brc.X = r.Right - 2 * radius;  
Magic Number,tpscabinet,helper,C:\repos\bestlion_tpscabinet\tpscabinet\helper.cs,CreateRoundRect,The following statement contains a magic number: if ((RectangleCorners.TopLeft & corners) == RectangleCorners.TopLeft)  	p.AddArc (tlc' 180' 90);  else  	p.AddLines (new Point[] {  		n [0]'  		n [1]'  		n [2]  	});  
Magic Number,tpscabinet,helper,C:\repos\bestlion_tpscabinet\tpscabinet\helper.cs,CreateRoundRect,The following statement contains a magic number: if ((RectangleCorners.TopLeft & corners) == RectangleCorners.TopLeft)  	p.AddArc (tlc' 180' 90);  else  	p.AddLines (new Point[] {  		n [0]'  		n [1]'  		n [2]  	});  
Magic Number,tpscabinet,helper,C:\repos\bestlion_tpscabinet\tpscabinet\helper.cs,CreateRoundRect,The following statement contains a magic number: if ((RectangleCorners.TopLeft & corners) == RectangleCorners.TopLeft)  	p.AddArc (tlc' 180' 90);  else  	p.AddLines (new Point[] {  		n [0]'  		n [1]'  		n [2]  	});  
Magic Number,tpscabinet,helper,C:\repos\bestlion_tpscabinet\tpscabinet\helper.cs,CreateRoundRect,The following statement contains a magic number: p.AddArc (tlc' 180' 90);  
Magic Number,tpscabinet,helper,C:\repos\bestlion_tpscabinet\tpscabinet\helper.cs,CreateRoundRect,The following statement contains a magic number: p.AddArc (tlc' 180' 90);  
Magic Number,tpscabinet,helper,C:\repos\bestlion_tpscabinet\tpscabinet\helper.cs,CreateRoundRect,The following statement contains a magic number: p.AddLines (new Point[] {  	n [0]'  	n [1]'  	n [2]  });  
Magic Number,tpscabinet,helper,C:\repos\bestlion_tpscabinet\tpscabinet\helper.cs,CreateRoundRect,The following statement contains a magic number: p.AddLine (n [2]' n [3]);  
Magic Number,tpscabinet,helper,C:\repos\bestlion_tpscabinet\tpscabinet\helper.cs,CreateRoundRect,The following statement contains a magic number: p.AddLine (n [2]' n [3]);  
Magic Number,tpscabinet,helper,C:\repos\bestlion_tpscabinet\tpscabinet\helper.cs,CreateRoundRect,The following statement contains a magic number: if ((RectangleCorners.TopRight & corners) == RectangleCorners.TopRight)  	p.AddArc (trc' 270' 90);  else  	p.AddLines (new Point[] {  		n [3]'  		n [4]'  		n [5]  	});  
Magic Number,tpscabinet,helper,C:\repos\bestlion_tpscabinet\tpscabinet\helper.cs,CreateRoundRect,The following statement contains a magic number: if ((RectangleCorners.TopRight & corners) == RectangleCorners.TopRight)  	p.AddArc (trc' 270' 90);  else  	p.AddLines (new Point[] {  		n [3]'  		n [4]'  		n [5]  	});  
Magic Number,tpscabinet,helper,C:\repos\bestlion_tpscabinet\tpscabinet\helper.cs,CreateRoundRect,The following statement contains a magic number: if ((RectangleCorners.TopRight & corners) == RectangleCorners.TopRight)  	p.AddArc (trc' 270' 90);  else  	p.AddLines (new Point[] {  		n [3]'  		n [4]'  		n [5]  	});  
Magic Number,tpscabinet,helper,C:\repos\bestlion_tpscabinet\tpscabinet\helper.cs,CreateRoundRect,The following statement contains a magic number: if ((RectangleCorners.TopRight & corners) == RectangleCorners.TopRight)  	p.AddArc (trc' 270' 90);  else  	p.AddLines (new Point[] {  		n [3]'  		n [4]'  		n [5]  	});  
Magic Number,tpscabinet,helper,C:\repos\bestlion_tpscabinet\tpscabinet\helper.cs,CreateRoundRect,The following statement contains a magic number: if ((RectangleCorners.TopRight & corners) == RectangleCorners.TopRight)  	p.AddArc (trc' 270' 90);  else  	p.AddLines (new Point[] {  		n [3]'  		n [4]'  		n [5]  	});  
Magic Number,tpscabinet,helper,C:\repos\bestlion_tpscabinet\tpscabinet\helper.cs,CreateRoundRect,The following statement contains a magic number: p.AddArc (trc' 270' 90);  
Magic Number,tpscabinet,helper,C:\repos\bestlion_tpscabinet\tpscabinet\helper.cs,CreateRoundRect,The following statement contains a magic number: p.AddArc (trc' 270' 90);  
Magic Number,tpscabinet,helper,C:\repos\bestlion_tpscabinet\tpscabinet\helper.cs,CreateRoundRect,The following statement contains a magic number: p.AddLines (new Point[] {  	n [3]'  	n [4]'  	n [5]  });  
Magic Number,tpscabinet,helper,C:\repos\bestlion_tpscabinet\tpscabinet\helper.cs,CreateRoundRect,The following statement contains a magic number: p.AddLines (new Point[] {  	n [3]'  	n [4]'  	n [5]  });  
Magic Number,tpscabinet,helper,C:\repos\bestlion_tpscabinet\tpscabinet\helper.cs,CreateRoundRect,The following statement contains a magic number: p.AddLines (new Point[] {  	n [3]'  	n [4]'  	n [5]  });  
Magic Number,tpscabinet,helper,C:\repos\bestlion_tpscabinet\tpscabinet\helper.cs,CreateRoundRect,The following statement contains a magic number: p.AddLine (n [5]' n [6]);  
Magic Number,tpscabinet,helper,C:\repos\bestlion_tpscabinet\tpscabinet\helper.cs,CreateRoundRect,The following statement contains a magic number: p.AddLine (n [5]' n [6]);  
Magic Number,tpscabinet,helper,C:\repos\bestlion_tpscabinet\tpscabinet\helper.cs,CreateRoundRect,The following statement contains a magic number: if ((RectangleCorners.BottomRight & corners) == RectangleCorners.BottomRight)  	p.AddArc (brc' 0' 90);  else  	p.AddLines (new Point[] {  		n [6]'  		n [7]'  		n [8]  	});  
Magic Number,tpscabinet,helper,C:\repos\bestlion_tpscabinet\tpscabinet\helper.cs,CreateRoundRect,The following statement contains a magic number: if ((RectangleCorners.BottomRight & corners) == RectangleCorners.BottomRight)  	p.AddArc (brc' 0' 90);  else  	p.AddLines (new Point[] {  		n [6]'  		n [7]'  		n [8]  	});  
Magic Number,tpscabinet,helper,C:\repos\bestlion_tpscabinet\tpscabinet\helper.cs,CreateRoundRect,The following statement contains a magic number: if ((RectangleCorners.BottomRight & corners) == RectangleCorners.BottomRight)  	p.AddArc (brc' 0' 90);  else  	p.AddLines (new Point[] {  		n [6]'  		n [7]'  		n [8]  	});  
Magic Number,tpscabinet,helper,C:\repos\bestlion_tpscabinet\tpscabinet\helper.cs,CreateRoundRect,The following statement contains a magic number: if ((RectangleCorners.BottomRight & corners) == RectangleCorners.BottomRight)  	p.AddArc (brc' 0' 90);  else  	p.AddLines (new Point[] {  		n [6]'  		n [7]'  		n [8]  	});  
Magic Number,tpscabinet,helper,C:\repos\bestlion_tpscabinet\tpscabinet\helper.cs,CreateRoundRect,The following statement contains a magic number: p.AddArc (brc' 0' 90);  
Magic Number,tpscabinet,helper,C:\repos\bestlion_tpscabinet\tpscabinet\helper.cs,CreateRoundRect,The following statement contains a magic number: p.AddLines (new Point[] {  	n [6]'  	n [7]'  	n [8]  });  
Magic Number,tpscabinet,helper,C:\repos\bestlion_tpscabinet\tpscabinet\helper.cs,CreateRoundRect,The following statement contains a magic number: p.AddLines (new Point[] {  	n [6]'  	n [7]'  	n [8]  });  
Magic Number,tpscabinet,helper,C:\repos\bestlion_tpscabinet\tpscabinet\helper.cs,CreateRoundRect,The following statement contains a magic number: p.AddLines (new Point[] {  	n [6]'  	n [7]'  	n [8]  });  
Magic Number,tpscabinet,helper,C:\repos\bestlion_tpscabinet\tpscabinet\helper.cs,CreateRoundRect,The following statement contains a magic number: p.AddLine (n [8]' n [9]);  
Magic Number,tpscabinet,helper,C:\repos\bestlion_tpscabinet\tpscabinet\helper.cs,CreateRoundRect,The following statement contains a magic number: p.AddLine (n [8]' n [9]);  
Magic Number,tpscabinet,helper,C:\repos\bestlion_tpscabinet\tpscabinet\helper.cs,CreateRoundRect,The following statement contains a magic number: if ((RectangleCorners.BottomLeft & corners) == RectangleCorners.BottomLeft)  	p.AddArc (blc' 90' 90);  else  	p.AddLines (new Point[] {  		n [9]'  		n [10]'  		n [11]  	});  
Magic Number,tpscabinet,helper,C:\repos\bestlion_tpscabinet\tpscabinet\helper.cs,CreateRoundRect,The following statement contains a magic number: if ((RectangleCorners.BottomLeft & corners) == RectangleCorners.BottomLeft)  	p.AddArc (blc' 90' 90);  else  	p.AddLines (new Point[] {  		n [9]'  		n [10]'  		n [11]  	});  
Magic Number,tpscabinet,helper,C:\repos\bestlion_tpscabinet\tpscabinet\helper.cs,CreateRoundRect,The following statement contains a magic number: if ((RectangleCorners.BottomLeft & corners) == RectangleCorners.BottomLeft)  	p.AddArc (blc' 90' 90);  else  	p.AddLines (new Point[] {  		n [9]'  		n [10]'  		n [11]  	});  
Magic Number,tpscabinet,helper,C:\repos\bestlion_tpscabinet\tpscabinet\helper.cs,CreateRoundRect,The following statement contains a magic number: if ((RectangleCorners.BottomLeft & corners) == RectangleCorners.BottomLeft)  	p.AddArc (blc' 90' 90);  else  	p.AddLines (new Point[] {  		n [9]'  		n [10]'  		n [11]  	});  
Magic Number,tpscabinet,helper,C:\repos\bestlion_tpscabinet\tpscabinet\helper.cs,CreateRoundRect,The following statement contains a magic number: if ((RectangleCorners.BottomLeft & corners) == RectangleCorners.BottomLeft)  	p.AddArc (blc' 90' 90);  else  	p.AddLines (new Point[] {  		n [9]'  		n [10]'  		n [11]  	});  
Magic Number,tpscabinet,helper,C:\repos\bestlion_tpscabinet\tpscabinet\helper.cs,CreateRoundRect,The following statement contains a magic number: p.AddArc (blc' 90' 90);  
Magic Number,tpscabinet,helper,C:\repos\bestlion_tpscabinet\tpscabinet\helper.cs,CreateRoundRect,The following statement contains a magic number: p.AddArc (blc' 90' 90);  
Magic Number,tpscabinet,helper,C:\repos\bestlion_tpscabinet\tpscabinet\helper.cs,CreateRoundRect,The following statement contains a magic number: p.AddLines (new Point[] {  	n [9]'  	n [10]'  	n [11]  });  
Magic Number,tpscabinet,helper,C:\repos\bestlion_tpscabinet\tpscabinet\helper.cs,CreateRoundRect,The following statement contains a magic number: p.AddLines (new Point[] {  	n [9]'  	n [10]'  	n [11]  });  
Magic Number,tpscabinet,helper,C:\repos\bestlion_tpscabinet\tpscabinet\helper.cs,CreateRoundRect,The following statement contains a magic number: p.AddLines (new Point[] {  	n [9]'  	n [10]'  	n [11]  });  
Magic Number,tpscabinet,helper,C:\repos\bestlion_tpscabinet\tpscabinet\helper.cs,CreateRoundRect,The following statement contains a magic number: p.AddLine (n [11]' n [0]);  
