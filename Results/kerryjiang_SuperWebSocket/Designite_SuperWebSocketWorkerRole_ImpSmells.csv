Implementation smell,Namespace,Class,File,Method,Description
Complex Method,SuperWebSocketWorkerRole,WorkerRole,F:\newReposMay17\kerryjiang_SuperWebSocket\Cloud\WindowsAzure\SuperWebSocketWorkerRole\WorkerRole.cs,OnStart,Cyclomatic complexity of the method is 11
Long Statement,SuperWebSocketWorkerRole,WorkerRole,F:\newReposMay17\kerryjiang_SuperWebSocket\Cloud\WindowsAzure\SuperWebSocketWorkerRole\WorkerRole.cs,OnStart,The length of the statement  "	if (!m_Bootstrap.Initialize (RoleEnvironment.CurrentRoleInstance.InstanceEndpoints.ToDictionary (p => p.Key' p => p.Value.IPEndpoint))) { " is 137.
Long Statement,SuperWebSocketWorkerRole,WorkerRole,F:\newReposMay17\kerryjiang_SuperWebSocket\Cloud\WindowsAzure\SuperWebSocketWorkerRole\WorkerRole.cs,OnStart,The length of the statement  "		Trace.WriteLine ("Some server instances were started successfully' but the others failed to start! Please check error log for more information!"); " is 146.
Magic Number,SuperWebSocketWorkerRole,WorkerRole,F:\newReposMay17\kerryjiang_SuperWebSocket\Cloud\WindowsAzure\SuperWebSocketWorkerRole\WorkerRole.cs,Run,The following statement contains a magic number: while (true) {  	Thread.Sleep (10000);  	Trace.WriteLine ("Working"' "Information");  }  
Magic Number,SuperWebSocketWorkerRole,WorkerRole,F:\newReposMay17\kerryjiang_SuperWebSocket\Cloud\WindowsAzure\SuperWebSocketWorkerRole\WorkerRole.cs,Run,The following statement contains a magic number: Thread.Sleep (10000);  
Magic Number,SuperWebSocketWorkerRole,WorkerRole,F:\newReposMay17\kerryjiang_SuperWebSocket\Cloud\WindowsAzure\SuperWebSocketWorkerRole\WorkerRole.cs,OnStart,The following statement contains a magic number: ServicePointManager.DefaultConnectionLimit = 12;  
Missing Default,SuperWebSocketWorkerRole,WorkerRole,F:\newReposMay17\kerryjiang_SuperWebSocket\Cloud\WindowsAzure\SuperWebSocketWorkerRole\WorkerRole.cs,OnStart,The following switch statement is missing a default case: switch (result) {  case (StartResult.None):  	Trace.WriteLine ("No server is configured' please check you configuration!");  	return false;  case (StartResult.Success):  	Trace.WriteLine ("The server has been started!");  	break;  case (StartResult.Failed):  	Trace.WriteLine ("Failed to start SuperWebSocket server! Please check error log for more information!");  	return false;  case (StartResult.PartialSuccess):  	Trace.WriteLine ("Some server instances were started successfully' but the others failed to start! Please check error log for more information!");  	break;  }  
