Implementation smell,Namespace,Class,File,Method,Description
Complex Method,RayTracer,Camera,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\Camera.cs,CalculateRecursiveColor,Cyclomatic complexity of the method is 9
Complex Method,RayTracer,MainWindow,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\MainWindow.xaml.cs,Connect,Cyclomatic complexity of the method is 8
Long Parameter List,RayTracer,Camera,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\Camera.cs,Camera,The method has 5 parameters. Parameters: position' forward' worldUp' fieldOfView' renderSize
Long Parameter List,RayTracer,Intersection,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\Intersection.cs,Intersection,The method has 6 parameters. Parameters: point' normal' impactDirection' obj' color' distance
Long Parameter List,RayTracer.Materials,CheckerboardMaterial,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\Materials\CheckerboardMaterial.cs,CheckerboardMaterial,The method has 6 parameters. Parameters: even' odd' opacity' reflectivity' refractivity' glossiness
Long Parameter List,RayTracer.Materials,SolidMaterial,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\Materials\SolidMaterial.cs,SolidMaterial,The method has 5 parameters. Parameters: color' reflectivity' refractivity' opacity' glossiness
Long Parameter List,RayTracer.Objects,Disc,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\Objects\Disc.cs,Disc,The method has 5 parameters. Parameters: centerPosition' material' normalDirection' radius' cellWidth
Long Parameter List,RayTracer.Objects,Quad,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\Objects\Quad.cs,Quad,The method has 6 parameters. Parameters: centerPosition' material' normalDirection' width' height' cellWidth
Long Statement,RayTracer,App,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\App.xaml.cs,OnStartup,The length of the statement  "                MessageBox.Show("SIMD isn't enabled for the current process. Please make sure that" + Environment.NewLine + Environment.NewLine + " is 129.
Long Statement,RayTracer,Camera,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\Camera.cs,GetRay,The length of the statement  "            var rayWorldPosition = screenPosition + ((new Vector3(viewPortX) * right) + (new Vector3(viewPortY) * up * new Vector3(yRatio))); " is 129.
Long Statement,RayTracer,Camera,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\Camera.cs,GetReflectionRay,The length of the statement  "            return new Ray(origin + reflectionDirection * new Vector3(.01f)' reflectionDirection); // Ensures the ray starts "just off" the reflected surface " is 145.
Long Statement,RayTracer,Camera,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\Camera.cs,GetRefractionRay,The length of the statement  "            Vector3 refractionDirection = (normal * new Vector3((refractivity * c1 - c2)) - previousDirection * new Vector3(refractivity)) * new Vector3(-1); " is 145.
Long Statement,RayTracer,Camera,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\Camera.cs,CalculateRecursiveColor,The length of the statement  "                    lightContribution = lightContribution + (intersection.Color * light.GetIntensityAtDistance(lightDistance) * light.Color * lightEffectiveness); " is 142.
Long Statement,RayTracer,Camera,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\Camera.cs,CalculateRecursiveColor,The length of the statement  "                if (TryCalculateIntersection(shadowRay' scene' intersection.ObjectHit' out shadowIntersection) && shadowIntersection.Distance < lightDistance) " is 142.
Long Statement,RayTracer,Camera,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\Camera.cs,CalculateRecursiveColor,The length of the statement  "                    var refractionRay = GetRefractionRay(intersection.Point' intersection.Normal' intersection.ImpactDirection' objectRefractivity); " is 128.
Long Statement,RayTracer,MainWindow,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\MainWindow.xaml.cs,InitializeSceneOptions,The length of the statement  "            var allScenesOptions = typeof(Scene).GetProperties(BindingFlags.Static | BindingFlags.Public).Where(pi => pi.PropertyType == typeof(Scene)); " is 140.
Long Statement,RayTracer,MainWindow,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\MainWindow.xaml.cs,DrawSceneLinesSingleThreaded,The length of the statement  "            scene.Camera.RenderSceneLines(scene' (int)ImageGrid.RenderSize.Width' (int)ImageGrid.RenderSize.Height' OnLineRendered); " is 120.
Long Statement,RayTracer,MainWindow,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\MainWindow.xaml.cs,DrawSceneSingleThreaded,The length of the statement  "            var bitmap = await scene.Camera.RenderSceneToBitmap(scene' (int)ImageGrid.RenderSize.Width' (int)ImageGrid.RenderSize.Height); " is 126.
Long Statement,RayTracer,MainWindow,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\MainWindow.xaml.cs,DrawSceneMultiThreaded,The length of the statement  "            var bitmap = await scene.Camera.RenderSceneToBitmapThreaded(scene' (int)ImageGrid.RenderSize.Width' (int)ImageGrid.RenderSize.Height); " is 134.
Long Statement,RayTracer,MainWindow,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\MainWindow.xaml.cs,DrawSceneLinesMultiThreaded,The length of the statement  "            scene.Camera.RenderSceneLinesThreaded(scene' (int)ImageGrid.RenderSize.Width' (int)ImageGrid.RenderSize.Height' OnLineRendered); " is 128.
Long Statement,RayTracer,MainWindow,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\MainWindow.xaml.cs,GenerateDefaultWriteableBitmap,The length of the statement  "            return new WriteableBitmap((int)ImageGrid.RenderSize.Width' (int)ImageGrid.RenderSize.Height' 96' 96' PixelFormats.Bgra32' null); " is 129.
Long Statement,RayTracer,MainWindow,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\MainWindow.xaml.cs,WriteColorsToBitmap,The length of the statement  "            writeableBitmap.WritePixels(new Int32Rect(0' (int)writeableBitmap.Height - 1 - rowNumber' (int)writeableBitmap.Width' 1)' colors' colors.Length * 4' 0); " is 152.
Long Statement,RayTracer,MainWindow,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\MainWindow.xaml.cs,SaveImageToStream,The length of the statement  "            RenderTargetBitmap renderTargetBitmap = new RenderTargetBitmap((int)MainImage.ActualWidth' (int)MainImage.ActualHeight' 96' 96' PixelFormats.Default); " is 150.
Long Statement,RayTracer.Objects,InfinitePlane,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\Objects\InfinitePlane.cs,TryCalculateIntersection,The length of the statement  "            intersection = new Intersection(intersectionPoint' this.normalDirection' ray.Direction' this' color' (ray.Origin - intersectionPoint).Magnitude()); " is 147.
Long Statement,RayTracer.Objects,Sphere,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\Objects\Sphere.cs,TryCalculateIntersection,The length of the statement  "                intersection = new Intersection(hitPosition' normal' ray.Direction' this' Material.GetDiffuseColorAtCoordinates(uv)' distance); " is 127.
Complex Conditional,RayTracer.Materials,CheckerboardMaterial,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\Materials\CheckerboardMaterial.cs,GetDiffuseColorAtCoordinates,The conditional expression  "(u <= 0.5f && v <= .5f) || (u > 0.5f && v > 0.5f)"  is complex.
Complex Conditional,RayTracer.Materials,CheckerboardMaterial,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\Materials\CheckerboardMaterial.cs,GetSpecularColorAtCoordinates,The conditional expression  "(u <= 0.5f && v <= .5f) || (u > 0.5f && v > 0.5f)"  is complex.
Magic Number,RayTracer,Camera,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\Camera.cs,Camera,The following statement contains a magic number: this.ReflectionDepth = 5;
Magic Number,RayTracer,Camera,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\Camera.cs,RecalculateFieldOfView,The following statement contains a magic number: var screenDistance = 1f / (float)Math.Tan(Util.DegreesToRadians(fieldOfView) / 2f);
Magic Number,RayTracer,Camera,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\Camera.cs,GetReflectionRay,The following statement contains a magic number: Vector3 reflectionDirection = impactDirection + (normal * new Vector3(2 * c1));
Magic Number,RayTracer,Camera,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\Camera.cs,GetReflectionRay,The following statement contains a magic number: return new Ray(origin + reflectionDirection * new Vector3(.01f)' reflectionDirection);
Magic Number,RayTracer,Camera,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\Camera.cs,RenderSceneToBitmapThreaded,The following statement contains a magic number: var task = Task.Run(() =>                      {                          for (int yCounter = 0; yCounter < height; yCounter++)                          {                              var y = yCounter;                              var viewPortX = ((2 * x) / (float)width) - 1;                              var viewPortY = ((2 * y) / (float)height) - 1;                              var color = TraceRayAgainstScene(GetRay(viewPortX' viewPortY)' scene);                              colors[x' y] = color;                          }                      });
Magic Number,RayTracer,Camera,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\Camera.cs,RenderSceneToBitmapThreaded,The following statement contains a magic number: var task = Task.Run(() =>                      {                          for (int yCounter = 0; yCounter < height; yCounter++)                          {                              var y = yCounter;                              var viewPortX = ((2 * x) / (float)width) - 1;                              var viewPortY = ((2 * y) / (float)height) - 1;                              var color = TraceRayAgainstScene(GetRay(viewPortX' viewPortY)' scene);                              colors[x' y] = color;                          }                      });
Magic Number,RayTracer,Camera,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\Camera.cs,RenderSceneToBitmap,The following statement contains a magic number: var task = Task.Run(() =>                  {                        for (int x = 0; x < width; x++)                      {                          for (int y = 0; y < height; y++)                          {                              var viewPortX = ((2 * x) / (float)width) - 1;                              var viewPortY = ((2 * y) / (float)height) - 1;                              var color = TraceRayAgainstScene(GetRay(viewPortX' viewPortY)' scene);                              bitmap.SetPixel(x' height - y - 1' color);                          }                      }                  });
Magic Number,RayTracer,Camera,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\Camera.cs,RenderSceneToBitmap,The following statement contains a magic number: var task = Task.Run(() =>                  {                        for (int x = 0; x < width; x++)                      {                          for (int y = 0; y < height; y++)                          {                              var viewPortX = ((2 * x) / (float)width) - 1;                              var viewPortY = ((2 * y) / (float)height) - 1;                              var color = TraceRayAgainstScene(GetRay(viewPortX' viewPortY)' scene);                              bitmap.SetPixel(x' height - y - 1' color);                          }                      }                  });
Magic Number,RayTracer,Camera,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\Camera.cs,RenderSceneLinesThreaded,The following statement contains a magic number: Task.Run(() =>                  {                      for (int xCounter = 0; xCounter < width; xCounter++)                      {                          var x = xCounter;                          var viewPortX = ((2 * x) / (float)width) - 1;                          var viewPortY = ((2 * y) / (float)height) - 1;                          var color = TraceRayAgainstScene(GetRay(viewPortX' viewPortY)' scene);                          colors[x] = color;                      }                      callback(y' colors);                  });
Magic Number,RayTracer,Camera,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\Camera.cs,RenderSceneLinesThreaded,The following statement contains a magic number: Task.Run(() =>                  {                      for (int xCounter = 0; xCounter < width; xCounter++)                      {                          var x = xCounter;                          var viewPortX = ((2 * x) / (float)width) - 1;                          var viewPortY = ((2 * y) / (float)height) - 1;                          var color = TraceRayAgainstScene(GetRay(viewPortX' viewPortY)' scene);                          colors[x] = color;                      }                      callback(y' colors);                  });
Magic Number,RayTracer,Camera,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\Camera.cs,RenderSceneLines,The following statement contains a magic number: Task.Run(() => // Even single-threaded method should run in the background to avoid freezing UI.                  {                      for (int y = height - 1; y >= 0; y--)                      {                          var colors = new Color[width];                          for (int x = 0; x < width; x++)                          {                              var viewPortX = ((2 * x) / (float)width) - 1;                              var viewPortY = ((2 * y) / (float)height) - 1;                              var color = TraceRayAgainstScene(GetRay(viewPortX' viewPortY)' scene);                              colors[x] = color;                          }                          callback(y' colors);                      }                  });
Magic Number,RayTracer,Camera,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\Camera.cs,RenderSceneLines,The following statement contains a magic number: Task.Run(() => // Even single-threaded method should run in the background to avoid freezing UI.                  {                      for (int y = height - 1; y >= 0; y--)                      {                          var colors = new Color[width];                          for (int x = 0; x < width; x++)                          {                              var viewPortX = ((2 * x) / (float)width) - 1;                              var viewPortY = ((2 * y) / (float)height) - 1;                              var color = TraceRayAgainstScene(GetRay(viewPortX' viewPortY)' scene);                              colors[x] = color;                          }                          callback(y' colors);                      }                  });
Magic Number,RayTracer,Camera,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\Camera.cs,CalculateRecursiveColor,The following statement contains a magic number: var lightPassThrough = Util.Lerp(.25f' 1.0f' transparency);
Magic Number,RayTracer,Color,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\Color.cs,Average,The following statement contains a magic number: return new Color((first.backingVector + second.backingVector) * .5f);
Magic Number,RayTracer,Color,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\Color.cs,ToBGRA32,The following statement contains a magic number: byte r = (byte)(255 * color.R);
Magic Number,RayTracer,Color,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\Color.cs,ToBGRA32,The following statement contains a magic number: byte g = (byte)(255 * color.G);
Magic Number,RayTracer,Color,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\Color.cs,ToBGRA32,The following statement contains a magic number: byte b = (byte)(255 * color.B);
Magic Number,RayTracer,Color,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\Color.cs,ToBGRA32,The following statement contains a magic number: byte a = (byte)(255 * color.A);
Magic Number,RayTracer,Color,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\Color.cs,ToBGRA32,The following statement contains a magic number: return (r << 16) | (g << 8) | (b << 0) | (a << 24);
Magic Number,RayTracer,Color,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\Color.cs,ToBGRA32,The following statement contains a magic number: return (r << 16) | (g << 8) | (b << 0) | (a << 24);
Magic Number,RayTracer,Color,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\Color.cs,ToBGRA32,The following statement contains a magic number: return (r << 16) | (g << 8) | (b << 0) | (a << 24);
Magic Number,RayTracer,MainWindow,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.ReflectionDepth = 5;
Magic Number,RayTracer,MainWindow,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.FieldOfView = 120;
Magic Number,RayTracer,MainWindow,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.Width = 640;
Magic Number,RayTracer,MainWindow,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.Height = 480;
Magic Number,RayTracer,MainWindow,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: Task.Run(() =>                  {                      Task.Delay(100).Wait();                      this.InvokeOnApplicationDispatcher(() =>                          {                              DrawSceneLinesMultiThreaded();                          });                  });
Magic Number,RayTracer,MainWindow,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\MainWindow.xaml.cs,GenerateDefaultWriteableBitmap,The following statement contains a magic number: return new WriteableBitmap((int)ImageGrid.RenderSize.Width' (int)ImageGrid.RenderSize.Height' 96' 96' PixelFormats.Bgra32' null);
Magic Number,RayTracer,MainWindow,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\MainWindow.xaml.cs,GenerateDefaultWriteableBitmap,The following statement contains a magic number: return new WriteableBitmap((int)ImageGrid.RenderSize.Width' (int)ImageGrid.RenderSize.Height' 96' 96' PixelFormats.Bgra32' null);
Magic Number,RayTracer,MainWindow,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\MainWindow.xaml.cs,WriteColorsToBitmap,The following statement contains a magic number: writeableBitmap.WritePixels(new Int32Rect(0' (int)writeableBitmap.Height - 1 - rowNumber' (int)writeableBitmap.Width' 1)' colors' colors.Length * 4' 0);
Magic Number,RayTracer,MainWindow,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\MainWindow.xaml.cs,SaveImageToStream,The following statement contains a magic number: RenderTargetBitmap renderTargetBitmap = new RenderTargetBitmap((int)MainImage.ActualWidth' (int)MainImage.ActualHeight' 96' 96' PixelFormats.Default);
Magic Number,RayTracer,MainWindow,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\MainWindow.xaml.cs,SaveImageToStream,The following statement contains a magic number: RenderTargetBitmap renderTargetBitmap = new RenderTargetBitmap((int)MainImage.ActualWidth' (int)MainImage.ActualHeight' 96' 96' PixelFormats.Default);
Magic Number,RayTracer,MainWindow,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.MyMainWindow = ((RayTracer.MainWindow)(target));              return;              case 2:                            #line 10 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.SaveButtonPressed);                            #line default              #line hidden              return;              case 3:                            #line 12 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.OnExitPressed);                            #line default              #line hidden              return;              case 4:              this.ScenesMenuItem = ((System.Windows.Controls.MenuItem)(target));              return;              case 5:                            #line 30 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.OnRenderPressed);                            #line default              #line hidden              return;              case 6:              this.ImageGrid = ((System.Windows.Controls.Grid)(target));              return;              case 7:              this.MainImage = ((System.Windows.Controls.Image)(target));              return;              case 8:              this.RenderTimeTextBlock = ((System.Windows.Controls.TextBlock)(target));              return;              }
Magic Number,RayTracer,MainWindow,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.MyMainWindow = ((RayTracer.MainWindow)(target));              return;              case 2:                            #line 10 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.SaveButtonPressed);                            #line default              #line hidden              return;              case 3:                            #line 12 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.OnExitPressed);                            #line default              #line hidden              return;              case 4:              this.ScenesMenuItem = ((System.Windows.Controls.MenuItem)(target));              return;              case 5:                            #line 30 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.OnRenderPressed);                            #line default              #line hidden              return;              case 6:              this.ImageGrid = ((System.Windows.Controls.Grid)(target));              return;              case 7:              this.MainImage = ((System.Windows.Controls.Image)(target));              return;              case 8:              this.RenderTimeTextBlock = ((System.Windows.Controls.TextBlock)(target));              return;              }
Magic Number,RayTracer,MainWindow,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.MyMainWindow = ((RayTracer.MainWindow)(target));              return;              case 2:                            #line 10 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.SaveButtonPressed);                            #line default              #line hidden              return;              case 3:                            #line 12 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.OnExitPressed);                            #line default              #line hidden              return;              case 4:              this.ScenesMenuItem = ((System.Windows.Controls.MenuItem)(target));              return;              case 5:                            #line 30 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.OnRenderPressed);                            #line default              #line hidden              return;              case 6:              this.ImageGrid = ((System.Windows.Controls.Grid)(target));              return;              case 7:              this.MainImage = ((System.Windows.Controls.Image)(target));              return;              case 8:              this.RenderTimeTextBlock = ((System.Windows.Controls.TextBlock)(target));              return;              }
Magic Number,RayTracer,MainWindow,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.MyMainWindow = ((RayTracer.MainWindow)(target));              return;              case 2:                            #line 10 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.SaveButtonPressed);                            #line default              #line hidden              return;              case 3:                            #line 12 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.OnExitPressed);                            #line default              #line hidden              return;              case 4:              this.ScenesMenuItem = ((System.Windows.Controls.MenuItem)(target));              return;              case 5:                            #line 30 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.OnRenderPressed);                            #line default              #line hidden              return;              case 6:              this.ImageGrid = ((System.Windows.Controls.Grid)(target));              return;              case 7:              this.MainImage = ((System.Windows.Controls.Image)(target));              return;              case 8:              this.RenderTimeTextBlock = ((System.Windows.Controls.TextBlock)(target));              return;              }
Magic Number,RayTracer,MainWindow,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.MyMainWindow = ((RayTracer.MainWindow)(target));              return;              case 2:                            #line 10 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.SaveButtonPressed);                            #line default              #line hidden              return;              case 3:                            #line 12 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.OnExitPressed);                            #line default              #line hidden              return;              case 4:              this.ScenesMenuItem = ((System.Windows.Controls.MenuItem)(target));              return;              case 5:                            #line 30 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.OnRenderPressed);                            #line default              #line hidden              return;              case 6:              this.ImageGrid = ((System.Windows.Controls.Grid)(target));              return;              case 7:              this.MainImage = ((System.Windows.Controls.Image)(target));              return;              case 8:              this.RenderTimeTextBlock = ((System.Windows.Controls.TextBlock)(target));              return;              }
Magic Number,RayTracer,MainWindow,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.MyMainWindow = ((RayTracer.MainWindow)(target));              return;              case 2:                            #line 10 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.SaveButtonPressed);                            #line default              #line hidden              return;              case 3:                            #line 12 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.OnExitPressed);                            #line default              #line hidden              return;              case 4:              this.ScenesMenuItem = ((System.Windows.Controls.MenuItem)(target));              return;              case 5:                            #line 30 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.OnRenderPressed);                            #line default              #line hidden              return;              case 6:              this.ImageGrid = ((System.Windows.Controls.Grid)(target));              return;              case 7:              this.MainImage = ((System.Windows.Controls.Image)(target));              return;              case 8:              this.RenderTimeTextBlock = ((System.Windows.Controls.TextBlock)(target));              return;              }
Magic Number,RayTracer,MainWindow,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.MyMainWindow = ((RayTracer.MainWindow)(target));              return;              case 2:                            #line 10 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.SaveButtonPressed);                            #line default              #line hidden              return;              case 3:                            #line 12 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.OnExitPressed);                            #line default              #line hidden              return;              case 4:              this.ScenesMenuItem = ((System.Windows.Controls.MenuItem)(target));              return;              case 5:                            #line 30 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.OnRenderPressed);                            #line default              #line hidden              return;              case 6:              this.ImageGrid = ((System.Windows.Controls.Grid)(target));              return;              case 7:              this.MainImage = ((System.Windows.Controls.Image)(target));              return;              case 8:              this.RenderTimeTextBlock = ((System.Windows.Controls.TextBlock)(target));              return;              }
Magic Number,RayTracer,Util,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\Util.cs,DegreesToRadians,The following statement contains a magic number: var radians = (float)((angleInDegrees / 360f) * 2 * Math.PI);
Magic Number,RayTracer,Util,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\Util.cs,DegreesToRadians,The following statement contains a magic number: var radians = (float)((angleInDegrees / 360f) * 2 * Math.PI);
Magic Number,RayTracer.Materials,CheckerboardMaterial,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\Materials\CheckerboardMaterial.cs,GetDiffuseColorAtCoordinates,The following statement contains a magic number: (u <= 0.5f && v <= .5f) || (u > 0.5f && v > 0.5f)
Magic Number,RayTracer.Materials,CheckerboardMaterial,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\Materials\CheckerboardMaterial.cs,GetDiffuseColorAtCoordinates,The following statement contains a magic number: (u <= 0.5f && v <= .5f) || (u > 0.5f && v > 0.5f)
Magic Number,RayTracer.Materials,CheckerboardMaterial,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\Materials\CheckerboardMaterial.cs,GetDiffuseColorAtCoordinates,The following statement contains a magic number: (u <= 0.5f && v <= .5f) || (u > 0.5f && v > 0.5f)
Magic Number,RayTracer.Materials,CheckerboardMaterial,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\Materials\CheckerboardMaterial.cs,GetDiffuseColorAtCoordinates,The following statement contains a magic number: (u <= 0.5f && v <= .5f) || (u > 0.5f && v > 0.5f)
Magic Number,RayTracer.Materials,CheckerboardMaterial,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\Materials\CheckerboardMaterial.cs,GetSpecularColorAtCoordinates,The following statement contains a magic number: (u <= 0.5f && v <= .5f) || (u > 0.5f && v > 0.5f)
Magic Number,RayTracer.Materials,CheckerboardMaterial,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\Materials\CheckerboardMaterial.cs,GetSpecularColorAtCoordinates,The following statement contains a magic number: (u <= 0.5f && v <= .5f) || (u > 0.5f && v > 0.5f)
Magic Number,RayTracer.Materials,CheckerboardMaterial,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\Materials\CheckerboardMaterial.cs,GetSpecularColorAtCoordinates,The following statement contains a magic number: (u <= 0.5f && v <= .5f) || (u > 0.5f && v > 0.5f)
Magic Number,RayTracer.Materials,CheckerboardMaterial,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\Materials\CheckerboardMaterial.cs,GetSpecularColorAtCoordinates,The following statement contains a magic number: (u <= 0.5f && v <= .5f) || (u > 0.5f && v > 0.5f)
Magic Number,RayTracer.Materials,CheckerboardMaterial,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\Materials\CheckerboardMaterial.cs,GetSpecularColorAtCoordinates,The following statement contains a magic number: return Color.Lerp(color' Color.White' Glossiness / 10.0f);
Magic Number,RayTracer.Materials,SolidMaterial,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\Materials\SolidMaterial.cs,SolidMaterial,The following statement contains a magic number: this.SpecularColor = Color.Lerp(this.DiffuseColor' Color.White' this.Glossiness / 10.0f);
Magic Number,RayTracer.Objects,InfinitePlane,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\Objects\InfinitePlane.cs,TryCalculateIntersection,The following statement contains a magic number: Math.Abs(D) <= .0005f
Magic Number,RayTracer.Objects,InfinitePlane,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\Objects\InfinitePlane.cs,GetUVCoordinate,The following statement contains a magic number: u += cellWidth / 2f;
Magic Number,RayTracer.Objects,InfinitePlane,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\Objects\InfinitePlane.cs,GetUVCoordinate,The following statement contains a magic number: v += cellWidth / 2f;
Magic Number,RayTracer.Objects,Quad,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\Objects\Quad.cs,WithinArea,The following statement contains a magic number: return uLength.Magnitude() <= width / 2f && vLength.Magnitude() <= height / 2f;
Magic Number,RayTracer.Objects,Quad,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\Objects\Quad.cs,WithinArea,The following statement contains a magic number: return uLength.Magnitude() <= width / 2f && vLength.Magnitude() <= height / 2f;
Magic Number,RayTracer.Objects,Sphere,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\Objects\Sphere.cs,GetUVCoordinate,The following statement contains a magic number: float u = (float)(0.5 + ((Math.Atan2(toCenter.Z' toCenter.X)) / (2 * Math.PI)));
Magic Number,RayTracer.Objects,Sphere,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\Objects\Sphere.cs,GetUVCoordinate,The following statement contains a magic number: float u = (float)(0.5 + ((Math.Atan2(toCenter.Z' toCenter.X)) / (2 * Math.PI)));
Magic Number,RayTracer.Objects,Sphere,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\Objects\Sphere.cs,GetUVCoordinate,The following statement contains a magic number: float v = (float)(0.5 - (Math.Asin(toCenter.Y)) / Math.PI);
Missing Default,RayTracer,MainWindow,D:\research\architectureSmells\repos\Microsoft_dotnetsamples\System.Numerics\SIMD\RayTracer\MainWindow.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.MyMainWindow = ((RayTracer.MainWindow)(target));              return;              case 2:                            #line 10 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.SaveButtonPressed);                            #line default              #line hidden              return;              case 3:                            #line 12 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.OnExitPressed);                            #line default              #line hidden              return;              case 4:              this.ScenesMenuItem = ((System.Windows.Controls.MenuItem)(target));              return;              case 5:                            #line 30 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.OnRenderPressed);                            #line default              #line hidden              return;              case 6:              this.ImageGrid = ((System.Windows.Controls.Grid)(target));              return;              case 7:              this.MainImage = ((System.Windows.Controls.Image)(target));              return;              case 8:              this.RenderTimeTextBlock = ((System.Windows.Controls.TextBlock)(target));              return;              }
