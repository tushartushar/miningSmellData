Implementation smell,Namespace,Class,File,Method,Description
Long Method,bikove,BullsAndCowsNumber,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Bulls-and-Cows\Bulls-and-Cows-2\BullsAndCowsNumber.cs,TryToGuess,The method has 117 lines of code.
Complex Method,bikove,BullsAndCowsNumber,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Bulls-and-Cows\Bulls-and-Cows-2\BullsAndCowsNumber.cs,TryToGuess,Cyclomatic complexity of the method is 21
Complex Method,bikove,Program,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Bulls-and-Cows\Bulls-and-Cows-2\Program.cs,Main,Cyclomatic complexity of the method is 8
Long Statement,bikove,Program,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Bulls-and-Cows\Bulls-and-Cows-2\Program.cs,Main,The length of the statement  "                                        Console.Write(NumberGuessedWithoutCheats' bullsAndCowsNumber.GuessesCount' bullsAndCowsNumber.GuessesCount == 1 ? "attempt" : "attempts"); " is 138.
Empty Catch Block,bikove,Scoreboard,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Bulls-and-Cows\Bulls-and-Cows-2\ScoreBoard.cs,Scoreboard,The method has an empty catch block.
Empty Catch Block,bikove,Scoreboard,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Bulls-and-Cows\Bulls-and-Cows-2\ScoreBoard.cs,SaveToFile,The method has an empty catch block.
Magic Number,bikove,BullsAndCowsNumber,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Bulls-and-Cows\Bulls-and-Cows-2\BullsAndCowsNumber.cs,BullsAndCowsNumber,The following statement contains a magic number: cheatNumber = new char[4] { 'X'' 'X'' 'X'' 'X' };
Magic Number,bikove,BullsAndCowsNumber,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Bulls-and-Cows\Bulls-and-Cows-2\BullsAndCowsNumber.cs,GetCheat,The following statement contains a magic number: int randPossition = rrr.Next(0' 4);
Magic Number,bikove,BullsAndCowsNumber,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Bulls-and-Cows\Bulls-and-Cows-2\BullsAndCowsNumber.cs,GetCheat,The following statement contains a magic number: switch (randPossition)  	                    {                              case 0: cheatNumber[randPossition] = (char)(FirstDigit + '0'); break;                              case 1: cheatNumber[randPossition] = (char)(SecondDigit + '0'); break;                              case 2: cheatNumber[randPossition] = (char)(ThirdDigit + '0'); break;                              case 3: cheatNumber[randPossition] = (char)(FourthDigit + '0'); break;  	                    }
Magic Number,bikove,BullsAndCowsNumber,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Bulls-and-Cows\Bulls-and-Cows-2\BullsAndCowsNumber.cs,GetCheat,The following statement contains a magic number: switch (randPossition)  	                    {                              case 0: cheatNumber[randPossition] = (char)(FirstDigit + '0'); break;                              case 1: cheatNumber[randPossition] = (char)(SecondDigit + '0'); break;                              case 2: cheatNumber[randPossition] = (char)(ThirdDigit + '0'); break;                              case 3: cheatNumber[randPossition] = (char)(FourthDigit + '0'); break;  	                    }
Magic Number,bikove,BullsAndCowsNumber,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Bulls-and-Cows\Bulls-and-Cows-2\BullsAndCowsNumber.cs,GetCheat,The following statement contains a magic number: this.cheats < 4
Magic Number,bikove,BullsAndCowsNumber,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Bulls-and-Cows\Bulls-and-Cows-2\BullsAndCowsNumber.cs,TryToGuess,The following statement contains a magic number: string.IsNullOrEmpty(number) || number.Trim().Length != 4
Magic Number,bikove,BullsAndCowsNumber,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Bulls-and-Cows\Bulls-and-Cows-2\BullsAndCowsNumber.cs,TryToGuess,The following statement contains a magic number: return TryToGuess(number[0] - '0'' number[1] - '0'' number[2] - '0'' number[3] - '0');
Magic Number,bikove,BullsAndCowsNumber,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Bulls-and-Cows\Bulls-and-Cows-2\BullsAndCowsNumber.cs,TryToGuess,The following statement contains a magic number: return TryToGuess(number[0] - '0'' number[1] - '0'' number[2] - '0'' number[3] - '0');
Magic Number,bikove,BullsAndCowsNumber,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Bulls-and-Cows\Bulls-and-Cows-2\BullsAndCowsNumber.cs,TryToGuess,The following statement contains a magic number: firstDigit < 0 || firstDigit > 9
Magic Number,bikove,BullsAndCowsNumber,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Bulls-and-Cows\Bulls-and-Cows-2\BullsAndCowsNumber.cs,TryToGuess,The following statement contains a magic number: secondDigit < 0 || secondDigit > 9
Magic Number,bikove,BullsAndCowsNumber,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Bulls-and-Cows\Bulls-and-Cows-2\BullsAndCowsNumber.cs,TryToGuess,The following statement contains a magic number: thirdDigit < 0 || thirdDigit > 9
Magic Number,bikove,BullsAndCowsNumber,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Bulls-and-Cows\Bulls-and-Cows-2\BullsAndCowsNumber.cs,TryToGuess,The following statement contains a magic number: fourthDigit < 0 || fourthDigit > 9
Magic Number,bikove,BullsAndCowsNumber,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Bulls-and-Cows\Bulls-and-Cows-2\BullsAndCowsNumber.cs,GenerateRandomNumbers,The following statement contains a magic number: this.FirstDigit = rrr.Next(0' 10);
Magic Number,bikove,BullsAndCowsNumber,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Bulls-and-Cows\Bulls-and-Cows-2\BullsAndCowsNumber.cs,GenerateRandomNumbers,The following statement contains a magic number: this.SecondDigit = rrr.Next(0' 10);
Magic Number,bikove,BullsAndCowsNumber,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Bulls-and-Cows\Bulls-and-Cows-2\BullsAndCowsNumber.cs,GenerateRandomNumbers,The following statement contains a magic number: this.ThirdDigit = rrr.Next(0' 10);
Magic Number,bikove,BullsAndCowsNumber,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Bulls-and-Cows\Bulls-and-Cows-2\BullsAndCowsNumber.cs,GenerateRandomNumbers,The following statement contains a magic number: this.FourthDigit = rrr.Next(0' 10);
Magic Number,bikove,gameScore,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Bulls-and-Cows\Bulls-and-Cows-2\gameScore.cs,Deserialize,The following statement contains a magic number: dataAsStringArray.Length != 2
Magic Number,bikove,Program,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Bulls-and-Cows\Bulls-and-Cows-2\Program.cs,Main,The following statement contains a magic number: switch (command)                  {                      case "top":                          {                              Console.Write(scoreBoard);                              break;                          }                      case "restart":                          {                              Console.WriteLine();                              Console.WriteLine(WelcomeMessage);                              bullsAndCowsNumber = new BullsAndCowsNumber();                              break;                          }                      case "help":                          {                              Console.WriteLine("The number looks like {0}."' bullsAndCowsNumber.GetCheat());                              break;                          }                      default:                          {                              try                              {                                  rezultat guessResult = bullsAndCowsNumber.TryToGuess(command);                                  if (guessResult.Bulls == 4)                                  {                                      if (bullsAndCowsNumber.cheats == 0)                                      {                                          Console.Write(NumberGuessedWithoutCheats' bullsAndCowsNumber.GuessesCount' bullsAndCowsNumber.GuessesCount == 1 ? "attempt" : "attempts");                                          string name = Console.ReadLine();                                          scoreBoard.AddScore(name' bullsAndCowsNumber.GuessesCount);                                      }                                      else                                      {                                          Console.WriteLine(NumberGuessedWithCheats'                                              bullsAndCowsNumber.GuessesCount' bullsAndCowsNumber.GuessesCount == 1 ? "attempt" : "attempts"'                                              bullsAndCowsNumber.cheats' bullsAndCowsNumber.cheats == 1? "cheat" : "cheats");                                      }                                      Console.Write(scoreBoard);                                      Console.WriteLine();                                      Console.WriteLine(WelcomeMessage);                                      bullsAndCowsNumber = new BullsAndCowsNumber();                                  }                                  else                                  {                                      Console.WriteLine("{0} {1}"' WrongNumberMessage' guessResult);                                  }                              }                              catch (ArgumentException)                              {                                  Console.WriteLine(InvalidCommandMessage);                              }                              break;                          }                  }
Missing Default,bikove,BullsAndCowsNumber,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Bulls-and-Cows\Bulls-and-Cows-2\BullsAndCowsNumber.cs,GetCheat,The following switch statement is missing a default case: switch (randPossition)  	                    {                              case 0: cheatNumber[randPossition] = (char)(FirstDigit + '0'); break;                              case 1: cheatNumber[randPossition] = (char)(SecondDigit + '0'); break;                              case 2: cheatNumber[randPossition] = (char)(ThirdDigit + '0'); break;                              case 3: cheatNumber[randPossition] = (char)(FourthDigit + '0'); break;  	                    }
