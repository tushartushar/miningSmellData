Implementation smell,Namespace,Class,File,Method,Description
Complex Method,GameFifteen,GameFifteen,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Game-Fifteen\Game-Fifteen-2\GameFifteen.cs,ExecuteComand,Cyclomatic complexity of the method is 10
Complex Conditional,GameFifteen,GameFifteen,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Game-Fifteen\Game-Fifteen-2\GameFifteen.cs,IfOutOfMAtrix,The conditional expression  "row >= MatrixLength || row < 0 || col < 0 || col >= MatrixLength"  is complex.
Magic Number,GameFifteen,GameFifteen,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Game-Fifteen\Game-Fifteen-2\GameFifteen.cs,GenerateMatrix,The following statement contains a magic number: int ramizeMoves = r.Next(10' 21);
Magic Number,GameFifteen,GameFifteen,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Game-Fifteen\Game-Fifteen-2\GameFifteen.cs,GenerateMatrix,The following statement contains a magic number: int ramizeMoves = r.Next(10' 21);
Magic Number,GameFifteen,GameFifteen,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Game-Fifteen\Game-Fifteen-2\GameFifteen.cs,GenerateMatrix,The following statement contains a magic number: int randomDirection = r.Next(4);
Magic Number,GameFifteen,GameFifteen,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Game-Fifteen\Game-Fifteen-2\GameFifteen.cs,MoveEmptyCell,The following statement contains a magic number: currentMatrix[newRow' newCol] = 16;
Magic Number,GameFifteen,GameFifteen,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Game-Fifteen\Game-Fifteen-2\GameFifteen.cs,PrintMatrix,The following statement contains a magic number: currentMatrix[i' j] <= 9
Magic Number,GameFifteen,GameFifteen,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Game-Fifteen\Game-Fifteen-2\GameFifteen.cs,GameWon,The following statement contains a magic number: scorersCount == 5
Magic Number,GameFifteen,GameFifteen,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Game-Fifteen\Game-Fifteen-2\GameFifteen.cs,ExecuteComand,The following statement contains a magic number: switch (inputString)              {                  case "restart":                      moves = 0;                      GenerateMatrix();                      PrintWelcome();                      PrintMatrix();                      break;                    case "top":                      pe4at();                      PrintMatrix();                      break;                    default:                      int number = 0;                      bool isNumber = int.TryParse(inputString' out number);                      if (!isNumber)                      {                          Console.WriteLine("Invalid comand!");                          break;                      }                      if (number < 16 && number > 0)                      {                          int newRow = 0;                          int newCol = 0;                          for (int i = 0; i < 4; i++)                          {                              newRow = emptyRow + dirR[i];                              newCol = emptyCol + dirC[i];                              if (IfOutOfMAtrix(newRow' newCol))                              {                                  if (i == 3)                                  {                                      Console.WriteLine("Invalid move");                                  }                                  continue;                              }                              if (currentMatrix[newRow' newCol] == number)                              {                                  MoveEmptyCell(newRow' newCol);                                  moves++;                                  PrintMatrix();                                  break;                              }                              if (i == 3)                              {                                  Console.WriteLine("Invalid move");                              }                          }                      }                      else                      {                          Console.WriteLine("Invalid move");                          break;                      }                      break;              }
Magic Number,GameFifteen,GameFifteen,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Game-Fifteen\Game-Fifteen-2\GameFifteen.cs,ExecuteComand,The following statement contains a magic number: switch (inputString)              {                  case "restart":                      moves = 0;                      GenerateMatrix();                      PrintWelcome();                      PrintMatrix();                      break;                    case "top":                      pe4at();                      PrintMatrix();                      break;                    default:                      int number = 0;                      bool isNumber = int.TryParse(inputString' out number);                      if (!isNumber)                      {                          Console.WriteLine("Invalid comand!");                          break;                      }                      if (number < 16 && number > 0)                      {                          int newRow = 0;                          int newCol = 0;                          for (int i = 0; i < 4; i++)                          {                              newRow = emptyRow + dirR[i];                              newCol = emptyCol + dirC[i];                              if (IfOutOfMAtrix(newRow' newCol))                              {                                  if (i == 3)                                  {                                      Console.WriteLine("Invalid move");                                  }                                  continue;                              }                              if (currentMatrix[newRow' newCol] == number)                              {                                  MoveEmptyCell(newRow' newCol);                                  moves++;                                  PrintMatrix();                                  break;                              }                              if (i == 3)                              {                                  Console.WriteLine("Invalid move");                              }                          }                      }                      else                      {                          Console.WriteLine("Invalid move");                          break;                      }                      break;              }
Magic Number,GameFifteen,GameFifteen,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Game-Fifteen\Game-Fifteen-2\GameFifteen.cs,ExecuteComand,The following statement contains a magic number: switch (inputString)              {                  case "restart":                      moves = 0;                      GenerateMatrix();                      PrintWelcome();                      PrintMatrix();                      break;                    case "top":                      pe4at();                      PrintMatrix();                      break;                    default:                      int number = 0;                      bool isNumber = int.TryParse(inputString' out number);                      if (!isNumber)                      {                          Console.WriteLine("Invalid comand!");                          break;                      }                      if (number < 16 && number > 0)                      {                          int newRow = 0;                          int newCol = 0;                          for (int i = 0; i < 4; i++)                          {                              newRow = emptyRow + dirR[i];                              newCol = emptyCol + dirC[i];                              if (IfOutOfMAtrix(newRow' newCol))                              {                                  if (i == 3)                                  {                                      Console.WriteLine("Invalid move");                                  }                                  continue;                              }                              if (currentMatrix[newRow' newCol] == number)                              {                                  MoveEmptyCell(newRow' newCol);                                  moves++;                                  PrintMatrix();                                  break;                              }                              if (i == 3)                              {                                  Console.WriteLine("Invalid move");                              }                          }                      }                      else                      {                          Console.WriteLine("Invalid move");                          break;                      }                      break;              }
Magic Number,GameFifteen,GameFifteen,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Game-Fifteen\Game-Fifteen-2\GameFifteen.cs,ExecuteComand,The following statement contains a magic number: switch (inputString)              {                  case "restart":                      moves = 0;                      GenerateMatrix();                      PrintWelcome();                      PrintMatrix();                      break;                    case "top":                      pe4at();                      PrintMatrix();                      break;                    default:                      int number = 0;                      bool isNumber = int.TryParse(inputString' out number);                      if (!isNumber)                      {                          Console.WriteLine("Invalid comand!");                          break;                      }                      if (number < 16 && number > 0)                      {                          int newRow = 0;                          int newCol = 0;                          for (int i = 0; i < 4; i++)                          {                              newRow = emptyRow + dirR[i];                              newCol = emptyCol + dirC[i];                              if (IfOutOfMAtrix(newRow' newCol))                              {                                  if (i == 3)                                  {                                      Console.WriteLine("Invalid move");                                  }                                  continue;                              }                              if (currentMatrix[newRow' newCol] == number)                              {                                  MoveEmptyCell(newRow' newCol);                                  moves++;                                  PrintMatrix();                                  break;                              }                              if (i == 3)                              {                                  Console.WriteLine("Invalid move");                              }                          }                      }                      else                      {                          Console.WriteLine("Invalid move");                          break;                      }                      break;              }
