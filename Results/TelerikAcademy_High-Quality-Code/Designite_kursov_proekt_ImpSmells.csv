Implementation smell,Namespace,Class,File,Method,Description
Long Method,kursov_proekt,Program,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Labyrinth\Labyrinth-3\kursov_proekt.cs,TypeCommand,The method has 198 lines of code.
Complex Method,kursov_proekt,Program,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Labyrinth\Labyrinth-3\kursov_proekt.cs,TypeCommand,Cyclomatic complexity of the method is 29
Long Statement,kursov_proekt,Program,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Labyrinth\Labyrinth-3\kursov_proekt.cs,Main,The length of the statement  "                Console.WriteLine("Welcome to \"Labyrinth\" game. Please try to escape. Use 'top' to view the top \nscoreboard''restart' to start a new game and 'exit' to quit the game.\n "); " is 175.
Long Statement,kursov_proekt,Program,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Labyrinth\Labyrinth-3\kursov_proekt.cs,SolutionChecker,The length of the statement  "            if (labyrinth[x + 1' y] == "x" && labyrinth[x' y + 1] == "x" && labyrinth[x - 1' y] == "x" && labyrinth[x' y - 1] == "x") " is 121.
Complex Conditional,kursov_proekt,Program,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Labyrinth\Labyrinth-3\kursov_proekt.cs,SolutionChecker,The conditional expression  "labyrinth[x + 1' y] == "x" && labyrinth[x' y + 1] == "x" && labyrinth[x - 1' y] == "x" && labyrinth[x' y - 1] == "x""  is complex.
Magic Number,kursov_proekt,Program,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Labyrinth\Labyrinth-3\kursov_proekt.cs,Main,The following statement contains a magic number: positionX = positionY = 3;
Magic Number,kursov_proekt,Program,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Labyrinth\Labyrinth-3\kursov_proekt.cs,Main,The following statement contains a magic number: string['] labyrinth = new string[7' 7];
Magic Number,kursov_proekt,Program,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Labyrinth\Labyrinth-3\kursov_proekt.cs,Main,The following statement contains a magic number: string['] labyrinth = new string[7' 7];
Magic Number,kursov_proekt,Program,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Labyrinth\Labyrinth-3\kursov_proekt.cs,AddScore,The following statement contains a magic number: scores.Remove(scores[4]);
Magic Number,kursov_proekt,Program,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Labyrinth\Labyrinth-3\kursov_proekt.cs,AddScore,The following statement contains a magic number: scores[4].moves > currentMoves
Magic Number,kursov_proekt,Program,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Labyrinth\Labyrinth-3\kursov_proekt.cs,AddScore,The following statement contains a magic number: scores.Count == 5
Magic Number,kursov_proekt,Program,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Labyrinth\Labyrinth-3\kursov_proekt.cs,AddScore,The following statement contains a magic number: scores.Count < 5
Magic Number,kursov_proekt,Program,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Labyrinth\Labyrinth-3\kursov_proekt.cs,TypeCommand,The following statement contains a magic number: switch (i)                  {                      case "d":                              if (labyrinth[x + 1' y] == "-")                          {                              labyrinth[x' y] = "-";                              labyrinth[x + 1' y] = "*";                              x++;                              currentMoves++;                          }                          else                          {                              Console.WriteLine("\nInvalid move! \n ");                            }                            if (x == 6)                          {                                  Console.WriteLine("\nCongratulations you escaped with {0} moves.\n"' currentMoves);                              flag_temp = false;                                flag = true;                          }                            DisplayLabyrinth(labyrinth);                                  break;                        case "D":                          if (labyrinth[x + 1' y] == "-")                          {                              labyrinth[x' y] = "-";                              labyrinth[x + 1' y] = "*";                              x++;                              currentMoves++;                          }                          else                          {                              Console.WriteLine("\nInvalid move! \n ");                            }                            if (x == 6)                          {                              Console.WriteLine("\nCongratulations you escaped with {0} moves.\n"' currentMoves);                              flag_temp = false;                              flag = true;                          }                            DisplayLabyrinth(labyrinth);                            break;                              case "u":                          if (labyrinth[x - 1' y] == "-")                          {                              labyrinth[x' y] = "-";                              labyrinth[x - 1' y] = "*";                              x--;                              currentMoves++;                          }                          else                          {                              Console.WriteLine("\nInvalid move! \n ");                            }                            if (x == 0)                          {                              Console.WriteLine("\nCongratulations you escaped with {0} moves.\n"' currentMoves);                              flag_temp = false;                              flag = true;                          }                            DisplayLabyrinth(labyrinth);                              break;                      case "U":                          if (labyrinth[x - 1' y] == "-")                          {                              labyrinth[x' y] = "-";                              labyrinth[x - 1' y] = "*";                              x--;                              currentMoves++;                          }                          else                          {                              Console.WriteLine("\nInvalid move! \n ");                            }                            if (x == 0)                          {                              Console.WriteLine("\nCongratulations you escaped with {0} moves.\n"' currentMoves);                              flag_temp = false;                              flag = true;                          }                            DisplayLabyrinth(labyrinth);                              break;                      case "r":                            if (labyrinth[x' y + 1] == "-")                          {                              labyrinth[x' y] = "-";                              labyrinth[x' y + 1] = "*";                              y++;                              currentMoves++;                          }                          else                          {                              Console.WriteLine("\nInvalid move! \n ");                            }                            if (y == 6)                          {                              Console.WriteLine("\nCongratulations you escaped with {0} moves.\n"' currentMoves);                              flag_temp = false;                              flag = true;                          }                            DisplayLabyrinth(labyrinth);                            break;                      case "R":                            if (labyrinth[x' y + 1] == "-")                          {                              labyrinth[x' y] = "-";                              labyrinth[x' y + 1] = "*";                              y++;                              currentMoves++;                          }                          else                          {                              Console.WriteLine("\nInvalid move! \n ");                            }                            if (y == 6)                          {                              Console.WriteLine("\nCongratulations you escaped with {0} moves.\n"' currentMoves);                              flag_temp = false;                              flag = true;                          }                            DisplayLabyrinth(labyrinth);                            break;                      case "l":                            if (labyrinth[x' y - 1] == "-")                          {                              labyrinth[x' y] = "-";                              labyrinth[x' y - 1] = "*";                              y--;                              currentMoves++;                          }                          else                          {                              Console.WriteLine("\nInvalid move! \n ");                            }                            if (y == 0)                          {                              Console.WriteLine("\nCongratulations you escaped with {0} moves.\n"' currentMoves);                              flag_temp = false;                              flag = true;                          }                            DisplayLabyrinth(labyrinth);                            break;                      case "L":                            if (labyrinth[x' y - 1] == "-")                          {                              labyrinth[x' y] = "-";                              labyrinth[x' y - 1] = "*";                              y--;                              currentMoves++;                          }                          else                          {                              Console.WriteLine("\nInvalid move! \n ");                            }                            if (y == 0)                          {                              Console.WriteLine("\nCongratulations you escaped with {0} moves.\n"' currentMoves);                              flag_temp = false;                              flag = true;                          }                            DisplayLabyrinth(labyrinth);                              break;                      case "top":                            ShowScoreboard(scores);                          Console.WriteLine("\n");                          DisplayLabyrinth(labyrinth);                            break;                      case "restart":                          flag_temp = false;                            break;                      case "exit":                          Console.WriteLine("Good bye!");                          Environment.Exit(0);                          break;                      default:                          Console.WriteLine("Invalid command!");                          break;                    }
Magic Number,kursov_proekt,Program,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Labyrinth\Labyrinth-3\kursov_proekt.cs,TypeCommand,The following statement contains a magic number: switch (i)                  {                      case "d":                              if (labyrinth[x + 1' y] == "-")                          {                              labyrinth[x' y] = "-";                              labyrinth[x + 1' y] = "*";                              x++;                              currentMoves++;                          }                          else                          {                              Console.WriteLine("\nInvalid move! \n ");                            }                            if (x == 6)                          {                                  Console.WriteLine("\nCongratulations you escaped with {0} moves.\n"' currentMoves);                              flag_temp = false;                                flag = true;                          }                            DisplayLabyrinth(labyrinth);                                  break;                        case "D":                          if (labyrinth[x + 1' y] == "-")                          {                              labyrinth[x' y] = "-";                              labyrinth[x + 1' y] = "*";                              x++;                              currentMoves++;                          }                          else                          {                              Console.WriteLine("\nInvalid move! \n ");                            }                            if (x == 6)                          {                              Console.WriteLine("\nCongratulations you escaped with {0} moves.\n"' currentMoves);                              flag_temp = false;                              flag = true;                          }                            DisplayLabyrinth(labyrinth);                            break;                              case "u":                          if (labyrinth[x - 1' y] == "-")                          {                              labyrinth[x' y] = "-";                              labyrinth[x - 1' y] = "*";                              x--;                              currentMoves++;                          }                          else                          {                              Console.WriteLine("\nInvalid move! \n ");                            }                            if (x == 0)                          {                              Console.WriteLine("\nCongratulations you escaped with {0} moves.\n"' currentMoves);                              flag_temp = false;                              flag = true;                          }                            DisplayLabyrinth(labyrinth);                              break;                      case "U":                          if (labyrinth[x - 1' y] == "-")                          {                              labyrinth[x' y] = "-";                              labyrinth[x - 1' y] = "*";                              x--;                              currentMoves++;                          }                          else                          {                              Console.WriteLine("\nInvalid move! \n ");                            }                            if (x == 0)                          {                              Console.WriteLine("\nCongratulations you escaped with {0} moves.\n"' currentMoves);                              flag_temp = false;                              flag = true;                          }                            DisplayLabyrinth(labyrinth);                              break;                      case "r":                            if (labyrinth[x' y + 1] == "-")                          {                              labyrinth[x' y] = "-";                              labyrinth[x' y + 1] = "*";                              y++;                              currentMoves++;                          }                          else                          {                              Console.WriteLine("\nInvalid move! \n ");                            }                            if (y == 6)                          {                              Console.WriteLine("\nCongratulations you escaped with {0} moves.\n"' currentMoves);                              flag_temp = false;                              flag = true;                          }                            DisplayLabyrinth(labyrinth);                            break;                      case "R":                            if (labyrinth[x' y + 1] == "-")                          {                              labyrinth[x' y] = "-";                              labyrinth[x' y + 1] = "*";                              y++;                              currentMoves++;                          }                          else                          {                              Console.WriteLine("\nInvalid move! \n ");                            }                            if (y == 6)                          {                              Console.WriteLine("\nCongratulations you escaped with {0} moves.\n"' currentMoves);                              flag_temp = false;                              flag = true;                          }                            DisplayLabyrinth(labyrinth);                            break;                      case "l":                            if (labyrinth[x' y - 1] == "-")                          {                              labyrinth[x' y] = "-";                              labyrinth[x' y - 1] = "*";                              y--;                              currentMoves++;                          }                          else                          {                              Console.WriteLine("\nInvalid move! \n ");                            }                            if (y == 0)                          {                              Console.WriteLine("\nCongratulations you escaped with {0} moves.\n"' currentMoves);                              flag_temp = false;                              flag = true;                          }                            DisplayLabyrinth(labyrinth);                            break;                      case "L":                            if (labyrinth[x' y - 1] == "-")                          {                              labyrinth[x' y] = "-";                              labyrinth[x' y - 1] = "*";                              y--;                              currentMoves++;                          }                          else                          {                              Console.WriteLine("\nInvalid move! \n ");                            }                            if (y == 0)                          {                              Console.WriteLine("\nCongratulations you escaped with {0} moves.\n"' currentMoves);                              flag_temp = false;                              flag = true;                          }                            DisplayLabyrinth(labyrinth);                              break;                      case "top":                            ShowScoreboard(scores);                          Console.WriteLine("\n");                          DisplayLabyrinth(labyrinth);                            break;                      case "restart":                          flag_temp = false;                            break;                      case "exit":                          Console.WriteLine("Good bye!");                          Environment.Exit(0);                          break;                      default:                          Console.WriteLine("Invalid command!");                          break;                    }
Magic Number,kursov_proekt,Program,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Labyrinth\Labyrinth-3\kursov_proekt.cs,TypeCommand,The following statement contains a magic number: switch (i)                  {                      case "d":                              if (labyrinth[x + 1' y] == "-")                          {                              labyrinth[x' y] = "-";                              labyrinth[x + 1' y] = "*";                              x++;                              currentMoves++;                          }                          else                          {                              Console.WriteLine("\nInvalid move! \n ");                            }                            if (x == 6)                          {                                  Console.WriteLine("\nCongratulations you escaped with {0} moves.\n"' currentMoves);                              flag_temp = false;                                flag = true;                          }                            DisplayLabyrinth(labyrinth);                                  break;                        case "D":                          if (labyrinth[x + 1' y] == "-")                          {                              labyrinth[x' y] = "-";                              labyrinth[x + 1' y] = "*";                              x++;                              currentMoves++;                          }                          else                          {                              Console.WriteLine("\nInvalid move! \n ");                            }                            if (x == 6)                          {                              Console.WriteLine("\nCongratulations you escaped with {0} moves.\n"' currentMoves);                              flag_temp = false;                              flag = true;                          }                            DisplayLabyrinth(labyrinth);                            break;                              case "u":                          if (labyrinth[x - 1' y] == "-")                          {                              labyrinth[x' y] = "-";                              labyrinth[x - 1' y] = "*";                              x--;                              currentMoves++;                          }                          else                          {                              Console.WriteLine("\nInvalid move! \n ");                            }                            if (x == 0)                          {                              Console.WriteLine("\nCongratulations you escaped with {0} moves.\n"' currentMoves);                              flag_temp = false;                              flag = true;                          }                            DisplayLabyrinth(labyrinth);                              break;                      case "U":                          if (labyrinth[x - 1' y] == "-")                          {                              labyrinth[x' y] = "-";                              labyrinth[x - 1' y] = "*";                              x--;                              currentMoves++;                          }                          else                          {                              Console.WriteLine("\nInvalid move! \n ");                            }                            if (x == 0)                          {                              Console.WriteLine("\nCongratulations you escaped with {0} moves.\n"' currentMoves);                              flag_temp = false;                              flag = true;                          }                            DisplayLabyrinth(labyrinth);                              break;                      case "r":                            if (labyrinth[x' y + 1] == "-")                          {                              labyrinth[x' y] = "-";                              labyrinth[x' y + 1] = "*";                              y++;                              currentMoves++;                          }                          else                          {                              Console.WriteLine("\nInvalid move! \n ");                            }                            if (y == 6)                          {                              Console.WriteLine("\nCongratulations you escaped with {0} moves.\n"' currentMoves);                              flag_temp = false;                              flag = true;                          }                            DisplayLabyrinth(labyrinth);                            break;                      case "R":                            if (labyrinth[x' y + 1] == "-")                          {                              labyrinth[x' y] = "-";                              labyrinth[x' y + 1] = "*";                              y++;                              currentMoves++;                          }                          else                          {                              Console.WriteLine("\nInvalid move! \n ");                            }                            if (y == 6)                          {                              Console.WriteLine("\nCongratulations you escaped with {0} moves.\n"' currentMoves);                              flag_temp = false;                              flag = true;                          }                            DisplayLabyrinth(labyrinth);                            break;                      case "l":                            if (labyrinth[x' y - 1] == "-")                          {                              labyrinth[x' y] = "-";                              labyrinth[x' y - 1] = "*";                              y--;                              currentMoves++;                          }                          else                          {                              Console.WriteLine("\nInvalid move! \n ");                            }                            if (y == 0)                          {                              Console.WriteLine("\nCongratulations you escaped with {0} moves.\n"' currentMoves);                              flag_temp = false;                              flag = true;                          }                            DisplayLabyrinth(labyrinth);                            break;                      case "L":                            if (labyrinth[x' y - 1] == "-")                          {                              labyrinth[x' y] = "-";                              labyrinth[x' y - 1] = "*";                              y--;                              currentMoves++;                          }                          else                          {                              Console.WriteLine("\nInvalid move! \n ");                            }                            if (y == 0)                          {                              Console.WriteLine("\nCongratulations you escaped with {0} moves.\n"' currentMoves);                              flag_temp = false;                              flag = true;                          }                            DisplayLabyrinth(labyrinth);                              break;                      case "top":                            ShowScoreboard(scores);                          Console.WriteLine("\n");                          DisplayLabyrinth(labyrinth);                            break;                      case "restart":                          flag_temp = false;                            break;                      case "exit":                          Console.WriteLine("Good bye!");                          Environment.Exit(0);                          break;                      default:                          Console.WriteLine("Invalid command!");                          break;                    }
Magic Number,kursov_proekt,Program,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Labyrinth\Labyrinth-3\kursov_proekt.cs,TypeCommand,The following statement contains a magic number: switch (i)                  {                      case "d":                              if (labyrinth[x + 1' y] == "-")                          {                              labyrinth[x' y] = "-";                              labyrinth[x + 1' y] = "*";                              x++;                              currentMoves++;                          }                          else                          {                              Console.WriteLine("\nInvalid move! \n ");                            }                            if (x == 6)                          {                                  Console.WriteLine("\nCongratulations you escaped with {0} moves.\n"' currentMoves);                              flag_temp = false;                                flag = true;                          }                            DisplayLabyrinth(labyrinth);                                  break;                        case "D":                          if (labyrinth[x + 1' y] == "-")                          {                              labyrinth[x' y] = "-";                              labyrinth[x + 1' y] = "*";                              x++;                              currentMoves++;                          }                          else                          {                              Console.WriteLine("\nInvalid move! \n ");                            }                            if (x == 6)                          {                              Console.WriteLine("\nCongratulations you escaped with {0} moves.\n"' currentMoves);                              flag_temp = false;                              flag = true;                          }                            DisplayLabyrinth(labyrinth);                            break;                              case "u":                          if (labyrinth[x - 1' y] == "-")                          {                              labyrinth[x' y] = "-";                              labyrinth[x - 1' y] = "*";                              x--;                              currentMoves++;                          }                          else                          {                              Console.WriteLine("\nInvalid move! \n ");                            }                            if (x == 0)                          {                              Console.WriteLine("\nCongratulations you escaped with {0} moves.\n"' currentMoves);                              flag_temp = false;                              flag = true;                          }                            DisplayLabyrinth(labyrinth);                              break;                      case "U":                          if (labyrinth[x - 1' y] == "-")                          {                              labyrinth[x' y] = "-";                              labyrinth[x - 1' y] = "*";                              x--;                              currentMoves++;                          }                          else                          {                              Console.WriteLine("\nInvalid move! \n ");                            }                            if (x == 0)                          {                              Console.WriteLine("\nCongratulations you escaped with {0} moves.\n"' currentMoves);                              flag_temp = false;                              flag = true;                          }                            DisplayLabyrinth(labyrinth);                              break;                      case "r":                            if (labyrinth[x' y + 1] == "-")                          {                              labyrinth[x' y] = "-";                              labyrinth[x' y + 1] = "*";                              y++;                              currentMoves++;                          }                          else                          {                              Console.WriteLine("\nInvalid move! \n ");                            }                            if (y == 6)                          {                              Console.WriteLine("\nCongratulations you escaped with {0} moves.\n"' currentMoves);                              flag_temp = false;                              flag = true;                          }                            DisplayLabyrinth(labyrinth);                            break;                      case "R":                            if (labyrinth[x' y + 1] == "-")                          {                              labyrinth[x' y] = "-";                              labyrinth[x' y + 1] = "*";                              y++;                              currentMoves++;                          }                          else                          {                              Console.WriteLine("\nInvalid move! \n ");                            }                            if (y == 6)                          {                              Console.WriteLine("\nCongratulations you escaped with {0} moves.\n"' currentMoves);                              flag_temp = false;                              flag = true;                          }                            DisplayLabyrinth(labyrinth);                            break;                      case "l":                            if (labyrinth[x' y - 1] == "-")                          {                              labyrinth[x' y] = "-";                              labyrinth[x' y - 1] = "*";                              y--;                              currentMoves++;                          }                          else                          {                              Console.WriteLine("\nInvalid move! \n ");                            }                            if (y == 0)                          {                              Console.WriteLine("\nCongratulations you escaped with {0} moves.\n"' currentMoves);                              flag_temp = false;                              flag = true;                          }                            DisplayLabyrinth(labyrinth);                            break;                      case "L":                            if (labyrinth[x' y - 1] == "-")                          {                              labyrinth[x' y] = "-";                              labyrinth[x' y - 1] = "*";                              y--;                              currentMoves++;                          }                          else                          {                              Console.WriteLine("\nInvalid move! \n ");                            }                            if (y == 0)                          {                              Console.WriteLine("\nCongratulations you escaped with {0} moves.\n"' currentMoves);                              flag_temp = false;                              flag = true;                          }                            DisplayLabyrinth(labyrinth);                              break;                      case "top":                            ShowScoreboard(scores);                          Console.WriteLine("\n");                          DisplayLabyrinth(labyrinth);                            break;                      case "restart":                          flag_temp = false;                            break;                      case "exit":                          Console.WriteLine("Good bye!");                          Environment.Exit(0);                          break;                      default:                          Console.WriteLine("Invalid command!");                          break;                    }
Magic Number,kursov_proekt,Program,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Labyrinth\Labyrinth-3\kursov_proekt.cs,LabyrinthGenerator,The following statement contains a magic number: labyrinth[i' j] = Convert.ToString(randomInt.Next(2));
Magic Number,kursov_proekt,Program,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Labyrinth\Labyrinth-3\kursov_proekt.cs,LabyrinthGenerator,The following statement contains a magic number: j < 7
Magic Number,kursov_proekt,Program,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Labyrinth\Labyrinth-3\kursov_proekt.cs,LabyrinthGenerator,The following statement contains a magic number: i < 7
Magic Number,kursov_proekt,Program,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Labyrinth\Labyrinth-3\kursov_proekt.cs,DisplayLabyrinth,The following statement contains a magic number: string s3 = labyrinth[i' 2];
Magic Number,kursov_proekt,Program,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Labyrinth\Labyrinth-3\kursov_proekt.cs,DisplayLabyrinth,The following statement contains a magic number: string s4 = labyrinth[i' 3];
Magic Number,kursov_proekt,Program,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Labyrinth\Labyrinth-3\kursov_proekt.cs,DisplayLabyrinth,The following statement contains a magic number: string s5 = labyrinth[i' 4];
Magic Number,kursov_proekt,Program,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Labyrinth\Labyrinth-3\kursov_proekt.cs,DisplayLabyrinth,The following statement contains a magic number: string s6 = labyrinth[i' 5];
Magic Number,kursov_proekt,Program,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Labyrinth\Labyrinth-3\kursov_proekt.cs,DisplayLabyrinth,The following statement contains a magic number: string s7 = labyrinth[i' 6];
Magic Number,kursov_proekt,Program,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Labyrinth\Labyrinth-3\kursov_proekt.cs,DisplayLabyrinth,The following statement contains a magic number: i < 7
Duplicate Code,kursov_proekt,Program,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Labyrinth\Labyrinth-3\kursov_proekt.cs,TypeCommand,The method contains a code clone-set at the following line numbers (starting from the method definition): ((79' 102)' (104' 127))
Duplicate Code,kursov_proekt,Program,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Labyrinth\Labyrinth-3\kursov_proekt.cs,TypeCommand,The method contains a code clone-set at the following line numbers (starting from the method definition): ((129' 152)' (154' 177))
Duplicate Code,kursov_proekt,Program,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Labyrinth\Labyrinth-3\kursov_proekt.cs,TypeCommand,The method contains a code clone-set at the following line numbers (starting from the method definition): ((179' 201)' (204' 226))
