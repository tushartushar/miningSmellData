Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Balloons_Pops_game,Balloons_Pops_game,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Baloons-Pop\Baloons-Pop-6\Balloons_Pops_game.cs,ProcessGame,Cyclomatic complexity of the method is 8
Long Statement,Balloons_Pops_game,Balloons_Pops_game,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Baloons-Pop\Baloons-Pop-6\Balloons_Pops_game.cs,ProcessGame,The length of the statement  "                    if ((temp.Length == 3) && (temp[0] >= '0' && temp[0] <= '9') && (temp[2] >= '0' && temp[2] <= '9') && (temp[1] == ' ' || temp[1] == '.' || temp[1] == ''')) " is 155.
Complex Conditional,Balloons_Pops_game,Balloons_Pops_game,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Baloons-Pop\Baloons-Pop-6\Balloons_Pops_game.cs,ProcessGame,The conditional expression  "(temp.Length == 3) && (temp[0] >= '0' && temp[0] <= '9') && (temp[2] >= '0' && temp[2] <= '9') && (temp[1] == ' ' || temp[1] == '.' || temp[1] == ''')"  is complex.
Magic Number,Balloons_Pops_game,Balloons_Pops_game,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Baloons-Pop\Baloons-Pop-6\Balloons_Pops_game.cs,sortAndPrintChartFive,The following statement contains a magic number: i < 5
Magic Number,Balloons_Pops_game,Balloons_Pops_game,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Baloons-Pop\Baloons-Pop-6\Balloons_Pops_game.cs,signIfSkilled,The following statement contains a magic number: i < 5
Magic Number,Balloons_Pops_game,Balloons_Pops_game,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Baloons-Pop\Baloons-Pop-6\Balloons_Pops_game.cs,signIfSkilled,The following statement contains a magic number: i < 5
Magic Number,Balloons_Pops_game,Balloons_Pops_game,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Baloons-Pop\Baloons-Pop-6\Balloons_Pops_game.cs,Main,The following statement contains a magic number: string['] topFive = new string[5'2];
Magic Number,Balloons_Pops_game,Balloons_Pops_game,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Baloons-Pop\Baloons-Pop-6\Balloons_Pops_game.cs,Main,The following statement contains a magic number: string['] topFive = new string[5'2];
Magic Number,Balloons_Pops_game,Balloons_Pops_game,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Baloons-Pop\Baloons-Pop-6\Balloons_Pops_game.cs,Main,The following statement contains a magic number: byte['] matrix = gen(5' 10);
Magic Number,Balloons_Pops_game,Balloons_Pops_game,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Baloons-Pop\Baloons-Pop-6\Balloons_Pops_game.cs,Main,The following statement contains a magic number: byte['] matrix = gen(5' 10);
Magic Number,Balloons_Pops_game,Balloons_Pops_game,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Baloons-Pop\Baloons-Pop-6\Balloons_Pops_game.cs,ProcessGame,The following statement contains a magic number: switch (temp)               {                  case "RESTART":                      matrix = gen(5' 10);                      printMatrix(matrix);                      userMoves = 0;                      break;                  case "TOP":                      sortAndPrintChartFive(topFive);                      break;                  default :                      if ((temp.Length == 3) && (temp[0] >= '0' && temp[0] <= '9') && (temp[2] >= '0' && temp[2] <= '9') && (temp[1] == ' ' || temp[1] == '.' || temp[1] == '''))                      {                          int userRow' userColumn;                          userRow = int.Parse(temp[0].ToString());                          if (userRow > 4)                           {                              Console.WriteLine("Wrong input ! Try Again ! ");                              return;                          }                          userColumn = int.Parse(temp[2].ToString());                                                          if (change(matrix' userRow' userColumn))                          {                              Console.WriteLine("cannot pop missing ballon!");                              return;                          }                          userMoves++;                          if (doit(matrix))                          {                              Console.WriteLine("Gratz ! You completed it in {0} moves."' userMoves);                              if (signIfSkilled(topFive' userMoves))                              {                                  sortAndPrintChartFive(topFive);                              }                              else                               {                                  Console.WriteLine("I am sorry you are not skillful enough for TopFive chart!");                              }                              matrix = gen(5' 10);                              userMoves = 0;                          }                          printMatrix(matrix);                          break;                      }                      else                      {                           Console.WriteLine("Wrong input ! Try Again ! ");                          break;                      }              }
Magic Number,Balloons_Pops_game,Balloons_Pops_game,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Baloons-Pop\Baloons-Pop-6\Balloons_Pops_game.cs,ProcessGame,The following statement contains a magic number: switch (temp)               {                  case "RESTART":                      matrix = gen(5' 10);                      printMatrix(matrix);                      userMoves = 0;                      break;                  case "TOP":                      sortAndPrintChartFive(topFive);                      break;                  default :                      if ((temp.Length == 3) && (temp[0] >= '0' && temp[0] <= '9') && (temp[2] >= '0' && temp[2] <= '9') && (temp[1] == ' ' || temp[1] == '.' || temp[1] == '''))                      {                          int userRow' userColumn;                          userRow = int.Parse(temp[0].ToString());                          if (userRow > 4)                           {                              Console.WriteLine("Wrong input ! Try Again ! ");                              return;                          }                          userColumn = int.Parse(temp[2].ToString());                                                          if (change(matrix' userRow' userColumn))                          {                              Console.WriteLine("cannot pop missing ballon!");                              return;                          }                          userMoves++;                          if (doit(matrix))                          {                              Console.WriteLine("Gratz ! You completed it in {0} moves."' userMoves);                              if (signIfSkilled(topFive' userMoves))                              {                                  sortAndPrintChartFive(topFive);                              }                              else                               {                                  Console.WriteLine("I am sorry you are not skillful enough for TopFive chart!");                              }                              matrix = gen(5' 10);                              userMoves = 0;                          }                          printMatrix(matrix);                          break;                      }                      else                      {                           Console.WriteLine("Wrong input ! Try Again ! ");                          break;                      }              }
Magic Number,Balloons_Pops_game,Balloons_Pops_game,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Baloons-Pop\Baloons-Pop-6\Balloons_Pops_game.cs,ProcessGame,The following statement contains a magic number: switch (temp)               {                  case "RESTART":                      matrix = gen(5' 10);                      printMatrix(matrix);                      userMoves = 0;                      break;                  case "TOP":                      sortAndPrintChartFive(topFive);                      break;                  default :                      if ((temp.Length == 3) && (temp[0] >= '0' && temp[0] <= '9') && (temp[2] >= '0' && temp[2] <= '9') && (temp[1] == ' ' || temp[1] == '.' || temp[1] == '''))                      {                          int userRow' userColumn;                          userRow = int.Parse(temp[0].ToString());                          if (userRow > 4)                           {                              Console.WriteLine("Wrong input ! Try Again ! ");                              return;                          }                          userColumn = int.Parse(temp[2].ToString());                                                          if (change(matrix' userRow' userColumn))                          {                              Console.WriteLine("cannot pop missing ballon!");                              return;                          }                          userMoves++;                          if (doit(matrix))                          {                              Console.WriteLine("Gratz ! You completed it in {0} moves."' userMoves);                              if (signIfSkilled(topFive' userMoves))                              {                                  sortAndPrintChartFive(topFive);                              }                              else                               {                                  Console.WriteLine("I am sorry you are not skillful enough for TopFive chart!");                              }                              matrix = gen(5' 10);                              userMoves = 0;                          }                          printMatrix(matrix);                          break;                      }                      else                      {                           Console.WriteLine("Wrong input ! Try Again ! ");                          break;                      }              }
Magic Number,Balloons_Pops_game,Balloons_Pops_game,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Baloons-Pop\Baloons-Pop-6\Balloons_Pops_game.cs,ProcessGame,The following statement contains a magic number: switch (temp)               {                  case "RESTART":                      matrix = gen(5' 10);                      printMatrix(matrix);                      userMoves = 0;                      break;                  case "TOP":                      sortAndPrintChartFive(topFive);                      break;                  default :                      if ((temp.Length == 3) && (temp[0] >= '0' && temp[0] <= '9') && (temp[2] >= '0' && temp[2] <= '9') && (temp[1] == ' ' || temp[1] == '.' || temp[1] == '''))                      {                          int userRow' userColumn;                          userRow = int.Parse(temp[0].ToString());                          if (userRow > 4)                           {                              Console.WriteLine("Wrong input ! Try Again ! ");                              return;                          }                          userColumn = int.Parse(temp[2].ToString());                                                          if (change(matrix' userRow' userColumn))                          {                              Console.WriteLine("cannot pop missing ballon!");                              return;                          }                          userMoves++;                          if (doit(matrix))                          {                              Console.WriteLine("Gratz ! You completed it in {0} moves."' userMoves);                              if (signIfSkilled(topFive' userMoves))                              {                                  sortAndPrintChartFive(topFive);                              }                              else                               {                                  Console.WriteLine("I am sorry you are not skillful enough for TopFive chart!");                              }                              matrix = gen(5' 10);                              userMoves = 0;                          }                          printMatrix(matrix);                          break;                      }                      else                      {                           Console.WriteLine("Wrong input ! Try Again ! ");                          break;                      }              }
Magic Number,Balloons_Pops_game,Balloons_Pops_game,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Baloons-Pop\Baloons-Pop-6\Balloons_Pops_game.cs,ProcessGame,The following statement contains a magic number: switch (temp)               {                  case "RESTART":                      matrix = gen(5' 10);                      printMatrix(matrix);                      userMoves = 0;                      break;                  case "TOP":                      sortAndPrintChartFive(topFive);                      break;                  default :                      if ((temp.Length == 3) && (temp[0] >= '0' && temp[0] <= '9') && (temp[2] >= '0' && temp[2] <= '9') && (temp[1] == ' ' || temp[1] == '.' || temp[1] == '''))                      {                          int userRow' userColumn;                          userRow = int.Parse(temp[0].ToString());                          if (userRow > 4)                           {                              Console.WriteLine("Wrong input ! Try Again ! ");                              return;                          }                          userColumn = int.Parse(temp[2].ToString());                                                          if (change(matrix' userRow' userColumn))                          {                              Console.WriteLine("cannot pop missing ballon!");                              return;                          }                          userMoves++;                          if (doit(matrix))                          {                              Console.WriteLine("Gratz ! You completed it in {0} moves."' userMoves);                              if (signIfSkilled(topFive' userMoves))                              {                                  sortAndPrintChartFive(topFive);                              }                              else                               {                                  Console.WriteLine("I am sorry you are not skillful enough for TopFive chart!");                              }                              matrix = gen(5' 10);                              userMoves = 0;                          }                          printMatrix(matrix);                          break;                      }                      else                      {                           Console.WriteLine("Wrong input ! Try Again ! ");                          break;                      }              }
Magic Number,Balloons_Pops_game,Balloons_Pops_game,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Baloons-Pop\Baloons-Pop-6\Balloons_Pops_game.cs,ProcessGame,The following statement contains a magic number: switch (temp)               {                  case "RESTART":                      matrix = gen(5' 10);                      printMatrix(matrix);                      userMoves = 0;                      break;                  case "TOP":                      sortAndPrintChartFive(topFive);                      break;                  default :                      if ((temp.Length == 3) && (temp[0] >= '0' && temp[0] <= '9') && (temp[2] >= '0' && temp[2] <= '9') && (temp[1] == ' ' || temp[1] == '.' || temp[1] == '''))                      {                          int userRow' userColumn;                          userRow = int.Parse(temp[0].ToString());                          if (userRow > 4)                           {                              Console.WriteLine("Wrong input ! Try Again ! ");                              return;                          }                          userColumn = int.Parse(temp[2].ToString());                                                          if (change(matrix' userRow' userColumn))                          {                              Console.WriteLine("cannot pop missing ballon!");                              return;                          }                          userMoves++;                          if (doit(matrix))                          {                              Console.WriteLine("Gratz ! You completed it in {0} moves."' userMoves);                              if (signIfSkilled(topFive' userMoves))                              {                                  sortAndPrintChartFive(topFive);                              }                              else                               {                                  Console.WriteLine("I am sorry you are not skillful enough for TopFive chart!");                              }                              matrix = gen(5' 10);                              userMoves = 0;                          }                          printMatrix(matrix);                          break;                      }                      else                      {                           Console.WriteLine("Wrong input ! Try Again ! ");                          break;                      }              }
Magic Number,Balloons_Pops_game,Balloons_Pops_game,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Baloons-Pop\Baloons-Pop-6\Balloons_Pops_game.cs,ProcessGame,The following statement contains a magic number: switch (temp)               {                  case "RESTART":                      matrix = gen(5' 10);                      printMatrix(matrix);                      userMoves = 0;                      break;                  case "TOP":                      sortAndPrintChartFive(topFive);                      break;                  default :                      if ((temp.Length == 3) && (temp[0] >= '0' && temp[0] <= '9') && (temp[2] >= '0' && temp[2] <= '9') && (temp[1] == ' ' || temp[1] == '.' || temp[1] == '''))                      {                          int userRow' userColumn;                          userRow = int.Parse(temp[0].ToString());                          if (userRow > 4)                           {                              Console.WriteLine("Wrong input ! Try Again ! ");                              return;                          }                          userColumn = int.Parse(temp[2].ToString());                                                          if (change(matrix' userRow' userColumn))                          {                              Console.WriteLine("cannot pop missing ballon!");                              return;                          }                          userMoves++;                          if (doit(matrix))                          {                              Console.WriteLine("Gratz ! You completed it in {0} moves."' userMoves);                              if (signIfSkilled(topFive' userMoves))                              {                                  sortAndPrintChartFive(topFive);                              }                              else                               {                                  Console.WriteLine("I am sorry you are not skillful enough for TopFive chart!");                              }                              matrix = gen(5' 10);                              userMoves = 0;                          }                          printMatrix(matrix);                          break;                      }                      else                      {                           Console.WriteLine("Wrong input ! Try Again ! ");                          break;                      }              }
Magic Number,Balloons_Pops_game,Balloons_Pops_game,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Baloons-Pop\Baloons-Pop-6\Balloons_Pops_game.cs,ProcessGame,The following statement contains a magic number: switch (temp)               {                  case "RESTART":                      matrix = gen(5' 10);                      printMatrix(matrix);                      userMoves = 0;                      break;                  case "TOP":                      sortAndPrintChartFive(topFive);                      break;                  default :                      if ((temp.Length == 3) && (temp[0] >= '0' && temp[0] <= '9') && (temp[2] >= '0' && temp[2] <= '9') && (temp[1] == ' ' || temp[1] == '.' || temp[1] == '''))                      {                          int userRow' userColumn;                          userRow = int.Parse(temp[0].ToString());                          if (userRow > 4)                           {                              Console.WriteLine("Wrong input ! Try Again ! ");                              return;                          }                          userColumn = int.Parse(temp[2].ToString());                                                          if (change(matrix' userRow' userColumn))                          {                              Console.WriteLine("cannot pop missing ballon!");                              return;                          }                          userMoves++;                          if (doit(matrix))                          {                              Console.WriteLine("Gratz ! You completed it in {0} moves."' userMoves);                              if (signIfSkilled(topFive' userMoves))                              {                                  sortAndPrintChartFive(topFive);                              }                              else                               {                                  Console.WriteLine("I am sorry you are not skillful enough for TopFive chart!");                              }                              matrix = gen(5' 10);                              userMoves = 0;                          }                          printMatrix(matrix);                          break;                      }                      else                      {                           Console.WriteLine("Wrong input ! Try Again ! ");                          break;                      }              }
Magic Number,Balloons_Pops_game,Balloons_Pops_game,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Baloons-Pop\Baloons-Pop-6\Balloons_Pops_game.cs,ProcessGame,The following statement contains a magic number: switch (temp)               {                  case "RESTART":                      matrix = gen(5' 10);                      printMatrix(matrix);                      userMoves = 0;                      break;                  case "TOP":                      sortAndPrintChartFive(topFive);                      break;                  default :                      if ((temp.Length == 3) && (temp[0] >= '0' && temp[0] <= '9') && (temp[2] >= '0' && temp[2] <= '9') && (temp[1] == ' ' || temp[1] == '.' || temp[1] == '''))                      {                          int userRow' userColumn;                          userRow = int.Parse(temp[0].ToString());                          if (userRow > 4)                           {                              Console.WriteLine("Wrong input ! Try Again ! ");                              return;                          }                          userColumn = int.Parse(temp[2].ToString());                                                          if (change(matrix' userRow' userColumn))                          {                              Console.WriteLine("cannot pop missing ballon!");                              return;                          }                          userMoves++;                          if (doit(matrix))                          {                              Console.WriteLine("Gratz ! You completed it in {0} moves."' userMoves);                              if (signIfSkilled(topFive' userMoves))                              {                                  sortAndPrintChartFive(topFive);                              }                              else                               {                                  Console.WriteLine("I am sorry you are not skillful enough for TopFive chart!");                              }                              matrix = gen(5' 10);                              userMoves = 0;                          }                          printMatrix(matrix);                          break;                      }                      else                      {                           Console.WriteLine("Wrong input ! Try Again ! ");                          break;                      }              }
Magic Number,Balloons_Pops_game,Game,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Baloons-Pop\Baloons-Pop-6\Game.cs,printMatrix,The following statement contains a magic number: column < matrix.GetLongLength(1) * 2 + 1
Magic Number,Balloons_Pops_game,Game,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Baloons-Pop\Baloons-Pop-6\Game.cs,printMatrix,The following statement contains a magic number: column < matrix.GetLongLength(1) * 2 + 1
Magic Number,Balloons_Pops_game,Game,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Baloons-Pop\Baloons-Pop-6\Game.cs,gen,The following statement contains a magic number: byte tempByte = (byte)randNumber.Next(1' 5);
