Implementation smell,Namespace,Class,File,Method,Description
Magic Number,Computers.Tests.Cpu,GenerateRandomNumberTests,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Exams\2014\Computers\Solution\Computers.Tests\Cpu\GenerateRandomNumberTests.cs,CpuInitialize,The following statement contains a magic number: this.cpu = new Cpu32Bit(2);
Magic Number,Computers.Tests.Cpu,GenerateRandomNumberTests,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Exams\2014\Computers\Solution\Computers.Tests\Cpu\GenerateRandomNumberTests.cs,CpuShouldAlwaysReturnRandomNumberBelowOrEqualToTheMaxValue,The following statement contains a magic number: int maxValue = 1000;
Magic Number,Computers.Tests.Cpu,GenerateRandomNumberTests,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Exams\2014\Computers\Solution\Computers.Tests\Cpu\GenerateRandomNumberTests.cs,CpuShouldAlwaysReturnRandomNumberBelowOrEqualToTheMaxValue,The following statement contains a magic number: i < 1000
Magic Number,Computers.Tests.Cpu,GenerateRandomNumberTests,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Exams\2014\Computers\Solution\Computers.Tests\Cpu\GenerateRandomNumberTests.cs,CpuShouldAlwaysReturnRandomNumberAboveOrEqualToTheMinimumValue,The following statement contains a magic number: int maxValue = 1000;
Magic Number,Computers.Tests.Cpu,GenerateRandomNumberTests,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Exams\2014\Computers\Solution\Computers.Tests\Cpu\GenerateRandomNumberTests.cs,CpuShouldAlwaysReturnRandomNumberAboveOrEqualToTheMinimumValue,The following statement contains a magic number: i < 1000
Magic Number,Computers.Tests.Cpu,GenerateRandomNumberTests,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Exams\2014\Computers\Solution\Computers.Tests\Cpu\GenerateRandomNumberTests.cs,CpuShouldAlwaysReturnRandomNumberInRange,The following statement contains a magic number: i < 1000
Magic Number,Computers.Tests.Cpu,GenerateRandomNumberTests,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Exams\2014\Computers\Solution\Computers.Tests\Cpu\GenerateRandomNumberTests.cs,CpuShouldAlmostAlwaysReturnDifferentRandomNumber,The following statement contains a magic number: int maxValue = 1000;
Magic Number,Computers.Tests.Cpu,GenerateRandomNumberTests,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Exams\2014\Computers\Solution\Computers.Tests\Cpu\GenerateRandomNumberTests.cs,CpuShouldAlmostAlwaysReturnDifferentRandomNumber,The following statement contains a magic number: i < 1000
Magic Number,Computers.Tests.Cpu,GenerateRandomNumberTests,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Exams\2014\Computers\Solution\Computers.Tests\Cpu\GenerateRandomNumberTests.cs,CpuShouldAlmostAlwaysReturnDifferentRandomNumber,The following statement contains a magic number: var result = keyValuePair.Value < 10;
Magic Number,Computers.Tests.Cpu,SquareNumberTests,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Exams\2014\Computers\Solution\Computers.Tests\Cpu\SquareNumberTests.cs,CpuShouldReturnSquareNumberIfValueIsInRange,The following statement contains a magic number: var value = 20;
Magic Number,Computers.Tests.Cpu,SquareNumberTests,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Exams\2014\Computers\Solution\Computers.Tests\Cpu\SquareNumberTests.cs,CpuShouldReturnTooLowMessageWithNegativeNumber,The following statement contains a magic number: var value = -20;
Magic Number,Computers.Tests.Cpu,SquareNumberTests,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Exams\2014\Computers\Solution\Computers.Tests\Cpu\SquareNumberTests.cs,CpuShouldReturnTooHighOn32Bit,The following statement contains a magic number: var value = 501;
Magic Number,Computers.Tests.Cpu,SquareNumberTests,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Exams\2014\Computers\Solution\Computers.Tests\Cpu\SquareNumberTests.cs,CpuShouldReturnTooHighOn64Bit,The following statement contains a magic number: var value = 1001;
Magic Number,Computers.Tests.Cpu,SquareNumberTests,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Exams\2014\Computers\Solution\Computers.Tests\Cpu\SquareNumberTests.cs,CpuShouldReturnTooHighOn128Bit,The following statement contains a magic number: var value = 2001;
Magic Number,Computers.Tests.Cpu,SquareNumberTests,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Exams\2014\Computers\Solution\Computers.Tests\Cpu\SquareNumberTests.cs,AssertCpuMessage,The following statement contains a magic number: this.cpu = cpuConstructor(2);
Magic Number,Computers.Tests.LaptopBattery,LaptopBatteryTests,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Exams\2014\Computers\Solution\Computers.Tests\LaptopBattery\LaptopBatteryTests.cs,LaptopBatteryShouldHaveHalfChargeInitially,The following statement contains a magic number: this.AssertChargePercentage(50);
Magic Number,Computers.Tests.LaptopBattery,LaptopBatteryTests,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Exams\2014\Computers\Solution\Computers.Tests\LaptopBattery\LaptopBatteryTests.cs,LaptopBatteryShouldChargeItselfWithPositiveNumber,The following statement contains a magic number: this.battery.Charge(25);
Magic Number,Computers.Tests.LaptopBattery,LaptopBatteryTests,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Exams\2014\Computers\Solution\Computers.Tests\LaptopBattery\LaptopBatteryTests.cs,LaptopBatteryShouldChargeItselfWithPositiveNumber,The following statement contains a magic number: this.AssertChargePercentage(75);
Magic Number,Computers.Tests.LaptopBattery,LaptopBatteryTests,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Exams\2014\Computers\Solution\Computers.Tests\LaptopBattery\LaptopBatteryTests.cs,LaptopBatteryShouldDechargeItselfWithNegativeNumber,The following statement contains a magic number: this.battery.Charge(-25);
Magic Number,Computers.Tests.LaptopBattery,LaptopBatteryTests,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Exams\2014\Computers\Solution\Computers.Tests\LaptopBattery\LaptopBatteryTests.cs,LaptopBatteryShouldDechargeItselfWithNegativeNumber,The following statement contains a magic number: this.AssertChargePercentage(25);
Magic Number,Computers.Tests.LaptopBattery,LaptopBatteryTests,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Exams\2014\Computers\Solution\Computers.Tests\LaptopBattery\LaptopBatteryTests.cs,LaptopBatteryShouldNotHaveMoreThanOneHundredPercentageCharge,The following statement contains a magic number: this.battery.Charge(1000);
Magic Number,Computers.Tests.LaptopBattery,LaptopBatteryTests,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Exams\2014\Computers\Solution\Computers.Tests\LaptopBattery\LaptopBatteryTests.cs,LaptopBatteryShouldNotHaveMoreThanOneHundredPercentageCharge,The following statement contains a magic number: this.AssertChargePercentage(100);
Magic Number,Computers.Tests.LaptopBattery,LaptopBatteryTests,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Exams\2014\Computers\Solution\Computers.Tests\LaptopBattery\LaptopBatteryTests.cs,LaptopBatteryShouldNotHaveLessThanZeroPercentageCharge,The following statement contains a magic number: this.battery.Charge(-1000);
