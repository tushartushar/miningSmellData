Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Labyrinth,Labyrinth,C:\repos\TelerikAcademy_High-Quality-Code\Teamwork\Labyrinth\Labyrinth-2\Labyrinth.cs,FindNewCellCoordinates,The method has 5 parameters. Parameters: row' col' direction' newRow' newCol
Complex Conditional,Labyrinth,Game,C:\repos\TelerikAcademy_High-Quality-Code\Teamwork\Labyrinth\Labyrinth-2\Game.cs,IsGameOver,The conditional expression  "currentRow == 0 ||                  currentCol == 0 ||                  currentRow == Labyrinth.LABYRINTH_SIZE - 1 ||                  currentCol == Labyrinth.LABYRINTH_SIZE - 1"  is complex.
Complex Conditional,Labyrinth,Labyrinth,C:\repos\TelerikAcademy_High-Quality-Code\Teamwork\Labyrinth\Labyrinth-2\Labyrinth.cs,TryMove,The conditional expression  "newRow < 0 || newCol < 0 ||                  newRow >= labyrinth.GetLength(0) || newCol >= labyrinth.GetLength(1)"  is complex.
Complex Conditional,Labyrinth,Labyrinth,C:\repos\TelerikAcademy_High-Quality-Code\Teamwork\Labyrinth\Labyrinth-2\Labyrinth.cs,premestvane,The conditional expression  "newRow < 0 || newCol < 0 ||                  newRow >= labyrinth.GetLength(0) || newCol >= labyrinth.GetLength(1)"  is complex.
Complex Conditional,Labyrinth,Labyrinth,C:\repos\TelerikAcademy_High-Quality-Code\Teamwork\Labyrinth\Labyrinth-2\Labyrinth.cs,ExitFound,The conditional expression  "cell.Row == LABYRINTH_SIZE - 1 ||                        cell.Col == LABYRINTH_SIZE - 1 ||                  cell.Row == 0 ||                  cell.Col == 0"  is complex.
Magic Number,Labyrinth,Labyrinth,C:\repos\TelerikAcademy_High-Quality-Code\Teamwork\Labyrinth\Labyrinth-2\Labyrinth.cs,GenerateLabyrinth,The following statement contains a magic number: for (int row = 0; row < LABYRINTH_SIZE; row++)              {                  for (int col = 0; col < LABYRINTH_SIZE; col++)                  {                      int cellRandomValue = rand.Next(0' 2);                        char charValue;                      if (cellRandomValue == 0)                      {                          charValue = Cell.CELL_EMPTY_VALUE;                      }                      else                      {                          charValue = Cell.CELL_WALL_VALUE;                      }                      this.labyrinth[row'col] = new Cell(row' col' charValue);                  }              }
