Implementation smell,Namespace,Class,File,Method,Description
Complex Method,BattleField,GameServices,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Battle-Field\Battle-Field-5\GameServices.cs,ExplodeFour,Cyclomatic complexity of the method is 8
Complex Conditional,BattleField,GameServices,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Battle-Field\Battle-Field-5\GameServices.cs,VPoletoLiE,The conditional expression  "x < 0 || y < 0 || x >= field.GetLength(0) || y >= field.GetLength(1)"  is complex.
Magic Number,BattleField,Battlefield,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Battle-Field\Battle-Field-5\Battlefield.cs,Start,The following statement contains a magic number: size > 10 || size <= 0
Magic Number,BattleField,Battlefield,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Battle-Field\Battle-Field-5\Battlefield.cs,StartInteraction,The following statement contains a magic number: i < 50
Magic Number,BattleField,GameServices,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Battle-Field\Battle-Field-5\GameServices.cs,ExplodeThree,The following statement contains a magic number: Mine Up = new Mine() { X = mine.X - 2' Y = mine.Y };
Magic Number,BattleField,GameServices,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Battle-Field\Battle-Field-5\GameServices.cs,ExplodeThree,The following statement contains a magic number: Mine Down = new Mine() { X = mine.X + 2' Y = mine.Y };
Magic Number,BattleField,GameServices,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Battle-Field\Battle-Field-5\GameServices.cs,ExplodeThree,The following statement contains a magic number: Mine Left = new Mine() { X = mine.X' Y = mine.Y - 2 };
Magic Number,BattleField,GameServices,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Battle-Field\Battle-Field-5\GameServices.cs,ExplodeThree,The following statement contains a magic number: Mine Right = new Mine() { X = mine.X' Y = mine.Y + 2 };
Magic Number,BattleField,GameServices,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Battle-Field\Battle-Field-5\GameServices.cs,ExplodeFour,The following statement contains a magic number: bool UR = i == mine.X - 2 && j == mine.Y - 2;
Magic Number,BattleField,GameServices,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Battle-Field\Battle-Field-5\GameServices.cs,ExplodeFour,The following statement contains a magic number: bool UR = i == mine.X - 2 && j == mine.Y - 2;
Magic Number,BattleField,GameServices,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Battle-Field\Battle-Field-5\GameServices.cs,ExplodeFour,The following statement contains a magic number: bool UL = i == mine.X - 2 && j == mine.Y + 2;
Magic Number,BattleField,GameServices,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Battle-Field\Battle-Field-5\GameServices.cs,ExplodeFour,The following statement contains a magic number: bool UL = i == mine.X - 2 && j == mine.Y + 2;
Magic Number,BattleField,GameServices,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Battle-Field\Battle-Field-5\GameServices.cs,ExplodeFour,The following statement contains a magic number: bool DR = i == mine.X + 2 && j == mine.Y - 2;
Magic Number,BattleField,GameServices,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Battle-Field\Battle-Field-5\GameServices.cs,ExplodeFour,The following statement contains a magic number: bool DR = i == mine.X + 2 && j == mine.Y - 2;
Magic Number,BattleField,GameServices,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Battle-Field\Battle-Field-5\GameServices.cs,ExplodeFour,The following statement contains a magic number: bool DL = i == mine.X + 2 && j == mine.Y + 2;
Magic Number,BattleField,GameServices,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Battle-Field\Battle-Field-5\GameServices.cs,ExplodeFour,The following statement contains a magic number: bool DL = i == mine.X + 2 && j == mine.Y + 2;
Magic Number,BattleField,GameServices,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Battle-Field\Battle-Field-5\GameServices.cs,ExplodeFour,The following statement contains a magic number: j <= mine.Y + 2
Magic Number,BattleField,GameServices,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Battle-Field\Battle-Field-5\GameServices.cs,ExplodeFour,The following statement contains a magic number: i <= mine.X + 2
Magic Number,BattleField,GameServices,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Battle-Field\Battle-Field-5\GameServices.cs,ExplodeFive,The following statement contains a magic number: j <= mine.Y + 2
Magic Number,BattleField,GameServices,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Battle-Field\Battle-Field-5\GameServices.cs,ExplodeFive,The following statement contains a magic number: i <= mine.X + 2
Magic Number,BattleField,GameServices,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Battle-Field\Battle-Field-5\GameServices.cs,PokajiMiRezultata,The following statement contains a magic number: i < size*2
Magic Number,BattleField,GameServices,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Battle-Field\Battle-Field-5\GameServices.cs,ExtractMineFromString,The following statement contains a magic number: line == null || line.Length < 3 || !line.Contains(" ")
Missing Default,BattleField,GameServices,D:\research\architectureSmells\repos1\TelerikAcademy_High-Quality-Code\Teamwork\Battle-Field\Battle-Field-5\GameServices.cs,Гърми,The following switch statement is missing a default case: switch (mineType)              {                  case '1':                      {                          ExplodeOne(field' mine);                      }                      break;                  case '2':                      {                          ExplodeTwo(field' mine);                      }                      break;                  case '3':                      {                          ExplodeThree(field' mine);                      }                      break;                  case '4':                      {                          ExplodeFour(field' mine);                      }                      break;                  case '5':                      {                          ExplodeFive(field' mine);                      }                      break;              }
