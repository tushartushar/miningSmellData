Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Command.CalculatorExample,Calculator,D:\newReposJune17\TelerikAcademy_High-Quality-Code\17. Design Patterns\Demo\Behavioral\Command\CalculatorExample\Calculator.cs,Operation,Cyclomatic complexity of the method is 12
Magic Number,Command,Program,D:\newReposJune17\TelerikAcademy_High-Quality-Code\17. Design Patterns\Demo\Behavioral\Command\Program.cs,Main,The following statement contains a magic number: Console.WriteLine (new string ('-'' 60));  
Magic Number,Command,Program,D:\newReposJune17\TelerikAcademy_High-Quality-Code\17. Design Patterns\Demo\Behavioral\Command\Program.cs,CalculatorExample,The following statement contains a magic number: user.Compute ('+'' 100);  
Magic Number,Command,Program,D:\newReposJune17\TelerikAcademy_High-Quality-Code\17. Design Patterns\Demo\Behavioral\Command\Program.cs,CalculatorExample,The following statement contains a magic number: user.Compute ('-'' 50);  
Magic Number,Command,Program,D:\newReposJune17\TelerikAcademy_High-Quality-Code\17. Design Patterns\Demo\Behavioral\Command\Program.cs,CalculatorExample,The following statement contains a magic number: user.Compute ('*'' 10);  
Magic Number,Command,Program,D:\newReposJune17\TelerikAcademy_High-Quality-Code\17. Design Patterns\Demo\Behavioral\Command\Program.cs,CalculatorExample,The following statement contains a magic number: user.Compute ('/'' 2);  
Magic Number,Command,Program,D:\newReposJune17\TelerikAcademy_High-Quality-Code\17. Design Patterns\Demo\Behavioral\Command\Program.cs,CalculatorExample,The following statement contains a magic number: user.Undo (4);  
Magic Number,Command,Program,D:\newReposJune17\TelerikAcademy_High-Quality-Code\17. Design Patterns\Demo\Behavioral\Command\Program.cs,CalculatorExample,The following statement contains a magic number: user.Redo (3);  
Missing Default,Command.CalculatorExample,Calculator,D:\newReposJune17\TelerikAcademy_High-Quality-Code\17. Design Patterns\Demo\Behavioral\Command\CalculatorExample\Calculator.cs,Operation,The following switch statement is missing a default case: switch (@operator) {  case '+':  	this.currentValue += operand;  	break;  case '-':  	this.currentValue -= operand;  	break;  case '*':  	this.currentValue *= operand;  	break;  case '/':  	this.currentValue /= operand;  	break;  }  
