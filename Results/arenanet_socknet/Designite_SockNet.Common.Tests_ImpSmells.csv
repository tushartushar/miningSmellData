Implementation smell,Namespace,Class,File,Method,Description
Long Statement,ArenaNet.SockNet.Common.IO,ChunkedBufferTest,D:\research\architectureSmells\repos\arenanet_socknet\SockNet.Common.Tests\IO\ChunkedBufferTest.cs,TestReadAndWritePoolUsage,The length of the statement  "                Assert.AreEqual((randomUtf8StringBytes.Length / 10) + (randomUtf8StringBytes.Length % 10 > 0 ? 1 : 0)' pool.TotalNumberOfObjects); " is 130.
Magic Number,ArenaNet.SockNet.Common.IO,ChunkedBufferTest,D:\research\architectureSmells\repos\arenanet_socknet\SockNet.Common.Tests\IO\ChunkedBufferTest.cs,TestReadAndWritePoolUsage,The following statement contains a magic number: byte[] randomUtf8StringBytes = new byte[rand.Next(2000' 5000)];
Magic Number,ArenaNet.SockNet.Common.IO,ChunkedBufferTest,D:\research\architectureSmells\repos\arenanet_socknet\SockNet.Common.Tests\IO\ChunkedBufferTest.cs,TestReadAndWritePoolUsage,The following statement contains a magic number: byte[] randomUtf8StringBytes = new byte[rand.Next(2000' 5000)];
Magic Number,ArenaNet.SockNet.Common.IO,ChunkedBufferTest,D:\research\architectureSmells\repos\arenanet_socknet\SockNet.Common.Tests\IO\ChunkedBufferTest.cs,TestReadAndWritePoolUsage,The following statement contains a magic number: ObjectPool<byte[]> pool = new ObjectPool<byte[]>(() => { return new byte[10]; });
Magic Number,ArenaNet.SockNet.Common.IO,ChunkedBufferTest,D:\research\architectureSmells\repos\arenanet_socknet\SockNet.Common.Tests\IO\ChunkedBufferTest.cs,TestReadAndWritePoolUsage,The following statement contains a magic number: Assert.AreEqual((randomUtf8StringBytes.Length / 10) + (randomUtf8StringBytes.Length % 10 > 0 ? 1 : 0)' pool.TotalNumberOfObjects);
Magic Number,ArenaNet.SockNet.Common.IO,ChunkedBufferTest,D:\research\architectureSmells\repos\arenanet_socknet\SockNet.Common.Tests\IO\ChunkedBufferTest.cs,TestReadAndWritePoolUsage,The following statement contains a magic number: Assert.AreEqual((randomUtf8StringBytes.Length / 10) + (randomUtf8StringBytes.Length % 10 > 0 ? 1 : 0)' pool.TotalNumberOfObjects);
Magic Number,ArenaNet.SockNet.Common.IO,ChunkedBufferTest,D:\research\architectureSmells\repos\arenanet_socknet\SockNet.Common.Tests\IO\ChunkedBufferTest.cs,TestWrapString,The following statement contains a magic number: ObjectPool<byte[]> pool = new ObjectPool<byte[]>(() => { return new byte[1024]; });
Magic Number,ArenaNet.SockNet.Common.IO,ChunkedBufferTest,D:\research\architectureSmells\repos\arenanet_socknet\SockNet.Common.Tests\IO\ChunkedBufferTest.cs,TestWrapString,The following statement contains a magic number: byte[] randomUtf8StringBytes = new byte[rand.Next(2000' 5000)];
Magic Number,ArenaNet.SockNet.Common.IO,ChunkedBufferTest,D:\research\architectureSmells\repos\arenanet_socknet\SockNet.Common.Tests\IO\ChunkedBufferTest.cs,TestWrapString,The following statement contains a magic number: byte[] randomUtf8StringBytes = new byte[rand.Next(2000' 5000)];
Magic Number,ArenaNet.SockNet.Common.IO,ChunkedBufferTest,D:\research\architectureSmells\repos\arenanet_socknet\SockNet.Common.Tests\IO\ChunkedBufferTest.cs,TestReadFromStream,The following statement contains a magic number: ObjectPool<byte[]> pool = new ObjectPool<byte[]>(() => { return new byte[1024]; });
Magic Number,ArenaNet.SockNet.Common.IO,ChunkedBufferTest,D:\research\architectureSmells\repos\arenanet_socknet\SockNet.Common.Tests\IO\ChunkedBufferTest.cs,TestDrainToStream,The following statement contains a magic number: buffer.DrainToStream(stream).WaitForValue(TimeSpan.FromSeconds(5));
Magic Number,ArenaNet.SockNet.Common.IO,ChunkedBufferTest,D:\research\architectureSmells\repos\arenanet_socknet\SockNet.Common.Tests\IO\ChunkedBufferTest.cs,TestWrite,The following statement contains a magic number: ObjectPool<byte[]> pool = new ObjectPool<byte[]>(() => { return new byte[10]; });
Magic Number,ArenaNet.SockNet.Common.IO,ChunkedBufferTest,D:\research\architectureSmells\repos\arenanet_socknet\SockNet.Common.Tests\IO\ChunkedBufferTest.cs,TestWrite,The following statement contains a magic number: Assert.AreEqual(Math.Round((float)TestData.Length / 10f' MidpointRounding.AwayFromZero)' pool.TotalNumberOfObjects);
Magic Number,ArenaNet.SockNet.Common.IO,ChunkedBufferTest,D:\research\architectureSmells\repos\arenanet_socknet\SockNet.Common.Tests\IO\ChunkedBufferTest.cs,TestStreamWriteAndReadAndFlush,The following statement contains a magic number: ObjectPool<byte[]> pool = new ObjectPool<byte[]>(() => { return new byte[10]; });
Magic Number,ArenaNet.SockNet.Common.IO,ChunkedBufferTest,D:\research\architectureSmells\repos\arenanet_socknet\SockNet.Common.Tests\IO\ChunkedBufferTest.cs,TestStreamWriteAndReadAndFlush,The following statement contains a magic number: Assert.AreEqual(Math.Round((float)TestData.Length / 10f' MidpointRounding.AwayFromZero)' pool.TotalNumberOfObjects);
Magic Number,ArenaNet.SockNet.Common.IO,ChunkedBufferTest,D:\research\architectureSmells\repos\arenanet_socknet\SockNet.Common.Tests\IO\ChunkedBufferTest.cs,TestStreamWriteAndReadAndClose,The following statement contains a magic number: ObjectPool<byte[]> pool = new ObjectPool<byte[]>(() => { return new byte[10]; });
Magic Number,ArenaNet.SockNet.Common.IO,ChunkedBufferTest,D:\research\architectureSmells\repos\arenanet_socknet\SockNet.Common.Tests\IO\ChunkedBufferTest.cs,TestStreamWriteAndReadAndClose,The following statement contains a magic number: Assert.AreEqual(Math.Round((float)TestData.Length / 10f' MidpointRounding.AwayFromZero)' pool.TotalNumberOfObjects);
