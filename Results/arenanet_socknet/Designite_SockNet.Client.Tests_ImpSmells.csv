Implementation smell,Namespace,Class,File,Method,Description
Long Method,ArenaNet.SockNet.Client,CertificateUtil,D:\research\architectureSmells\repos\arenanet_socknet\SockNet.Client.Tests\CertificateUtil.cs,CreateSelfSignCertificatePfx,The method has 160 lines of code.
Long Parameter List,ArenaNet.SockNet.Client,NativeMethods,D:\research\architectureSmells\repos\arenanet_socknet\SockNet.Client.Tests\CertificateUtil.cs,CryptAcquireContextW,The method has 5 parameters. Parameters: providerContext' container' provider' providerType' flags
Long Parameter List,ArenaNet.SockNet.Client,NativeMethods,D:\research\architectureSmells\repos\arenanet_socknet\SockNet.Client.Tests\CertificateUtil.cs,CertStrToNameW,The method has 7 parameters. Parameters: certificateEncodingType' x500' strType' reserved' encoded' encodedLength' errorString
Long Parameter List,ArenaNet.SockNet.Client,NativeMethods,D:\research\architectureSmells\repos\arenanet_socknet\SockNet.Client.Tests\CertificateUtil.cs,CertCreateSelfSignCertificate,The method has 8 parameters. Parameters: providerHandle' subjectIssuerBlob' flags' keyProviderInformation' signatureAlgorithm' startTime' endTime' extensions
Long Parameter List,ArenaNet.SockNet.Client,NativeMethods,D:\research\architectureSmells\repos\arenanet_socknet\SockNet.Client.Tests\CertificateUtil.cs,CertOpenStore,The method has 5 parameters. Parameters: storeProvider' messageAndCertificateEncodingType' cryptProvHandle' flags' parameters
Long Parameter List,ArenaNet.SockNet.Client,NativeMethods,D:\research\architectureSmells\repos\arenanet_socknet\SockNet.Client.Tests\CertificateUtil.cs,PFXExportCertStoreEx,The method has 5 parameters. Parameters: certificateStoreHandle' pfxBlob' password' reserved' flags
Long Identifier,ArenaNet.SockNet.Client,NativeMethods,D:\research\architectureSmells\repos\arenanet_socknet\SockNet.Client.Tests\CertificateUtil.cs,CertOpenStore,The length of the parameter messageAndCertificateEncodingType is 33.
Long Statement,ArenaNet.SockNet.Client,SockNetClientTest,D:\research\architectureSmells\repos\arenanet_socknet\SockNet.Client.Tests\SockNetClientTest.cs,TestConnectWithoutSsl,The length of the statement  "                ClientSockNetChannel client = (ClientSockNetChannel)SockNetClient.Create(server.Endpoint' ClientSockNetChannel.DefaultNoDelay' ClientSockNetChannel.DefaultTtl' pool) " is 165.
Long Statement,ArenaNet.SockNet.Client,SockNetClientTest,D:\research\architectureSmells\repos\arenanet_socknet\SockNet.Client.Tests\SockNetClientTest.cs,TestConnectWithoutSsl,The length of the statement  "                client.Pipe.AddIncomingLast<HttpResponse>((ISockNetChannel sockNetClient' ref HttpResponse data) => { blockingCollection.Add(data); }); " is 135.
Long Statement,ArenaNet.SockNet.Client,SockNetClientTest,D:\research\architectureSmells\repos\arenanet_socknet\SockNet.Client.Tests\SockNetClientTest.cs,TestConnectWithSsl,The length of the statement  "                ClientSockNetChannel client = (ClientSockNetChannel)SockNetClient.Create(server.Endpoint' ClientSockNetChannel.DefaultNoDelay' ClientSockNetChannel.DefaultTtl' pool) " is 165.
Long Statement,ArenaNet.SockNet.Client,SockNetClientTest,D:\research\architectureSmells\repos\arenanet_socknet\SockNet.Client.Tests\SockNetClientTest.cs,TestConnectWithSsl,The length of the statement  "                client.ConnectWithTLS((object sender' X509Certificate certificate' X509Chain chain' SslPolicyErrors sslPolicyErrors) => { return true; }) " is 137.
Long Statement,ArenaNet.SockNet.Client,SockNetClientTest,D:\research\architectureSmells\repos\arenanet_socknet\SockNet.Client.Tests\SockNetClientTest.cs,TestConnectWithSsl,The length of the statement  "                client.Pipe.AddIncomingLast<HttpResponse>((ISockNetChannel sockNetClient' ref HttpResponse data) => { blockingCollection.Add(data); }); " is 135.
Long Statement,ArenaNet.SockNet.Client,HttpSimpleServer,D:\research\architectureSmells\repos\arenanet_socknet\SockNet.Client.Tests\SockNetClientTest.cs,Start,The length of the statement  "                        byte[] rawCert = CertificateUtil.CreateSelfSignCertificatePfx("CN=\"test\"; C=\"USA\""' DateTime.Today.AddDays(-10)' DateTime.Today.AddDays(+10)); " is 146.
Long Statement,ArenaNet.SockNet.Client,HttpSimpleServer,D:\research\architectureSmells\repos\arenanet_socknet\SockNet.Client.Tests\SockNetClientTest.cs,Start,The length of the statement  "                            (object sender' X509Certificate certificate' X509Chain chain' SslPolicyErrors sslPolicyErrors) => { return true; }).WaitForValue(TimeSpan.FromSeconds(5)); " is 154.
Magic Number,ArenaNet.SockNet.Client,CertificateUtil,D:\research\architectureSmells\repos\arenanet_socknet\SockNet.Client.Tests\CertificateUtil.cs,CreateSelfSignCertificatePfx,The following statement contains a magic number: Check(NativeMethods.CryptAcquireContextW(                      out providerContext'                      containerName'                      null'                      1' // PROV_RSA_FULL                      8));
Magic Number,ArenaNet.SockNet.Client,CertificateUtil,D:\research\architectureSmells\repos\arenanet_socknet\SockNet.Client.Tests\CertificateUtil.cs,CreateSelfSignCertificatePfx,The following statement contains a magic number: !NativeMethods.CertStrToNameW(                      0x00010001' // X509_ASN_ENCODING | PKCS_7_ASN_ENCODING                      dataHandle.AddrOfPinnedObject()'                      3' // CERT_X500_NAME_STR = 3                      IntPtr.Zero'                      null'                      ref nameDataLength'                      out errorStringPtr)
Magic Number,ArenaNet.SockNet.Client,CertificateUtil,D:\research\architectureSmells\repos\arenanet_socknet\SockNet.Client.Tests\CertificateUtil.cs,CreateSelfSignCertificatePfx,The following statement contains a magic number: !NativeMethods.CertStrToNameW(                      0x00010001' // X509_ASN_ENCODING | PKCS_7_ASN_ENCODING                      dataHandle.AddrOfPinnedObject()'                      3' // CERT_X500_NAME_STR = 3                      IntPtr.Zero'                      nameData'                      ref nameDataLength'                      out errorStringPtr)
Magic Number,ArenaNet.SockNet.Client,CertificateUtil,D:\research\architectureSmells\repos\arenanet_socknet\SockNet.Client.Tests\CertificateUtil.cs,CreateSelfSignCertificatePfx,The following statement contains a magic number: NativeMethods.CertSetCertificateContextProperty(                      storeCertContext'                      2' // CERT_KEY_PROV_INFO_PROP_ID                      0'                      ref kpi);
Magic Number,ArenaNet.SockNet.Client,CertificateUtil,D:\research\architectureSmells\repos\arenanet_socknet\SockNet.Client.Tests\CertificateUtil.cs,CreateSelfSignCertificatePfx,The following statement contains a magic number: Check(NativeMethods.PFXExportCertStoreEx(                      certStore'                      ref pfxBlob'                      passwordPtr'                      IntPtr.Zero'                      7));
Magic Number,ArenaNet.SockNet.Client,CertificateUtil,D:\research\architectureSmells\repos\arenanet_socknet\SockNet.Client.Tests\CertificateUtil.cs,CreateSelfSignCertificatePfx,The following statement contains a magic number: Check(NativeMethods.PFXExportCertStoreEx(                      certStore'                      ref pfxBlob'                      passwordPtr'                      IntPtr.Zero'                      7));
Magic Number,ArenaNet.SockNet.Client,SockNetClientTest,D:\research\architectureSmells\repos\arenanet_socknet\SockNet.Client.Tests\SockNetClientTest.cs,TestConnectWithoutSsl,The following statement contains a magic number: ObjectPool<byte[]> pool = new ObjectPool<byte[]>(() => { return new byte[1024]; });
Magic Number,ArenaNet.SockNet.Client,SockNetClientTest,D:\research\architectureSmells\repos\arenanet_socknet\SockNet.Client.Tests\SockNetClientTest.cs,TestConnectWithoutSsl,The following statement contains a magic number: client.Connect().WaitForValue(TimeSpan.FromSeconds(5));
Magic Number,ArenaNet.SockNet.Client,SockNetClientTest,D:\research\architectureSmells\repos\arenanet_socknet\SockNet.Client.Tests\SockNetClientTest.cs,TestConnectWithoutSsl,The following statement contains a magic number: client.Disconnect().WaitForValue(TimeSpan.FromSeconds(5));
Magic Number,ArenaNet.SockNet.Client,SockNetClientTest,D:\research\architectureSmells\repos\arenanet_socknet\SockNet.Client.Tests\SockNetClientTest.cs,TestConnectWithSsl,The following statement contains a magic number: ObjectPool<byte[]> pool = new ObjectPool<byte[]>(() => { return new byte[1024]; });
Magic Number,ArenaNet.SockNet.Client,SockNetClientTest,D:\research\architectureSmells\repos\arenanet_socknet\SockNet.Client.Tests\SockNetClientTest.cs,TestConnectWithSsl,The following statement contains a magic number: client.ConnectWithTLS((object sender' X509Certificate certificate' X509Chain chain' SslPolicyErrors sslPolicyErrors) => { return true; })                      .WaitForValue(TimeSpan.FromSeconds(5));
Magic Number,ArenaNet.SockNet.Client,SockNetClientTest,D:\research\architectureSmells\repos\arenanet_socknet\SockNet.Client.Tests\SockNetClientTest.cs,TestConnectWithSsl,The following statement contains a magic number: client.Disconnect().WaitForValue(TimeSpan.FromSeconds(5));
Magic Number,ArenaNet.SockNet.Client,HttpSimpleServer,D:\research\architectureSmells\repos\arenanet_socknet\SockNet.Client.Tests\SockNetClientTest.cs,Start,The following statement contains a magic number: byte[] rawCert = CertificateUtil.CreateSelfSignCertificatePfx("CN=\"test\"; C=\"USA\""' DateTime.Today.AddDays(-10)' DateTime.Today.AddDays(+10));
Magic Number,ArenaNet.SockNet.Client,HttpSimpleServer,D:\research\architectureSmells\repos\arenanet_socknet\SockNet.Client.Tests\SockNetClientTest.cs,Start,The following statement contains a magic number: byte[] rawCert = CertificateUtil.CreateSelfSignCertificatePfx("CN=\"test\"; C=\"USA\""' DateTime.Today.AddDays(-10)' DateTime.Today.AddDays(+10));
Magic Number,ArenaNet.SockNet.Client,HttpSimpleServer,D:\research\architectureSmells\repos\arenanet_socknet\SockNet.Client.Tests\SockNetClientTest.cs,Start,The following statement contains a magic number: server.BindWithTLS(new X509Certificate2(rawCert)'                              (object sender' X509Certificate certificate' X509Chain chain' SslPolicyErrors sslPolicyErrors) => { return true; }).WaitForValue(TimeSpan.FromSeconds(5));
