Implementation smell,Namespace,Class,File,Method,Description
Magic Number,Splunk.Examples.ModularInputs,Program,C:\repos\splunk_splunk-sdk-csharp\examples\modular_input\Program.cs,StreamEvents,The following statement contains a magic number: using (var writer = new EventStreamWriter())              {                  var stanza = inputDefinition.Stanza;                    // Gets input name. It is also the env var name.                  const string Seperator = @"://";                  var indexInputName = stanza.Name.IndexOf(Seperator) + Seperator.Length;                  var varName = stanza.Name.Substring(indexInputName);                    SystemLogger.Write(                      string.Format(                          "Name of the var to monitor is : {0}"'                          varName));                    var interval = 1000;                    string intervalParam;                  if (stanza.SingleValueParameters.TryGetValue(                      PollingInterval'                      out intervalParam))                  {                      interval = int.Parse(intervalParam);                  }                    SystemLogger.Write(                      string.Format(                          "Polling interval is : {0}"'                          interval));                    while (true)                  {                      var varValue = Environment.GetEnvironmentVariable(                          varName'                          EnvironmentVariableTarget.Machine);                        // Event data can't be null for real events.                        varValue = varValue ?? "(not exist)";                        // Splunk does not record lines with only white spaces.                      varValue = string.IsNullOrWhiteSpace(varValue)                                     ? "(white space)"                                     : varValue;                        if (varValue != lastVarValue)                      {                          writer.Write(                              new EventElement                                  {                                      Source = varName'                                      Data = varValue'                                  });                          lastVarValue = varValue;                      }                      Thread.Sleep(interval);                  }              }
