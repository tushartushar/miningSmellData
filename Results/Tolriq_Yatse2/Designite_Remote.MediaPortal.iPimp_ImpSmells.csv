Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Remote.MediaPortal.iPimp.Api,MediaPortalAudioPlayer,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.MediaPortal.iPimp\Api\MediaPortal.AudioPlayer.cs,PlayFiles,The length of the statement  "            _parent.IPimpCommand(new CommandInfoIPimp { Action = "playtracks"' Tracks = string.Join("'"' tracks.ToArray())' Shuffle = false' Enqueue = false }); " is 148.
Long Statement,Remote.MediaPortal.iPimp.Api,MediaPortalFile,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.MediaPortal.iPimp\Api\MediaPortal.File.cs,DownloadImages,The length of the statement  "                    _parent.GenerateThumb(apiImageDownloadInfo.Destination' apiImageDownloadInfo.Destination' apiImageDownloadInfo.MaxHeight); " is 122.
Long Statement,Remote.MediaPortal.iPimp.Api,MediaPortalPlayer,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.MediaPortal.iPimp\Api\MediaPortal.Player.cs,RefreshNowPlaying,The length of the statement  "                _nowPlaying.IsPlaying = (Convert.ToString(data["playstatus"]' CultureInfo.InvariantCulture) == "playing") ? true : false; " is 121.
Long Statement,Remote.MediaPortal.iPimp.Api,MediaPortalPlayer,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.MediaPortal.iPimp\Api\MediaPortal.Player.cs,RefreshNowPlaying,The length of the statement  "                var percent = Math.Floor(100.0 * Convert.ToDouble("0" + data["position"]' CultureInfo.CurrentCulture) / Convert.ToDouble("0" + data["duration"]' CultureInfo.CurrentCulture)); " is 174.
Long Statement,Remote.MediaPortal.iPimp.Api,MediaPortalPlayer,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.MediaPortal.iPimp\Api\MediaPortal.Player.cs,SeekPercentage,The length of the statement  "                _parent.AsyncIPimpCommand(new CommandInfoIPimp { Action = "seekpercentage"' Value = Convert.ToString(progress' CultureInfo.InvariantCulture) }); " is 144.
Long Statement,Remote.MediaPortal.iPimp.Api,MediaPortalPlayer,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.MediaPortal.iPimp\Api\MediaPortal.Player.cs,SetVolume,The length of the statement  "                _parent.AsyncIPimpCommand(new CommandInfoIPimp { Action = "volume"' Value = Convert.ToString(percentage' CultureInfo.InvariantCulture) }); " is 138.
Long Statement,Remote.MediaPortal.iPimp.Api,MediaPortalVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.MediaPortal.iPimp\Api\MediaPortal.VideoLibrary.cs,GetMovies,The length of the statement  "                    Rating = Convert.ToDouble(((string)dbline["rating"]).Replace('''''.')' CultureInfo.InvariantCulture).ToString(CultureInfo.InvariantCulture)' " is 140.
Long Statement,Remote.MediaPortal.iPimp.Api,MediaPortalVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.MediaPortal.iPimp\Api\MediaPortal.VideoLibrary.cs,GetMovies,The length of the statement  "                    Rating = Convert.ToDouble(((string)dbline["rating"]).Replace('''' '.')' CultureInfo.InvariantCulture).ToString(CultureInfo.InvariantCulture)' " is 141.
Long Statement,Remote.MediaPortal.iPimp.Api,MediaPortalVideoPlayer,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.MediaPortal.iPimp\Api\MediaPortal.VideoPlayer.cs,PlayMovie,The length of the statement  "                _parent.AsyncIPimpCommand(new CommandInfoIPimp { Action = "playmovie"' Filter = video.IdMovie.ToString(CultureInfo.InvariantCulture) ' Value = "force" ' Tracks = "no" }); " is 170.
Long Statement,Remote.MediaPortal.iPimp.Api,MediaPortalVideoPlayer,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.MediaPortal.iPimp\Api\MediaPortal.VideoPlayer.cs,PlayMovie,The length of the statement  "                _parent.AsyncIPimpCommand(new CommandInfoIPimp { Action = "playmovingpicture"' Filter = video.IdMovie.ToString(CultureInfo.InvariantCulture)' Value = "force"' Tracks = "no" }); " is 176.
Magic Number,Remote.MediaPortal.iPimp.Api,MediaPortal,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.MediaPortal.iPimp\Api\MediaPortal.cs,Hash,The following statement contains a magic number: for (var index = 0; index < chars.Length; index++)              {                  if (chars[index] <= 127)                      chars[index] = Char.ToLowerInvariant(chars[index]);              }
Magic Number,Remote.MediaPortal.iPimp.Api,MediaPortal,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.MediaPortal.iPimp\Api\MediaPortal.cs,Hash,The following statement contains a magic number: foreach (var myByte in bytes)              {                  mCrc ^= ((uint)(myByte) << 24);                  for (var i = 0; i < 8; i++)                  {                      if ((Convert.ToUInt32(mCrc) & 0x80000000) == 0x80000000)                      {                          mCrc = (mCrc << 1) ^ 0x04C11DB7;                      }                      else                      {                          mCrc <<= 1;                      }                  }              }
Magic Number,Remote.MediaPortal.iPimp.Api,MediaPortal,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.MediaPortal.iPimp\Api\MediaPortal.cs,Hash,The following statement contains a magic number: foreach (var myByte in bytes)              {                  mCrc ^= ((uint)(myByte) << 24);                  for (var i = 0; i < 8; i++)                  {                      if ((Convert.ToUInt32(mCrc) & 0x80000000) == 0x80000000)                      {                          mCrc = (mCrc << 1) ^ 0x04C11DB7;                      }                      else                      {                          mCrc <<= 1;                      }                  }              }
Magic Number,Remote.MediaPortal.iPimp.Api,MediaPortal,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.MediaPortal.iPimp\Api\MediaPortal.cs,Configure,The following statement contains a magic number: if (_checkTimer == null)              {                  _checkTimer = new Timer { Interval = 1000' SynchronizingObject = null };                  _checkTimer.Elapsed += CheckTimerTick;                  _checkTimer.Start();              }
Magic Number,Remote.MediaPortal.iPimp.Api,MediaPortal,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.MediaPortal.iPimp\Api\MediaPortal.cs,Configure,The following statement contains a magic number: if (_nowplayingTimer == null)              {                  _nowplayingTimer = new Timer { Interval = 1000' SynchronizingObject = null };                  _nowplayingTimer.Elapsed += NowPlayingTimerTick;                  _nowplayingTimer.Start();              }
Magic Number,Remote.MediaPortal.iPimp.Api,MediaPortalFile,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.MediaPortal.iPimp\Api\MediaPortal.File.cs,AsyncDownloadImages,The following statement contains a magic number: while (_workerDownloads.IsBusy)              {                  Thread.Sleep(50);                  System.Windows.Forms.Application.DoEvents();              }
Magic Number,Remote.MediaPortal.iPimp.Api,MediaPortalFile,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.MediaPortal.iPimp\Api\MediaPortal.File.cs,AsyncImagesDownloadsWorker,The following statement contains a magic number: foreach (var downloadFileInfo in downloadsFileInfo)              {                  if (((BackgroundWorker)sender).CancellationPending)                  {                      _isDownloading = false;                      e.Cancel = true;                      return;                  }                  DownloadImages(downloadFileInfo);                  Thread.Sleep(100);              }
Magic Number,Remote.MediaPortal.iPimp.Api,MediaPortalPlayer,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.MediaPortal.iPimp\Api\MediaPortal.Player.cs,RefreshNowPlaying,The following statement contains a magic number: lock (Locker)              {                  var data = _parent.IPimpCommand(new CommandInfoIPimp {Action = "nowplaying"});                    if (!Convert.ToBoolean(data["result"]' CultureInfo.InvariantCulture))                  {                      return;                  }                    _nowPlaying.FileName = Convert.ToString(data["filename"]' CultureInfo.InvariantCulture);                  _nowPlaying.Title = Convert.ToString(data["title"]' CultureInfo.InvariantCulture);                    _nowPlaying.Artist = Convert.ToString(data["artist"]' CultureInfo.InvariantCulture);                  _nowPlaying.Album = Convert.ToString(data["album"]' CultureInfo.InvariantCulture);                  _nowPlaying.Year = Convert.ToInt32(data["year"]' CultureInfo.InvariantCulture);                  _nowPlaying.Track = Convert.ToInt32(data["track"]' CultureInfo.InvariantCulture);                  _nowPlaying.Genre = Convert.ToString(data["genre"]' CultureInfo.InvariantCulture);                  _nowPlaying.ThumbURL = Convert.ToString(data["thumb"]' CultureInfo.InvariantCulture);                  _nowPlaying.FanartURL = Convert.ToString(data["fanart"]' CultureInfo.InvariantCulture);                  _nowPlaying.ShowTitle = Convert.ToString(data["showtitle"]' CultureInfo.InvariantCulture);                 // _nowPlaying.FirstAired = new DateTime(); // Convert.ToString(data["firstaired"]);                  _nowPlaying.Plot = Convert.ToString(data["plot"]' CultureInfo.InvariantCulture);                  _nowPlaying.Tagline = Convert.ToString(data["tagline"]' CultureInfo.InvariantCulture);                  _nowPlaying.Rating = Convert.ToString(data["rating"]' CultureInfo.InvariantCulture);                  _nowPlaying.Director = Convert.ToString(data["director"]' CultureInfo.InvariantCulture);                  _nowPlaying.SeasonNumber = Convert.ToInt32(data["season"]' CultureInfo.InvariantCulture);                  _nowPlaying.EpisodeNumber = Convert.ToInt32(data["episode"]' CultureInfo.InvariantCulture);                  _nowPlaying.Studio = Convert.ToString(data["studio"]' CultureInfo.InvariantCulture);                    _nowPlaying.IsPlaying = (Convert.ToString(data["playstatus"]' CultureInfo.InvariantCulture) == "playing") ? true : false;                  _nowPlaying.IsPaused = (Convert.ToString(data["playstatus"]' CultureInfo.InvariantCulture) == "paused") ? true : false;                    var percent = Math.Floor(100.0 * Convert.ToDouble("0" + data["position"]' CultureInfo.CurrentCulture) / Convert.ToDouble("0" + data["duration"]' CultureInfo.CurrentCulture));                  if (Double.IsNaN(percent))                      percent = 0;                    _nowPlaying.Progress = (int) percent;                  var type = Convert.ToString(data["media"]' CultureInfo.InvariantCulture);                  switch (type)                  {                      case "video":                          _nowPlaying.MediaType = "Movie";                          break;                      case "movingpicture":                          _nowPlaying.MediaType = "Movie";                          break;                      case "tvepisode":                          _nowPlaying.MediaType = "TvShow";                          break;                      case "music":                          _nowPlaying.MediaType = "Audio";                          break;                      default:                          _nowPlaying.MediaType = "Unknown";                          break;                  }                    var firstaired = Convert.ToString(data["firstaired"]' CultureInfo.InvariantCulture);                  if (! string.IsNullOrEmpty(firstaired))                  {                      var splitaired = firstaired.Split('-');                      if (splitaired.Length > 2)                          _nowPlaying.FirstAired =                              new DateTime(Convert.ToInt32("0" + splitaired[0]' CultureInfo.InvariantCulture)'                                           Convert.ToInt32("0" + splitaired[1]' CultureInfo.InvariantCulture)'                                           Convert.ToInt32("0" + splitaired[2]' CultureInfo.InvariantCulture));                    }                  _nowPlaying.Volume = Convert.ToInt32(data["volume"]' CultureInfo.InvariantCulture);                  _nowPlaying.Time = new TimeSpan(0' 0' (int)Convert.ToDouble("0" + ((string)data["position"])));                  _nowPlaying.Duration = new TimeSpan(0' 0' (int)Convert.ToDouble("0" + ((string)data["duration"])));                    _nowPlaying.IsMuted = (_nowPlaying.Volume == 0) ? true : false;              }
Magic Number,Remote.MediaPortal.iPimp.Api,MediaPortalPlayer,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.MediaPortal.iPimp\Api\MediaPortal.Player.cs,RefreshNowPlaying,The following statement contains a magic number: lock (Locker)              {                  var data = _parent.IPimpCommand(new CommandInfoIPimp {Action = "nowplaying"});                    if (!Convert.ToBoolean(data["result"]' CultureInfo.InvariantCulture))                  {                      return;                  }                    _nowPlaying.FileName = Convert.ToString(data["filename"]' CultureInfo.InvariantCulture);                  _nowPlaying.Title = Convert.ToString(data["title"]' CultureInfo.InvariantCulture);                    _nowPlaying.Artist = Convert.ToString(data["artist"]' CultureInfo.InvariantCulture);                  _nowPlaying.Album = Convert.ToString(data["album"]' CultureInfo.InvariantCulture);                  _nowPlaying.Year = Convert.ToInt32(data["year"]' CultureInfo.InvariantCulture);                  _nowPlaying.Track = Convert.ToInt32(data["track"]' CultureInfo.InvariantCulture);                  _nowPlaying.Genre = Convert.ToString(data["genre"]' CultureInfo.InvariantCulture);                  _nowPlaying.ThumbURL = Convert.ToString(data["thumb"]' CultureInfo.InvariantCulture);                  _nowPlaying.FanartURL = Convert.ToString(data["fanart"]' CultureInfo.InvariantCulture);                  _nowPlaying.ShowTitle = Convert.ToString(data["showtitle"]' CultureInfo.InvariantCulture);                 // _nowPlaying.FirstAired = new DateTime(); // Convert.ToString(data["firstaired"]);                  _nowPlaying.Plot = Convert.ToString(data["plot"]' CultureInfo.InvariantCulture);                  _nowPlaying.Tagline = Convert.ToString(data["tagline"]' CultureInfo.InvariantCulture);                  _nowPlaying.Rating = Convert.ToString(data["rating"]' CultureInfo.InvariantCulture);                  _nowPlaying.Director = Convert.ToString(data["director"]' CultureInfo.InvariantCulture);                  _nowPlaying.SeasonNumber = Convert.ToInt32(data["season"]' CultureInfo.InvariantCulture);                  _nowPlaying.EpisodeNumber = Convert.ToInt32(data["episode"]' CultureInfo.InvariantCulture);                  _nowPlaying.Studio = Convert.ToString(data["studio"]' CultureInfo.InvariantCulture);                    _nowPlaying.IsPlaying = (Convert.ToString(data["playstatus"]' CultureInfo.InvariantCulture) == "playing") ? true : false;                  _nowPlaying.IsPaused = (Convert.ToString(data["playstatus"]' CultureInfo.InvariantCulture) == "paused") ? true : false;                    var percent = Math.Floor(100.0 * Convert.ToDouble("0" + data["position"]' CultureInfo.CurrentCulture) / Convert.ToDouble("0" + data["duration"]' CultureInfo.CurrentCulture));                  if (Double.IsNaN(percent))                      percent = 0;                    _nowPlaying.Progress = (int) percent;                  var type = Convert.ToString(data["media"]' CultureInfo.InvariantCulture);                  switch (type)                  {                      case "video":                          _nowPlaying.MediaType = "Movie";                          break;                      case "movingpicture":                          _nowPlaying.MediaType = "Movie";                          break;                      case "tvepisode":                          _nowPlaying.MediaType = "TvShow";                          break;                      case "music":                          _nowPlaying.MediaType = "Audio";                          break;                      default:                          _nowPlaying.MediaType = "Unknown";                          break;                  }                    var firstaired = Convert.ToString(data["firstaired"]' CultureInfo.InvariantCulture);                  if (! string.IsNullOrEmpty(firstaired))                  {                      var splitaired = firstaired.Split('-');                      if (splitaired.Length > 2)                          _nowPlaying.FirstAired =                              new DateTime(Convert.ToInt32("0" + splitaired[0]' CultureInfo.InvariantCulture)'                                           Convert.ToInt32("0" + splitaired[1]' CultureInfo.InvariantCulture)'                                           Convert.ToInt32("0" + splitaired[2]' CultureInfo.InvariantCulture));                    }                  _nowPlaying.Volume = Convert.ToInt32(data["volume"]' CultureInfo.InvariantCulture);                  _nowPlaying.Time = new TimeSpan(0' 0' (int)Convert.ToDouble("0" + ((string)data["position"])));                  _nowPlaying.Duration = new TimeSpan(0' 0' (int)Convert.ToDouble("0" + ((string)data["duration"])));                    _nowPlaying.IsMuted = (_nowPlaying.Volume == 0) ? true : false;              }
Magic Number,Remote.MediaPortal.iPimp.Api,MediaPortalPlayer,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.MediaPortal.iPimp\Api\MediaPortal.Player.cs,RefreshNowPlaying,The following statement contains a magic number: lock (Locker)              {                  var data = _parent.IPimpCommand(new CommandInfoIPimp {Action = "nowplaying"});                    if (!Convert.ToBoolean(data["result"]' CultureInfo.InvariantCulture))                  {                      return;                  }                    _nowPlaying.FileName = Convert.ToString(data["filename"]' CultureInfo.InvariantCulture);                  _nowPlaying.Title = Convert.ToString(data["title"]' CultureInfo.InvariantCulture);                    _nowPlaying.Artist = Convert.ToString(data["artist"]' CultureInfo.InvariantCulture);                  _nowPlaying.Album = Convert.ToString(data["album"]' CultureInfo.InvariantCulture);                  _nowPlaying.Year = Convert.ToInt32(data["year"]' CultureInfo.InvariantCulture);                  _nowPlaying.Track = Convert.ToInt32(data["track"]' CultureInfo.InvariantCulture);                  _nowPlaying.Genre = Convert.ToString(data["genre"]' CultureInfo.InvariantCulture);                  _nowPlaying.ThumbURL = Convert.ToString(data["thumb"]' CultureInfo.InvariantCulture);                  _nowPlaying.FanartURL = Convert.ToString(data["fanart"]' CultureInfo.InvariantCulture);                  _nowPlaying.ShowTitle = Convert.ToString(data["showtitle"]' CultureInfo.InvariantCulture);                 // _nowPlaying.FirstAired = new DateTime(); // Convert.ToString(data["firstaired"]);                  _nowPlaying.Plot = Convert.ToString(data["plot"]' CultureInfo.InvariantCulture);                  _nowPlaying.Tagline = Convert.ToString(data["tagline"]' CultureInfo.InvariantCulture);                  _nowPlaying.Rating = Convert.ToString(data["rating"]' CultureInfo.InvariantCulture);                  _nowPlaying.Director = Convert.ToString(data["director"]' CultureInfo.InvariantCulture);                  _nowPlaying.SeasonNumber = Convert.ToInt32(data["season"]' CultureInfo.InvariantCulture);                  _nowPlaying.EpisodeNumber = Convert.ToInt32(data["episode"]' CultureInfo.InvariantCulture);                  _nowPlaying.Studio = Convert.ToString(data["studio"]' CultureInfo.InvariantCulture);                    _nowPlaying.IsPlaying = (Convert.ToString(data["playstatus"]' CultureInfo.InvariantCulture) == "playing") ? true : false;                  _nowPlaying.IsPaused = (Convert.ToString(data["playstatus"]' CultureInfo.InvariantCulture) == "paused") ? true : false;                    var percent = Math.Floor(100.0 * Convert.ToDouble("0" + data["position"]' CultureInfo.CurrentCulture) / Convert.ToDouble("0" + data["duration"]' CultureInfo.CurrentCulture));                  if (Double.IsNaN(percent))                      percent = 0;                    _nowPlaying.Progress = (int) percent;                  var type = Convert.ToString(data["media"]' CultureInfo.InvariantCulture);                  switch (type)                  {                      case "video":                          _nowPlaying.MediaType = "Movie";                          break;                      case "movingpicture":                          _nowPlaying.MediaType = "Movie";                          break;                      case "tvepisode":                          _nowPlaying.MediaType = "TvShow";                          break;                      case "music":                          _nowPlaying.MediaType = "Audio";                          break;                      default:                          _nowPlaying.MediaType = "Unknown";                          break;                  }                    var firstaired = Convert.ToString(data["firstaired"]' CultureInfo.InvariantCulture);                  if (! string.IsNullOrEmpty(firstaired))                  {                      var splitaired = firstaired.Split('-');                      if (splitaired.Length > 2)                          _nowPlaying.FirstAired =                              new DateTime(Convert.ToInt32("0" + splitaired[0]' CultureInfo.InvariantCulture)'                                           Convert.ToInt32("0" + splitaired[1]' CultureInfo.InvariantCulture)'                                           Convert.ToInt32("0" + splitaired[2]' CultureInfo.InvariantCulture));                    }                  _nowPlaying.Volume = Convert.ToInt32(data["volume"]' CultureInfo.InvariantCulture);                  _nowPlaying.Time = new TimeSpan(0' 0' (int)Convert.ToDouble("0" + ((string)data["position"])));                  _nowPlaying.Duration = new TimeSpan(0' 0' (int)Convert.ToDouble("0" + ((string)data["duration"])));                    _nowPlaying.IsMuted = (_nowPlaying.Volume == 0) ? true : false;              }
