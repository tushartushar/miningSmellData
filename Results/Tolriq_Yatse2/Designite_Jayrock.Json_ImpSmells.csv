Implementation smell,Namespace,Class,File,Method,Description
Long Method,Jayrock,InternetDate,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\InternetDate.cs,Parse,The method has 122 lines of code.
Long Method,Jayrock.Json,JsonTextReader,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Json\JsonTextReader.cs,Parse,The method has 100 lines of code.
Long Method,Jayrock.Json.Conversion,CustomTypeDescriptor,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Json\Conversion\CustomTypeDescriptor.cs,CustomTypeDescriptor,The method has 106 lines of code.
Complex Method,Jayrock,InternetDate,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\InternetDate.cs,Parse,Cyclomatic complexity of the method is 16
Complex Method,Jayrock.Configuration,DictionarySectionHandler,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Configuration\DictionarySectionHandler.cs,Create,Cyclomatic complexity of the method is 9
Complex Method,Jayrock.JsonML,JsonMLCodec,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\JsonML\JsonMLCodec.cs,DecodeArrayForm,Cyclomatic complexity of the method is 12
Complex Method,Jayrock.JsonML,JsonMLCodec,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\JsonML\JsonMLCodec.cs,DecodeObjectForm,Cyclomatic complexity of the method is 20
Complex Method,Jayrock.JsonML,JsonMLCodec,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\JsonML\JsonMLCodec.cs,EncodeArrayForm,Cyclomatic complexity of the method is 9
Complex Method,Jayrock.JsonML,JsonMLCodec,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\JsonML\JsonMLCodec.cs,EncodeObjectForm,Cyclomatic complexity of the method is 12
Complex Method,Jayrock.Json,JsonString,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Json\JsonString.cs,Enquote,Cyclomatic complexity of the method is 12
Complex Method,Jayrock.Json,JsonString,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Json\JsonString.cs,Dequote,Cyclomatic complexity of the method is 13
Complex Method,Jayrock.Json,JsonTextReader,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Json\JsonTextReader.cs,Parse,Cyclomatic complexity of the method is 14
Complex Method,Jayrock.Json,JsonTextReader,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Json\JsonTextReader.cs,NextClean,Cyclomatic complexity of the method is 11
Complex Method,Jayrock.Json,JsonWriter,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Json\JsonWriter.cs,WriteFromReader,Cyclomatic complexity of the method is 11
Complex Method,Jayrock.Json.Conversion,CustomTypeDescriptor,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Json\Conversion\CustomTypeDescriptor.cs,CustomTypeDescriptor,Cyclomatic complexity of the method is 13
Complex Method,Jayrock.Json.Conversion,ExportContext,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Json\Conversion\ExportContext.cs,FindCompatibleExporter,Cyclomatic complexity of the method is 10
Complex Method,Jayrock.Json.Conversion.Converters,ImporterBase,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Json\Conversion\Converters\ImporterBase.cs,Import,Cyclomatic complexity of the method is 10
Long Identifier,Jayrock.Json.Conversion,JsonConvert,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Json\Conversion\JsonConvert.cs,,The length of the parameter _defaultExportContextFactoryHandler is 35.
Long Identifier,Jayrock.Json.Conversion,JsonConvert,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Json\Conversion\JsonConvert.cs,,The length of the parameter _defaultImportContextFactoryHandler is 35.
Long Identifier,Jayrock.Json.Conversion,JsonConvert,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Json\Conversion\JsonConvert.cs,,The length of the parameter _currentExportContextFactoryHandler is 35.
Long Identifier,Jayrock.Json.Conversion,JsonConvert,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Json\Conversion\JsonConvert.cs,,The length of the parameter _currentImportContextFactoryHandler is 35.
Long Statement,Jayrock.Configuration,DictionarySectionHandler,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Configuration\DictionarySectionHandler.cs,Create,The length of the statement  "                        throw new ConfigurationException(string.Format("'{0}' is not a valid dictionary node. Use add' remove or clear."' nodeName)' childNode); " is 136.
Long Statement,Jayrock.Configuration,ListSectionHandler,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Configuration\ListSectionHandler.cs,Create,The length of the statement  "                    throw new ConfigurationException(string.Format("Element <{0}> is not valid here in configuration. Use <{1}> elements only."'  " is 124.
Long Statement,Jayrock.Configuration,TypeListSectionHandler,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Configuration\TypeListSectionHandler.cs,GetItem,The length of the statement  "                throw new ConfigurationException(string.Format("Missing type name specification on <{0}> element."' ElementName)' element); " is 123.
Long Statement,Jayrock.Configuration,TypeListSectionHandler,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Configuration\TypeListSectionHandler.cs,ValidateType,The length of the statement  "                throw new ConfigurationException(string.Format("The type {0} is not valid for the <{2}> configuration element. It must be compatible with the type {1}."' type.FullName' ExpectedType.FullName' element.Name)' element); " is 216.
Long Statement,Jayrock.Json,JsonObject,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Json\JsonObject.cs,OnValidate,The length of the statement  "                throw new ArgumentException(string.Format("The key cannot be of the supplied type {0}. It must be typed System.String."' key.GetType().FullName)' "key"); " is 153.
Long Statement,Jayrock.Json,JsonTokenClass,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Json\JsonTokenClass.cs,GetRealObject,The length of the statement  "            throw new SerializationException(string.Format("{0} is not a valid {1} instance."' Name' typeof(JsonTokenClass).FullName)); " is 123.
Long Statement,Jayrock.Json.Conversion,TypeMemberDescriptor,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Json\Conversion\CustomTypeDescriptor.cs,ApplyCustomizations,The length of the statement  "                IPropertyDescriptorCustomization[] customizations = (IPropertyDescriptorCustomization[]) Member.GetCustomAttributes(typeof(IPropertyDescriptorCustomization)' true); " is 164.
Long Statement,Jayrock.Json.Conversion.Converters,ArrayImporter,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Json\Conversion\Converters\ArrayImporter.cs,AssertArrayType,The length of the statement  "                throw new ArgumentException(string.Format("{0} is not one-dimension array. Multi-dimensional arrays are not supported."' type.FullName)' "arrayType"); " is 150.
Long Statement,Jayrock.Json.Conversion.Converters,BooleanImporter,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Json\Conversion\Converters\BooleanImporter.cs,ImportFromNumber,The length of the statement  "                throw new JsonException(string.Format("The JSON Number {0} must be an integer to be convertible to System.Boolean."' reader.Text)' e); " is 134.
Long Statement,Jayrock.Json.Conversion.Converters,ByteArrayImporter,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Json\Conversion\Converters\ByteArrayImporter.cs,ImportFromString,The length of the statement  "                throw new JsonException("Error converting JSON String containing base64-encode data to " + OutputType.FullName + "."' e); " is 121.
Long Statement,Jayrock.Json.Conversion.Converters,ObjectReferenceTracker,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Json\Conversion\Converters\ComponentExporter.cs,PushNew,The length of the statement  "                        throw new JsonException(string.Format("{0} does not support export of an object graph containing circular references. A value of type {1} has already been exported."' typeof(ComponentExporter).FullName' value.GetType().FullName)); " is 230.
Long Statement,Jayrock.Json.Conversion.Converters,DateTimeImporter,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Json\Conversion\Converters\DateTimeImporter.cs,GetImportException,The length of the statement  "            return new JsonException(string.Format("Found {0} where expecting a JSON String in ISO 8601 time format or a JSON Number expressed in Unix time."' jsonValueType)); " is 163.
Long Statement,Jayrock.Json.Conversion.Converters,EnumImporter,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Json\Conversion\Converters\EnumImporter.cs,Error,The length of the statement  "            return new JsonException(string.Format("The value '{0}' cannot be imported as {1}."' DebugString.Format(s)' OutputType.FullName)' e); " is 133.
Long Statement,Jayrock.Json.Conversion.Converters,NameValueCollectionImporter,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Json\Conversion\Converters\NameValueCollectionImporter.cs,GetValueAsString,The length of the statement  "                throw new JsonException(string.Format("Cannot put a JSON {0} value in a NameValueCollection instance."' reader.TokenClass)); " is 124.
Complex Conditional,Jayrock.Json,JsonReader,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Json\JsonReader.cs,ReadToken,The conditional expression  "depth == 0 && TokenClass == JsonTokenClass.Array &&                  (token.IsScalar || token == JsonTokenClass.Null)"  is complex.
Complex Conditional,Jayrock.Json,JsonTextReader,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Json\JsonTextReader.cs,Parse,The conditional expression  "(b >= '0' && b <= '9') || b == '.' || b == '-' || b == '+'"  is complex.
Complex Conditional,Jayrock.Json,JsonTextReader,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Json\JsonTextReader.cs,Parse,The conditional expression  "(b == '-' && s.Length >= 2 && s[1] == 'I') // rule out -Infinity that double parsing allows                          || !double.TryParse(s' NumberStyles.Float' CultureInfo.InvariantCulture' out unused)"  is complex.
Complex Conditional,Jayrock.Json.Conversion,CustomTypeDescriptor,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Json\Conversion\CustomTypeDescriptor.cs,CustomTypeDescriptor,The conditional expression  "(property.CanRead) &&                          (isAnonymousClass || property.CanWrite || property.IsDefined(typeof(JsonExportAttribute)' true)) &&                          property.GetIndexParameters().Length == 0"  is complex.
Complex Conditional,Jayrock.Json.Conversion,ExportContext,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Json\Conversion\ExportContext.cs,FindCompatibleExporter,The conditional expression  "(type.IsPublic || type.IsNestedPublic) &&                  !type.IsPrimitive && !type.IsEnum &&                  (type.IsValueType || type.GetConstructor(Type.EmptyTypes) != null)"  is complex.
Complex Conditional,Jayrock.Json.Conversion,ImportContext,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Json\Conversion\ImportContext.cs,FindCompatibleImporter,The conditional expression  "(type.IsPublic || type.IsNestedPublic) &&                   !type.IsPrimitive &&                   (type.IsValueType || type.GetConstructor(Type.EmptyTypes) != null)"  is complex.
Virtual Method Call from Constructor,Jayrock.Json,JsonObject,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Json\JsonObject.cs,JsonObject,The constructor "JsonObject" calls a virtual method "Accumulate".
Magic Number,Jayrock,InternetDate,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\InternetDate.cs,Parse,The following statement contains a magic number: zone.Length == 2                  && zfirst == 'U' && zlast == 'T'
Magic Number,Jayrock,InternetDate,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\InternetDate.cs,Parse,The following statement contains a magic number: zone.Length < 4
Magic Number,Jayrock,InternetDate,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\InternetDate.cs,Parse,The following statement contains a magic number: TimeSpan offset = new TimeSpan(zzz / 100' zzz % 100' 0);
Magic Number,Jayrock,InternetDate,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\InternetDate.cs,Parse,The following statement contains a magic number: TimeSpan offset = new TimeSpan(zzz / 100' zzz % 100' 0);
Magic Number,Jayrock,UnixTime,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\UnixTime.cs,ToDateTime,The following statement contains a magic number: return ToDateTime((long) time' (int) Math.Round(time % 1 * 1000));
Magic Number,Jayrock,UnixTime,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\UnixTime.cs,ToDateTime,The following statement contains a magic number: ms < 0 || ms > 999
Magic Number,Jayrock,UnixTime,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\UnixTime.cs,ToDouble,The following statement contains a magic number: return (time.ToUniversalTime() - new DateTime(1970' 1' 1)).TotalSeconds;
Magic Number,Jayrock.Configuration,ListSectionHandler,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Configuration\ListSectionHandler.cs,CreateList,The following statement contains a magic number: return parent != null ?                  new ArrayList((ICollection) parent) :                  new ArrayList(/* capacity */ 4);
Magic Number,Jayrock.Diagnostics,DebugString,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Diagnostics\DebugString.cs,Format,The following statement contains a magic number: return Format(s' 50);
Magic Number,Jayrock.JsonML,JsonMLCodec,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\JsonML\JsonMLCodec.cs,DecodeObjectForm,The following statement contains a magic number: switch (memberName)                  {                      case "tagName":                      {                          if (tagName != null && string.CompareOrdinal(reader.Text' tagName) != 0)                              throw new JsonMLException("Tag name already defined.");                          tagName = reader.Text;                          if (tagName.Length == 0)                              throw new JsonMLException("Tag name cannot be empty.");                          reader.Read();                          break;                      }                      case "childNodes":                      {                          if (reader.TokenClass == JsonTokenClass.Null)                          {                              reader.Read();                          }                          else                          {                              if (reader.TokenClass != JsonTokenClass.Array)                                  throw new JsonMLException("Child nodes must be a JSON array.");                                                            JsonRecorder aChildNodes = new JsonRecorder();                              aChildNodes.WriteFromReader(reader);                              if (childNodes == null)                              {                                  childNodes = aChildNodes;                              }                              else                              {                                  if (childNodesList == null)                                      childNodesList = new ArrayList(4);                                  childNodesList.Add(aChildNodes);                              }                          }                          break;                      }                      default:                      {                          if (attributes == null)                              attributes = new JsonObject();                          if (reader.TokenClass == JsonTokenClass.Array || reader.TokenClass == JsonTokenClass.Object)                              throw new JsonMLException("Non-scalar attribute value.");                          if (reader.TokenClass != JsonTokenClass.Null)                              attributes.Add(memberName' reader.Text);                          reader.Read();                          break;                      }                  }
Magic Number,Jayrock.Json,BufferedCharReader,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Json\BufferedCharReader.cs,BufferedCharReader,The following statement contains a magic number: _bufferSize = Math.Max(256' bufferSize);
Magic Number,Jayrock.Json,JsonBuffer,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Json\JsonBuffer.cs,JsonBuffer,The following statement contains a magic number: JsonBuffer buffer = new JsonBufferStorage(5) // [null'true'false]                  .Write(JsonToken.Array())                      .Write(JsonToken.Null()' JsonToken.True()' JsonToken.False())                  .Write(JsonToken.EndArray())                  .ToBuffer();
Magic Number,Jayrock.Json,JsonBuffer,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Json\JsonBuffer.cs,JsonBuffer,The following statement contains a magic number: _null = buffer.Slice(1' 2);
Magic Number,Jayrock.Json,JsonBuffer,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Json\JsonBuffer.cs,JsonBuffer,The following statement contains a magic number: _true = buffer.Slice(2' 3);
Magic Number,Jayrock.Json,JsonBuffer,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Json\JsonBuffer.cs,JsonBuffer,The following statement contains a magic number: _true = buffer.Slice(2' 3);
Magic Number,Jayrock.Json,JsonBuffer,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Json\JsonBuffer.cs,JsonBuffer,The following statement contains a magic number: _false = buffer.Slice(3' 4);
Magic Number,Jayrock.Json,JsonBuffer,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Json\JsonBuffer.cs,JsonBuffer,The following statement contains a magic number: _false = buffer.Slice(3' 4);
Magic Number,Jayrock.Json,JsonBufferStorage,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Json\JsonBufferStorage.cs,Write,The following statement contains a magic number: _tokens = new JsonToken[16];
Magic Number,Jayrock.Json,JsonRecorder,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Json\JsonRecorder.cs,Write,The following statement contains a magic number: _tokens = new JsonToken[16];
Magic Number,Jayrock.Json,JsonRecorder,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Json\JsonRecorder.cs,CreatePlayer,The following statement contains a magic number: JsonToken[] tokens = new JsonToken[_count + 2];
Magic Number,Jayrock.Json,JsonString,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Json\JsonString.cs,Enquote,The following statement contains a magic number: sb = new StringBuilder(length + 4);
Magic Number,Jayrock.Json,JsonString,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Json\JsonString.cs,Dequote,The following statement contains a magic number: switch (ch)                      {                          case 'b': output.Append('\b'); break; // Backspace                          case 't': output.Append('\t'); break; // Horizontal tab                          case 'n': output.Append('\n'); break; // Newline                          case 'f': output.Append('\f'); break; // Form feed                          case 'r': output.Append('\r'); break; // Carriage return                                                         case 'u':                          {                              if (hexDigits == null)                                  hexDigits = new char[4];                                                            output.Append(ParseHex(input' hexDigits));                               break;                          }                                                        default:                              output.Append(ch);                              break;                      }
Magic Number,Jayrock.Json,JsonString,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Json\JsonString.cs,ParseHex,The following statement contains a magic number: Debug.Assert(hexDigits.Length == 4);
Magic Number,Jayrock.Json,JsonString,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Json\JsonString.cs,ParseHex,The following statement contains a magic number: hexDigits[2] = input.Next();
Magic Number,Jayrock.Json,JsonString,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Json\JsonString.cs,ParseHex,The following statement contains a magic number: hexDigits[3] = input.Next();
Magic Number,Jayrock.Json,JsonTextReader,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Json\JsonTextReader.cs,Parse,The following statement contains a magic number: s.Length > 2 && (s[1] == 'x' || s[1] == 'X')
Magic Number,Jayrock.Json,JsonTextReader,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Json\JsonTextReader.cs,Push,The following statement contains a magic number: _stack = new Stack(6);
Magic Number,Jayrock.Json,JsonTextReader,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Json\JsonTextReader.cs,TryParseOctal,The following statement contains a magic number: num = checked(num * 8) | ((uint) ch - 0x30);
Magic Number,Jayrock.Json,JsonTextReader,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Json\JsonTextReader.cs,TryParseHex,The following statement contains a magic number: long num = long.Parse(s.Substring(2)' NumberStyles.HexNumber' CultureInfo.InvariantCulture);
Magic Number,Jayrock.Json,JsonTextWriter,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Json\JsonTextWriter.cs,PrettyIndent,The following statement contains a magic number: int spaces = _indent * 4;
Magic Number,Jayrock.Json,JsonTextWriter,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Json\JsonTextWriter.cs,PrettyIndent,The following statement contains a magic number: _indentBuffer = new string(' '' spaces * 4).ToCharArray();
Magic Number,Jayrock.Json,WriterStateStack,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Json\JsonWriterBase.cs,Push,The following statement contains a magic number: _states = new WriterState[6];
Missing Default,Jayrock.Json,JsonBufferReader,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Json\JsonBufferReader.cs,ReadTokenImpl,The following switch statement is missing a default case: switch (++_index)                  {                      case 0: return JsonToken.Array();                      case 1: return _buffer[0];                      case 2: return JsonToken.EndArray();                                      }
Missing Default,Jayrock.Json.Conversion,JsonMemberNamingConventionAttribute,D:\research\architectureSmells\repos1\Tolriq_Yatse2\Yatse2\Plugins\Jayrock.Json\Json\Conversion\JsonMemberNamingConventionAttribute.cs,Apply,The following switch statement is missing a default case: switch (Convention)              {                  case NamingConvention.Pascal:                      SetName(property' char.ToUpper(name[0]' CultureInfo.InvariantCulture) + name.Substring(1)); break;                  case NamingConvention.Camel:                      SetName(property' char.ToLower(name[0]' CultureInfo.InvariantCulture) + name.Substring(1)); break;                  case NamingConvention.Upper:                      SetName(property' name.ToUpper(CultureInfo.InvariantCulture)); break;                  case NamingConvention.Lower:                      SetName(property' name.ToLower(CultureInfo.InvariantCulture)); break;              }
