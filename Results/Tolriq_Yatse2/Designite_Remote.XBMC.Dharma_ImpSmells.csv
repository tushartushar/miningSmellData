Implementation smell,Namespace,Class,File,Method,Description
Long Method,Remote.XBMC.Dharma.Api,XbmcPlayer,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.Player.cs,RefreshNowPlaying,The method has 143 lines of code.
Complex Method,Remote.XBMC.Dharma.Api,XbmcEventClient,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.EventClient.cs,SendButton,Cyclomatic complexity of the method is 9
Complex Method,Remote.XBMC.Dharma.Api,XbmcAudioLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.AudioLibrary.cs,GetArtists,Cyclomatic complexity of the method is 9
Long Parameter List,Remote.XBMC.Dharma.Api,XbmcEventClient,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.EventClient.cs,SendButton,The method has 5 parameters. Parameters: button' buttonCode' deviceMap' flags' amount
Long Statement,Remote.XBMC.Dharma.Api,MpcHcRemote,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\MpcHc.Remote.cs,GetStatus,The length of the statement  "                                returnContent = returnContent.Replace("OnStatus("' "").TrimEnd(')').Replace("'"' "\"").Replace("\\\""' "'").Replace("' "'"'"); " is 126.
Long Statement,Remote.XBMC.Dharma.Api,XbmcAudioLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.AudioLibrary.cs,GetGenres,The length of the statement  "            var dblines = _parent.DBCommand("music"' "SELECT idGenre'strGenre'COUNT(DISTINCT strAlbum) AS albumCount FROM albumview GROUP BY idGenre"); " is 139.
Long Statement,Remote.XBMC.Dharma.Api,XbmcAudioLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.AudioLibrary.cs,GetGenres,The length of the statement  "                var genre = new ApiAudioGenre { IdGenre = Xbmc.StringToNumber(dbline[0])' Name = dbline[1]' AlbumCount = Xbmc.StringToNumber(dbline[2]) }; " is 138.
Long Statement,Remote.XBMC.Dharma.Api,XbmcAudioLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.AudioLibrary.cs,GetAlbums,The length of the statement  "            const string req = "SELECT idAlbum'strAlbum'idGenre'idArtist'strArtist'strGenre'iYear'strThumb FROM albumview GROUP BY strAlbum"; " is 129.
Long Statement,Remote.XBMC.Dharma.Api,XbmcAudioLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.AudioLibrary.cs,GetSongs,The length of the statement  "            const string req = "SELECT idSong'strTitle'iTrack'iDuration'iYear'strFileName'idAlbum'strAlbum'strPath'idArtist'strArtist'idGenre'strGenre'strThumb FROM songview"; " is 163.
Long Statement,Remote.XBMC.Dharma.Api,Xbmc,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.cs,CheckTimerTick,The length of the statement  "            _eventClient.SendHelo("Yatse - Remote Control");//' IconType.IconPng' Helper.SkinPath + Helper.Instance.CurrentSkin + @"\Interface\RemoteControl.png"); " is 151.
Long Statement,Remote.XBMC.Dharma.Api,Xbmc,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.cs,JsonCommand,The length of the statement  "                logparam = parameter.GetType().ToString() == "System.String[]" ? String.Join("'"' (string[])parameter) : parameter.ToString(); " is 126.
Long Statement,Remote.XBMC.Dharma.Api,Xbmc,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.cs,JsonCommand,The length of the statement  "                if (cmd != "JSONRPC.Ping" && cmd != "VideoPlayer.GetTime" && cmd != "System.GetInfoLabels" && cmd != "AudioPlayer.GetTime") " is 123.
Long Statement,Remote.XBMC.Dharma.Api,Xbmc,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.cs,Command,The length of the statement  "                                    reqContent = reqContent.Replace("<html>\n"' "").Replace("\n</html>\n"' "").Replace("\n</html>"' "").Replace("</html>\n"' "").Replace("\n<li>"' "<li>") " is 150.
Long Statement,Remote.XBMC.Dharma.Api,Xbmc,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.cs,DBResultToArray,The length of the statement  "            requestReturn = requestReturn.Replace("<field>"' "").Replace("\n"' "").Replace("<html>"' "").Replace("</html>"' "").Replace("<record>"' ""); " is 140.
Long Statement,Remote.XBMC.Dharma.Api,XbmcFile,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.File.cs,DownloadImages,The length of the statement  "                    _parent.GenerateThumb(apiImageDownloadInfo.Destination' apiImageDownloadInfo.Destination' apiImageDownloadInfo.MaxHeight); " is 122.
Long Statement,Remote.XBMC.Dharma.Api,XbmcPlayer,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.Player.cs,RefreshNowPlaying,The length of the statement  "                        var percent = Math.Floor(100.0 * Convert.ToInt32("0" + data[2]' CultureInfo.InvariantCulture) / Convert.ToInt32("0" + data[4]' CultureInfo.InvariantCulture)); " is 158.
Long Statement,Remote.XBMC.Dharma.Api,XbmcPlayer,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.Player.cs,RefreshNowPlaying,The length of the statement  "                    var vol = (1 - Convert.ToDouble("0" + infos["Player.Volume"].ToString().Replace(" dB"' "").Replace("-"'"").Replace("."'"'"))/60)*100; " is 133.
Long Statement,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetTvEpisodes,The length of the statement  "            const string req = "SELECT idEpisode'c00'c01'c03'c05'c10'c12'c13'idFile'strFileName'strPath'playCount'strTitle'strStudio'idShow'mpaa FROM episodeview "; " is 152.
Long Statement,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetTvShows,The length of the statement  "            var dblines = _parent.DBCommand("video"' "SELECT tvshow.idShow'tvshow.c00'tvshow.c01'tvshow.c04'tvshow.c05'tvshow.c08'tvshow.c12'tvshow.c13'tvshow.c14'path.strPath as strPath'counts.totalcount as totalCount FROM tvshow join tvshowlinkpath on tvshow.idShow=tvshowlinkpath.idShow join path on path.idpath=tvshowlinkpath.idPath left outer join ( select tvshow.idShow as idShow'count(1) as totalcount'count(files.playCount) as watchedcount from tvshow join tvshowlinkepisode on tvshow.idShow = tvshowlinkepisode.idShow join episode on episode.idEpisode = tvshowlinkepisode.idEpisode join files on files.idFile = episode.idFile group by tvshow.idShow) counts on tvshow.idShow = counts.idShow"); " is 689.
Long Statement,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetMovies,The length of the statement  "            var dblines = _parent.DBCommand("video"'"SELECT c00'c01'c03'c04'c05'c07'C09'c11'c12'c14'c15'c16'c18'idFile'idMovie'strFileName'strPath'playCount FROM movieview"); " is 162.
Complex Conditional,Remote.XBMC.Dharma.Api,Xbmc,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.cs,JsonCommand,The conditional expression  "cmd != "JSONRPC.Ping" && cmd != "VideoPlayer.GetTime" && cmd != "System.GetInfoLabels" && cmd != "AudioPlayer.GetTime""  is complex.
Complex Conditional,Remote.XBMC.Dharma.Api,Xbmc,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.cs,Command,The conditional expression  "cmd != "SetResponseFormat" && cmd != "GetCurrentlyPlaying" && cmd != "GetPercentage" && cmd != "GetVolume""  is complex.
Empty Catch Block,Remote.XBMC.Dharma.Api,XbmcEventClient,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.EventClient.cs,Connect,The method has an empty catch block.
Empty Catch Block,Remote.XBMC.Dharma.Api,XbmcEventClient,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.EventClient.cs,Disconnect,The method has an empty catch block.
Magic Number,Remote.XBMC.DharmaHttp.XbmcHttpApi,JsonRpcClient,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\JsonRpcClient.cs,GetWebRequest,The following statement contains a magic number: webRequest.ReadWriteTimeout = 1000000;
Magic Number,Remote.XBMC.Dharma.Api,MpcHcRemote,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\MpcHc.Remote.cs,Command,The following statement contains a magic number: try              {                  request = (HttpWebRequest)WebRequest.Create(new Uri(uri));                  request.Method = "GET";                  request.Timeout = 1000;                  _parent.Log("MPCCOMMAND : " + cmd);                  _parent.Trace(uri);                  using (var response = (HttpWebResponse)request.GetResponse())                  {                      using (var stream = response.GetResponseStream())                      {                          if (stream != null)                              using (var reader = new StreamReader(stream' Encoding.UTF8))                              {                                  var reqContent = reader.ReadToEnd();                                  _parent.Trace(reqContent);                                  returnContent = true;                              }                      }                  }              }              catch (WebException e)              {                  _parent.Log("ERROR - MPCCOMMAND : " + cmd + " - " + e.Message);                  if (e.Status == WebExceptionStatus.Timeout)                  {                      _parent.MpcLoaded = false;                  }              }
Magic Number,Remote.XBMC.Dharma.Api,MpcHcRemote,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\MpcHc.Remote.cs,GetStatus,The following statement contains a magic number: try              {                  request = (HttpWebRequest)WebRequest.Create(new Uri(uri));                  request.Method = "GET";                  request.Timeout = 1000;                  _parent.Trace(uri);                  using (var response = (HttpWebResponse)request.GetResponse())                  {                      using (var stream = response.GetResponseStream())                      {                          if (stream != null)                              using (var reader = new StreamReader(stream' Encoding.UTF8))                              {                                  var reqContent = reader.ReadToEnd();                                  _parent.Trace(reqContent);                                  returnContent = reqContent;                                  returnContent = returnContent.Replace("OnStatus("' "").TrimEnd(')').Replace("'"' "\"").Replace("\\\""' "'").Replace("' "'"'");                              }                      }                  }              }              catch (WebException e)              {                  _parent.Log("ERROR - MPCCOMMAND : Status" + " - " + e.Message);                  if (e.Status == WebExceptionStatus.Timeout)                  {                      _parent.MpcLoaded = false;                  }              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcEventClient,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.EventClient.cs,Header,The following statement contains a magic number: header[2] = (byte)'M';
Magic Number,Remote.XBMC.Dharma.Api,XbmcEventClient,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.EventClient.cs,Header,The following statement contains a magic number: header[3] = (byte)'C';
Magic Number,Remote.XBMC.Dharma.Api,XbmcEventClient,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.EventClient.cs,Header,The following statement contains a magic number: header[4] = MajorVersion;
Magic Number,Remote.XBMC.Dharma.Api,XbmcEventClient,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.EventClient.cs,Header,The following statement contains a magic number: header[5] = MinorVersion;
Magic Number,Remote.XBMC.Dharma.Api,XbmcEventClient,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.EventClient.cs,Header,The following statement contains a magic number: if (currentPacket == 1)              {                  header[6] = (byte)(((ushort)packetType & 0xff00) >> 8);                  header[7] = (byte)((ushort)packetType & 0x00ff);              }              else              {                  header[6] = ((ushort)PacketType.PtBlob & 0xff00) >> 8;                  header[7] = (ushort)PacketType.PtBlob & 0x00ff;              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcEventClient,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.EventClient.cs,Header,The following statement contains a magic number: if (currentPacket == 1)              {                  header[6] = (byte)(((ushort)packetType & 0xff00) >> 8);                  header[7] = (byte)((ushort)packetType & 0x00ff);              }              else              {                  header[6] = ((ushort)PacketType.PtBlob & 0xff00) >> 8;                  header[7] = (ushort)PacketType.PtBlob & 0x00ff;              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcEventClient,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.EventClient.cs,Header,The following statement contains a magic number: if (currentPacket == 1)              {                  header[6] = (byte)(((ushort)packetType & 0xff00) >> 8);                  header[7] = (byte)((ushort)packetType & 0x00ff);              }              else              {                  header[6] = ((ushort)PacketType.PtBlob & 0xff00) >> 8;                  header[7] = (ushort)PacketType.PtBlob & 0x00ff;              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcEventClient,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.EventClient.cs,Header,The following statement contains a magic number: if (currentPacket == 1)              {                  header[6] = (byte)(((ushort)packetType & 0xff00) >> 8);                  header[7] = (byte)((ushort)packetType & 0x00ff);              }              else              {                  header[6] = ((ushort)PacketType.PtBlob & 0xff00) >> 8;                  header[7] = (ushort)PacketType.PtBlob & 0x00ff;              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcEventClient,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.EventClient.cs,Header,The following statement contains a magic number: if (currentPacket == 1)              {                  header[6] = (byte)(((ushort)packetType & 0xff00) >> 8);                  header[7] = (byte)((ushort)packetType & 0x00ff);              }              else              {                  header[6] = ((ushort)PacketType.PtBlob & 0xff00) >> 8;                  header[7] = (ushort)PacketType.PtBlob & 0x00ff;              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcEventClient,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.EventClient.cs,Header,The following statement contains a magic number: if (currentPacket == 1)              {                  header[6] = (byte)(((ushort)packetType & 0xff00) >> 8);                  header[7] = (byte)((ushort)packetType & 0x00ff);              }              else              {                  header[6] = ((ushort)PacketType.PtBlob & 0xff00) >> 8;                  header[7] = (ushort)PacketType.PtBlob & 0x00ff;              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcEventClient,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.EventClient.cs,Header,The following statement contains a magic number: header[8] = (byte)((currentPacket & 0xff000000) >> 24);
Magic Number,Remote.XBMC.Dharma.Api,XbmcEventClient,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.EventClient.cs,Header,The following statement contains a magic number: header[8] = (byte)((currentPacket & 0xff000000) >> 24);
Magic Number,Remote.XBMC.Dharma.Api,XbmcEventClient,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.EventClient.cs,Header,The following statement contains a magic number: header[9] = (byte)((currentPacket & 0x00ff0000) >> 16);
Magic Number,Remote.XBMC.Dharma.Api,XbmcEventClient,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.EventClient.cs,Header,The following statement contains a magic number: header[9] = (byte)((currentPacket & 0x00ff0000) >> 16);
Magic Number,Remote.XBMC.Dharma.Api,XbmcEventClient,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.EventClient.cs,Header,The following statement contains a magic number: header[10] = (byte)((currentPacket & 0x0000ff00) >> 8);
Magic Number,Remote.XBMC.Dharma.Api,XbmcEventClient,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.EventClient.cs,Header,The following statement contains a magic number: header[10] = (byte)((currentPacket & 0x0000ff00) >> 8);
Magic Number,Remote.XBMC.Dharma.Api,XbmcEventClient,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.EventClient.cs,Header,The following statement contains a magic number: header[11] = (byte)(currentPacket & 0x000000ff);
Magic Number,Remote.XBMC.Dharma.Api,XbmcEventClient,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.EventClient.cs,Header,The following statement contains a magic number: header[12] = (byte)((numberOfPackets & 0xff000000) >> 24);
Magic Number,Remote.XBMC.Dharma.Api,XbmcEventClient,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.EventClient.cs,Header,The following statement contains a magic number: header[12] = (byte)((numberOfPackets & 0xff000000) >> 24);
Magic Number,Remote.XBMC.Dharma.Api,XbmcEventClient,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.EventClient.cs,Header,The following statement contains a magic number: header[13] = (byte)((numberOfPackets & 0x00ff0000) >> 16);
Magic Number,Remote.XBMC.Dharma.Api,XbmcEventClient,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.EventClient.cs,Header,The following statement contains a magic number: header[13] = (byte)((numberOfPackets & 0x00ff0000) >> 16);
Magic Number,Remote.XBMC.Dharma.Api,XbmcEventClient,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.EventClient.cs,Header,The following statement contains a magic number: header[14] = (byte)((numberOfPackets & 0x0000ff00) >> 8);
Magic Number,Remote.XBMC.Dharma.Api,XbmcEventClient,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.EventClient.cs,Header,The following statement contains a magic number: header[14] = (byte)((numberOfPackets & 0x0000ff00) >> 8);
Magic Number,Remote.XBMC.Dharma.Api,XbmcEventClient,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.EventClient.cs,Header,The following statement contains a magic number: header[15] = (byte)(numberOfPackets & 0x000000ff);
Magic Number,Remote.XBMC.Dharma.Api,XbmcEventClient,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.EventClient.cs,Header,The following statement contains a magic number: header[16] = (byte)((payloadSize & 0xff00) >> 8);
Magic Number,Remote.XBMC.Dharma.Api,XbmcEventClient,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.EventClient.cs,Header,The following statement contains a magic number: header[16] = (byte)((payloadSize & 0xff00) >> 8);
Magic Number,Remote.XBMC.Dharma.Api,XbmcEventClient,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.EventClient.cs,Header,The following statement contains a magic number: header[17] = (byte)(payloadSize & 0x00ff);
Magic Number,Remote.XBMC.Dharma.Api,XbmcEventClient,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.EventClient.cs,Header,The following statement contains a magic number: header[18] = (byte)((_uniqueToken & 0xff000000) >> 24);
Magic Number,Remote.XBMC.Dharma.Api,XbmcEventClient,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.EventClient.cs,Header,The following statement contains a magic number: header[18] = (byte)((_uniqueToken & 0xff000000) >> 24);
Magic Number,Remote.XBMC.Dharma.Api,XbmcEventClient,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.EventClient.cs,Header,The following statement contains a magic number: header[19] = (byte)((_uniqueToken & 0x00ff0000) >> 16);
Magic Number,Remote.XBMC.Dharma.Api,XbmcEventClient,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.EventClient.cs,Header,The following statement contains a magic number: header[19] = (byte)((_uniqueToken & 0x00ff0000) >> 16);
Magic Number,Remote.XBMC.Dharma.Api,XbmcEventClient,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.EventClient.cs,Header,The following statement contains a magic number: header[20] = (byte)((_uniqueToken & 0x0000ff00) >> 8);
Magic Number,Remote.XBMC.Dharma.Api,XbmcEventClient,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.EventClient.cs,Header,The following statement contains a magic number: header[20] = (byte)((_uniqueToken & 0x0000ff00) >> 8);
Magic Number,Remote.XBMC.Dharma.Api,XbmcEventClient,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.EventClient.cs,Header,The following statement contains a magic number: header[21] = (byte)(_uniqueToken & 0x000000ff);
Magic Number,Remote.XBMC.Dharma.Api,XbmcEventClient,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.EventClient.cs,SendHelo,The following statement contains a magic number: var payload = new byte[devName.Length + 12 + icon.Length];
Magic Number,Remote.XBMC.Dharma.Api,XbmcEventClient,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.EventClient.cs,SendHelo,The following statement contains a magic number: for (var i = 0; i < 8; i++)                  payload[offset++] = 0;
Magic Number,Remote.XBMC.Dharma.Api,XbmcEventClient,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.EventClient.cs,SendHelo,The following statement contains a magic number: Array.Copy(icon' 0' payload' devName.Length + 12' icon.Length);
Magic Number,Remote.XBMC.Dharma.Api,XbmcEventClient,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.EventClient.cs,SendNotification,The following statement contains a magic number: var payload = new byte[caption.Length + message.Length + 7 + icon.Length];
Magic Number,Remote.XBMC.Dharma.Api,XbmcEventClient,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.EventClient.cs,SendNotification,The following statement contains a magic number: for (var i = 0; i < 4; i++)                  payload[offset++] = 0;
Magic Number,Remote.XBMC.Dharma.Api,XbmcEventClient,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.EventClient.cs,SendNotification,The following statement contains a magic number: Array.Copy(icon' 0' payload' caption.Length + message.Length + 7' icon.Length);
Magic Number,Remote.XBMC.Dharma.Api,XbmcEventClient,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.EventClient.cs,SendButton,The following statement contains a magic number: var payload = new byte[button.Length + deviceMap.Length + 8];
Magic Number,Remote.XBMC.Dharma.Api,XbmcEventClient,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.EventClient.cs,SendButton,The following statement contains a magic number: payload[offset++] = (byte)((buttonCode & 0xff00) >> 8);
Magic Number,Remote.XBMC.Dharma.Api,XbmcEventClient,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.EventClient.cs,SendButton,The following statement contains a magic number: payload[offset++] = (byte)(((ushort)flags & 0xff00) >> 8);
Magic Number,Remote.XBMC.Dharma.Api,XbmcEventClient,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.EventClient.cs,SendButton,The following statement contains a magic number: payload[offset++] = (byte)((amount & 0xff00) >> 8);
Magic Number,Remote.XBMC.Dharma.Api,XbmcEventClient,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.EventClient.cs,SendMouse,The following statement contains a magic number: var payload = new byte[9];
Magic Number,Remote.XBMC.Dharma.Api,XbmcEventClient,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.EventClient.cs,SendMouse,The following statement contains a magic number: payload[offset++] = (byte)((x & 0xff00) >> 8);
Magic Number,Remote.XBMC.Dharma.Api,XbmcEventClient,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.EventClient.cs,SendMouse,The following statement contains a magic number: payload[offset++] = (byte)((y & 0xff00) >> 8);
Magic Number,Remote.XBMC.Dharma.Api,XbmcEventClient,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.EventClient.cs,SendLog,The following statement contains a magic number: var payload = new byte[message.Length + 2];
Magic Number,Remote.XBMC.Dharma.Api,XbmcEventClient,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.EventClient.cs,SendAction,The following statement contains a magic number: var payload = new byte[message.Length + 2];
Magic Number,Remote.XBMC.Dharma.Api,XbmcAudioLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.AudioLibrary.cs,GetGenres,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 3)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  var genre = new ApiAudioGenre { IdGenre = Xbmc.StringToNumber(dbline[0])' Name = dbline[1]' AlbumCount = Xbmc.StringToNumber(dbline[2]) };                  genres.Add(genre);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcAudioLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.AudioLibrary.cs,GetGenres,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 3)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  var genre = new ApiAudioGenre { IdGenre = Xbmc.StringToNumber(dbline[0])' Name = dbline[1]' AlbumCount = Xbmc.StringToNumber(dbline[2]) };                  genres.Add(genre);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcAudioLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.AudioLibrary.cs,GetArtists,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 2)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  var hash = Xbmc.Hash(dbline[1]);                  var hash2 = Xbmc.Hash("artist"+dbline[1]);                  var genre = new ApiAudioArtist                                  {                                      IdArtist = Xbmc.StringToNumber(dbline[0])'                                       Name = dbline[1]'                                       Thumb =  @"special://profile/Thumbnails/Music/Artists/" + hash2 + ".tbn"'                                      Fanart = @"special://profile/Thumbnails/Music/Fanart/" + hash + ".tbn"'                                      Hash = hash2                                  };                  artists.Add(genre);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcAudioLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.AudioLibrary.cs,GetArtists,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 2)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  foreach (var artist in artists)                  {                      if (artist.IdArtist.ToString(CultureInfo.InvariantCulture) == dbline[0])                      {                          artist.Biography = dbline[1];                      }                  }              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcAudioLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.AudioLibrary.cs,GetAlbums,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 8)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  var album = new ApiAudioAlbum                                  {                                      IdAlbum = Xbmc.StringToNumber(dbline[0])'                                       Title = dbline[1]'                                      IdGenre = Xbmc.StringToNumber(dbline[2])'                                      IdArtist = Xbmc.StringToNumber(dbline[3])'                                      Artist = dbline[4]'                                      Genre = dbline[5]'                                      Year = Xbmc.StringToNumber(dbline[6])'                                      Thumb = dbline[7]                                  };                  var thumbparts = dbline[7].Split('/');                  var hash = thumbparts[thumbparts.Length - 1].Replace(".tbn"' "");                  album.Hash = hash;                    albums.Add(album);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcAudioLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.AudioLibrary.cs,GetAlbums,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 8)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  var album = new ApiAudioAlbum                                  {                                      IdAlbum = Xbmc.StringToNumber(dbline[0])'                                       Title = dbline[1]'                                      IdGenre = Xbmc.StringToNumber(dbline[2])'                                      IdArtist = Xbmc.StringToNumber(dbline[3])'                                      Artist = dbline[4]'                                      Genre = dbline[5]'                                      Year = Xbmc.StringToNumber(dbline[6])'                                      Thumb = dbline[7]                                  };                  var thumbparts = dbline[7].Split('/');                  var hash = thumbparts[thumbparts.Length - 1].Replace(".tbn"' "");                  album.Hash = hash;                    albums.Add(album);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcAudioLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.AudioLibrary.cs,GetAlbums,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 8)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  var album = new ApiAudioAlbum                                  {                                      IdAlbum = Xbmc.StringToNumber(dbline[0])'                                       Title = dbline[1]'                                      IdGenre = Xbmc.StringToNumber(dbline[2])'                                      IdArtist = Xbmc.StringToNumber(dbline[3])'                                      Artist = dbline[4]'                                      Genre = dbline[5]'                                      Year = Xbmc.StringToNumber(dbline[6])'                                      Thumb = dbline[7]                                  };                  var thumbparts = dbline[7].Split('/');                  var hash = thumbparts[thumbparts.Length - 1].Replace(".tbn"' "");                  album.Hash = hash;                    albums.Add(album);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcAudioLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.AudioLibrary.cs,GetAlbums,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 8)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  var album = new ApiAudioAlbum                                  {                                      IdAlbum = Xbmc.StringToNumber(dbline[0])'                                       Title = dbline[1]'                                      IdGenre = Xbmc.StringToNumber(dbline[2])'                                      IdArtist = Xbmc.StringToNumber(dbline[3])'                                      Artist = dbline[4]'                                      Genre = dbline[5]'                                      Year = Xbmc.StringToNumber(dbline[6])'                                      Thumb = dbline[7]                                  };                  var thumbparts = dbline[7].Split('/');                  var hash = thumbparts[thumbparts.Length - 1].Replace(".tbn"' "");                  album.Hash = hash;                    albums.Add(album);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcAudioLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.AudioLibrary.cs,GetAlbums,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 8)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  var album = new ApiAudioAlbum                                  {                                      IdAlbum = Xbmc.StringToNumber(dbline[0])'                                       Title = dbline[1]'                                      IdGenre = Xbmc.StringToNumber(dbline[2])'                                      IdArtist = Xbmc.StringToNumber(dbline[3])'                                      Artist = dbline[4]'                                      Genre = dbline[5]'                                      Year = Xbmc.StringToNumber(dbline[6])'                                      Thumb = dbline[7]                                  };                  var thumbparts = dbline[7].Split('/');                  var hash = thumbparts[thumbparts.Length - 1].Replace(".tbn"' "");                  album.Hash = hash;                    albums.Add(album);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcAudioLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.AudioLibrary.cs,GetAlbums,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 8)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  var album = new ApiAudioAlbum                                  {                                      IdAlbum = Xbmc.StringToNumber(dbline[0])'                                       Title = dbline[1]'                                      IdGenre = Xbmc.StringToNumber(dbline[2])'                                      IdArtist = Xbmc.StringToNumber(dbline[3])'                                      Artist = dbline[4]'                                      Genre = dbline[5]'                                      Year = Xbmc.StringToNumber(dbline[6])'                                      Thumb = dbline[7]                                  };                  var thumbparts = dbline[7].Split('/');                  var hash = thumbparts[thumbparts.Length - 1].Replace(".tbn"' "");                  album.Hash = hash;                    albums.Add(album);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcAudioLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.AudioLibrary.cs,GetAlbums,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 8)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  var album = new ApiAudioAlbum                                  {                                      IdAlbum = Xbmc.StringToNumber(dbline[0])'                                       Title = dbline[1]'                                      IdGenre = Xbmc.StringToNumber(dbline[2])'                                      IdArtist = Xbmc.StringToNumber(dbline[3])'                                      Artist = dbline[4]'                                      Genre = dbline[5]'                                      Year = Xbmc.StringToNumber(dbline[6])'                                      Thumb = dbline[7]                                  };                  var thumbparts = dbline[7].Split('/');                  var hash = thumbparts[thumbparts.Length - 1].Replace(".tbn"' "");                  album.Hash = hash;                    albums.Add(album);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcAudioLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.AudioLibrary.cs,GetAlbums,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 8)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  var album = new ApiAudioAlbum                                  {                                      IdAlbum = Xbmc.StringToNumber(dbline[0])'                                       Title = dbline[1]'                                      IdGenre = Xbmc.StringToNumber(dbline[2])'                                      IdArtist = Xbmc.StringToNumber(dbline[3])'                                      Artist = dbline[4]'                                      Genre = dbline[5]'                                      Year = Xbmc.StringToNumber(dbline[6])'                                      Thumb = dbline[7]                                  };                  var thumbparts = dbline[7].Split('/');                  var hash = thumbparts[thumbparts.Length - 1].Replace(".tbn"' "");                  album.Hash = hash;                    albums.Add(album);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcAudioLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.AudioLibrary.cs,GetSongs,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 14)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  var song = new ApiAudioSong                  {                      IdSong = Xbmc.StringToNumber(dbline[0])'                      Title = dbline[1]'                      Track = Xbmc.StringToNumber(dbline[2])'                      Duration = Xbmc.StringToNumber(dbline[3])'                      Year = Xbmc.StringToNumber(dbline[4])'                      FileName = dbline[5]'                      IdAlbum = Xbmc.StringToNumber(dbline[6])'                      Album = dbline[7]'                      Path = dbline[8]'                      IdArtist = Xbmc.StringToNumber(dbline[9])'                      Artist = dbline[10]'                      IdGenre = Xbmc.StringToNumber(dbline[11])'                      Genre = dbline[12]'                      Thumb = dbline[13]'                  };                  var thumbparts = dbline[13].Split('/');                  var hash = thumbparts[thumbparts.Length - 1].Replace(".tbn"' "");                  song.Hash = hash;                    songs.Add(song);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcAudioLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.AudioLibrary.cs,GetSongs,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 14)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  var song = new ApiAudioSong                  {                      IdSong = Xbmc.StringToNumber(dbline[0])'                      Title = dbline[1]'                      Track = Xbmc.StringToNumber(dbline[2])'                      Duration = Xbmc.StringToNumber(dbline[3])'                      Year = Xbmc.StringToNumber(dbline[4])'                      FileName = dbline[5]'                      IdAlbum = Xbmc.StringToNumber(dbline[6])'                      Album = dbline[7]'                      Path = dbline[8]'                      IdArtist = Xbmc.StringToNumber(dbline[9])'                      Artist = dbline[10]'                      IdGenre = Xbmc.StringToNumber(dbline[11])'                      Genre = dbline[12]'                      Thumb = dbline[13]'                  };                  var thumbparts = dbline[13].Split('/');                  var hash = thumbparts[thumbparts.Length - 1].Replace(".tbn"' "");                  song.Hash = hash;                    songs.Add(song);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcAudioLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.AudioLibrary.cs,GetSongs,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 14)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  var song = new ApiAudioSong                  {                      IdSong = Xbmc.StringToNumber(dbline[0])'                      Title = dbline[1]'                      Track = Xbmc.StringToNumber(dbline[2])'                      Duration = Xbmc.StringToNumber(dbline[3])'                      Year = Xbmc.StringToNumber(dbline[4])'                      FileName = dbline[5]'                      IdAlbum = Xbmc.StringToNumber(dbline[6])'                      Album = dbline[7]'                      Path = dbline[8]'                      IdArtist = Xbmc.StringToNumber(dbline[9])'                      Artist = dbline[10]'                      IdGenre = Xbmc.StringToNumber(dbline[11])'                      Genre = dbline[12]'                      Thumb = dbline[13]'                  };                  var thumbparts = dbline[13].Split('/');                  var hash = thumbparts[thumbparts.Length - 1].Replace(".tbn"' "");                  song.Hash = hash;                    songs.Add(song);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcAudioLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.AudioLibrary.cs,GetSongs,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 14)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  var song = new ApiAudioSong                  {                      IdSong = Xbmc.StringToNumber(dbline[0])'                      Title = dbline[1]'                      Track = Xbmc.StringToNumber(dbline[2])'                      Duration = Xbmc.StringToNumber(dbline[3])'                      Year = Xbmc.StringToNumber(dbline[4])'                      FileName = dbline[5]'                      IdAlbum = Xbmc.StringToNumber(dbline[6])'                      Album = dbline[7]'                      Path = dbline[8]'                      IdArtist = Xbmc.StringToNumber(dbline[9])'                      Artist = dbline[10]'                      IdGenre = Xbmc.StringToNumber(dbline[11])'                      Genre = dbline[12]'                      Thumb = dbline[13]'                  };                  var thumbparts = dbline[13].Split('/');                  var hash = thumbparts[thumbparts.Length - 1].Replace(".tbn"' "");                  song.Hash = hash;                    songs.Add(song);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcAudioLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.AudioLibrary.cs,GetSongs,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 14)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  var song = new ApiAudioSong                  {                      IdSong = Xbmc.StringToNumber(dbline[0])'                      Title = dbline[1]'                      Track = Xbmc.StringToNumber(dbline[2])'                      Duration = Xbmc.StringToNumber(dbline[3])'                      Year = Xbmc.StringToNumber(dbline[4])'                      FileName = dbline[5]'                      IdAlbum = Xbmc.StringToNumber(dbline[6])'                      Album = dbline[7]'                      Path = dbline[8]'                      IdArtist = Xbmc.StringToNumber(dbline[9])'                      Artist = dbline[10]'                      IdGenre = Xbmc.StringToNumber(dbline[11])'                      Genre = dbline[12]'                      Thumb = dbline[13]'                  };                  var thumbparts = dbline[13].Split('/');                  var hash = thumbparts[thumbparts.Length - 1].Replace(".tbn"' "");                  song.Hash = hash;                    songs.Add(song);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcAudioLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.AudioLibrary.cs,GetSongs,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 14)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  var song = new ApiAudioSong                  {                      IdSong = Xbmc.StringToNumber(dbline[0])'                      Title = dbline[1]'                      Track = Xbmc.StringToNumber(dbline[2])'                      Duration = Xbmc.StringToNumber(dbline[3])'                      Year = Xbmc.StringToNumber(dbline[4])'                      FileName = dbline[5]'                      IdAlbum = Xbmc.StringToNumber(dbline[6])'                      Album = dbline[7]'                      Path = dbline[8]'                      IdArtist = Xbmc.StringToNumber(dbline[9])'                      Artist = dbline[10]'                      IdGenre = Xbmc.StringToNumber(dbline[11])'                      Genre = dbline[12]'                      Thumb = dbline[13]'                  };                  var thumbparts = dbline[13].Split('/');                  var hash = thumbparts[thumbparts.Length - 1].Replace(".tbn"' "");                  song.Hash = hash;                    songs.Add(song);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcAudioLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.AudioLibrary.cs,GetSongs,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 14)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  var song = new ApiAudioSong                  {                      IdSong = Xbmc.StringToNumber(dbline[0])'                      Title = dbline[1]'                      Track = Xbmc.StringToNumber(dbline[2])'                      Duration = Xbmc.StringToNumber(dbline[3])'                      Year = Xbmc.StringToNumber(dbline[4])'                      FileName = dbline[5]'                      IdAlbum = Xbmc.StringToNumber(dbline[6])'                      Album = dbline[7]'                      Path = dbline[8]'                      IdArtist = Xbmc.StringToNumber(dbline[9])'                      Artist = dbline[10]'                      IdGenre = Xbmc.StringToNumber(dbline[11])'                      Genre = dbline[12]'                      Thumb = dbline[13]'                  };                  var thumbparts = dbline[13].Split('/');                  var hash = thumbparts[thumbparts.Length - 1].Replace(".tbn"' "");                  song.Hash = hash;                    songs.Add(song);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcAudioLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.AudioLibrary.cs,GetSongs,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 14)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  var song = new ApiAudioSong                  {                      IdSong = Xbmc.StringToNumber(dbline[0])'                      Title = dbline[1]'                      Track = Xbmc.StringToNumber(dbline[2])'                      Duration = Xbmc.StringToNumber(dbline[3])'                      Year = Xbmc.StringToNumber(dbline[4])'                      FileName = dbline[5]'                      IdAlbum = Xbmc.StringToNumber(dbline[6])'                      Album = dbline[7]'                      Path = dbline[8]'                      IdArtist = Xbmc.StringToNumber(dbline[9])'                      Artist = dbline[10]'                      IdGenre = Xbmc.StringToNumber(dbline[11])'                      Genre = dbline[12]'                      Thumb = dbline[13]'                  };                  var thumbparts = dbline[13].Split('/');                  var hash = thumbparts[thumbparts.Length - 1].Replace(".tbn"' "");                  song.Hash = hash;                    songs.Add(song);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcAudioLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.AudioLibrary.cs,GetSongs,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 14)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  var song = new ApiAudioSong                  {                      IdSong = Xbmc.StringToNumber(dbline[0])'                      Title = dbline[1]'                      Track = Xbmc.StringToNumber(dbline[2])'                      Duration = Xbmc.StringToNumber(dbline[3])'                      Year = Xbmc.StringToNumber(dbline[4])'                      FileName = dbline[5]'                      IdAlbum = Xbmc.StringToNumber(dbline[6])'                      Album = dbline[7]'                      Path = dbline[8]'                      IdArtist = Xbmc.StringToNumber(dbline[9])'                      Artist = dbline[10]'                      IdGenre = Xbmc.StringToNumber(dbline[11])'                      Genre = dbline[12]'                      Thumb = dbline[13]'                  };                  var thumbparts = dbline[13].Split('/');                  var hash = thumbparts[thumbparts.Length - 1].Replace(".tbn"' "");                  song.Hash = hash;                    songs.Add(song);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcAudioLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.AudioLibrary.cs,GetSongs,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 14)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  var song = new ApiAudioSong                  {                      IdSong = Xbmc.StringToNumber(dbline[0])'                      Title = dbline[1]'                      Track = Xbmc.StringToNumber(dbline[2])'                      Duration = Xbmc.StringToNumber(dbline[3])'                      Year = Xbmc.StringToNumber(dbline[4])'                      FileName = dbline[5]'                      IdAlbum = Xbmc.StringToNumber(dbline[6])'                      Album = dbline[7]'                      Path = dbline[8]'                      IdArtist = Xbmc.StringToNumber(dbline[9])'                      Artist = dbline[10]'                      IdGenre = Xbmc.StringToNumber(dbline[11])'                      Genre = dbline[12]'                      Thumb = dbline[13]'                  };                  var thumbparts = dbline[13].Split('/');                  var hash = thumbparts[thumbparts.Length - 1].Replace(".tbn"' "");                  song.Hash = hash;                    songs.Add(song);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcAudioLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.AudioLibrary.cs,GetSongs,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 14)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  var song = new ApiAudioSong                  {                      IdSong = Xbmc.StringToNumber(dbline[0])'                      Title = dbline[1]'                      Track = Xbmc.StringToNumber(dbline[2])'                      Duration = Xbmc.StringToNumber(dbline[3])'                      Year = Xbmc.StringToNumber(dbline[4])'                      FileName = dbline[5]'                      IdAlbum = Xbmc.StringToNumber(dbline[6])'                      Album = dbline[7]'                      Path = dbline[8]'                      IdArtist = Xbmc.StringToNumber(dbline[9])'                      Artist = dbline[10]'                      IdGenre = Xbmc.StringToNumber(dbline[11])'                      Genre = dbline[12]'                      Thumb = dbline[13]'                  };                  var thumbparts = dbline[13].Split('/');                  var hash = thumbparts[thumbparts.Length - 1].Replace(".tbn"' "");                  song.Hash = hash;                    songs.Add(song);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcAudioLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.AudioLibrary.cs,GetSongs,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 14)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  var song = new ApiAudioSong                  {                      IdSong = Xbmc.StringToNumber(dbline[0])'                      Title = dbline[1]'                      Track = Xbmc.StringToNumber(dbline[2])'                      Duration = Xbmc.StringToNumber(dbline[3])'                      Year = Xbmc.StringToNumber(dbline[4])'                      FileName = dbline[5]'                      IdAlbum = Xbmc.StringToNumber(dbline[6])'                      Album = dbline[7]'                      Path = dbline[8]'                      IdArtist = Xbmc.StringToNumber(dbline[9])'                      Artist = dbline[10]'                      IdGenre = Xbmc.StringToNumber(dbline[11])'                      Genre = dbline[12]'                      Thumb = dbline[13]'                  };                  var thumbparts = dbline[13].Split('/');                  var hash = thumbparts[thumbparts.Length - 1].Replace(".tbn"' "");                  song.Hash = hash;                    songs.Add(song);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcAudioLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.AudioLibrary.cs,GetSongs,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 14)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  var song = new ApiAudioSong                  {                      IdSong = Xbmc.StringToNumber(dbline[0])'                      Title = dbline[1]'                      Track = Xbmc.StringToNumber(dbline[2])'                      Duration = Xbmc.StringToNumber(dbline[3])'                      Year = Xbmc.StringToNumber(dbline[4])'                      FileName = dbline[5]'                      IdAlbum = Xbmc.StringToNumber(dbline[6])'                      Album = dbline[7]'                      Path = dbline[8]'                      IdArtist = Xbmc.StringToNumber(dbline[9])'                      Artist = dbline[10]'                      IdGenre = Xbmc.StringToNumber(dbline[11])'                      Genre = dbline[12]'                      Thumb = dbline[13]'                  };                  var thumbparts = dbline[13].Split('/');                  var hash = thumbparts[thumbparts.Length - 1].Replace(".tbn"' "");                  song.Hash = hash;                    songs.Add(song);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcAudioLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.AudioLibrary.cs,GetSongs,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 14)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  var song = new ApiAudioSong                  {                      IdSong = Xbmc.StringToNumber(dbline[0])'                      Title = dbline[1]'                      Track = Xbmc.StringToNumber(dbline[2])'                      Duration = Xbmc.StringToNumber(dbline[3])'                      Year = Xbmc.StringToNumber(dbline[4])'                      FileName = dbline[5]'                      IdAlbum = Xbmc.StringToNumber(dbline[6])'                      Album = dbline[7]'                      Path = dbline[8]'                      IdArtist = Xbmc.StringToNumber(dbline[9])'                      Artist = dbline[10]'                      IdGenre = Xbmc.StringToNumber(dbline[11])'                      Genre = dbline[12]'                      Thumb = dbline[13]'                  };                  var thumbparts = dbline[13].Split('/');                  var hash = thumbparts[thumbparts.Length - 1].Replace(".tbn"' "");                  song.Hash = hash;                    songs.Add(song);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcAudioPlayer,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.AudioPlayer.cs,AsyncPlayFiles,The following statement contains a magic number: while (_bw.IsBusy)              {                  Thread.Sleep(50);                  System.Windows.Forms.Application.DoEvents();              }
Magic Number,Remote.XBMC.Dharma.Api,Xbmc,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.cs,Hash,The following statement contains a magic number: for (var index = 0; index < chars.Length; index++)              {                  if (chars[index] <= 127)                      chars[index] = Char.ToLowerInvariant(chars[index]);              }
Magic Number,Remote.XBMC.Dharma.Api,Xbmc,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.cs,Hash,The following statement contains a magic number: foreach (var myByte in bytes)              {                  mCrc ^= ((uint)(myByte) << 24);                  for (var i = 0; i < 8; i++)                  {                      if ((Convert.ToUInt32(mCrc) & 0x80000000) == 0x80000000)                      {                          mCrc = (mCrc << 1) ^ 0x04C11DB7;                      }                      else                      {                          mCrc <<= 1;                      }                  }              }
Magic Number,Remote.XBMC.Dharma.Api,Xbmc,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.cs,Hash,The following statement contains a magic number: foreach (var myByte in bytes)              {                  mCrc ^= ((uint)(myByte) << 24);                  for (var i = 0; i < 8; i++)                  {                      if ((Convert.ToUInt32(mCrc) & 0x80000000) == 0x80000000)                      {                          mCrc = (mCrc << 1) ^ 0x04C11DB7;                      }                      else                      {                          mCrc <<= 1;                      }                  }              }
Magic Number,Remote.XBMC.Dharma.Api,Xbmc,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.cs,CheckRemote,The following statement contains a magic number: if (cAdditional != additional && force)              {                  _eventClient.SendAction( "LoadProfile(" + additional + ")");                  Thread.Sleep(400);                  cAdditional = GetAdditionalInfo();                  return cAdditional == additional;              }
Magic Number,Remote.XBMC.Dharma.Api,Xbmc,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.cs,TestConnection,The following statement contains a magic number: if (res)              {                  var version = GetVersion();                  var build = new Regex(@"r(\d+)");                  var m = build.Match(version);                  if (m.Success)                  {                      var ver = Convert.ToInt32("0" + m.Groups[1]'CultureInfo.InvariantCulture);                      if (ver < 29000 )                      {                          Log("Target version : " + ver + " not compatible !");                          return 2; // Plugin not compatible                      }                  }                  // If not build found just go will perhaps works              }
Magic Number,Remote.XBMC.Dharma.Api,Xbmc,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.cs,TestConnection,The following statement contains a magic number: if (res)              {                  var version = GetVersion();                  var build = new Regex(@"r(\d+)");                  var m = build.Match(version);                  if (m.Success)                  {                      var ver = Convert.ToInt32("0" + m.Groups[1]'CultureInfo.InvariantCulture);                      if (ver < 29000 )                      {                          Log("Target version : " + ver + " not compatible !");                          return 2; // Plugin not compatible                      }                  }                  // If not build found just go will perhaps works              }
Magic Number,Remote.XBMC.Dharma.Api,Xbmc,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.cs,Configure,The following statement contains a magic number: if (_checkTimer == null)              {                  _checkTimer = new Timer { Interval = 1500' SynchronizingObject = null };                  _checkTimer.Elapsed += CheckTimerTick;                  _checkTimer.Start();              }
Magic Number,Remote.XBMC.Dharma.Api,Xbmc,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.cs,Configure,The following statement contains a magic number: if (_nowplayingTimer == null)              {                  _nowplayingTimer = new Timer { Interval = 1000' SynchronizingObject = null };                  _nowplayingTimer.Elapsed += NowPlayingTimerTick;                  _nowplayingTimer.Start();              }
Magic Number,Remote.XBMC.Dharma.Api,Xbmc,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.cs,Command,The following statement contains a magic number: lock (Locker)              {                  if (!_configured) return null;                  HttpWebRequest request;                  string reqContent;                  string[] returnContent = null;                  var credentials = GetCredentials();                    var uri = GetApiPath() + @"?command=" + Uri.EscapeDataString(cmd);                  uri += String.IsNullOrEmpty(parameter) ? "" : "(" + Uri.EscapeDataString(parameter) + ")";                    try                  {                      request = (HttpWebRequest)WebRequest.Create(new Uri(uri));                      request.KeepAlive = false;                      request.ReadWriteTimeout = 1000000;                      request.Method = "GET";                      request.Timeout = GetTimeout();                      if (credentials != null)                          request.Credentials = credentials;                      if (cmd != "SetResponseFormat" && cmd != "GetCurrentlyPlaying" && cmd != "GetPercentage" && cmd != "GetVolume")                      {                          if (!String.IsNullOrEmpty(parameter))                              Log("COMMAND : " + cmd + " - " + parameter);                          else                              Log("COMMAND : " + cmd);                      }                      Trace(uri);                      using (var response = (HttpWebResponse)request.GetResponse())                      {                          using (var stream = response.GetResponseStream())                          {                              if (stream != null)                                  using (var reader = new StreamReader(stream' Encoding.UTF8))                                  {                                      reqContent = reader.ReadToEnd();                                      Trace(reqContent);                                      reqContent = reqContent.Replace("<html>\n"' "").Replace("\n</html>\n"' "").Replace("\n</html>"' "").Replace("</html>\n"' "").Replace("\n<li>"' "<li>")                                          .Replace("</html>"' "");                                      var temp = reqContent.Split(new[] { "<li>" }' StringSplitOptions.None).ToList();                                      temp.RemoveAt(0);                                      returnContent = temp.ToArray();                                  }                          }                      }                    }                  catch (WebException e)                  {                      if (cmd != "SetResponseFormat")                      {                          if (!String.IsNullOrEmpty(parameter))                              Log("ERROR - COMMAND : " + cmd + " : " + parameter + " - " + e.Message);                          else                              Log("ERROR - COMMAND : " + cmd + " - " + e.Message);                      }                  }                  return returnContent;              }
Magic Number,Remote.XBMC.Dharma.Api,Xbmc,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.cs,DBCommand,The following statement contains a magic number: try              {                  request = (HttpWebRequest)WebRequest.Create(new Uri(uri));                  request.KeepAlive = false;                  request.ReadWriteTimeout = 1000000;                  request.Method = "GET";                  request.Timeout = GetTimeout();                  if (credentials != null)                      request.Credentials = credentials;                    Log("DBCOMMAND : " + db + " - " + query);                  Trace(uri);                  using (var response = (HttpWebResponse)request.GetResponse())                  {                      using (var stream = response.GetResponseStream())                      {                          if (stream != null)                              using (var reader = new StreamReader(stream' Encoding.UTF8))                              {                                  var result = reader.ReadToEnd();                                  Trace(result);                                  returnContent = DBResultToArray(result);                              }                      }                  }                                }              catch (WebException e)              {                  Log("ERROR - DBCOMMAND : " + db + " - " + query + " - " + e.Message);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcFile,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.File.cs,AsyncDownloadImages,The following statement contains a magic number: while (_workerDownloads.IsBusy)              {                  Thread.Sleep(50);                  System.Windows.Forms.Application.DoEvents();              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcFile,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.File.cs,AsyncImagesDownloadsWorker,The following statement contains a magic number: foreach (var downloadFileInfo in downloadsFileInfo)              {                  if (((BackgroundWorker)sender).CancellationPending)                  {                      _isDownloading = false;                      e.Cancel = true;                      return;                  }                  DownloadImages(downloadFileInfo);                  Thread.Sleep(75);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcPlayer,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.Player.cs,RefreshNowPlaying,The following statement contains a magic number: lock (Locker)              {                  if (_parent.MpcLoaded)                  {                      var result = _parent.MpcHcRemote.GetStatus();                      var result2 = new ArrayList();                      MpcHcRemote.ParseCSVFields(result2' result);                      var data = (string[]) result2.ToArray(typeof (string));                      if (data.Length > 6)                      {                          _nowPlaying.MediaType =  "Video";                          _nowPlaying.Title = "Media Player Classic";                          _nowPlaying.Time = new TimeSpan(0' 0' 0' Convert.ToInt32("0" + data[2])/1000);                          _nowPlaying.Duration = new TimeSpan(0' 0' 0' Convert.ToInt32("0" + data[4])/1000);                          var percent = Math.Floor(100.0 * Convert.ToInt32("0" + data[2]' CultureInfo.InvariantCulture) / Convert.ToInt32("0" + data[4]' CultureInfo.InvariantCulture));                          if (Double.IsNaN(percent))                              percent = 0;                          _nowPlaying.Volume = Convert.ToInt32("0" + data[7]' CultureInfo.InvariantCulture);                          _nowPlaying.IsMuted = data[6] == "1";                          _nowPlaying.Progress = (int)percent;                      }                  }                  else                  {                      if (!_parent.IsConnected())                      {                          _nowPlaying.FileName = "";                          _nowPlaying.Title = "";                          return;                      }                        var infos = (JsonObject)_parent.JsonCommand("System.GetInfoLabels"' new[]                                                                                  {                                                                                      "MusicPlayer.Title"'                                                                                      "MusicPlayer.Album"'                                                                                      "MusicPlayer.Artist"'                                                                                      "MusicPlayer.Property(Artist_Description)"'                                                                                      "MusicPlayer.Genre"'                                                                                      "MusicPlayer.Year"'                                                                                      "MusicPlayer.TrackNumber"'                                                                                      "MusicPlayer.Codec"'                                                                                      "Player.Time"'                                                                                      "Player.Duration"'                                                                                      "Player.Volume"'                                                                                      "Player.Filenameandpath"'                                                                                      "VideoPlayer.Title"'                                                                                      "VideoPlayer.TVShowTitle"'                                                                                      "VideoPlayer.Genre"'                                                                                      "VideoPlayer.Director"'                                                                                      "VideoPlayer.Year"'                                                                                      "VideoPlayer.Rating"'                                                                                      "VideoPlayer.Tagline"'                                                                                      "VideoPlayer.Studio"'                                                                                      "VideoPlayer.Plot"'                                                                                      "VideoPlayer.Season"'                                                                                      "VideoPlayer.Episode"'                                                                                      "VideoPlayer.VideoCodec"                                                                                  });                        if (infos == null)                          return;                      JsonObject infos2 = null;                      _nowPlaying.FileName = infos["Player.Filenameandpath"].ToString();                        if (!String.IsNullOrEmpty(infos["VideoPlayer.TVShowTitle"].ToString()))                      {                          _nowPlaying.MediaType = "TvShow";                      }                      else if (!String.IsNullOrEmpty(infos["MusicPlayer.Title"].ToString()))                      {                          _nowPlaying.MediaType = "Audio";                      }                      else if (!String.IsNullOrEmpty(infos["VideoPlayer.Title"].ToString()))                      {                          _nowPlaying.MediaType = "Movie";                      }                      else                      {                          _nowPlaying.MediaType = "Unknown";                          _nowPlaying.Title = "";                          _nowPlaying.IsPlaying = false;                          _nowPlaying.IsPaused = false;                          _nowPlaying.Duration = new TimeSpan();                          _nowPlaying.Time = new TimeSpan();                      }                        if (_nowPlaying.MediaType == "Movie" || _nowPlaying.MediaType == "TvShow")                      {                          infos2 = (JsonObject)_parent.JsonCommand("VideoPlayer.GetTime"' null);                          _nowPlaying.Genre = infos["VideoPlayer.Genre"].ToString();                          _nowPlaying.Title = infos["VideoPlayer.Title"].ToString();                          _nowPlaying.Year = Convert.ToInt32("0" + infos["VideoPlayer.Year"]);                          _nowPlaying.SeasonNumber = Convert.ToInt32("0" + infos["VideoPlayer.Season"]);                          _nowPlaying.EpisodeNumber = Convert.ToInt32("0" + infos["VideoPlayer.Episode"]);                          _nowPlaying.ShowTitle = infos["VideoPlayer.TVShowTitle"].ToString();                          _nowPlaying.Plot = infos["VideoPlayer.Plot"].ToString();                          _nowPlaying.Director = infos["VideoPlayer.Director"].ToString();                          _nowPlaying.Studio = infos["VideoPlayer.Studio"].ToString();                          _nowPlaying.Tagline = infos["VideoPlayer.Tagline"].ToString();                          _nowPlaying.Rating = infos["VideoPlayer.Rating"].ToString();                          if (_nowPlaying.FileName.StartsWith("stack://"' StringComparison.OrdinalIgnoreCase))                          {                              var temp = _nowPlaying.FileName.Split(new[] { " ' " }' StringSplitOptions.None);                              var hash = Xbmc.Hash(temp[0].Replace("stack://"' ""));                              _nowPlaying.ThumbURL = @"special://profile/Thumbnails/Video/" + hash[0] + "/" + hash + ".tbn";                              _nowPlaying.FanartURL = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(_nowPlaying.FileName) + ".tbn";                          }                          else                          {                              var hash = Xbmc.Hash(_nowPlaying.FileName);                              _nowPlaying.ThumbURL = @"special://profile/Thumbnails/Video/" + hash[0] + "/" + hash + ".tbn";                              _nowPlaying.FanartURL = @"special://profile/Thumbnails/Video/Fanart/" + hash + ".tbn";                          }                      }                      if (_nowPlaying.MediaType == "Audio")                      {                          infos2 = (JsonObject)_parent.JsonCommand("AudioPlayer.GetTime"' null);                          _nowPlaying.Genre = infos["MusicPlayer.Genre"].ToString();                          _nowPlaying.Title = infos["MusicPlayer.Title"].ToString();                          _nowPlaying.Year = Convert.ToInt32("0" + infos["MusicPlayer.Year"]);                          _nowPlaying.Track = Convert.ToInt32("0" + infos["MusicPlayer.TrackNumber"]);                          _nowPlaying.Artist = infos["MusicPlayer.Artist"].ToString();                          _nowPlaying.Album = infos["MusicPlayer.Album"].ToString();                          var hash = Xbmc.Hash(_nowPlaying.Album + _nowPlaying.Artist);                          _nowPlaying.ThumbURL = @"special://profile/Thumbnails/Music/" + hash[0] + "/" + hash + ".tbn";                          _nowPlaying.FanartURL = @"special://profile/Thumbnails/Music/Fanart/" + hash + ".tbn";                      }                        if (infos2 != null)                      {                          _nowPlaying.IsPaused = (bool)infos2["paused"];                          _nowPlaying.IsPlaying = !(bool)infos2["paused"] && (bool)infos2["playing"];                          _nowPlaying.Time = new TimeSpan(0' 0' 0' Convert.ToInt32("0" + infos2["time"]));                          _nowPlaying.Duration = new TimeSpan(0' 0' 0' Convert.ToInt32("0" + infos2["total"]));                      }                        var percent = Math.Floor(100.0 * _nowPlaying.Time.TotalSeconds / _nowPlaying.Duration.TotalSeconds);                      if (Double.IsNaN(percent))                          percent = 0;                      _nowPlaying.Progress = (int)percent;                        var vol = (1 - Convert.ToDouble("0" + infos["Player.Volume"].ToString().Replace(" dB"' "").Replace("-"'"").Replace("."'"'"))/60)*100;                        _nowPlaying.Volume = (int)vol;                      _nowPlaying.IsMuted = (vol == 0);                        _parent.MpcLoaded = _nowPlaying.Duration == new TimeSpan(0' 0' 0' 1);                      }              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcPlayer,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.Player.cs,RefreshNowPlaying,The following statement contains a magic number: lock (Locker)              {                  if (_parent.MpcLoaded)                  {                      var result = _parent.MpcHcRemote.GetStatus();                      var result2 = new ArrayList();                      MpcHcRemote.ParseCSVFields(result2' result);                      var data = (string[]) result2.ToArray(typeof (string));                      if (data.Length > 6)                      {                          _nowPlaying.MediaType =  "Video";                          _nowPlaying.Title = "Media Player Classic";                          _nowPlaying.Time = new TimeSpan(0' 0' 0' Convert.ToInt32("0" + data[2])/1000);                          _nowPlaying.Duration = new TimeSpan(0' 0' 0' Convert.ToInt32("0" + data[4])/1000);                          var percent = Math.Floor(100.0 * Convert.ToInt32("0" + data[2]' CultureInfo.InvariantCulture) / Convert.ToInt32("0" + data[4]' CultureInfo.InvariantCulture));                          if (Double.IsNaN(percent))                              percent = 0;                          _nowPlaying.Volume = Convert.ToInt32("0" + data[7]' CultureInfo.InvariantCulture);                          _nowPlaying.IsMuted = data[6] == "1";                          _nowPlaying.Progress = (int)percent;                      }                  }                  else                  {                      if (!_parent.IsConnected())                      {                          _nowPlaying.FileName = "";                          _nowPlaying.Title = "";                          return;                      }                        var infos = (JsonObject)_parent.JsonCommand("System.GetInfoLabels"' new[]                                                                                  {                                                                                      "MusicPlayer.Title"'                                                                                      "MusicPlayer.Album"'                                                                                      "MusicPlayer.Artist"'                                                                                      "MusicPlayer.Property(Artist_Description)"'                                                                                      "MusicPlayer.Genre"'                                                                                      "MusicPlayer.Year"'                                                                                      "MusicPlayer.TrackNumber"'                                                                                      "MusicPlayer.Codec"'                                                                                      "Player.Time"'                                                                                      "Player.Duration"'                                                                                      "Player.Volume"'                                                                                      "Player.Filenameandpath"'                                                                                      "VideoPlayer.Title"'                                                                                      "VideoPlayer.TVShowTitle"'                                                                                      "VideoPlayer.Genre"'                                                                                      "VideoPlayer.Director"'                                                                                      "VideoPlayer.Year"'                                                                                      "VideoPlayer.Rating"'                                                                                      "VideoPlayer.Tagline"'                                                                                      "VideoPlayer.Studio"'                                                                                      "VideoPlayer.Plot"'                                                                                      "VideoPlayer.Season"'                                                                                      "VideoPlayer.Episode"'                                                                                      "VideoPlayer.VideoCodec"                                                                                  });                        if (infos == null)                          return;                      JsonObject infos2 = null;                      _nowPlaying.FileName = infos["Player.Filenameandpath"].ToString();                        if (!String.IsNullOrEmpty(infos["VideoPlayer.TVShowTitle"].ToString()))                      {                          _nowPlaying.MediaType = "TvShow";                      }                      else if (!String.IsNullOrEmpty(infos["MusicPlayer.Title"].ToString()))                      {                          _nowPlaying.MediaType = "Audio";                      }                      else if (!String.IsNullOrEmpty(infos["VideoPlayer.Title"].ToString()))                      {                          _nowPlaying.MediaType = "Movie";                      }                      else                      {                          _nowPlaying.MediaType = "Unknown";                          _nowPlaying.Title = "";                          _nowPlaying.IsPlaying = false;                          _nowPlaying.IsPaused = false;                          _nowPlaying.Duration = new TimeSpan();                          _nowPlaying.Time = new TimeSpan();                      }                        if (_nowPlaying.MediaType == "Movie" || _nowPlaying.MediaType == "TvShow")                      {                          infos2 = (JsonObject)_parent.JsonCommand("VideoPlayer.GetTime"' null);                          _nowPlaying.Genre = infos["VideoPlayer.Genre"].ToString();                          _nowPlaying.Title = infos["VideoPlayer.Title"].ToString();                          _nowPlaying.Year = Convert.ToInt32("0" + infos["VideoPlayer.Year"]);                          _nowPlaying.SeasonNumber = Convert.ToInt32("0" + infos["VideoPlayer.Season"]);                          _nowPlaying.EpisodeNumber = Convert.ToInt32("0" + infos["VideoPlayer.Episode"]);                          _nowPlaying.ShowTitle = infos["VideoPlayer.TVShowTitle"].ToString();                          _nowPlaying.Plot = infos["VideoPlayer.Plot"].ToString();                          _nowPlaying.Director = infos["VideoPlayer.Director"].ToString();                          _nowPlaying.Studio = infos["VideoPlayer.Studio"].ToString();                          _nowPlaying.Tagline = infos["VideoPlayer.Tagline"].ToString();                          _nowPlaying.Rating = infos["VideoPlayer.Rating"].ToString();                          if (_nowPlaying.FileName.StartsWith("stack://"' StringComparison.OrdinalIgnoreCase))                          {                              var temp = _nowPlaying.FileName.Split(new[] { " ' " }' StringSplitOptions.None);                              var hash = Xbmc.Hash(temp[0].Replace("stack://"' ""));                              _nowPlaying.ThumbURL = @"special://profile/Thumbnails/Video/" + hash[0] + "/" + hash + ".tbn";                              _nowPlaying.FanartURL = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(_nowPlaying.FileName) + ".tbn";                          }                          else                          {                              var hash = Xbmc.Hash(_nowPlaying.FileName);                              _nowPlaying.ThumbURL = @"special://profile/Thumbnails/Video/" + hash[0] + "/" + hash + ".tbn";                              _nowPlaying.FanartURL = @"special://profile/Thumbnails/Video/Fanart/" + hash + ".tbn";                          }                      }                      if (_nowPlaying.MediaType == "Audio")                      {                          infos2 = (JsonObject)_parent.JsonCommand("AudioPlayer.GetTime"' null);                          _nowPlaying.Genre = infos["MusicPlayer.Genre"].ToString();                          _nowPlaying.Title = infos["MusicPlayer.Title"].ToString();                          _nowPlaying.Year = Convert.ToInt32("0" + infos["MusicPlayer.Year"]);                          _nowPlaying.Track = Convert.ToInt32("0" + infos["MusicPlayer.TrackNumber"]);                          _nowPlaying.Artist = infos["MusicPlayer.Artist"].ToString();                          _nowPlaying.Album = infos["MusicPlayer.Album"].ToString();                          var hash = Xbmc.Hash(_nowPlaying.Album + _nowPlaying.Artist);                          _nowPlaying.ThumbURL = @"special://profile/Thumbnails/Music/" + hash[0] + "/" + hash + ".tbn";                          _nowPlaying.FanartURL = @"special://profile/Thumbnails/Music/Fanart/" + hash + ".tbn";                      }                        if (infos2 != null)                      {                          _nowPlaying.IsPaused = (bool)infos2["paused"];                          _nowPlaying.IsPlaying = !(bool)infos2["paused"] && (bool)infos2["playing"];                          _nowPlaying.Time = new TimeSpan(0' 0' 0' Convert.ToInt32("0" + infos2["time"]));                          _nowPlaying.Duration = new TimeSpan(0' 0' 0' Convert.ToInt32("0" + infos2["total"]));                      }                        var percent = Math.Floor(100.0 * _nowPlaying.Time.TotalSeconds / _nowPlaying.Duration.TotalSeconds);                      if (Double.IsNaN(percent))                          percent = 0;                      _nowPlaying.Progress = (int)percent;                        var vol = (1 - Convert.ToDouble("0" + infos["Player.Volume"].ToString().Replace(" dB"' "").Replace("-"'"").Replace("."'"'"))/60)*100;                        _nowPlaying.Volume = (int)vol;                      _nowPlaying.IsMuted = (vol == 0);                        _parent.MpcLoaded = _nowPlaying.Duration == new TimeSpan(0' 0' 0' 1);                      }              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcPlayer,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.Player.cs,RefreshNowPlaying,The following statement contains a magic number: lock (Locker)              {                  if (_parent.MpcLoaded)                  {                      var result = _parent.MpcHcRemote.GetStatus();                      var result2 = new ArrayList();                      MpcHcRemote.ParseCSVFields(result2' result);                      var data = (string[]) result2.ToArray(typeof (string));                      if (data.Length > 6)                      {                          _nowPlaying.MediaType =  "Video";                          _nowPlaying.Title = "Media Player Classic";                          _nowPlaying.Time = new TimeSpan(0' 0' 0' Convert.ToInt32("0" + data[2])/1000);                          _nowPlaying.Duration = new TimeSpan(0' 0' 0' Convert.ToInt32("0" + data[4])/1000);                          var percent = Math.Floor(100.0 * Convert.ToInt32("0" + data[2]' CultureInfo.InvariantCulture) / Convert.ToInt32("0" + data[4]' CultureInfo.InvariantCulture));                          if (Double.IsNaN(percent))                              percent = 0;                          _nowPlaying.Volume = Convert.ToInt32("0" + data[7]' CultureInfo.InvariantCulture);                          _nowPlaying.IsMuted = data[6] == "1";                          _nowPlaying.Progress = (int)percent;                      }                  }                  else                  {                      if (!_parent.IsConnected())                      {                          _nowPlaying.FileName = "";                          _nowPlaying.Title = "";                          return;                      }                        var infos = (JsonObject)_parent.JsonCommand("System.GetInfoLabels"' new[]                                                                                  {                                                                                      "MusicPlayer.Title"'                                                                                      "MusicPlayer.Album"'                                                                                      "MusicPlayer.Artist"'                                                                                      "MusicPlayer.Property(Artist_Description)"'                                                                                      "MusicPlayer.Genre"'                                                                                      "MusicPlayer.Year"'                                                                                      "MusicPlayer.TrackNumber"'                                                                                      "MusicPlayer.Codec"'                                                                                      "Player.Time"'                                                                                      "Player.Duration"'                                                                                      "Player.Volume"'                                                                                      "Player.Filenameandpath"'                                                                                      "VideoPlayer.Title"'                                                                                      "VideoPlayer.TVShowTitle"'                                                                                      "VideoPlayer.Genre"'                                                                                      "VideoPlayer.Director"'                                                                                      "VideoPlayer.Year"'                                                                                      "VideoPlayer.Rating"'                                                                                      "VideoPlayer.Tagline"'                                                                                      "VideoPlayer.Studio"'                                                                                      "VideoPlayer.Plot"'                                                                                      "VideoPlayer.Season"'                                                                                      "VideoPlayer.Episode"'                                                                                      "VideoPlayer.VideoCodec"                                                                                  });                        if (infos == null)                          return;                      JsonObject infos2 = null;                      _nowPlaying.FileName = infos["Player.Filenameandpath"].ToString();                        if (!String.IsNullOrEmpty(infos["VideoPlayer.TVShowTitle"].ToString()))                      {                          _nowPlaying.MediaType = "TvShow";                      }                      else if (!String.IsNullOrEmpty(infos["MusicPlayer.Title"].ToString()))                      {                          _nowPlaying.MediaType = "Audio";                      }                      else if (!String.IsNullOrEmpty(infos["VideoPlayer.Title"].ToString()))                      {                          _nowPlaying.MediaType = "Movie";                      }                      else                      {                          _nowPlaying.MediaType = "Unknown";                          _nowPlaying.Title = "";                          _nowPlaying.IsPlaying = false;                          _nowPlaying.IsPaused = false;                          _nowPlaying.Duration = new TimeSpan();                          _nowPlaying.Time = new TimeSpan();                      }                        if (_nowPlaying.MediaType == "Movie" || _nowPlaying.MediaType == "TvShow")                      {                          infos2 = (JsonObject)_parent.JsonCommand("VideoPlayer.GetTime"' null);                          _nowPlaying.Genre = infos["VideoPlayer.Genre"].ToString();                          _nowPlaying.Title = infos["VideoPlayer.Title"].ToString();                          _nowPlaying.Year = Convert.ToInt32("0" + infos["VideoPlayer.Year"]);                          _nowPlaying.SeasonNumber = Convert.ToInt32("0" + infos["VideoPlayer.Season"]);                          _nowPlaying.EpisodeNumber = Convert.ToInt32("0" + infos["VideoPlayer.Episode"]);                          _nowPlaying.ShowTitle = infos["VideoPlayer.TVShowTitle"].ToString();                          _nowPlaying.Plot = infos["VideoPlayer.Plot"].ToString();                          _nowPlaying.Director = infos["VideoPlayer.Director"].ToString();                          _nowPlaying.Studio = infos["VideoPlayer.Studio"].ToString();                          _nowPlaying.Tagline = infos["VideoPlayer.Tagline"].ToString();                          _nowPlaying.Rating = infos["VideoPlayer.Rating"].ToString();                          if (_nowPlaying.FileName.StartsWith("stack://"' StringComparison.OrdinalIgnoreCase))                          {                              var temp = _nowPlaying.FileName.Split(new[] { " ' " }' StringSplitOptions.None);                              var hash = Xbmc.Hash(temp[0].Replace("stack://"' ""));                              _nowPlaying.ThumbURL = @"special://profile/Thumbnails/Video/" + hash[0] + "/" + hash + ".tbn";                              _nowPlaying.FanartURL = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(_nowPlaying.FileName) + ".tbn";                          }                          else                          {                              var hash = Xbmc.Hash(_nowPlaying.FileName);                              _nowPlaying.ThumbURL = @"special://profile/Thumbnails/Video/" + hash[0] + "/" + hash + ".tbn";                              _nowPlaying.FanartURL = @"special://profile/Thumbnails/Video/Fanart/" + hash + ".tbn";                          }                      }                      if (_nowPlaying.MediaType == "Audio")                      {                          infos2 = (JsonObject)_parent.JsonCommand("AudioPlayer.GetTime"' null);                          _nowPlaying.Genre = infos["MusicPlayer.Genre"].ToString();                          _nowPlaying.Title = infos["MusicPlayer.Title"].ToString();                          _nowPlaying.Year = Convert.ToInt32("0" + infos["MusicPlayer.Year"]);                          _nowPlaying.Track = Convert.ToInt32("0" + infos["MusicPlayer.TrackNumber"]);                          _nowPlaying.Artist = infos["MusicPlayer.Artist"].ToString();                          _nowPlaying.Album = infos["MusicPlayer.Album"].ToString();                          var hash = Xbmc.Hash(_nowPlaying.Album + _nowPlaying.Artist);                          _nowPlaying.ThumbURL = @"special://profile/Thumbnails/Music/" + hash[0] + "/" + hash + ".tbn";                          _nowPlaying.FanartURL = @"special://profile/Thumbnails/Music/Fanart/" + hash + ".tbn";                      }                        if (infos2 != null)                      {                          _nowPlaying.IsPaused = (bool)infos2["paused"];                          _nowPlaying.IsPlaying = !(bool)infos2["paused"] && (bool)infos2["playing"];                          _nowPlaying.Time = new TimeSpan(0' 0' 0' Convert.ToInt32("0" + infos2["time"]));                          _nowPlaying.Duration = new TimeSpan(0' 0' 0' Convert.ToInt32("0" + infos2["total"]));                      }                        var percent = Math.Floor(100.0 * _nowPlaying.Time.TotalSeconds / _nowPlaying.Duration.TotalSeconds);                      if (Double.IsNaN(percent))                          percent = 0;                      _nowPlaying.Progress = (int)percent;                        var vol = (1 - Convert.ToDouble("0" + infos["Player.Volume"].ToString().Replace(" dB"' "").Replace("-"'"").Replace("."'"'"))/60)*100;                        _nowPlaying.Volume = (int)vol;                      _nowPlaying.IsMuted = (vol == 0);                        _parent.MpcLoaded = _nowPlaying.Duration == new TimeSpan(0' 0' 0' 1);                      }              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcPlayer,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.Player.cs,RefreshNowPlaying,The following statement contains a magic number: lock (Locker)              {                  if (_parent.MpcLoaded)                  {                      var result = _parent.MpcHcRemote.GetStatus();                      var result2 = new ArrayList();                      MpcHcRemote.ParseCSVFields(result2' result);                      var data = (string[]) result2.ToArray(typeof (string));                      if (data.Length > 6)                      {                          _nowPlaying.MediaType =  "Video";                          _nowPlaying.Title = "Media Player Classic";                          _nowPlaying.Time = new TimeSpan(0' 0' 0' Convert.ToInt32("0" + data[2])/1000);                          _nowPlaying.Duration = new TimeSpan(0' 0' 0' Convert.ToInt32("0" + data[4])/1000);                          var percent = Math.Floor(100.0 * Convert.ToInt32("0" + data[2]' CultureInfo.InvariantCulture) / Convert.ToInt32("0" + data[4]' CultureInfo.InvariantCulture));                          if (Double.IsNaN(percent))                              percent = 0;                          _nowPlaying.Volume = Convert.ToInt32("0" + data[7]' CultureInfo.InvariantCulture);                          _nowPlaying.IsMuted = data[6] == "1";                          _nowPlaying.Progress = (int)percent;                      }                  }                  else                  {                      if (!_parent.IsConnected())                      {                          _nowPlaying.FileName = "";                          _nowPlaying.Title = "";                          return;                      }                        var infos = (JsonObject)_parent.JsonCommand("System.GetInfoLabels"' new[]                                                                                  {                                                                                      "MusicPlayer.Title"'                                                                                      "MusicPlayer.Album"'                                                                                      "MusicPlayer.Artist"'                                                                                      "MusicPlayer.Property(Artist_Description)"'                                                                                      "MusicPlayer.Genre"'                                                                                      "MusicPlayer.Year"'                                                                                      "MusicPlayer.TrackNumber"'                                                                                      "MusicPlayer.Codec"'                                                                                      "Player.Time"'                                                                                      "Player.Duration"'                                                                                      "Player.Volume"'                                                                                      "Player.Filenameandpath"'                                                                                      "VideoPlayer.Title"'                                                                                      "VideoPlayer.TVShowTitle"'                                                                                      "VideoPlayer.Genre"'                                                                                      "VideoPlayer.Director"'                                                                                      "VideoPlayer.Year"'                                                                                      "VideoPlayer.Rating"'                                                                                      "VideoPlayer.Tagline"'                                                                                      "VideoPlayer.Studio"'                                                                                      "VideoPlayer.Plot"'                                                                                      "VideoPlayer.Season"'                                                                                      "VideoPlayer.Episode"'                                                                                      "VideoPlayer.VideoCodec"                                                                                  });                        if (infos == null)                          return;                      JsonObject infos2 = null;                      _nowPlaying.FileName = infos["Player.Filenameandpath"].ToString();                        if (!String.IsNullOrEmpty(infos["VideoPlayer.TVShowTitle"].ToString()))                      {                          _nowPlaying.MediaType = "TvShow";                      }                      else if (!String.IsNullOrEmpty(infos["MusicPlayer.Title"].ToString()))                      {                          _nowPlaying.MediaType = "Audio";                      }                      else if (!String.IsNullOrEmpty(infos["VideoPlayer.Title"].ToString()))                      {                          _nowPlaying.MediaType = "Movie";                      }                      else                      {                          _nowPlaying.MediaType = "Unknown";                          _nowPlaying.Title = "";                          _nowPlaying.IsPlaying = false;                          _nowPlaying.IsPaused = false;                          _nowPlaying.Duration = new TimeSpan();                          _nowPlaying.Time = new TimeSpan();                      }                        if (_nowPlaying.MediaType == "Movie" || _nowPlaying.MediaType == "TvShow")                      {                          infos2 = (JsonObject)_parent.JsonCommand("VideoPlayer.GetTime"' null);                          _nowPlaying.Genre = infos["VideoPlayer.Genre"].ToString();                          _nowPlaying.Title = infos["VideoPlayer.Title"].ToString();                          _nowPlaying.Year = Convert.ToInt32("0" + infos["VideoPlayer.Year"]);                          _nowPlaying.SeasonNumber = Convert.ToInt32("0" + infos["VideoPlayer.Season"]);                          _nowPlaying.EpisodeNumber = Convert.ToInt32("0" + infos["VideoPlayer.Episode"]);                          _nowPlaying.ShowTitle = infos["VideoPlayer.TVShowTitle"].ToString();                          _nowPlaying.Plot = infos["VideoPlayer.Plot"].ToString();                          _nowPlaying.Director = infos["VideoPlayer.Director"].ToString();                          _nowPlaying.Studio = infos["VideoPlayer.Studio"].ToString();                          _nowPlaying.Tagline = infos["VideoPlayer.Tagline"].ToString();                          _nowPlaying.Rating = infos["VideoPlayer.Rating"].ToString();                          if (_nowPlaying.FileName.StartsWith("stack://"' StringComparison.OrdinalIgnoreCase))                          {                              var temp = _nowPlaying.FileName.Split(new[] { " ' " }' StringSplitOptions.None);                              var hash = Xbmc.Hash(temp[0].Replace("stack://"' ""));                              _nowPlaying.ThumbURL = @"special://profile/Thumbnails/Video/" + hash[0] + "/" + hash + ".tbn";                              _nowPlaying.FanartURL = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(_nowPlaying.FileName) + ".tbn";                          }                          else                          {                              var hash = Xbmc.Hash(_nowPlaying.FileName);                              _nowPlaying.ThumbURL = @"special://profile/Thumbnails/Video/" + hash[0] + "/" + hash + ".tbn";                              _nowPlaying.FanartURL = @"special://profile/Thumbnails/Video/Fanart/" + hash + ".tbn";                          }                      }                      if (_nowPlaying.MediaType == "Audio")                      {                          infos2 = (JsonObject)_parent.JsonCommand("AudioPlayer.GetTime"' null);                          _nowPlaying.Genre = infos["MusicPlayer.Genre"].ToString();                          _nowPlaying.Title = infos["MusicPlayer.Title"].ToString();                          _nowPlaying.Year = Convert.ToInt32("0" + infos["MusicPlayer.Year"]);                          _nowPlaying.Track = Convert.ToInt32("0" + infos["MusicPlayer.TrackNumber"]);                          _nowPlaying.Artist = infos["MusicPlayer.Artist"].ToString();                          _nowPlaying.Album = infos["MusicPlayer.Album"].ToString();                          var hash = Xbmc.Hash(_nowPlaying.Album + _nowPlaying.Artist);                          _nowPlaying.ThumbURL = @"special://profile/Thumbnails/Music/" + hash[0] + "/" + hash + ".tbn";                          _nowPlaying.FanartURL = @"special://profile/Thumbnails/Music/Fanart/" + hash + ".tbn";                      }                        if (infos2 != null)                      {                          _nowPlaying.IsPaused = (bool)infos2["paused"];                          _nowPlaying.IsPlaying = !(bool)infos2["paused"] && (bool)infos2["playing"];                          _nowPlaying.Time = new TimeSpan(0' 0' 0' Convert.ToInt32("0" + infos2["time"]));                          _nowPlaying.Duration = new TimeSpan(0' 0' 0' Convert.ToInt32("0" + infos2["total"]));                      }                        var percent = Math.Floor(100.0 * _nowPlaying.Time.TotalSeconds / _nowPlaying.Duration.TotalSeconds);                      if (Double.IsNaN(percent))                          percent = 0;                      _nowPlaying.Progress = (int)percent;                        var vol = (1 - Convert.ToDouble("0" + infos["Player.Volume"].ToString().Replace(" dB"' "").Replace("-"'"").Replace("."'"'"))/60)*100;                        _nowPlaying.Volume = (int)vol;                      _nowPlaying.IsMuted = (vol == 0);                        _parent.MpcLoaded = _nowPlaying.Duration == new TimeSpan(0' 0' 0' 1);                      }              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcPlayer,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.Player.cs,RefreshNowPlaying,The following statement contains a magic number: lock (Locker)              {                  if (_parent.MpcLoaded)                  {                      var result = _parent.MpcHcRemote.GetStatus();                      var result2 = new ArrayList();                      MpcHcRemote.ParseCSVFields(result2' result);                      var data = (string[]) result2.ToArray(typeof (string));                      if (data.Length > 6)                      {                          _nowPlaying.MediaType =  "Video";                          _nowPlaying.Title = "Media Player Classic";                          _nowPlaying.Time = new TimeSpan(0' 0' 0' Convert.ToInt32("0" + data[2])/1000);                          _nowPlaying.Duration = new TimeSpan(0' 0' 0' Convert.ToInt32("0" + data[4])/1000);                          var percent = Math.Floor(100.0 * Convert.ToInt32("0" + data[2]' CultureInfo.InvariantCulture) / Convert.ToInt32("0" + data[4]' CultureInfo.InvariantCulture));                          if (Double.IsNaN(percent))                              percent = 0;                          _nowPlaying.Volume = Convert.ToInt32("0" + data[7]' CultureInfo.InvariantCulture);                          _nowPlaying.IsMuted = data[6] == "1";                          _nowPlaying.Progress = (int)percent;                      }                  }                  else                  {                      if (!_parent.IsConnected())                      {                          _nowPlaying.FileName = "";                          _nowPlaying.Title = "";                          return;                      }                        var infos = (JsonObject)_parent.JsonCommand("System.GetInfoLabels"' new[]                                                                                  {                                                                                      "MusicPlayer.Title"'                                                                                      "MusicPlayer.Album"'                                                                                      "MusicPlayer.Artist"'                                                                                      "MusicPlayer.Property(Artist_Description)"'                                                                                      "MusicPlayer.Genre"'                                                                                      "MusicPlayer.Year"'                                                                                      "MusicPlayer.TrackNumber"'                                                                                      "MusicPlayer.Codec"'                                                                                      "Player.Time"'                                                                                      "Player.Duration"'                                                                                      "Player.Volume"'                                                                                      "Player.Filenameandpath"'                                                                                      "VideoPlayer.Title"'                                                                                      "VideoPlayer.TVShowTitle"'                                                                                      "VideoPlayer.Genre"'                                                                                      "VideoPlayer.Director"'                                                                                      "VideoPlayer.Year"'                                                                                      "VideoPlayer.Rating"'                                                                                      "VideoPlayer.Tagline"'                                                                                      "VideoPlayer.Studio"'                                                                                      "VideoPlayer.Plot"'                                                                                      "VideoPlayer.Season"'                                                                                      "VideoPlayer.Episode"'                                                                                      "VideoPlayer.VideoCodec"                                                                                  });                        if (infos == null)                          return;                      JsonObject infos2 = null;                      _nowPlaying.FileName = infos["Player.Filenameandpath"].ToString();                        if (!String.IsNullOrEmpty(infos["VideoPlayer.TVShowTitle"].ToString()))                      {                          _nowPlaying.MediaType = "TvShow";                      }                      else if (!String.IsNullOrEmpty(infos["MusicPlayer.Title"].ToString()))                      {                          _nowPlaying.MediaType = "Audio";                      }                      else if (!String.IsNullOrEmpty(infos["VideoPlayer.Title"].ToString()))                      {                          _nowPlaying.MediaType = "Movie";                      }                      else                      {                          _nowPlaying.MediaType = "Unknown";                          _nowPlaying.Title = "";                          _nowPlaying.IsPlaying = false;                          _nowPlaying.IsPaused = false;                          _nowPlaying.Duration = new TimeSpan();                          _nowPlaying.Time = new TimeSpan();                      }                        if (_nowPlaying.MediaType == "Movie" || _nowPlaying.MediaType == "TvShow")                      {                          infos2 = (JsonObject)_parent.JsonCommand("VideoPlayer.GetTime"' null);                          _nowPlaying.Genre = infos["VideoPlayer.Genre"].ToString();                          _nowPlaying.Title = infos["VideoPlayer.Title"].ToString();                          _nowPlaying.Year = Convert.ToInt32("0" + infos["VideoPlayer.Year"]);                          _nowPlaying.SeasonNumber = Convert.ToInt32("0" + infos["VideoPlayer.Season"]);                          _nowPlaying.EpisodeNumber = Convert.ToInt32("0" + infos["VideoPlayer.Episode"]);                          _nowPlaying.ShowTitle = infos["VideoPlayer.TVShowTitle"].ToString();                          _nowPlaying.Plot = infos["VideoPlayer.Plot"].ToString();                          _nowPlaying.Director = infos["VideoPlayer.Director"].ToString();                          _nowPlaying.Studio = infos["VideoPlayer.Studio"].ToString();                          _nowPlaying.Tagline = infos["VideoPlayer.Tagline"].ToString();                          _nowPlaying.Rating = infos["VideoPlayer.Rating"].ToString();                          if (_nowPlaying.FileName.StartsWith("stack://"' StringComparison.OrdinalIgnoreCase))                          {                              var temp = _nowPlaying.FileName.Split(new[] { " ' " }' StringSplitOptions.None);                              var hash = Xbmc.Hash(temp[0].Replace("stack://"' ""));                              _nowPlaying.ThumbURL = @"special://profile/Thumbnails/Video/" + hash[0] + "/" + hash + ".tbn";                              _nowPlaying.FanartURL = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(_nowPlaying.FileName) + ".tbn";                          }                          else                          {                              var hash = Xbmc.Hash(_nowPlaying.FileName);                              _nowPlaying.ThumbURL = @"special://profile/Thumbnails/Video/" + hash[0] + "/" + hash + ".tbn";                              _nowPlaying.FanartURL = @"special://profile/Thumbnails/Video/Fanart/" + hash + ".tbn";                          }                      }                      if (_nowPlaying.MediaType == "Audio")                      {                          infos2 = (JsonObject)_parent.JsonCommand("AudioPlayer.GetTime"' null);                          _nowPlaying.Genre = infos["MusicPlayer.Genre"].ToString();                          _nowPlaying.Title = infos["MusicPlayer.Title"].ToString();                          _nowPlaying.Year = Convert.ToInt32("0" + infos["MusicPlayer.Year"]);                          _nowPlaying.Track = Convert.ToInt32("0" + infos["MusicPlayer.TrackNumber"]);                          _nowPlaying.Artist = infos["MusicPlayer.Artist"].ToString();                          _nowPlaying.Album = infos["MusicPlayer.Album"].ToString();                          var hash = Xbmc.Hash(_nowPlaying.Album + _nowPlaying.Artist);                          _nowPlaying.ThumbURL = @"special://profile/Thumbnails/Music/" + hash[0] + "/" + hash + ".tbn";                          _nowPlaying.FanartURL = @"special://profile/Thumbnails/Music/Fanart/" + hash + ".tbn";                      }                        if (infos2 != null)                      {                          _nowPlaying.IsPaused = (bool)infos2["paused"];                          _nowPlaying.IsPlaying = !(bool)infos2["paused"] && (bool)infos2["playing"];                          _nowPlaying.Time = new TimeSpan(0' 0' 0' Convert.ToInt32("0" + infos2["time"]));                          _nowPlaying.Duration = new TimeSpan(0' 0' 0' Convert.ToInt32("0" + infos2["total"]));                      }                        var percent = Math.Floor(100.0 * _nowPlaying.Time.TotalSeconds / _nowPlaying.Duration.TotalSeconds);                      if (Double.IsNaN(percent))                          percent = 0;                      _nowPlaying.Progress = (int)percent;                        var vol = (1 - Convert.ToDouble("0" + infos["Player.Volume"].ToString().Replace(" dB"' "").Replace("-"'"").Replace("."'"'"))/60)*100;                        _nowPlaying.Volume = (int)vol;                      _nowPlaying.IsMuted = (vol == 0);                        _parent.MpcLoaded = _nowPlaying.Duration == new TimeSpan(0' 0' 0' 1);                      }              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcPlayer,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.Player.cs,RefreshNowPlaying,The following statement contains a magic number: lock (Locker)              {                  if (_parent.MpcLoaded)                  {                      var result = _parent.MpcHcRemote.GetStatus();                      var result2 = new ArrayList();                      MpcHcRemote.ParseCSVFields(result2' result);                      var data = (string[]) result2.ToArray(typeof (string));                      if (data.Length > 6)                      {                          _nowPlaying.MediaType =  "Video";                          _nowPlaying.Title = "Media Player Classic";                          _nowPlaying.Time = new TimeSpan(0' 0' 0' Convert.ToInt32("0" + data[2])/1000);                          _nowPlaying.Duration = new TimeSpan(0' 0' 0' Convert.ToInt32("0" + data[4])/1000);                          var percent = Math.Floor(100.0 * Convert.ToInt32("0" + data[2]' CultureInfo.InvariantCulture) / Convert.ToInt32("0" + data[4]' CultureInfo.InvariantCulture));                          if (Double.IsNaN(percent))                              percent = 0;                          _nowPlaying.Volume = Convert.ToInt32("0" + data[7]' CultureInfo.InvariantCulture);                          _nowPlaying.IsMuted = data[6] == "1";                          _nowPlaying.Progress = (int)percent;                      }                  }                  else                  {                      if (!_parent.IsConnected())                      {                          _nowPlaying.FileName = "";                          _nowPlaying.Title = "";                          return;                      }                        var infos = (JsonObject)_parent.JsonCommand("System.GetInfoLabels"' new[]                                                                                  {                                                                                      "MusicPlayer.Title"'                                                                                      "MusicPlayer.Album"'                                                                                      "MusicPlayer.Artist"'                                                                                      "MusicPlayer.Property(Artist_Description)"'                                                                                      "MusicPlayer.Genre"'                                                                                      "MusicPlayer.Year"'                                                                                      "MusicPlayer.TrackNumber"'                                                                                      "MusicPlayer.Codec"'                                                                                      "Player.Time"'                                                                                      "Player.Duration"'                                                                                      "Player.Volume"'                                                                                      "Player.Filenameandpath"'                                                                                      "VideoPlayer.Title"'                                                                                      "VideoPlayer.TVShowTitle"'                                                                                      "VideoPlayer.Genre"'                                                                                      "VideoPlayer.Director"'                                                                                      "VideoPlayer.Year"'                                                                                      "VideoPlayer.Rating"'                                                                                      "VideoPlayer.Tagline"'                                                                                      "VideoPlayer.Studio"'                                                                                      "VideoPlayer.Plot"'                                                                                      "VideoPlayer.Season"'                                                                                      "VideoPlayer.Episode"'                                                                                      "VideoPlayer.VideoCodec"                                                                                  });                        if (infos == null)                          return;                      JsonObject infos2 = null;                      _nowPlaying.FileName = infos["Player.Filenameandpath"].ToString();                        if (!String.IsNullOrEmpty(infos["VideoPlayer.TVShowTitle"].ToString()))                      {                          _nowPlaying.MediaType = "TvShow";                      }                      else if (!String.IsNullOrEmpty(infos["MusicPlayer.Title"].ToString()))                      {                          _nowPlaying.MediaType = "Audio";                      }                      else if (!String.IsNullOrEmpty(infos["VideoPlayer.Title"].ToString()))                      {                          _nowPlaying.MediaType = "Movie";                      }                      else                      {                          _nowPlaying.MediaType = "Unknown";                          _nowPlaying.Title = "";                          _nowPlaying.IsPlaying = false;                          _nowPlaying.IsPaused = false;                          _nowPlaying.Duration = new TimeSpan();                          _nowPlaying.Time = new TimeSpan();                      }                        if (_nowPlaying.MediaType == "Movie" || _nowPlaying.MediaType == "TvShow")                      {                          infos2 = (JsonObject)_parent.JsonCommand("VideoPlayer.GetTime"' null);                          _nowPlaying.Genre = infos["VideoPlayer.Genre"].ToString();                          _nowPlaying.Title = infos["VideoPlayer.Title"].ToString();                          _nowPlaying.Year = Convert.ToInt32("0" + infos["VideoPlayer.Year"]);                          _nowPlaying.SeasonNumber = Convert.ToInt32("0" + infos["VideoPlayer.Season"]);                          _nowPlaying.EpisodeNumber = Convert.ToInt32("0" + infos["VideoPlayer.Episode"]);                          _nowPlaying.ShowTitle = infos["VideoPlayer.TVShowTitle"].ToString();                          _nowPlaying.Plot = infos["VideoPlayer.Plot"].ToString();                          _nowPlaying.Director = infos["VideoPlayer.Director"].ToString();                          _nowPlaying.Studio = infos["VideoPlayer.Studio"].ToString();                          _nowPlaying.Tagline = infos["VideoPlayer.Tagline"].ToString();                          _nowPlaying.Rating = infos["VideoPlayer.Rating"].ToString();                          if (_nowPlaying.FileName.StartsWith("stack://"' StringComparison.OrdinalIgnoreCase))                          {                              var temp = _nowPlaying.FileName.Split(new[] { " ' " }' StringSplitOptions.None);                              var hash = Xbmc.Hash(temp[0].Replace("stack://"' ""));                              _nowPlaying.ThumbURL = @"special://profile/Thumbnails/Video/" + hash[0] + "/" + hash + ".tbn";                              _nowPlaying.FanartURL = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(_nowPlaying.FileName) + ".tbn";                          }                          else                          {                              var hash = Xbmc.Hash(_nowPlaying.FileName);                              _nowPlaying.ThumbURL = @"special://profile/Thumbnails/Video/" + hash[0] + "/" + hash + ".tbn";                              _nowPlaying.FanartURL = @"special://profile/Thumbnails/Video/Fanart/" + hash + ".tbn";                          }                      }                      if (_nowPlaying.MediaType == "Audio")                      {                          infos2 = (JsonObject)_parent.JsonCommand("AudioPlayer.GetTime"' null);                          _nowPlaying.Genre = infos["MusicPlayer.Genre"].ToString();                          _nowPlaying.Title = infos["MusicPlayer.Title"].ToString();                          _nowPlaying.Year = Convert.ToInt32("0" + infos["MusicPlayer.Year"]);                          _nowPlaying.Track = Convert.ToInt32("0" + infos["MusicPlayer.TrackNumber"]);                          _nowPlaying.Artist = infos["MusicPlayer.Artist"].ToString();                          _nowPlaying.Album = infos["MusicPlayer.Album"].ToString();                          var hash = Xbmc.Hash(_nowPlaying.Album + _nowPlaying.Artist);                          _nowPlaying.ThumbURL = @"special://profile/Thumbnails/Music/" + hash[0] + "/" + hash + ".tbn";                          _nowPlaying.FanartURL = @"special://profile/Thumbnails/Music/Fanart/" + hash + ".tbn";                      }                        if (infos2 != null)                      {                          _nowPlaying.IsPaused = (bool)infos2["paused"];                          _nowPlaying.IsPlaying = !(bool)infos2["paused"] && (bool)infos2["playing"];                          _nowPlaying.Time = new TimeSpan(0' 0' 0' Convert.ToInt32("0" + infos2["time"]));                          _nowPlaying.Duration = new TimeSpan(0' 0' 0' Convert.ToInt32("0" + infos2["total"]));                      }                        var percent = Math.Floor(100.0 * _nowPlaying.Time.TotalSeconds / _nowPlaying.Duration.TotalSeconds);                      if (Double.IsNaN(percent))                          percent = 0;                      _nowPlaying.Progress = (int)percent;                        var vol = (1 - Convert.ToDouble("0" + infos["Player.Volume"].ToString().Replace(" dB"' "").Replace("-"'"").Replace("."'"'"))/60)*100;                        _nowPlaying.Volume = (int)vol;                      _nowPlaying.IsMuted = (vol == 0);                        _parent.MpcLoaded = _nowPlaying.Duration == new TimeSpan(0' 0' 0' 1);                      }              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcPlayer,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.Player.cs,RefreshNowPlaying,The following statement contains a magic number: lock (Locker)              {                  if (_parent.MpcLoaded)                  {                      var result = _parent.MpcHcRemote.GetStatus();                      var result2 = new ArrayList();                      MpcHcRemote.ParseCSVFields(result2' result);                      var data = (string[]) result2.ToArray(typeof (string));                      if (data.Length > 6)                      {                          _nowPlaying.MediaType =  "Video";                          _nowPlaying.Title = "Media Player Classic";                          _nowPlaying.Time = new TimeSpan(0' 0' 0' Convert.ToInt32("0" + data[2])/1000);                          _nowPlaying.Duration = new TimeSpan(0' 0' 0' Convert.ToInt32("0" + data[4])/1000);                          var percent = Math.Floor(100.0 * Convert.ToInt32("0" + data[2]' CultureInfo.InvariantCulture) / Convert.ToInt32("0" + data[4]' CultureInfo.InvariantCulture));                          if (Double.IsNaN(percent))                              percent = 0;                          _nowPlaying.Volume = Convert.ToInt32("0" + data[7]' CultureInfo.InvariantCulture);                          _nowPlaying.IsMuted = data[6] == "1";                          _nowPlaying.Progress = (int)percent;                      }                  }                  else                  {                      if (!_parent.IsConnected())                      {                          _nowPlaying.FileName = "";                          _nowPlaying.Title = "";                          return;                      }                        var infos = (JsonObject)_parent.JsonCommand("System.GetInfoLabels"' new[]                                                                                  {                                                                                      "MusicPlayer.Title"'                                                                                      "MusicPlayer.Album"'                                                                                      "MusicPlayer.Artist"'                                                                                      "MusicPlayer.Property(Artist_Description)"'                                                                                      "MusicPlayer.Genre"'                                                                                      "MusicPlayer.Year"'                                                                                      "MusicPlayer.TrackNumber"'                                                                                      "MusicPlayer.Codec"'                                                                                      "Player.Time"'                                                                                      "Player.Duration"'                                                                                      "Player.Volume"'                                                                                      "Player.Filenameandpath"'                                                                                      "VideoPlayer.Title"'                                                                                      "VideoPlayer.TVShowTitle"'                                                                                      "VideoPlayer.Genre"'                                                                                      "VideoPlayer.Director"'                                                                                      "VideoPlayer.Year"'                                                                                      "VideoPlayer.Rating"'                                                                                      "VideoPlayer.Tagline"'                                                                                      "VideoPlayer.Studio"'                                                                                      "VideoPlayer.Plot"'                                                                                      "VideoPlayer.Season"'                                                                                      "VideoPlayer.Episode"'                                                                                      "VideoPlayer.VideoCodec"                                                                                  });                        if (infos == null)                          return;                      JsonObject infos2 = null;                      _nowPlaying.FileName = infos["Player.Filenameandpath"].ToString();                        if (!String.IsNullOrEmpty(infos["VideoPlayer.TVShowTitle"].ToString()))                      {                          _nowPlaying.MediaType = "TvShow";                      }                      else if (!String.IsNullOrEmpty(infos["MusicPlayer.Title"].ToString()))                      {                          _nowPlaying.MediaType = "Audio";                      }                      else if (!String.IsNullOrEmpty(infos["VideoPlayer.Title"].ToString()))                      {                          _nowPlaying.MediaType = "Movie";                      }                      else                      {                          _nowPlaying.MediaType = "Unknown";                          _nowPlaying.Title = "";                          _nowPlaying.IsPlaying = false;                          _nowPlaying.IsPaused = false;                          _nowPlaying.Duration = new TimeSpan();                          _nowPlaying.Time = new TimeSpan();                      }                        if (_nowPlaying.MediaType == "Movie" || _nowPlaying.MediaType == "TvShow")                      {                          infos2 = (JsonObject)_parent.JsonCommand("VideoPlayer.GetTime"' null);                          _nowPlaying.Genre = infos["VideoPlayer.Genre"].ToString();                          _nowPlaying.Title = infos["VideoPlayer.Title"].ToString();                          _nowPlaying.Year = Convert.ToInt32("0" + infos["VideoPlayer.Year"]);                          _nowPlaying.SeasonNumber = Convert.ToInt32("0" + infos["VideoPlayer.Season"]);                          _nowPlaying.EpisodeNumber = Convert.ToInt32("0" + infos["VideoPlayer.Episode"]);                          _nowPlaying.ShowTitle = infos["VideoPlayer.TVShowTitle"].ToString();                          _nowPlaying.Plot = infos["VideoPlayer.Plot"].ToString();                          _nowPlaying.Director = infos["VideoPlayer.Director"].ToString();                          _nowPlaying.Studio = infos["VideoPlayer.Studio"].ToString();                          _nowPlaying.Tagline = infos["VideoPlayer.Tagline"].ToString();                          _nowPlaying.Rating = infos["VideoPlayer.Rating"].ToString();                          if (_nowPlaying.FileName.StartsWith("stack://"' StringComparison.OrdinalIgnoreCase))                          {                              var temp = _nowPlaying.FileName.Split(new[] { " ' " }' StringSplitOptions.None);                              var hash = Xbmc.Hash(temp[0].Replace("stack://"' ""));                              _nowPlaying.ThumbURL = @"special://profile/Thumbnails/Video/" + hash[0] + "/" + hash + ".tbn";                              _nowPlaying.FanartURL = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(_nowPlaying.FileName) + ".tbn";                          }                          else                          {                              var hash = Xbmc.Hash(_nowPlaying.FileName);                              _nowPlaying.ThumbURL = @"special://profile/Thumbnails/Video/" + hash[0] + "/" + hash + ".tbn";                              _nowPlaying.FanartURL = @"special://profile/Thumbnails/Video/Fanart/" + hash + ".tbn";                          }                      }                      if (_nowPlaying.MediaType == "Audio")                      {                          infos2 = (JsonObject)_parent.JsonCommand("AudioPlayer.GetTime"' null);                          _nowPlaying.Genre = infos["MusicPlayer.Genre"].ToString();                          _nowPlaying.Title = infos["MusicPlayer.Title"].ToString();                          _nowPlaying.Year = Convert.ToInt32("0" + infos["MusicPlayer.Year"]);                          _nowPlaying.Track = Convert.ToInt32("0" + infos["MusicPlayer.TrackNumber"]);                          _nowPlaying.Artist = infos["MusicPlayer.Artist"].ToString();                          _nowPlaying.Album = infos["MusicPlayer.Album"].ToString();                          var hash = Xbmc.Hash(_nowPlaying.Album + _nowPlaying.Artist);                          _nowPlaying.ThumbURL = @"special://profile/Thumbnails/Music/" + hash[0] + "/" + hash + ".tbn";                          _nowPlaying.FanartURL = @"special://profile/Thumbnails/Music/Fanart/" + hash + ".tbn";                      }                        if (infos2 != null)                      {                          _nowPlaying.IsPaused = (bool)infos2["paused"];                          _nowPlaying.IsPlaying = !(bool)infos2["paused"] && (bool)infos2["playing"];                          _nowPlaying.Time = new TimeSpan(0' 0' 0' Convert.ToInt32("0" + infos2["time"]));                          _nowPlaying.Duration = new TimeSpan(0' 0' 0' Convert.ToInt32("0" + infos2["total"]));                      }                        var percent = Math.Floor(100.0 * _nowPlaying.Time.TotalSeconds / _nowPlaying.Duration.TotalSeconds);                      if (Double.IsNaN(percent))                          percent = 0;                      _nowPlaying.Progress = (int)percent;                        var vol = (1 - Convert.ToDouble("0" + infos["Player.Volume"].ToString().Replace(" dB"' "").Replace("-"'"").Replace("."'"'"))/60)*100;                        _nowPlaying.Volume = (int)vol;                      _nowPlaying.IsMuted = (vol == 0);                        _parent.MpcLoaded = _nowPlaying.Duration == new TimeSpan(0' 0' 0' 1);                      }              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcPlayer,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.Player.cs,RefreshNowPlaying,The following statement contains a magic number: lock (Locker)              {                  if (_parent.MpcLoaded)                  {                      var result = _parent.MpcHcRemote.GetStatus();                      var result2 = new ArrayList();                      MpcHcRemote.ParseCSVFields(result2' result);                      var data = (string[]) result2.ToArray(typeof (string));                      if (data.Length > 6)                      {                          _nowPlaying.MediaType =  "Video";                          _nowPlaying.Title = "Media Player Classic";                          _nowPlaying.Time = new TimeSpan(0' 0' 0' Convert.ToInt32("0" + data[2])/1000);                          _nowPlaying.Duration = new TimeSpan(0' 0' 0' Convert.ToInt32("0" + data[4])/1000);                          var percent = Math.Floor(100.0 * Convert.ToInt32("0" + data[2]' CultureInfo.InvariantCulture) / Convert.ToInt32("0" + data[4]' CultureInfo.InvariantCulture));                          if (Double.IsNaN(percent))                              percent = 0;                          _nowPlaying.Volume = Convert.ToInt32("0" + data[7]' CultureInfo.InvariantCulture);                          _nowPlaying.IsMuted = data[6] == "1";                          _nowPlaying.Progress = (int)percent;                      }                  }                  else                  {                      if (!_parent.IsConnected())                      {                          _nowPlaying.FileName = "";                          _nowPlaying.Title = "";                          return;                      }                        var infos = (JsonObject)_parent.JsonCommand("System.GetInfoLabels"' new[]                                                                                  {                                                                                      "MusicPlayer.Title"'                                                                                      "MusicPlayer.Album"'                                                                                      "MusicPlayer.Artist"'                                                                                      "MusicPlayer.Property(Artist_Description)"'                                                                                      "MusicPlayer.Genre"'                                                                                      "MusicPlayer.Year"'                                                                                      "MusicPlayer.TrackNumber"'                                                                                      "MusicPlayer.Codec"'                                                                                      "Player.Time"'                                                                                      "Player.Duration"'                                                                                      "Player.Volume"'                                                                                      "Player.Filenameandpath"'                                                                                      "VideoPlayer.Title"'                                                                                      "VideoPlayer.TVShowTitle"'                                                                                      "VideoPlayer.Genre"'                                                                                      "VideoPlayer.Director"'                                                                                      "VideoPlayer.Year"'                                                                                      "VideoPlayer.Rating"'                                                                                      "VideoPlayer.Tagline"'                                                                                      "VideoPlayer.Studio"'                                                                                      "VideoPlayer.Plot"'                                                                                      "VideoPlayer.Season"'                                                                                      "VideoPlayer.Episode"'                                                                                      "VideoPlayer.VideoCodec"                                                                                  });                        if (infos == null)                          return;                      JsonObject infos2 = null;                      _nowPlaying.FileName = infos["Player.Filenameandpath"].ToString();                        if (!String.IsNullOrEmpty(infos["VideoPlayer.TVShowTitle"].ToString()))                      {                          _nowPlaying.MediaType = "TvShow";                      }                      else if (!String.IsNullOrEmpty(infos["MusicPlayer.Title"].ToString()))                      {                          _nowPlaying.MediaType = "Audio";                      }                      else if (!String.IsNullOrEmpty(infos["VideoPlayer.Title"].ToString()))                      {                          _nowPlaying.MediaType = "Movie";                      }                      else                      {                          _nowPlaying.MediaType = "Unknown";                          _nowPlaying.Title = "";                          _nowPlaying.IsPlaying = false;                          _nowPlaying.IsPaused = false;                          _nowPlaying.Duration = new TimeSpan();                          _nowPlaying.Time = new TimeSpan();                      }                        if (_nowPlaying.MediaType == "Movie" || _nowPlaying.MediaType == "TvShow")                      {                          infos2 = (JsonObject)_parent.JsonCommand("VideoPlayer.GetTime"' null);                          _nowPlaying.Genre = infos["VideoPlayer.Genre"].ToString();                          _nowPlaying.Title = infos["VideoPlayer.Title"].ToString();                          _nowPlaying.Year = Convert.ToInt32("0" + infos["VideoPlayer.Year"]);                          _nowPlaying.SeasonNumber = Convert.ToInt32("0" + infos["VideoPlayer.Season"]);                          _nowPlaying.EpisodeNumber = Convert.ToInt32("0" + infos["VideoPlayer.Episode"]);                          _nowPlaying.ShowTitle = infos["VideoPlayer.TVShowTitle"].ToString();                          _nowPlaying.Plot = infos["VideoPlayer.Plot"].ToString();                          _nowPlaying.Director = infos["VideoPlayer.Director"].ToString();                          _nowPlaying.Studio = infos["VideoPlayer.Studio"].ToString();                          _nowPlaying.Tagline = infos["VideoPlayer.Tagline"].ToString();                          _nowPlaying.Rating = infos["VideoPlayer.Rating"].ToString();                          if (_nowPlaying.FileName.StartsWith("stack://"' StringComparison.OrdinalIgnoreCase))                          {                              var temp = _nowPlaying.FileName.Split(new[] { " ' " }' StringSplitOptions.None);                              var hash = Xbmc.Hash(temp[0].Replace("stack://"' ""));                              _nowPlaying.ThumbURL = @"special://profile/Thumbnails/Video/" + hash[0] + "/" + hash + ".tbn";                              _nowPlaying.FanartURL = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(_nowPlaying.FileName) + ".tbn";                          }                          else                          {                              var hash = Xbmc.Hash(_nowPlaying.FileName);                              _nowPlaying.ThumbURL = @"special://profile/Thumbnails/Video/" + hash[0] + "/" + hash + ".tbn";                              _nowPlaying.FanartURL = @"special://profile/Thumbnails/Video/Fanart/" + hash + ".tbn";                          }                      }                      if (_nowPlaying.MediaType == "Audio")                      {                          infos2 = (JsonObject)_parent.JsonCommand("AudioPlayer.GetTime"' null);                          _nowPlaying.Genre = infos["MusicPlayer.Genre"].ToString();                          _nowPlaying.Title = infos["MusicPlayer.Title"].ToString();                          _nowPlaying.Year = Convert.ToInt32("0" + infos["MusicPlayer.Year"]);                          _nowPlaying.Track = Convert.ToInt32("0" + infos["MusicPlayer.TrackNumber"]);                          _nowPlaying.Artist = infos["MusicPlayer.Artist"].ToString();                          _nowPlaying.Album = infos["MusicPlayer.Album"].ToString();                          var hash = Xbmc.Hash(_nowPlaying.Album + _nowPlaying.Artist);                          _nowPlaying.ThumbURL = @"special://profile/Thumbnails/Music/" + hash[0] + "/" + hash + ".tbn";                          _nowPlaying.FanartURL = @"special://profile/Thumbnails/Music/Fanart/" + hash + ".tbn";                      }                        if (infos2 != null)                      {                          _nowPlaying.IsPaused = (bool)infos2["paused"];                          _nowPlaying.IsPlaying = !(bool)infos2["paused"] && (bool)infos2["playing"];                          _nowPlaying.Time = new TimeSpan(0' 0' 0' Convert.ToInt32("0" + infos2["time"]));                          _nowPlaying.Duration = new TimeSpan(0' 0' 0' Convert.ToInt32("0" + infos2["total"]));                      }                        var percent = Math.Floor(100.0 * _nowPlaying.Time.TotalSeconds / _nowPlaying.Duration.TotalSeconds);                      if (Double.IsNaN(percent))                          percent = 0;                      _nowPlaying.Progress = (int)percent;                        var vol = (1 - Convert.ToDouble("0" + infos["Player.Volume"].ToString().Replace(" dB"' "").Replace("-"'"").Replace("."'"'"))/60)*100;                        _nowPlaying.Volume = (int)vol;                      _nowPlaying.IsMuted = (vol == 0);                        _parent.MpcLoaded = _nowPlaying.Duration == new TimeSpan(0' 0' 0' 1);                      }              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcPlayer,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.Player.cs,RefreshNowPlaying,The following statement contains a magic number: lock (Locker)              {                  if (_parent.MpcLoaded)                  {                      var result = _parent.MpcHcRemote.GetStatus();                      var result2 = new ArrayList();                      MpcHcRemote.ParseCSVFields(result2' result);                      var data = (string[]) result2.ToArray(typeof (string));                      if (data.Length > 6)                      {                          _nowPlaying.MediaType =  "Video";                          _nowPlaying.Title = "Media Player Classic";                          _nowPlaying.Time = new TimeSpan(0' 0' 0' Convert.ToInt32("0" + data[2])/1000);                          _nowPlaying.Duration = new TimeSpan(0' 0' 0' Convert.ToInt32("0" + data[4])/1000);                          var percent = Math.Floor(100.0 * Convert.ToInt32("0" + data[2]' CultureInfo.InvariantCulture) / Convert.ToInt32("0" + data[4]' CultureInfo.InvariantCulture));                          if (Double.IsNaN(percent))                              percent = 0;                          _nowPlaying.Volume = Convert.ToInt32("0" + data[7]' CultureInfo.InvariantCulture);                          _nowPlaying.IsMuted = data[6] == "1";                          _nowPlaying.Progress = (int)percent;                      }                  }                  else                  {                      if (!_parent.IsConnected())                      {                          _nowPlaying.FileName = "";                          _nowPlaying.Title = "";                          return;                      }                        var infos = (JsonObject)_parent.JsonCommand("System.GetInfoLabels"' new[]                                                                                  {                                                                                      "MusicPlayer.Title"'                                                                                      "MusicPlayer.Album"'                                                                                      "MusicPlayer.Artist"'                                                                                      "MusicPlayer.Property(Artist_Description)"'                                                                                      "MusicPlayer.Genre"'                                                                                      "MusicPlayer.Year"'                                                                                      "MusicPlayer.TrackNumber"'                                                                                      "MusicPlayer.Codec"'                                                                                      "Player.Time"'                                                                                      "Player.Duration"'                                                                                      "Player.Volume"'                                                                                      "Player.Filenameandpath"'                                                                                      "VideoPlayer.Title"'                                                                                      "VideoPlayer.TVShowTitle"'                                                                                      "VideoPlayer.Genre"'                                                                                      "VideoPlayer.Director"'                                                                                      "VideoPlayer.Year"'                                                                                      "VideoPlayer.Rating"'                                                                                      "VideoPlayer.Tagline"'                                                                                      "VideoPlayer.Studio"'                                                                                      "VideoPlayer.Plot"'                                                                                      "VideoPlayer.Season"'                                                                                      "VideoPlayer.Episode"'                                                                                      "VideoPlayer.VideoCodec"                                                                                  });                        if (infos == null)                          return;                      JsonObject infos2 = null;                      _nowPlaying.FileName = infos["Player.Filenameandpath"].ToString();                        if (!String.IsNullOrEmpty(infos["VideoPlayer.TVShowTitle"].ToString()))                      {                          _nowPlaying.MediaType = "TvShow";                      }                      else if (!String.IsNullOrEmpty(infos["MusicPlayer.Title"].ToString()))                      {                          _nowPlaying.MediaType = "Audio";                      }                      else if (!String.IsNullOrEmpty(infos["VideoPlayer.Title"].ToString()))                      {                          _nowPlaying.MediaType = "Movie";                      }                      else                      {                          _nowPlaying.MediaType = "Unknown";                          _nowPlaying.Title = "";                          _nowPlaying.IsPlaying = false;                          _nowPlaying.IsPaused = false;                          _nowPlaying.Duration = new TimeSpan();                          _nowPlaying.Time = new TimeSpan();                      }                        if (_nowPlaying.MediaType == "Movie" || _nowPlaying.MediaType == "TvShow")                      {                          infos2 = (JsonObject)_parent.JsonCommand("VideoPlayer.GetTime"' null);                          _nowPlaying.Genre = infos["VideoPlayer.Genre"].ToString();                          _nowPlaying.Title = infos["VideoPlayer.Title"].ToString();                          _nowPlaying.Year = Convert.ToInt32("0" + infos["VideoPlayer.Year"]);                          _nowPlaying.SeasonNumber = Convert.ToInt32("0" + infos["VideoPlayer.Season"]);                          _nowPlaying.EpisodeNumber = Convert.ToInt32("0" + infos["VideoPlayer.Episode"]);                          _nowPlaying.ShowTitle = infos["VideoPlayer.TVShowTitle"].ToString();                          _nowPlaying.Plot = infos["VideoPlayer.Plot"].ToString();                          _nowPlaying.Director = infos["VideoPlayer.Director"].ToString();                          _nowPlaying.Studio = infos["VideoPlayer.Studio"].ToString();                          _nowPlaying.Tagline = infos["VideoPlayer.Tagline"].ToString();                          _nowPlaying.Rating = infos["VideoPlayer.Rating"].ToString();                          if (_nowPlaying.FileName.StartsWith("stack://"' StringComparison.OrdinalIgnoreCase))                          {                              var temp = _nowPlaying.FileName.Split(new[] { " ' " }' StringSplitOptions.None);                              var hash = Xbmc.Hash(temp[0].Replace("stack://"' ""));                              _nowPlaying.ThumbURL = @"special://profile/Thumbnails/Video/" + hash[0] + "/" + hash + ".tbn";                              _nowPlaying.FanartURL = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(_nowPlaying.FileName) + ".tbn";                          }                          else                          {                              var hash = Xbmc.Hash(_nowPlaying.FileName);                              _nowPlaying.ThumbURL = @"special://profile/Thumbnails/Video/" + hash[0] + "/" + hash + ".tbn";                              _nowPlaying.FanartURL = @"special://profile/Thumbnails/Video/Fanart/" + hash + ".tbn";                          }                      }                      if (_nowPlaying.MediaType == "Audio")                      {                          infos2 = (JsonObject)_parent.JsonCommand("AudioPlayer.GetTime"' null);                          _nowPlaying.Genre = infos["MusicPlayer.Genre"].ToString();                          _nowPlaying.Title = infos["MusicPlayer.Title"].ToString();                          _nowPlaying.Year = Convert.ToInt32("0" + infos["MusicPlayer.Year"]);                          _nowPlaying.Track = Convert.ToInt32("0" + infos["MusicPlayer.TrackNumber"]);                          _nowPlaying.Artist = infos["MusicPlayer.Artist"].ToString();                          _nowPlaying.Album = infos["MusicPlayer.Album"].ToString();                          var hash = Xbmc.Hash(_nowPlaying.Album + _nowPlaying.Artist);                          _nowPlaying.ThumbURL = @"special://profile/Thumbnails/Music/" + hash[0] + "/" + hash + ".tbn";                          _nowPlaying.FanartURL = @"special://profile/Thumbnails/Music/Fanart/" + hash + ".tbn";                      }                        if (infos2 != null)                      {                          _nowPlaying.IsPaused = (bool)infos2["paused"];                          _nowPlaying.IsPlaying = !(bool)infos2["paused"] && (bool)infos2["playing"];                          _nowPlaying.Time = new TimeSpan(0' 0' 0' Convert.ToInt32("0" + infos2["time"]));                          _nowPlaying.Duration = new TimeSpan(0' 0' 0' Convert.ToInt32("0" + infos2["total"]));                      }                        var percent = Math.Floor(100.0 * _nowPlaying.Time.TotalSeconds / _nowPlaying.Duration.TotalSeconds);                      if (Double.IsNaN(percent))                          percent = 0;                      _nowPlaying.Progress = (int)percent;                        var vol = (1 - Convert.ToDouble("0" + infos["Player.Volume"].ToString().Replace(" dB"' "").Replace("-"'"").Replace("."'"'"))/60)*100;                        _nowPlaying.Volume = (int)vol;                      _nowPlaying.IsMuted = (vol == 0);                        _parent.MpcLoaded = _nowPlaying.Duration == new TimeSpan(0' 0' 0' 1);                      }              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcPlayer,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.Player.cs,RefreshNowPlaying,The following statement contains a magic number: lock (Locker)              {                  if (_parent.MpcLoaded)                  {                      var result = _parent.MpcHcRemote.GetStatus();                      var result2 = new ArrayList();                      MpcHcRemote.ParseCSVFields(result2' result);                      var data = (string[]) result2.ToArray(typeof (string));                      if (data.Length > 6)                      {                          _nowPlaying.MediaType =  "Video";                          _nowPlaying.Title = "Media Player Classic";                          _nowPlaying.Time = new TimeSpan(0' 0' 0' Convert.ToInt32("0" + data[2])/1000);                          _nowPlaying.Duration = new TimeSpan(0' 0' 0' Convert.ToInt32("0" + data[4])/1000);                          var percent = Math.Floor(100.0 * Convert.ToInt32("0" + data[2]' CultureInfo.InvariantCulture) / Convert.ToInt32("0" + data[4]' CultureInfo.InvariantCulture));                          if (Double.IsNaN(percent))                              percent = 0;                          _nowPlaying.Volume = Convert.ToInt32("0" + data[7]' CultureInfo.InvariantCulture);                          _nowPlaying.IsMuted = data[6] == "1";                          _nowPlaying.Progress = (int)percent;                      }                  }                  else                  {                      if (!_parent.IsConnected())                      {                          _nowPlaying.FileName = "";                          _nowPlaying.Title = "";                          return;                      }                        var infos = (JsonObject)_parent.JsonCommand("System.GetInfoLabels"' new[]                                                                                  {                                                                                      "MusicPlayer.Title"'                                                                                      "MusicPlayer.Album"'                                                                                      "MusicPlayer.Artist"'                                                                                      "MusicPlayer.Property(Artist_Description)"'                                                                                      "MusicPlayer.Genre"'                                                                                      "MusicPlayer.Year"'                                                                                      "MusicPlayer.TrackNumber"'                                                                                      "MusicPlayer.Codec"'                                                                                      "Player.Time"'                                                                                      "Player.Duration"'                                                                                      "Player.Volume"'                                                                                      "Player.Filenameandpath"'                                                                                      "VideoPlayer.Title"'                                                                                      "VideoPlayer.TVShowTitle"'                                                                                      "VideoPlayer.Genre"'                                                                                      "VideoPlayer.Director"'                                                                                      "VideoPlayer.Year"'                                                                                      "VideoPlayer.Rating"'                                                                                      "VideoPlayer.Tagline"'                                                                                      "VideoPlayer.Studio"'                                                                                      "VideoPlayer.Plot"'                                                                                      "VideoPlayer.Season"'                                                                                      "VideoPlayer.Episode"'                                                                                      "VideoPlayer.VideoCodec"                                                                                  });                        if (infos == null)                          return;                      JsonObject infos2 = null;                      _nowPlaying.FileName = infos["Player.Filenameandpath"].ToString();                        if (!String.IsNullOrEmpty(infos["VideoPlayer.TVShowTitle"].ToString()))                      {                          _nowPlaying.MediaType = "TvShow";                      }                      else if (!String.IsNullOrEmpty(infos["MusicPlayer.Title"].ToString()))                      {                          _nowPlaying.MediaType = "Audio";                      }                      else if (!String.IsNullOrEmpty(infos["VideoPlayer.Title"].ToString()))                      {                          _nowPlaying.MediaType = "Movie";                      }                      else                      {                          _nowPlaying.MediaType = "Unknown";                          _nowPlaying.Title = "";                          _nowPlaying.IsPlaying = false;                          _nowPlaying.IsPaused = false;                          _nowPlaying.Duration = new TimeSpan();                          _nowPlaying.Time = new TimeSpan();                      }                        if (_nowPlaying.MediaType == "Movie" || _nowPlaying.MediaType == "TvShow")                      {                          infos2 = (JsonObject)_parent.JsonCommand("VideoPlayer.GetTime"' null);                          _nowPlaying.Genre = infos["VideoPlayer.Genre"].ToString();                          _nowPlaying.Title = infos["VideoPlayer.Title"].ToString();                          _nowPlaying.Year = Convert.ToInt32("0" + infos["VideoPlayer.Year"]);                          _nowPlaying.SeasonNumber = Convert.ToInt32("0" + infos["VideoPlayer.Season"]);                          _nowPlaying.EpisodeNumber = Convert.ToInt32("0" + infos["VideoPlayer.Episode"]);                          _nowPlaying.ShowTitle = infos["VideoPlayer.TVShowTitle"].ToString();                          _nowPlaying.Plot = infos["VideoPlayer.Plot"].ToString();                          _nowPlaying.Director = infos["VideoPlayer.Director"].ToString();                          _nowPlaying.Studio = infos["VideoPlayer.Studio"].ToString();                          _nowPlaying.Tagline = infos["VideoPlayer.Tagline"].ToString();                          _nowPlaying.Rating = infos["VideoPlayer.Rating"].ToString();                          if (_nowPlaying.FileName.StartsWith("stack://"' StringComparison.OrdinalIgnoreCase))                          {                              var temp = _nowPlaying.FileName.Split(new[] { " ' " }' StringSplitOptions.None);                              var hash = Xbmc.Hash(temp[0].Replace("stack://"' ""));                              _nowPlaying.ThumbURL = @"special://profile/Thumbnails/Video/" + hash[0] + "/" + hash + ".tbn";                              _nowPlaying.FanartURL = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(_nowPlaying.FileName) + ".tbn";                          }                          else                          {                              var hash = Xbmc.Hash(_nowPlaying.FileName);                              _nowPlaying.ThumbURL = @"special://profile/Thumbnails/Video/" + hash[0] + "/" + hash + ".tbn";                              _nowPlaying.FanartURL = @"special://profile/Thumbnails/Video/Fanart/" + hash + ".tbn";                          }                      }                      if (_nowPlaying.MediaType == "Audio")                      {                          infos2 = (JsonObject)_parent.JsonCommand("AudioPlayer.GetTime"' null);                          _nowPlaying.Genre = infos["MusicPlayer.Genre"].ToString();                          _nowPlaying.Title = infos["MusicPlayer.Title"].ToString();                          _nowPlaying.Year = Convert.ToInt32("0" + infos["MusicPlayer.Year"]);                          _nowPlaying.Track = Convert.ToInt32("0" + infos["MusicPlayer.TrackNumber"]);                          _nowPlaying.Artist = infos["MusicPlayer.Artist"].ToString();                          _nowPlaying.Album = infos["MusicPlayer.Album"].ToString();                          var hash = Xbmc.Hash(_nowPlaying.Album + _nowPlaying.Artist);                          _nowPlaying.ThumbURL = @"special://profile/Thumbnails/Music/" + hash[0] + "/" + hash + ".tbn";                          _nowPlaying.FanartURL = @"special://profile/Thumbnails/Music/Fanart/" + hash + ".tbn";                      }                        if (infos2 != null)                      {                          _nowPlaying.IsPaused = (bool)infos2["paused"];                          _nowPlaying.IsPlaying = !(bool)infos2["paused"] && (bool)infos2["playing"];                          _nowPlaying.Time = new TimeSpan(0' 0' 0' Convert.ToInt32("0" + infos2["time"]));                          _nowPlaying.Duration = new TimeSpan(0' 0' 0' Convert.ToInt32("0" + infos2["total"]));                      }                        var percent = Math.Floor(100.0 * _nowPlaying.Time.TotalSeconds / _nowPlaying.Duration.TotalSeconds);                      if (Double.IsNaN(percent))                          percent = 0;                      _nowPlaying.Progress = (int)percent;                        var vol = (1 - Convert.ToDouble("0" + infos["Player.Volume"].ToString().Replace(" dB"' "").Replace("-"'"").Replace("."'"'"))/60)*100;                        _nowPlaying.Volume = (int)vol;                      _nowPlaying.IsMuted = (vol == 0);                        _parent.MpcLoaded = _nowPlaying.Duration == new TimeSpan(0' 0' 0' 1);                      }              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcPlayer,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.Player.cs,RefreshNowPlaying,The following statement contains a magic number: lock (Locker)              {                  if (_parent.MpcLoaded)                  {                      var result = _parent.MpcHcRemote.GetStatus();                      var result2 = new ArrayList();                      MpcHcRemote.ParseCSVFields(result2' result);                      var data = (string[]) result2.ToArray(typeof (string));                      if (data.Length > 6)                      {                          _nowPlaying.MediaType =  "Video";                          _nowPlaying.Title = "Media Player Classic";                          _nowPlaying.Time = new TimeSpan(0' 0' 0' Convert.ToInt32("0" + data[2])/1000);                          _nowPlaying.Duration = new TimeSpan(0' 0' 0' Convert.ToInt32("0" + data[4])/1000);                          var percent = Math.Floor(100.0 * Convert.ToInt32("0" + data[2]' CultureInfo.InvariantCulture) / Convert.ToInt32("0" + data[4]' CultureInfo.InvariantCulture));                          if (Double.IsNaN(percent))                              percent = 0;                          _nowPlaying.Volume = Convert.ToInt32("0" + data[7]' CultureInfo.InvariantCulture);                          _nowPlaying.IsMuted = data[6] == "1";                          _nowPlaying.Progress = (int)percent;                      }                  }                  else                  {                      if (!_parent.IsConnected())                      {                          _nowPlaying.FileName = "";                          _nowPlaying.Title = "";                          return;                      }                        var infos = (JsonObject)_parent.JsonCommand("System.GetInfoLabels"' new[]                                                                                  {                                                                                      "MusicPlayer.Title"'                                                                                      "MusicPlayer.Album"'                                                                                      "MusicPlayer.Artist"'                                                                                      "MusicPlayer.Property(Artist_Description)"'                                                                                      "MusicPlayer.Genre"'                                                                                      "MusicPlayer.Year"'                                                                                      "MusicPlayer.TrackNumber"'                                                                                      "MusicPlayer.Codec"'                                                                                      "Player.Time"'                                                                                      "Player.Duration"'                                                                                      "Player.Volume"'                                                                                      "Player.Filenameandpath"'                                                                                      "VideoPlayer.Title"'                                                                                      "VideoPlayer.TVShowTitle"'                                                                                      "VideoPlayer.Genre"'                                                                                      "VideoPlayer.Director"'                                                                                      "VideoPlayer.Year"'                                                                                      "VideoPlayer.Rating"'                                                                                      "VideoPlayer.Tagline"'                                                                                      "VideoPlayer.Studio"'                                                                                      "VideoPlayer.Plot"'                                                                                      "VideoPlayer.Season"'                                                                                      "VideoPlayer.Episode"'                                                                                      "VideoPlayer.VideoCodec"                                                                                  });                        if (infos == null)                          return;                      JsonObject infos2 = null;                      _nowPlaying.FileName = infos["Player.Filenameandpath"].ToString();                        if (!String.IsNullOrEmpty(infos["VideoPlayer.TVShowTitle"].ToString()))                      {                          _nowPlaying.MediaType = "TvShow";                      }                      else if (!String.IsNullOrEmpty(infos["MusicPlayer.Title"].ToString()))                      {                          _nowPlaying.MediaType = "Audio";                      }                      else if (!String.IsNullOrEmpty(infos["VideoPlayer.Title"].ToString()))                      {                          _nowPlaying.MediaType = "Movie";                      }                      else                      {                          _nowPlaying.MediaType = "Unknown";                          _nowPlaying.Title = "";                          _nowPlaying.IsPlaying = false;                          _nowPlaying.IsPaused = false;                          _nowPlaying.Duration = new TimeSpan();                          _nowPlaying.Time = new TimeSpan();                      }                        if (_nowPlaying.MediaType == "Movie" || _nowPlaying.MediaType == "TvShow")                      {                          infos2 = (JsonObject)_parent.JsonCommand("VideoPlayer.GetTime"' null);                          _nowPlaying.Genre = infos["VideoPlayer.Genre"].ToString();                          _nowPlaying.Title = infos["VideoPlayer.Title"].ToString();                          _nowPlaying.Year = Convert.ToInt32("0" + infos["VideoPlayer.Year"]);                          _nowPlaying.SeasonNumber = Convert.ToInt32("0" + infos["VideoPlayer.Season"]);                          _nowPlaying.EpisodeNumber = Convert.ToInt32("0" + infos["VideoPlayer.Episode"]);                          _nowPlaying.ShowTitle = infos["VideoPlayer.TVShowTitle"].ToString();                          _nowPlaying.Plot = infos["VideoPlayer.Plot"].ToString();                          _nowPlaying.Director = infos["VideoPlayer.Director"].ToString();                          _nowPlaying.Studio = infos["VideoPlayer.Studio"].ToString();                          _nowPlaying.Tagline = infos["VideoPlayer.Tagline"].ToString();                          _nowPlaying.Rating = infos["VideoPlayer.Rating"].ToString();                          if (_nowPlaying.FileName.StartsWith("stack://"' StringComparison.OrdinalIgnoreCase))                          {                              var temp = _nowPlaying.FileName.Split(new[] { " ' " }' StringSplitOptions.None);                              var hash = Xbmc.Hash(temp[0].Replace("stack://"' ""));                              _nowPlaying.ThumbURL = @"special://profile/Thumbnails/Video/" + hash[0] + "/" + hash + ".tbn";                              _nowPlaying.FanartURL = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(_nowPlaying.FileName) + ".tbn";                          }                          else                          {                              var hash = Xbmc.Hash(_nowPlaying.FileName);                              _nowPlaying.ThumbURL = @"special://profile/Thumbnails/Video/" + hash[0] + "/" + hash + ".tbn";                              _nowPlaying.FanartURL = @"special://profile/Thumbnails/Video/Fanart/" + hash + ".tbn";                          }                      }                      if (_nowPlaying.MediaType == "Audio")                      {                          infos2 = (JsonObject)_parent.JsonCommand("AudioPlayer.GetTime"' null);                          _nowPlaying.Genre = infos["MusicPlayer.Genre"].ToString();                          _nowPlaying.Title = infos["MusicPlayer.Title"].ToString();                          _nowPlaying.Year = Convert.ToInt32("0" + infos["MusicPlayer.Year"]);                          _nowPlaying.Track = Convert.ToInt32("0" + infos["MusicPlayer.TrackNumber"]);                          _nowPlaying.Artist = infos["MusicPlayer.Artist"].ToString();                          _nowPlaying.Album = infos["MusicPlayer.Album"].ToString();                          var hash = Xbmc.Hash(_nowPlaying.Album + _nowPlaying.Artist);                          _nowPlaying.ThumbURL = @"special://profile/Thumbnails/Music/" + hash[0] + "/" + hash + ".tbn";                          _nowPlaying.FanartURL = @"special://profile/Thumbnails/Music/Fanart/" + hash + ".tbn";                      }                        if (infos2 != null)                      {                          _nowPlaying.IsPaused = (bool)infos2["paused"];                          _nowPlaying.IsPlaying = !(bool)infos2["paused"] && (bool)infos2["playing"];                          _nowPlaying.Time = new TimeSpan(0' 0' 0' Convert.ToInt32("0" + infos2["time"]));                          _nowPlaying.Duration = new TimeSpan(0' 0' 0' Convert.ToInt32("0" + infos2["total"]));                      }                        var percent = Math.Floor(100.0 * _nowPlaying.Time.TotalSeconds / _nowPlaying.Duration.TotalSeconds);                      if (Double.IsNaN(percent))                          percent = 0;                      _nowPlaying.Progress = (int)percent;                        var vol = (1 - Convert.ToDouble("0" + infos["Player.Volume"].ToString().Replace(" dB"' "").Replace("-"'"").Replace("."'"'"))/60)*100;                        _nowPlaying.Volume = (int)vol;                      _nowPlaying.IsMuted = (vol == 0);                        _parent.MpcLoaded = _nowPlaying.Duration == new TimeSpan(0' 0' 0' 1);                      }              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcPlayer,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.Player.cs,RefreshNowPlaying,The following statement contains a magic number: lock (Locker)              {                  if (_parent.MpcLoaded)                  {                      var result = _parent.MpcHcRemote.GetStatus();                      var result2 = new ArrayList();                      MpcHcRemote.ParseCSVFields(result2' result);                      var data = (string[]) result2.ToArray(typeof (string));                      if (data.Length > 6)                      {                          _nowPlaying.MediaType =  "Video";                          _nowPlaying.Title = "Media Player Classic";                          _nowPlaying.Time = new TimeSpan(0' 0' 0' Convert.ToInt32("0" + data[2])/1000);                          _nowPlaying.Duration = new TimeSpan(0' 0' 0' Convert.ToInt32("0" + data[4])/1000);                          var percent = Math.Floor(100.0 * Convert.ToInt32("0" + data[2]' CultureInfo.InvariantCulture) / Convert.ToInt32("0" + data[4]' CultureInfo.InvariantCulture));                          if (Double.IsNaN(percent))                              percent = 0;                          _nowPlaying.Volume = Convert.ToInt32("0" + data[7]' CultureInfo.InvariantCulture);                          _nowPlaying.IsMuted = data[6] == "1";                          _nowPlaying.Progress = (int)percent;                      }                  }                  else                  {                      if (!_parent.IsConnected())                      {                          _nowPlaying.FileName = "";                          _nowPlaying.Title = "";                          return;                      }                        var infos = (JsonObject)_parent.JsonCommand("System.GetInfoLabels"' new[]                                                                                  {                                                                                      "MusicPlayer.Title"'                                                                                      "MusicPlayer.Album"'                                                                                      "MusicPlayer.Artist"'                                                                                      "MusicPlayer.Property(Artist_Description)"'                                                                                      "MusicPlayer.Genre"'                                                                                      "MusicPlayer.Year"'                                                                                      "MusicPlayer.TrackNumber"'                                                                                      "MusicPlayer.Codec"'                                                                                      "Player.Time"'                                                                                      "Player.Duration"'                                                                                      "Player.Volume"'                                                                                      "Player.Filenameandpath"'                                                                                      "VideoPlayer.Title"'                                                                                      "VideoPlayer.TVShowTitle"'                                                                                      "VideoPlayer.Genre"'                                                                                      "VideoPlayer.Director"'                                                                                      "VideoPlayer.Year"'                                                                                      "VideoPlayer.Rating"'                                                                                      "VideoPlayer.Tagline"'                                                                                      "VideoPlayer.Studio"'                                                                                      "VideoPlayer.Plot"'                                                                                      "VideoPlayer.Season"'                                                                                      "VideoPlayer.Episode"'                                                                                      "VideoPlayer.VideoCodec"                                                                                  });                        if (infos == null)                          return;                      JsonObject infos2 = null;                      _nowPlaying.FileName = infos["Player.Filenameandpath"].ToString();                        if (!String.IsNullOrEmpty(infos["VideoPlayer.TVShowTitle"].ToString()))                      {                          _nowPlaying.MediaType = "TvShow";                      }                      else if (!String.IsNullOrEmpty(infos["MusicPlayer.Title"].ToString()))                      {                          _nowPlaying.MediaType = "Audio";                      }                      else if (!String.IsNullOrEmpty(infos["VideoPlayer.Title"].ToString()))                      {                          _nowPlaying.MediaType = "Movie";                      }                      else                      {                          _nowPlaying.MediaType = "Unknown";                          _nowPlaying.Title = "";                          _nowPlaying.IsPlaying = false;                          _nowPlaying.IsPaused = false;                          _nowPlaying.Duration = new TimeSpan();                          _nowPlaying.Time = new TimeSpan();                      }                        if (_nowPlaying.MediaType == "Movie" || _nowPlaying.MediaType == "TvShow")                      {                          infos2 = (JsonObject)_parent.JsonCommand("VideoPlayer.GetTime"' null);                          _nowPlaying.Genre = infos["VideoPlayer.Genre"].ToString();                          _nowPlaying.Title = infos["VideoPlayer.Title"].ToString();                          _nowPlaying.Year = Convert.ToInt32("0" + infos["VideoPlayer.Year"]);                          _nowPlaying.SeasonNumber = Convert.ToInt32("0" + infos["VideoPlayer.Season"]);                          _nowPlaying.EpisodeNumber = Convert.ToInt32("0" + infos["VideoPlayer.Episode"]);                          _nowPlaying.ShowTitle = infos["VideoPlayer.TVShowTitle"].ToString();                          _nowPlaying.Plot = infos["VideoPlayer.Plot"].ToString();                          _nowPlaying.Director = infos["VideoPlayer.Director"].ToString();                          _nowPlaying.Studio = infos["VideoPlayer.Studio"].ToString();                          _nowPlaying.Tagline = infos["VideoPlayer.Tagline"].ToString();                          _nowPlaying.Rating = infos["VideoPlayer.Rating"].ToString();                          if (_nowPlaying.FileName.StartsWith("stack://"' StringComparison.OrdinalIgnoreCase))                          {                              var temp = _nowPlaying.FileName.Split(new[] { " ' " }' StringSplitOptions.None);                              var hash = Xbmc.Hash(temp[0].Replace("stack://"' ""));                              _nowPlaying.ThumbURL = @"special://profile/Thumbnails/Video/" + hash[0] + "/" + hash + ".tbn";                              _nowPlaying.FanartURL = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(_nowPlaying.FileName) + ".tbn";                          }                          else                          {                              var hash = Xbmc.Hash(_nowPlaying.FileName);                              _nowPlaying.ThumbURL = @"special://profile/Thumbnails/Video/" + hash[0] + "/" + hash + ".tbn";                              _nowPlaying.FanartURL = @"special://profile/Thumbnails/Video/Fanart/" + hash + ".tbn";                          }                      }                      if (_nowPlaying.MediaType == "Audio")                      {                          infos2 = (JsonObject)_parent.JsonCommand("AudioPlayer.GetTime"' null);                          _nowPlaying.Genre = infos["MusicPlayer.Genre"].ToString();                          _nowPlaying.Title = infos["MusicPlayer.Title"].ToString();                          _nowPlaying.Year = Convert.ToInt32("0" + infos["MusicPlayer.Year"]);                          _nowPlaying.Track = Convert.ToInt32("0" + infos["MusicPlayer.TrackNumber"]);                          _nowPlaying.Artist = infos["MusicPlayer.Artist"].ToString();                          _nowPlaying.Album = infos["MusicPlayer.Album"].ToString();                          var hash = Xbmc.Hash(_nowPlaying.Album + _nowPlaying.Artist);                          _nowPlaying.ThumbURL = @"special://profile/Thumbnails/Music/" + hash[0] + "/" + hash + ".tbn";                          _nowPlaying.FanartURL = @"special://profile/Thumbnails/Music/Fanart/" + hash + ".tbn";                      }                        if (infos2 != null)                      {                          _nowPlaying.IsPaused = (bool)infos2["paused"];                          _nowPlaying.IsPlaying = !(bool)infos2["paused"] && (bool)infos2["playing"];                          _nowPlaying.Time = new TimeSpan(0' 0' 0' Convert.ToInt32("0" + infos2["time"]));                          _nowPlaying.Duration = new TimeSpan(0' 0' 0' Convert.ToInt32("0" + infos2["total"]));                      }                        var percent = Math.Floor(100.0 * _nowPlaying.Time.TotalSeconds / _nowPlaying.Duration.TotalSeconds);                      if (Double.IsNaN(percent))                          percent = 0;                      _nowPlaying.Progress = (int)percent;                        var vol = (1 - Convert.ToDouble("0" + infos["Player.Volume"].ToString().Replace(" dB"' "").Replace("-"'"").Replace("."'"'"))/60)*100;                        _nowPlaying.Volume = (int)vol;                      _nowPlaying.IsMuted = (vol == 0);                        _parent.MpcLoaded = _nowPlaying.Duration == new TimeSpan(0' 0' 0' 1);                      }              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcPlayer,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.Player.cs,RefreshNowPlaying,The following statement contains a magic number: lock (Locker)              {                  if (_parent.MpcLoaded)                  {                      var result = _parent.MpcHcRemote.GetStatus();                      var result2 = new ArrayList();                      MpcHcRemote.ParseCSVFields(result2' result);                      var data = (string[]) result2.ToArray(typeof (string));                      if (data.Length > 6)                      {                          _nowPlaying.MediaType =  "Video";                          _nowPlaying.Title = "Media Player Classic";                          _nowPlaying.Time = new TimeSpan(0' 0' 0' Convert.ToInt32("0" + data[2])/1000);                          _nowPlaying.Duration = new TimeSpan(0' 0' 0' Convert.ToInt32("0" + data[4])/1000);                          var percent = Math.Floor(100.0 * Convert.ToInt32("0" + data[2]' CultureInfo.InvariantCulture) / Convert.ToInt32("0" + data[4]' CultureInfo.InvariantCulture));                          if (Double.IsNaN(percent))                              percent = 0;                          _nowPlaying.Volume = Convert.ToInt32("0" + data[7]' CultureInfo.InvariantCulture);                          _nowPlaying.IsMuted = data[6] == "1";                          _nowPlaying.Progress = (int)percent;                      }                  }                  else                  {                      if (!_parent.IsConnected())                      {                          _nowPlaying.FileName = "";                          _nowPlaying.Title = "";                          return;                      }                        var infos = (JsonObject)_parent.JsonCommand("System.GetInfoLabels"' new[]                                                                                  {                                                                                      "MusicPlayer.Title"'                                                                                      "MusicPlayer.Album"'                                                                                      "MusicPlayer.Artist"'                                                                                      "MusicPlayer.Property(Artist_Description)"'                                                                                      "MusicPlayer.Genre"'                                                                                      "MusicPlayer.Year"'                                                                                      "MusicPlayer.TrackNumber"'                                                                                      "MusicPlayer.Codec"'                                                                                      "Player.Time"'                                                                                      "Player.Duration"'                                                                                      "Player.Volume"'                                                                                      "Player.Filenameandpath"'                                                                                      "VideoPlayer.Title"'                                                                                      "VideoPlayer.TVShowTitle"'                                                                                      "VideoPlayer.Genre"'                                                                                      "VideoPlayer.Director"'                                                                                      "VideoPlayer.Year"'                                                                                      "VideoPlayer.Rating"'                                                                                      "VideoPlayer.Tagline"'                                                                                      "VideoPlayer.Studio"'                                                                                      "VideoPlayer.Plot"'                                                                                      "VideoPlayer.Season"'                                                                                      "VideoPlayer.Episode"'                                                                                      "VideoPlayer.VideoCodec"                                                                                  });                        if (infos == null)                          return;                      JsonObject infos2 = null;                      _nowPlaying.FileName = infos["Player.Filenameandpath"].ToString();                        if (!String.IsNullOrEmpty(infos["VideoPlayer.TVShowTitle"].ToString()))                      {                          _nowPlaying.MediaType = "TvShow";                      }                      else if (!String.IsNullOrEmpty(infos["MusicPlayer.Title"].ToString()))                      {                          _nowPlaying.MediaType = "Audio";                      }                      else if (!String.IsNullOrEmpty(infos["VideoPlayer.Title"].ToString()))                      {                          _nowPlaying.MediaType = "Movie";                      }                      else                      {                          _nowPlaying.MediaType = "Unknown";                          _nowPlaying.Title = "";                          _nowPlaying.IsPlaying = false;                          _nowPlaying.IsPaused = false;                          _nowPlaying.Duration = new TimeSpan();                          _nowPlaying.Time = new TimeSpan();                      }                        if (_nowPlaying.MediaType == "Movie" || _nowPlaying.MediaType == "TvShow")                      {                          infos2 = (JsonObject)_parent.JsonCommand("VideoPlayer.GetTime"' null);                          _nowPlaying.Genre = infos["VideoPlayer.Genre"].ToString();                          _nowPlaying.Title = infos["VideoPlayer.Title"].ToString();                          _nowPlaying.Year = Convert.ToInt32("0" + infos["VideoPlayer.Year"]);                          _nowPlaying.SeasonNumber = Convert.ToInt32("0" + infos["VideoPlayer.Season"]);                          _nowPlaying.EpisodeNumber = Convert.ToInt32("0" + infos["VideoPlayer.Episode"]);                          _nowPlaying.ShowTitle = infos["VideoPlayer.TVShowTitle"].ToString();                          _nowPlaying.Plot = infos["VideoPlayer.Plot"].ToString();                          _nowPlaying.Director = infos["VideoPlayer.Director"].ToString();                          _nowPlaying.Studio = infos["VideoPlayer.Studio"].ToString();                          _nowPlaying.Tagline = infos["VideoPlayer.Tagline"].ToString();                          _nowPlaying.Rating = infos["VideoPlayer.Rating"].ToString();                          if (_nowPlaying.FileName.StartsWith("stack://"' StringComparison.OrdinalIgnoreCase))                          {                              var temp = _nowPlaying.FileName.Split(new[] { " ' " }' StringSplitOptions.None);                              var hash = Xbmc.Hash(temp[0].Replace("stack://"' ""));                              _nowPlaying.ThumbURL = @"special://profile/Thumbnails/Video/" + hash[0] + "/" + hash + ".tbn";                              _nowPlaying.FanartURL = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(_nowPlaying.FileName) + ".tbn";                          }                          else                          {                              var hash = Xbmc.Hash(_nowPlaying.FileName);                              _nowPlaying.ThumbURL = @"special://profile/Thumbnails/Video/" + hash[0] + "/" + hash + ".tbn";                              _nowPlaying.FanartURL = @"special://profile/Thumbnails/Video/Fanart/" + hash + ".tbn";                          }                      }                      if (_nowPlaying.MediaType == "Audio")                      {                          infos2 = (JsonObject)_parent.JsonCommand("AudioPlayer.GetTime"' null);                          _nowPlaying.Genre = infos["MusicPlayer.Genre"].ToString();                          _nowPlaying.Title = infos["MusicPlayer.Title"].ToString();                          _nowPlaying.Year = Convert.ToInt32("0" + infos["MusicPlayer.Year"]);                          _nowPlaying.Track = Convert.ToInt32("0" + infos["MusicPlayer.TrackNumber"]);                          _nowPlaying.Artist = infos["MusicPlayer.Artist"].ToString();                          _nowPlaying.Album = infos["MusicPlayer.Album"].ToString();                          var hash = Xbmc.Hash(_nowPlaying.Album + _nowPlaying.Artist);                          _nowPlaying.ThumbURL = @"special://profile/Thumbnails/Music/" + hash[0] + "/" + hash + ".tbn";                          _nowPlaying.FanartURL = @"special://profile/Thumbnails/Music/Fanart/" + hash + ".tbn";                      }                        if (infos2 != null)                      {                          _nowPlaying.IsPaused = (bool)infos2["paused"];                          _nowPlaying.IsPlaying = !(bool)infos2["paused"] && (bool)infos2["playing"];                          _nowPlaying.Time = new TimeSpan(0' 0' 0' Convert.ToInt32("0" + infos2["time"]));                          _nowPlaying.Duration = new TimeSpan(0' 0' 0' Convert.ToInt32("0" + infos2["total"]));                      }                        var percent = Math.Floor(100.0 * _nowPlaying.Time.TotalSeconds / _nowPlaying.Duration.TotalSeconds);                      if (Double.IsNaN(percent))                          percent = 0;                      _nowPlaying.Progress = (int)percent;                        var vol = (1 - Convert.ToDouble("0" + infos["Player.Volume"].ToString().Replace(" dB"' "").Replace("-"'"").Replace("."'"'"))/60)*100;                        _nowPlaying.Volume = (int)vol;                      _nowPlaying.IsMuted = (vol == 0);                        _parent.MpcLoaded = _nowPlaying.Duration == new TimeSpan(0' 0' 0' 1);                      }              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetTvSeasons,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 4)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  var season = new ApiTvSeason                  {                      EpisodeCount = Xbmc.StringToNumber(dbline[1])'                      IdShow = Xbmc.StringToNumber(dbline[0])'                      SeasonNumber = Xbmc.StringToNumber(dbline[2])'                      Show = dbline[4]                  };                    var temp = dbline[3];                  season.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(temp) + ".tbn";                  char[] charsToTrim = { '/' };                  temp = temp.TrimEnd(charsToTrim);                  var hash = Xbmc.Hash("season" + temp);                  season.Thumb = @"special://profile/Thumbnails/Video/" + hash[0] + "/" + hash + ".tbn";                  season.Hash = temp;                  seasons.Add(season);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetTvSeasons,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 4)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  var season = new ApiTvSeason                  {                      EpisodeCount = Xbmc.StringToNumber(dbline[1])'                      IdShow = Xbmc.StringToNumber(dbline[0])'                      SeasonNumber = Xbmc.StringToNumber(dbline[2])'                      Show = dbline[4]                  };                    var temp = dbline[3];                  season.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(temp) + ".tbn";                  char[] charsToTrim = { '/' };                  temp = temp.TrimEnd(charsToTrim);                  var hash = Xbmc.Hash("season" + temp);                  season.Thumb = @"special://profile/Thumbnails/Video/" + hash[0] + "/" + hash + ".tbn";                  season.Hash = temp;                  seasons.Add(season);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetTvSeasons,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 4)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  var season = new ApiTvSeason                  {                      EpisodeCount = Xbmc.StringToNumber(dbline[1])'                      IdShow = Xbmc.StringToNumber(dbline[0])'                      SeasonNumber = Xbmc.StringToNumber(dbline[2])'                      Show = dbline[4]                  };                    var temp = dbline[3];                  season.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(temp) + ".tbn";                  char[] charsToTrim = { '/' };                  temp = temp.TrimEnd(charsToTrim);                  var hash = Xbmc.Hash("season" + temp);                  season.Thumb = @"special://profile/Thumbnails/Video/" + hash[0] + "/" + hash + ".tbn";                  season.Hash = temp;                  seasons.Add(season);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetTvSeasons,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 4)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  var season = new ApiTvSeason                  {                      EpisodeCount = Xbmc.StringToNumber(dbline[1])'                      IdShow = Xbmc.StringToNumber(dbline[0])'                      SeasonNumber = Xbmc.StringToNumber(dbline[2])'                      Show = dbline[4]                  };                    var temp = dbline[3];                  season.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(temp) + ".tbn";                  char[] charsToTrim = { '/' };                  temp = temp.TrimEnd(charsToTrim);                  var hash = Xbmc.Hash("season" + temp);                  season.Thumb = @"special://profile/Thumbnails/Video/" + hash[0] + "/" + hash + ".tbn";                  season.Hash = temp;                  seasons.Add(season);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetTvEpisodes,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 15)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  dbline[3] = dbline[3].Length > 3 ? dbline[3] : "0.0";                  var episode = new ApiTvEpisode                                    {                                        IdEpisode = Xbmc.StringToNumber(dbline[0])'                                        Title = dbline[1]'                                        Plot = dbline[2]'                                        Rating = dbline[3].Substring(0' 3).Trim('.')'                                        Date = dbline[4]'                                        Director = dbline[5]'                                        Season = Xbmc.StringToNumber(dbline[6])'                                        Episode = Xbmc.StringToNumber(dbline[7])'                                        IdFile = Xbmc.StringToNumber(dbline[8])'                                        FileName = dbline[9]'                                        Path = dbline[10]'                                        PlayCount = Xbmc.StringToNumber(dbline[11])'                                        ShowTitle = dbline[12]'                                        Studio = dbline[13]'                                        IdShow = Xbmc.StringToNumber(dbline[14])'                                        Mpaa = dbline[15]                                    };                  if (episode.FileName.StartsWith("stack://"'StringComparison.OrdinalIgnoreCase))                  {                      var temp = episode.FileName.Split(new[] { " ' " }' StringSplitOptions.None);                      episode.IsStack = 1;                      episode.Hash = Xbmc.Hash(temp[0].Replace("stack://"' ""));                      episode.Thumb = @"special://profile/Thumbnails/Video/" + episode.Hash[0] + "/" + episode.Hash + ".tbn";                      episode.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(episode.Path) + ".tbn";                  }                  else                  {                      episode.IsStack = 0;                      episode.Hash = Xbmc.Hash(episode.Path + episode.FileName);                      episode.Thumb = @"special://profile/Thumbnails/Video/" + episode.Hash[0] + "/" + episode.Hash + ".tbn";                      episode.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(episode.Path) + ".tbn";                  }                  episodes.Add(episode);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetTvEpisodes,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 15)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  dbline[3] = dbline[3].Length > 3 ? dbline[3] : "0.0";                  var episode = new ApiTvEpisode                                    {                                        IdEpisode = Xbmc.StringToNumber(dbline[0])'                                        Title = dbline[1]'                                        Plot = dbline[2]'                                        Rating = dbline[3].Substring(0' 3).Trim('.')'                                        Date = dbline[4]'                                        Director = dbline[5]'                                        Season = Xbmc.StringToNumber(dbline[6])'                                        Episode = Xbmc.StringToNumber(dbline[7])'                                        IdFile = Xbmc.StringToNumber(dbline[8])'                                        FileName = dbline[9]'                                        Path = dbline[10]'                                        PlayCount = Xbmc.StringToNumber(dbline[11])'                                        ShowTitle = dbline[12]'                                        Studio = dbline[13]'                                        IdShow = Xbmc.StringToNumber(dbline[14])'                                        Mpaa = dbline[15]                                    };                  if (episode.FileName.StartsWith("stack://"'StringComparison.OrdinalIgnoreCase))                  {                      var temp = episode.FileName.Split(new[] { " ' " }' StringSplitOptions.None);                      episode.IsStack = 1;                      episode.Hash = Xbmc.Hash(temp[0].Replace("stack://"' ""));                      episode.Thumb = @"special://profile/Thumbnails/Video/" + episode.Hash[0] + "/" + episode.Hash + ".tbn";                      episode.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(episode.Path) + ".tbn";                  }                  else                  {                      episode.IsStack = 0;                      episode.Hash = Xbmc.Hash(episode.Path + episode.FileName);                      episode.Thumb = @"special://profile/Thumbnails/Video/" + episode.Hash[0] + "/" + episode.Hash + ".tbn";                      episode.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(episode.Path) + ".tbn";                  }                  episodes.Add(episode);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetTvEpisodes,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 15)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  dbline[3] = dbline[3].Length > 3 ? dbline[3] : "0.0";                  var episode = new ApiTvEpisode                                    {                                        IdEpisode = Xbmc.StringToNumber(dbline[0])'                                        Title = dbline[1]'                                        Plot = dbline[2]'                                        Rating = dbline[3].Substring(0' 3).Trim('.')'                                        Date = dbline[4]'                                        Director = dbline[5]'                                        Season = Xbmc.StringToNumber(dbline[6])'                                        Episode = Xbmc.StringToNumber(dbline[7])'                                        IdFile = Xbmc.StringToNumber(dbline[8])'                                        FileName = dbline[9]'                                        Path = dbline[10]'                                        PlayCount = Xbmc.StringToNumber(dbline[11])'                                        ShowTitle = dbline[12]'                                        Studio = dbline[13]'                                        IdShow = Xbmc.StringToNumber(dbline[14])'                                        Mpaa = dbline[15]                                    };                  if (episode.FileName.StartsWith("stack://"'StringComparison.OrdinalIgnoreCase))                  {                      var temp = episode.FileName.Split(new[] { " ' " }' StringSplitOptions.None);                      episode.IsStack = 1;                      episode.Hash = Xbmc.Hash(temp[0].Replace("stack://"' ""));                      episode.Thumb = @"special://profile/Thumbnails/Video/" + episode.Hash[0] + "/" + episode.Hash + ".tbn";                      episode.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(episode.Path) + ".tbn";                  }                  else                  {                      episode.IsStack = 0;                      episode.Hash = Xbmc.Hash(episode.Path + episode.FileName);                      episode.Thumb = @"special://profile/Thumbnails/Video/" + episode.Hash[0] + "/" + episode.Hash + ".tbn";                      episode.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(episode.Path) + ".tbn";                  }                  episodes.Add(episode);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetTvEpisodes,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 15)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  dbline[3] = dbline[3].Length > 3 ? dbline[3] : "0.0";                  var episode = new ApiTvEpisode                                    {                                        IdEpisode = Xbmc.StringToNumber(dbline[0])'                                        Title = dbline[1]'                                        Plot = dbline[2]'                                        Rating = dbline[3].Substring(0' 3).Trim('.')'                                        Date = dbline[4]'                                        Director = dbline[5]'                                        Season = Xbmc.StringToNumber(dbline[6])'                                        Episode = Xbmc.StringToNumber(dbline[7])'                                        IdFile = Xbmc.StringToNumber(dbline[8])'                                        FileName = dbline[9]'                                        Path = dbline[10]'                                        PlayCount = Xbmc.StringToNumber(dbline[11])'                                        ShowTitle = dbline[12]'                                        Studio = dbline[13]'                                        IdShow = Xbmc.StringToNumber(dbline[14])'                                        Mpaa = dbline[15]                                    };                  if (episode.FileName.StartsWith("stack://"'StringComparison.OrdinalIgnoreCase))                  {                      var temp = episode.FileName.Split(new[] { " ' " }' StringSplitOptions.None);                      episode.IsStack = 1;                      episode.Hash = Xbmc.Hash(temp[0].Replace("stack://"' ""));                      episode.Thumb = @"special://profile/Thumbnails/Video/" + episode.Hash[0] + "/" + episode.Hash + ".tbn";                      episode.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(episode.Path) + ".tbn";                  }                  else                  {                      episode.IsStack = 0;                      episode.Hash = Xbmc.Hash(episode.Path + episode.FileName);                      episode.Thumb = @"special://profile/Thumbnails/Video/" + episode.Hash[0] + "/" + episode.Hash + ".tbn";                      episode.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(episode.Path) + ".tbn";                  }                  episodes.Add(episode);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetTvEpisodes,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 15)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  dbline[3] = dbline[3].Length > 3 ? dbline[3] : "0.0";                  var episode = new ApiTvEpisode                                    {                                        IdEpisode = Xbmc.StringToNumber(dbline[0])'                                        Title = dbline[1]'                                        Plot = dbline[2]'                                        Rating = dbline[3].Substring(0' 3).Trim('.')'                                        Date = dbline[4]'                                        Director = dbline[5]'                                        Season = Xbmc.StringToNumber(dbline[6])'                                        Episode = Xbmc.StringToNumber(dbline[7])'                                        IdFile = Xbmc.StringToNumber(dbline[8])'                                        FileName = dbline[9]'                                        Path = dbline[10]'                                        PlayCount = Xbmc.StringToNumber(dbline[11])'                                        ShowTitle = dbline[12]'                                        Studio = dbline[13]'                                        IdShow = Xbmc.StringToNumber(dbline[14])'                                        Mpaa = dbline[15]                                    };                  if (episode.FileName.StartsWith("stack://"'StringComparison.OrdinalIgnoreCase))                  {                      var temp = episode.FileName.Split(new[] { " ' " }' StringSplitOptions.None);                      episode.IsStack = 1;                      episode.Hash = Xbmc.Hash(temp[0].Replace("stack://"' ""));                      episode.Thumb = @"special://profile/Thumbnails/Video/" + episode.Hash[0] + "/" + episode.Hash + ".tbn";                      episode.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(episode.Path) + ".tbn";                  }                  else                  {                      episode.IsStack = 0;                      episode.Hash = Xbmc.Hash(episode.Path + episode.FileName);                      episode.Thumb = @"special://profile/Thumbnails/Video/" + episode.Hash[0] + "/" + episode.Hash + ".tbn";                      episode.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(episode.Path) + ".tbn";                  }                  episodes.Add(episode);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetTvEpisodes,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 15)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  dbline[3] = dbline[3].Length > 3 ? dbline[3] : "0.0";                  var episode = new ApiTvEpisode                                    {                                        IdEpisode = Xbmc.StringToNumber(dbline[0])'                                        Title = dbline[1]'                                        Plot = dbline[2]'                                        Rating = dbline[3].Substring(0' 3).Trim('.')'                                        Date = dbline[4]'                                        Director = dbline[5]'                                        Season = Xbmc.StringToNumber(dbline[6])'                                        Episode = Xbmc.StringToNumber(dbline[7])'                                        IdFile = Xbmc.StringToNumber(dbline[8])'                                        FileName = dbline[9]'                                        Path = dbline[10]'                                        PlayCount = Xbmc.StringToNumber(dbline[11])'                                        ShowTitle = dbline[12]'                                        Studio = dbline[13]'                                        IdShow = Xbmc.StringToNumber(dbline[14])'                                        Mpaa = dbline[15]                                    };                  if (episode.FileName.StartsWith("stack://"'StringComparison.OrdinalIgnoreCase))                  {                      var temp = episode.FileName.Split(new[] { " ' " }' StringSplitOptions.None);                      episode.IsStack = 1;                      episode.Hash = Xbmc.Hash(temp[0].Replace("stack://"' ""));                      episode.Thumb = @"special://profile/Thumbnails/Video/" + episode.Hash[0] + "/" + episode.Hash + ".tbn";                      episode.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(episode.Path) + ".tbn";                  }                  else                  {                      episode.IsStack = 0;                      episode.Hash = Xbmc.Hash(episode.Path + episode.FileName);                      episode.Thumb = @"special://profile/Thumbnails/Video/" + episode.Hash[0] + "/" + episode.Hash + ".tbn";                      episode.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(episode.Path) + ".tbn";                  }                  episodes.Add(episode);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetTvEpisodes,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 15)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  dbline[3] = dbline[3].Length > 3 ? dbline[3] : "0.0";                  var episode = new ApiTvEpisode                                    {                                        IdEpisode = Xbmc.StringToNumber(dbline[0])'                                        Title = dbline[1]'                                        Plot = dbline[2]'                                        Rating = dbline[3].Substring(0' 3).Trim('.')'                                        Date = dbline[4]'                                        Director = dbline[5]'                                        Season = Xbmc.StringToNumber(dbline[6])'                                        Episode = Xbmc.StringToNumber(dbline[7])'                                        IdFile = Xbmc.StringToNumber(dbline[8])'                                        FileName = dbline[9]'                                        Path = dbline[10]'                                        PlayCount = Xbmc.StringToNumber(dbline[11])'                                        ShowTitle = dbline[12]'                                        Studio = dbline[13]'                                        IdShow = Xbmc.StringToNumber(dbline[14])'                                        Mpaa = dbline[15]                                    };                  if (episode.FileName.StartsWith("stack://"'StringComparison.OrdinalIgnoreCase))                  {                      var temp = episode.FileName.Split(new[] { " ' " }' StringSplitOptions.None);                      episode.IsStack = 1;                      episode.Hash = Xbmc.Hash(temp[0].Replace("stack://"' ""));                      episode.Thumb = @"special://profile/Thumbnails/Video/" + episode.Hash[0] + "/" + episode.Hash + ".tbn";                      episode.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(episode.Path) + ".tbn";                  }                  else                  {                      episode.IsStack = 0;                      episode.Hash = Xbmc.Hash(episode.Path + episode.FileName);                      episode.Thumb = @"special://profile/Thumbnails/Video/" + episode.Hash[0] + "/" + episode.Hash + ".tbn";                      episode.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(episode.Path) + ".tbn";                  }                  episodes.Add(episode);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetTvEpisodes,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 15)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  dbline[3] = dbline[3].Length > 3 ? dbline[3] : "0.0";                  var episode = new ApiTvEpisode                                    {                                        IdEpisode = Xbmc.StringToNumber(dbline[0])'                                        Title = dbline[1]'                                        Plot = dbline[2]'                                        Rating = dbline[3].Substring(0' 3).Trim('.')'                                        Date = dbline[4]'                                        Director = dbline[5]'                                        Season = Xbmc.StringToNumber(dbline[6])'                                        Episode = Xbmc.StringToNumber(dbline[7])'                                        IdFile = Xbmc.StringToNumber(dbline[8])'                                        FileName = dbline[9]'                                        Path = dbline[10]'                                        PlayCount = Xbmc.StringToNumber(dbline[11])'                                        ShowTitle = dbline[12]'                                        Studio = dbline[13]'                                        IdShow = Xbmc.StringToNumber(dbline[14])'                                        Mpaa = dbline[15]                                    };                  if (episode.FileName.StartsWith("stack://"'StringComparison.OrdinalIgnoreCase))                  {                      var temp = episode.FileName.Split(new[] { " ' " }' StringSplitOptions.None);                      episode.IsStack = 1;                      episode.Hash = Xbmc.Hash(temp[0].Replace("stack://"' ""));                      episode.Thumb = @"special://profile/Thumbnails/Video/" + episode.Hash[0] + "/" + episode.Hash + ".tbn";                      episode.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(episode.Path) + ".tbn";                  }                  else                  {                      episode.IsStack = 0;                      episode.Hash = Xbmc.Hash(episode.Path + episode.FileName);                      episode.Thumb = @"special://profile/Thumbnails/Video/" + episode.Hash[0] + "/" + episode.Hash + ".tbn";                      episode.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(episode.Path) + ".tbn";                  }                  episodes.Add(episode);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetTvEpisodes,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 15)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  dbline[3] = dbline[3].Length > 3 ? dbline[3] : "0.0";                  var episode = new ApiTvEpisode                                    {                                        IdEpisode = Xbmc.StringToNumber(dbline[0])'                                        Title = dbline[1]'                                        Plot = dbline[2]'                                        Rating = dbline[3].Substring(0' 3).Trim('.')'                                        Date = dbline[4]'                                        Director = dbline[5]'                                        Season = Xbmc.StringToNumber(dbline[6])'                                        Episode = Xbmc.StringToNumber(dbline[7])'                                        IdFile = Xbmc.StringToNumber(dbline[8])'                                        FileName = dbline[9]'                                        Path = dbline[10]'                                        PlayCount = Xbmc.StringToNumber(dbline[11])'                                        ShowTitle = dbline[12]'                                        Studio = dbline[13]'                                        IdShow = Xbmc.StringToNumber(dbline[14])'                                        Mpaa = dbline[15]                                    };                  if (episode.FileName.StartsWith("stack://"'StringComparison.OrdinalIgnoreCase))                  {                      var temp = episode.FileName.Split(new[] { " ' " }' StringSplitOptions.None);                      episode.IsStack = 1;                      episode.Hash = Xbmc.Hash(temp[0].Replace("stack://"' ""));                      episode.Thumb = @"special://profile/Thumbnails/Video/" + episode.Hash[0] + "/" + episode.Hash + ".tbn";                      episode.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(episode.Path) + ".tbn";                  }                  else                  {                      episode.IsStack = 0;                      episode.Hash = Xbmc.Hash(episode.Path + episode.FileName);                      episode.Thumb = @"special://profile/Thumbnails/Video/" + episode.Hash[0] + "/" + episode.Hash + ".tbn";                      episode.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(episode.Path) + ".tbn";                  }                  episodes.Add(episode);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetTvEpisodes,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 15)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  dbline[3] = dbline[3].Length > 3 ? dbline[3] : "0.0";                  var episode = new ApiTvEpisode                                    {                                        IdEpisode = Xbmc.StringToNumber(dbline[0])'                                        Title = dbline[1]'                                        Plot = dbline[2]'                                        Rating = dbline[3].Substring(0' 3).Trim('.')'                                        Date = dbline[4]'                                        Director = dbline[5]'                                        Season = Xbmc.StringToNumber(dbline[6])'                                        Episode = Xbmc.StringToNumber(dbline[7])'                                        IdFile = Xbmc.StringToNumber(dbline[8])'                                        FileName = dbline[9]'                                        Path = dbline[10]'                                        PlayCount = Xbmc.StringToNumber(dbline[11])'                                        ShowTitle = dbline[12]'                                        Studio = dbline[13]'                                        IdShow = Xbmc.StringToNumber(dbline[14])'                                        Mpaa = dbline[15]                                    };                  if (episode.FileName.StartsWith("stack://"'StringComparison.OrdinalIgnoreCase))                  {                      var temp = episode.FileName.Split(new[] { " ' " }' StringSplitOptions.None);                      episode.IsStack = 1;                      episode.Hash = Xbmc.Hash(temp[0].Replace("stack://"' ""));                      episode.Thumb = @"special://profile/Thumbnails/Video/" + episode.Hash[0] + "/" + episode.Hash + ".tbn";                      episode.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(episode.Path) + ".tbn";                  }                  else                  {                      episode.IsStack = 0;                      episode.Hash = Xbmc.Hash(episode.Path + episode.FileName);                      episode.Thumb = @"special://profile/Thumbnails/Video/" + episode.Hash[0] + "/" + episode.Hash + ".tbn";                      episode.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(episode.Path) + ".tbn";                  }                  episodes.Add(episode);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetTvEpisodes,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 15)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  dbline[3] = dbline[3].Length > 3 ? dbline[3] : "0.0";                  var episode = new ApiTvEpisode                                    {                                        IdEpisode = Xbmc.StringToNumber(dbline[0])'                                        Title = dbline[1]'                                        Plot = dbline[2]'                                        Rating = dbline[3].Substring(0' 3).Trim('.')'                                        Date = dbline[4]'                                        Director = dbline[5]'                                        Season = Xbmc.StringToNumber(dbline[6])'                                        Episode = Xbmc.StringToNumber(dbline[7])'                                        IdFile = Xbmc.StringToNumber(dbline[8])'                                        FileName = dbline[9]'                                        Path = dbline[10]'                                        PlayCount = Xbmc.StringToNumber(dbline[11])'                                        ShowTitle = dbline[12]'                                        Studio = dbline[13]'                                        IdShow = Xbmc.StringToNumber(dbline[14])'                                        Mpaa = dbline[15]                                    };                  if (episode.FileName.StartsWith("stack://"'StringComparison.OrdinalIgnoreCase))                  {                      var temp = episode.FileName.Split(new[] { " ' " }' StringSplitOptions.None);                      episode.IsStack = 1;                      episode.Hash = Xbmc.Hash(temp[0].Replace("stack://"' ""));                      episode.Thumb = @"special://profile/Thumbnails/Video/" + episode.Hash[0] + "/" + episode.Hash + ".tbn";                      episode.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(episode.Path) + ".tbn";                  }                  else                  {                      episode.IsStack = 0;                      episode.Hash = Xbmc.Hash(episode.Path + episode.FileName);                      episode.Thumb = @"special://profile/Thumbnails/Video/" + episode.Hash[0] + "/" + episode.Hash + ".tbn";                      episode.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(episode.Path) + ".tbn";                  }                  episodes.Add(episode);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetTvEpisodes,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 15)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  dbline[3] = dbline[3].Length > 3 ? dbline[3] : "0.0";                  var episode = new ApiTvEpisode                                    {                                        IdEpisode = Xbmc.StringToNumber(dbline[0])'                                        Title = dbline[1]'                                        Plot = dbline[2]'                                        Rating = dbline[3].Substring(0' 3).Trim('.')'                                        Date = dbline[4]'                                        Director = dbline[5]'                                        Season = Xbmc.StringToNumber(dbline[6])'                                        Episode = Xbmc.StringToNumber(dbline[7])'                                        IdFile = Xbmc.StringToNumber(dbline[8])'                                        FileName = dbline[9]'                                        Path = dbline[10]'                                        PlayCount = Xbmc.StringToNumber(dbline[11])'                                        ShowTitle = dbline[12]'                                        Studio = dbline[13]'                                        IdShow = Xbmc.StringToNumber(dbline[14])'                                        Mpaa = dbline[15]                                    };                  if (episode.FileName.StartsWith("stack://"'StringComparison.OrdinalIgnoreCase))                  {                      var temp = episode.FileName.Split(new[] { " ' " }' StringSplitOptions.None);                      episode.IsStack = 1;                      episode.Hash = Xbmc.Hash(temp[0].Replace("stack://"' ""));                      episode.Thumb = @"special://profile/Thumbnails/Video/" + episode.Hash[0] + "/" + episode.Hash + ".tbn";                      episode.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(episode.Path) + ".tbn";                  }                  else                  {                      episode.IsStack = 0;                      episode.Hash = Xbmc.Hash(episode.Path + episode.FileName);                      episode.Thumb = @"special://profile/Thumbnails/Video/" + episode.Hash[0] + "/" + episode.Hash + ".tbn";                      episode.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(episode.Path) + ".tbn";                  }                  episodes.Add(episode);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetTvEpisodes,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 15)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  dbline[3] = dbline[3].Length > 3 ? dbline[3] : "0.0";                  var episode = new ApiTvEpisode                                    {                                        IdEpisode = Xbmc.StringToNumber(dbline[0])'                                        Title = dbline[1]'                                        Plot = dbline[2]'                                        Rating = dbline[3].Substring(0' 3).Trim('.')'                                        Date = dbline[4]'                                        Director = dbline[5]'                                        Season = Xbmc.StringToNumber(dbline[6])'                                        Episode = Xbmc.StringToNumber(dbline[7])'                                        IdFile = Xbmc.StringToNumber(dbline[8])'                                        FileName = dbline[9]'                                        Path = dbline[10]'                                        PlayCount = Xbmc.StringToNumber(dbline[11])'                                        ShowTitle = dbline[12]'                                        Studio = dbline[13]'                                        IdShow = Xbmc.StringToNumber(dbline[14])'                                        Mpaa = dbline[15]                                    };                  if (episode.FileName.StartsWith("stack://"'StringComparison.OrdinalIgnoreCase))                  {                      var temp = episode.FileName.Split(new[] { " ' " }' StringSplitOptions.None);                      episode.IsStack = 1;                      episode.Hash = Xbmc.Hash(temp[0].Replace("stack://"' ""));                      episode.Thumb = @"special://profile/Thumbnails/Video/" + episode.Hash[0] + "/" + episode.Hash + ".tbn";                      episode.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(episode.Path) + ".tbn";                  }                  else                  {                      episode.IsStack = 0;                      episode.Hash = Xbmc.Hash(episode.Path + episode.FileName);                      episode.Thumb = @"special://profile/Thumbnails/Video/" + episode.Hash[0] + "/" + episode.Hash + ".tbn";                      episode.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(episode.Path) + ".tbn";                  }                  episodes.Add(episode);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetTvEpisodes,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 15)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  dbline[3] = dbline[3].Length > 3 ? dbline[3] : "0.0";                  var episode = new ApiTvEpisode                                    {                                        IdEpisode = Xbmc.StringToNumber(dbline[0])'                                        Title = dbline[1]'                                        Plot = dbline[2]'                                        Rating = dbline[3].Substring(0' 3).Trim('.')'                                        Date = dbline[4]'                                        Director = dbline[5]'                                        Season = Xbmc.StringToNumber(dbline[6])'                                        Episode = Xbmc.StringToNumber(dbline[7])'                                        IdFile = Xbmc.StringToNumber(dbline[8])'                                        FileName = dbline[9]'                                        Path = dbline[10]'                                        PlayCount = Xbmc.StringToNumber(dbline[11])'                                        ShowTitle = dbline[12]'                                        Studio = dbline[13]'                                        IdShow = Xbmc.StringToNumber(dbline[14])'                                        Mpaa = dbline[15]                                    };                  if (episode.FileName.StartsWith("stack://"'StringComparison.OrdinalIgnoreCase))                  {                      var temp = episode.FileName.Split(new[] { " ' " }' StringSplitOptions.None);                      episode.IsStack = 1;                      episode.Hash = Xbmc.Hash(temp[0].Replace("stack://"' ""));                      episode.Thumb = @"special://profile/Thumbnails/Video/" + episode.Hash[0] + "/" + episode.Hash + ".tbn";                      episode.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(episode.Path) + ".tbn";                  }                  else                  {                      episode.IsStack = 0;                      episode.Hash = Xbmc.Hash(episode.Path + episode.FileName);                      episode.Thumb = @"special://profile/Thumbnails/Video/" + episode.Hash[0] + "/" + episode.Hash + ".tbn";                      episode.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(episode.Path) + ".tbn";                  }                  episodes.Add(episode);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetTvEpisodes,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 15)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  dbline[3] = dbline[3].Length > 3 ? dbline[3] : "0.0";                  var episode = new ApiTvEpisode                                    {                                        IdEpisode = Xbmc.StringToNumber(dbline[0])'                                        Title = dbline[1]'                                        Plot = dbline[2]'                                        Rating = dbline[3].Substring(0' 3).Trim('.')'                                        Date = dbline[4]'                                        Director = dbline[5]'                                        Season = Xbmc.StringToNumber(dbline[6])'                                        Episode = Xbmc.StringToNumber(dbline[7])'                                        IdFile = Xbmc.StringToNumber(dbline[8])'                                        FileName = dbline[9]'                                        Path = dbline[10]'                                        PlayCount = Xbmc.StringToNumber(dbline[11])'                                        ShowTitle = dbline[12]'                                        Studio = dbline[13]'                                        IdShow = Xbmc.StringToNumber(dbline[14])'                                        Mpaa = dbline[15]                                    };                  if (episode.FileName.StartsWith("stack://"'StringComparison.OrdinalIgnoreCase))                  {                      var temp = episode.FileName.Split(new[] { " ' " }' StringSplitOptions.None);                      episode.IsStack = 1;                      episode.Hash = Xbmc.Hash(temp[0].Replace("stack://"' ""));                      episode.Thumb = @"special://profile/Thumbnails/Video/" + episode.Hash[0] + "/" + episode.Hash + ".tbn";                      episode.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(episode.Path) + ".tbn";                  }                  else                  {                      episode.IsStack = 0;                      episode.Hash = Xbmc.Hash(episode.Path + episode.FileName);                      episode.Thumb = @"special://profile/Thumbnails/Video/" + episode.Hash[0] + "/" + episode.Hash + ".tbn";                      episode.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(episode.Path) + ".tbn";                  }                  episodes.Add(episode);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetTvEpisodes,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 15)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  dbline[3] = dbline[3].Length > 3 ? dbline[3] : "0.0";                  var episode = new ApiTvEpisode                                    {                                        IdEpisode = Xbmc.StringToNumber(dbline[0])'                                        Title = dbline[1]'                                        Plot = dbline[2]'                                        Rating = dbline[3].Substring(0' 3).Trim('.')'                                        Date = dbline[4]'                                        Director = dbline[5]'                                        Season = Xbmc.StringToNumber(dbline[6])'                                        Episode = Xbmc.StringToNumber(dbline[7])'                                        IdFile = Xbmc.StringToNumber(dbline[8])'                                        FileName = dbline[9]'                                        Path = dbline[10]'                                        PlayCount = Xbmc.StringToNumber(dbline[11])'                                        ShowTitle = dbline[12]'                                        Studio = dbline[13]'                                        IdShow = Xbmc.StringToNumber(dbline[14])'                                        Mpaa = dbline[15]                                    };                  if (episode.FileName.StartsWith("stack://"'StringComparison.OrdinalIgnoreCase))                  {                      var temp = episode.FileName.Split(new[] { " ' " }' StringSplitOptions.None);                      episode.IsStack = 1;                      episode.Hash = Xbmc.Hash(temp[0].Replace("stack://"' ""));                      episode.Thumb = @"special://profile/Thumbnails/Video/" + episode.Hash[0] + "/" + episode.Hash + ".tbn";                      episode.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(episode.Path) + ".tbn";                  }                  else                  {                      episode.IsStack = 0;                      episode.Hash = Xbmc.Hash(episode.Path + episode.FileName);                      episode.Thumb = @"special://profile/Thumbnails/Video/" + episode.Hash[0] + "/" + episode.Hash + ".tbn";                      episode.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(episode.Path) + ".tbn";                  }                  episodes.Add(episode);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetTvEpisodes,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 15)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  dbline[3] = dbline[3].Length > 3 ? dbline[3] : "0.0";                  var episode = new ApiTvEpisode                                    {                                        IdEpisode = Xbmc.StringToNumber(dbline[0])'                                        Title = dbline[1]'                                        Plot = dbline[2]'                                        Rating = dbline[3].Substring(0' 3).Trim('.')'                                        Date = dbline[4]'                                        Director = dbline[5]'                                        Season = Xbmc.StringToNumber(dbline[6])'                                        Episode = Xbmc.StringToNumber(dbline[7])'                                        IdFile = Xbmc.StringToNumber(dbline[8])'                                        FileName = dbline[9]'                                        Path = dbline[10]'                                        PlayCount = Xbmc.StringToNumber(dbline[11])'                                        ShowTitle = dbline[12]'                                        Studio = dbline[13]'                                        IdShow = Xbmc.StringToNumber(dbline[14])'                                        Mpaa = dbline[15]                                    };                  if (episode.FileName.StartsWith("stack://"'StringComparison.OrdinalIgnoreCase))                  {                      var temp = episode.FileName.Split(new[] { " ' " }' StringSplitOptions.None);                      episode.IsStack = 1;                      episode.Hash = Xbmc.Hash(temp[0].Replace("stack://"' ""));                      episode.Thumb = @"special://profile/Thumbnails/Video/" + episode.Hash[0] + "/" + episode.Hash + ".tbn";                      episode.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(episode.Path) + ".tbn";                  }                  else                  {                      episode.IsStack = 0;                      episode.Hash = Xbmc.Hash(episode.Path + episode.FileName);                      episode.Thumb = @"special://profile/Thumbnails/Video/" + episode.Hash[0] + "/" + episode.Hash + ".tbn";                      episode.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(episode.Path) + ".tbn";                  }                  episodes.Add(episode);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetTvEpisodes,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 15)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  dbline[3] = dbline[3].Length > 3 ? dbline[3] : "0.0";                  var episode = new ApiTvEpisode                                    {                                        IdEpisode = Xbmc.StringToNumber(dbline[0])'                                        Title = dbline[1]'                                        Plot = dbline[2]'                                        Rating = dbline[3].Substring(0' 3).Trim('.')'                                        Date = dbline[4]'                                        Director = dbline[5]'                                        Season = Xbmc.StringToNumber(dbline[6])'                                        Episode = Xbmc.StringToNumber(dbline[7])'                                        IdFile = Xbmc.StringToNumber(dbline[8])'                                        FileName = dbline[9]'                                        Path = dbline[10]'                                        PlayCount = Xbmc.StringToNumber(dbline[11])'                                        ShowTitle = dbline[12]'                                        Studio = dbline[13]'                                        IdShow = Xbmc.StringToNumber(dbline[14])'                                        Mpaa = dbline[15]                                    };                  if (episode.FileName.StartsWith("stack://"'StringComparison.OrdinalIgnoreCase))                  {                      var temp = episode.FileName.Split(new[] { " ' " }' StringSplitOptions.None);                      episode.IsStack = 1;                      episode.Hash = Xbmc.Hash(temp[0].Replace("stack://"' ""));                      episode.Thumb = @"special://profile/Thumbnails/Video/" + episode.Hash[0] + "/" + episode.Hash + ".tbn";                      episode.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(episode.Path) + ".tbn";                  }                  else                  {                      episode.IsStack = 0;                      episode.Hash = Xbmc.Hash(episode.Path + episode.FileName);                      episode.Thumb = @"special://profile/Thumbnails/Video/" + episode.Hash[0] + "/" + episode.Hash + ".tbn";                      episode.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(episode.Path) + ".tbn";                  }                  episodes.Add(episode);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetTvEpisodes,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 15)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  dbline[3] = dbline[3].Length > 3 ? dbline[3] : "0.0";                  var episode = new ApiTvEpisode                                    {                                        IdEpisode = Xbmc.StringToNumber(dbline[0])'                                        Title = dbline[1]'                                        Plot = dbline[2]'                                        Rating = dbline[3].Substring(0' 3).Trim('.')'                                        Date = dbline[4]'                                        Director = dbline[5]'                                        Season = Xbmc.StringToNumber(dbline[6])'                                        Episode = Xbmc.StringToNumber(dbline[7])'                                        IdFile = Xbmc.StringToNumber(dbline[8])'                                        FileName = dbline[9]'                                        Path = dbline[10]'                                        PlayCount = Xbmc.StringToNumber(dbline[11])'                                        ShowTitle = dbline[12]'                                        Studio = dbline[13]'                                        IdShow = Xbmc.StringToNumber(dbline[14])'                                        Mpaa = dbline[15]                                    };                  if (episode.FileName.StartsWith("stack://"'StringComparison.OrdinalIgnoreCase))                  {                      var temp = episode.FileName.Split(new[] { " ' " }' StringSplitOptions.None);                      episode.IsStack = 1;                      episode.Hash = Xbmc.Hash(temp[0].Replace("stack://"' ""));                      episode.Thumb = @"special://profile/Thumbnails/Video/" + episode.Hash[0] + "/" + episode.Hash + ".tbn";                      episode.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(episode.Path) + ".tbn";                  }                  else                  {                      episode.IsStack = 0;                      episode.Hash = Xbmc.Hash(episode.Path + episode.FileName);                      episode.Thumb = @"special://profile/Thumbnails/Video/" + episode.Hash[0] + "/" + episode.Hash + ".tbn";                      episode.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(episode.Path) + ".tbn";                  }                  episodes.Add(episode);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetTvEpisodes,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 15)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  dbline[3] = dbline[3].Length > 3 ? dbline[3] : "0.0";                  var episode = new ApiTvEpisode                                    {                                        IdEpisode = Xbmc.StringToNumber(dbline[0])'                                        Title = dbline[1]'                                        Plot = dbline[2]'                                        Rating = dbline[3].Substring(0' 3).Trim('.')'                                        Date = dbline[4]'                                        Director = dbline[5]'                                        Season = Xbmc.StringToNumber(dbline[6])'                                        Episode = Xbmc.StringToNumber(dbline[7])'                                        IdFile = Xbmc.StringToNumber(dbline[8])'                                        FileName = dbline[9]'                                        Path = dbline[10]'                                        PlayCount = Xbmc.StringToNumber(dbline[11])'                                        ShowTitle = dbline[12]'                                        Studio = dbline[13]'                                        IdShow = Xbmc.StringToNumber(dbline[14])'                                        Mpaa = dbline[15]                                    };                  if (episode.FileName.StartsWith("stack://"'StringComparison.OrdinalIgnoreCase))                  {                      var temp = episode.FileName.Split(new[] { " ' " }' StringSplitOptions.None);                      episode.IsStack = 1;                      episode.Hash = Xbmc.Hash(temp[0].Replace("stack://"' ""));                      episode.Thumb = @"special://profile/Thumbnails/Video/" + episode.Hash[0] + "/" + episode.Hash + ".tbn";                      episode.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(episode.Path) + ".tbn";                  }                  else                  {                      episode.IsStack = 0;                      episode.Hash = Xbmc.Hash(episode.Path + episode.FileName);                      episode.Thumb = @"special://profile/Thumbnails/Video/" + episode.Hash[0] + "/" + episode.Hash + ".tbn";                      episode.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(episode.Path) + ".tbn";                  }                  episodes.Add(episode);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetTvShows,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 11)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  dbline[3] = dbline[3].Length > 3 ? dbline[3] : "0.0";                  var show = new ApiTvShow                                 {                                     IdShow = Xbmc.StringToNumber(dbline[0])'                                     Title = dbline[1]'                                     Plot = dbline[2]'                                     Rating = dbline[3].Substring(0' 3).Trim('.')'                                     Premiered = dbline[4]'                                     Genre = dbline[5]'                                     IdScraper = dbline[6]'                                     Mpaa = dbline[7]'                                     Studio = dbline[8]'                                     Path = dbline[9]'                                     TotalCount = Xbmc.StringToNumber(dbline[10])                                 };                  show.Hash = Xbmc.Hash(show.Path);                  show.Thumb = @"special://profile/Thumbnails/Video/" + show.Hash[0] + "/" + show.Hash + ".tbn";                  show.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + show.Hash + ".tbn";                  shows.Add(show);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetTvShows,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 11)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  dbline[3] = dbline[3].Length > 3 ? dbline[3] : "0.0";                  var show = new ApiTvShow                                 {                                     IdShow = Xbmc.StringToNumber(dbline[0])'                                     Title = dbline[1]'                                     Plot = dbline[2]'                                     Rating = dbline[3].Substring(0' 3).Trim('.')'                                     Premiered = dbline[4]'                                     Genre = dbline[5]'                                     IdScraper = dbline[6]'                                     Mpaa = dbline[7]'                                     Studio = dbline[8]'                                     Path = dbline[9]'                                     TotalCount = Xbmc.StringToNumber(dbline[10])                                 };                  show.Hash = Xbmc.Hash(show.Path);                  show.Thumb = @"special://profile/Thumbnails/Video/" + show.Hash[0] + "/" + show.Hash + ".tbn";                  show.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + show.Hash + ".tbn";                  shows.Add(show);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetTvShows,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 11)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  dbline[3] = dbline[3].Length > 3 ? dbline[3] : "0.0";                  var show = new ApiTvShow                                 {                                     IdShow = Xbmc.StringToNumber(dbline[0])'                                     Title = dbline[1]'                                     Plot = dbline[2]'                                     Rating = dbline[3].Substring(0' 3).Trim('.')'                                     Premiered = dbline[4]'                                     Genre = dbline[5]'                                     IdScraper = dbline[6]'                                     Mpaa = dbline[7]'                                     Studio = dbline[8]'                                     Path = dbline[9]'                                     TotalCount = Xbmc.StringToNumber(dbline[10])                                 };                  show.Hash = Xbmc.Hash(show.Path);                  show.Thumb = @"special://profile/Thumbnails/Video/" + show.Hash[0] + "/" + show.Hash + ".tbn";                  show.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + show.Hash + ".tbn";                  shows.Add(show);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetTvShows,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 11)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  dbline[3] = dbline[3].Length > 3 ? dbline[3] : "0.0";                  var show = new ApiTvShow                                 {                                     IdShow = Xbmc.StringToNumber(dbline[0])'                                     Title = dbline[1]'                                     Plot = dbline[2]'                                     Rating = dbline[3].Substring(0' 3).Trim('.')'                                     Premiered = dbline[4]'                                     Genre = dbline[5]'                                     IdScraper = dbline[6]'                                     Mpaa = dbline[7]'                                     Studio = dbline[8]'                                     Path = dbline[9]'                                     TotalCount = Xbmc.StringToNumber(dbline[10])                                 };                  show.Hash = Xbmc.Hash(show.Path);                  show.Thumb = @"special://profile/Thumbnails/Video/" + show.Hash[0] + "/" + show.Hash + ".tbn";                  show.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + show.Hash + ".tbn";                  shows.Add(show);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetTvShows,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 11)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  dbline[3] = dbline[3].Length > 3 ? dbline[3] : "0.0";                  var show = new ApiTvShow                                 {                                     IdShow = Xbmc.StringToNumber(dbline[0])'                                     Title = dbline[1]'                                     Plot = dbline[2]'                                     Rating = dbline[3].Substring(0' 3).Trim('.')'                                     Premiered = dbline[4]'                                     Genre = dbline[5]'                                     IdScraper = dbline[6]'                                     Mpaa = dbline[7]'                                     Studio = dbline[8]'                                     Path = dbline[9]'                                     TotalCount = Xbmc.StringToNumber(dbline[10])                                 };                  show.Hash = Xbmc.Hash(show.Path);                  show.Thumb = @"special://profile/Thumbnails/Video/" + show.Hash[0] + "/" + show.Hash + ".tbn";                  show.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + show.Hash + ".tbn";                  shows.Add(show);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetTvShows,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 11)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  dbline[3] = dbline[3].Length > 3 ? dbline[3] : "0.0";                  var show = new ApiTvShow                                 {                                     IdShow = Xbmc.StringToNumber(dbline[0])'                                     Title = dbline[1]'                                     Plot = dbline[2]'                                     Rating = dbline[3].Substring(0' 3).Trim('.')'                                     Premiered = dbline[4]'                                     Genre = dbline[5]'                                     IdScraper = dbline[6]'                                     Mpaa = dbline[7]'                                     Studio = dbline[8]'                                     Path = dbline[9]'                                     TotalCount = Xbmc.StringToNumber(dbline[10])                                 };                  show.Hash = Xbmc.Hash(show.Path);                  show.Thumb = @"special://profile/Thumbnails/Video/" + show.Hash[0] + "/" + show.Hash + ".tbn";                  show.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + show.Hash + ".tbn";                  shows.Add(show);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetTvShows,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 11)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  dbline[3] = dbline[3].Length > 3 ? dbline[3] : "0.0";                  var show = new ApiTvShow                                 {                                     IdShow = Xbmc.StringToNumber(dbline[0])'                                     Title = dbline[1]'                                     Plot = dbline[2]'                                     Rating = dbline[3].Substring(0' 3).Trim('.')'                                     Premiered = dbline[4]'                                     Genre = dbline[5]'                                     IdScraper = dbline[6]'                                     Mpaa = dbline[7]'                                     Studio = dbline[8]'                                     Path = dbline[9]'                                     TotalCount = Xbmc.StringToNumber(dbline[10])                                 };                  show.Hash = Xbmc.Hash(show.Path);                  show.Thumb = @"special://profile/Thumbnails/Video/" + show.Hash[0] + "/" + show.Hash + ".tbn";                  show.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + show.Hash + ".tbn";                  shows.Add(show);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetTvShows,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 11)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  dbline[3] = dbline[3].Length > 3 ? dbline[3] : "0.0";                  var show = new ApiTvShow                                 {                                     IdShow = Xbmc.StringToNumber(dbline[0])'                                     Title = dbline[1]'                                     Plot = dbline[2]'                                     Rating = dbline[3].Substring(0' 3).Trim('.')'                                     Premiered = dbline[4]'                                     Genre = dbline[5]'                                     IdScraper = dbline[6]'                                     Mpaa = dbline[7]'                                     Studio = dbline[8]'                                     Path = dbline[9]'                                     TotalCount = Xbmc.StringToNumber(dbline[10])                                 };                  show.Hash = Xbmc.Hash(show.Path);                  show.Thumb = @"special://profile/Thumbnails/Video/" + show.Hash[0] + "/" + show.Hash + ".tbn";                  show.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + show.Hash + ".tbn";                  shows.Add(show);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetTvShows,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 11)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  dbline[3] = dbline[3].Length > 3 ? dbline[3] : "0.0";                  var show = new ApiTvShow                                 {                                     IdShow = Xbmc.StringToNumber(dbline[0])'                                     Title = dbline[1]'                                     Plot = dbline[2]'                                     Rating = dbline[3].Substring(0' 3).Trim('.')'                                     Premiered = dbline[4]'                                     Genre = dbline[5]'                                     IdScraper = dbline[6]'                                     Mpaa = dbline[7]'                                     Studio = dbline[8]'                                     Path = dbline[9]'                                     TotalCount = Xbmc.StringToNumber(dbline[10])                                 };                  show.Hash = Xbmc.Hash(show.Path);                  show.Thumb = @"special://profile/Thumbnails/Video/" + show.Hash[0] + "/" + show.Hash + ".tbn";                  show.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + show.Hash + ".tbn";                  shows.Add(show);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetTvShows,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 11)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  dbline[3] = dbline[3].Length > 3 ? dbline[3] : "0.0";                  var show = new ApiTvShow                                 {                                     IdShow = Xbmc.StringToNumber(dbline[0])'                                     Title = dbline[1]'                                     Plot = dbline[2]'                                     Rating = dbline[3].Substring(0' 3).Trim('.')'                                     Premiered = dbline[4]'                                     Genre = dbline[5]'                                     IdScraper = dbline[6]'                                     Mpaa = dbline[7]'                                     Studio = dbline[8]'                                     Path = dbline[9]'                                     TotalCount = Xbmc.StringToNumber(dbline[10])                                 };                  show.Hash = Xbmc.Hash(show.Path);                  show.Thumb = @"special://profile/Thumbnails/Video/" + show.Hash[0] + "/" + show.Hash + ".tbn";                  show.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + show.Hash + ".tbn";                  shows.Add(show);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetTvShows,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 11)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  dbline[3] = dbline[3].Length > 3 ? dbline[3] : "0.0";                  var show = new ApiTvShow                                 {                                     IdShow = Xbmc.StringToNumber(dbline[0])'                                     Title = dbline[1]'                                     Plot = dbline[2]'                                     Rating = dbline[3].Substring(0' 3).Trim('.')'                                     Premiered = dbline[4]'                                     Genre = dbline[5]'                                     IdScraper = dbline[6]'                                     Mpaa = dbline[7]'                                     Studio = dbline[8]'                                     Path = dbline[9]'                                     TotalCount = Xbmc.StringToNumber(dbline[10])                                 };                  show.Hash = Xbmc.Hash(show.Path);                  show.Thumb = @"special://profile/Thumbnails/Video/" + show.Hash[0] + "/" + show.Hash + ".tbn";                  show.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + show.Hash + ".tbn";                  shows.Add(show);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetTvShows,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 11)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  dbline[3] = dbline[3].Length > 3 ? dbline[3] : "0.0";                  var show = new ApiTvShow                                 {                                     IdShow = Xbmc.StringToNumber(dbline[0])'                                     Title = dbline[1]'                                     Plot = dbline[2]'                                     Rating = dbline[3].Substring(0' 3).Trim('.')'                                     Premiered = dbline[4]'                                     Genre = dbline[5]'                                     IdScraper = dbline[6]'                                     Mpaa = dbline[7]'                                     Studio = dbline[8]'                                     Path = dbline[9]'                                     TotalCount = Xbmc.StringToNumber(dbline[10])                                 };                  show.Hash = Xbmc.Hash(show.Path);                  show.Thumb = @"special://profile/Thumbnails/Video/" + show.Hash[0] + "/" + show.Hash + ".tbn";                  show.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + show.Hash + ".tbn";                  shows.Add(show);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetTvShows,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 11)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  dbline[3] = dbline[3].Length > 3 ? dbline[3] : "0.0";                  var show = new ApiTvShow                                 {                                     IdShow = Xbmc.StringToNumber(dbline[0])'                                     Title = dbline[1]'                                     Plot = dbline[2]'                                     Rating = dbline[3].Substring(0' 3).Trim('.')'                                     Premiered = dbline[4]'                                     Genre = dbline[5]'                                     IdScraper = dbline[6]'                                     Mpaa = dbline[7]'                                     Studio = dbline[8]'                                     Path = dbline[9]'                                     TotalCount = Xbmc.StringToNumber(dbline[10])                                 };                  show.Hash = Xbmc.Hash(show.Path);                  show.Thumb = @"special://profile/Thumbnails/Video/" + show.Hash[0] + "/" + show.Hash + ".tbn";                  show.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + show.Hash + ".tbn";                  shows.Add(show);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetTvShows,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 11)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  dbline[3] = dbline[3].Length > 3 ? dbline[3] : "0.0";                  var show = new ApiTvShow                                 {                                     IdShow = Xbmc.StringToNumber(dbline[0])'                                     Title = dbline[1]'                                     Plot = dbline[2]'                                     Rating = dbline[3].Substring(0' 3).Trim('.')'                                     Premiered = dbline[4]'                                     Genre = dbline[5]'                                     IdScraper = dbline[6]'                                     Mpaa = dbline[7]'                                     Studio = dbline[8]'                                     Path = dbline[9]'                                     TotalCount = Xbmc.StringToNumber(dbline[10])                                 };                  show.Hash = Xbmc.Hash(show.Path);                  show.Thumb = @"special://profile/Thumbnails/Video/" + show.Hash[0] + "/" + show.Hash + ".tbn";                  show.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + show.Hash + ".tbn";                  shows.Add(show);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetTvShows,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 11)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  dbline[3] = dbline[3].Length > 3 ? dbline[3] : "0.0";                  var show = new ApiTvShow                                 {                                     IdShow = Xbmc.StringToNumber(dbline[0])'                                     Title = dbline[1]'                                     Plot = dbline[2]'                                     Rating = dbline[3].Substring(0' 3).Trim('.')'                                     Premiered = dbline[4]'                                     Genre = dbline[5]'                                     IdScraper = dbline[6]'                                     Mpaa = dbline[7]'                                     Studio = dbline[8]'                                     Path = dbline[9]'                                     TotalCount = Xbmc.StringToNumber(dbline[10])                                 };                  show.Hash = Xbmc.Hash(show.Path);                  show.Thumb = @"special://profile/Thumbnails/Video/" + show.Hash[0] + "/" + show.Hash + ".tbn";                  show.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + show.Hash + ".tbn";                  shows.Add(show);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetMovies,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 18)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  dbline[4] = dbline[4].Length > 3 ? dbline[4] : "0.0";                  var movie = new ApiMovie                                  {                                      Title = dbline[0]'                                      Plot = dbline[1]'                                      Tagline = dbline[2]'                                      Votes = dbline[3]'                                      Rating = dbline[4].Substring(0' 3).Trim('.')'                                      Year = Xbmc.StringToNumber(dbline[5])'                                      IdScraper = dbline[6]'                                      Length = dbline[7]'                                      Mpaa = dbline[8]'                                      Genre = dbline[9]'                                      Director = dbline[10]'                                      OriginalTitle = dbline[11]'                                      Studio = dbline[12]'                                      IdFile = Xbmc.StringToNumber(dbline[13])'                                      IdMovie = Xbmc.StringToNumber(dbline[14])'                                      FileName = dbline[15]'                                      Path = dbline[16]'                                      PlayCount = Xbmc.StringToNumber(dbline[17])                                  };                    if (movie.FileName.StartsWith("stack://"'StringComparison.OrdinalIgnoreCase))                  {                      var temp = movie.FileName.Split(new[] { " ' " }' StringSplitOptions.None);                      movie.IsStack = 1;                      movie.Hash = Xbmc.Hash(temp[0].Replace("stack://"' ""));                      movie.Thumb = @"special://profile/Thumbnails/Video/" + movie.Hash[0] + "/" + movie.Hash + ".tbn";                      movie.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(movie.FileName) + ".tbn";                  }                  else                  {                      movie.IsStack = 0;                      movie.Hash = Xbmc.Hash(movie.Path + movie.FileName);                      movie.Thumb = @"special://profile/Thumbnails/Video/" + movie.Hash[0] + "/" + movie.Hash + ".tbn";                      movie.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + movie.Hash + ".tbn";                  }                    movies.Add(movie);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetMovies,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 18)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  dbline[4] = dbline[4].Length > 3 ? dbline[4] : "0.0";                  var movie = new ApiMovie                                  {                                      Title = dbline[0]'                                      Plot = dbline[1]'                                      Tagline = dbline[2]'                                      Votes = dbline[3]'                                      Rating = dbline[4].Substring(0' 3).Trim('.')'                                      Year = Xbmc.StringToNumber(dbline[5])'                                      IdScraper = dbline[6]'                                      Length = dbline[7]'                                      Mpaa = dbline[8]'                                      Genre = dbline[9]'                                      Director = dbline[10]'                                      OriginalTitle = dbline[11]'                                      Studio = dbline[12]'                                      IdFile = Xbmc.StringToNumber(dbline[13])'                                      IdMovie = Xbmc.StringToNumber(dbline[14])'                                      FileName = dbline[15]'                                      Path = dbline[16]'                                      PlayCount = Xbmc.StringToNumber(dbline[17])                                  };                    if (movie.FileName.StartsWith("stack://"'StringComparison.OrdinalIgnoreCase))                  {                      var temp = movie.FileName.Split(new[] { " ' " }' StringSplitOptions.None);                      movie.IsStack = 1;                      movie.Hash = Xbmc.Hash(temp[0].Replace("stack://"' ""));                      movie.Thumb = @"special://profile/Thumbnails/Video/" + movie.Hash[0] + "/" + movie.Hash + ".tbn";                      movie.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(movie.FileName) + ".tbn";                  }                  else                  {                      movie.IsStack = 0;                      movie.Hash = Xbmc.Hash(movie.Path + movie.FileName);                      movie.Thumb = @"special://profile/Thumbnails/Video/" + movie.Hash[0] + "/" + movie.Hash + ".tbn";                      movie.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + movie.Hash + ".tbn";                  }                    movies.Add(movie);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetMovies,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 18)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  dbline[4] = dbline[4].Length > 3 ? dbline[4] : "0.0";                  var movie = new ApiMovie                                  {                                      Title = dbline[0]'                                      Plot = dbline[1]'                                      Tagline = dbline[2]'                                      Votes = dbline[3]'                                      Rating = dbline[4].Substring(0' 3).Trim('.')'                                      Year = Xbmc.StringToNumber(dbline[5])'                                      IdScraper = dbline[6]'                                      Length = dbline[7]'                                      Mpaa = dbline[8]'                                      Genre = dbline[9]'                                      Director = dbline[10]'                                      OriginalTitle = dbline[11]'                                      Studio = dbline[12]'                                      IdFile = Xbmc.StringToNumber(dbline[13])'                                      IdMovie = Xbmc.StringToNumber(dbline[14])'                                      FileName = dbline[15]'                                      Path = dbline[16]'                                      PlayCount = Xbmc.StringToNumber(dbline[17])                                  };                    if (movie.FileName.StartsWith("stack://"'StringComparison.OrdinalIgnoreCase))                  {                      var temp = movie.FileName.Split(new[] { " ' " }' StringSplitOptions.None);                      movie.IsStack = 1;                      movie.Hash = Xbmc.Hash(temp[0].Replace("stack://"' ""));                      movie.Thumb = @"special://profile/Thumbnails/Video/" + movie.Hash[0] + "/" + movie.Hash + ".tbn";                      movie.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(movie.FileName) + ".tbn";                  }                  else                  {                      movie.IsStack = 0;                      movie.Hash = Xbmc.Hash(movie.Path + movie.FileName);                      movie.Thumb = @"special://profile/Thumbnails/Video/" + movie.Hash[0] + "/" + movie.Hash + ".tbn";                      movie.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + movie.Hash + ".tbn";                  }                    movies.Add(movie);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetMovies,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 18)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  dbline[4] = dbline[4].Length > 3 ? dbline[4] : "0.0";                  var movie = new ApiMovie                                  {                                      Title = dbline[0]'                                      Plot = dbline[1]'                                      Tagline = dbline[2]'                                      Votes = dbline[3]'                                      Rating = dbline[4].Substring(0' 3).Trim('.')'                                      Year = Xbmc.StringToNumber(dbline[5])'                                      IdScraper = dbline[6]'                                      Length = dbline[7]'                                      Mpaa = dbline[8]'                                      Genre = dbline[9]'                                      Director = dbline[10]'                                      OriginalTitle = dbline[11]'                                      Studio = dbline[12]'                                      IdFile = Xbmc.StringToNumber(dbline[13])'                                      IdMovie = Xbmc.StringToNumber(dbline[14])'                                      FileName = dbline[15]'                                      Path = dbline[16]'                                      PlayCount = Xbmc.StringToNumber(dbline[17])                                  };                    if (movie.FileName.StartsWith("stack://"'StringComparison.OrdinalIgnoreCase))                  {                      var temp = movie.FileName.Split(new[] { " ' " }' StringSplitOptions.None);                      movie.IsStack = 1;                      movie.Hash = Xbmc.Hash(temp[0].Replace("stack://"' ""));                      movie.Thumb = @"special://profile/Thumbnails/Video/" + movie.Hash[0] + "/" + movie.Hash + ".tbn";                      movie.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(movie.FileName) + ".tbn";                  }                  else                  {                      movie.IsStack = 0;                      movie.Hash = Xbmc.Hash(movie.Path + movie.FileName);                      movie.Thumb = @"special://profile/Thumbnails/Video/" + movie.Hash[0] + "/" + movie.Hash + ".tbn";                      movie.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + movie.Hash + ".tbn";                  }                    movies.Add(movie);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetMovies,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 18)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  dbline[4] = dbline[4].Length > 3 ? dbline[4] : "0.0";                  var movie = new ApiMovie                                  {                                      Title = dbline[0]'                                      Plot = dbline[1]'                                      Tagline = dbline[2]'                                      Votes = dbline[3]'                                      Rating = dbline[4].Substring(0' 3).Trim('.')'                                      Year = Xbmc.StringToNumber(dbline[5])'                                      IdScraper = dbline[6]'                                      Length = dbline[7]'                                      Mpaa = dbline[8]'                                      Genre = dbline[9]'                                      Director = dbline[10]'                                      OriginalTitle = dbline[11]'                                      Studio = dbline[12]'                                      IdFile = Xbmc.StringToNumber(dbline[13])'                                      IdMovie = Xbmc.StringToNumber(dbline[14])'                                      FileName = dbline[15]'                                      Path = dbline[16]'                                      PlayCount = Xbmc.StringToNumber(dbline[17])                                  };                    if (movie.FileName.StartsWith("stack://"'StringComparison.OrdinalIgnoreCase))                  {                      var temp = movie.FileName.Split(new[] { " ' " }' StringSplitOptions.None);                      movie.IsStack = 1;                      movie.Hash = Xbmc.Hash(temp[0].Replace("stack://"' ""));                      movie.Thumb = @"special://profile/Thumbnails/Video/" + movie.Hash[0] + "/" + movie.Hash + ".tbn";                      movie.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(movie.FileName) + ".tbn";                  }                  else                  {                      movie.IsStack = 0;                      movie.Hash = Xbmc.Hash(movie.Path + movie.FileName);                      movie.Thumb = @"special://profile/Thumbnails/Video/" + movie.Hash[0] + "/" + movie.Hash + ".tbn";                      movie.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + movie.Hash + ".tbn";                  }                    movies.Add(movie);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetMovies,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 18)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  dbline[4] = dbline[4].Length > 3 ? dbline[4] : "0.0";                  var movie = new ApiMovie                                  {                                      Title = dbline[0]'                                      Plot = dbline[1]'                                      Tagline = dbline[2]'                                      Votes = dbline[3]'                                      Rating = dbline[4].Substring(0' 3).Trim('.')'                                      Year = Xbmc.StringToNumber(dbline[5])'                                      IdScraper = dbline[6]'                                      Length = dbline[7]'                                      Mpaa = dbline[8]'                                      Genre = dbline[9]'                                      Director = dbline[10]'                                      OriginalTitle = dbline[11]'                                      Studio = dbline[12]'                                      IdFile = Xbmc.StringToNumber(dbline[13])'                                      IdMovie = Xbmc.StringToNumber(dbline[14])'                                      FileName = dbline[15]'                                      Path = dbline[16]'                                      PlayCount = Xbmc.StringToNumber(dbline[17])                                  };                    if (movie.FileName.StartsWith("stack://"'StringComparison.OrdinalIgnoreCase))                  {                      var temp = movie.FileName.Split(new[] { " ' " }' StringSplitOptions.None);                      movie.IsStack = 1;                      movie.Hash = Xbmc.Hash(temp[0].Replace("stack://"' ""));                      movie.Thumb = @"special://profile/Thumbnails/Video/" + movie.Hash[0] + "/" + movie.Hash + ".tbn";                      movie.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(movie.FileName) + ".tbn";                  }                  else                  {                      movie.IsStack = 0;                      movie.Hash = Xbmc.Hash(movie.Path + movie.FileName);                      movie.Thumb = @"special://profile/Thumbnails/Video/" + movie.Hash[0] + "/" + movie.Hash + ".tbn";                      movie.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + movie.Hash + ".tbn";                  }                    movies.Add(movie);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetMovies,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 18)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  dbline[4] = dbline[4].Length > 3 ? dbline[4] : "0.0";                  var movie = new ApiMovie                                  {                                      Title = dbline[0]'                                      Plot = dbline[1]'                                      Tagline = dbline[2]'                                      Votes = dbline[3]'                                      Rating = dbline[4].Substring(0' 3).Trim('.')'                                      Year = Xbmc.StringToNumber(dbline[5])'                                      IdScraper = dbline[6]'                                      Length = dbline[7]'                                      Mpaa = dbline[8]'                                      Genre = dbline[9]'                                      Director = dbline[10]'                                      OriginalTitle = dbline[11]'                                      Studio = dbline[12]'                                      IdFile = Xbmc.StringToNumber(dbline[13])'                                      IdMovie = Xbmc.StringToNumber(dbline[14])'                                      FileName = dbline[15]'                                      Path = dbline[16]'                                      PlayCount = Xbmc.StringToNumber(dbline[17])                                  };                    if (movie.FileName.StartsWith("stack://"'StringComparison.OrdinalIgnoreCase))                  {                      var temp = movie.FileName.Split(new[] { " ' " }' StringSplitOptions.None);                      movie.IsStack = 1;                      movie.Hash = Xbmc.Hash(temp[0].Replace("stack://"' ""));                      movie.Thumb = @"special://profile/Thumbnails/Video/" + movie.Hash[0] + "/" + movie.Hash + ".tbn";                      movie.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(movie.FileName) + ".tbn";                  }                  else                  {                      movie.IsStack = 0;                      movie.Hash = Xbmc.Hash(movie.Path + movie.FileName);                      movie.Thumb = @"special://profile/Thumbnails/Video/" + movie.Hash[0] + "/" + movie.Hash + ".tbn";                      movie.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + movie.Hash + ".tbn";                  }                    movies.Add(movie);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetMovies,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 18)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  dbline[4] = dbline[4].Length > 3 ? dbline[4] : "0.0";                  var movie = new ApiMovie                                  {                                      Title = dbline[0]'                                      Plot = dbline[1]'                                      Tagline = dbline[2]'                                      Votes = dbline[3]'                                      Rating = dbline[4].Substring(0' 3).Trim('.')'                                      Year = Xbmc.StringToNumber(dbline[5])'                                      IdScraper = dbline[6]'                                      Length = dbline[7]'                                      Mpaa = dbline[8]'                                      Genre = dbline[9]'                                      Director = dbline[10]'                                      OriginalTitle = dbline[11]'                                      Studio = dbline[12]'                                      IdFile = Xbmc.StringToNumber(dbline[13])'                                      IdMovie = Xbmc.StringToNumber(dbline[14])'                                      FileName = dbline[15]'                                      Path = dbline[16]'                                      PlayCount = Xbmc.StringToNumber(dbline[17])                                  };                    if (movie.FileName.StartsWith("stack://"'StringComparison.OrdinalIgnoreCase))                  {                      var temp = movie.FileName.Split(new[] { " ' " }' StringSplitOptions.None);                      movie.IsStack = 1;                      movie.Hash = Xbmc.Hash(temp[0].Replace("stack://"' ""));                      movie.Thumb = @"special://profile/Thumbnails/Video/" + movie.Hash[0] + "/" + movie.Hash + ".tbn";                      movie.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(movie.FileName) + ".tbn";                  }                  else                  {                      movie.IsStack = 0;                      movie.Hash = Xbmc.Hash(movie.Path + movie.FileName);                      movie.Thumb = @"special://profile/Thumbnails/Video/" + movie.Hash[0] + "/" + movie.Hash + ".tbn";                      movie.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + movie.Hash + ".tbn";                  }                    movies.Add(movie);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetMovies,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 18)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  dbline[4] = dbline[4].Length > 3 ? dbline[4] : "0.0";                  var movie = new ApiMovie                                  {                                      Title = dbline[0]'                                      Plot = dbline[1]'                                      Tagline = dbline[2]'                                      Votes = dbline[3]'                                      Rating = dbline[4].Substring(0' 3).Trim('.')'                                      Year = Xbmc.StringToNumber(dbline[5])'                                      IdScraper = dbline[6]'                                      Length = dbline[7]'                                      Mpaa = dbline[8]'                                      Genre = dbline[9]'                                      Director = dbline[10]'                                      OriginalTitle = dbline[11]'                                      Studio = dbline[12]'                                      IdFile = Xbmc.StringToNumber(dbline[13])'                                      IdMovie = Xbmc.StringToNumber(dbline[14])'                                      FileName = dbline[15]'                                      Path = dbline[16]'                                      PlayCount = Xbmc.StringToNumber(dbline[17])                                  };                    if (movie.FileName.StartsWith("stack://"'StringComparison.OrdinalIgnoreCase))                  {                      var temp = movie.FileName.Split(new[] { " ' " }' StringSplitOptions.None);                      movie.IsStack = 1;                      movie.Hash = Xbmc.Hash(temp[0].Replace("stack://"' ""));                      movie.Thumb = @"special://profile/Thumbnails/Video/" + movie.Hash[0] + "/" + movie.Hash + ".tbn";                      movie.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(movie.FileName) + ".tbn";                  }                  else                  {                      movie.IsStack = 0;                      movie.Hash = Xbmc.Hash(movie.Path + movie.FileName);                      movie.Thumb = @"special://profile/Thumbnails/Video/" + movie.Hash[0] + "/" + movie.Hash + ".tbn";                      movie.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + movie.Hash + ".tbn";                  }                    movies.Add(movie);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetMovies,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 18)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  dbline[4] = dbline[4].Length > 3 ? dbline[4] : "0.0";                  var movie = new ApiMovie                                  {                                      Title = dbline[0]'                                      Plot = dbline[1]'                                      Tagline = dbline[2]'                                      Votes = dbline[3]'                                      Rating = dbline[4].Substring(0' 3).Trim('.')'                                      Year = Xbmc.StringToNumber(dbline[5])'                                      IdScraper = dbline[6]'                                      Length = dbline[7]'                                      Mpaa = dbline[8]'                                      Genre = dbline[9]'                                      Director = dbline[10]'                                      OriginalTitle = dbline[11]'                                      Studio = dbline[12]'                                      IdFile = Xbmc.StringToNumber(dbline[13])'                                      IdMovie = Xbmc.StringToNumber(dbline[14])'                                      FileName = dbline[15]'                                      Path = dbline[16]'                                      PlayCount = Xbmc.StringToNumber(dbline[17])                                  };                    if (movie.FileName.StartsWith("stack://"'StringComparison.OrdinalIgnoreCase))                  {                      var temp = movie.FileName.Split(new[] { " ' " }' StringSplitOptions.None);                      movie.IsStack = 1;                      movie.Hash = Xbmc.Hash(temp[0].Replace("stack://"' ""));                      movie.Thumb = @"special://profile/Thumbnails/Video/" + movie.Hash[0] + "/" + movie.Hash + ".tbn";                      movie.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(movie.FileName) + ".tbn";                  }                  else                  {                      movie.IsStack = 0;                      movie.Hash = Xbmc.Hash(movie.Path + movie.FileName);                      movie.Thumb = @"special://profile/Thumbnails/Video/" + movie.Hash[0] + "/" + movie.Hash + ".tbn";                      movie.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + movie.Hash + ".tbn";                  }                    movies.Add(movie);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetMovies,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 18)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  dbline[4] = dbline[4].Length > 3 ? dbline[4] : "0.0";                  var movie = new ApiMovie                                  {                                      Title = dbline[0]'                                      Plot = dbline[1]'                                      Tagline = dbline[2]'                                      Votes = dbline[3]'                                      Rating = dbline[4].Substring(0' 3).Trim('.')'                                      Year = Xbmc.StringToNumber(dbline[5])'                                      IdScraper = dbline[6]'                                      Length = dbline[7]'                                      Mpaa = dbline[8]'                                      Genre = dbline[9]'                                      Director = dbline[10]'                                      OriginalTitle = dbline[11]'                                      Studio = dbline[12]'                                      IdFile = Xbmc.StringToNumber(dbline[13])'                                      IdMovie = Xbmc.StringToNumber(dbline[14])'                                      FileName = dbline[15]'                                      Path = dbline[16]'                                      PlayCount = Xbmc.StringToNumber(dbline[17])                                  };                    if (movie.FileName.StartsWith("stack://"'StringComparison.OrdinalIgnoreCase))                  {                      var temp = movie.FileName.Split(new[] { " ' " }' StringSplitOptions.None);                      movie.IsStack = 1;                      movie.Hash = Xbmc.Hash(temp[0].Replace("stack://"' ""));                      movie.Thumb = @"special://profile/Thumbnails/Video/" + movie.Hash[0] + "/" + movie.Hash + ".tbn";                      movie.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(movie.FileName) + ".tbn";                  }                  else                  {                      movie.IsStack = 0;                      movie.Hash = Xbmc.Hash(movie.Path + movie.FileName);                      movie.Thumb = @"special://profile/Thumbnails/Video/" + movie.Hash[0] + "/" + movie.Hash + ".tbn";                      movie.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + movie.Hash + ".tbn";                  }                    movies.Add(movie);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetMovies,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 18)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  dbline[4] = dbline[4].Length > 3 ? dbline[4] : "0.0";                  var movie = new ApiMovie                                  {                                      Title = dbline[0]'                                      Plot = dbline[1]'                                      Tagline = dbline[2]'                                      Votes = dbline[3]'                                      Rating = dbline[4].Substring(0' 3).Trim('.')'                                      Year = Xbmc.StringToNumber(dbline[5])'                                      IdScraper = dbline[6]'                                      Length = dbline[7]'                                      Mpaa = dbline[8]'                                      Genre = dbline[9]'                                      Director = dbline[10]'                                      OriginalTitle = dbline[11]'                                      Studio = dbline[12]'                                      IdFile = Xbmc.StringToNumber(dbline[13])'                                      IdMovie = Xbmc.StringToNumber(dbline[14])'                                      FileName = dbline[15]'                                      Path = dbline[16]'                                      PlayCount = Xbmc.StringToNumber(dbline[17])                                  };                    if (movie.FileName.StartsWith("stack://"'StringComparison.OrdinalIgnoreCase))                  {                      var temp = movie.FileName.Split(new[] { " ' " }' StringSplitOptions.None);                      movie.IsStack = 1;                      movie.Hash = Xbmc.Hash(temp[0].Replace("stack://"' ""));                      movie.Thumb = @"special://profile/Thumbnails/Video/" + movie.Hash[0] + "/" + movie.Hash + ".tbn";                      movie.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(movie.FileName) + ".tbn";                  }                  else                  {                      movie.IsStack = 0;                      movie.Hash = Xbmc.Hash(movie.Path + movie.FileName);                      movie.Thumb = @"special://profile/Thumbnails/Video/" + movie.Hash[0] + "/" + movie.Hash + ".tbn";                      movie.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + movie.Hash + ".tbn";                  }                    movies.Add(movie);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetMovies,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 18)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  dbline[4] = dbline[4].Length > 3 ? dbline[4] : "0.0";                  var movie = new ApiMovie                                  {                                      Title = dbline[0]'                                      Plot = dbline[1]'                                      Tagline = dbline[2]'                                      Votes = dbline[3]'                                      Rating = dbline[4].Substring(0' 3).Trim('.')'                                      Year = Xbmc.StringToNumber(dbline[5])'                                      IdScraper = dbline[6]'                                      Length = dbline[7]'                                      Mpaa = dbline[8]'                                      Genre = dbline[9]'                                      Director = dbline[10]'                                      OriginalTitle = dbline[11]'                                      Studio = dbline[12]'                                      IdFile = Xbmc.StringToNumber(dbline[13])'                                      IdMovie = Xbmc.StringToNumber(dbline[14])'                                      FileName = dbline[15]'                                      Path = dbline[16]'                                      PlayCount = Xbmc.StringToNumber(dbline[17])                                  };                    if (movie.FileName.StartsWith("stack://"'StringComparison.OrdinalIgnoreCase))                  {                      var temp = movie.FileName.Split(new[] { " ' " }' StringSplitOptions.None);                      movie.IsStack = 1;                      movie.Hash = Xbmc.Hash(temp[0].Replace("stack://"' ""));                      movie.Thumb = @"special://profile/Thumbnails/Video/" + movie.Hash[0] + "/" + movie.Hash + ".tbn";                      movie.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(movie.FileName) + ".tbn";                  }                  else                  {                      movie.IsStack = 0;                      movie.Hash = Xbmc.Hash(movie.Path + movie.FileName);                      movie.Thumb = @"special://profile/Thumbnails/Video/" + movie.Hash[0] + "/" + movie.Hash + ".tbn";                      movie.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + movie.Hash + ".tbn";                  }                    movies.Add(movie);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetMovies,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 18)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  dbline[4] = dbline[4].Length > 3 ? dbline[4] : "0.0";                  var movie = new ApiMovie                                  {                                      Title = dbline[0]'                                      Plot = dbline[1]'                                      Tagline = dbline[2]'                                      Votes = dbline[3]'                                      Rating = dbline[4].Substring(0' 3).Trim('.')'                                      Year = Xbmc.StringToNumber(dbline[5])'                                      IdScraper = dbline[6]'                                      Length = dbline[7]'                                      Mpaa = dbline[8]'                                      Genre = dbline[9]'                                      Director = dbline[10]'                                      OriginalTitle = dbline[11]'                                      Studio = dbline[12]'                                      IdFile = Xbmc.StringToNumber(dbline[13])'                                      IdMovie = Xbmc.StringToNumber(dbline[14])'                                      FileName = dbline[15]'                                      Path = dbline[16]'                                      PlayCount = Xbmc.StringToNumber(dbline[17])                                  };                    if (movie.FileName.StartsWith("stack://"'StringComparison.OrdinalIgnoreCase))                  {                      var temp = movie.FileName.Split(new[] { " ' " }' StringSplitOptions.None);                      movie.IsStack = 1;                      movie.Hash = Xbmc.Hash(temp[0].Replace("stack://"' ""));                      movie.Thumb = @"special://profile/Thumbnails/Video/" + movie.Hash[0] + "/" + movie.Hash + ".tbn";                      movie.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(movie.FileName) + ".tbn";                  }                  else                  {                      movie.IsStack = 0;                      movie.Hash = Xbmc.Hash(movie.Path + movie.FileName);                      movie.Thumb = @"special://profile/Thumbnails/Video/" + movie.Hash[0] + "/" + movie.Hash + ".tbn";                      movie.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + movie.Hash + ".tbn";                  }                    movies.Add(movie);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetMovies,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 18)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  dbline[4] = dbline[4].Length > 3 ? dbline[4] : "0.0";                  var movie = new ApiMovie                                  {                                      Title = dbline[0]'                                      Plot = dbline[1]'                                      Tagline = dbline[2]'                                      Votes = dbline[3]'                                      Rating = dbline[4].Substring(0' 3).Trim('.')'                                      Year = Xbmc.StringToNumber(dbline[5])'                                      IdScraper = dbline[6]'                                      Length = dbline[7]'                                      Mpaa = dbline[8]'                                      Genre = dbline[9]'                                      Director = dbline[10]'                                      OriginalTitle = dbline[11]'                                      Studio = dbline[12]'                                      IdFile = Xbmc.StringToNumber(dbline[13])'                                      IdMovie = Xbmc.StringToNumber(dbline[14])'                                      FileName = dbline[15]'                                      Path = dbline[16]'                                      PlayCount = Xbmc.StringToNumber(dbline[17])                                  };                    if (movie.FileName.StartsWith("stack://"'StringComparison.OrdinalIgnoreCase))                  {                      var temp = movie.FileName.Split(new[] { " ' " }' StringSplitOptions.None);                      movie.IsStack = 1;                      movie.Hash = Xbmc.Hash(temp[0].Replace("stack://"' ""));                      movie.Thumb = @"special://profile/Thumbnails/Video/" + movie.Hash[0] + "/" + movie.Hash + ".tbn";                      movie.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(movie.FileName) + ".tbn";                  }                  else                  {                      movie.IsStack = 0;                      movie.Hash = Xbmc.Hash(movie.Path + movie.FileName);                      movie.Thumb = @"special://profile/Thumbnails/Video/" + movie.Hash[0] + "/" + movie.Hash + ".tbn";                      movie.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + movie.Hash + ".tbn";                  }                    movies.Add(movie);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetMovies,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 18)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  dbline[4] = dbline[4].Length > 3 ? dbline[4] : "0.0";                  var movie = new ApiMovie                                  {                                      Title = dbline[0]'                                      Plot = dbline[1]'                                      Tagline = dbline[2]'                                      Votes = dbline[3]'                                      Rating = dbline[4].Substring(0' 3).Trim('.')'                                      Year = Xbmc.StringToNumber(dbline[5])'                                      IdScraper = dbline[6]'                                      Length = dbline[7]'                                      Mpaa = dbline[8]'                                      Genre = dbline[9]'                                      Director = dbline[10]'                                      OriginalTitle = dbline[11]'                                      Studio = dbline[12]'                                      IdFile = Xbmc.StringToNumber(dbline[13])'                                      IdMovie = Xbmc.StringToNumber(dbline[14])'                                      FileName = dbline[15]'                                      Path = dbline[16]'                                      PlayCount = Xbmc.StringToNumber(dbline[17])                                  };                    if (movie.FileName.StartsWith("stack://"'StringComparison.OrdinalIgnoreCase))                  {                      var temp = movie.FileName.Split(new[] { " ' " }' StringSplitOptions.None);                      movie.IsStack = 1;                      movie.Hash = Xbmc.Hash(temp[0].Replace("stack://"' ""));                      movie.Thumb = @"special://profile/Thumbnails/Video/" + movie.Hash[0] + "/" + movie.Hash + ".tbn";                      movie.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(movie.FileName) + ".tbn";                  }                  else                  {                      movie.IsStack = 0;                      movie.Hash = Xbmc.Hash(movie.Path + movie.FileName);                      movie.Thumb = @"special://profile/Thumbnails/Video/" + movie.Hash[0] + "/" + movie.Hash + ".tbn";                      movie.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + movie.Hash + ".tbn";                  }                    movies.Add(movie);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetMovies,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 18)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  dbline[4] = dbline[4].Length > 3 ? dbline[4] : "0.0";                  var movie = new ApiMovie                                  {                                      Title = dbline[0]'                                      Plot = dbline[1]'                                      Tagline = dbline[2]'                                      Votes = dbline[3]'                                      Rating = dbline[4].Substring(0' 3).Trim('.')'                                      Year = Xbmc.StringToNumber(dbline[5])'                                      IdScraper = dbline[6]'                                      Length = dbline[7]'                                      Mpaa = dbline[8]'                                      Genre = dbline[9]'                                      Director = dbline[10]'                                      OriginalTitle = dbline[11]'                                      Studio = dbline[12]'                                      IdFile = Xbmc.StringToNumber(dbline[13])'                                      IdMovie = Xbmc.StringToNumber(dbline[14])'                                      FileName = dbline[15]'                                      Path = dbline[16]'                                      PlayCount = Xbmc.StringToNumber(dbline[17])                                  };                    if (movie.FileName.StartsWith("stack://"'StringComparison.OrdinalIgnoreCase))                  {                      var temp = movie.FileName.Split(new[] { " ' " }' StringSplitOptions.None);                      movie.IsStack = 1;                      movie.Hash = Xbmc.Hash(temp[0].Replace("stack://"' ""));                      movie.Thumb = @"special://profile/Thumbnails/Video/" + movie.Hash[0] + "/" + movie.Hash + ".tbn";                      movie.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(movie.FileName) + ".tbn";                  }                  else                  {                      movie.IsStack = 0;                      movie.Hash = Xbmc.Hash(movie.Path + movie.FileName);                      movie.Thumb = @"special://profile/Thumbnails/Video/" + movie.Hash[0] + "/" + movie.Hash + ".tbn";                      movie.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + movie.Hash + ".tbn";                  }                    movies.Add(movie);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetMovies,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 18)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  dbline[4] = dbline[4].Length > 3 ? dbline[4] : "0.0";                  var movie = new ApiMovie                                  {                                      Title = dbline[0]'                                      Plot = dbline[1]'                                      Tagline = dbline[2]'                                      Votes = dbline[3]'                                      Rating = dbline[4].Substring(0' 3).Trim('.')'                                      Year = Xbmc.StringToNumber(dbline[5])'                                      IdScraper = dbline[6]'                                      Length = dbline[7]'                                      Mpaa = dbline[8]'                                      Genre = dbline[9]'                                      Director = dbline[10]'                                      OriginalTitle = dbline[11]'                                      Studio = dbline[12]'                                      IdFile = Xbmc.StringToNumber(dbline[13])'                                      IdMovie = Xbmc.StringToNumber(dbline[14])'                                      FileName = dbline[15]'                                      Path = dbline[16]'                                      PlayCount = Xbmc.StringToNumber(dbline[17])                                  };                    if (movie.FileName.StartsWith("stack://"'StringComparison.OrdinalIgnoreCase))                  {                      var temp = movie.FileName.Split(new[] { " ' " }' StringSplitOptions.None);                      movie.IsStack = 1;                      movie.Hash = Xbmc.Hash(temp[0].Replace("stack://"' ""));                      movie.Thumb = @"special://profile/Thumbnails/Video/" + movie.Hash[0] + "/" + movie.Hash + ".tbn";                      movie.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(movie.FileName) + ".tbn";                  }                  else                  {                      movie.IsStack = 0;                      movie.Hash = Xbmc.Hash(movie.Path + movie.FileName);                      movie.Thumb = @"special://profile/Thumbnails/Video/" + movie.Hash[0] + "/" + movie.Hash + ".tbn";                      movie.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + movie.Hash + ".tbn";                  }                    movies.Add(movie);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetMovies,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 18)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  dbline[4] = dbline[4].Length > 3 ? dbline[4] : "0.0";                  var movie = new ApiMovie                                  {                                      Title = dbline[0]'                                      Plot = dbline[1]'                                      Tagline = dbline[2]'                                      Votes = dbline[3]'                                      Rating = dbline[4].Substring(0' 3).Trim('.')'                                      Year = Xbmc.StringToNumber(dbline[5])'                                      IdScraper = dbline[6]'                                      Length = dbline[7]'                                      Mpaa = dbline[8]'                                      Genre = dbline[9]'                                      Director = dbline[10]'                                      OriginalTitle = dbline[11]'                                      Studio = dbline[12]'                                      IdFile = Xbmc.StringToNumber(dbline[13])'                                      IdMovie = Xbmc.StringToNumber(dbline[14])'                                      FileName = dbline[15]'                                      Path = dbline[16]'                                      PlayCount = Xbmc.StringToNumber(dbline[17])                                  };                    if (movie.FileName.StartsWith("stack://"'StringComparison.OrdinalIgnoreCase))                  {                      var temp = movie.FileName.Split(new[] { " ' " }' StringSplitOptions.None);                      movie.IsStack = 1;                      movie.Hash = Xbmc.Hash(temp[0].Replace("stack://"' ""));                      movie.Thumb = @"special://profile/Thumbnails/Video/" + movie.Hash[0] + "/" + movie.Hash + ".tbn";                      movie.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(movie.FileName) + ".tbn";                  }                  else                  {                      movie.IsStack = 0;                      movie.Hash = Xbmc.Hash(movie.Path + movie.FileName);                      movie.Thumb = @"special://profile/Thumbnails/Video/" + movie.Hash[0] + "/" + movie.Hash + ".tbn";                      movie.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + movie.Hash + ".tbn";                  }                    movies.Add(movie);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetMovies,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 18)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  dbline[4] = dbline[4].Length > 3 ? dbline[4] : "0.0";                  var movie = new ApiMovie                                  {                                      Title = dbline[0]'                                      Plot = dbline[1]'                                      Tagline = dbline[2]'                                      Votes = dbline[3]'                                      Rating = dbline[4].Substring(0' 3).Trim('.')'                                      Year = Xbmc.StringToNumber(dbline[5])'                                      IdScraper = dbline[6]'                                      Length = dbline[7]'                                      Mpaa = dbline[8]'                                      Genre = dbline[9]'                                      Director = dbline[10]'                                      OriginalTitle = dbline[11]'                                      Studio = dbline[12]'                                      IdFile = Xbmc.StringToNumber(dbline[13])'                                      IdMovie = Xbmc.StringToNumber(dbline[14])'                                      FileName = dbline[15]'                                      Path = dbline[16]'                                      PlayCount = Xbmc.StringToNumber(dbline[17])                                  };                    if (movie.FileName.StartsWith("stack://"'StringComparison.OrdinalIgnoreCase))                  {                      var temp = movie.FileName.Split(new[] { " ' " }' StringSplitOptions.None);                      movie.IsStack = 1;                      movie.Hash = Xbmc.Hash(temp[0].Replace("stack://"' ""));                      movie.Thumb = @"special://profile/Thumbnails/Video/" + movie.Hash[0] + "/" + movie.Hash + ".tbn";                      movie.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(movie.FileName) + ".tbn";                  }                  else                  {                      movie.IsStack = 0;                      movie.Hash = Xbmc.Hash(movie.Path + movie.FileName);                      movie.Thumb = @"special://profile/Thumbnails/Video/" + movie.Hash[0] + "/" + movie.Hash + ".tbn";                      movie.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + movie.Hash + ".tbn";                  }                    movies.Add(movie);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetMovies,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 18)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  dbline[4] = dbline[4].Length > 3 ? dbline[4] : "0.0";                  var movie = new ApiMovie                                  {                                      Title = dbline[0]'                                      Plot = dbline[1]'                                      Tagline = dbline[2]'                                      Votes = dbline[3]'                                      Rating = dbline[4].Substring(0' 3).Trim('.')'                                      Year = Xbmc.StringToNumber(dbline[5])'                                      IdScraper = dbline[6]'                                      Length = dbline[7]'                                      Mpaa = dbline[8]'                                      Genre = dbline[9]'                                      Director = dbline[10]'                                      OriginalTitle = dbline[11]'                                      Studio = dbline[12]'                                      IdFile = Xbmc.StringToNumber(dbline[13])'                                      IdMovie = Xbmc.StringToNumber(dbline[14])'                                      FileName = dbline[15]'                                      Path = dbline[16]'                                      PlayCount = Xbmc.StringToNumber(dbline[17])                                  };                    if (movie.FileName.StartsWith("stack://"'StringComparison.OrdinalIgnoreCase))                  {                      var temp = movie.FileName.Split(new[] { " ' " }' StringSplitOptions.None);                      movie.IsStack = 1;                      movie.Hash = Xbmc.Hash(temp[0].Replace("stack://"' ""));                      movie.Thumb = @"special://profile/Thumbnails/Video/" + movie.Hash[0] + "/" + movie.Hash + ".tbn";                      movie.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(movie.FileName) + ".tbn";                  }                  else                  {                      movie.IsStack = 0;                      movie.Hash = Xbmc.Hash(movie.Path + movie.FileName);                      movie.Thumb = @"special://profile/Thumbnails/Video/" + movie.Hash[0] + "/" + movie.Hash + ".tbn";                      movie.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + movie.Hash + ".tbn";                  }                    movies.Add(movie);              }
Magic Number,Remote.XBMC.Dharma.Api,XbmcVideoLibrary,C:\repos\Tolriq_Yatse2\Yatse2\Plugins\Remote.XBMC.Dharma\Api\Xbmc.VideoLibrary.cs,GetMovies,The following statement contains a magic number: foreach (var dbline in dblines)              {                  if (dbline.Length < 18)                  {                      _parent.Log("Invalid request DATA : " + dbline);                      continue;                  }                  dbline[4] = dbline[4].Length > 3 ? dbline[4] : "0.0";                  var movie = new ApiMovie                                  {                                      Title = dbline[0]'                                      Plot = dbline[1]'                                      Tagline = dbline[2]'                                      Votes = dbline[3]'                                      Rating = dbline[4].Substring(0' 3).Trim('.')'                                      Year = Xbmc.StringToNumber(dbline[5])'                                      IdScraper = dbline[6]'                                      Length = dbline[7]'                                      Mpaa = dbline[8]'                                      Genre = dbline[9]'                                      Director = dbline[10]'                                      OriginalTitle = dbline[11]'                                      Studio = dbline[12]'                                      IdFile = Xbmc.StringToNumber(dbline[13])'                                      IdMovie = Xbmc.StringToNumber(dbline[14])'                                      FileName = dbline[15]'                                      Path = dbline[16]'                                      PlayCount = Xbmc.StringToNumber(dbline[17])                                  };                    if (movie.FileName.StartsWith("stack://"'StringComparison.OrdinalIgnoreCase))                  {                      var temp = movie.FileName.Split(new[] { " ' " }' StringSplitOptions.None);                      movie.IsStack = 1;                      movie.Hash = Xbmc.Hash(temp[0].Replace("stack://"' ""));                      movie.Thumb = @"special://profile/Thumbnails/Video/" + movie.Hash[0] + "/" + movie.Hash + ".tbn";                      movie.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + Xbmc.Hash(movie.FileName) + ".tbn";                  }                  else                  {                      movie.IsStack = 0;                      movie.Hash = Xbmc.Hash(movie.Path + movie.FileName);                      movie.Thumb = @"special://profile/Thumbnails/Video/" + movie.Hash[0] + "/" + movie.Hash + ".tbn";                      movie.Fanart = @"special://profile/Thumbnails/Video/Fanart/" + movie.Hash + ".tbn";                  }                    movies.Add(movie);              }
