Implementation smell,Namespace,Class,File,Method,Description
Long Method,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,UpdateCurrently,The method has 100 lines of code.
Long Method,Yatse2.Classes,Yatse2DB,C:\repos\Tolriq_Yatse2\Yatse2\Classes\Yatse2Db.cs,CreateDatabase,The method has 190 lines of code.
Complex Method,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,PositionScreen,Cyclomatic complexity of the method is 8
Complex Method,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,CheckUpdate,Cyclomatic complexity of the method is 8
Complex Method,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,Timer_Tick,Cyclomatic complexity of the method is 10
Complex Method,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,Change_Display_Settings,Cyclomatic complexity of the method is 8
Complex Method,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,UpdateRemote,Cyclomatic complexity of the method is 13
Complex Method,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,btn_Home_Settings_Click,Cyclomatic complexity of the method is 8
Complex Method,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,GetSettingsVars,Cyclomatic complexity of the method is 8
Long Parameter List,Yatse2.Libs,OSInfo,C:\repos\Tolriq_Yatse2\Yatse2\Libs\OSVersion.cs,GetProductInfo,The method has 5 parameters. Parameters: osMajorVersion' osMinorVersion' spMajorVersion' spMinorVersion' edition
Long Parameter List,Yatse2.Libs,NativeMethods,C:\repos\Tolriq_Yatse2\Yatse2\Libs\OSVersion.cs,ChangeDisplaySettingsEx,The method has 5 parameters. Parameters: devName' devMode' hwnd' dwFlags' lParam
Long Identifier,Yatse2.Libs,OSInfo,C:\repos\Tolriq_Yatse2\Yatse2\Libs\OSVersion.cs,,The length of the parameter PRODUCT_DATACENTER_SERVER_CORE is 30.
Long Identifier,Yatse2.Libs,OSInfo,C:\repos\Tolriq_Yatse2\Yatse2\Libs\OSVersion.cs,,The length of the parameter PRODUCT_ENTERPRISE_SERVER_CORE is 30.
Long Identifier,Yatse2.Libs,OSInfo,C:\repos\Tolriq_Yatse2\Yatse2\Libs\OSVersion.cs,,The length of the parameter PRODUCT_ENTERPRISE_SERVER_IA64 is 30.
Long Identifier,Yatse2.Libs,OSInfo,C:\repos\Tolriq_Yatse2\Yatse2\Libs\OSVersion.cs,,The length of the parameter PRODUCT_STORAGE_EXPRESS_SERVER is 30.
Long Identifier,Yatse2.Libs,OSInfo,C:\repos\Tolriq_Yatse2\Yatse2\Libs\OSVersion.cs,,The length of the parameter PRODUCT_STORAGE_STANDARD_SERVER is 31.
Long Identifier,Yatse2.Libs,OSInfo,C:\repos\Tolriq_Yatse2\Yatse2\Libs\OSVersion.cs,,The length of the parameter PRODUCT_STORAGE_WORKGROUP_SERVER is 32.
Long Identifier,Yatse2.Libs,OSInfo,C:\repos\Tolriq_Yatse2\Yatse2\Libs\OSVersion.cs,,The length of the parameter PRODUCT_STORAGE_ENTERPRISE_SERVER is 33.
Long Identifier,Yatse2.Libs,OSInfo,C:\repos\Tolriq_Yatse2\Yatse2\Libs\OSVersion.cs,,The length of the parameter PRODUCT_SERVER_FOR_SMALLBUSINESS is 32.
Long Identifier,Yatse2.Libs,OSInfo,C:\repos\Tolriq_Yatse2\Yatse2\Libs\OSVersion.cs,,The length of the parameter PRODUCT_MEDIUMBUSINESS_SERVER_MANAGEMENT is 40.
Long Identifier,Yatse2.Libs,OSInfo,C:\repos\Tolriq_Yatse2\Yatse2\Libs\OSVersion.cs,,The length of the parameter PRODUCT_MEDIUMBUSINESS_SERVER_SECURITY is 38.
Long Identifier,Yatse2.Libs,OSInfo,C:\repos\Tolriq_Yatse2\Yatse2\Libs\OSVersion.cs,,The length of the parameter PRODUCT_MEDIUMBUSINESS_SERVER_MESSAGING is 39.
Long Identifier,Yatse2.Libs,OSInfo,C:\repos\Tolriq_Yatse2\Yatse2\Libs\OSVersion.cs,,The length of the parameter PRODUCT_SERVER_FOR_SMALLBUSINESS_V is 34.
Long Identifier,Yatse2.Libs,OSInfo,C:\repos\Tolriq_Yatse2\Yatse2\Libs\OSVersion.cs,,The length of the parameter PRODUCT_STANDARD_SERVER_CORE_V is 30.
Long Identifier,Yatse2.Libs,OSInfo,C:\repos\Tolriq_Yatse2\Yatse2\Libs\OSVersion.cs,,The length of the parameter PRODUCT_ENTERPRISE_SERVER_CORE_V is 32.
Long Identifier,Yatse2.Classes,Yatse2Properties,C:\repos\Tolriq_Yatse2\Yatse2\Classes\Yatse2Properties.cs,,The length of the parameter ShowSettingsRemotesEditProperty is 31.
Long Identifier,Yatse2.Classes,Yatse2Properties,C:\repos\Tolriq_Yatse2\Yatse2\Classes\Yatse2Properties.cs,,The length of the parameter CurrentAlbumArtistFanartProperty is 32.
Long Statement,Yatse2,App,C:\repos\Tolriq_Yatse2\Yatse2\App.xaml.cs,AssemblyLoader,The length of the statement  "            var system = Helper.SystemPath + args.Name.Substring(0' args.Name.IndexOf("'"'StringComparison.OrdinalIgnoreCase)) + ".dll"; " is 124.
Long Statement,Yatse2,App,C:\repos\Tolriq_Yatse2\Yatse2\App.xaml.cs,AssemblyLoader,The length of the statement  "            var plugin = Helper.PluginPath + args.Name.Substring(0' args.Name.IndexOf("'"' StringComparison.OrdinalIgnoreCase)) + ".dll"; " is 125.
Long Statement,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,TvShowSelectPreviousLetter,The length of the statement  "                var iletter = _config.IgnoreSortTokens ? Regex.Replace(tvShow.Title' @"^(" + _config.SortTokens + ")"' "").ToUpperInvariant() : tvShow.Title.ToUpperInvariant(); " is 160.
Long Statement,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,TvShowSelectNextLetter,The length of the statement  "                var iletter = _config.IgnoreSortTokens ? Regex.Replace(tvShow.Title' @"^(" + _config.SortTokens + ")"' "").ToUpperInvariant() : tvShow.Title.ToUpperInvariant(); " is 160.
Long Statement,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,lst_TvShows_flow_SelectionChanged,The length of the statement  "            txb_TvShows_CurrentLetter.Text = _config.IgnoreSortTokens ? Regex.Replace(selitem.Title' @"^(" + _config.SortTokens + ")"' "").ToUpperInvariant()[0].ToString() : selitem.Title.ToUpperInvariant()[0].ToString(); " is 209.
Long Statement,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,ArtistsPlay,The length of the statement  "            var songs = playmode == 0 ? _database.GetAudioSongFromArtist(_remoteInfo.Id' selitem.Name) : _database.GetAudioSongFromArtistRandom(_remoteInfo.Id' selitem.Name); " is 162.
Long Statement,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,AlbumsPlay,The length of the statement  "            var songs = playmode == 0 ? _database.GetAudioSongFromAlbumName(_remoteInfo.Id' selitem.Title) : _database.GetAudioSongFromAlbumNameRandom(_remoteInfo.Id' selitem.Title); " is 170.
Long Statement,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,GenresPlay,The length of the statement  "            var songs = playmode == 0 ? _database.GetAudioSongFromGenre(_remoteInfo.Id' selitem.Name) : _database.GetAudioSongFromGenreRandom(_remoteInfo.Id' selitem.Name); " is 160.
Long Statement,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,btn_Filter_Back_click,The length of the statement  "                _yatse2Properties.CollectionFilter = _yatse2Properties.CollectionFilter.Substring(0' _yatse2Properties.CollectionFilter.Length - 1); " is 132.
Long Statement,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,btn_Filter_OK_click,The length of the statement  "                    btn_Movies_Filter.Background = ( ! String.IsNullOrEmpty(_filterMovie)) ? GetSkinImageBrushSmall("Remote_FilterOn") : GetSkinImageBrushSmall("Remote_Search"); " is 157.
Long Statement,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,btn_Filter_OK_click,The length of the statement  "                    btn_AudioGenre_Filter.Background = (! String.IsNullOrEmpty(_filterAudioGenre)) ? GetSkinImageBrushSmall("Remote_FilterOn") : GetSkinImageBrushSmall("Remote_Search"); " is 165.
Long Statement,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,btn_Filter_OK_click,The length of the statement  "                    btn_AudioAlbums_Filter.Background = (! String.IsNullOrEmpty(_filterAudioAlbum)) ? GetSkinImageBrushSmall("Remote_FilterOn") : GetSkinImageBrushSmall("Remote_Search"); " is 166.
Long Statement,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,btn_Filter_OK_click,The length of the statement  "                    btn_AudioArtists_Filter.Background = (!String.IsNullOrEmpty(_filterAudioArtist)) ? GetSkinImageBrushSmall("Remote_FilterOn") : GetSkinImageBrushSmall("Remote_Search"); " is 167.
Long Statement,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,btn_Filter_OK_click,The length of the statement  "                    btn_TvShows_Filter.Background = (!String.IsNullOrEmpty(_filterTvShow)) ? GetSkinImageBrushSmall("Remote_FilterOn") : GetSkinImageBrushSmall("Remote_Search"); " is 157.
Long Statement,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,Change_Display_Settings,The length of the statement  "                    if (currentRes.DMPelsHeight != _config.Resolution.DMPelsHeight || currentRes.DMPelsWidth != _config.Resolution.DMPelsWidth || currentRes.DMBitsPerPel != _config.Resolution.DMBitsPerPel) " is 185.
Long Statement,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,Change_Display_Settings,The length of the statement  "                    if (currentRes.DMPelsHeight != _config.Resolution.DMPelsHeight || currentRes.DMPelsWidth != _config.Resolution.DMPelsWidth || currentRes.DMBitsPerPel != _config.Resolution.DMBitsPerPel) " is 185.
Long Statement,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,InitRemote,The length of the statement  "            Logger.Instance().Log("Yatse2"' "Init remote : " + remoteInfo.Id + " - " + remoteInfo.Name + " (" + remoteInfo.Api + " / " + remoteInfo.Version + ")"); " is 151.
Long Statement,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,InitRemote,The length of the statement  "            txb_Home_Movies.Visibility = (_remotePlugin.SupportedFunctions().MovieLibrary) ? Visibility.Visible : Visibility.Hidden; " is 120.
Long Statement,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,InitRemote,The length of the statement  "            txb_Home_TvShows.Visibility = (_remotePlugin.SupportedFunctions().TvShowLibrary) ? Visibility.Visible : Visibility.Hidden; " is 122.
Long Statement,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,InitRemote,The length of the statement  "            txb_Home_Artists.Visibility = (_remotePlugin.SupportedFunctions().AudioLibrary) ? Visibility.Visible : Visibility.Hidden; " is 121.
Long Statement,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,InitRemote,The length of the statement  "            txb_Home_Albums.Visibility = (_remotePlugin.SupportedFunctions().AudioLibrary) ? Visibility.Visible : Visibility.Hidden; " is 120.
Long Statement,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,InitRemote,The length of the statement  "            txb_Home_Genres.Visibility = (_remotePlugin.SupportedFunctions().AudioLibrary) ? Visibility.Visible : Visibility.Hidden; " is 120.
Long Statement,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,UpdateCurrently,The length of the statement  "                    _yatse2Properties.Currently.Fanart = _config.MusicFanartRotation ? GetRandomImagePath(Helper.CachePath + @"Music\Fanarts") : GetMusicFanartPath(nowPlaying.FanartURL); " is 166.
Long Statement,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,UpdateCurrently,The length of the statement  "                        _yatse2Properties.Currently.TvEpisode = GetLocalizedString(77) + " " + epinfo[0].Season + " " + GetLocalizedString(78) + " " + epinfo[0].Episode; " is 145.
Long Statement,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,UpdateCurrently,The length of the statement  "                        _yatse2Properties.Currently.Fanart = GetVideoFanartPath(showinfo.Count > 0 ? showinfo[0].Fanart : nowPlaying.FanartURL); // TODO : Change to Covnerter " is 150.
Long Statement,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,UpdateCurrently,The length of the statement  "                        _yatse2Properties.Currently.TvStudio = Helper.SkinPath + _yatse2Properties.Skin + @"\Studios\" + epinfo[0].Studio + ".png"; " is 123.
Long Statement,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,UpdateCurrently,The length of the statement  "                        _yatse2Properties.Currently.TvShow = nowPlaying.ShowTitle + " - S" + nowPlaying.SeasonNumber + " E" + nowPlaying.EpisodeNumber; " is 127.
Long Statement,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,UpdateCurrently,The length of the statement  "                        _yatse2Properties.Currently.TvEpisode = GetLocalizedString(77) + " " + nowPlaying.SeasonNumber + " " + GetLocalizedString(78) + " " + nowPlaying.EpisodeNumber; " is 159.
Long Statement,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,UpdateCurrently,The length of the statement  "                        _yatse2Properties.Currently.TvStudio = Helper.SkinPath + _yatse2Properties.Skin + @"\Studios\" + nowPlaying.Studio + ".png"; " is 124.
Long Statement,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,UpdateCurrently,The length of the statement  "                        _yatse2Properties.Currently.MovieStudio = Helper.SkinPath + _yatse2Properties.Skin + @"\Studios\" + movieinfo[0].Studio + ".png"; " is 129.
Long Statement,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,UpdateCurrently,The length of the statement  "                        _yatse2Properties.Currently.MovieStudio = Helper.SkinPath + _yatse2Properties.Skin + @"\Studios\" + nowPlaying.Studio + ".png"; " is 127.
Long Statement,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,ResfreshCurrently,The length of the statement  "            if (nowPlaying.IsNewMedia && (nowPlaying.IsPlaying || nowPlaying.IsPaused) && !String.IsNullOrEmpty(nowPlaying.FileName)) " is 121.
Long Statement,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,ResfreshCurrently,The length of the statement  "                if ((_config.Currently || _config.CurrentlyMovie) && ((grd_Dimming.Visibility != Visibility.Visible) && (grd_Diaporama.Visibility != Visibility.Visible))) " is 154.
Long Statement,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,UpdateRemote,The length of the statement  "                Logger.Instance().Log("Yatse2"' "Remote connected : " + _remoteInfo.Id + " - " + _remoteInfo.Name + " (" + _remoteInfo.Api + " / " + _remoteInfo.Version + ")"); " is 160.
Long Statement,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,UpdateRemote,The length of the statement  "                var check = _remote.CheckRemote(_remoteInfo.OS' _remoteInfo.Version' _remoteInfo.Additional' _config.ForceOnCheckRemote); " is 121.
Long Statement,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,UpdateRemote,The length of the statement  "                    Logger.Instance().Log("Yatse2"' "Remote " + _remoteInfo.Id + " - " + _remoteInfo.Name + " : Failed check' some params have changed" + " (" + _remoteInfo.Api + " / " + _remoteInfo.Version + ")"); " is 194.
Long Statement,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,GetMusicThumbPath,The length of the statement  "            _remote.File.DownloadImages(new ApiImageDownloadInfo { Source = remotepath' Destination = destFile' MaxHeight = (int)Height / 2' ToThumb = _config.CropCacheImage }); " is 165.
Long Statement,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,GetMusicFanartPath,The length of the statement  "            _remote.File.DownloadImages(new ApiImageDownloadInfo { Source = remotepath' Destination = destFile' MaxHeight = (int)Height ' ToThumb = _config.CropCacheImage }); " is 162.
Long Statement,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,GetVideoThumbPath,The length of the statement  "            _remote.File.DownloadImages(new ApiImageDownloadInfo { Source = remotepath' Destination = destFile' MaxHeight = (int)Height / 2' ToThumb = _config.CropCacheImage }); " is 165.
Long Statement,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,GetVideoFanartPath,The length of the statement  "            _remote.File.DownloadImages(new ApiImageDownloadInfo { Source = remotepath' Destination = destFile' MaxHeight = (int)Height ' ToThumb = _config.CropCacheImage }); " is 162.
Long Statement,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,RefreshDictionaries,The length of the statement  "            Logger.Instance().Log("Yatse2"' "Load dictionaries - Skin : " + _yatse2Properties.Skin + "' Lang : " + _yatse2Properties.Language); " is 131.
Long Statement,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,RefreshDictionaries,The length of the statement  "                using (System.Xml.XmlReader xmlskin = System.Xml.XmlReader.Create(Helper.SkinPath + _yatse2Properties.Skin + @"\Skin.xaml")'  xmllang = System.Xml.XmlReader.Create(Helper.LangPath + _yatse2Properties.Language + @".xaml")) " is 221.
Long Statement,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,Load_TvSeasons,The length of the statement  "            _tvSeasonsDataSource.Insert(0' new Yatse2TvSeason { IdShow  = 0' Show = idShow' SeasonNumber = -1' EpisodeCount = 0' Fanart = ""' Thumb = "" }); " is 144.
Long Statement,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,lst_Movies_flow_SelectionChanged,The length of the statement  "            txb_Movies_CurrentLetter.Text = _config.IgnoreSortTokens ? Regex.Replace(selitem.Title' @"^(" + _config.SortTokens + ")"' "").ToUpperInvariant()[0].ToString() : selitem.Title.ToUpperInvariant()[0].ToString(); " is 208.
Long Statement,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,MovieSelectPreviousLetter,The length of the statement  "                var iletter = _config.IgnoreSortTokens ? Regex.Replace(movie.Title' @"^(" + _config.SortTokens + ")"' "").ToUpperInvariant() : movie.Title.ToUpperInvariant(); " is 158.
Long Statement,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,MovieSelectNextLetter,The length of the statement  "                var iletter = _config.IgnoreSortTokens ? Regex.Replace(movie.Title' @"^(" + _config.SortTokens + ")"' "").ToUpperInvariant() : movie.Title.ToUpperInvariant(); " is 158.
Long Statement,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,LoadSettingsResolutions,The length of the statement  "            foreach (var mode in modes.Where(mode => mode.DMBitsPerPel == _config.MinDMBitsPerPel && mode.DMPelsWidth >= _config.MinDMPelsWidth)) " is 133.
Long Statement,Yatse2,CacheImageConverter,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2.Converters.cs,Convert,The length of the statement  "            var path = Helper.CachePath + param + @"\" + ApiHelper.Instance().GetPluginHashFromFileName((string)value' Helper.Instance.CurrentApi) + ".jpg"; " is 144.
Long Statement,Yatse2.Libs,Devmode,C:\repos\Tolriq_Yatse2\Yatse2\Libs\ScreenResolution.cs,Equals,The length of the statement  "            return other.DMDeviceName == DMDeviceName && other.DMSpecVersion == DMSpecVersion && other.DMDriverVersion == DMDriverVersion && other.DMSize == DMSize && other.DMDriverExtra == DMDriverExtra && other.DMFields == DMFields && other.DMOrientation == DMOrientation && other.DMPaperSize == DMPaperSize && other.DMPaperLength == DMPaperLength && other.DMPaperWidth == DMPaperWidth && other.DMScale == DMScale && other.DMCopies == DMCopies && other.DMDefaultSource == DMDefaultSource && other.DMPrintQuality == DMPrintQuality && other.DMColor == DMColor && other.DMDuplex == DMDuplex && other.DMYResolution == DMYResolution && other.DMTTOption == DMTTOption && other.DMCollate == DMCollate && other.DMUnusedPadding == DMUnusedPadding && other.DMBitsPerPel == DMBitsPerPel && other.DMPelsWidth == DMPelsWidth && other.DMPelsHeight == DMPelsHeight && other.DMDisplayFlags == DMDisplayFlags && other.DMDisplayFrequency == DMDisplayFrequency; " is 932.
Long Statement,Yatse2.Libs,DisplayDevice,C:\repos\Tolriq_Yatse2\Yatse2\Libs\ScreenResolution.cs,Equals,The length of the statement  "            return other.cb == cb && other.DeviceName == DeviceName && other.DeviceString == DeviceString && other.StateFlags == StateFlags && other.DeviceID == DeviceID && other.DeviceKey == DeviceKey; " is 190.
Long Statement,Yatse2.Classes,Yatse2DB,C:\repos\Tolriq_Yatse2\Yatse2\Classes\Yatse2Db.cs,GetAudioArtistNoCompilation,The length of the statement  "                "SELECT * FROM `AudioArtists` WHERE IdRemote = @idRemote AND Name IN (SELECT Artist FROM `AudioAlbums` WHERE IdRemote = @idRemote) ORDER BY Name;"; " is 147.
Long Statement,Yatse2.Classes,Yatse2DB,C:\repos\Tolriq_Yatse2\Yatse2\Classes\Yatse2Db.cs,GetAudioArtistFromGenre,The length of the statement  "                "SELECT * FROM `AudioArtists` WHERE IdRemote = @idRemote AND Name IN (SELECT DISTINCT(Artist) FROM AudioSongs WHERE IdRemote = @idRemote AND Genre = @Genre ) ORDER BY Name;"; " is 174.
Long Statement,Yatse2.Classes,Yatse2DB,C:\repos\Tolriq_Yatse2\Yatse2\Classes\Yatse2Db.cs,GetAudioArtistFromGenreNoCompilation,The length of the statement  "                "SELECT * FROM `AudioArtists` WHERE IdRemote = @idRemote AND Name IN (SELECT Artist FROM `AudioAlbums` WHERE IdRemote = @idRemote AND Genre = @Genre) ORDER BY Name;"; " is 166.
Long Statement,Yatse2.Classes,Yatse2DB,C:\repos\Tolriq_Yatse2\Yatse2\Classes\Yatse2Db.cs,UpdateAudioArtist,The length of the statement  "                @"UPDATE `AudioArtists` SET IdRemote = ?'IdArtist = ?' Name = ?' Thumb = ?' Fanart = ?' Hash = ?' IsFavorite = ?' Biography = ? WHERE Id = @Id;"; " is 145.
Long Statement,Yatse2.Classes,Yatse2DB,C:\repos\Tolriq_Yatse2\Yatse2\Classes\Yatse2Db.cs,GetAudioGenreNotEmpty,The length of the statement  "                "SELECT * FROM `AudioGenres` WHERE IdRemote = @idRemote AND Name IN (SELECT Genre FROM `AudioAlbums` WHERE IdRemote = @idRemote) ORDER BY Name;"; " is 145.
Long Statement,Yatse2.Classes,Yatse2DB,C:\repos\Tolriq_Yatse2\Yatse2\Classes\Yatse2Db.cs,UpdateAudioGenre,The length of the statement  "                @"UPDATE `AudioGenres` SET IdRemote = ? 'Name = ? 'IdGenre = ? 'Thumb = ? 'Fanart = ? 'AlbumCount = ? ' IsFavorite = ? WHERE Id = @Id;"; " is 136.
Long Statement,Yatse2.Classes,Yatse2DB,C:\repos\Tolriq_Yatse2\Yatse2\Classes\Yatse2Db.cs,InsertAudioSong,The length of the statement  "                @"INSERT INTO `AudioSongs` ( IdRemote 'IdSong'Title'Track'Duration'Year'FileName'IdAlbum'Album'Path'IdArtist'Artist'IdGenre'Genre'Thumb'Fanart'Hash' IsFavorite)  " is 160.
Long Statement,Yatse2.Classes,Yatse2DB,C:\repos\Tolriq_Yatse2\Yatse2\Classes\Yatse2Db.cs,UpdateAudioSong,The length of the statement  "                @"UPDATE `AudioSongs` SET IdRemote = ?'IdSong = ?'Title = ?'Track = ?'Duration = ?'Year = ?'FileName = ?'IdAlbum = ?'Album = ?'Path = ?'IdArtist = ?'Artist = ?'IdGenre = ?'Genre = ?'Thumb = ?'Fanart = ?'Hash = ?'IsFavorite = ? WHERE Id = @Id;"; " is 244.
Long Statement,Yatse2.Classes,Yatse2DB,C:\repos\Tolriq_Yatse2\Yatse2\Classes\Yatse2Db.cs,GetAudioAlbumFromArtist,The length of the statement  "                "SELECT * FROM `AudioAlbums` WHERE IdRemote = @idRemote AND Title IN (SELECT Album FROM `AudioSongs` WHERE Artist = @Artist AND IdRemote = @idRemote)"; " is 151.
Long Statement,Yatse2.Classes,Yatse2DB,C:\repos\Tolriq_Yatse2\Yatse2\Classes\Yatse2Db.cs,UpdateAudioAlbum,The length of the statement  "                @"UPDATE `AudioAlbums` SET IdRemote = ? 'Title = ? 'IdAlbum = ? 'IdArtist = ? 'Artist = ? 'Genre = ? 'IdGenre = ? 'Year = ? 'Thumb = ? 'Fanart = ? 'Hash = ? 'IsFavorite = ? WHERE Id = @Id;"; " is 190.
Long Statement,Yatse2.Classes,Yatse2DB,C:\repos\Tolriq_Yatse2\Yatse2\Classes\Yatse2Db.cs,GetTvEpisodeFromFile,The length of the statement  "                    "SELECT * FROM `TvEpisodes` WHERE IdRemote = @idRemote AND (Path || FileName = @Filename OR FileName = @Filename ) ORDER BY Title;"; " is 132.
Long Statement,Yatse2.Classes,Yatse2DB,C:\repos\Tolriq_Yatse2\Yatse2\Classes\Yatse2Db.cs,GetTvEpisodeFromTvShowSeason,The length of the statement  "                "SELECT * FROM `TvEpisodes` WHERE IdRemote = @idRemote AND ShowTitle = @Show AND Season = @seasonNumber ORDER BY Season' Episode;"; " is 131.
Long Statement,Yatse2.Classes,Yatse2DB,C:\repos\Tolriq_Yatse2\Yatse2\Classes\Yatse2Db.cs,InsertTvEpisode,The length of the statement  "                @"INSERT INTO `TvEpisodes` ( IdRemote 'IdEpisode'IdFile'IdShow'Title'ShowTitle'Rating'Plot'Director'Date'Mpaa'Studio'Season'Episode'FileName'Path'PlayCount'Hash'Thumb'Fanart'IsStack'IsFavorite )  " is 194.
Long Statement,Yatse2.Classes,Yatse2DB,C:\repos\Tolriq_Yatse2\Yatse2\Classes\Yatse2Db.cs,UpdateTvEpisode,The length of the statement  "                @"UPDATE `TvEpisodes` SET IdRemote = ?'IdEpisode = ?'IdFile = ?'IdShow = ?'Title = ?'ShowTitle = ?'Rating = ?'Plot = ?'Director = ?'Date = ?'Mpaa = ?'Studio = ?'Season = ?'Episode = ?'FileName = ?'Path = ?'PlayCount = ?'Hash = ?'Thumb = ?'Fanart = ?'IsStack = ?'IsFavorite = ? WHERE Id = @Id;"; " is 294.
Long Statement,Yatse2.Classes,Yatse2DB,C:\repos\Tolriq_Yatse2\Yatse2\Classes\Yatse2Db.cs,UpdateTvSeason,The length of the statement  "                @"UPDATE `TvShows` SET IdRemote = ?'IdShow = ?'SeasonNumber = ?'EpisodeCount = ?'Hash = ?'Thumb = ?'Fanart = ?'IsFavorite = ?' Show = ? WHERE Id = @Id;"; " is 153.
Long Statement,Yatse2.Classes,Yatse2DB,C:\repos\Tolriq_Yatse2\Yatse2\Classes\Yatse2Db.cs,InsertTvShow,The length of the statement  "                @"INSERT INTO `TvShows` ( IdRemote 'IdShow'IdScraper'Title'Plot'Premiered'Rating'Genre'Mpaa'Studio'Path'TotalCount'Hash'Thumb'Fanart'IsFavorite )  " is 145.
Long Statement,Yatse2.Classes,Yatse2DB,C:\repos\Tolriq_Yatse2\Yatse2\Classes\Yatse2Db.cs,UpdateTvShow,The length of the statement  "                @"UPDATE `TvShows` SET IdRemote = ?'IdShow = ?'IdScraper = ?'Title = ?'Plot = ?'Premiered = ?'Rating = ?'Genre = ?'Mpaa = ?'Studio = ?'Path = ?'TotalCount = ?'Hash = ?'Thumb = ?'Fanart = ?'IsFavorite = ? WHERE Id = @Id;"; " is 221.
Long Statement,Yatse2.Classes,Yatse2DB,C:\repos\Tolriq_Yatse2\Yatse2\Classes\Yatse2Db.cs,InsertMovie,The length of the statement  "                @"INSERT INTO `Movies` ( IdRemote 'IdFile'IdScraper'Title'OriginalTitle'Genre'Tagline'Plot'Director'Year'Length'Mpaa'Studio'Rating'Votes'FileName'Path'PlayCount'Hash'Thumb'Fanart'IsStack'IdMovie'IsFavorite )  " is 207.
Long Statement,Yatse2.Classes,Yatse2DB,C:\repos\Tolriq_Yatse2\Yatse2\Classes\Yatse2Db.cs,UpdateMovie,The length of the statement  "                @"UPDATE `Movies` SET IdRemote = ?'IdFile = ?'IdScraper = ?'Title = ?'OriginalTitle = ?'Genre = ?'Tagline = ?'Plot = ?'Director = ?'Year = ?'Length = ?'Mpaa = ?'Studio = ?'Rating = ?'Votes = ?'FileName = ?'Path = ?'PlayCount = ?'Hash = ?'Thumb = ?'Fanart = ?'IsStack = ?'IdMovie = ?'IsFavorite = ? WHERE Id = @Id;"; " is 315.
Long Statement,Yatse2.Classes,Yatse2DB,C:\repos\Tolriq_Yatse2\Yatse2\Classes\Yatse2Db.cs,InsertRemote,The length of the statement  "                @"INSERT INTO `Remotes` ( Name' Api' ProcessName' IP' Port' MacAddress' Login' Password' Version' Os' Additional' CacheFilled)   " is 126.
Long Statement,Yatse2.Classes,Yatse2DB,C:\repos\Tolriq_Yatse2\Yatse2\Classes\Yatse2Db.cs,UpdateRemote,The length of the statement  "                @"UPDATE `Remotes` SET Name = ? ' Api = ?' ProcessName = ?' IP = ?' Port = ?' MacAddress = ?' Login = ?' Password =  ?' Version = ?' Os = ?' Additional = ?' CacheFilled = ? WHERE Id = @Id;"; " is 190.
Long Statement,XamlGeneratedNamespace,GeneratedInternalTypeHelper,C:\repos\Tolriq_Yatse2\Yatse2\obj\Debug\GeneratedInternalTypeHelper.g.cs,CreateInstance,The length of the statement  "            return System.Activator.CreateInstance(type' ((System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)  " is 128.
Complex Conditional,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,btn_Header_Remotes_Click,The conditional expression  "_remoteConnected && (nowPlaying.IsPlaying || nowPlaying.IsPaused) && _currentGrid != grd_Currently"  is complex.
Complex Conditional,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,img_Header_Home_MouseDown,The conditional expression  "(grd_Settings_Remotes_Edit.Visibility != Visibility.Visible)                   && (grd_Settings_Weather.Visibility != Visibility.Visible)                   && (grd_Remote.Visibility != Visibility.Visible)                  && (grd_Filter.Visibility != Visibility.Visible)"  is complex.
Complex Conditional,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,Timer_Tick,The conditional expression  "(_timer > _config.DimmingTimer) && _config.Dimming && (nowPlaying.IsPlaying || nowPlaying.IsPaused)"  is complex.
Complex Conditional,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,ResfreshCurrently,The conditional expression  "nowPlaying.IsNewMedia && (nowPlaying.IsPlaying || nowPlaying.IsPaused) && !String.IsNullOrEmpty(nowPlaying.FileName)"  is complex.
Complex Conditional,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,ResfreshCurrently,The conditional expression  "(_config.Currently || _config.CurrentlyMovie) && ((grd_Dimming.Visibility != Visibility.Visible) && (grd_Diaporama.Visibility != Visibility.Visible))"  is complex.
Complex Conditional,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,UpdateRemote,The conditional expression  "!_remoteConnected && !_showRemoteSelect && _config.IsConfigured && _config.DefaultRemote != 0"  is complex.
Complex Conditional,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,GetRandomImagePath,The conditional expression  "ex is ArgumentNullException ||                      ex is DirectoryNotFoundException ||                      ex is ArgumentException ||                      ex is SecurityException ||                      ex is InvalidOperationException ||                      ex is NullReferenceException"  is complex.
Complex Conditional,Unused,Weather,C:\repos\Tolriq_Yatse2\Yatse2\Libs\Weather-WeatherChannel.cs,LoadWeatherData,The conditional expression  "(auto && _isAutoRefresh) || (!auto && !_isAutoRefresh)"  is complex.
Complex Conditional,Yatse2.Libs,NetworkTools,C:\repos\Tolriq_Yatse2\Yatse2\Libs\NetworkTools.cs,IsHostAccessible,The conditional expression  "ex is ArgumentNullException ||                          ex is ArgumentOutOfRangeException ||                          ex is InvalidOperationException ||                          ex is SocketException"  is complex.
Complex Conditional,Yatse2.Libs,Weather,C:\repos\Tolriq_Yatse2\Yatse2\Libs\Weather.cs,LoadWeatherData,The conditional expression  "(auto && _isAutoRefresh) || (!auto && !_isAutoRefresh)"  is complex.
Empty Catch Block,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,GetSettingsVars,The method has an empty catch block.
Empty Catch Block,Unused,Weather,C:\repos\Tolriq_Yatse2\Yatse2\Libs\Weather-WeatherChannel.cs,LoadWeatherData,The method has an empty catch block.
Empty Catch Block,Unused,Weather,C:\repos\Tolriq_Yatse2\Yatse2\Libs\Weather-WeatherChannel.cs,GetWeatherData,The method has an empty catch block.
Empty Catch Block,Unused,Weather,C:\repos\Tolriq_Yatse2\Yatse2\Libs\Weather-WeatherChannel.cs,GetWeatherData,The method has an empty catch block.
Empty Catch Block,Unused,Weather,C:\repos\Tolriq_Yatse2\Yatse2\Libs\Weather-WeatherChannel.cs,GetWeatherData,The method has an empty catch block.
Empty Catch Block,Unused,Weather,C:\repos\Tolriq_Yatse2\Yatse2\Libs\Weather-WeatherChannel.cs,GetWeatherData,The method has an empty catch block.
Empty Catch Block,Unused,Weather,C:\repos\Tolriq_Yatse2\Yatse2\Libs\Weather-WeatherChannel.cs,GetForecastWeatherData,The method has an empty catch block.
Empty Catch Block,Unused,Weather,C:\repos\Tolriq_Yatse2\Yatse2\Libs\Weather-WeatherChannel.cs,GetForecastWeatherData,The method has an empty catch block.
Empty Catch Block,Unused,Weather,C:\repos\Tolriq_Yatse2\Yatse2\Libs\Weather-WeatherChannel.cs,GetForecastWeatherData,The method has an empty catch block.
Empty Catch Block,Unused,Weather,C:\repos\Tolriq_Yatse2\Yatse2\Libs\Weather-WeatherChannel.cs,GetForecastWeatherData,The method has an empty catch block.
Empty Catch Block,Unused,Weather,C:\repos\Tolriq_Yatse2\Yatse2\Libs\Weather-WeatherChannel.cs,SearchCity,The method has an empty catch block.
Empty Catch Block,Unused,Weather,C:\repos\Tolriq_Yatse2\Yatse2\Libs\Weather-WeatherChannel.cs,SearchCity,The method has an empty catch block.
Empty Catch Block,Yatse2.Libs,Weather,C:\repos\Tolriq_Yatse2\Yatse2\Libs\Weather.cs,LoadWeatherData,The method has an empty catch block.
Empty Catch Block,Yatse2.Libs,Weather,C:\repos\Tolriq_Yatse2\Yatse2\Libs\Weather.cs,GetWeatherData,The method has an empty catch block.
Empty Catch Block,Yatse2.Libs,Weather,C:\repos\Tolriq_Yatse2\Yatse2\Libs\Weather.cs,GetWeatherData,The method has an empty catch block.
Empty Catch Block,Yatse2.Libs,Weather,C:\repos\Tolriq_Yatse2\Yatse2\Libs\Weather.cs,GetWeatherData,The method has an empty catch block.
Empty Catch Block,Yatse2.Libs,Weather,C:\repos\Tolriq_Yatse2\Yatse2\Libs\Weather.cs,GetWeatherData,The method has an empty catch block.
Empty Catch Block,Yatse2.Libs,Weather,C:\repos\Tolriq_Yatse2\Yatse2\Libs\Weather.cs,GetForecastWeatherData,The method has an empty catch block.
Empty Catch Block,Yatse2.Libs,Weather,C:\repos\Tolriq_Yatse2\Yatse2\Libs\Weather.cs,GetForecastWeatherData,The method has an empty catch block.
Empty Catch Block,Yatse2.Libs,Weather,C:\repos\Tolriq_Yatse2\Yatse2\Libs\Weather.cs,GetForecastWeatherData,The method has an empty catch block.
Empty Catch Block,Yatse2.Libs,Weather,C:\repos\Tolriq_Yatse2\Yatse2\Libs\Weather.cs,GetForecastWeatherData,The method has an empty catch block.
Empty Catch Block,Yatse2.Libs,Weather,C:\repos\Tolriq_Yatse2\Yatse2\Libs\Weather.cs,SearchCity,The method has an empty catch block.
Empty Catch Block,Yatse2.Libs,Weather,C:\repos\Tolriq_Yatse2\Yatse2\Libs\Weather.cs,SearchCity,The method has an empty catch block.
Empty Catch Block,Yatse2.Classes,Yatse2DB,C:\repos\Tolriq_Yatse2\Yatse2\Classes\Yatse2Db.cs,UpdateDatabase,The method has an empty catch block.
Magic Number,Yatse2,ModalDialog,C:\repos\Tolriq_Yatse2\Yatse2\ModalDialog.xaml.cs,ShowHandlerDialog,The following statement contains a magic number: while (!_hideRequest)  			{  				// HACK: Stop the thread if the application is about to close  				if (Dispatcher.HasShutdownStarted ||  					Dispatcher.HasShutdownFinished)  				{  					break;  				}    				// HACK: Simulate "DoEvents"  				Dispatcher.Invoke(  					DispatcherPriority.Background'  					new ThreadStart(delegate { }));  				Thread.Sleep(50);  			}
Magic Number,Yatse2,ModalDialog,C:\repos\Tolriq_Yatse2\Yatse2\ModalDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.root = ((Yatse2.ModalDialog)(target));              return;              case 2:              this.grd_YesNo = ((System.Windows.Controls.Primitives.UniformGrid)(target));              return;              case 3:              this.YesButton = ((System.Windows.Controls.Button)(target));                            #line 20 "..\..\ModalDialog.xaml"              this.YesButton.Click += new System.Windows.RoutedEventHandler(this.YesButton_Click);                            #line default              #line hidden              return;              case 4:              this.NoButton = ((System.Windows.Controls.Button)(target));                            #line 21 "..\..\ModalDialog.xaml"              this.NoButton.Click += new System.Windows.RoutedEventHandler(this.NoButton_Click);                            #line default              #line hidden              return;              case 5:              this.grd_Ok = ((System.Windows.Controls.Primitives.UniformGrid)(target));              return;              case 6:              this.OkButton = ((System.Windows.Controls.Button)(target));                            #line 25 "..\..\ModalDialog.xaml"              this.OkButton.Click += new System.Windows.RoutedEventHandler(this.OkButton_Click);                            #line default              #line hidden              return;              }
Magic Number,Yatse2,ModalDialog,C:\repos\Tolriq_Yatse2\Yatse2\ModalDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.root = ((Yatse2.ModalDialog)(target));              return;              case 2:              this.grd_YesNo = ((System.Windows.Controls.Primitives.UniformGrid)(target));              return;              case 3:              this.YesButton = ((System.Windows.Controls.Button)(target));                            #line 20 "..\..\ModalDialog.xaml"              this.YesButton.Click += new System.Windows.RoutedEventHandler(this.YesButton_Click);                            #line default              #line hidden              return;              case 4:              this.NoButton = ((System.Windows.Controls.Button)(target));                            #line 21 "..\..\ModalDialog.xaml"              this.NoButton.Click += new System.Windows.RoutedEventHandler(this.NoButton_Click);                            #line default              #line hidden              return;              case 5:              this.grd_Ok = ((System.Windows.Controls.Primitives.UniformGrid)(target));              return;              case 6:              this.OkButton = ((System.Windows.Controls.Button)(target));                            #line 25 "..\..\ModalDialog.xaml"              this.OkButton.Click += new System.Windows.RoutedEventHandler(this.OkButton_Click);                            #line default              #line hidden              return;              }
Magic Number,Yatse2,ModalDialog,C:\repos\Tolriq_Yatse2\Yatse2\ModalDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.root = ((Yatse2.ModalDialog)(target));              return;              case 2:              this.grd_YesNo = ((System.Windows.Controls.Primitives.UniformGrid)(target));              return;              case 3:              this.YesButton = ((System.Windows.Controls.Button)(target));                            #line 20 "..\..\ModalDialog.xaml"              this.YesButton.Click += new System.Windows.RoutedEventHandler(this.YesButton_Click);                            #line default              #line hidden              return;              case 4:              this.NoButton = ((System.Windows.Controls.Button)(target));                            #line 21 "..\..\ModalDialog.xaml"              this.NoButton.Click += new System.Windows.RoutedEventHandler(this.NoButton_Click);                            #line default              #line hidden              return;              case 5:              this.grd_Ok = ((System.Windows.Controls.Primitives.UniformGrid)(target));              return;              case 6:              this.OkButton = ((System.Windows.Controls.Button)(target));                            #line 25 "..\..\ModalDialog.xaml"              this.OkButton.Click += new System.Windows.RoutedEventHandler(this.OkButton_Click);                            #line default              #line hidden              return;              }
Magic Number,Yatse2,ModalDialog,C:\repos\Tolriq_Yatse2\Yatse2\ModalDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.root = ((Yatse2.ModalDialog)(target));              return;              case 2:              this.grd_YesNo = ((System.Windows.Controls.Primitives.UniformGrid)(target));              return;              case 3:              this.YesButton = ((System.Windows.Controls.Button)(target));                            #line 20 "..\..\ModalDialog.xaml"              this.YesButton.Click += new System.Windows.RoutedEventHandler(this.YesButton_Click);                            #line default              #line hidden              return;              case 4:              this.NoButton = ((System.Windows.Controls.Button)(target));                            #line 21 "..\..\ModalDialog.xaml"              this.NoButton.Click += new System.Windows.RoutedEventHandler(this.NoButton_Click);                            #line default              #line hidden              return;              case 5:              this.grd_Ok = ((System.Windows.Controls.Primitives.UniformGrid)(target));              return;              case 6:              this.OkButton = ((System.Windows.Controls.Button)(target));                            #line 25 "..\..\ModalDialog.xaml"              this.OkButton.Click += new System.Windows.RoutedEventHandler(this.OkButton_Click);                            #line default              #line hidden              return;              }
Magic Number,Yatse2,ModalDialog,C:\repos\Tolriq_Yatse2\Yatse2\ModalDialog.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.root = ((Yatse2.ModalDialog)(target));              return;              case 2:              this.grd_YesNo = ((System.Windows.Controls.Primitives.UniformGrid)(target));              return;              case 3:              this.YesButton = ((System.Windows.Controls.Button)(target));                            #line 20 "..\..\ModalDialog.xaml"              this.YesButton.Click += new System.Windows.RoutedEventHandler(this.YesButton_Click);                            #line default              #line hidden              return;              case 4:              this.NoButton = ((System.Windows.Controls.Button)(target));                            #line 21 "..\..\ModalDialog.xaml"              this.NoButton.Click += new System.Windows.RoutedEventHandler(this.NoButton_Click);                            #line default              #line hidden              return;              case 5:              this.grd_Ok = ((System.Windows.Controls.Primitives.UniformGrid)(target));              return;              case 6:              this.OkButton = ((System.Windows.Controls.Button)(target));                            #line 25 "..\..\ModalDialog.xaml"              this.OkButton.Click += new System.Windows.RoutedEventHandler(this.OkButton_Click);                            #line default              #line hidden              return;              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,lst_TvSeasons_flow_PreviewMouseLeftButtonDown,The following statement contains a magic number: if (timediff > 75 && timediff < SystemInformation.DoubleClickTime)              {                  var selitem = (Yatse2TvSeason)lst_TvSeasons_flow.SelectedItem;                  if (selitem == null) return;                    if (selitem.SeasonNumber == -1)                      Load_TvEpisodes(selitem.Show);                  else                      Load_TvEpisodesSeason(selitem.Show' selitem.SeasonNumber);                  ShowGrid(grd_TvEpisodes);                }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,lst_TvSeasons_flow_SelectionChanged,The following statement contains a magic number: if (selitem.SeasonNumber > 0)              {                  _yatse2Properties.TvSeasonName = GetLocalizedString(77) + " " + selitem.SeasonNumber;                  _yatse2Properties.TvSeasonEpCount = selitem.EpisodeCount.ToString(CultureInfo.InvariantCulture);              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,lst_TvSeasons_flow_SelectionChanged,The following statement contains a magic number: if (selitem.SeasonNumber == 0)              {                  _yatse2Properties.TvSeasonName = GetLocalizedString(122);                  _yatse2Properties.TvSeasonEpCount = selitem.EpisodeCount.ToString(CultureInfo.InvariantCulture);              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,lst_TvSeasons_flow_SelectionChanged,The following statement contains a magic number: if (selitem.SeasonNumber == -1)              {                  _yatse2Properties.TvSeasonName = GetLocalizedString(123);                  var temp = _database.GetTvEpisodeFromTvShow(_remoteInfo.Id' selitem.Show);                  _yatse2Properties.TvSeasonEpCount = temp.Count.ToString(CultureInfo.InvariantCulture);              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,lst_TvEpisodes_flow_PreviewMouseLeftButtonDown,The following statement contains a magic number: if (timediff > 75 && timediff < SystemInformation.DoubleClickTime)              {                  btn_TvEpisodes_Play_Click(null' null);              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,grd_TvShows_CurrentLetter_PreviewMouseMove,The following statement contains a magic number: if (_startLetterDrag)              {                  var distanceX = _mouseDownPoint.X - e.GetPosition(this).X;                  if (Math.Abs(distanceX) > 50.0)                  {                      if (distanceX < 0)                      {                          TvShowSelectNextLetter(txb_TvShows_CurrentLetter.Text.ToUpperInvariant().ToCharArray()[0]);                      }                      else                      {                          TvShowSelectPreviousLetter(txb_TvShows_CurrentLetter.Text.ToUpperInvariant().ToCharArray()[0]);                      }                        _startLetterDrag = false;                      ResetTimer();                  }              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,lst_TvShows_flow_PreviewMouseLeftButtonDown,The following statement contains a magic number: if (timediff > 75 && timediff < SystemInformation.DoubleClickTime)              {                  var selitem = (Yatse2TvShow)lst_TvShows_flow.SelectedItem;                  if (selitem == null) return;                    Load_TvSeasons(selitem.Title);                  if (_tvSeasonsCollectionView.Count > 2)                  {                      ShowGrid(grd_TvSeasons);                  }                  else                  {                      Load_TvEpisodes(selitem.Title);                      ShowGrid(grd_TvEpisodes);                  }              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,lst_TvShows_flow_PreviewMouseLeftButtonDown,The following statement contains a magic number: if (timediff > 75 && timediff < SystemInformation.DoubleClickTime)              {                  var selitem = (Yatse2TvShow)lst_TvShows_flow.SelectedItem;                  if (selitem == null) return;                    Load_TvSeasons(selitem.Title);                  if (_tvSeasonsCollectionView.Count > 2)                  {                      ShowGrid(grd_TvSeasons);                  }                  else                  {                      Load_TvEpisodes(selitem.Title);                      ShowGrid(grd_TvEpisodes);                  }              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,grd_AudioArtists_CurrentLetter_PreviewMouseMove,The following statement contains a magic number: if (_startLetterDrag)              {                  var distanceX = _mouseDownPoint.X - e.GetPosition(this).X;                  if (Math.Abs(distanceX) > 50.0)                  {                      if (distanceX < 0)                      {                          AudioArtistSelectNextLetter(                              txb_AudioArtists_CurrentLetter.Text.ToUpperInvariant().ToCharArray()[0]);                      }                      else                      {                          AudioArtistSelectPreviousLetter(                              txb_AudioArtists_CurrentLetter.Text.ToUpperInvariant().ToCharArray()[0]);                      }                        _startLetterDrag = false;                      ResetTimer();                  }              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,lst_AudioArtists_flow_PreviewMouseLeftButtonDown,The following statement contains a magic number: if (timediff > 75 && timediff < SystemInformation.DoubleClickTime)              {                  var selitem = (Yatse2AudioArtist)lst_AudioArtists_flow.SelectedItem;                  if (selitem == null) return;                  Load_AudioAlbumsArtists(selitem.Name);                  _filteredAlbums = true;                  _filterAudioAlbum = "";                  btn_AudioAlbums_Filter.Background = GetSkinImageBrushSmall("Remote_Search");                  _audioAlbumsCollectionView.Refresh();                  Helper.VirtFlowSelect(lst_AudioAlbums_flow' 0);                  if (_audioAlbumsCollectionView.Count > 0)                  {                      ShowGrid(grd_AudioAlbums);                  }              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,grd_AudioAlbums_CurrentLetter_PreviewMouseMove,The following statement contains a magic number: if (_startLetterDrag)              {                  var distanceX = _mouseDownPoint.X - e.GetPosition(this).X;                  if (Math.Abs(distanceX) > 50.0)                  {                      if (distanceX < 0)                      {                          AudioAlbumSelectNextLetter(                              txb_AudioAlbums_CurrentLetter.Text.ToUpperInvariant().ToCharArray()[0]);                      }                      else                      {                          AudioAlbumSelectPreviousLetter(                              txb_AudioAlbums_CurrentLetter.Text.ToUpperInvariant().ToCharArray()[0]);                      }                        _startLetterDrag = false;                      ResetTimer();                  }              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,lst_AudioAlbums_flow_PreviewMouseLeftButtonDown,The following statement contains a magic number: if (timediff > 75 && timediff < SystemInformation.DoubleClickTime)              {                  btn_AudioAlbums_Infos_Click(null' null);              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,ListBox_PreviewMouseDown,The following statement contains a magic number: if (timediff > 75 && timediff < SystemInformation.DoubleClickTime)              {                  var selitem = (Yatse2AudioSong)lst_AudioAlbums_Details.SelectedItem;                  if (selitem == null)                       return;                  var temp = new Collection<ApiAudioSong>                                 {selitem.ToApi()};                  _remote.AudioPlayer.PlayFiles(temp);                  var stbDimmingHide = (Storyboard)TryFindResource("stb_HideAudioAlbumsDetails");                  if (stbDimmingHide != null)                      stbDimmingHide.Begin(this);              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,grd_AudioGenres_CurrentLetter_PreviewMouseMove,The following statement contains a magic number: if (_startLetterDrag)              {                  var distanceX = _mouseDownPoint.X - e.GetPosition(this).X;                  if (Math.Abs(distanceX) > 50.0)                  {                      if (distanceX < 0)                      {                          AudioGenreSelectNextLetter(                              txb_AudioGenres_CurrentLetter.Text.ToUpperInvariant().ToCharArray()[0]);                      }                      else                      {                          AudioGenreSelectPreviousLetter(                              txb_AudioGenres_CurrentLetter.Text.ToUpperInvariant().ToCharArray()[0]);                      }                        _startLetterDrag = false;                      ResetTimer();                  }              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,lst_AudioGenres_flow_PreviewMouseLeftButtonDown,The following statement contains a magic number: if (timediff > 75 && timediff < SystemInformation.DoubleClickTime)              {                  var selitem = (Yatse2AudioGenre)lst_AudioGenres_flow.SelectedItem;                  if (selitem == null)                       return;                    if (_config.GenreToArtists)                  {                      Load_AudioArtistsGenre(selitem.Name);                      _filteredArtists = true;                      _filterAudioArtist = "";                      btn_AudioArtists_Filter.Background = GetSkinImageBrushSmall("Remote_Search");                      _audioArtistsCollectionView.Refresh();                      Helper.VirtFlowSelect(lst_AudioArtists_flow' 0);                      if (_audioArtistsCollectionView.Count > 0)                      {                          ShowGrid(grd_AudioArtists);                      }                  }                  else                  {                      Load_AudioAlbumsGenre(selitem.Name);                      _filteredAlbums = true;                      _filterAudioAlbum = "";                      btn_AudioAlbums_Filter.Background = GetSkinImageBrushSmall("Remote_Search");                      _audioAlbumsCollectionView.Refresh();                      Helper.VirtFlowSelect(lst_AudioAlbums_flow' 0);                      if (_audioAlbumsCollectionView.Count > 0)                      {                          ShowGrid(grd_AudioAlbums);                      }                  }              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,Yatse2Window,The following statement contains a magic number: ModalDialog.SetButtons(GetLocalizedString(125)' GetLocalizedString(126)' GetLocalizedString(127));
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,Yatse2Window,The following statement contains a magic number: ModalDialog.SetButtons(GetLocalizedString(125)' GetLocalizedString(126)' GetLocalizedString(127));
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,Yatse2Window,The following statement contains a magic number: ModalDialog.SetButtons(GetLocalizedString(125)' GetLocalizedString(126)' GetLocalizedString(127));
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,StartDiaporama,The following statement contains a magic number: switch (_config.DiaporamaMode)              {                  case 0:                      img_Diaporama1.Stretch = Stretch.None;                      img_Diaporama2.Stretch = Stretch.None;                      break;                  case 1:                      img_Diaporama1.Stretch = Stretch.Uniform;                      img_Diaporama2.Stretch = Stretch.Uniform;                      break;                  case 2:                      img_Diaporama1.Stretch = Stretch.UniformToFill;                      img_Diaporama2.Stretch = Stretch.UniformToFill;                      break;                  case 3:                      img_Diaporama1.Stretch = Stretch.Fill;                      img_Diaporama2.Stretch = Stretch.Fill;                      break;              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,StartDiaporama,The following statement contains a magic number: switch (_config.DiaporamaMode)              {                  case 0:                      img_Diaporama1.Stretch = Stretch.None;                      img_Diaporama2.Stretch = Stretch.None;                      break;                  case 1:                      img_Diaporama1.Stretch = Stretch.Uniform;                      img_Diaporama2.Stretch = Stretch.Uniform;                      break;                  case 2:                      img_Diaporama1.Stretch = Stretch.UniformToFill;                      img_Diaporama2.Stretch = Stretch.UniformToFill;                      break;                  case 3:                      img_Diaporama1.Stretch = Stretch.Fill;                      img_Diaporama2.Stretch = Stretch.Fill;                      break;              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,SwitchDiaporama,The following statement contains a magic number: if (_diaporamaCurrentImage == 1)              {                  _diaporamaCurrentImage = 2;                  _yatse2Properties.DiaporamaImage2 = GetRandomImagePath(_config.ImageDirectory);                  var stbDiaporamaSwap = (Storyboard)TryFindResource("stb_Diaporama_12_1");                  if (stbDiaporamaSwap != null)                      stbDiaporamaSwap.Begin(this);              }              else              {                  _diaporamaCurrentImage = 1;                  _yatse2Properties.DiaporamaImage1 = GetRandomImagePath(_config.ImageDirectory);                  var stbDiaporamaSwap = (Storyboard)TryFindResource("stb_Diaporama_21_1");                  if (stbDiaporamaSwap != null)                      stbDiaporamaSwap.Begin(this);              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,PreInit,The following statement contains a magic number: ServicePointManager.DnsRefreshTimeout = 4 * 3600 * 1000;
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,PreInit,The following statement contains a magic number: ServicePointManager.DnsRefreshTimeout = 4 * 3600 * 1000;
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,PreInit,The following statement contains a magic number: ServicePointManager.DnsRefreshTimeout = 4 * 3600 * 1000;
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,PreInit,The following statement contains a magic number: ServicePointManager.DefaultConnectionLimit = 10000;
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,PositionScreen,The following statement contains a magic number: if (!_setPov)              {                  _yatse2Properties.TvShowPosterPov = (lst_TvShows_flow.ActualWidth/lst_TvShows_flow.ActualHeight)/10*85;                  _yatse2Properties.VideoPov = (lst_Movies_flow.ActualWidth/lst_Movies_flow.ActualHeight)/10*85;                  _yatse2Properties.AudioGenresPov = (lst_AudioGenres_flow.ActualWidth/lst_AudioGenres_flow.ActualHeight)/                                                     10*85;                  _yatse2Properties.AudioAlbumsPov = (lst_AudioAlbums_flow.ActualWidth/lst_AudioAlbums_flow.ActualHeight)/                                                     10*85;                  _yatse2Properties.AudioArtistsPov = (lst_AudioArtists_flow.ActualWidth/                                                       lst_AudioArtists_flow.ActualHeight)/10*85;                  _setPov = true;              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,PositionScreen,The following statement contains a magic number: if (!_setPov)              {                  _yatse2Properties.TvShowPosterPov = (lst_TvShows_flow.ActualWidth/lst_TvShows_flow.ActualHeight)/10*85;                  _yatse2Properties.VideoPov = (lst_Movies_flow.ActualWidth/lst_Movies_flow.ActualHeight)/10*85;                  _yatse2Properties.AudioGenresPov = (lst_AudioGenres_flow.ActualWidth/lst_AudioGenres_flow.ActualHeight)/                                                     10*85;                  _yatse2Properties.AudioAlbumsPov = (lst_AudioAlbums_flow.ActualWidth/lst_AudioAlbums_flow.ActualHeight)/                                                     10*85;                  _yatse2Properties.AudioArtistsPov = (lst_AudioArtists_flow.ActualWidth/                                                       lst_AudioArtists_flow.ActualHeight)/10*85;                  _setPov = true;              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,PositionScreen,The following statement contains a magic number: if (!_setPov)              {                  _yatse2Properties.TvShowPosterPov = (lst_TvShows_flow.ActualWidth/lst_TvShows_flow.ActualHeight)/10*85;                  _yatse2Properties.VideoPov = (lst_Movies_flow.ActualWidth/lst_Movies_flow.ActualHeight)/10*85;                  _yatse2Properties.AudioGenresPov = (lst_AudioGenres_flow.ActualWidth/lst_AudioGenres_flow.ActualHeight)/                                                     10*85;                  _yatse2Properties.AudioAlbumsPov = (lst_AudioAlbums_flow.ActualWidth/lst_AudioAlbums_flow.ActualHeight)/                                                     10*85;                  _yatse2Properties.AudioArtistsPov = (lst_AudioArtists_flow.ActualWidth/                                                       lst_AudioArtists_flow.ActualHeight)/10*85;                  _setPov = true;              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,PositionScreen,The following statement contains a magic number: if (!_setPov)              {                  _yatse2Properties.TvShowPosterPov = (lst_TvShows_flow.ActualWidth/lst_TvShows_flow.ActualHeight)/10*85;                  _yatse2Properties.VideoPov = (lst_Movies_flow.ActualWidth/lst_Movies_flow.ActualHeight)/10*85;                  _yatse2Properties.AudioGenresPov = (lst_AudioGenres_flow.ActualWidth/lst_AudioGenres_flow.ActualHeight)/                                                     10*85;                  _yatse2Properties.AudioAlbumsPov = (lst_AudioAlbums_flow.ActualWidth/lst_AudioAlbums_flow.ActualHeight)/                                                     10*85;                  _yatse2Properties.AudioArtistsPov = (lst_AudioArtists_flow.ActualWidth/                                                       lst_AudioArtists_flow.ActualHeight)/10*85;                  _setPov = true;              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,PositionScreen,The following statement contains a magic number: if (!_setPov)              {                  _yatse2Properties.TvShowPosterPov = (lst_TvShows_flow.ActualWidth/lst_TvShows_flow.ActualHeight)/10*85;                  _yatse2Properties.VideoPov = (lst_Movies_flow.ActualWidth/lst_Movies_flow.ActualHeight)/10*85;                  _yatse2Properties.AudioGenresPov = (lst_AudioGenres_flow.ActualWidth/lst_AudioGenres_flow.ActualHeight)/                                                     10*85;                  _yatse2Properties.AudioAlbumsPov = (lst_AudioAlbums_flow.ActualWidth/lst_AudioAlbums_flow.ActualHeight)/                                                     10*85;                  _yatse2Properties.AudioArtistsPov = (lst_AudioArtists_flow.ActualWidth/                                                       lst_AudioArtists_flow.ActualHeight)/10*85;                  _setPov = true;              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,PositionScreen,The following statement contains a magic number: if (!_setPov)              {                  _yatse2Properties.TvShowPosterPov = (lst_TvShows_flow.ActualWidth/lst_TvShows_flow.ActualHeight)/10*85;                  _yatse2Properties.VideoPov = (lst_Movies_flow.ActualWidth/lst_Movies_flow.ActualHeight)/10*85;                  _yatse2Properties.AudioGenresPov = (lst_AudioGenres_flow.ActualWidth/lst_AudioGenres_flow.ActualHeight)/                                                     10*85;                  _yatse2Properties.AudioAlbumsPov = (lst_AudioAlbums_flow.ActualWidth/lst_AudioAlbums_flow.ActualHeight)/                                                     10*85;                  _yatse2Properties.AudioArtistsPov = (lst_AudioArtists_flow.ActualWidth/                                                       lst_AudioArtists_flow.ActualHeight)/10*85;                  _setPov = true;              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,PositionScreen,The following statement contains a magic number: if (!_setPov)              {                  _yatse2Properties.TvShowPosterPov = (lst_TvShows_flow.ActualWidth/lst_TvShows_flow.ActualHeight)/10*85;                  _yatse2Properties.VideoPov = (lst_Movies_flow.ActualWidth/lst_Movies_flow.ActualHeight)/10*85;                  _yatse2Properties.AudioGenresPov = (lst_AudioGenres_flow.ActualWidth/lst_AudioGenres_flow.ActualHeight)/                                                     10*85;                  _yatse2Properties.AudioAlbumsPov = (lst_AudioAlbums_flow.ActualWidth/lst_AudioAlbums_flow.ActualHeight)/                                                     10*85;                  _yatse2Properties.AudioArtistsPov = (lst_AudioArtists_flow.ActualWidth/                                                       lst_AudioArtists_flow.ActualHeight)/10*85;                  _setPov = true;              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,PositionScreen,The following statement contains a magic number: if (!_setPov)              {                  _yatse2Properties.TvShowPosterPov = (lst_TvShows_flow.ActualWidth/lst_TvShows_flow.ActualHeight)/10*85;                  _yatse2Properties.VideoPov = (lst_Movies_flow.ActualWidth/lst_Movies_flow.ActualHeight)/10*85;                  _yatse2Properties.AudioGenresPov = (lst_AudioGenres_flow.ActualWidth/lst_AudioGenres_flow.ActualHeight)/                                                     10*85;                  _yatse2Properties.AudioAlbumsPov = (lst_AudioAlbums_flow.ActualWidth/lst_AudioAlbums_flow.ActualHeight)/                                                     10*85;                  _yatse2Properties.AudioArtistsPov = (lst_AudioArtists_flow.ActualWidth/                                                       lst_AudioArtists_flow.ActualHeight)/10*85;                  _setPov = true;              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,PositionScreen,The following statement contains a magic number: if (!_setPov)              {                  _yatse2Properties.TvShowPosterPov = (lst_TvShows_flow.ActualWidth/lst_TvShows_flow.ActualHeight)/10*85;                  _yatse2Properties.VideoPov = (lst_Movies_flow.ActualWidth/lst_Movies_flow.ActualHeight)/10*85;                  _yatse2Properties.AudioGenresPov = (lst_AudioGenres_flow.ActualWidth/lst_AudioGenres_flow.ActualHeight)/                                                     10*85;                  _yatse2Properties.AudioAlbumsPov = (lst_AudioAlbums_flow.ActualWidth/lst_AudioAlbums_flow.ActualHeight)/                                                     10*85;                  _yatse2Properties.AudioArtistsPov = (lst_AudioArtists_flow.ActualWidth/                                                       lst_AudioArtists_flow.ActualHeight)/10*85;                  _setPov = true;              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,PositionScreen,The following statement contains a magic number: if (!_setPov)              {                  _yatse2Properties.TvShowPosterPov = (lst_TvShows_flow.ActualWidth/lst_TvShows_flow.ActualHeight)/10*85;                  _yatse2Properties.VideoPov = (lst_Movies_flow.ActualWidth/lst_Movies_flow.ActualHeight)/10*85;                  _yatse2Properties.AudioGenresPov = (lst_AudioGenres_flow.ActualWidth/lst_AudioGenres_flow.ActualHeight)/                                                     10*85;                  _yatse2Properties.AudioAlbumsPov = (lst_AudioAlbums_flow.ActualWidth/lst_AudioAlbums_flow.ActualHeight)/                                                     10*85;                  _yatse2Properties.AudioArtistsPov = (lst_AudioArtists_flow.ActualWidth/                                                       lst_AudioArtists_flow.ActualHeight)/10*85;                  _setPov = true;              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,CheckUpdate,The following statement contains a magic number: if (!repo.LoadRepository(Repository' platform' Helper.AppPath + "Updates"))              {                  if (showResult)                      ShowOkDialog(GetLocalizedString(114));                  return;              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,CheckUpdate,The following statement contains a magic number: if (result)              {                  if (showResult)                      ShowOkDialog(GetLocalizedString(115));                  RefreshDictionaries();              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,CheckUpdate,The following statement contains a magic number: if (versions == null)              {                  Logger.Instance().Log("Yatse2"' "Build list empty !"' true);                  if (showResult)                      ShowOkDialog(GetLocalizedString(114));              }              else              {                  if (versions.Version.Count < 1)                  {                      Logger.Instance().Log("Yatse2"' "Build list empty !"' true);                      if (showResult)                          ShowOkDialog(GetLocalizedString(114));                  }                  else                  {                      var lastBuild = versions.Version[versions.Version.Count - 1];                        if (ver.Build >= lastBuild.Build)                      {                          Logger.Instance().Log("Yatse2"' "Version is up2date!"' true);                          if (showResult)                              ShowOkDialog(GetLocalizedString(113));                      }                      else                      {                          Logger.Instance().Log("Yatse2"' "Update available : " + lastBuild.Build' true);                          var res = ShowYesNoDialog(GetLocalizedString(109));                          if (res)                          {                              Directory.CreateDirectory(Helper.AppPath + "Temp");                              if (GetUpdater())                              {                                  Process.Start(Helper.AppPath + @"Temp\Yatse2Setup.exe");                                  Close();                              }                              else                              {                                  ShowOkDialog(GetLocalizedString(101));                              }                          }                        }                  }              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,CheckUpdate,The following statement contains a magic number: if (versions == null)              {                  Logger.Instance().Log("Yatse2"' "Build list empty !"' true);                  if (showResult)                      ShowOkDialog(GetLocalizedString(114));              }              else              {                  if (versions.Version.Count < 1)                  {                      Logger.Instance().Log("Yatse2"' "Build list empty !"' true);                      if (showResult)                          ShowOkDialog(GetLocalizedString(114));                  }                  else                  {                      var lastBuild = versions.Version[versions.Version.Count - 1];                        if (ver.Build >= lastBuild.Build)                      {                          Logger.Instance().Log("Yatse2"' "Version is up2date!"' true);                          if (showResult)                              ShowOkDialog(GetLocalizedString(113));                      }                      else                      {                          Logger.Instance().Log("Yatse2"' "Update available : " + lastBuild.Build' true);                          var res = ShowYesNoDialog(GetLocalizedString(109));                          if (res)                          {                              Directory.CreateDirectory(Helper.AppPath + "Temp");                              if (GetUpdater())                              {                                  Process.Start(Helper.AppPath + @"Temp\Yatse2Setup.exe");                                  Close();                              }                              else                              {                                  ShowOkDialog(GetLocalizedString(101));                              }                          }                        }                  }              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,CheckUpdate,The following statement contains a magic number: if (versions == null)              {                  Logger.Instance().Log("Yatse2"' "Build list empty !"' true);                  if (showResult)                      ShowOkDialog(GetLocalizedString(114));              }              else              {                  if (versions.Version.Count < 1)                  {                      Logger.Instance().Log("Yatse2"' "Build list empty !"' true);                      if (showResult)                          ShowOkDialog(GetLocalizedString(114));                  }                  else                  {                      var lastBuild = versions.Version[versions.Version.Count - 1];                        if (ver.Build >= lastBuild.Build)                      {                          Logger.Instance().Log("Yatse2"' "Version is up2date!"' true);                          if (showResult)                              ShowOkDialog(GetLocalizedString(113));                      }                      else                      {                          Logger.Instance().Log("Yatse2"' "Update available : " + lastBuild.Build' true);                          var res = ShowYesNoDialog(GetLocalizedString(109));                          if (res)                          {                              Directory.CreateDirectory(Helper.AppPath + "Temp");                              if (GetUpdater())                              {                                  Process.Start(Helper.AppPath + @"Temp\Yatse2Setup.exe");                                  Close();                              }                              else                              {                                  ShowOkDialog(GetLocalizedString(101));                              }                          }                        }                  }              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,CheckUpdate,The following statement contains a magic number: if (versions == null)              {                  Logger.Instance().Log("Yatse2"' "Build list empty !"' true);                  if (showResult)                      ShowOkDialog(GetLocalizedString(114));              }              else              {                  if (versions.Version.Count < 1)                  {                      Logger.Instance().Log("Yatse2"' "Build list empty !"' true);                      if (showResult)                          ShowOkDialog(GetLocalizedString(114));                  }                  else                  {                      var lastBuild = versions.Version[versions.Version.Count - 1];                        if (ver.Build >= lastBuild.Build)                      {                          Logger.Instance().Log("Yatse2"' "Version is up2date!"' true);                          if (showResult)                              ShowOkDialog(GetLocalizedString(113));                      }                      else                      {                          Logger.Instance().Log("Yatse2"' "Update available : " + lastBuild.Build' true);                          var res = ShowYesNoDialog(GetLocalizedString(109));                          if (res)                          {                              Directory.CreateDirectory(Helper.AppPath + "Temp");                              if (GetUpdater())                              {                                  Process.Start(Helper.AppPath + @"Temp\Yatse2Setup.exe");                                  Close();                              }                              else                              {                                  ShowOkDialog(GetLocalizedString(101));                              }                          }                        }                  }              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,CheckUpdate,The following statement contains a magic number: if (versions == null)              {                  Logger.Instance().Log("Yatse2"' "Build list empty !"' true);                  if (showResult)                      ShowOkDialog(GetLocalizedString(114));              }              else              {                  if (versions.Version.Count < 1)                  {                      Logger.Instance().Log("Yatse2"' "Build list empty !"' true);                      if (showResult)                          ShowOkDialog(GetLocalizedString(114));                  }                  else                  {                      var lastBuild = versions.Version[versions.Version.Count - 1];                        if (ver.Build >= lastBuild.Build)                      {                          Logger.Instance().Log("Yatse2"' "Version is up2date!"' true);                          if (showResult)                              ShowOkDialog(GetLocalizedString(113));                      }                      else                      {                          Logger.Instance().Log("Yatse2"' "Update available : " + lastBuild.Build' true);                          var res = ShowYesNoDialog(GetLocalizedString(109));                          if (res)                          {                              Directory.CreateDirectory(Helper.AppPath + "Temp");                              if (GetUpdater())                              {                                  Process.Start(Helper.AppPath + @"Temp\Yatse2Setup.exe");                                  Close();                              }                              else                              {                                  ShowOkDialog(GetLocalizedString(101));                              }                          }                        }                  }              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,Timer_Tick,The following statement contains a magic number: if (_timerHeader > 15)              {                  RefreshHeader();                  _timerHeader = 0;              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,Change_Display_Settings,The following statement contains a magic number: if (_config.Resolution.DMPelsHeight == 480)              {                  _config.Hack480 = true;                  brd_Home_Video.Margin = new Thickness(0' 0' 100' 180);                  brd_Home_Music.Margin = new Thickness(0' 70' 100' 0);                  brd_Home_Other.Margin = new Thickness(0' 320' 100' 0);              }              else              {                  brd_Home_Video.Margin = new Thickness(0' 0' 100' 250);                  brd_Home_Music.Margin = new Thickness(0' 70' 100' 0);                  brd_Home_Other.Margin = new Thickness(0' 390' 100' 0);              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,Change_Display_Settings,The following statement contains a magic number: if (_config.Resolution.DMPelsHeight == 480)              {                  _config.Hack480 = true;                  brd_Home_Video.Margin = new Thickness(0' 0' 100' 180);                  brd_Home_Music.Margin = new Thickness(0' 70' 100' 0);                  brd_Home_Other.Margin = new Thickness(0' 320' 100' 0);              }              else              {                  brd_Home_Video.Margin = new Thickness(0' 0' 100' 250);                  brd_Home_Music.Margin = new Thickness(0' 70' 100' 0);                  brd_Home_Other.Margin = new Thickness(0' 390' 100' 0);              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,Change_Display_Settings,The following statement contains a magic number: if (_config.Resolution.DMPelsHeight == 480)              {                  _config.Hack480 = true;                  brd_Home_Video.Margin = new Thickness(0' 0' 100' 180);                  brd_Home_Music.Margin = new Thickness(0' 70' 100' 0);                  brd_Home_Other.Margin = new Thickness(0' 320' 100' 0);              }              else              {                  brd_Home_Video.Margin = new Thickness(0' 0' 100' 250);                  brd_Home_Music.Margin = new Thickness(0' 70' 100' 0);                  brd_Home_Other.Margin = new Thickness(0' 390' 100' 0);              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,Change_Display_Settings,The following statement contains a magic number: if (_config.Resolution.DMPelsHeight == 480)              {                  _config.Hack480 = true;                  brd_Home_Video.Margin = new Thickness(0' 0' 100' 180);                  brd_Home_Music.Margin = new Thickness(0' 70' 100' 0);                  brd_Home_Other.Margin = new Thickness(0' 320' 100' 0);              }              else              {                  brd_Home_Video.Margin = new Thickness(0' 0' 100' 250);                  brd_Home_Music.Margin = new Thickness(0' 70' 100' 0);                  brd_Home_Other.Margin = new Thickness(0' 390' 100' 0);              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,Change_Display_Settings,The following statement contains a magic number: if (_config.Resolution.DMPelsHeight == 480)              {                  _config.Hack480 = true;                  brd_Home_Video.Margin = new Thickness(0' 0' 100' 180);                  brd_Home_Music.Margin = new Thickness(0' 70' 100' 0);                  brd_Home_Other.Margin = new Thickness(0' 320' 100' 0);              }              else              {                  brd_Home_Video.Margin = new Thickness(0' 0' 100' 250);                  brd_Home_Music.Margin = new Thickness(0' 70' 100' 0);                  brd_Home_Other.Margin = new Thickness(0' 390' 100' 0);              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,Change_Display_Settings,The following statement contains a magic number: if (_config.Resolution.DMPelsHeight == 480)              {                  _config.Hack480 = true;                  brd_Home_Video.Margin = new Thickness(0' 0' 100' 180);                  brd_Home_Music.Margin = new Thickness(0' 70' 100' 0);                  brd_Home_Other.Margin = new Thickness(0' 320' 100' 0);              }              else              {                  brd_Home_Video.Margin = new Thickness(0' 0' 100' 250);                  brd_Home_Music.Margin = new Thickness(0' 70' 100' 0);                  brd_Home_Other.Margin = new Thickness(0' 390' 100' 0);              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,Change_Display_Settings,The following statement contains a magic number: if (_config.Resolution.DMPelsHeight == 480)              {                  _config.Hack480 = true;                  brd_Home_Video.Margin = new Thickness(0' 0' 100' 180);                  brd_Home_Music.Margin = new Thickness(0' 70' 100' 0);                  brd_Home_Other.Margin = new Thickness(0' 320' 100' 0);              }              else              {                  brd_Home_Video.Margin = new Thickness(0' 0' 100' 250);                  brd_Home_Music.Margin = new Thickness(0' 70' 100' 0);                  brd_Home_Other.Margin = new Thickness(0' 390' 100' 0);              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,Change_Display_Settings,The following statement contains a magic number: if (_config.Resolution.DMPelsHeight == 480)              {                  _config.Hack480 = true;                  brd_Home_Video.Margin = new Thickness(0' 0' 100' 180);                  brd_Home_Music.Margin = new Thickness(0' 70' 100' 0);                  brd_Home_Other.Margin = new Thickness(0' 320' 100' 0);              }              else              {                  brd_Home_Video.Margin = new Thickness(0' 0' 100' 250);                  brd_Home_Music.Margin = new Thickness(0' 70' 100' 0);                  brd_Home_Other.Margin = new Thickness(0' 390' 100' 0);              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,Change_Display_Settings,The following statement contains a magic number: if (_config.Resolution.DMPelsHeight == 480)              {                  _config.Hack480 = true;                  brd_Home_Video.Margin = new Thickness(0' 0' 100' 180);                  brd_Home_Music.Margin = new Thickness(0' 70' 100' 0);                  brd_Home_Other.Margin = new Thickness(0' 320' 100' 0);              }              else              {                  brd_Home_Video.Margin = new Thickness(0' 0' 100' 250);                  brd_Home_Music.Margin = new Thickness(0' 70' 100' 0);                  brd_Home_Other.Margin = new Thickness(0' 390' 100' 0);              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,Change_Display_Settings,The following statement contains a magic number: if (_config.Resolution.DMPelsHeight == 480)              {                  _config.Hack480 = true;                  brd_Home_Video.Margin = new Thickness(0' 0' 100' 180);                  brd_Home_Music.Margin = new Thickness(0' 70' 100' 0);                  brd_Home_Other.Margin = new Thickness(0' 320' 100' 0);              }              else              {                  brd_Home_Video.Margin = new Thickness(0' 0' 100' 250);                  brd_Home_Music.Margin = new Thickness(0' 70' 100' 0);                  brd_Home_Other.Margin = new Thickness(0' 390' 100' 0);              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,Change_Display_Settings,The following statement contains a magic number: if (_config.Resolution.DMPelsHeight == 480)              {                  _config.Hack480 = true;                  brd_Home_Video.Margin = new Thickness(0' 0' 100' 180);                  brd_Home_Music.Margin = new Thickness(0' 70' 100' 0);                  brd_Home_Other.Margin = new Thickness(0' 320' 100' 0);              }              else              {                  brd_Home_Video.Margin = new Thickness(0' 0' 100' 250);                  brd_Home_Music.Margin = new Thickness(0' 70' 100' 0);                  brd_Home_Other.Margin = new Thickness(0' 390' 100' 0);              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,Change_Display_Settings,The following statement contains a magic number: if (_config.Resolution.DMPelsHeight == 480)              {                  _config.Hack480 = true;                  brd_Home_Video.Margin = new Thickness(0' 0' 100' 180);                  brd_Home_Music.Margin = new Thickness(0' 70' 100' 0);                  brd_Home_Other.Margin = new Thickness(0' 320' 100' 0);              }              else              {                  brd_Home_Video.Margin = new Thickness(0' 0' 100' 250);                  brd_Home_Music.Margin = new Thickness(0' 70' 100' 0);                  brd_Home_Other.Margin = new Thickness(0' 390' 100' 0);              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,Change_Display_Settings,The following statement contains a magic number: if (_config.Resolution.DMPelsHeight == 480)              {                  _config.Hack480 = true;                  brd_Home_Video.Margin = new Thickness(0' 0' 100' 180);                  brd_Home_Music.Margin = new Thickness(0' 70' 100' 0);                  brd_Home_Other.Margin = new Thickness(0' 320' 100' 0);              }              else              {                  brd_Home_Video.Margin = new Thickness(0' 0' 100' 250);                  brd_Home_Music.Margin = new Thickness(0' 70' 100' 0);                  brd_Home_Other.Margin = new Thickness(0' 390' 100' 0);              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,RefreshTFAudioAlbums,The following statement contains a magic number: foreach (var line in lines)              {                  if (line.Thumb == "NONE" || String.IsNullOrEmpty(line.Thumb)) continue;                  var path = Helper.CachePath + @"Music\Thumbs\" + _remotePlugin.GetHashFromFileName(line.Thumb) + ".jpg";                  if (File.Exists(path)) continue;                  var info = new ApiImageDownloadInfo                                 {                                     Destination = path'                                     Source = line.Thumb'                                     ToThumb = _config.CropCacheImage'                                     MaxHeight = (int)Height/2                                 };                  dlinfo.Add(info);              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,RefreshTFAudioArtists,The following statement contains a magic number: foreach (var line in lines)              {                  if (line.Thumb != "NONE" && ! String.IsNullOrEmpty(line.Thumb))                  {                      var path = Helper.CachePath + @"Music\Artists\" + _remotePlugin.GetHashFromFileName(line.Thumb) + ".jpg";                      if (!File.Exists(path))                      {                          var info = new ApiImageDownloadInfo                          {                              Destination = path'                              Source = line.Thumb'                              ToThumb = _config.CropCacheImage'                              MaxHeight = (int)Height / 2                          };                          dlinfo.Add(info);                      }                  }                  if (line.Fanart != "NONE" && !String.IsNullOrEmpty(line.Fanart))                  {                      var path = Helper.CachePath + @"Music\Fanarts\" + _remotePlugin.GetHashFromFileName(line.Fanart) + ".jpg";                      if (!File.Exists(path))                      {                          var info = new ApiImageDownloadInfo                          {                              Destination = path'                              Source = line.Fanart'                              ToThumb = _config.CropCacheImage'                              MaxHeight = (int)Height                          };                          dlinfo.Add(info);                      }                  }              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,RefreshTFMovies,The following statement contains a magic number: foreach (var line in lines)              {                  if (line.Thumb != "NONE" && !String.IsNullOrEmpty(line.Thumb))                  {                      var path = Helper.CachePath + @"Video\Thumbs\" + _remotePlugin.GetHashFromFileName(line.Thumb) + ".jpg";                      if (!File.Exists(path))                      {                          var info = new ApiImageDownloadInfo                          {                              Destination = path'                              Source = line.Thumb'                              ToThumb = _config.CropCacheImage'                              MaxHeight = (int)Height / 2                          };                          dlinfo.Add(info);                      }                  }                  if (line.Fanart != "NONE" && !String.IsNullOrEmpty(line.Fanart))                  {                      var path = Helper.CachePath + @"Video\Fanarts\" + _remotePlugin.GetHashFromFileName(line.Fanart) + ".jpg";                      if (!File.Exists(path))                      {                          var info = new ApiImageDownloadInfo                          {                              Destination = path'                              Source = line.Fanart'                              ToThumb = _config.CropCacheImage'                              MaxHeight = (int)Height                          };                          dlinfo.Add(info);                      }                  }              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,RefreshTFTvShows,The following statement contains a magic number: foreach (var line in lines)              {                  if (line.Thumb != "NONE" && !String.IsNullOrEmpty(line.Thumb))                  {                      var path = Helper.CachePath + @"Video\Thumbs\" + _remotePlugin.GetHashFromFileName(line.Thumb) + ".jpg";                      if (!File.Exists(path))                      {                          var info = new ApiImageDownloadInfo                          {                              Destination = path'                              Source = line.Thumb'                              ToThumb = _config.CropCacheImage'                              MaxHeight = (int)Height / 2                          };                          dlinfo.Add(info);                      }                  }                  if (line.Fanart != "NONE" && !String.IsNullOrEmpty(line.Fanart))                  {                      var path = Helper.CachePath + @"Video\Fanarts\" + _remotePlugin.GetHashFromFileName(line.Fanart) + ".jpg";                      if (!File.Exists(path))                      {                          var info = new ApiImageDownloadInfo                          {                              Destination = path'                              Source = line.Fanart'                              ToThumb = _config.CropCacheImage'                              MaxHeight = (int)Height                          };                          dlinfo.Add(info);                      }                  }              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,RefreshTFTvEpisodes,The following statement contains a magic number: foreach (var line in lines)              {                  if (line.Thumb != "NONE" && !String.IsNullOrEmpty(line.Thumb))                  {                      var path = Helper.CachePath + @"Video\Thumbs\" + _remotePlugin.GetHashFromFileName(line.Thumb) + ".jpg";                      if (!File.Exists(path))                      {                          var info = new ApiImageDownloadInfo                          {                              Destination = path'                              Source = line.Thumb'                              ToThumb = _config.CropCacheImage'                              MaxHeight = (int)Height / 2                          };                          dlinfo.Add(info);                      }                  }                  if (line.Fanart != "NONE" && !String.IsNullOrEmpty(line.Fanart))                  {                      var path = Helper.CachePath + @"Video\Fanarts\" + _remotePlugin.GetHashFromFileName(line.Fanart) + ".jpg";                      if (!File.Exists(path))                      {                          var info = new ApiImageDownloadInfo                          {                              Destination = path'                              Source = line.Fanart'                              ToThumb = _config.CropCacheImage'                              MaxHeight = (int)Height                          };                          dlinfo.Add(info);                      }                  }              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,RefreshTFTvSeasons,The following statement contains a magic number: foreach (var line in lines)              {                  if (line.Thumb != "NONE" && !String.IsNullOrEmpty(line.Thumb))                  {                      var path = Helper.CachePath + @"Video\Thumbs\" + _remotePlugin.GetHashFromFileName(line.Thumb) + ".jpg";                      if (!File.Exists(path))                      {                          var info = new ApiImageDownloadInfo                          {                              Destination = path'                              Source = line.Thumb'                              ToThumb = _config.CropCacheImage'                              MaxHeight = (int)Height / 2                          };                          dlinfo.Add(info);                      }                  }                  if (line.Fanart != "NONE" && !String.IsNullOrEmpty(line.Fanart))                  {                      var path = Helper.CachePath + @"Video\Fanarts\" + _remotePlugin.GetHashFromFileName(line.Fanart) + ".jpg";                      if (!File.Exists(path))                      {                          var info = new ApiImageDownloadInfo                          {                              Destination = path'                              Source = line.Fanart'                              ToThumb = _config.CropCacheImage'                              MaxHeight = (int)Height                          };                          dlinfo.Add(info);                      }                  }              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,RefreshLibrary,The following statement contains a magic number: _yatse2Properties.RefreshWhat = GetLocalizedString(2);
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,RefreshLibrary,The following statement contains a magic number: _yatse2Properties.RefreshWhat = GetLocalizedString(3);
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,RefreshLibrary,The following statement contains a magic number: _yatse2Properties.RefreshWhat = GetLocalizedString(4);
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,RefreshLibrary,The following statement contains a magic number: _yatse2Properties.RefreshWhat = GetLocalizedString(5);
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,RefreshLibrary,The following statement contains a magic number: _yatse2Properties.RefreshWhat = GetLocalizedString(6);
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,RefreshLibrary,The following statement contains a magic number: _yatse2Properties.RefreshWhat = GetLocalizedString(7);
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,RefreshLibrary,The following statement contains a magic number: _yatse2Properties.RefreshWhat = GetLocalizedString(8);
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,RefreshLibrary,The following statement contains a magic number: ShowPopup(GetLocalizedString(101));
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,UpdateCurrently,The following statement contains a magic number: switch (nowPlaying.MediaType)              {                  case "Audio":                      Logger.Instance().Log("Yatse2"' "New Music Media : " + nowPlaying.FileName);                      _yatse2Properties.Currently.IsMusic = true;                      _yatse2Properties.Currently.MusicAlbum = nowPlaying.Album;                      _yatse2Properties.Currently.MusicSong = nowPlaying.Title;                      _yatse2Properties.Currently.MusicArtist = nowPlaying.Artist;                      _yatse2Properties.Currently.Fanart = _config.MusicFanartRotation ? GetRandomImagePath(Helper.CachePath + @"Music\Fanarts") : GetMusicFanartPath(nowPlaying.FanartURL);                        _yatse2Properties.Currently.Thumb = GetMusicThumbPath(nowPlaying.ThumbURL); // TODO : Change to converter                      _yatse2Properties.Currently.MusicYear = nowPlaying.Year.ToString(CultureInfo.InvariantCulture);                      _yatse2Properties.Currently.MusicTrack = nowPlaying.Track.ToString(CultureInfo.InvariantCulture);                      _yatse2Properties.Currently.MusicGenre = nowPlaying.Genre;                        var songinfo = _database.GetAudioSongFromFile(_remoteInfo.Id' nowPlaying.FileName);                      if (songinfo.Count > 0)                      {                          var artistinfo = _database.GetAudioArtistFromName(_remoteInfo.Id' songinfo[0].Artist);                          _yatse2Properties.Currently.MusicBiography = artistinfo.Count > 0 ? artistinfo[0].Biography : "No information";                          if (!_config.MusicFanartRotation)                              _yatse2Properties.Currently.Fanart = artistinfo.Count > 0 ? GetMusicFanartPath(artistinfo[0].Fanart) : "";                      }                      AudioStarting();                        break;                  case "TvShow":                      Logger.Instance().Log("Yatse2"' "New TvShow Media : " + nowPlaying.FileName);                      _yatse2Properties.Currently.IsTv = true;                      _yatse2Properties.Currently.Thumb = GetVideoThumbPath(nowPlaying.ThumbURL); // TODO : Change to converter                      var epinfo = _database.GetTvEpisodeFromFile(_remoteInfo.Id' nowPlaying.FileName);                      if (epinfo.Count > 0)                      {                          _yatse2Properties.Currently.TvShow = epinfo[0].ShowTitle + " - " + epinfo[0].Title;                          _yatse2Properties.Currently.TvTitle = epinfo[0].Title;                          _yatse2Properties.Currently.TvAired = epinfo[0].Date;                          _yatse2Properties.Currently.TvPlot = epinfo[0].Plot;                          _yatse2Properties.Currently.TvEpisode = GetLocalizedString(77) + " " + epinfo[0].Season + " " + GetLocalizedString(78) + " " + epinfo[0].Episode;                          _yatse2Properties.Currently.TvNote = epinfo[0].Rating;                          var showinfo = _database.GetTvShowFromName(_remoteInfo.Id' epinfo[0].ShowTitle);                          _yatse2Properties.Currently.Fanart = GetVideoFanartPath(showinfo.Count > 0 ? showinfo[0].Fanart : nowPlaying.FanartURL); // TODO : Change to Covnerter                          _yatse2Properties.Currently.TvStudio = Helper.SkinPath + _yatse2Properties.Skin + @"\Studios\" + epinfo[0].Studio + ".png";                          _yatse2Properties.Currently.TvDirector = epinfo[0].Director;                          _yatse2Properties.Currently.TvYear = epinfo[0].Date.Length > 3 ? epinfo[0].Date.Substring(0' 4) : epinfo[0].Date;                          _yatse2Properties.Currently.TvVotes = "";                      }                      else                      {                          _yatse2Properties.Currently.TvShow = nowPlaying.ShowTitle + " - S" + nowPlaying.SeasonNumber + " E" + nowPlaying.EpisodeNumber;                          _yatse2Properties.Currently.TvTitle = nowPlaying.Title;                          _yatse2Properties.Currently.TvAired = nowPlaying.FirstAired.ToShortDateString();                          _yatse2Properties.Currently.TvPlot = nowPlaying.Plot;                          _yatse2Properties.Currently.TvEpisode = GetLocalizedString(77) + " " + nowPlaying.SeasonNumber + " " + GetLocalizedString(78) + " " + nowPlaying.EpisodeNumber;                          _yatse2Properties.Currently.TvNote = nowPlaying.Rating;                          _yatse2Properties.Currently.Fanart = GetVideoFanartPath(nowPlaying.FanartURL); // TODO : Change to Converter                          _yatse2Properties.Currently.TvStudio = Helper.SkinPath + _yatse2Properties.Skin + @"\Studios\" + nowPlaying.Studio + ".png";                          _yatse2Properties.Currently.TvDirector = nowPlaying.Director;                          _yatse2Properties.Currently.TvYear = nowPlaying.Year.ToString(CultureInfo.InvariantCulture);                          _yatse2Properties.Currently.TvVotes = "";                      }                      VideoStarting();                      break;                  case "Movie":                      _yatse2Properties.Currently.Thumb = GetVideoThumbPath(nowPlaying.ThumbURL); // TODO : Change to converter                        Logger.Instance().Log("Yatse2"' "New Movie Media : " + nowPlaying.FileName);                      var movieinfo = _database.GetMovieFromFile(_remoteInfo.Id' nowPlaying.FileName);                      _yatse2Properties.Currently.IsMovie = true;                      if (movieinfo.Count > 0)                      {                          _yatse2Properties.Currently.MovieTitle = movieinfo[0].Title;                          _yatse2Properties.Currently.Fanart = GetVideoFanartPath(movieinfo[0].Fanart); // TODO : Change to Covnerter                          _yatse2Properties.Currently.MovieYear = movieinfo[0].Year.ToString(CultureInfo.InvariantCulture);                          _yatse2Properties.Currently.MoviePlot = movieinfo[0].Plot;                          _yatse2Properties.Currently.MovieDirector = movieinfo[0].Director;                          _yatse2Properties.Currently.MovieNote = movieinfo[0].Rating;                          _yatse2Properties.Currently.MovieVotes = movieinfo[0].Votes + " " + GetLocalizedString(82);                          _yatse2Properties.Currently.MovieStudio = Helper.SkinPath + _yatse2Properties.Skin + @"\Studios\" + movieinfo[0].Studio + ".png";                      }                      else                      {                          _yatse2Properties.Currently.MovieTitle = nowPlaying.Title;                          _yatse2Properties.Currently.Fanart = GetVideoFanartPath(nowPlaying.FanartURL); // TODO : Change to Converter                          _yatse2Properties.Currently.MovieYear = nowPlaying.Year.ToString(CultureInfo.InvariantCulture);                          _yatse2Properties.Currently.MoviePlot = nowPlaying.Plot;                          _yatse2Properties.Currently.MovieDirector = nowPlaying.Director;                          _yatse2Properties.Currently.MovieNote = nowPlaying.Rating;                          _yatse2Properties.Currently.MovieStudio = Helper.SkinPath + _yatse2Properties.Skin + @"\Studios\" + nowPlaying.Studio + ".png";                      }                        VideoStarting();                      break;                  case "Unknown":                      _yatse2Properties.Currently.IsUnknown = true;                      _yatse2Properties.Currently.Thumb = GetVideoThumbPath(nowPlaying.ThumbURL); // TODO : Change to converter                      _yatse2Properties.Currently.UnknownFile = nowPlaying.FileName;                      _yatse2Properties.Currently.Fanart = GetVideoFanartPath(nowPlaying.FanartURL); // TODO : Change to Covnerter                        VideoStarting();                      break;                  default:                      break;              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,UpdateCurrently,The following statement contains a magic number: switch (nowPlaying.MediaType)              {                  case "Audio":                      Logger.Instance().Log("Yatse2"' "New Music Media : " + nowPlaying.FileName);                      _yatse2Properties.Currently.IsMusic = true;                      _yatse2Properties.Currently.MusicAlbum = nowPlaying.Album;                      _yatse2Properties.Currently.MusicSong = nowPlaying.Title;                      _yatse2Properties.Currently.MusicArtist = nowPlaying.Artist;                      _yatse2Properties.Currently.Fanart = _config.MusicFanartRotation ? GetRandomImagePath(Helper.CachePath + @"Music\Fanarts") : GetMusicFanartPath(nowPlaying.FanartURL);                        _yatse2Properties.Currently.Thumb = GetMusicThumbPath(nowPlaying.ThumbURL); // TODO : Change to converter                      _yatse2Properties.Currently.MusicYear = nowPlaying.Year.ToString(CultureInfo.InvariantCulture);                      _yatse2Properties.Currently.MusicTrack = nowPlaying.Track.ToString(CultureInfo.InvariantCulture);                      _yatse2Properties.Currently.MusicGenre = nowPlaying.Genre;                        var songinfo = _database.GetAudioSongFromFile(_remoteInfo.Id' nowPlaying.FileName);                      if (songinfo.Count > 0)                      {                          var artistinfo = _database.GetAudioArtistFromName(_remoteInfo.Id' songinfo[0].Artist);                          _yatse2Properties.Currently.MusicBiography = artistinfo.Count > 0 ? artistinfo[0].Biography : "No information";                          if (!_config.MusicFanartRotation)                              _yatse2Properties.Currently.Fanart = artistinfo.Count > 0 ? GetMusicFanartPath(artistinfo[0].Fanart) : "";                      }                      AudioStarting();                        break;                  case "TvShow":                      Logger.Instance().Log("Yatse2"' "New TvShow Media : " + nowPlaying.FileName);                      _yatse2Properties.Currently.IsTv = true;                      _yatse2Properties.Currently.Thumb = GetVideoThumbPath(nowPlaying.ThumbURL); // TODO : Change to converter                      var epinfo = _database.GetTvEpisodeFromFile(_remoteInfo.Id' nowPlaying.FileName);                      if (epinfo.Count > 0)                      {                          _yatse2Properties.Currently.TvShow = epinfo[0].ShowTitle + " - " + epinfo[0].Title;                          _yatse2Properties.Currently.TvTitle = epinfo[0].Title;                          _yatse2Properties.Currently.TvAired = epinfo[0].Date;                          _yatse2Properties.Currently.TvPlot = epinfo[0].Plot;                          _yatse2Properties.Currently.TvEpisode = GetLocalizedString(77) + " " + epinfo[0].Season + " " + GetLocalizedString(78) + " " + epinfo[0].Episode;                          _yatse2Properties.Currently.TvNote = epinfo[0].Rating;                          var showinfo = _database.GetTvShowFromName(_remoteInfo.Id' epinfo[0].ShowTitle);                          _yatse2Properties.Currently.Fanart = GetVideoFanartPath(showinfo.Count > 0 ? showinfo[0].Fanart : nowPlaying.FanartURL); // TODO : Change to Covnerter                          _yatse2Properties.Currently.TvStudio = Helper.SkinPath + _yatse2Properties.Skin + @"\Studios\" + epinfo[0].Studio + ".png";                          _yatse2Properties.Currently.TvDirector = epinfo[0].Director;                          _yatse2Properties.Currently.TvYear = epinfo[0].Date.Length > 3 ? epinfo[0].Date.Substring(0' 4) : epinfo[0].Date;                          _yatse2Properties.Currently.TvVotes = "";                      }                      else                      {                          _yatse2Properties.Currently.TvShow = nowPlaying.ShowTitle + " - S" + nowPlaying.SeasonNumber + " E" + nowPlaying.EpisodeNumber;                          _yatse2Properties.Currently.TvTitle = nowPlaying.Title;                          _yatse2Properties.Currently.TvAired = nowPlaying.FirstAired.ToShortDateString();                          _yatse2Properties.Currently.TvPlot = nowPlaying.Plot;                          _yatse2Properties.Currently.TvEpisode = GetLocalizedString(77) + " " + nowPlaying.SeasonNumber + " " + GetLocalizedString(78) + " " + nowPlaying.EpisodeNumber;                          _yatse2Properties.Currently.TvNote = nowPlaying.Rating;                          _yatse2Properties.Currently.Fanart = GetVideoFanartPath(nowPlaying.FanartURL); // TODO : Change to Converter                          _yatse2Properties.Currently.TvStudio = Helper.SkinPath + _yatse2Properties.Skin + @"\Studios\" + nowPlaying.Studio + ".png";                          _yatse2Properties.Currently.TvDirector = nowPlaying.Director;                          _yatse2Properties.Currently.TvYear = nowPlaying.Year.ToString(CultureInfo.InvariantCulture);                          _yatse2Properties.Currently.TvVotes = "";                      }                      VideoStarting();                      break;                  case "Movie":                      _yatse2Properties.Currently.Thumb = GetVideoThumbPath(nowPlaying.ThumbURL); // TODO : Change to converter                        Logger.Instance().Log("Yatse2"' "New Movie Media : " + nowPlaying.FileName);                      var movieinfo = _database.GetMovieFromFile(_remoteInfo.Id' nowPlaying.FileName);                      _yatse2Properties.Currently.IsMovie = true;                      if (movieinfo.Count > 0)                      {                          _yatse2Properties.Currently.MovieTitle = movieinfo[0].Title;                          _yatse2Properties.Currently.Fanart = GetVideoFanartPath(movieinfo[0].Fanart); // TODO : Change to Covnerter                          _yatse2Properties.Currently.MovieYear = movieinfo[0].Year.ToString(CultureInfo.InvariantCulture);                          _yatse2Properties.Currently.MoviePlot = movieinfo[0].Plot;                          _yatse2Properties.Currently.MovieDirector = movieinfo[0].Director;                          _yatse2Properties.Currently.MovieNote = movieinfo[0].Rating;                          _yatse2Properties.Currently.MovieVotes = movieinfo[0].Votes + " " + GetLocalizedString(82);                          _yatse2Properties.Currently.MovieStudio = Helper.SkinPath + _yatse2Properties.Skin + @"\Studios\" + movieinfo[0].Studio + ".png";                      }                      else                      {                          _yatse2Properties.Currently.MovieTitle = nowPlaying.Title;                          _yatse2Properties.Currently.Fanart = GetVideoFanartPath(nowPlaying.FanartURL); // TODO : Change to Converter                          _yatse2Properties.Currently.MovieYear = nowPlaying.Year.ToString(CultureInfo.InvariantCulture);                          _yatse2Properties.Currently.MoviePlot = nowPlaying.Plot;                          _yatse2Properties.Currently.MovieDirector = nowPlaying.Director;                          _yatse2Properties.Currently.MovieNote = nowPlaying.Rating;                          _yatse2Properties.Currently.MovieStudio = Helper.SkinPath + _yatse2Properties.Skin + @"\Studios\" + nowPlaying.Studio + ".png";                      }                        VideoStarting();                      break;                  case "Unknown":                      _yatse2Properties.Currently.IsUnknown = true;                      _yatse2Properties.Currently.Thumb = GetVideoThumbPath(nowPlaying.ThumbURL); // TODO : Change to converter                      _yatse2Properties.Currently.UnknownFile = nowPlaying.FileName;                      _yatse2Properties.Currently.Fanart = GetVideoFanartPath(nowPlaying.FanartURL); // TODO : Change to Covnerter                        VideoStarting();                      break;                  default:                      break;              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,UpdateCurrently,The following statement contains a magic number: switch (nowPlaying.MediaType)              {                  case "Audio":                      Logger.Instance().Log("Yatse2"' "New Music Media : " + nowPlaying.FileName);                      _yatse2Properties.Currently.IsMusic = true;                      _yatse2Properties.Currently.MusicAlbum = nowPlaying.Album;                      _yatse2Properties.Currently.MusicSong = nowPlaying.Title;                      _yatse2Properties.Currently.MusicArtist = nowPlaying.Artist;                      _yatse2Properties.Currently.Fanart = _config.MusicFanartRotation ? GetRandomImagePath(Helper.CachePath + @"Music\Fanarts") : GetMusicFanartPath(nowPlaying.FanartURL);                        _yatse2Properties.Currently.Thumb = GetMusicThumbPath(nowPlaying.ThumbURL); // TODO : Change to converter                      _yatse2Properties.Currently.MusicYear = nowPlaying.Year.ToString(CultureInfo.InvariantCulture);                      _yatse2Properties.Currently.MusicTrack = nowPlaying.Track.ToString(CultureInfo.InvariantCulture);                      _yatse2Properties.Currently.MusicGenre = nowPlaying.Genre;                        var songinfo = _database.GetAudioSongFromFile(_remoteInfo.Id' nowPlaying.FileName);                      if (songinfo.Count > 0)                      {                          var artistinfo = _database.GetAudioArtistFromName(_remoteInfo.Id' songinfo[0].Artist);                          _yatse2Properties.Currently.MusicBiography = artistinfo.Count > 0 ? artistinfo[0].Biography : "No information";                          if (!_config.MusicFanartRotation)                              _yatse2Properties.Currently.Fanart = artistinfo.Count > 0 ? GetMusicFanartPath(artistinfo[0].Fanart) : "";                      }                      AudioStarting();                        break;                  case "TvShow":                      Logger.Instance().Log("Yatse2"' "New TvShow Media : " + nowPlaying.FileName);                      _yatse2Properties.Currently.IsTv = true;                      _yatse2Properties.Currently.Thumb = GetVideoThumbPath(nowPlaying.ThumbURL); // TODO : Change to converter                      var epinfo = _database.GetTvEpisodeFromFile(_remoteInfo.Id' nowPlaying.FileName);                      if (epinfo.Count > 0)                      {                          _yatse2Properties.Currently.TvShow = epinfo[0].ShowTitle + " - " + epinfo[0].Title;                          _yatse2Properties.Currently.TvTitle = epinfo[0].Title;                          _yatse2Properties.Currently.TvAired = epinfo[0].Date;                          _yatse2Properties.Currently.TvPlot = epinfo[0].Plot;                          _yatse2Properties.Currently.TvEpisode = GetLocalizedString(77) + " " + epinfo[0].Season + " " + GetLocalizedString(78) + " " + epinfo[0].Episode;                          _yatse2Properties.Currently.TvNote = epinfo[0].Rating;                          var showinfo = _database.GetTvShowFromName(_remoteInfo.Id' epinfo[0].ShowTitle);                          _yatse2Properties.Currently.Fanart = GetVideoFanartPath(showinfo.Count > 0 ? showinfo[0].Fanart : nowPlaying.FanartURL); // TODO : Change to Covnerter                          _yatse2Properties.Currently.TvStudio = Helper.SkinPath + _yatse2Properties.Skin + @"\Studios\" + epinfo[0].Studio + ".png";                          _yatse2Properties.Currently.TvDirector = epinfo[0].Director;                          _yatse2Properties.Currently.TvYear = epinfo[0].Date.Length > 3 ? epinfo[0].Date.Substring(0' 4) : epinfo[0].Date;                          _yatse2Properties.Currently.TvVotes = "";                      }                      else                      {                          _yatse2Properties.Currently.TvShow = nowPlaying.ShowTitle + " - S" + nowPlaying.SeasonNumber + " E" + nowPlaying.EpisodeNumber;                          _yatse2Properties.Currently.TvTitle = nowPlaying.Title;                          _yatse2Properties.Currently.TvAired = nowPlaying.FirstAired.ToShortDateString();                          _yatse2Properties.Currently.TvPlot = nowPlaying.Plot;                          _yatse2Properties.Currently.TvEpisode = GetLocalizedString(77) + " " + nowPlaying.SeasonNumber + " " + GetLocalizedString(78) + " " + nowPlaying.EpisodeNumber;                          _yatse2Properties.Currently.TvNote = nowPlaying.Rating;                          _yatse2Properties.Currently.Fanart = GetVideoFanartPath(nowPlaying.FanartURL); // TODO : Change to Converter                          _yatse2Properties.Currently.TvStudio = Helper.SkinPath + _yatse2Properties.Skin + @"\Studios\" + nowPlaying.Studio + ".png";                          _yatse2Properties.Currently.TvDirector = nowPlaying.Director;                          _yatse2Properties.Currently.TvYear = nowPlaying.Year.ToString(CultureInfo.InvariantCulture);                          _yatse2Properties.Currently.TvVotes = "";                      }                      VideoStarting();                      break;                  case "Movie":                      _yatse2Properties.Currently.Thumb = GetVideoThumbPath(nowPlaying.ThumbURL); // TODO : Change to converter                        Logger.Instance().Log("Yatse2"' "New Movie Media : " + nowPlaying.FileName);                      var movieinfo = _database.GetMovieFromFile(_remoteInfo.Id' nowPlaying.FileName);                      _yatse2Properties.Currently.IsMovie = true;                      if (movieinfo.Count > 0)                      {                          _yatse2Properties.Currently.MovieTitle = movieinfo[0].Title;                          _yatse2Properties.Currently.Fanart = GetVideoFanartPath(movieinfo[0].Fanart); // TODO : Change to Covnerter                          _yatse2Properties.Currently.MovieYear = movieinfo[0].Year.ToString(CultureInfo.InvariantCulture);                          _yatse2Properties.Currently.MoviePlot = movieinfo[0].Plot;                          _yatse2Properties.Currently.MovieDirector = movieinfo[0].Director;                          _yatse2Properties.Currently.MovieNote = movieinfo[0].Rating;                          _yatse2Properties.Currently.MovieVotes = movieinfo[0].Votes + " " + GetLocalizedString(82);                          _yatse2Properties.Currently.MovieStudio = Helper.SkinPath + _yatse2Properties.Skin + @"\Studios\" + movieinfo[0].Studio + ".png";                      }                      else                      {                          _yatse2Properties.Currently.MovieTitle = nowPlaying.Title;                          _yatse2Properties.Currently.Fanart = GetVideoFanartPath(nowPlaying.FanartURL); // TODO : Change to Converter                          _yatse2Properties.Currently.MovieYear = nowPlaying.Year.ToString(CultureInfo.InvariantCulture);                          _yatse2Properties.Currently.MoviePlot = nowPlaying.Plot;                          _yatse2Properties.Currently.MovieDirector = nowPlaying.Director;                          _yatse2Properties.Currently.MovieNote = nowPlaying.Rating;                          _yatse2Properties.Currently.MovieStudio = Helper.SkinPath + _yatse2Properties.Skin + @"\Studios\" + nowPlaying.Studio + ".png";                      }                        VideoStarting();                      break;                  case "Unknown":                      _yatse2Properties.Currently.IsUnknown = true;                      _yatse2Properties.Currently.Thumb = GetVideoThumbPath(nowPlaying.ThumbURL); // TODO : Change to converter                      _yatse2Properties.Currently.UnknownFile = nowPlaying.FileName;                      _yatse2Properties.Currently.Fanart = GetVideoFanartPath(nowPlaying.FanartURL); // TODO : Change to Covnerter                        VideoStarting();                      break;                  default:                      break;              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,UpdateCurrently,The following statement contains a magic number: switch (nowPlaying.MediaType)              {                  case "Audio":                      Logger.Instance().Log("Yatse2"' "New Music Media : " + nowPlaying.FileName);                      _yatse2Properties.Currently.IsMusic = true;                      _yatse2Properties.Currently.MusicAlbum = nowPlaying.Album;                      _yatse2Properties.Currently.MusicSong = nowPlaying.Title;                      _yatse2Properties.Currently.MusicArtist = nowPlaying.Artist;                      _yatse2Properties.Currently.Fanart = _config.MusicFanartRotation ? GetRandomImagePath(Helper.CachePath + @"Music\Fanarts") : GetMusicFanartPath(nowPlaying.FanartURL);                        _yatse2Properties.Currently.Thumb = GetMusicThumbPath(nowPlaying.ThumbURL); // TODO : Change to converter                      _yatse2Properties.Currently.MusicYear = nowPlaying.Year.ToString(CultureInfo.InvariantCulture);                      _yatse2Properties.Currently.MusicTrack = nowPlaying.Track.ToString(CultureInfo.InvariantCulture);                      _yatse2Properties.Currently.MusicGenre = nowPlaying.Genre;                        var songinfo = _database.GetAudioSongFromFile(_remoteInfo.Id' nowPlaying.FileName);                      if (songinfo.Count > 0)                      {                          var artistinfo = _database.GetAudioArtistFromName(_remoteInfo.Id' songinfo[0].Artist);                          _yatse2Properties.Currently.MusicBiography = artistinfo.Count > 0 ? artistinfo[0].Biography : "No information";                          if (!_config.MusicFanartRotation)                              _yatse2Properties.Currently.Fanart = artistinfo.Count > 0 ? GetMusicFanartPath(artistinfo[0].Fanart) : "";                      }                      AudioStarting();                        break;                  case "TvShow":                      Logger.Instance().Log("Yatse2"' "New TvShow Media : " + nowPlaying.FileName);                      _yatse2Properties.Currently.IsTv = true;                      _yatse2Properties.Currently.Thumb = GetVideoThumbPath(nowPlaying.ThumbURL); // TODO : Change to converter                      var epinfo = _database.GetTvEpisodeFromFile(_remoteInfo.Id' nowPlaying.FileName);                      if (epinfo.Count > 0)                      {                          _yatse2Properties.Currently.TvShow = epinfo[0].ShowTitle + " - " + epinfo[0].Title;                          _yatse2Properties.Currently.TvTitle = epinfo[0].Title;                          _yatse2Properties.Currently.TvAired = epinfo[0].Date;                          _yatse2Properties.Currently.TvPlot = epinfo[0].Plot;                          _yatse2Properties.Currently.TvEpisode = GetLocalizedString(77) + " " + epinfo[0].Season + " " + GetLocalizedString(78) + " " + epinfo[0].Episode;                          _yatse2Properties.Currently.TvNote = epinfo[0].Rating;                          var showinfo = _database.GetTvShowFromName(_remoteInfo.Id' epinfo[0].ShowTitle);                          _yatse2Properties.Currently.Fanart = GetVideoFanartPath(showinfo.Count > 0 ? showinfo[0].Fanart : nowPlaying.FanartURL); // TODO : Change to Covnerter                          _yatse2Properties.Currently.TvStudio = Helper.SkinPath + _yatse2Properties.Skin + @"\Studios\" + epinfo[0].Studio + ".png";                          _yatse2Properties.Currently.TvDirector = epinfo[0].Director;                          _yatse2Properties.Currently.TvYear = epinfo[0].Date.Length > 3 ? epinfo[0].Date.Substring(0' 4) : epinfo[0].Date;                          _yatse2Properties.Currently.TvVotes = "";                      }                      else                      {                          _yatse2Properties.Currently.TvShow = nowPlaying.ShowTitle + " - S" + nowPlaying.SeasonNumber + " E" + nowPlaying.EpisodeNumber;                          _yatse2Properties.Currently.TvTitle = nowPlaying.Title;                          _yatse2Properties.Currently.TvAired = nowPlaying.FirstAired.ToShortDateString();                          _yatse2Properties.Currently.TvPlot = nowPlaying.Plot;                          _yatse2Properties.Currently.TvEpisode = GetLocalizedString(77) + " " + nowPlaying.SeasonNumber + " " + GetLocalizedString(78) + " " + nowPlaying.EpisodeNumber;                          _yatse2Properties.Currently.TvNote = nowPlaying.Rating;                          _yatse2Properties.Currently.Fanart = GetVideoFanartPath(nowPlaying.FanartURL); // TODO : Change to Converter                          _yatse2Properties.Currently.TvStudio = Helper.SkinPath + _yatse2Properties.Skin + @"\Studios\" + nowPlaying.Studio + ".png";                          _yatse2Properties.Currently.TvDirector = nowPlaying.Director;                          _yatse2Properties.Currently.TvYear = nowPlaying.Year.ToString(CultureInfo.InvariantCulture);                          _yatse2Properties.Currently.TvVotes = "";                      }                      VideoStarting();                      break;                  case "Movie":                      _yatse2Properties.Currently.Thumb = GetVideoThumbPath(nowPlaying.ThumbURL); // TODO : Change to converter                        Logger.Instance().Log("Yatse2"' "New Movie Media : " + nowPlaying.FileName);                      var movieinfo = _database.GetMovieFromFile(_remoteInfo.Id' nowPlaying.FileName);                      _yatse2Properties.Currently.IsMovie = true;                      if (movieinfo.Count > 0)                      {                          _yatse2Properties.Currently.MovieTitle = movieinfo[0].Title;                          _yatse2Properties.Currently.Fanart = GetVideoFanartPath(movieinfo[0].Fanart); // TODO : Change to Covnerter                          _yatse2Properties.Currently.MovieYear = movieinfo[0].Year.ToString(CultureInfo.InvariantCulture);                          _yatse2Properties.Currently.MoviePlot = movieinfo[0].Plot;                          _yatse2Properties.Currently.MovieDirector = movieinfo[0].Director;                          _yatse2Properties.Currently.MovieNote = movieinfo[0].Rating;                          _yatse2Properties.Currently.MovieVotes = movieinfo[0].Votes + " " + GetLocalizedString(82);                          _yatse2Properties.Currently.MovieStudio = Helper.SkinPath + _yatse2Properties.Skin + @"\Studios\" + movieinfo[0].Studio + ".png";                      }                      else                      {                          _yatse2Properties.Currently.MovieTitle = nowPlaying.Title;                          _yatse2Properties.Currently.Fanart = GetVideoFanartPath(nowPlaying.FanartURL); // TODO : Change to Converter                          _yatse2Properties.Currently.MovieYear = nowPlaying.Year.ToString(CultureInfo.InvariantCulture);                          _yatse2Properties.Currently.MoviePlot = nowPlaying.Plot;                          _yatse2Properties.Currently.MovieDirector = nowPlaying.Director;                          _yatse2Properties.Currently.MovieNote = nowPlaying.Rating;                          _yatse2Properties.Currently.MovieStudio = Helper.SkinPath + _yatse2Properties.Skin + @"\Studios\" + nowPlaying.Studio + ".png";                      }                        VideoStarting();                      break;                  case "Unknown":                      _yatse2Properties.Currently.IsUnknown = true;                      _yatse2Properties.Currently.Thumb = GetVideoThumbPath(nowPlaying.ThumbURL); // TODO : Change to converter                      _yatse2Properties.Currently.UnknownFile = nowPlaying.FileName;                      _yatse2Properties.Currently.Fanart = GetVideoFanartPath(nowPlaying.FanartURL); // TODO : Change to Covnerter                        VideoStarting();                      break;                  default:                      break;              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,UpdateCurrently,The following statement contains a magic number: switch (nowPlaying.MediaType)              {                  case "Audio":                      Logger.Instance().Log("Yatse2"' "New Music Media : " + nowPlaying.FileName);                      _yatse2Properties.Currently.IsMusic = true;                      _yatse2Properties.Currently.MusicAlbum = nowPlaying.Album;                      _yatse2Properties.Currently.MusicSong = nowPlaying.Title;                      _yatse2Properties.Currently.MusicArtist = nowPlaying.Artist;                      _yatse2Properties.Currently.Fanart = _config.MusicFanartRotation ? GetRandomImagePath(Helper.CachePath + @"Music\Fanarts") : GetMusicFanartPath(nowPlaying.FanartURL);                        _yatse2Properties.Currently.Thumb = GetMusicThumbPath(nowPlaying.ThumbURL); // TODO : Change to converter                      _yatse2Properties.Currently.MusicYear = nowPlaying.Year.ToString(CultureInfo.InvariantCulture);                      _yatse2Properties.Currently.MusicTrack = nowPlaying.Track.ToString(CultureInfo.InvariantCulture);                      _yatse2Properties.Currently.MusicGenre = nowPlaying.Genre;                        var songinfo = _database.GetAudioSongFromFile(_remoteInfo.Id' nowPlaying.FileName);                      if (songinfo.Count > 0)                      {                          var artistinfo = _database.GetAudioArtistFromName(_remoteInfo.Id' songinfo[0].Artist);                          _yatse2Properties.Currently.MusicBiography = artistinfo.Count > 0 ? artistinfo[0].Biography : "No information";                          if (!_config.MusicFanartRotation)                              _yatse2Properties.Currently.Fanart = artistinfo.Count > 0 ? GetMusicFanartPath(artistinfo[0].Fanart) : "";                      }                      AudioStarting();                        break;                  case "TvShow":                      Logger.Instance().Log("Yatse2"' "New TvShow Media : " + nowPlaying.FileName);                      _yatse2Properties.Currently.IsTv = true;                      _yatse2Properties.Currently.Thumb = GetVideoThumbPath(nowPlaying.ThumbURL); // TODO : Change to converter                      var epinfo = _database.GetTvEpisodeFromFile(_remoteInfo.Id' nowPlaying.FileName);                      if (epinfo.Count > 0)                      {                          _yatse2Properties.Currently.TvShow = epinfo[0].ShowTitle + " - " + epinfo[0].Title;                          _yatse2Properties.Currently.TvTitle = epinfo[0].Title;                          _yatse2Properties.Currently.TvAired = epinfo[0].Date;                          _yatse2Properties.Currently.TvPlot = epinfo[0].Plot;                          _yatse2Properties.Currently.TvEpisode = GetLocalizedString(77) + " " + epinfo[0].Season + " " + GetLocalizedString(78) + " " + epinfo[0].Episode;                          _yatse2Properties.Currently.TvNote = epinfo[0].Rating;                          var showinfo = _database.GetTvShowFromName(_remoteInfo.Id' epinfo[0].ShowTitle);                          _yatse2Properties.Currently.Fanart = GetVideoFanartPath(showinfo.Count > 0 ? showinfo[0].Fanart : nowPlaying.FanartURL); // TODO : Change to Covnerter                          _yatse2Properties.Currently.TvStudio = Helper.SkinPath + _yatse2Properties.Skin + @"\Studios\" + epinfo[0].Studio + ".png";                          _yatse2Properties.Currently.TvDirector = epinfo[0].Director;                          _yatse2Properties.Currently.TvYear = epinfo[0].Date.Length > 3 ? epinfo[0].Date.Substring(0' 4) : epinfo[0].Date;                          _yatse2Properties.Currently.TvVotes = "";                      }                      else                      {                          _yatse2Properties.Currently.TvShow = nowPlaying.ShowTitle + " - S" + nowPlaying.SeasonNumber + " E" + nowPlaying.EpisodeNumber;                          _yatse2Properties.Currently.TvTitle = nowPlaying.Title;                          _yatse2Properties.Currently.TvAired = nowPlaying.FirstAired.ToShortDateString();                          _yatse2Properties.Currently.TvPlot = nowPlaying.Plot;                          _yatse2Properties.Currently.TvEpisode = GetLocalizedString(77) + " " + nowPlaying.SeasonNumber + " " + GetLocalizedString(78) + " " + nowPlaying.EpisodeNumber;                          _yatse2Properties.Currently.TvNote = nowPlaying.Rating;                          _yatse2Properties.Currently.Fanart = GetVideoFanartPath(nowPlaying.FanartURL); // TODO : Change to Converter                          _yatse2Properties.Currently.TvStudio = Helper.SkinPath + _yatse2Properties.Skin + @"\Studios\" + nowPlaying.Studio + ".png";                          _yatse2Properties.Currently.TvDirector = nowPlaying.Director;                          _yatse2Properties.Currently.TvYear = nowPlaying.Year.ToString(CultureInfo.InvariantCulture);                          _yatse2Properties.Currently.TvVotes = "";                      }                      VideoStarting();                      break;                  case "Movie":                      _yatse2Properties.Currently.Thumb = GetVideoThumbPath(nowPlaying.ThumbURL); // TODO : Change to converter                        Logger.Instance().Log("Yatse2"' "New Movie Media : " + nowPlaying.FileName);                      var movieinfo = _database.GetMovieFromFile(_remoteInfo.Id' nowPlaying.FileName);                      _yatse2Properties.Currently.IsMovie = true;                      if (movieinfo.Count > 0)                      {                          _yatse2Properties.Currently.MovieTitle = movieinfo[0].Title;                          _yatse2Properties.Currently.Fanart = GetVideoFanartPath(movieinfo[0].Fanart); // TODO : Change to Covnerter                          _yatse2Properties.Currently.MovieYear = movieinfo[0].Year.ToString(CultureInfo.InvariantCulture);                          _yatse2Properties.Currently.MoviePlot = movieinfo[0].Plot;                          _yatse2Properties.Currently.MovieDirector = movieinfo[0].Director;                          _yatse2Properties.Currently.MovieNote = movieinfo[0].Rating;                          _yatse2Properties.Currently.MovieVotes = movieinfo[0].Votes + " " + GetLocalizedString(82);                          _yatse2Properties.Currently.MovieStudio = Helper.SkinPath + _yatse2Properties.Skin + @"\Studios\" + movieinfo[0].Studio + ".png";                      }                      else                      {                          _yatse2Properties.Currently.MovieTitle = nowPlaying.Title;                          _yatse2Properties.Currently.Fanart = GetVideoFanartPath(nowPlaying.FanartURL); // TODO : Change to Converter                          _yatse2Properties.Currently.MovieYear = nowPlaying.Year.ToString(CultureInfo.InvariantCulture);                          _yatse2Properties.Currently.MoviePlot = nowPlaying.Plot;                          _yatse2Properties.Currently.MovieDirector = nowPlaying.Director;                          _yatse2Properties.Currently.MovieNote = nowPlaying.Rating;                          _yatse2Properties.Currently.MovieStudio = Helper.SkinPath + _yatse2Properties.Skin + @"\Studios\" + nowPlaying.Studio + ".png";                      }                        VideoStarting();                      break;                  case "Unknown":                      _yatse2Properties.Currently.IsUnknown = true;                      _yatse2Properties.Currently.Thumb = GetVideoThumbPath(nowPlaying.ThumbURL); // TODO : Change to converter                      _yatse2Properties.Currently.UnknownFile = nowPlaying.FileName;                      _yatse2Properties.Currently.Fanart = GetVideoFanartPath(nowPlaying.FanartURL); // TODO : Change to Covnerter                        VideoStarting();                      break;                  default:                      break;              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,UpdateCurrently,The following statement contains a magic number: switch (nowPlaying.MediaType)              {                  case "Audio":                      Logger.Instance().Log("Yatse2"' "New Music Media : " + nowPlaying.FileName);                      _yatse2Properties.Currently.IsMusic = true;                      _yatse2Properties.Currently.MusicAlbum = nowPlaying.Album;                      _yatse2Properties.Currently.MusicSong = nowPlaying.Title;                      _yatse2Properties.Currently.MusicArtist = nowPlaying.Artist;                      _yatse2Properties.Currently.Fanart = _config.MusicFanartRotation ? GetRandomImagePath(Helper.CachePath + @"Music\Fanarts") : GetMusicFanartPath(nowPlaying.FanartURL);                        _yatse2Properties.Currently.Thumb = GetMusicThumbPath(nowPlaying.ThumbURL); // TODO : Change to converter                      _yatse2Properties.Currently.MusicYear = nowPlaying.Year.ToString(CultureInfo.InvariantCulture);                      _yatse2Properties.Currently.MusicTrack = nowPlaying.Track.ToString(CultureInfo.InvariantCulture);                      _yatse2Properties.Currently.MusicGenre = nowPlaying.Genre;                        var songinfo = _database.GetAudioSongFromFile(_remoteInfo.Id' nowPlaying.FileName);                      if (songinfo.Count > 0)                      {                          var artistinfo = _database.GetAudioArtistFromName(_remoteInfo.Id' songinfo[0].Artist);                          _yatse2Properties.Currently.MusicBiography = artistinfo.Count > 0 ? artistinfo[0].Biography : "No information";                          if (!_config.MusicFanartRotation)                              _yatse2Properties.Currently.Fanart = artistinfo.Count > 0 ? GetMusicFanartPath(artistinfo[0].Fanart) : "";                      }                      AudioStarting();                        break;                  case "TvShow":                      Logger.Instance().Log("Yatse2"' "New TvShow Media : " + nowPlaying.FileName);                      _yatse2Properties.Currently.IsTv = true;                      _yatse2Properties.Currently.Thumb = GetVideoThumbPath(nowPlaying.ThumbURL); // TODO : Change to converter                      var epinfo = _database.GetTvEpisodeFromFile(_remoteInfo.Id' nowPlaying.FileName);                      if (epinfo.Count > 0)                      {                          _yatse2Properties.Currently.TvShow = epinfo[0].ShowTitle + " - " + epinfo[0].Title;                          _yatse2Properties.Currently.TvTitle = epinfo[0].Title;                          _yatse2Properties.Currently.TvAired = epinfo[0].Date;                          _yatse2Properties.Currently.TvPlot = epinfo[0].Plot;                          _yatse2Properties.Currently.TvEpisode = GetLocalizedString(77) + " " + epinfo[0].Season + " " + GetLocalizedString(78) + " " + epinfo[0].Episode;                          _yatse2Properties.Currently.TvNote = epinfo[0].Rating;                          var showinfo = _database.GetTvShowFromName(_remoteInfo.Id' epinfo[0].ShowTitle);                          _yatse2Properties.Currently.Fanart = GetVideoFanartPath(showinfo.Count > 0 ? showinfo[0].Fanart : nowPlaying.FanartURL); // TODO : Change to Covnerter                          _yatse2Properties.Currently.TvStudio = Helper.SkinPath + _yatse2Properties.Skin + @"\Studios\" + epinfo[0].Studio + ".png";                          _yatse2Properties.Currently.TvDirector = epinfo[0].Director;                          _yatse2Properties.Currently.TvYear = epinfo[0].Date.Length > 3 ? epinfo[0].Date.Substring(0' 4) : epinfo[0].Date;                          _yatse2Properties.Currently.TvVotes = "";                      }                      else                      {                          _yatse2Properties.Currently.TvShow = nowPlaying.ShowTitle + " - S" + nowPlaying.SeasonNumber + " E" + nowPlaying.EpisodeNumber;                          _yatse2Properties.Currently.TvTitle = nowPlaying.Title;                          _yatse2Properties.Currently.TvAired = nowPlaying.FirstAired.ToShortDateString();                          _yatse2Properties.Currently.TvPlot = nowPlaying.Plot;                          _yatse2Properties.Currently.TvEpisode = GetLocalizedString(77) + " " + nowPlaying.SeasonNumber + " " + GetLocalizedString(78) + " " + nowPlaying.EpisodeNumber;                          _yatse2Properties.Currently.TvNote = nowPlaying.Rating;                          _yatse2Properties.Currently.Fanart = GetVideoFanartPath(nowPlaying.FanartURL); // TODO : Change to Converter                          _yatse2Properties.Currently.TvStudio = Helper.SkinPath + _yatse2Properties.Skin + @"\Studios\" + nowPlaying.Studio + ".png";                          _yatse2Properties.Currently.TvDirector = nowPlaying.Director;                          _yatse2Properties.Currently.TvYear = nowPlaying.Year.ToString(CultureInfo.InvariantCulture);                          _yatse2Properties.Currently.TvVotes = "";                      }                      VideoStarting();                      break;                  case "Movie":                      _yatse2Properties.Currently.Thumb = GetVideoThumbPath(nowPlaying.ThumbURL); // TODO : Change to converter                        Logger.Instance().Log("Yatse2"' "New Movie Media : " + nowPlaying.FileName);                      var movieinfo = _database.GetMovieFromFile(_remoteInfo.Id' nowPlaying.FileName);                      _yatse2Properties.Currently.IsMovie = true;                      if (movieinfo.Count > 0)                      {                          _yatse2Properties.Currently.MovieTitle = movieinfo[0].Title;                          _yatse2Properties.Currently.Fanart = GetVideoFanartPath(movieinfo[0].Fanart); // TODO : Change to Covnerter                          _yatse2Properties.Currently.MovieYear = movieinfo[0].Year.ToString(CultureInfo.InvariantCulture);                          _yatse2Properties.Currently.MoviePlot = movieinfo[0].Plot;                          _yatse2Properties.Currently.MovieDirector = movieinfo[0].Director;                          _yatse2Properties.Currently.MovieNote = movieinfo[0].Rating;                          _yatse2Properties.Currently.MovieVotes = movieinfo[0].Votes + " " + GetLocalizedString(82);                          _yatse2Properties.Currently.MovieStudio = Helper.SkinPath + _yatse2Properties.Skin + @"\Studios\" + movieinfo[0].Studio + ".png";                      }                      else                      {                          _yatse2Properties.Currently.MovieTitle = nowPlaying.Title;                          _yatse2Properties.Currently.Fanart = GetVideoFanartPath(nowPlaying.FanartURL); // TODO : Change to Converter                          _yatse2Properties.Currently.MovieYear = nowPlaying.Year.ToString(CultureInfo.InvariantCulture);                          _yatse2Properties.Currently.MoviePlot = nowPlaying.Plot;                          _yatse2Properties.Currently.MovieDirector = nowPlaying.Director;                          _yatse2Properties.Currently.MovieNote = nowPlaying.Rating;                          _yatse2Properties.Currently.MovieStudio = Helper.SkinPath + _yatse2Properties.Skin + @"\Studios\" + nowPlaying.Studio + ".png";                      }                        VideoStarting();                      break;                  case "Unknown":                      _yatse2Properties.Currently.IsUnknown = true;                      _yatse2Properties.Currently.Thumb = GetVideoThumbPath(nowPlaying.ThumbURL); // TODO : Change to converter                      _yatse2Properties.Currently.UnknownFile = nowPlaying.FileName;                      _yatse2Properties.Currently.Fanart = GetVideoFanartPath(nowPlaying.FanartURL); // TODO : Change to Covnerter                        VideoStarting();                      break;                  default:                      break;              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,UpdateCurrently,The following statement contains a magic number: switch (nowPlaying.MediaType)              {                  case "Audio":                      Logger.Instance().Log("Yatse2"' "New Music Media : " + nowPlaying.FileName);                      _yatse2Properties.Currently.IsMusic = true;                      _yatse2Properties.Currently.MusicAlbum = nowPlaying.Album;                      _yatse2Properties.Currently.MusicSong = nowPlaying.Title;                      _yatse2Properties.Currently.MusicArtist = nowPlaying.Artist;                      _yatse2Properties.Currently.Fanart = _config.MusicFanartRotation ? GetRandomImagePath(Helper.CachePath + @"Music\Fanarts") : GetMusicFanartPath(nowPlaying.FanartURL);                        _yatse2Properties.Currently.Thumb = GetMusicThumbPath(nowPlaying.ThumbURL); // TODO : Change to converter                      _yatse2Properties.Currently.MusicYear = nowPlaying.Year.ToString(CultureInfo.InvariantCulture);                      _yatse2Properties.Currently.MusicTrack = nowPlaying.Track.ToString(CultureInfo.InvariantCulture);                      _yatse2Properties.Currently.MusicGenre = nowPlaying.Genre;                        var songinfo = _database.GetAudioSongFromFile(_remoteInfo.Id' nowPlaying.FileName);                      if (songinfo.Count > 0)                      {                          var artistinfo = _database.GetAudioArtistFromName(_remoteInfo.Id' songinfo[0].Artist);                          _yatse2Properties.Currently.MusicBiography = artistinfo.Count > 0 ? artistinfo[0].Biography : "No information";                          if (!_config.MusicFanartRotation)                              _yatse2Properties.Currently.Fanart = artistinfo.Count > 0 ? GetMusicFanartPath(artistinfo[0].Fanart) : "";                      }                      AudioStarting();                        break;                  case "TvShow":                      Logger.Instance().Log("Yatse2"' "New TvShow Media : " + nowPlaying.FileName);                      _yatse2Properties.Currently.IsTv = true;                      _yatse2Properties.Currently.Thumb = GetVideoThumbPath(nowPlaying.ThumbURL); // TODO : Change to converter                      var epinfo = _database.GetTvEpisodeFromFile(_remoteInfo.Id' nowPlaying.FileName);                      if (epinfo.Count > 0)                      {                          _yatse2Properties.Currently.TvShow = epinfo[0].ShowTitle + " - " + epinfo[0].Title;                          _yatse2Properties.Currently.TvTitle = epinfo[0].Title;                          _yatse2Properties.Currently.TvAired = epinfo[0].Date;                          _yatse2Properties.Currently.TvPlot = epinfo[0].Plot;                          _yatse2Properties.Currently.TvEpisode = GetLocalizedString(77) + " " + epinfo[0].Season + " " + GetLocalizedString(78) + " " + epinfo[0].Episode;                          _yatse2Properties.Currently.TvNote = epinfo[0].Rating;                          var showinfo = _database.GetTvShowFromName(_remoteInfo.Id' epinfo[0].ShowTitle);                          _yatse2Properties.Currently.Fanart = GetVideoFanartPath(showinfo.Count > 0 ? showinfo[0].Fanart : nowPlaying.FanartURL); // TODO : Change to Covnerter                          _yatse2Properties.Currently.TvStudio = Helper.SkinPath + _yatse2Properties.Skin + @"\Studios\" + epinfo[0].Studio + ".png";                          _yatse2Properties.Currently.TvDirector = epinfo[0].Director;                          _yatse2Properties.Currently.TvYear = epinfo[0].Date.Length > 3 ? epinfo[0].Date.Substring(0' 4) : epinfo[0].Date;                          _yatse2Properties.Currently.TvVotes = "";                      }                      else                      {                          _yatse2Properties.Currently.TvShow = nowPlaying.ShowTitle + " - S" + nowPlaying.SeasonNumber + " E" + nowPlaying.EpisodeNumber;                          _yatse2Properties.Currently.TvTitle = nowPlaying.Title;                          _yatse2Properties.Currently.TvAired = nowPlaying.FirstAired.ToShortDateString();                          _yatse2Properties.Currently.TvPlot = nowPlaying.Plot;                          _yatse2Properties.Currently.TvEpisode = GetLocalizedString(77) + " " + nowPlaying.SeasonNumber + " " + GetLocalizedString(78) + " " + nowPlaying.EpisodeNumber;                          _yatse2Properties.Currently.TvNote = nowPlaying.Rating;                          _yatse2Properties.Currently.Fanart = GetVideoFanartPath(nowPlaying.FanartURL); // TODO : Change to Converter                          _yatse2Properties.Currently.TvStudio = Helper.SkinPath + _yatse2Properties.Skin + @"\Studios\" + nowPlaying.Studio + ".png";                          _yatse2Properties.Currently.TvDirector = nowPlaying.Director;                          _yatse2Properties.Currently.TvYear = nowPlaying.Year.ToString(CultureInfo.InvariantCulture);                          _yatse2Properties.Currently.TvVotes = "";                      }                      VideoStarting();                      break;                  case "Movie":                      _yatse2Properties.Currently.Thumb = GetVideoThumbPath(nowPlaying.ThumbURL); // TODO : Change to converter                        Logger.Instance().Log("Yatse2"' "New Movie Media : " + nowPlaying.FileName);                      var movieinfo = _database.GetMovieFromFile(_remoteInfo.Id' nowPlaying.FileName);                      _yatse2Properties.Currently.IsMovie = true;                      if (movieinfo.Count > 0)                      {                          _yatse2Properties.Currently.MovieTitle = movieinfo[0].Title;                          _yatse2Properties.Currently.Fanart = GetVideoFanartPath(movieinfo[0].Fanart); // TODO : Change to Covnerter                          _yatse2Properties.Currently.MovieYear = movieinfo[0].Year.ToString(CultureInfo.InvariantCulture);                          _yatse2Properties.Currently.MoviePlot = movieinfo[0].Plot;                          _yatse2Properties.Currently.MovieDirector = movieinfo[0].Director;                          _yatse2Properties.Currently.MovieNote = movieinfo[0].Rating;                          _yatse2Properties.Currently.MovieVotes = movieinfo[0].Votes + " " + GetLocalizedString(82);                          _yatse2Properties.Currently.MovieStudio = Helper.SkinPath + _yatse2Properties.Skin + @"\Studios\" + movieinfo[0].Studio + ".png";                      }                      else                      {                          _yatse2Properties.Currently.MovieTitle = nowPlaying.Title;                          _yatse2Properties.Currently.Fanart = GetVideoFanartPath(nowPlaying.FanartURL); // TODO : Change to Converter                          _yatse2Properties.Currently.MovieYear = nowPlaying.Year.ToString(CultureInfo.InvariantCulture);                          _yatse2Properties.Currently.MoviePlot = nowPlaying.Plot;                          _yatse2Properties.Currently.MovieDirector = nowPlaying.Director;                          _yatse2Properties.Currently.MovieNote = nowPlaying.Rating;                          _yatse2Properties.Currently.MovieStudio = Helper.SkinPath + _yatse2Properties.Skin + @"\Studios\" + nowPlaying.Studio + ".png";                      }                        VideoStarting();                      break;                  case "Unknown":                      _yatse2Properties.Currently.IsUnknown = true;                      _yatse2Properties.Currently.Thumb = GetVideoThumbPath(nowPlaying.ThumbURL); // TODO : Change to converter                      _yatse2Properties.Currently.UnknownFile = nowPlaying.FileName;                      _yatse2Properties.Currently.Fanart = GetVideoFanartPath(nowPlaying.FanartURL); // TODO : Change to Covnerter                        VideoStarting();                      break;                  default:                      break;              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,UpdateRemote,The following statement contains a magic number: if (!_remoteConnected && _remote.IsConnected() && !_failedRemoteCheck)              {                  Logger.Instance().Log("Yatse2"' "Remote connected : " + _remoteInfo.Id + " - " + _remoteInfo.Name + " (" + _remoteInfo.Api + " / " + _remoteInfo.Version + ")");                  var check = _remote.CheckRemote(_remoteInfo.OS' _remoteInfo.Version' _remoteInfo.Additional' _config.ForceOnCheckRemote);                  if (!check)                  {                      Logger.Instance().Log("Yatse2"' "Remote " + _remoteInfo.Id + " - " + _remoteInfo.Name + " : Failed check' some params have changed" + " (" + _remoteInfo.Api + " / " + _remoteInfo.Version + ")");                      ShowOkDialog(GetLocalizedString(105));                      _failedRemoteCheck = true;                      if (_currentGrid != grd_Remotes)                          ShowGrid(grd_Remotes' false);                      return;                  }                  if (_currentGrid == grd_Remotes)                  {                      ShowGrid(grd_Home);                  }                  ShowPopup(GetLocalizedString(96) + " " + _remoteInfo.Name);                  btn_Header_Remotes.Background = GetSkinImageBrush("Menu_Remote_Connected");                  _remoteConnected = true;                    if (!_remoteLibraryRefreshed)                  {                      RefreshLibrary();                  }                  else                  {                      if (_remoteInfo.CacheFilled == 0 && _remote.File.AsyncDownloadFinished())                      {                          RefreshThumbsFanarts();                          ShowPopup(GetLocalizedString(101));                      }                  }              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,UpdateRemote,The following statement contains a magic number: if (!_remoteConnected && _remote.IsConnected() && !_failedRemoteCheck)              {                  Logger.Instance().Log("Yatse2"' "Remote connected : " + _remoteInfo.Id + " - " + _remoteInfo.Name + " (" + _remoteInfo.Api + " / " + _remoteInfo.Version + ")");                  var check = _remote.CheckRemote(_remoteInfo.OS' _remoteInfo.Version' _remoteInfo.Additional' _config.ForceOnCheckRemote);                  if (!check)                  {                      Logger.Instance().Log("Yatse2"' "Remote " + _remoteInfo.Id + " - " + _remoteInfo.Name + " : Failed check' some params have changed" + " (" + _remoteInfo.Api + " / " + _remoteInfo.Version + ")");                      ShowOkDialog(GetLocalizedString(105));                      _failedRemoteCheck = true;                      if (_currentGrid != grd_Remotes)                          ShowGrid(grd_Remotes' false);                      return;                  }                  if (_currentGrid == grd_Remotes)                  {                      ShowGrid(grd_Home);                  }                  ShowPopup(GetLocalizedString(96) + " " + _remoteInfo.Name);                  btn_Header_Remotes.Background = GetSkinImageBrush("Menu_Remote_Connected");                  _remoteConnected = true;                    if (!_remoteLibraryRefreshed)                  {                      RefreshLibrary();                  }                  else                  {                      if (_remoteInfo.CacheFilled == 0 && _remote.File.AsyncDownloadFinished())                      {                          RefreshThumbsFanarts();                          ShowPopup(GetLocalizedString(101));                      }                  }              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,UpdateRemote,The following statement contains a magic number: if (!_remoteConnected && _remote.IsConnected() && !_failedRemoteCheck)              {                  Logger.Instance().Log("Yatse2"' "Remote connected : " + _remoteInfo.Id + " - " + _remoteInfo.Name + " (" + _remoteInfo.Api + " / " + _remoteInfo.Version + ")");                  var check = _remote.CheckRemote(_remoteInfo.OS' _remoteInfo.Version' _remoteInfo.Additional' _config.ForceOnCheckRemote);                  if (!check)                  {                      Logger.Instance().Log("Yatse2"' "Remote " + _remoteInfo.Id + " - " + _remoteInfo.Name + " : Failed check' some params have changed" + " (" + _remoteInfo.Api + " / " + _remoteInfo.Version + ")");                      ShowOkDialog(GetLocalizedString(105));                      _failedRemoteCheck = true;                      if (_currentGrid != grd_Remotes)                          ShowGrid(grd_Remotes' false);                      return;                  }                  if (_currentGrid == grd_Remotes)                  {                      ShowGrid(grd_Home);                  }                  ShowPopup(GetLocalizedString(96) + " " + _remoteInfo.Name);                  btn_Header_Remotes.Background = GetSkinImageBrush("Menu_Remote_Connected");                  _remoteConnected = true;                    if (!_remoteLibraryRefreshed)                  {                      RefreshLibrary();                  }                  else                  {                      if (_remoteInfo.CacheFilled == 0 && _remote.File.AsyncDownloadFinished())                      {                          RefreshThumbsFanarts();                          ShowPopup(GetLocalizedString(101));                      }                  }              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,UpdateRemote,The following statement contains a magic number: if (!_remoteConnected && !_showRemoteSelect && _config.IsConfigured && _config.DefaultRemote != 0)              {                  if (_timer > 20)                  {                      _showRemoteSelect = true;                      ShowGrid(grd_Remotes);                  }              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,UpdateRemote,The following statement contains a magic number: if (_remoteInfo != null)              {                  if (_remote.File.AsyncDownloadFinished() && _remoteInfo.CacheFilled == 0 && _remote.IsConnected())                  {                      Logger.Instance().Log("Yatse2"' "Image cache filling completed");                      _remoteInfo.CacheFilled = 1;                      _yatse2Properties.IsSyncing = false;                      _database.UpdateRemote(_remoteInfo);                      ShowPopup(GetLocalizedString(102));                      ShowHome();                      _audioSongsDataSource.Clear();                      _audioGenresDataSource.Clear();                      _audioArtistsDataSource.Clear();                      _moviesDataSource.Clear();                      _tvShowsDataSource.Clear();                      _tvSeasonsDataSource.Clear();                      _tvEpisodesDataSource.Clear();                  }              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,UpdateRemote,The following statement contains a magic number: if (_remoteConnected && !_remote.IsConnected())              {                  if (_remoteInfo != null)                  {                      Logger.Instance().Log("Yatse2"'                                            "Remote disconnected : " + _remoteInfo.Id + " - " + _remoteInfo.Name + " (" +                                            _remoteInfo.Api + " / " + _remoteInfo.Version + ")");                      ShowPopup(GetLocalizedString(97) + " " + _remoteInfo.Name);                      _remote.File.StopAsync();                      _yatse2Properties.IsSyncing = false;                  }                  btn_Header_Remotes.Background = GetSkinImageBrush("Menu_Remote_Disconnected");                  _remoteConnected = false;                  _isPlaying = false;                  ShowHome();                  _yatse2Properties.Currently.IsNothing = true;              }              else              {                  ResfreshCurrently();              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,GetMusicThumbPath,The following statement contains a magic number: _remote.File.DownloadImages(new ApiImageDownloadInfo { Source = remotepath' Destination = destFile' MaxHeight = (int)Height / 2' ToThumb = _config.CropCacheImage });
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,GetVideoThumbPath,The following statement contains a magic number: _remote.File.DownloadImages(new ApiImageDownloadInfo { Source = remotepath' Destination = destFile' MaxHeight = (int)Height / 2' ToThumb = _config.CropCacheImage });
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,GetSkinImageBrushSmall,The following statement contains a magic number: if (File.Exists(Helper.SkinPath + _config.Skin + @"\Interface\" + element + ".png"))              {                  img = new ImageBrush                  {                      ImageSource =                          new BitmapImage(                          new Uri(Helper.SkinPath + _config.Skin + @"\Interface\" + element + ".png"))'                      Stretch = Stretch.Uniform'                      TileMode = TileMode.None'                      AlignmentX = AlignmentX.Center'                      AlignmentY = AlignmentY.Center'                      Viewport = new Rect(10' 10' 34' 34)'                      ViewportUnits = BrushMappingMode.Absolute'                  };              }              else              {                  Logger.Instance().Log("Yatse2"' @"Skin image not found : \Interface\" + element + ".png"' true);              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,GetSkinImageBrushSmall,The following statement contains a magic number: if (File.Exists(Helper.SkinPath + _config.Skin + @"\Interface\" + element + ".png"))              {                  img = new ImageBrush                  {                      ImageSource =                          new BitmapImage(                          new Uri(Helper.SkinPath + _config.Skin + @"\Interface\" + element + ".png"))'                      Stretch = Stretch.Uniform'                      TileMode = TileMode.None'                      AlignmentX = AlignmentX.Center'                      AlignmentY = AlignmentY.Center'                      Viewport = new Rect(10' 10' 34' 34)'                      ViewportUnits = BrushMappingMode.Absolute'                  };              }              else              {                  Logger.Instance().Log("Yatse2"' @"Skin image not found : \Interface\" + element + ".png"' true);              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,GetSkinImageBrushSmall,The following statement contains a magic number: if (File.Exists(Helper.SkinPath + _config.Skin + @"\Interface\" + element + ".png"))              {                  img = new ImageBrush                  {                      ImageSource =                          new BitmapImage(                          new Uri(Helper.SkinPath + _config.Skin + @"\Interface\" + element + ".png"))'                      Stretch = Stretch.Uniform'                      TileMode = TileMode.None'                      AlignmentX = AlignmentX.Center'                      AlignmentY = AlignmentY.Center'                      Viewport = new Rect(10' 10' 34' 34)'                      ViewportUnits = BrushMappingMode.Absolute'                  };              }              else              {                  Logger.Instance().Log("Yatse2"' @"Skin image not found : \Interface\" + element + ".png"' true);              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,GetSkinImageBrushSmall,The following statement contains a magic number: if (File.Exists(Helper.SkinPath + _config.Skin + @"\Interface\" + element + ".png"))              {                  img = new ImageBrush                  {                      ImageSource =                          new BitmapImage(                          new Uri(Helper.SkinPath + _config.Skin + @"\Interface\" + element + ".png"))'                      Stretch = Stretch.Uniform'                      TileMode = TileMode.None'                      AlignmentX = AlignmentX.Center'                      AlignmentY = AlignmentY.Center'                      Viewport = new Rect(10' 10' 34' 34)'                      ViewportUnits = BrushMappingMode.Absolute'                  };              }              else              {                  Logger.Instance().Log("Yatse2"' @"Skin image not found : \Interface\" + element + ".png"' true);              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,sld_Current_Music_Volume_PreviewMouseUp,The following statement contains a magic number: var newvalue = 100 - ratio * sld_Current_Music_Volume.Maximum;
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,grd_Movies_CurrentLetter_PreviewMouseMove,The following statement contains a magic number: if (_startLetterDrag)              {                  var distanceX = _mouseDownPoint.X - e.GetPosition(this).X;                                    if (Math.Abs(distanceX) > 50.0)                  {                      if (distanceX < 0)                      {                          MovieSelectNextLetter(txb_Movies_CurrentLetter.Text.ToUpperInvariant().ToCharArray()[0]);                      }                      else                      {                          MovieSelectPreviousLetter(txb_Movies_CurrentLetter.Text.ToUpperInvariant().ToCharArray()[0]);                      }                        _startLetterDrag = false;                      ResetTimer();                  }              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,lst_Movies_flow_PreviewMouseLeftButtonDown,The following statement contains a magic number: if (timediff > 75 && timediff < SystemInformation.DoubleClickTime)              {                  var selitem = (Yatse2Movie)lst_Movies_flow.SelectedItem;                  if (selitem == null)                       return;                  btn_Movies_Infos_Click(null' null);              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,btn_Remotes_Delete_Click,The following statement contains a magic number: var result = ShowYesNoDialog(GetLocalizedString(11));
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,txb_Remotes_Edit_Click,The following statement contains a magic number: btn_Settings_Remotes_Edit_Accept.Content = GetLocalizedString(13);
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,btn_Remotes_Add_Click,The following statement contains a magic number: btn_Settings_Remotes_Edit_Accept.Content = GetLocalizedString(14);
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,btn_Settings_Remotes_Edit_Accept_Click,The following statement contains a magic number: if ((string)btn_Settings_Remotes_Edit_Accept.Content == GetLocalizedString(14))              {                  var id = _database.InsertRemote(remote);                  if (lst_Remotes.Items.Count < 1 && id != 0)                  {                      _config.DefaultRemote = id;                      _config.Save(_configFile);                      _currentRemoteId = _config.DefaultRemote;                      InitRemote();                  }              }              else              {                  _database.UpdateRemote(remote);                  if (_currentRemoteId == remote.Id)                      InitRemote();              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,btn_Settings_Remotes_Edit_Verify_Click,The following statement contains a magic number: if ( res == 1)              {                  _remoteInfoEdit.OS = remote.GetOS();                  _remoteInfoEdit.Version = remote.GetVersion();                  _remoteInfoEdit.Additional = remote.GetAdditionalInfo();                  _remoteInfoEdit.Validated = true;              }              else if (res == 0)              {                  _remoteInfoEdit.Validated = false;                  ShowOkDialog(GetLocalizedString(16));              }              else              {                  _remoteInfoEdit.Validated = false;                  ShowOkDialog(GetLocalizedString(116));              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,btn_Settings_Remotes_Edit_Verify_Click,The following statement contains a magic number: if ( res == 1)              {                  _remoteInfoEdit.OS = remote.GetOS();                  _remoteInfoEdit.Version = remote.GetVersion();                  _remoteInfoEdit.Additional = remote.GetAdditionalInfo();                  _remoteInfoEdit.Validated = true;              }              else if (res == 0)              {                  _remoteInfoEdit.Validated = false;                  ShowOkDialog(GetLocalizedString(16));              }              else              {                  _remoteInfoEdit.Validated = false;                  ShowOkDialog(GetLocalizedString(116));              }
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,btn_Settings_SaveSettings_Click,The following statement contains a magic number: ShowPopup(GetLocalizedString(98));
Magic Number,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,txt_Settings_Weather_WeatherLocId_TextChanged,The following statement contains a magic number: if (txt_Settings_Weather_WeatherLocId.Text.Length < 3) return;
Magic Number,Yatse2,LongDurationConverter,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2.Converters.cs,Convert,The following statement contains a magic number: return (val > 0) ? string.Format(CultureInfo.InvariantCulture'"{0:00}:{1:00}"' val / 60' val % 60) : "";
Magic Number,Yatse2,LongDurationConverter,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2.Converters.cs,Convert,The following statement contains a magic number: return (val > 0) ? string.Format(CultureInfo.InvariantCulture'"{0:00}:{1:00}"' val / 60' val % 60) : "";
Magic Number,Yatse2,SkinBrushConverter,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2.Converters.cs,Convert,The following statement contains a magic number: if (temp.Length > 1)              {                  if (temp[1] == "Small")                      return new ImageBrush                      {                          ImageSource = new BitmapImage(new Uri(path))'                          Stretch = Stretch.Uniform'                          TileMode = TileMode.None'                          AlignmentX = AlignmentX.Center'                          AlignmentY = AlignmentY.Center'                          Viewport = new Rect(10' 10' 34' 34)'                          ViewportUnits = BrushMappingMode.Absolute'                      };                  if (temp[1] == "Fill")                      return new ImageBrush                      {                          ImageSource = new BitmapImage(new Uri(path))'                          Stretch = Stretch.UniformToFill'                          AlignmentX = AlignmentX.Center'                          AlignmentY = AlignmentY.Center                      };              }
Magic Number,Yatse2,SkinBrushConverter,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2.Converters.cs,Convert,The following statement contains a magic number: if (temp.Length > 1)              {                  if (temp[1] == "Small")                      return new ImageBrush                      {                          ImageSource = new BitmapImage(new Uri(path))'                          Stretch = Stretch.Uniform'                          TileMode = TileMode.None'                          AlignmentX = AlignmentX.Center'                          AlignmentY = AlignmentY.Center'                          Viewport = new Rect(10' 10' 34' 34)'                          ViewportUnits = BrushMappingMode.Absolute'                      };                  if (temp[1] == "Fill")                      return new ImageBrush                      {                          ImageSource = new BitmapImage(new Uri(path))'                          Stretch = Stretch.UniformToFill'                          AlignmentX = AlignmentX.Center'                          AlignmentY = AlignmentY.Center                      };              }
Magic Number,Yatse2,SkinBrushConverter,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2.Converters.cs,Convert,The following statement contains a magic number: if (temp.Length > 1)              {                  if (temp[1] == "Small")                      return new ImageBrush                      {                          ImageSource = new BitmapImage(new Uri(path))'                          Stretch = Stretch.Uniform'                          TileMode = TileMode.None'                          AlignmentX = AlignmentX.Center'                          AlignmentY = AlignmentY.Center'                          Viewport = new Rect(10' 10' 34' 34)'                          ViewportUnits = BrushMappingMode.Absolute'                      };                  if (temp[1] == "Fill")                      return new ImageBrush                      {                          ImageSource = new BitmapImage(new Uri(path))'                          Stretch = Stretch.UniformToFill'                          AlignmentX = AlignmentX.Center'                          AlignmentY = AlignmentY.Center                      };              }
Magic Number,Yatse2,SkinBrushConverter,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2.Converters.cs,Convert,The following statement contains a magic number: if (temp.Length > 1)              {                  if (temp[1] == "Small")                      return new ImageBrush                      {                          ImageSource = new BitmapImage(new Uri(path))'                          Stretch = Stretch.Uniform'                          TileMode = TileMode.None'                          AlignmentX = AlignmentX.Center'                          AlignmentY = AlignmentY.Center'                          Viewport = new Rect(10' 10' 34' 34)'                          ViewportUnits = BrushMappingMode.Absolute'                      };                  if (temp[1] == "Fill")                      return new ImageBrush                      {                          ImageSource = new BitmapImage(new Uri(path))'                          Stretch = Stretch.UniformToFill'                          AlignmentX = AlignmentX.Center'                          AlignmentY = AlignmentY.Center                      };              }
Magic Number,Unused,Weather,C:\repos\Tolriq_Yatse2\Yatse2\Libs\Weather-WeatherChannel.cs,Configure,The following statement contains a magic number: _refreshTimer = new Timer { Interval = 1000 };
Magic Number,Unused,Weather,C:\repos\Tolriq_Yatse2\Yatse2\Libs\Weather-WeatherChannel.cs,AutoResfresh,The following statement contains a magic number: if (_refreshTimer != null)              {                  _refreshTimer.Interval = 1000;                  _refreshTimer.Start();              }
Magic Number,Unused,Weather,C:\repos\Tolriq_Yatse2\Yatse2\Libs\Weather-WeatherChannel.cs,RefreshTimerTick,The following statement contains a magic number: if (_refreshTimer.Interval == 1000)                  _refreshTimer.Interval = 60000;
Magic Number,Unused,Weather,C:\repos\Tolriq_Yatse2\Yatse2\Libs\Weather-WeatherChannel.cs,RefreshTimerTick,The following statement contains a magic number: if (_refreshTimer.Interval == 1000)                  _refreshTimer.Interval = 60000;
Magic Number,Yatse2.Libs,Helper,C:\repos\Tolriq_Yatse2\Yatse2\Libs\Helper.cs,VirtFlowSelect,The following statement contains a magic number: theflow.StoredSelectedIndex = -2;
Magic Number,Yatse2.Libs,NetworkTools,C:\repos\Tolriq_Yatse2\Yatse2\Libs\NetworkTools.cs,GetMacAddressFromArp,The following statement contains a magic number: var macAddr = new byte[6];
Magic Number,Yatse2.Libs,NetworkTools,C:\repos\Tolriq_Yatse2\Yatse2\Libs\NetworkTools.cs,GetMacAddressFromArp,The following statement contains a magic number: var ip = (uint)byteIp[3] << 24;
Magic Number,Yatse2.Libs,NetworkTools,C:\repos\Tolriq_Yatse2\Yatse2\Libs\NetworkTools.cs,GetMacAddressFromArp,The following statement contains a magic number: var ip = (uint)byteIp[3] << 24;
Magic Number,Yatse2.Libs,NetworkTools,C:\repos\Tolriq_Yatse2\Yatse2\Libs\NetworkTools.cs,GetMacAddressFromArp,The following statement contains a magic number: ip += (uint)byteIp[2] << 16;
Magic Number,Yatse2.Libs,NetworkTools,C:\repos\Tolriq_Yatse2\Yatse2\Libs\NetworkTools.cs,GetMacAddressFromArp,The following statement contains a magic number: ip += (uint)byteIp[2] << 16;
Magic Number,Yatse2.Libs,NetworkTools,C:\repos\Tolriq_Yatse2\Yatse2\Libs\NetworkTools.cs,GetMacAddressFromArp,The following statement contains a magic number: ip += (uint)byteIp[1] << 8;
Magic Number,Yatse2.Libs,NetworkTools,C:\repos\Tolriq_Yatse2\Yatse2\Libs\NetworkTools.cs,Wakeup,The following statement contains a magic number: using (var client = new WolUdpClient())              {                  client.Connect(new IPAddress(0xffffffff)' 0x2fff);                  if (!client.IsClientInBrodcastMode()) return;                    var byteCount = 0;                  var bytes = new byte[102];                  for (var trailer = 0; trailer < 6; trailer++)                  {                      bytes[byteCount++] = 0xFF;                  }                  for (var macPackets = 0; macPackets < 16; macPackets++)                  {                      var i = 0;                      for (var macBytes = 0; macBytes < 6; macBytes++)                      {                          bytes[byteCount++] = byte.Parse(macAddress.Substring(i' 2)' NumberStyles.HexNumber'CultureInfo.InvariantCulture);                          i += 2;                      }                  }                  client.Send(bytes' byteCount);              }
Magic Number,Yatse2.Libs,NetworkTools,C:\repos\Tolriq_Yatse2\Yatse2\Libs\NetworkTools.cs,Wakeup,The following statement contains a magic number: using (var client = new WolUdpClient())              {                  client.Connect(new IPAddress(0xffffffff)' 0x2fff);                  if (!client.IsClientInBrodcastMode()) return;                    var byteCount = 0;                  var bytes = new byte[102];                  for (var trailer = 0; trailer < 6; trailer++)                  {                      bytes[byteCount++] = 0xFF;                  }                  for (var macPackets = 0; macPackets < 16; macPackets++)                  {                      var i = 0;                      for (var macBytes = 0; macBytes < 6; macBytes++)                      {                          bytes[byteCount++] = byte.Parse(macAddress.Substring(i' 2)' NumberStyles.HexNumber'CultureInfo.InvariantCulture);                          i += 2;                      }                  }                  client.Send(bytes' byteCount);              }
Magic Number,Yatse2.Libs,NetworkTools,C:\repos\Tolriq_Yatse2\Yatse2\Libs\NetworkTools.cs,Wakeup,The following statement contains a magic number: using (var client = new WolUdpClient())              {                  client.Connect(new IPAddress(0xffffffff)' 0x2fff);                  if (!client.IsClientInBrodcastMode()) return;                    var byteCount = 0;                  var bytes = new byte[102];                  for (var trailer = 0; trailer < 6; trailer++)                  {                      bytes[byteCount++] = 0xFF;                  }                  for (var macPackets = 0; macPackets < 16; macPackets++)                  {                      var i = 0;                      for (var macBytes = 0; macBytes < 6; macBytes++)                      {                          bytes[byteCount++] = byte.Parse(macAddress.Substring(i' 2)' NumberStyles.HexNumber'CultureInfo.InvariantCulture);                          i += 2;                      }                  }                  client.Send(bytes' byteCount);              }
Magic Number,Yatse2.Libs,NetworkTools,C:\repos\Tolriq_Yatse2\Yatse2\Libs\NetworkTools.cs,Wakeup,The following statement contains a magic number: using (var client = new WolUdpClient())              {                  client.Connect(new IPAddress(0xffffffff)' 0x2fff);                  if (!client.IsClientInBrodcastMode()) return;                    var byteCount = 0;                  var bytes = new byte[102];                  for (var trailer = 0; trailer < 6; trailer++)                  {                      bytes[byteCount++] = 0xFF;                  }                  for (var macPackets = 0; macPackets < 16; macPackets++)                  {                      var i = 0;                      for (var macBytes = 0; macBytes < 6; macBytes++)                      {                          bytes[byteCount++] = byte.Parse(macAddress.Substring(i' 2)' NumberStyles.HexNumber'CultureInfo.InvariantCulture);                          i += 2;                      }                  }                  client.Send(bytes' byteCount);              }
Magic Number,Yatse2.Libs,NetworkTools,C:\repos\Tolriq_Yatse2\Yatse2\Libs\NetworkTools.cs,Wakeup,The following statement contains a magic number: using (var client = new WolUdpClient())              {                  client.Connect(new IPAddress(0xffffffff)' 0x2fff);                  if (!client.IsClientInBrodcastMode()) return;                    var byteCount = 0;                  var bytes = new byte[102];                  for (var trailer = 0; trailer < 6; trailer++)                  {                      bytes[byteCount++] = 0xFF;                  }                  for (var macPackets = 0; macPackets < 16; macPackets++)                  {                      var i = 0;                      for (var macBytes = 0; macBytes < 6; macBytes++)                      {                          bytes[byteCount++] = byte.Parse(macAddress.Substring(i' 2)' NumberStyles.HexNumber'CultureInfo.InvariantCulture);                          i += 2;                      }                  }                  client.Send(bytes' byteCount);              }
Magic Number,Yatse2.Libs,NetworkTools,C:\repos\Tolriq_Yatse2\Yatse2\Libs\NetworkTools.cs,Wakeup,The following statement contains a magic number: using (var client = new WolUdpClient())              {                  client.Connect(new IPAddress(0xffffffff)' 0x2fff);                  if (!client.IsClientInBrodcastMode()) return;                    var byteCount = 0;                  var bytes = new byte[102];                  for (var trailer = 0; trailer < 6; trailer++)                  {                      bytes[byteCount++] = 0xFF;                  }                  for (var macPackets = 0; macPackets < 16; macPackets++)                  {                      var i = 0;                      for (var macBytes = 0; macBytes < 6; macBytes++)                      {                          bytes[byteCount++] = byte.Parse(macAddress.Substring(i' 2)' NumberStyles.HexNumber'CultureInfo.InvariantCulture);                          i += 2;                      }                  }                  client.Send(bytes' byteCount);              }
Magic Number,Yatse2.Libs,Devmode,C:\repos\Tolriq_Yatse2\Yatse2\Libs\ScreenResolution.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  var result = (DMDeviceName != null ? DMDeviceName.GetHashCode() : 0);                  result = (result*397) ^ DMSpecVersion.GetHashCode();                  result = (result*397) ^ DMDriverVersion.GetHashCode();                  result = (result*397) ^ DMSize.GetHashCode();                  result = (result*397) ^ DMDriverExtra.GetHashCode();                  result = (result*397) ^ DMFields;                  result = (result*397) ^ DMOrientation.GetHashCode();                  result = (result*397) ^ DMPaperSize.GetHashCode();                  result = (result*397) ^ DMPaperLength.GetHashCode();                  result = (result*397) ^ DMPaperWidth.GetHashCode();                  result = (result*397) ^ DMScale.GetHashCode();                  result = (result*397) ^ DMCopies.GetHashCode();                  result = (result*397) ^ DMDefaultSource.GetHashCode();                  result = (result*397) ^ DMPrintQuality.GetHashCode();                  result = (result*397) ^ DMColor.GetHashCode();                  result = (result*397) ^ DMDuplex.GetHashCode();                  result = (result*397) ^ DMYResolution.GetHashCode();                  result = (result*397) ^ DMTTOption.GetHashCode();                  result = (result*397) ^ DMCollate.GetHashCode();                  result = (result*397) ^ (DMFormName != null ? DMFormName.GetHashCode() : 0);                  result = (result*397) ^ DMUnusedPadding.GetHashCode();                  result = (result*397) ^ DMBitsPerPel.GetHashCode();                  result = (result*397) ^ DMPelsWidth;                  result = (result*397) ^ DMPelsHeight;                  result = (result*397) ^ DMDisplayFlags;                  result = (result*397) ^ DMDisplayFrequency;                  return result;              }
Magic Number,Yatse2.Libs,Devmode,C:\repos\Tolriq_Yatse2\Yatse2\Libs\ScreenResolution.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  var result = (DMDeviceName != null ? DMDeviceName.GetHashCode() : 0);                  result = (result*397) ^ DMSpecVersion.GetHashCode();                  result = (result*397) ^ DMDriverVersion.GetHashCode();                  result = (result*397) ^ DMSize.GetHashCode();                  result = (result*397) ^ DMDriverExtra.GetHashCode();                  result = (result*397) ^ DMFields;                  result = (result*397) ^ DMOrientation.GetHashCode();                  result = (result*397) ^ DMPaperSize.GetHashCode();                  result = (result*397) ^ DMPaperLength.GetHashCode();                  result = (result*397) ^ DMPaperWidth.GetHashCode();                  result = (result*397) ^ DMScale.GetHashCode();                  result = (result*397) ^ DMCopies.GetHashCode();                  result = (result*397) ^ DMDefaultSource.GetHashCode();                  result = (result*397) ^ DMPrintQuality.GetHashCode();                  result = (result*397) ^ DMColor.GetHashCode();                  result = (result*397) ^ DMDuplex.GetHashCode();                  result = (result*397) ^ DMYResolution.GetHashCode();                  result = (result*397) ^ DMTTOption.GetHashCode();                  result = (result*397) ^ DMCollate.GetHashCode();                  result = (result*397) ^ (DMFormName != null ? DMFormName.GetHashCode() : 0);                  result = (result*397) ^ DMUnusedPadding.GetHashCode();                  result = (result*397) ^ DMBitsPerPel.GetHashCode();                  result = (result*397) ^ DMPelsWidth;                  result = (result*397) ^ DMPelsHeight;                  result = (result*397) ^ DMDisplayFlags;                  result = (result*397) ^ DMDisplayFrequency;                  return result;              }
Magic Number,Yatse2.Libs,Devmode,C:\repos\Tolriq_Yatse2\Yatse2\Libs\ScreenResolution.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  var result = (DMDeviceName != null ? DMDeviceName.GetHashCode() : 0);                  result = (result*397) ^ DMSpecVersion.GetHashCode();                  result = (result*397) ^ DMDriverVersion.GetHashCode();                  result = (result*397) ^ DMSize.GetHashCode();                  result = (result*397) ^ DMDriverExtra.GetHashCode();                  result = (result*397) ^ DMFields;                  result = (result*397) ^ DMOrientation.GetHashCode();                  result = (result*397) ^ DMPaperSize.GetHashCode();                  result = (result*397) ^ DMPaperLength.GetHashCode();                  result = (result*397) ^ DMPaperWidth.GetHashCode();                  result = (result*397) ^ DMScale.GetHashCode();                  result = (result*397) ^ DMCopies.GetHashCode();                  result = (result*397) ^ DMDefaultSource.GetHashCode();                  result = (result*397) ^ DMPrintQuality.GetHashCode();                  result = (result*397) ^ DMColor.GetHashCode();                  result = (result*397) ^ DMDuplex.GetHashCode();                  result = (result*397) ^ DMYResolution.GetHashCode();                  result = (result*397) ^ DMTTOption.GetHashCode();                  result = (result*397) ^ DMCollate.GetHashCode();                  result = (result*397) ^ (DMFormName != null ? DMFormName.GetHashCode() : 0);                  result = (result*397) ^ DMUnusedPadding.GetHashCode();                  result = (result*397) ^ DMBitsPerPel.GetHashCode();                  result = (result*397) ^ DMPelsWidth;                  result = (result*397) ^ DMPelsHeight;                  result = (result*397) ^ DMDisplayFlags;                  result = (result*397) ^ DMDisplayFrequency;                  return result;              }
Magic Number,Yatse2.Libs,Devmode,C:\repos\Tolriq_Yatse2\Yatse2\Libs\ScreenResolution.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  var result = (DMDeviceName != null ? DMDeviceName.GetHashCode() : 0);                  result = (result*397) ^ DMSpecVersion.GetHashCode();                  result = (result*397) ^ DMDriverVersion.GetHashCode();                  result = (result*397) ^ DMSize.GetHashCode();                  result = (result*397) ^ DMDriverExtra.GetHashCode();                  result = (result*397) ^ DMFields;                  result = (result*397) ^ DMOrientation.GetHashCode();                  result = (result*397) ^ DMPaperSize.GetHashCode();                  result = (result*397) ^ DMPaperLength.GetHashCode();                  result = (result*397) ^ DMPaperWidth.GetHashCode();                  result = (result*397) ^ DMScale.GetHashCode();                  result = (result*397) ^ DMCopies.GetHashCode();                  result = (result*397) ^ DMDefaultSource.GetHashCode();                  result = (result*397) ^ DMPrintQuality.GetHashCode();                  result = (result*397) ^ DMColor.GetHashCode();                  result = (result*397) ^ DMDuplex.GetHashCode();                  result = (result*397) ^ DMYResolution.GetHashCode();                  result = (result*397) ^ DMTTOption.GetHashCode();                  result = (result*397) ^ DMCollate.GetHashCode();                  result = (result*397) ^ (DMFormName != null ? DMFormName.GetHashCode() : 0);                  result = (result*397) ^ DMUnusedPadding.GetHashCode();                  result = (result*397) ^ DMBitsPerPel.GetHashCode();                  result = (result*397) ^ DMPelsWidth;                  result = (result*397) ^ DMPelsHeight;                  result = (result*397) ^ DMDisplayFlags;                  result = (result*397) ^ DMDisplayFrequency;                  return result;              }
Magic Number,Yatse2.Libs,Devmode,C:\repos\Tolriq_Yatse2\Yatse2\Libs\ScreenResolution.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  var result = (DMDeviceName != null ? DMDeviceName.GetHashCode() : 0);                  result = (result*397) ^ DMSpecVersion.GetHashCode();                  result = (result*397) ^ DMDriverVersion.GetHashCode();                  result = (result*397) ^ DMSize.GetHashCode();                  result = (result*397) ^ DMDriverExtra.GetHashCode();                  result = (result*397) ^ DMFields;                  result = (result*397) ^ DMOrientation.GetHashCode();                  result = (result*397) ^ DMPaperSize.GetHashCode();                  result = (result*397) ^ DMPaperLength.GetHashCode();                  result = (result*397) ^ DMPaperWidth.GetHashCode();                  result = (result*397) ^ DMScale.GetHashCode();                  result = (result*397) ^ DMCopies.GetHashCode();                  result = (result*397) ^ DMDefaultSource.GetHashCode();                  result = (result*397) ^ DMPrintQuality.GetHashCode();                  result = (result*397) ^ DMColor.GetHashCode();                  result = (result*397) ^ DMDuplex.GetHashCode();                  result = (result*397) ^ DMYResolution.GetHashCode();                  result = (result*397) ^ DMTTOption.GetHashCode();                  result = (result*397) ^ DMCollate.GetHashCode();                  result = (result*397) ^ (DMFormName != null ? DMFormName.GetHashCode() : 0);                  result = (result*397) ^ DMUnusedPadding.GetHashCode();                  result = (result*397) ^ DMBitsPerPel.GetHashCode();                  result = (result*397) ^ DMPelsWidth;                  result = (result*397) ^ DMPelsHeight;                  result = (result*397) ^ DMDisplayFlags;                  result = (result*397) ^ DMDisplayFrequency;                  return result;              }
Magic Number,Yatse2.Libs,Devmode,C:\repos\Tolriq_Yatse2\Yatse2\Libs\ScreenResolution.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  var result = (DMDeviceName != null ? DMDeviceName.GetHashCode() : 0);                  result = (result*397) ^ DMSpecVersion.GetHashCode();                  result = (result*397) ^ DMDriverVersion.GetHashCode();                  result = (result*397) ^ DMSize.GetHashCode();                  result = (result*397) ^ DMDriverExtra.GetHashCode();                  result = (result*397) ^ DMFields;                  result = (result*397) ^ DMOrientation.GetHashCode();                  result = (result*397) ^ DMPaperSize.GetHashCode();                  result = (result*397) ^ DMPaperLength.GetHashCode();                  result = (result*397) ^ DMPaperWidth.GetHashCode();                  result = (result*397) ^ DMScale.GetHashCode();                  result = (result*397) ^ DMCopies.GetHashCode();                  result = (result*397) ^ DMDefaultSource.GetHashCode();                  result = (result*397) ^ DMPrintQuality.GetHashCode();                  result = (result*397) ^ DMColor.GetHashCode();                  result = (result*397) ^ DMDuplex.GetHashCode();                  result = (result*397) ^ DMYResolution.GetHashCode();                  result = (result*397) ^ DMTTOption.GetHashCode();                  result = (result*397) ^ DMCollate.GetHashCode();                  result = (result*397) ^ (DMFormName != null ? DMFormName.GetHashCode() : 0);                  result = (result*397) ^ DMUnusedPadding.GetHashCode();                  result = (result*397) ^ DMBitsPerPel.GetHashCode();                  result = (result*397) ^ DMPelsWidth;                  result = (result*397) ^ DMPelsHeight;                  result = (result*397) ^ DMDisplayFlags;                  result = (result*397) ^ DMDisplayFrequency;                  return result;              }
Magic Number,Yatse2.Libs,Devmode,C:\repos\Tolriq_Yatse2\Yatse2\Libs\ScreenResolution.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  var result = (DMDeviceName != null ? DMDeviceName.GetHashCode() : 0);                  result = (result*397) ^ DMSpecVersion.GetHashCode();                  result = (result*397) ^ DMDriverVersion.GetHashCode();                  result = (result*397) ^ DMSize.GetHashCode();                  result = (result*397) ^ DMDriverExtra.GetHashCode();                  result = (result*397) ^ DMFields;                  result = (result*397) ^ DMOrientation.GetHashCode();                  result = (result*397) ^ DMPaperSize.GetHashCode();                  result = (result*397) ^ DMPaperLength.GetHashCode();                  result = (result*397) ^ DMPaperWidth.GetHashCode();                  result = (result*397) ^ DMScale.GetHashCode();                  result = (result*397) ^ DMCopies.GetHashCode();                  result = (result*397) ^ DMDefaultSource.GetHashCode();                  result = (result*397) ^ DMPrintQuality.GetHashCode();                  result = (result*397) ^ DMColor.GetHashCode();                  result = (result*397) ^ DMDuplex.GetHashCode();                  result = (result*397) ^ DMYResolution.GetHashCode();                  result = (result*397) ^ DMTTOption.GetHashCode();                  result = (result*397) ^ DMCollate.GetHashCode();                  result = (result*397) ^ (DMFormName != null ? DMFormName.GetHashCode() : 0);                  result = (result*397) ^ DMUnusedPadding.GetHashCode();                  result = (result*397) ^ DMBitsPerPel.GetHashCode();                  result = (result*397) ^ DMPelsWidth;                  result = (result*397) ^ DMPelsHeight;                  result = (result*397) ^ DMDisplayFlags;                  result = (result*397) ^ DMDisplayFrequency;                  return result;              }
Magic Number,Yatse2.Libs,Devmode,C:\repos\Tolriq_Yatse2\Yatse2\Libs\ScreenResolution.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  var result = (DMDeviceName != null ? DMDeviceName.GetHashCode() : 0);                  result = (result*397) ^ DMSpecVersion.GetHashCode();                  result = (result*397) ^ DMDriverVersion.GetHashCode();                  result = (result*397) ^ DMSize.GetHashCode();                  result = (result*397) ^ DMDriverExtra.GetHashCode();                  result = (result*397) ^ DMFields;                  result = (result*397) ^ DMOrientation.GetHashCode();                  result = (result*397) ^ DMPaperSize.GetHashCode();                  result = (result*397) ^ DMPaperLength.GetHashCode();                  result = (result*397) ^ DMPaperWidth.GetHashCode();                  result = (result*397) ^ DMScale.GetHashCode();                  result = (result*397) ^ DMCopies.GetHashCode();                  result = (result*397) ^ DMDefaultSource.GetHashCode();                  result = (result*397) ^ DMPrintQuality.GetHashCode();                  result = (result*397) ^ DMColor.GetHashCode();                  result = (result*397) ^ DMDuplex.GetHashCode();                  result = (result*397) ^ DMYResolution.GetHashCode();                  result = (result*397) ^ DMTTOption.GetHashCode();                  result = (result*397) ^ DMCollate.GetHashCode();                  result = (result*397) ^ (DMFormName != null ? DMFormName.GetHashCode() : 0);                  result = (result*397) ^ DMUnusedPadding.GetHashCode();                  result = (result*397) ^ DMBitsPerPel.GetHashCode();                  result = (result*397) ^ DMPelsWidth;                  result = (result*397) ^ DMPelsHeight;                  result = (result*397) ^ DMDisplayFlags;                  result = (result*397) ^ DMDisplayFrequency;                  return result;              }
Magic Number,Yatse2.Libs,Devmode,C:\repos\Tolriq_Yatse2\Yatse2\Libs\ScreenResolution.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  var result = (DMDeviceName != null ? DMDeviceName.GetHashCode() : 0);                  result = (result*397) ^ DMSpecVersion.GetHashCode();                  result = (result*397) ^ DMDriverVersion.GetHashCode();                  result = (result*397) ^ DMSize.GetHashCode();                  result = (result*397) ^ DMDriverExtra.GetHashCode();                  result = (result*397) ^ DMFields;                  result = (result*397) ^ DMOrientation.GetHashCode();                  result = (result*397) ^ DMPaperSize.GetHashCode();                  result = (result*397) ^ DMPaperLength.GetHashCode();                  result = (result*397) ^ DMPaperWidth.GetHashCode();                  result = (result*397) ^ DMScale.GetHashCode();                  result = (result*397) ^ DMCopies.GetHashCode();                  result = (result*397) ^ DMDefaultSource.GetHashCode();                  result = (result*397) ^ DMPrintQuality.GetHashCode();                  result = (result*397) ^ DMColor.GetHashCode();                  result = (result*397) ^ DMDuplex.GetHashCode();                  result = (result*397) ^ DMYResolution.GetHashCode();                  result = (result*397) ^ DMTTOption.GetHashCode();                  result = (result*397) ^ DMCollate.GetHashCode();                  result = (result*397) ^ (DMFormName != null ? DMFormName.GetHashCode() : 0);                  result = (result*397) ^ DMUnusedPadding.GetHashCode();                  result = (result*397) ^ DMBitsPerPel.GetHashCode();                  result = (result*397) ^ DMPelsWidth;                  result = (result*397) ^ DMPelsHeight;                  result = (result*397) ^ DMDisplayFlags;                  result = (result*397) ^ DMDisplayFrequency;                  return result;              }
Magic Number,Yatse2.Libs,Devmode,C:\repos\Tolriq_Yatse2\Yatse2\Libs\ScreenResolution.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  var result = (DMDeviceName != null ? DMDeviceName.GetHashCode() : 0);                  result = (result*397) ^ DMSpecVersion.GetHashCode();                  result = (result*397) ^ DMDriverVersion.GetHashCode();                  result = (result*397) ^ DMSize.GetHashCode();                  result = (result*397) ^ DMDriverExtra.GetHashCode();                  result = (result*397) ^ DMFields;                  result = (result*397) ^ DMOrientation.GetHashCode();                  result = (result*397) ^ DMPaperSize.GetHashCode();                  result = (result*397) ^ DMPaperLength.GetHashCode();                  result = (result*397) ^ DMPaperWidth.GetHashCode();                  result = (result*397) ^ DMScale.GetHashCode();                  result = (result*397) ^ DMCopies.GetHashCode();                  result = (result*397) ^ DMDefaultSource.GetHashCode();                  result = (result*397) ^ DMPrintQuality.GetHashCode();                  result = (result*397) ^ DMColor.GetHashCode();                  result = (result*397) ^ DMDuplex.GetHashCode();                  result = (result*397) ^ DMYResolution.GetHashCode();                  result = (result*397) ^ DMTTOption.GetHashCode();                  result = (result*397) ^ DMCollate.GetHashCode();                  result = (result*397) ^ (DMFormName != null ? DMFormName.GetHashCode() : 0);                  result = (result*397) ^ DMUnusedPadding.GetHashCode();                  result = (result*397) ^ DMBitsPerPel.GetHashCode();                  result = (result*397) ^ DMPelsWidth;                  result = (result*397) ^ DMPelsHeight;                  result = (result*397) ^ DMDisplayFlags;                  result = (result*397) ^ DMDisplayFrequency;                  return result;              }
Magic Number,Yatse2.Libs,Devmode,C:\repos\Tolriq_Yatse2\Yatse2\Libs\ScreenResolution.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  var result = (DMDeviceName != null ? DMDeviceName.GetHashCode() : 0);                  result = (result*397) ^ DMSpecVersion.GetHashCode();                  result = (result*397) ^ DMDriverVersion.GetHashCode();                  result = (result*397) ^ DMSize.GetHashCode();                  result = (result*397) ^ DMDriverExtra.GetHashCode();                  result = (result*397) ^ DMFields;                  result = (result*397) ^ DMOrientation.GetHashCode();                  result = (result*397) ^ DMPaperSize.GetHashCode();                  result = (result*397) ^ DMPaperLength.GetHashCode();                  result = (result*397) ^ DMPaperWidth.GetHashCode();                  result = (result*397) ^ DMScale.GetHashCode();                  result = (result*397) ^ DMCopies.GetHashCode();                  result = (result*397) ^ DMDefaultSource.GetHashCode();                  result = (result*397) ^ DMPrintQuality.GetHashCode();                  result = (result*397) ^ DMColor.GetHashCode();                  result = (result*397) ^ DMDuplex.GetHashCode();                  result = (result*397) ^ DMYResolution.GetHashCode();                  result = (result*397) ^ DMTTOption.GetHashCode();                  result = (result*397) ^ DMCollate.GetHashCode();                  result = (result*397) ^ (DMFormName != null ? DMFormName.GetHashCode() : 0);                  result = (result*397) ^ DMUnusedPadding.GetHashCode();                  result = (result*397) ^ DMBitsPerPel.GetHashCode();                  result = (result*397) ^ DMPelsWidth;                  result = (result*397) ^ DMPelsHeight;                  result = (result*397) ^ DMDisplayFlags;                  result = (result*397) ^ DMDisplayFrequency;                  return result;              }
Magic Number,Yatse2.Libs,Devmode,C:\repos\Tolriq_Yatse2\Yatse2\Libs\ScreenResolution.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  var result = (DMDeviceName != null ? DMDeviceName.GetHashCode() : 0);                  result = (result*397) ^ DMSpecVersion.GetHashCode();                  result = (result*397) ^ DMDriverVersion.GetHashCode();                  result = (result*397) ^ DMSize.GetHashCode();                  result = (result*397) ^ DMDriverExtra.GetHashCode();                  result = (result*397) ^ DMFields;                  result = (result*397) ^ DMOrientation.GetHashCode();                  result = (result*397) ^ DMPaperSize.GetHashCode();                  result = (result*397) ^ DMPaperLength.GetHashCode();                  result = (result*397) ^ DMPaperWidth.GetHashCode();                  result = (result*397) ^ DMScale.GetHashCode();                  result = (result*397) ^ DMCopies.GetHashCode();                  result = (result*397) ^ DMDefaultSource.GetHashCode();                  result = (result*397) ^ DMPrintQuality.GetHashCode();                  result = (result*397) ^ DMColor.GetHashCode();                  result = (result*397) ^ DMDuplex.GetHashCode();                  result = (result*397) ^ DMYResolution.GetHashCode();                  result = (result*397) ^ DMTTOption.GetHashCode();                  result = (result*397) ^ DMCollate.GetHashCode();                  result = (result*397) ^ (DMFormName != null ? DMFormName.GetHashCode() : 0);                  result = (result*397) ^ DMUnusedPadding.GetHashCode();                  result = (result*397) ^ DMBitsPerPel.GetHashCode();                  result = (result*397) ^ DMPelsWidth;                  result = (result*397) ^ DMPelsHeight;                  result = (result*397) ^ DMDisplayFlags;                  result = (result*397) ^ DMDisplayFrequency;                  return result;              }
Magic Number,Yatse2.Libs,Devmode,C:\repos\Tolriq_Yatse2\Yatse2\Libs\ScreenResolution.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  var result = (DMDeviceName != null ? DMDeviceName.GetHashCode() : 0);                  result = (result*397) ^ DMSpecVersion.GetHashCode();                  result = (result*397) ^ DMDriverVersion.GetHashCode();                  result = (result*397) ^ DMSize.GetHashCode();                  result = (result*397) ^ DMDriverExtra.GetHashCode();                  result = (result*397) ^ DMFields;                  result = (result*397) ^ DMOrientation.GetHashCode();                  result = (result*397) ^ DMPaperSize.GetHashCode();                  result = (result*397) ^ DMPaperLength.GetHashCode();                  result = (result*397) ^ DMPaperWidth.GetHashCode();                  result = (result*397) ^ DMScale.GetHashCode();                  result = (result*397) ^ DMCopies.GetHashCode();                  result = (result*397) ^ DMDefaultSource.GetHashCode();                  result = (result*397) ^ DMPrintQuality.GetHashCode();                  result = (result*397) ^ DMColor.GetHashCode();                  result = (result*397) ^ DMDuplex.GetHashCode();                  result = (result*397) ^ DMYResolution.GetHashCode();                  result = (result*397) ^ DMTTOption.GetHashCode();                  result = (result*397) ^ DMCollate.GetHashCode();                  result = (result*397) ^ (DMFormName != null ? DMFormName.GetHashCode() : 0);                  result = (result*397) ^ DMUnusedPadding.GetHashCode();                  result = (result*397) ^ DMBitsPerPel.GetHashCode();                  result = (result*397) ^ DMPelsWidth;                  result = (result*397) ^ DMPelsHeight;                  result = (result*397) ^ DMDisplayFlags;                  result = (result*397) ^ DMDisplayFrequency;                  return result;              }
Magic Number,Yatse2.Libs,Devmode,C:\repos\Tolriq_Yatse2\Yatse2\Libs\ScreenResolution.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  var result = (DMDeviceName != null ? DMDeviceName.GetHashCode() : 0);                  result = (result*397) ^ DMSpecVersion.GetHashCode();                  result = (result*397) ^ DMDriverVersion.GetHashCode();                  result = (result*397) ^ DMSize.GetHashCode();                  result = (result*397) ^ DMDriverExtra.GetHashCode();                  result = (result*397) ^ DMFields;                  result = (result*397) ^ DMOrientation.GetHashCode();                  result = (result*397) ^ DMPaperSize.GetHashCode();                  result = (result*397) ^ DMPaperLength.GetHashCode();                  result = (result*397) ^ DMPaperWidth.GetHashCode();                  result = (result*397) ^ DMScale.GetHashCode();                  result = (result*397) ^ DMCopies.GetHashCode();                  result = (result*397) ^ DMDefaultSource.GetHashCode();                  result = (result*397) ^ DMPrintQuality.GetHashCode();                  result = (result*397) ^ DMColor.GetHashCode();                  result = (result*397) ^ DMDuplex.GetHashCode();                  result = (result*397) ^ DMYResolution.GetHashCode();                  result = (result*397) ^ DMTTOption.GetHashCode();                  result = (result*397) ^ DMCollate.GetHashCode();                  result = (result*397) ^ (DMFormName != null ? DMFormName.GetHashCode() : 0);                  result = (result*397) ^ DMUnusedPadding.GetHashCode();                  result = (result*397) ^ DMBitsPerPel.GetHashCode();                  result = (result*397) ^ DMPelsWidth;                  result = (result*397) ^ DMPelsHeight;                  result = (result*397) ^ DMDisplayFlags;                  result = (result*397) ^ DMDisplayFrequency;                  return result;              }
Magic Number,Yatse2.Libs,Devmode,C:\repos\Tolriq_Yatse2\Yatse2\Libs\ScreenResolution.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  var result = (DMDeviceName != null ? DMDeviceName.GetHashCode() : 0);                  result = (result*397) ^ DMSpecVersion.GetHashCode();                  result = (result*397) ^ DMDriverVersion.GetHashCode();                  result = (result*397) ^ DMSize.GetHashCode();                  result = (result*397) ^ DMDriverExtra.GetHashCode();                  result = (result*397) ^ DMFields;                  result = (result*397) ^ DMOrientation.GetHashCode();                  result = (result*397) ^ DMPaperSize.GetHashCode();                  result = (result*397) ^ DMPaperLength.GetHashCode();                  result = (result*397) ^ DMPaperWidth.GetHashCode();                  result = (result*397) ^ DMScale.GetHashCode();                  result = (result*397) ^ DMCopies.GetHashCode();                  result = (result*397) ^ DMDefaultSource.GetHashCode();                  result = (result*397) ^ DMPrintQuality.GetHashCode();                  result = (result*397) ^ DMColor.GetHashCode();                  result = (result*397) ^ DMDuplex.GetHashCode();                  result = (result*397) ^ DMYResolution.GetHashCode();                  result = (result*397) ^ DMTTOption.GetHashCode();                  result = (result*397) ^ DMCollate.GetHashCode();                  result = (result*397) ^ (DMFormName != null ? DMFormName.GetHashCode() : 0);                  result = (result*397) ^ DMUnusedPadding.GetHashCode();                  result = (result*397) ^ DMBitsPerPel.GetHashCode();                  result = (result*397) ^ DMPelsWidth;                  result = (result*397) ^ DMPelsHeight;                  result = (result*397) ^ DMDisplayFlags;                  result = (result*397) ^ DMDisplayFrequency;                  return result;              }
Magic Number,Yatse2.Libs,Devmode,C:\repos\Tolriq_Yatse2\Yatse2\Libs\ScreenResolution.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  var result = (DMDeviceName != null ? DMDeviceName.GetHashCode() : 0);                  result = (result*397) ^ DMSpecVersion.GetHashCode();                  result = (result*397) ^ DMDriverVersion.GetHashCode();                  result = (result*397) ^ DMSize.GetHashCode();                  result = (result*397) ^ DMDriverExtra.GetHashCode();                  result = (result*397) ^ DMFields;                  result = (result*397) ^ DMOrientation.GetHashCode();                  result = (result*397) ^ DMPaperSize.GetHashCode();                  result = (result*397) ^ DMPaperLength.GetHashCode();                  result = (result*397) ^ DMPaperWidth.GetHashCode();                  result = (result*397) ^ DMScale.GetHashCode();                  result = (result*397) ^ DMCopies.GetHashCode();                  result = (result*397) ^ DMDefaultSource.GetHashCode();                  result = (result*397) ^ DMPrintQuality.GetHashCode();                  result = (result*397) ^ DMColor.GetHashCode();                  result = (result*397) ^ DMDuplex.GetHashCode();                  result = (result*397) ^ DMYResolution.GetHashCode();                  result = (result*397) ^ DMTTOption.GetHashCode();                  result = (result*397) ^ DMCollate.GetHashCode();                  result = (result*397) ^ (DMFormName != null ? DMFormName.GetHashCode() : 0);                  result = (result*397) ^ DMUnusedPadding.GetHashCode();                  result = (result*397) ^ DMBitsPerPel.GetHashCode();                  result = (result*397) ^ DMPelsWidth;                  result = (result*397) ^ DMPelsHeight;                  result = (result*397) ^ DMDisplayFlags;                  result = (result*397) ^ DMDisplayFrequency;                  return result;              }
Magic Number,Yatse2.Libs,Devmode,C:\repos\Tolriq_Yatse2\Yatse2\Libs\ScreenResolution.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  var result = (DMDeviceName != null ? DMDeviceName.GetHashCode() : 0);                  result = (result*397) ^ DMSpecVersion.GetHashCode();                  result = (result*397) ^ DMDriverVersion.GetHashCode();                  result = (result*397) ^ DMSize.GetHashCode();                  result = (result*397) ^ DMDriverExtra.GetHashCode();                  result = (result*397) ^ DMFields;                  result = (result*397) ^ DMOrientation.GetHashCode();                  result = (result*397) ^ DMPaperSize.GetHashCode();                  result = (result*397) ^ DMPaperLength.GetHashCode();                  result = (result*397) ^ DMPaperWidth.GetHashCode();                  result = (result*397) ^ DMScale.GetHashCode();                  result = (result*397) ^ DMCopies.GetHashCode();                  result = (result*397) ^ DMDefaultSource.GetHashCode();                  result = (result*397) ^ DMPrintQuality.GetHashCode();                  result = (result*397) ^ DMColor.GetHashCode();                  result = (result*397) ^ DMDuplex.GetHashCode();                  result = (result*397) ^ DMYResolution.GetHashCode();                  result = (result*397) ^ DMTTOption.GetHashCode();                  result = (result*397) ^ DMCollate.GetHashCode();                  result = (result*397) ^ (DMFormName != null ? DMFormName.GetHashCode() : 0);                  result = (result*397) ^ DMUnusedPadding.GetHashCode();                  result = (result*397) ^ DMBitsPerPel.GetHashCode();                  result = (result*397) ^ DMPelsWidth;                  result = (result*397) ^ DMPelsHeight;                  result = (result*397) ^ DMDisplayFlags;                  result = (result*397) ^ DMDisplayFrequency;                  return result;              }
Magic Number,Yatse2.Libs,Devmode,C:\repos\Tolriq_Yatse2\Yatse2\Libs\ScreenResolution.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  var result = (DMDeviceName != null ? DMDeviceName.GetHashCode() : 0);                  result = (result*397) ^ DMSpecVersion.GetHashCode();                  result = (result*397) ^ DMDriverVersion.GetHashCode();                  result = (result*397) ^ DMSize.GetHashCode();                  result = (result*397) ^ DMDriverExtra.GetHashCode();                  result = (result*397) ^ DMFields;                  result = (result*397) ^ DMOrientation.GetHashCode();                  result = (result*397) ^ DMPaperSize.GetHashCode();                  result = (result*397) ^ DMPaperLength.GetHashCode();                  result = (result*397) ^ DMPaperWidth.GetHashCode();                  result = (result*397) ^ DMScale.GetHashCode();                  result = (result*397) ^ DMCopies.GetHashCode();                  result = (result*397) ^ DMDefaultSource.GetHashCode();                  result = (result*397) ^ DMPrintQuality.GetHashCode();                  result = (result*397) ^ DMColor.GetHashCode();                  result = (result*397) ^ DMDuplex.GetHashCode();                  result = (result*397) ^ DMYResolution.GetHashCode();                  result = (result*397) ^ DMTTOption.GetHashCode();                  result = (result*397) ^ DMCollate.GetHashCode();                  result = (result*397) ^ (DMFormName != null ? DMFormName.GetHashCode() : 0);                  result = (result*397) ^ DMUnusedPadding.GetHashCode();                  result = (result*397) ^ DMBitsPerPel.GetHashCode();                  result = (result*397) ^ DMPelsWidth;                  result = (result*397) ^ DMPelsHeight;                  result = (result*397) ^ DMDisplayFlags;                  result = (result*397) ^ DMDisplayFrequency;                  return result;              }
Magic Number,Yatse2.Libs,Devmode,C:\repos\Tolriq_Yatse2\Yatse2\Libs\ScreenResolution.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  var result = (DMDeviceName != null ? DMDeviceName.GetHashCode() : 0);                  result = (result*397) ^ DMSpecVersion.GetHashCode();                  result = (result*397) ^ DMDriverVersion.GetHashCode();                  result = (result*397) ^ DMSize.GetHashCode();                  result = (result*397) ^ DMDriverExtra.GetHashCode();                  result = (result*397) ^ DMFields;                  result = (result*397) ^ DMOrientation.GetHashCode();                  result = (result*397) ^ DMPaperSize.GetHashCode();                  result = (result*397) ^ DMPaperLength.GetHashCode();                  result = (result*397) ^ DMPaperWidth.GetHashCode();                  result = (result*397) ^ DMScale.GetHashCode();                  result = (result*397) ^ DMCopies.GetHashCode();                  result = (result*397) ^ DMDefaultSource.GetHashCode();                  result = (result*397) ^ DMPrintQuality.GetHashCode();                  result = (result*397) ^ DMColor.GetHashCode();                  result = (result*397) ^ DMDuplex.GetHashCode();                  result = (result*397) ^ DMYResolution.GetHashCode();                  result = (result*397) ^ DMTTOption.GetHashCode();                  result = (result*397) ^ DMCollate.GetHashCode();                  result = (result*397) ^ (DMFormName != null ? DMFormName.GetHashCode() : 0);                  result = (result*397) ^ DMUnusedPadding.GetHashCode();                  result = (result*397) ^ DMBitsPerPel.GetHashCode();                  result = (result*397) ^ DMPelsWidth;                  result = (result*397) ^ DMPelsHeight;                  result = (result*397) ^ DMDisplayFlags;                  result = (result*397) ^ DMDisplayFrequency;                  return result;              }
Magic Number,Yatse2.Libs,Devmode,C:\repos\Tolriq_Yatse2\Yatse2\Libs\ScreenResolution.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  var result = (DMDeviceName != null ? DMDeviceName.GetHashCode() : 0);                  result = (result*397) ^ DMSpecVersion.GetHashCode();                  result = (result*397) ^ DMDriverVersion.GetHashCode();                  result = (result*397) ^ DMSize.GetHashCode();                  result = (result*397) ^ DMDriverExtra.GetHashCode();                  result = (result*397) ^ DMFields;                  result = (result*397) ^ DMOrientation.GetHashCode();                  result = (result*397) ^ DMPaperSize.GetHashCode();                  result = (result*397) ^ DMPaperLength.GetHashCode();                  result = (result*397) ^ DMPaperWidth.GetHashCode();                  result = (result*397) ^ DMScale.GetHashCode();                  result = (result*397) ^ DMCopies.GetHashCode();                  result = (result*397) ^ DMDefaultSource.GetHashCode();                  result = (result*397) ^ DMPrintQuality.GetHashCode();                  result = (result*397) ^ DMColor.GetHashCode();                  result = (result*397) ^ DMDuplex.GetHashCode();                  result = (result*397) ^ DMYResolution.GetHashCode();                  result = (result*397) ^ DMTTOption.GetHashCode();                  result = (result*397) ^ DMCollate.GetHashCode();                  result = (result*397) ^ (DMFormName != null ? DMFormName.GetHashCode() : 0);                  result = (result*397) ^ DMUnusedPadding.GetHashCode();                  result = (result*397) ^ DMBitsPerPel.GetHashCode();                  result = (result*397) ^ DMPelsWidth;                  result = (result*397) ^ DMPelsHeight;                  result = (result*397) ^ DMDisplayFlags;                  result = (result*397) ^ DMDisplayFrequency;                  return result;              }
Magic Number,Yatse2.Libs,Devmode,C:\repos\Tolriq_Yatse2\Yatse2\Libs\ScreenResolution.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  var result = (DMDeviceName != null ? DMDeviceName.GetHashCode() : 0);                  result = (result*397) ^ DMSpecVersion.GetHashCode();                  result = (result*397) ^ DMDriverVersion.GetHashCode();                  result = (result*397) ^ DMSize.GetHashCode();                  result = (result*397) ^ DMDriverExtra.GetHashCode();                  result = (result*397) ^ DMFields;                  result = (result*397) ^ DMOrientation.GetHashCode();                  result = (result*397) ^ DMPaperSize.GetHashCode();                  result = (result*397) ^ DMPaperLength.GetHashCode();                  result = (result*397) ^ DMPaperWidth.GetHashCode();                  result = (result*397) ^ DMScale.GetHashCode();                  result = (result*397) ^ DMCopies.GetHashCode();                  result = (result*397) ^ DMDefaultSource.GetHashCode();                  result = (result*397) ^ DMPrintQuality.GetHashCode();                  result = (result*397) ^ DMColor.GetHashCode();                  result = (result*397) ^ DMDuplex.GetHashCode();                  result = (result*397) ^ DMYResolution.GetHashCode();                  result = (result*397) ^ DMTTOption.GetHashCode();                  result = (result*397) ^ DMCollate.GetHashCode();                  result = (result*397) ^ (DMFormName != null ? DMFormName.GetHashCode() : 0);                  result = (result*397) ^ DMUnusedPadding.GetHashCode();                  result = (result*397) ^ DMBitsPerPel.GetHashCode();                  result = (result*397) ^ DMPelsWidth;                  result = (result*397) ^ DMPelsHeight;                  result = (result*397) ^ DMDisplayFlags;                  result = (result*397) ^ DMDisplayFrequency;                  return result;              }
Magic Number,Yatse2.Libs,Devmode,C:\repos\Tolriq_Yatse2\Yatse2\Libs\ScreenResolution.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  var result = (DMDeviceName != null ? DMDeviceName.GetHashCode() : 0);                  result = (result*397) ^ DMSpecVersion.GetHashCode();                  result = (result*397) ^ DMDriverVersion.GetHashCode();                  result = (result*397) ^ DMSize.GetHashCode();                  result = (result*397) ^ DMDriverExtra.GetHashCode();                  result = (result*397) ^ DMFields;                  result = (result*397) ^ DMOrientation.GetHashCode();                  result = (result*397) ^ DMPaperSize.GetHashCode();                  result = (result*397) ^ DMPaperLength.GetHashCode();                  result = (result*397) ^ DMPaperWidth.GetHashCode();                  result = (result*397) ^ DMScale.GetHashCode();                  result = (result*397) ^ DMCopies.GetHashCode();                  result = (result*397) ^ DMDefaultSource.GetHashCode();                  result = (result*397) ^ DMPrintQuality.GetHashCode();                  result = (result*397) ^ DMColor.GetHashCode();                  result = (result*397) ^ DMDuplex.GetHashCode();                  result = (result*397) ^ DMYResolution.GetHashCode();                  result = (result*397) ^ DMTTOption.GetHashCode();                  result = (result*397) ^ DMCollate.GetHashCode();                  result = (result*397) ^ (DMFormName != null ? DMFormName.GetHashCode() : 0);                  result = (result*397) ^ DMUnusedPadding.GetHashCode();                  result = (result*397) ^ DMBitsPerPel.GetHashCode();                  result = (result*397) ^ DMPelsWidth;                  result = (result*397) ^ DMPelsHeight;                  result = (result*397) ^ DMDisplayFlags;                  result = (result*397) ^ DMDisplayFrequency;                  return result;              }
Magic Number,Yatse2.Libs,Devmode,C:\repos\Tolriq_Yatse2\Yatse2\Libs\ScreenResolution.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  var result = (DMDeviceName != null ? DMDeviceName.GetHashCode() : 0);                  result = (result*397) ^ DMSpecVersion.GetHashCode();                  result = (result*397) ^ DMDriverVersion.GetHashCode();                  result = (result*397) ^ DMSize.GetHashCode();                  result = (result*397) ^ DMDriverExtra.GetHashCode();                  result = (result*397) ^ DMFields;                  result = (result*397) ^ DMOrientation.GetHashCode();                  result = (result*397) ^ DMPaperSize.GetHashCode();                  result = (result*397) ^ DMPaperLength.GetHashCode();                  result = (result*397) ^ DMPaperWidth.GetHashCode();                  result = (result*397) ^ DMScale.GetHashCode();                  result = (result*397) ^ DMCopies.GetHashCode();                  result = (result*397) ^ DMDefaultSource.GetHashCode();                  result = (result*397) ^ DMPrintQuality.GetHashCode();                  result = (result*397) ^ DMColor.GetHashCode();                  result = (result*397) ^ DMDuplex.GetHashCode();                  result = (result*397) ^ DMYResolution.GetHashCode();                  result = (result*397) ^ DMTTOption.GetHashCode();                  result = (result*397) ^ DMCollate.GetHashCode();                  result = (result*397) ^ (DMFormName != null ? DMFormName.GetHashCode() : 0);                  result = (result*397) ^ DMUnusedPadding.GetHashCode();                  result = (result*397) ^ DMBitsPerPel.GetHashCode();                  result = (result*397) ^ DMPelsWidth;                  result = (result*397) ^ DMPelsHeight;                  result = (result*397) ^ DMDisplayFlags;                  result = (result*397) ^ DMDisplayFrequency;                  return result;              }
Magic Number,Yatse2.Libs,Devmode,C:\repos\Tolriq_Yatse2\Yatse2\Libs\ScreenResolution.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  var result = (DMDeviceName != null ? DMDeviceName.GetHashCode() : 0);                  result = (result*397) ^ DMSpecVersion.GetHashCode();                  result = (result*397) ^ DMDriverVersion.GetHashCode();                  result = (result*397) ^ DMSize.GetHashCode();                  result = (result*397) ^ DMDriverExtra.GetHashCode();                  result = (result*397) ^ DMFields;                  result = (result*397) ^ DMOrientation.GetHashCode();                  result = (result*397) ^ DMPaperSize.GetHashCode();                  result = (result*397) ^ DMPaperLength.GetHashCode();                  result = (result*397) ^ DMPaperWidth.GetHashCode();                  result = (result*397) ^ DMScale.GetHashCode();                  result = (result*397) ^ DMCopies.GetHashCode();                  result = (result*397) ^ DMDefaultSource.GetHashCode();                  result = (result*397) ^ DMPrintQuality.GetHashCode();                  result = (result*397) ^ DMColor.GetHashCode();                  result = (result*397) ^ DMDuplex.GetHashCode();                  result = (result*397) ^ DMYResolution.GetHashCode();                  result = (result*397) ^ DMTTOption.GetHashCode();                  result = (result*397) ^ DMCollate.GetHashCode();                  result = (result*397) ^ (DMFormName != null ? DMFormName.GetHashCode() : 0);                  result = (result*397) ^ DMUnusedPadding.GetHashCode();                  result = (result*397) ^ DMBitsPerPel.GetHashCode();                  result = (result*397) ^ DMPelsWidth;                  result = (result*397) ^ DMPelsHeight;                  result = (result*397) ^ DMDisplayFlags;                  result = (result*397) ^ DMDisplayFrequency;                  return result;              }
Magic Number,Yatse2.Libs,Devmode,C:\repos\Tolriq_Yatse2\Yatse2\Libs\ScreenResolution.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  var result = (DMDeviceName != null ? DMDeviceName.GetHashCode() : 0);                  result = (result*397) ^ DMSpecVersion.GetHashCode();                  result = (result*397) ^ DMDriverVersion.GetHashCode();                  result = (result*397) ^ DMSize.GetHashCode();                  result = (result*397) ^ DMDriverExtra.GetHashCode();                  result = (result*397) ^ DMFields;                  result = (result*397) ^ DMOrientation.GetHashCode();                  result = (result*397) ^ DMPaperSize.GetHashCode();                  result = (result*397) ^ DMPaperLength.GetHashCode();                  result = (result*397) ^ DMPaperWidth.GetHashCode();                  result = (result*397) ^ DMScale.GetHashCode();                  result = (result*397) ^ DMCopies.GetHashCode();                  result = (result*397) ^ DMDefaultSource.GetHashCode();                  result = (result*397) ^ DMPrintQuality.GetHashCode();                  result = (result*397) ^ DMColor.GetHashCode();                  result = (result*397) ^ DMDuplex.GetHashCode();                  result = (result*397) ^ DMYResolution.GetHashCode();                  result = (result*397) ^ DMTTOption.GetHashCode();                  result = (result*397) ^ DMCollate.GetHashCode();                  result = (result*397) ^ (DMFormName != null ? DMFormName.GetHashCode() : 0);                  result = (result*397) ^ DMUnusedPadding.GetHashCode();                  result = (result*397) ^ DMBitsPerPel.GetHashCode();                  result = (result*397) ^ DMPelsWidth;                  result = (result*397) ^ DMPelsHeight;                  result = (result*397) ^ DMDisplayFlags;                  result = (result*397) ^ DMDisplayFrequency;                  return result;              }
Magic Number,Yatse2.Libs,DisplayDevice,C:\repos\Tolriq_Yatse2\Yatse2\Libs\ScreenResolution.cs,DisplayDevice,The following statement contains a magic number: DeviceName = new string(Convert.ToChar(" "' CultureInfo.InvariantCulture)' 32);
Magic Number,Yatse2.Libs,DisplayDevice,C:\repos\Tolriq_Yatse2\Yatse2\Libs\ScreenResolution.cs,DisplayDevice,The following statement contains a magic number: DeviceString = new string(Convert.ToChar(" "' CultureInfo.InvariantCulture)' 128);
Magic Number,Yatse2.Libs,DisplayDevice,C:\repos\Tolriq_Yatse2\Yatse2\Libs\ScreenResolution.cs,DisplayDevice,The following statement contains a magic number: DeviceID = new string(Convert.ToChar(" "' CultureInfo.InvariantCulture)' 128);
Magic Number,Yatse2.Libs,DisplayDevice,C:\repos\Tolriq_Yatse2\Yatse2\Libs\ScreenResolution.cs,DisplayDevice,The following statement contains a magic number: DeviceKey = new string(Convert.ToChar(" "' CultureInfo.InvariantCulture)' 128);
Magic Number,Yatse2.Libs,DisplayDevice,C:\repos\Tolriq_Yatse2\Yatse2\Libs\ScreenResolution.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  var result = cb;                  result = (result*397) ^ (DeviceName != null ? DeviceName.GetHashCode() : 0);                  result = (result*397) ^ (DeviceString != null ? DeviceString.GetHashCode() : 0);                  result = (result*397) ^ StateFlags;                  result = (result*397) ^ (DeviceID != null ? DeviceID.GetHashCode() : 0);                  result = (result*397) ^ (DeviceKey != null ? DeviceKey.GetHashCode() : 0);                  return result;              }
Magic Number,Yatse2.Libs,DisplayDevice,C:\repos\Tolriq_Yatse2\Yatse2\Libs\ScreenResolution.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  var result = cb;                  result = (result*397) ^ (DeviceName != null ? DeviceName.GetHashCode() : 0);                  result = (result*397) ^ (DeviceString != null ? DeviceString.GetHashCode() : 0);                  result = (result*397) ^ StateFlags;                  result = (result*397) ^ (DeviceID != null ? DeviceID.GetHashCode() : 0);                  result = (result*397) ^ (DeviceKey != null ? DeviceKey.GetHashCode() : 0);                  return result;              }
Magic Number,Yatse2.Libs,DisplayDevice,C:\repos\Tolriq_Yatse2\Yatse2\Libs\ScreenResolution.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  var result = cb;                  result = (result*397) ^ (DeviceName != null ? DeviceName.GetHashCode() : 0);                  result = (result*397) ^ (DeviceString != null ? DeviceString.GetHashCode() : 0);                  result = (result*397) ^ StateFlags;                  result = (result*397) ^ (DeviceID != null ? DeviceID.GetHashCode() : 0);                  result = (result*397) ^ (DeviceKey != null ? DeviceKey.GetHashCode() : 0);                  return result;              }
Magic Number,Yatse2.Libs,DisplayDevice,C:\repos\Tolriq_Yatse2\Yatse2\Libs\ScreenResolution.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  var result = cb;                  result = (result*397) ^ (DeviceName != null ? DeviceName.GetHashCode() : 0);                  result = (result*397) ^ (DeviceString != null ? DeviceString.GetHashCode() : 0);                  result = (result*397) ^ StateFlags;                  result = (result*397) ^ (DeviceID != null ? DeviceID.GetHashCode() : 0);                  result = (result*397) ^ (DeviceKey != null ? DeviceKey.GetHashCode() : 0);                  return result;              }
Magic Number,Yatse2.Libs,DisplayDevice,C:\repos\Tolriq_Yatse2\Yatse2\Libs\ScreenResolution.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  var result = cb;                  result = (result*397) ^ (DeviceName != null ? DeviceName.GetHashCode() : 0);                  result = (result*397) ^ (DeviceString != null ? DeviceString.GetHashCode() : 0);                  result = (result*397) ^ StateFlags;                  result = (result*397) ^ (DeviceID != null ? DeviceID.GetHashCode() : 0);                  result = (result*397) ^ (DeviceKey != null ? DeviceKey.GetHashCode() : 0);                  return result;              }
Magic Number,Yatse2.Libs,ScreenResolution,C:\repos\Tolriq_Yatse2\Yatse2\Libs\ScreenResolution.cs,MainDevice,The following statement contains a magic number: if (NativeMethods.EnumDisplayDevices(IntPtr.Zero' devNum' ref d' 0))              {                  return ((d.StateFlags & 4) != 0);              }
Magic Number,Yatse2.Libs,Weather,C:\repos\Tolriq_Yatse2\Yatse2\Libs\Weather.cs,Configure,The following statement contains a magic number: _refreshTimer = new Timer { Interval = 1000 };
Magic Number,Yatse2.Libs,Weather,C:\repos\Tolriq_Yatse2\Yatse2\Libs\Weather.cs,AutoResfresh,The following statement contains a magic number: if (_refreshTimer != null)              {                  _refreshTimer.Interval = 1000;                  _refreshTimer.Start();              }
Magic Number,Yatse2.Libs,Weather,C:\repos\Tolriq_Yatse2\Yatse2\Libs\Weather.cs,RefreshTimerTick,The following statement contains a magic number: if (_refreshTimer.Interval == 1000)                  _refreshTimer.Interval = 60000;
Magic Number,Yatse2.Libs,Weather,C:\repos\Tolriq_Yatse2\Yatse2\Libs\Weather.cs,RefreshTimerTick,The following statement contains a magic number: if (_refreshTimer.Interval == 1000)                  _refreshTimer.Interval = 60000;
Magic Number,Yatse2.Classes,Yatse2Weather,C:\repos\Tolriq_Yatse2\Yatse2\Classes\Yatse2Weather.cs,LoadForecastData,The following statement contains a magic number: if (data.Forecast.Count > 2)        {          Day2IconDay = Helper.SkinPath + skin + @"\Weather\Icons\" + data.Forecast[2].DayIcon + ".png";          Day2IconNight = Helper.SkinPath + skin + @"\Weather\Icons\" + data.Forecast[2].NightIcon + ".png";          Day2Name =            DateTime.Now.AddDays(data.Forecast[2].DayDiff)                    .ToString("dddd"' CultureInfo.CurrentUICulture.DateTimeFormat)                    .ToUpperInvariant();          Day2MaxTemp = data.GetTemp(data.Forecast[2].MaxTemp);          Day2MinTemp = data.GetTemp(data.Forecast[2].LowTemp);        }
Magic Number,Yatse2.Classes,Yatse2Weather,C:\repos\Tolriq_Yatse2\Yatse2\Classes\Yatse2Weather.cs,LoadForecastData,The following statement contains a magic number: if (data.Forecast.Count > 2)        {          Day2IconDay = Helper.SkinPath + skin + @"\Weather\Icons\" + data.Forecast[2].DayIcon + ".png";          Day2IconNight = Helper.SkinPath + skin + @"\Weather\Icons\" + data.Forecast[2].NightIcon + ".png";          Day2Name =            DateTime.Now.AddDays(data.Forecast[2].DayDiff)                    .ToString("dddd"' CultureInfo.CurrentUICulture.DateTimeFormat)                    .ToUpperInvariant();          Day2MaxTemp = data.GetTemp(data.Forecast[2].MaxTemp);          Day2MinTemp = data.GetTemp(data.Forecast[2].LowTemp);        }
Magic Number,Yatse2.Classes,Yatse2Weather,C:\repos\Tolriq_Yatse2\Yatse2\Classes\Yatse2Weather.cs,LoadForecastData,The following statement contains a magic number: if (data.Forecast.Count > 2)        {          Day2IconDay = Helper.SkinPath + skin + @"\Weather\Icons\" + data.Forecast[2].DayIcon + ".png";          Day2IconNight = Helper.SkinPath + skin + @"\Weather\Icons\" + data.Forecast[2].NightIcon + ".png";          Day2Name =            DateTime.Now.AddDays(data.Forecast[2].DayDiff)                    .ToString("dddd"' CultureInfo.CurrentUICulture.DateTimeFormat)                    .ToUpperInvariant();          Day2MaxTemp = data.GetTemp(data.Forecast[2].MaxTemp);          Day2MinTemp = data.GetTemp(data.Forecast[2].LowTemp);        }
Magic Number,Yatse2.Classes,Yatse2Weather,C:\repos\Tolriq_Yatse2\Yatse2\Classes\Yatse2Weather.cs,LoadForecastData,The following statement contains a magic number: if (data.Forecast.Count > 2)        {          Day2IconDay = Helper.SkinPath + skin + @"\Weather\Icons\" + data.Forecast[2].DayIcon + ".png";          Day2IconNight = Helper.SkinPath + skin + @"\Weather\Icons\" + data.Forecast[2].NightIcon + ".png";          Day2Name =            DateTime.Now.AddDays(data.Forecast[2].DayDiff)                    .ToString("dddd"' CultureInfo.CurrentUICulture.DateTimeFormat)                    .ToUpperInvariant();          Day2MaxTemp = data.GetTemp(data.Forecast[2].MaxTemp);          Day2MinTemp = data.GetTemp(data.Forecast[2].LowTemp);        }
Magic Number,Yatse2.Classes,Yatse2Weather,C:\repos\Tolriq_Yatse2\Yatse2\Classes\Yatse2Weather.cs,LoadForecastData,The following statement contains a magic number: if (data.Forecast.Count > 2)        {          Day2IconDay = Helper.SkinPath + skin + @"\Weather\Icons\" + data.Forecast[2].DayIcon + ".png";          Day2IconNight = Helper.SkinPath + skin + @"\Weather\Icons\" + data.Forecast[2].NightIcon + ".png";          Day2Name =            DateTime.Now.AddDays(data.Forecast[2].DayDiff)                    .ToString("dddd"' CultureInfo.CurrentUICulture.DateTimeFormat)                    .ToUpperInvariant();          Day2MaxTemp = data.GetTemp(data.Forecast[2].MaxTemp);          Day2MinTemp = data.GetTemp(data.Forecast[2].LowTemp);        }
Magic Number,Yatse2.Classes,Yatse2Weather,C:\repos\Tolriq_Yatse2\Yatse2\Classes\Yatse2Weather.cs,LoadForecastData,The following statement contains a magic number: if (data.Forecast.Count > 2)        {          Day2IconDay = Helper.SkinPath + skin + @"\Weather\Icons\" + data.Forecast[2].DayIcon + ".png";          Day2IconNight = Helper.SkinPath + skin + @"\Weather\Icons\" + data.Forecast[2].NightIcon + ".png";          Day2Name =            DateTime.Now.AddDays(data.Forecast[2].DayDiff)                    .ToString("dddd"' CultureInfo.CurrentUICulture.DateTimeFormat)                    .ToUpperInvariant();          Day2MaxTemp = data.GetTemp(data.Forecast[2].MaxTemp);          Day2MinTemp = data.GetTemp(data.Forecast[2].LowTemp);        }
Magic Number,Yatse2.Classes,Yatse2Weather,C:\repos\Tolriq_Yatse2\Yatse2\Classes\Yatse2Weather.cs,LoadForecastData,The following statement contains a magic number: if (data.Forecast.Count > 3)        {          Day3IconDay = Helper.SkinPath + skin + @"\Weather\Icons\" + data.Forecast[3].DayIcon + ".png";          Day3IconNight = Helper.SkinPath + skin + @"\Weather\Icons\" + data.Forecast[3].NightIcon + ".png";          Day3Name =            DateTime.Now.AddDays(data.Forecast[3].DayDiff)                    .ToString("dddd"' CultureInfo.CurrentUICulture.DateTimeFormat)                    .ToUpperInvariant();          Day3MaxTemp = data.GetTemp(data.Forecast[3].MaxTemp);          Day3MinTemp = data.GetTemp(data.Forecast[3].LowTemp);        }
Magic Number,Yatse2.Classes,Yatse2Weather,C:\repos\Tolriq_Yatse2\Yatse2\Classes\Yatse2Weather.cs,LoadForecastData,The following statement contains a magic number: if (data.Forecast.Count > 3)        {          Day3IconDay = Helper.SkinPath + skin + @"\Weather\Icons\" + data.Forecast[3].DayIcon + ".png";          Day3IconNight = Helper.SkinPath + skin + @"\Weather\Icons\" + data.Forecast[3].NightIcon + ".png";          Day3Name =            DateTime.Now.AddDays(data.Forecast[3].DayDiff)                    .ToString("dddd"' CultureInfo.CurrentUICulture.DateTimeFormat)                    .ToUpperInvariant();          Day3MaxTemp = data.GetTemp(data.Forecast[3].MaxTemp);          Day3MinTemp = data.GetTemp(data.Forecast[3].LowTemp);        }
Magic Number,Yatse2.Classes,Yatse2Weather,C:\repos\Tolriq_Yatse2\Yatse2\Classes\Yatse2Weather.cs,LoadForecastData,The following statement contains a magic number: if (data.Forecast.Count > 3)        {          Day3IconDay = Helper.SkinPath + skin + @"\Weather\Icons\" + data.Forecast[3].DayIcon + ".png";          Day3IconNight = Helper.SkinPath + skin + @"\Weather\Icons\" + data.Forecast[3].NightIcon + ".png";          Day3Name =            DateTime.Now.AddDays(data.Forecast[3].DayDiff)                    .ToString("dddd"' CultureInfo.CurrentUICulture.DateTimeFormat)                    .ToUpperInvariant();          Day3MaxTemp = data.GetTemp(data.Forecast[3].MaxTemp);          Day3MinTemp = data.GetTemp(data.Forecast[3].LowTemp);        }
Magic Number,Yatse2.Classes,Yatse2Weather,C:\repos\Tolriq_Yatse2\Yatse2\Classes\Yatse2Weather.cs,LoadForecastData,The following statement contains a magic number: if (data.Forecast.Count > 3)        {          Day3IconDay = Helper.SkinPath + skin + @"\Weather\Icons\" + data.Forecast[3].DayIcon + ".png";          Day3IconNight = Helper.SkinPath + skin + @"\Weather\Icons\" + data.Forecast[3].NightIcon + ".png";          Day3Name =            DateTime.Now.AddDays(data.Forecast[3].DayDiff)                    .ToString("dddd"' CultureInfo.CurrentUICulture.DateTimeFormat)                    .ToUpperInvariant();          Day3MaxTemp = data.GetTemp(data.Forecast[3].MaxTemp);          Day3MinTemp = data.GetTemp(data.Forecast[3].LowTemp);        }
Magic Number,Yatse2.Classes,Yatse2Weather,C:\repos\Tolriq_Yatse2\Yatse2\Classes\Yatse2Weather.cs,LoadForecastData,The following statement contains a magic number: if (data.Forecast.Count > 3)        {          Day3IconDay = Helper.SkinPath + skin + @"\Weather\Icons\" + data.Forecast[3].DayIcon + ".png";          Day3IconNight = Helper.SkinPath + skin + @"\Weather\Icons\" + data.Forecast[3].NightIcon + ".png";          Day3Name =            DateTime.Now.AddDays(data.Forecast[3].DayDiff)                    .ToString("dddd"' CultureInfo.CurrentUICulture.DateTimeFormat)                    .ToUpperInvariant();          Day3MaxTemp = data.GetTemp(data.Forecast[3].MaxTemp);          Day3MinTemp = data.GetTemp(data.Forecast[3].LowTemp);        }
Magic Number,Yatse2.Classes,Yatse2Weather,C:\repos\Tolriq_Yatse2\Yatse2\Classes\Yatse2Weather.cs,LoadForecastData,The following statement contains a magic number: if (data.Forecast.Count > 3)        {          Day3IconDay = Helper.SkinPath + skin + @"\Weather\Icons\" + data.Forecast[3].DayIcon + ".png";          Day3IconNight = Helper.SkinPath + skin + @"\Weather\Icons\" + data.Forecast[3].NightIcon + ".png";          Day3Name =            DateTime.Now.AddDays(data.Forecast[3].DayDiff)                    .ToString("dddd"' CultureInfo.CurrentUICulture.DateTimeFormat)                    .ToUpperInvariant();          Day3MaxTemp = data.GetTemp(data.Forecast[3].MaxTemp);          Day3MinTemp = data.GetTemp(data.Forecast[3].LowTemp);        }
Magic Number,Yatse2.Classes,Yatse2Weather,C:\repos\Tolriq_Yatse2\Yatse2\Classes\Yatse2Weather.cs,LoadForecastData,The following statement contains a magic number: if (data.Forecast.Count > 4)        {          Day4IconDay = Helper.SkinPath + skin + @"\Weather\Icons\" + data.Forecast[4].DayIcon + ".png";          Day4IconNight = Helper.SkinPath + skin + @"\Weather\Icons\" + data.Forecast[4].NightIcon + ".png";          Day4Name =            DateTime.Now.AddDays(data.Forecast[4].DayDiff)                    .ToString("dddd"' CultureInfo.CurrentUICulture.DateTimeFormat)                    .ToUpperInvariant();          Day4MaxTemp = data.GetTemp(data.Forecast[4].MaxTemp);          Day4MinTemp = data.GetTemp(data.Forecast[4].LowTemp);        }
Magic Number,Yatse2.Classes,Yatse2Weather,C:\repos\Tolriq_Yatse2\Yatse2\Classes\Yatse2Weather.cs,LoadForecastData,The following statement contains a magic number: if (data.Forecast.Count > 4)        {          Day4IconDay = Helper.SkinPath + skin + @"\Weather\Icons\" + data.Forecast[4].DayIcon + ".png";          Day4IconNight = Helper.SkinPath + skin + @"\Weather\Icons\" + data.Forecast[4].NightIcon + ".png";          Day4Name =            DateTime.Now.AddDays(data.Forecast[4].DayDiff)                    .ToString("dddd"' CultureInfo.CurrentUICulture.DateTimeFormat)                    .ToUpperInvariant();          Day4MaxTemp = data.GetTemp(data.Forecast[4].MaxTemp);          Day4MinTemp = data.GetTemp(data.Forecast[4].LowTemp);        }
Magic Number,Yatse2.Classes,Yatse2Weather,C:\repos\Tolriq_Yatse2\Yatse2\Classes\Yatse2Weather.cs,LoadForecastData,The following statement contains a magic number: if (data.Forecast.Count > 4)        {          Day4IconDay = Helper.SkinPath + skin + @"\Weather\Icons\" + data.Forecast[4].DayIcon + ".png";          Day4IconNight = Helper.SkinPath + skin + @"\Weather\Icons\" + data.Forecast[4].NightIcon + ".png";          Day4Name =            DateTime.Now.AddDays(data.Forecast[4].DayDiff)                    .ToString("dddd"' CultureInfo.CurrentUICulture.DateTimeFormat)                    .ToUpperInvariant();          Day4MaxTemp = data.GetTemp(data.Forecast[4].MaxTemp);          Day4MinTemp = data.GetTemp(data.Forecast[4].LowTemp);        }
Magic Number,Yatse2.Classes,Yatse2Weather,C:\repos\Tolriq_Yatse2\Yatse2\Classes\Yatse2Weather.cs,LoadForecastData,The following statement contains a magic number: if (data.Forecast.Count > 4)        {          Day4IconDay = Helper.SkinPath + skin + @"\Weather\Icons\" + data.Forecast[4].DayIcon + ".png";          Day4IconNight = Helper.SkinPath + skin + @"\Weather\Icons\" + data.Forecast[4].NightIcon + ".png";          Day4Name =            DateTime.Now.AddDays(data.Forecast[4].DayDiff)                    .ToString("dddd"' CultureInfo.CurrentUICulture.DateTimeFormat)                    .ToUpperInvariant();          Day4MaxTemp = data.GetTemp(data.Forecast[4].MaxTemp);          Day4MinTemp = data.GetTemp(data.Forecast[4].LowTemp);        }
Magic Number,Yatse2.Classes,Yatse2Weather,C:\repos\Tolriq_Yatse2\Yatse2\Classes\Yatse2Weather.cs,LoadForecastData,The following statement contains a magic number: if (data.Forecast.Count > 4)        {          Day4IconDay = Helper.SkinPath + skin + @"\Weather\Icons\" + data.Forecast[4].DayIcon + ".png";          Day4IconNight = Helper.SkinPath + skin + @"\Weather\Icons\" + data.Forecast[4].NightIcon + ".png";          Day4Name =            DateTime.Now.AddDays(data.Forecast[4].DayDiff)                    .ToString("dddd"' CultureInfo.CurrentUICulture.DateTimeFormat)                    .ToUpperInvariant();          Day4MaxTemp = data.GetTemp(data.Forecast[4].MaxTemp);          Day4MinTemp = data.GetTemp(data.Forecast[4].LowTemp);        }
Magic Number,Yatse2.Classes,Yatse2Weather,C:\repos\Tolriq_Yatse2\Yatse2\Classes\Yatse2Weather.cs,LoadForecastData,The following statement contains a magic number: if (data.Forecast.Count > 4)        {          Day4IconDay = Helper.SkinPath + skin + @"\Weather\Icons\" + data.Forecast[4].DayIcon + ".png";          Day4IconNight = Helper.SkinPath + skin + @"\Weather\Icons\" + data.Forecast[4].NightIcon + ".png";          Day4Name =            DateTime.Now.AddDays(data.Forecast[4].DayDiff)                    .ToString("dddd"' CultureInfo.CurrentUICulture.DateTimeFormat)                    .ToUpperInvariant();          Day4MaxTemp = data.GetTemp(data.Forecast[4].MaxTemp);          Day4MinTemp = data.GetTemp(data.Forecast[4].LowTemp);        }
Magic Number,Yatse2.Classes,Yatse2Config,C:\repos\Tolriq_Yatse2\Yatse2\Classes\Yatse2Config.cs,Yatse2Config,The following statement contains a magic number: ScreensaverTimer = 120;
Magic Number,Yatse2.Classes,Yatse2Config,C:\repos\Tolriq_Yatse2\Yatse2\Classes\Yatse2Config.cs,Yatse2Config,The following statement contains a magic number: MinDMBitsPerPel = 32;
Magic Number,Yatse2.Classes,Yatse2Config,C:\repos\Tolriq_Yatse2\Yatse2\Classes\Yatse2Config.cs,Yatse2Config,The following statement contains a magic number: MinDMPelsWidth = 800;
Magic Number,Yatse2.Classes,Yatse2Config,C:\repos\Tolriq_Yatse2\Yatse2\Classes\Yatse2Config.cs,Yatse2Config,The following statement contains a magic number: DiaporamaTimer = 10;
Magic Number,Yatse2.Classes,Yatse2Config,C:\repos\Tolriq_Yatse2\Yatse2\Classes\Yatse2Config.cs,Yatse2Config,The following statement contains a magic number: DimmingTimer = 15;
Magic Number,Yatse2.Classes,Yatse2Config,C:\repos\Tolriq_Yatse2\Yatse2\Classes\Yatse2Config.cs,Yatse2Config,The following statement contains a magic number: LongKeyPress = 500;
Magic Number,Yatse2.Classes,Yatse2DB,C:\repos\Tolriq_Yatse2\Yatse2\Classes\Yatse2Db.cs,UpdateDatabase,The following statement contains a magic number: try              {                  if (fromBuild <= 2)                  {                      Log("Applying database update 3");                        sqlCmd.CommandText = @"CREATE TABLE `TvSeasons`                      (                          `Id` INTEGER NOT NULL PRIMARY KEY'                          `IdRemote` INTEGER'                          `IdShow` INTEGER'                          `SeasonNumber` INTEGER'                          `EpisodeCount` INTEGER'                          `Hash` VARCHAR(50)'                          `Thumb` TEXT'                          `Fanart` TEXT'                          `IsFavorite` Integer                      )";                      LogQuery(sqlCmd);                      sqlCmd.ExecuteNonQuery();                  }                    if (fromBuild <= 3)                  {                      Log("Applying database update 4");                        try // Quick Hack to correct error on build 117                      {                          sqlCmd.CommandText = @"CREATE TABLE `TvSeasons`                          (                              `Id` INTEGER NOT NULL PRIMARY KEY'                              `IdRemote` INTEGER'                              `IdShow` INTEGER'                              `SeasonNumber` INTEGER'                              `EpisodeCount` INTEGER'                              `Hash` VARCHAR(50)'                              `Thumb` TEXT'                              `Fanart` TEXT'                              `IsFavorite` Integer                          )";                          LogQuery(sqlCmd);                          sqlCmd.ExecuteNonQuery();                      }                      catch (SQLiteException)                      {}                        sqlCmd.CommandText = @"ALTER TABLE `TvSeasons` ADD COLUMN `Show` TEXT;";                      LogQuery(sqlCmd);                      sqlCmd.ExecuteNonQuery();                  }                    sqlCmd.CommandText = "UPDATE Version SET Version = " + DBVersion + ";";                  LogQuery(sqlCmd);                  sqlCmd.ExecuteNonQuery();                    sqlCmd.Dispose();                  return true;              }              catch (SQLiteException e)              {                  Log(e.Message);              }
Magic Number,Yatse2.Classes,Yatse2DB,C:\repos\Tolriq_Yatse2\Yatse2\Classes\Yatse2Db.cs,UpdateDatabase,The following statement contains a magic number: try              {                  if (fromBuild <= 2)                  {                      Log("Applying database update 3");                        sqlCmd.CommandText = @"CREATE TABLE `TvSeasons`                      (                          `Id` INTEGER NOT NULL PRIMARY KEY'                          `IdRemote` INTEGER'                          `IdShow` INTEGER'                          `SeasonNumber` INTEGER'                          `EpisodeCount` INTEGER'                          `Hash` VARCHAR(50)'                          `Thumb` TEXT'                          `Fanart` TEXT'                          `IsFavorite` Integer                      )";                      LogQuery(sqlCmd);                      sqlCmd.ExecuteNonQuery();                  }                    if (fromBuild <= 3)                  {                      Log("Applying database update 4");                        try // Quick Hack to correct error on build 117                      {                          sqlCmd.CommandText = @"CREATE TABLE `TvSeasons`                          (                              `Id` INTEGER NOT NULL PRIMARY KEY'                              `IdRemote` INTEGER'                              `IdShow` INTEGER'                              `SeasonNumber` INTEGER'                              `EpisodeCount` INTEGER'                              `Hash` VARCHAR(50)'                              `Thumb` TEXT'                              `Fanart` TEXT'                              `IsFavorite` Integer                          )";                          LogQuery(sqlCmd);                          sqlCmd.ExecuteNonQuery();                      }                      catch (SQLiteException)                      {}                        sqlCmd.CommandText = @"ALTER TABLE `TvSeasons` ADD COLUMN `Show` TEXT;";                      LogQuery(sqlCmd);                      sqlCmd.ExecuteNonQuery();                  }                    sqlCmd.CommandText = "UPDATE Version SET Version = " + DBVersion + ";";                  LogQuery(sqlCmd);                  sqlCmd.ExecuteNonQuery();                    sqlCmd.Dispose();                  return true;              }              catch (SQLiteException e)              {                  Log(e.Message);              }
Magic Number,Yatse2.Classes,Yatse2DB,C:\repos\Tolriq_Yatse2\Yatse2\Classes\Yatse2Db.cs,CheckDBVersion,The following statement contains a magic number: return version == DBVersion ? 1 : 2;
Missing Default,Yatse2,ModalDialog,C:\repos\Tolriq_Yatse2\Yatse2\ModalDialog.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.root = ((Yatse2.ModalDialog)(target));              return;              case 2:              this.grd_YesNo = ((System.Windows.Controls.Primitives.UniformGrid)(target));              return;              case 3:              this.YesButton = ((System.Windows.Controls.Button)(target));                            #line 20 "..\..\ModalDialog.xaml"              this.YesButton.Click += new System.Windows.RoutedEventHandler(this.YesButton_Click);                            #line default              #line hidden              return;              case 4:              this.NoButton = ((System.Windows.Controls.Button)(target));                            #line 21 "..\..\ModalDialog.xaml"              this.NoButton.Click += new System.Windows.RoutedEventHandler(this.NoButton_Click);                            #line default              #line hidden              return;              case 5:              this.grd_Ok = ((System.Windows.Controls.Primitives.UniformGrid)(target));              return;              case 6:              this.OkButton = ((System.Windows.Controls.Button)(target));                            #line 25 "..\..\ModalDialog.xaml"              this.OkButton.Click += new System.Windows.RoutedEventHandler(this.OkButton_Click);                            #line default              #line hidden              return;              }
Missing Default,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,btn_Movies_Filter_Click,The following switch statement is missing a default case: switch (_currentGrid.Name)              {                  case "grd_Movies":                      _yatse2Properties.CollectionFilter = _filterMovie;                      break;                  case "grd_AudioGenres":                      _yatse2Properties.CollectionFilter = _filterAudioGenre;                      break;                  case "grd_AudioAlbums":                      _yatse2Properties.CollectionFilter = _filterAudioAlbum;                      break;                  case "grd_AudioArtists":                      _yatse2Properties.CollectionFilter = _filterAudioArtist;                      break;                  case "grd_TvShows":                      _yatse2Properties.CollectionFilter = _filterTvShow;                      break;              }
Missing Default,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,btn_Filter_Go_click,The following switch statement is missing a default case: switch (_currentGrid.Name)                  {                      case "grd_Movies":                          MovieSelectNextLetter((char)(letter-1));                          grd_Filter.Visibility = Visibility.Hidden;                          break;                      case "grd_AudioGenres":                          AudioGenreSelectNextLetter((char)(letter-1));                          grd_Filter.Visibility = Visibility.Hidden;                          break;                      case "grd_AudioAlbums":                          AudioAlbumSelectNextLetter((char)(letter-1));                          grd_Filter.Visibility = Visibility.Hidden;                          break;                      case "grd_AudioArtists":                         AudioArtistSelectNextLetter((char)(letter-1));                         grd_Filter.Visibility = Visibility.Hidden;                         break;                      case "grd_TvShows":                          TvShowSelectNextLetter((char)(letter-1));                          grd_Filter.Visibility = Visibility.Hidden;                          break;                  }
Missing Default,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,btn_Filter_OK_click,The following switch statement is missing a default case: switch (_currentGrid.Name)              {                  case "grd_Movies":                      _filterMovie = _yatse2Properties.CollectionFilter;                      _moviesCollectionView.Filter = new Predicate<object>(FilterMovies);                      btn_Movies_Filter.Background = ( ! String.IsNullOrEmpty(_filterMovie)) ? GetSkinImageBrushSmall("Remote_FilterOn") : GetSkinImageBrushSmall("Remote_Search");                      Helper.VirtFlowSelect(lst_Movies_flow' 0);                      break;                  case "grd_AudioGenres":                      _filterAudioGenre = _yatse2Properties.CollectionFilter;                      btn_AudioGenre_Filter.Background = (! String.IsNullOrEmpty(_filterAudioGenre)) ? GetSkinImageBrushSmall("Remote_FilterOn") : GetSkinImageBrushSmall("Remote_Search");                      _audioGenresCollectionView.Refresh();                      Helper.VirtFlowSelect(lst_AudioGenres_flow' 0);                      break;                  case "grd_AudioAlbums":                      _filterAudioAlbum = _yatse2Properties.CollectionFilter;                      btn_AudioAlbums_Filter.Background = (! String.IsNullOrEmpty(_filterAudioAlbum)) ? GetSkinImageBrushSmall("Remote_FilterOn") : GetSkinImageBrushSmall("Remote_Search");                      _audioAlbumsCollectionView.Refresh();                      Helper.VirtFlowSelect(lst_AudioAlbums_flow' 0);                      break;                  case "grd_AudioArtists":                      _filterAudioArtist = _yatse2Properties.CollectionFilter;                      btn_AudioArtists_Filter.Background = (!String.IsNullOrEmpty(_filterAudioArtist)) ? GetSkinImageBrushSmall("Remote_FilterOn") : GetSkinImageBrushSmall("Remote_Search");                      _audioArtistsCollectionView.Refresh();                      Helper.VirtFlowSelect(lst_AudioArtists_flow' 0);                      break;                  case "grd_TvShows":                      _filterTvShow = _yatse2Properties.CollectionFilter;                      btn_TvShows_Filter.Background = (!String.IsNullOrEmpty(_filterTvShow)) ? GetSkinImageBrushSmall("Remote_FilterOn") : GetSkinImageBrushSmall("Remote_Search");                      _tvShowsCollectionView.Refresh();                      Helper.VirtFlowSelect(lst_TvShows_flow' 0);                      break;              }
Missing Default,Yatse2,Yatse2Window,C:\repos\Tolriq_Yatse2\Yatse2\Yatse2Window.xaml.TvSeasons.cs,StartDiaporama,The following switch statement is missing a default case: switch (_config.DiaporamaMode)              {                  case 0:                      img_Diaporama1.Stretch = Stretch.None;                      img_Diaporama2.Stretch = Stretch.None;                      break;                  case 1:                      img_Diaporama1.Stretch = Stretch.Uniform;                      img_Diaporama2.Stretch = Stretch.Uniform;                      break;                  case 2:                      img_Diaporama1.Stretch = Stretch.UniformToFill;                      img_Diaporama2.Stretch = Stretch.UniformToFill;                      break;                  case 3:                      img_Diaporama1.Stretch = Stretch.Fill;                      img_Diaporama2.Stretch = Stretch.Fill;                      break;              }
