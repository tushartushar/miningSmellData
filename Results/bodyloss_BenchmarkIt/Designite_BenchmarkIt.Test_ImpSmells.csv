Implementation smell,Namespace,Class,File,Method,Description
Long Statement,BenchmarkIt.Test,Test,D:\research\architectureSmells\repos\bodyloss_BenchmarkIt\BenchmarkIt.Test\TestBenchmark.cs,TestTime,The length of the statement  "			Assert.IsTrue (result[0].Stopwatch.ElapsedMilliseconds >= 1000' "Benchmark did not run for at least 1 second' only ran for " + result[0].Stopwatch.ElapsedMilliseconds + " ms"); " is 176.
Magic Number,BenchmarkIt.Test,Test,D:\research\architectureSmells\repos\bodyloss_BenchmarkIt\BenchmarkIt.Test\TestBenchmark.cs,TestIterations,The following statement contains a magic number: var result = Benchmark.This (""' () => {}).For (10).Iterations();
Magic Number,BenchmarkIt.Test,Test,D:\research\architectureSmells\repos\bodyloss_BenchmarkIt\BenchmarkIt.Test\TestBenchmark.cs,TestIterations,The following statement contains a magic number: Assert.AreEqual (10' result[0].TotalIterations' "Failed to run for 10 iterations");
Magic Number,BenchmarkIt.Test,Test,D:\research\architectureSmells\repos\bodyloss_BenchmarkIt\BenchmarkIt.Test\TestBenchmark.cs,TestTime,The following statement contains a magic number: var result = Benchmark.This(""'() => {}).For (2).Seconds();
Magic Number,BenchmarkIt.Test,Test,D:\research\architectureSmells\repos\bodyloss_BenchmarkIt\BenchmarkIt.Test\TestBenchmark.cs,TestTime,The following statement contains a magic number: Assert.IsTrue (result[0].Stopwatch.ElapsedMilliseconds >= 1000' "Benchmark did not run for at least 1 second' only ran for " + result[0].Stopwatch.ElapsedMilliseconds + " ms");
Magic Number,BenchmarkIt.Test,Test,D:\research\architectureSmells\repos\bodyloss_BenchmarkIt\BenchmarkIt.Test\TestBenchmark.cs,TestCacheWarmup,The following statement contains a magic number: var result = Benchmark.This (""'() => {}).WithWarmup (10).For (10).Iterations();
Magic Number,BenchmarkIt.Test,Test,D:\research\architectureSmells\repos\bodyloss_BenchmarkIt\BenchmarkIt.Test\TestBenchmark.cs,TestCacheWarmup,The following statement contains a magic number: var result = Benchmark.This (""'() => {}).WithWarmup (10).For (10).Iterations();
Magic Number,BenchmarkIt.Test,Test,D:\research\architectureSmells\repos\bodyloss_BenchmarkIt\BenchmarkIt.Test\TestBenchmark.cs,TestCacheWarmup,The following statement contains a magic number: Assert.AreEqual (10' result[0].TotalIterations' "Failed to run for 10 iterations");
Magic Number,BenchmarkIt.Test,Test,D:\research\architectureSmells\repos\bodyloss_BenchmarkIt\BenchmarkIt.Test\TestBenchmark.cs,TestMultipleIterations,The following statement contains a magic number: var result = Benchmark                  .This(""' () => { })                  .Against.This(""' () => Thread.Sleep(10))                  .For(10).Iterations();
Magic Number,BenchmarkIt.Test,Test,D:\research\architectureSmells\repos\bodyloss_BenchmarkIt\BenchmarkIt.Test\TestBenchmark.cs,TestMultipleIterations,The following statement contains a magic number: var result = Benchmark                  .This(""' () => { })                  .Against.This(""' () => Thread.Sleep(10))                  .For(10).Iterations();
Magic Number,BenchmarkIt.Test,Test,D:\research\architectureSmells\repos\bodyloss_BenchmarkIt\BenchmarkIt.Test\TestBenchmark.cs,TestMultipleIterations,The following statement contains a magic number: Assert.AreEqual(2' result.Length);
Magic Number,BenchmarkIt.Test,Test,D:\research\architectureSmells\repos\bodyloss_BenchmarkIt\BenchmarkIt.Test\TestBenchmark.cs,TestMultipleTimes,The following statement contains a magic number: var result = Benchmark                  .This(""' () => { })                  .Against.This(""' () => Thread.Sleep(10))                  .For(1).Seconds();
Magic Number,BenchmarkIt.Test,Test,D:\research\architectureSmells\repos\bodyloss_BenchmarkIt\BenchmarkIt.Test\TestBenchmark.cs,TestMultipleTimes,The following statement contains a magic number: Assert.AreEqual(2' result.Length);
Magic Number,BenchmarkIt.Test,Test,D:\research\architectureSmells\repos\bodyloss_BenchmarkIt\BenchmarkIt.Test\TestBenchmark.cs,TestStats,The following statement contains a magic number: var result = Benchmark                  .This(""' () => { })                  .For(10).Iterations();
