Implementation smell,Namespace,Class,File,Method,Description
Long Method,AdminAudit,BreezeListener,C:\repos\countersoft_App-AdminAudit\listener\BreezeListener.cs,AfterEnquiryMailboxUpdated,The method has 287 lines of code.
Long Method,AdminAudit,SlaRulesListener,C:\repos\countersoft_App-AdminAudit\listener\SlaRulesListener.cs,AfterSLAUpdated,The method has 106 lines of code.
Long Method,AdminAudit,SlaRulesListener,C:\repos\countersoft_App-AdminAudit\listener\SlaRulesListener.cs,AfterRulesActionsUpdated,The method has 112 lines of code.
Long Method,AdminAudit,PeopleListener,C:\repos\countersoft_App-AdminAudit\listener\PeopleListener.cs,AfterProjectGroupUpdated,The method has 135 lines of code.
Long Method,AdminAudit,PeopleListener,C:\repos\countersoft_App-AdminAudit\listener\PeopleListener.cs,AfterGeminiConfigurationUpdated,The method has 463 lines of code.
Long Method,AdminAudit,ProjectsListener,C:\repos\countersoft_App-AdminAudit\listener\ProjectsListener .cs,AfterProjectUpdated,The method has 103 lines of code.
Long Method,AdminAudit,TemplatesListener,C:\repos\countersoft_App-AdminAudit\listener\TemplatesListener.cs,AfterCustomFieldUpdated,The method has 190 lines of code.
Complex Method,AdminAudit,Helper,C:\repos\countersoft_App-AdminAudit\Helper.cs,CreateRollbackQuery,Cyclomatic complexity of the method is 59
Complex Method,AdminAudit,Helper,C:\repos\countersoft_App-AdminAudit\Helper.cs,GetCustomFieldFullName,Cyclomatic complexity of the method is 12
Complex Method,AdminAudit,Helper,C:\repos\countersoft_App-AdminAudit\Helper.cs,GetListLimiterFullName,Cyclomatic complexity of the method is 10
Complex Method,AdminAudit,BreezeListener,C:\repos\countersoft_App-AdminAudit\listener\BreezeListener.cs,AfterEnquiryQueueUpdated,Cyclomatic complexity of the method is 9
Complex Method,AdminAudit,BreezeListener,C:\repos\countersoft_App-AdminAudit\listener\BreezeListener.cs,AfterEnquirySmtpServerUpdated,Cyclomatic complexity of the method is 12
Complex Method,AdminAudit,BreezeListener,C:\repos\countersoft_App-AdminAudit\listener\BreezeListener.cs,AfterEnquiryMailboxUpdated,Cyclomatic complexity of the method is 41
Complex Method,AdminAudit,Systemistener,C:\repos\countersoft_App-AdminAudit\listener\SystemListener.cs,AfterAlertTemplateUpdated,Cyclomatic complexity of the method is 9
Complex Method,AdminAudit,SlaRulesListener,C:\repos\countersoft_App-AdminAudit\listener\SlaRulesListener.cs,AfterSLAUpdated,Cyclomatic complexity of the method is 15
Complex Method,AdminAudit,SlaRulesListener,C:\repos\countersoft_App-AdminAudit\listener\SlaRulesListener.cs,AfterRulesActionsUpdated,Cyclomatic complexity of the method is 16
Complex Method,AdminAudit,PeopleListener,C:\repos\countersoft_App-AdminAudit\listener\PeopleListener.cs,AfterUserUpdated,Cyclomatic complexity of the method is 9
Complex Method,AdminAudit,PeopleListener,C:\repos\countersoft_App-AdminAudit\listener\PeopleListener.cs,AfterProjectGroupUpdated,Cyclomatic complexity of the method is 25
Complex Method,AdminAudit,PeopleListener,C:\repos\countersoft_App-AdminAudit\listener\PeopleListener.cs,AfterPermissionSetUpdated,Cyclomatic complexity of the method is 11
Complex Method,AdminAudit,PeopleListener,C:\repos\countersoft_App-AdminAudit\listener\PeopleListener.cs,AfterGeminiConfigurationUpdated,Cyclomatic complexity of the method is 66
Complex Method,AdminAudit,ProjectsListener,C:\repos\countersoft_App-AdminAudit\listener\ProjectsListener .cs,AfterProjectUpdated,Cyclomatic complexity of the method is 14
Complex Method,AdminAudit,TemplatesListener,C:\repos\countersoft_App-AdminAudit\listener\TemplatesListener.cs,AfterProjectTemplateUpdated,Cyclomatic complexity of the method is 8
Complex Method,AdminAudit,TemplatesListener,C:\repos\countersoft_App-AdminAudit\listener\TemplatesListener.cs,AfterIssueTypeUpdated,Cyclomatic complexity of the method is 8
Complex Method,AdminAudit,TemplatesListener,C:\repos\countersoft_App-AdminAudit\listener\TemplatesListener.cs,AfterCustomFieldUpdated,Cyclomatic complexity of the method is 27
Complex Method,AdminAudit,TemplatesListener,C:\repos\countersoft_App-AdminAudit\listener\TemplatesListener.cs,AfterIssueStatusUpdated,Cyclomatic complexity of the method is 9
Complex Method,AdminAudit,AdminAuditController,C:\repos\countersoft_App-AdminAudit\AdminAuditController.cs,Rollback,Cyclomatic complexity of the method is 72
Long Parameter List,AdminAudit,AdminAuditRepository,C:\repos\countersoft_App-AdminAudit\AdminAuditRepository.cs,GetAll,The method has 5 parameters.
Long Parameter List,AdminAudit,BreezeListener,C:\repos\countersoft_App-AdminAudit\listener\BreezeListener.cs,AfterEnquiryMailboxUpdated,The method has 19 parameters.
Long Parameter List,AdminAudit,BreezeListener,C:\repos\countersoft_App-AdminAudit\listener\BreezeListener.cs,AfterBreezeReplyOptionsUpdated,The method has 5 parameters.
Long Parameter List,AdminAudit,Systemistener,C:\repos\countersoft_App-AdminAudit\listener\SystemListener.cs,AfterAlertTemplateUpdated,The method has 5 parameters.
Long Parameter List,AdminAudit,PeopleListener,C:\repos\countersoft_App-AdminAudit\listener\PeopleListener.cs,AfterProjectGroupUpdated,The method has 19 parameters.
Long Parameter List,AdminAudit,PeopleListener,C:\repos\countersoft_App-AdminAudit\listener\PeopleListener.cs,AfterPermissionSetUpdated,The method has 5 parameters.
Long Parameter List,AdminAudit,PeopleListener,C:\repos\countersoft_App-AdminAudit\listener\PeopleListener.cs,AfterGeminiConfigurationUpdated,The method has 5 parameters.
Long Parameter List,AdminAudit,PeopleListener,C:\repos\countersoft_App-AdminAudit\listener\PeopleListener.cs,AfterOrganizationUpdated,The method has 9 parameters.
Long Statement,AdminAudit,AdminAuditRepository,C:\repos\countersoft_App-AdminAudit\AdminAuditRepository.cs,InsertAudit,The length of the statement  "	var query = string.Format (@"INSERT INTO admin_audit (userid' rowid' rowname' data' action' adminarea' fieldchanged' valuebefore' valueafter' created) " is 150.
Long Statement,AdminAudit,AdminAuditRepository,C:\repos\countersoft_App-AdminAudit\AdminAuditRepository.cs,InsertAudit,The length of the statement  "                values (@userid' @rowid' @rowname' @data' @action' @adminarea' @fieldchanged' @valuebefore' @valueafter' @created) "' audit.UserId' audit.RowId' audit.RowName' audit.Data' (int)audit.Action' (int)audit.AdminArea' audit.FieldChanged' audit.ValueBefore' audit.ValueAfter); " is 270.
Long Statement,AdminAudit,AdminAuditRepository,C:\repos\countersoft_App-AdminAudit\AdminAuditRepository.cs,GetAll,The length of the statement  "		query = string.Format (@"select a.id' a.action' a.rowid' a.adminarea' a.rowname' a.fieldchanged' a.valuebefore' a.valueafter' " is 125.
Long Statement,AdminAudit,AdminAuditRepository,C:\repos\countersoft_App-AdminAudit\AdminAuditRepository.cs,Get,The length of the statement  "	var query = string.Format (@"select a.rowid' a.rowname' a.data' a.id' a.action' a.adminarea' a.fieldchanged' a.valuebefore' a.valueafter' " is 137.
Long Statement,AdminAudit,Helper,C:\repos\countersoft_App-AdminAudit\Helper.cs,CreateRollbackQuery,The length of the statement  "			query = string.Format ("Update gemini_issuetypes set {0} = '{1}' where typeid = {2}"' audit.FieldChanged.ToLower ()' audit.ValueBefore' audit.RowId); " is 149.
Long Statement,AdminAudit,Helper,C:\repos\countersoft_App-AdminAudit\Helper.cs,CreateRollbackQuery,The length of the statement  "			query += string.Format (" INSERT INTO gemini_issuetypes (typeid'seq'typedesc'imagepath'color'screen'workflow'tag'templateid) values ({0}'{1}''{2}'''{3}'''{4}'''{5}'''{6}'''{7}''{8}) "' data.Id' data.Sequence' data.Label' data.Image' data.Color' data.Screen.ToJson ()' data.Workflow.ToJson ()' data.Tag' data.TemplateId); " is 320.
Long Statement,AdminAudit,Helper,C:\repos\countersoft_App-AdminAudit\Helper.cs,GetListLimiterFullName,The length of the statement  "		return allGroups.FindAll (s => previousSplitted.Contains (s.Id.ToString ())).Select (s => s.Name).ToDelimited ("' ").TrimEnd (' ').TrimEnd ('''); " is 145.
Long Statement,AdminAudit,BreezeListener,C:\repos\countersoft_App-AdminAudit\listener\BreezeListener.cs,AfterEnquiryMailboxUpdated,The length of the statement  "		var previousAlert = args.Previous.AlertTemplateId.GetValueOrDefault () == 0 ? string.Empty : alerts.FindWhere (c => c.Id == args.Previous.AlertTemplateId.GetValueOrDefault ()).First ().Label; " is 191.
Long Statement,AdminAudit,BreezeListener,C:\repos\countersoft_App-AdminAudit\listener\BreezeListener.cs,AfterEnquiryMailboxUpdated,The length of the statement  "		var currentAlert = args.Entity.AlertTemplateId.GetValueOrDefault () == 0 ? string.Empty : alerts.FindWhere (c => c.Id == args.Entity.AlertTemplateId.GetValueOrDefault ()).First ().Label; " is 186.
Long Statement,AdminAudit,BreezeListener,C:\repos\countersoft_App-AdminAudit\listener\BreezeListener.cs,AfterEnquiryMailboxUpdated,The length of the statement  "		var previousSmtpServer = args.Previous.SmtpServerId.GetValueOrDefault () == 0 ? string.Empty : args.Context.EnquirySmtpServers.Get (args.Previous.SmtpServerId.GetValueOrDefault ()).Name; " is 186.
Long Statement,AdminAudit,BreezeListener,C:\repos\countersoft_App-AdminAudit\listener\BreezeListener.cs,AfterEnquiryMailboxUpdated,The length of the statement  "		var currentSmtpServer = args.Entity.SmtpServerId.GetValueOrDefault () == 0 ? string.Empty : args.Context.EnquirySmtpServers.Get (args.Entity.SmtpServerId.GetValueOrDefault ()).Name; " is 181.
Long Statement,AdminAudit,BreezeListener,C:\repos\countersoft_App-AdminAudit\listener\BreezeListener.cs,AfterEnquiryMailboxUpdated,The length of the statement  "			previousData = expressions.FindAll (s => previousExprepression.Contains (s.Id.ToString ())).Select (s => s.Name).ToDelimited ("' "); " is 132.
Long Statement,AdminAudit,BreezeListener,C:\repos\countersoft_App-AdminAudit\listener\BreezeListener.cs,AfterEnquiryMailboxUpdated,The length of the statement  "			currentData = expressions.FindAll (s => currentExprepression.Contains (s.Id.ToString ())).Select (s => s.Name).ToDelimited ("' "); " is 130.
Long Statement,AdminAudit,BreezeListener,C:\repos\countersoft_App-AdminAudit\listener\BreezeListener.cs,AfterEnquiryMailboxUpdated,The length of the statement  "			previousData = expressions.FindAll (s => previousExprepression.Contains (s.Id.ToString ())).Select (s => s.Name).ToDelimited ("' "); " is 132.
Long Statement,AdminAudit,BreezeListener,C:\repos\countersoft_App-AdminAudit\listener\BreezeListener.cs,AfterEnquiryMailboxUpdated,The length of the statement  "			currentData = expressions.FindAll (s => currentExprepression.Contains (s.Id.ToString ())).Select (s => s.Name).ToDelimited ("' "); " is 130.
Long Statement,AdminAudit,BreezeListener,C:\repos\countersoft_App-AdminAudit\listener\BreezeListener.cs,AfterEnquiryMailboxUpdated,The length of the statement  "			previousData = expressions.FindAll (s => previousExprepression.Contains (s.Id.ToString ())).Select (s => s.Name).ToDelimited ("' "); " is 132.
Long Statement,AdminAudit,BreezeListener,C:\repos\countersoft_App-AdminAudit\listener\BreezeListener.cs,AfterEnquiryMailboxUpdated,The length of the statement  "			currentData = expressions.FindAll (s => currentExprepression.Contains (s.Id.ToString ())).Select (s => s.Name).ToDelimited ("' "); " is 130.
Long Statement,AdminAudit,BreezeListener,C:\repos\countersoft_App-AdminAudit\listener\BreezeListener.cs,AfterEnquiryMailboxUpdated,The length of the statement  "			previousData = expressions.FindAll (s => previousExprepression.Contains (s.Id.ToString ())).Select (s => s.Name).ToDelimited ("' "); " is 132.
Long Statement,AdminAudit,BreezeListener,C:\repos\countersoft_App-AdminAudit\listener\BreezeListener.cs,AfterEnquiryMailboxUpdated,The length of the statement  "			currentData = expressions.FindAll (s => currentExprepression.Contains (s.Id.ToString ())).Select (s => s.Name).ToDelimited ("' "); " is 130.
Long Statement,AdminAudit,BreezeListener,C:\repos\countersoft_App-AdminAudit\listener\BreezeListener.cs,AfterEnquiryMailboxUpdated,The length of the statement  "		var previousData = args.Previous.ProjectId.GetValueOrDefault () == 0 ? string.Empty : args.Context.Projects.Get (args.Previous.ProjectId.GetValueOrDefault ()).Name; " is 164.
Long Statement,AdminAudit,BreezeListener,C:\repos\countersoft_App-AdminAudit\listener\BreezeListener.cs,AfterEnquiryMailboxUpdated,The length of the statement  "		var currentData = args.Entity.ProjectId.GetValueOrDefault () == 0 ? string.Empty : args.Context.Projects.Get (args.Entity.ProjectId.GetValueOrDefault ()).Name; " is 159.
Long Statement,AdminAudit,BreezeListener,C:\repos\countersoft_App-AdminAudit\listener\BreezeListener.cs,AfterEnquiryMailboxUpdated,The length of the statement  "		var previousData = args.Previous.IssueTypeId.GetValueOrDefault () == 0 ? string.Empty : args.Context.Meta.TypeGet (args.Previous.IssueTypeId.GetValueOrDefault ()).Label; " is 169.
Long Statement,AdminAudit,BreezeListener,C:\repos\countersoft_App-AdminAudit\listener\BreezeListener.cs,AfterEnquiryMailboxUpdated,The length of the statement  "		var currentData = args.Entity.IssueTypeId.GetValueOrDefault () == 0 ? string.Empty : args.Context.Meta.TypeGet (args.Entity.IssueTypeId.GetValueOrDefault ()).Label; " is 164.
Long Statement,AdminAudit,BreezeListener,C:\repos\countersoft_App-AdminAudit\listener\BreezeListener.cs,AfterBreezeReplyOptionsUpdated,The length of the statement  "		var previousProjects = args.Previous.Projects.Count == 0 ? string.Empty : allProjects.FindAll (s => args.Previous.Projects.Contains (s.Id)).Select (p => p.Name).ToDelimited ("' "); " is 180.
Long Statement,AdminAudit,BreezeListener,C:\repos\countersoft_App-AdminAudit\listener\BreezeListener.cs,AfterBreezeReplyOptionsUpdated,The length of the statement  "		var currentProjects = args.Entity.Projects.Count == 0 ? string.Empty : allProjects.FindAll (s => args.Entity.Projects.Contains (s.Id)).Select (p => p.Name).ToDelimited ("' "); " is 175.
Long Statement,AdminAudit,Systemistener,C:\repos\countersoft_App-AdminAudit\listener\SystemListener.cs,AfterAlertTemplateUpdated,The length of the statement  "			previousData = allProjects.FindAll (s => previousAssociatedProjects.Contains (s.Id)).Select (s => s.Name).ToDelimited ("' "); " is 125.
Long Statement,AdminAudit,Systemistener,C:\repos\countersoft_App-AdminAudit\listener\SystemListener.cs,AfterAlertTemplateUpdated,The length of the statement  "			currentData = allProjects.FindAll (s => currentAssociatedProjects.Contains (s.Id)).Select (s => s.Name).ToDelimited ("' "); " is 123.
Long Statement,AdminAudit,PeopleListener,C:\repos\countersoft_App-AdminAudit\listener\PeopleListener.cs,AfterProjectGroupUpdated,The length of the statement  "		var previousGroups = projectGroups.Count > 0 && args.Previous.InteractionGroups.Count > 0 ? projectGroups.FindAll (s => args.Previous.InteractionGroups.Contains (s.Id)).Select (a => a.Name).ToDelimited ("' ") : string.Empty; " is 224.
Long Statement,AdminAudit,PeopleListener,C:\repos\countersoft_App-AdminAudit\listener\PeopleListener.cs,AfterProjectGroupUpdated,The length of the statement  "		var currentGroups = projectGroups.Count > 0 && args.Entity.InteractionGroups.Count > 0 ? projectGroups.FindAll (s => args.Entity.InteractionGroups.Contains (s.Id)).Select (a => a.Name).ToDelimited ("' ") : string.Empty; " is 219.
Long Statement,AdminAudit,PeopleListener,C:\repos\countersoft_App-AdminAudit\listener\PeopleListener.cs,AfterProjectGroupUpdated,The length of the statement  "			if (difference <= 3 && LastAdGroupChanged.Id.ToString () == args.Previous.Id.ToString () && LastAdGroupChanged.UserId.ToString () == args.User.Id.ToString () && LastAdGroupChanged.Data == previousGroups) { " is 205.
Long Statement,AdminAudit,PeopleListener,C:\repos\countersoft_App-AdminAudit\listener\PeopleListener.cs,AfterGeminiConfigurationUpdated,The length of the statement  "		var previousData = args.Previous.HelpDeskModeGroup > 0 ? args.Context.ProjectGroups.Get (args.Previous.HelpDeskModeGroup).Name : string.Empty; " is 142.
Long Statement,AdminAudit,PeopleListener,C:\repos\countersoft_App-AdminAudit\listener\PeopleListener.cs,AfterGeminiConfigurationUpdated,The length of the statement  "		var currentData = args.Entity.HelpDeskModeGroup > 0 ? args.Context.ProjectGroups.Get (args.Entity.HelpDeskModeGroup).Name : string.Empty; " is 137.
Long Statement,AdminAudit,PeopleListener,C:\repos\countersoft_App-AdminAudit\listener\PeopleListener.cs,AfterGeminiConfigurationUpdated,The length of the statement  "			previousData = allGroups.FindAll (s => previousGroupsSplitted.Contains (s.Id.ToString ())).Select (s => s.Name).ToDelimited ("' "); " is 131.
Long Statement,AdminAudit,PeopleListener,C:\repos\countersoft_App-AdminAudit\listener\PeopleListener.cs,AfterGeminiConfigurationUpdated,The length of the statement  "			currentData = allGroups.FindAll (s => currentGroupsSplitted.Contains (s.Id.ToString ())).Select (s => s.Name).ToDelimited ("' "); " is 129.
Long Statement,AdminAudit,PeopleListener,C:\repos\countersoft_App-AdminAudit\listener\PeopleListener.cs,AfterOrganizationUpdated,The length of the statement  "		var previousUsers = allUsers.Count > 0 && args.Previous.Members.Count > 0 ? allUsers.FindAll (s => args.Previous.Members.Find (a => a.UserId == s.Id) != null).Select (a => a.Fullname).ToDelimited ("' ").TrimEnd (' ').TrimEnd (''') : string.Empty; " is 246.
Long Statement,AdminAudit,PeopleListener,C:\repos\countersoft_App-AdminAudit\listener\PeopleListener.cs,AfterOrganizationUpdated,The length of the statement  "		var currentUsers = allUsers.Count > 0 && args.Entity.Members.Count > 0 ? allUsers.FindAll (s => args.Entity.Members.Find (a => a.UserId == s.Id) != null).Select (a => a.Fullname).ToDelimited ("' ").TrimEnd (' ').TrimEnd (''') : string.Empty; " is 241.
Long Statement,AdminAudit,ProjectsListener,C:\repos\countersoft_App-AdminAudit\listener\ProjectsListener .cs,AfterProjectUpdated,The length of the statement  "		data.Second = args.Previous.PermissionId.HasValue ? args.Context.Permissions.Get (args.Previous.PermissionId.Value).Name : string.Empty; " is 136.
Long Statement,AdminAudit,ProjectsListener,C:\repos\countersoft_App-AdminAudit\listener\ProjectsListener .cs,AfterProjectUpdated,The length of the statement  "		data.Third = args.Entity.PermissionId.HasValue ? args.Context.Permissions.Get (args.Entity.PermissionId.Value).Name : string.Empty; " is 131.
Long Statement,AdminAudit,ProjectsListener,C:\repos\countersoft_App-AdminAudit\listener\ProjectsListener .cs,AfterProjectUpdated,The length of the statement  "		data.Second = args.Previous.LabelId.HasValue ? args.Context.ProjectLabels.Get (args.Previous.LabelId.Value).Name : string.Empty; " is 128.
Long Statement,AdminAudit,ProjectsListener,C:\repos\countersoft_App-AdminAudit\listener\ProjectsListener .cs,AfterProjectUpdated,The length of the statement  "		data.Third = args.Entity.LabelId.HasValue ? args.Context.ProjectLabels.Get (args.Entity.LabelId.Value).Name : string.Empty; " is 123.
Long Statement,AdminAudit,ProjectsListener,C:\repos\countersoft_App-AdminAudit\listener\ProjectsListener .cs,AfterProjectUpdated,The length of the statement  "		data.Second = args.Previous.TemplateId != 0 ? args.Context.ProjectTemplates.Get (args.Previous.TemplateId).Name : string.Empty; " is 127.
Long Statement,AdminAudit,ProjectsListener,C:\repos\countersoft_App-AdminAudit\listener\ProjectsListener .cs,AfterProjectUpdated,The length of the statement  "		data.Third = args.Entity.TemplateId != 0 ? args.Context.ProjectTemplates.Get (args.Entity.TemplateId).Name : string.Empty; " is 122.
Long Statement,AdminAudit,TemplatesListener,C:\repos\countersoft_App-AdminAudit\listener\TemplatesListener.cs,AfterIssueTypeUpdated,The length of the statement  "	if ((args.Previous.Screen.ReferenceId == 0 && args.Entity.Screen.ReferenceId == 0 && !args.Previous.Screen.ToJson ().Equals (args.Entity.Screen.ToJson ())) || args.Previous.Screen.ReferenceId != args.Entity.Screen.ReferenceId) { " is 228.
Long Statement,AdminAudit,TemplatesListener,C:\repos\countersoft_App-AdminAudit\listener\TemplatesListener.cs,AfterIssueTypeUpdated,The length of the statement  "	if ((args.Previous.Workflow.ReferenceId == 0 && args.Entity.Workflow.ReferenceId == 0 && !args.Previous.Workflow.ToJson ().Equals (args.Entity.Workflow.ToJson ())) || args.Previous.Workflow.ReferenceId != args.Entity.Workflow.ReferenceId) { " is 240.
Long Statement,AdminAudit,AdminAuditController,C:\repos\countersoft_App-AdminAudit\AdminAuditController.cs,GetData,The length of the statement  "	model.data = AdminAuditRepository.GetAll (dateFromFormatted.Value' dateToFormatted.Value.AddHours (24)' UserContext' userids); " is 126.
Complex Conditional,AdminAudit,PeopleListener,C:\repos\countersoft_App-AdminAudit\listener\PeopleListener.cs,AfterProjectGroupUpdated,The conditional expression  "difference <= 3 && LastAdGroupChanged.Id.ToString () == args.Previous.Id.ToString () && LastAdGroupChanged.UserId.ToString () == args.User.Id.ToString () && LastAdGroupChanged.Data == previousGroups"  is complex.
Complex Conditional,AdminAudit,TemplatesListener,C:\repos\countersoft_App-AdminAudit\listener\TemplatesListener.cs,AfterIssueTypeUpdated,The conditional expression  "(args.Previous.Screen.ReferenceId == 0 && args.Entity.Screen.ReferenceId == 0 && !args.Previous.Screen.ToJson ().Equals (args.Entity.Screen.ToJson ())) || args.Previous.Screen.ReferenceId != args.Entity.Screen.ReferenceId"  is complex.
Complex Conditional,AdminAudit,TemplatesListener,C:\repos\countersoft_App-AdminAudit\listener\TemplatesListener.cs,AfterIssueTypeUpdated,The conditional expression  "(args.Previous.Workflow.ReferenceId == 0 && args.Entity.Workflow.ReferenceId == 0 && !args.Previous.Workflow.ToJson ().Equals (args.Entity.Workflow.ToJson ())) || args.Previous.Workflow.ReferenceId != args.Entity.Workflow.ReferenceId"  is complex.
Magic Number,AdminAudit,PeopleListener,C:\repos\countersoft_App-AdminAudit\listener\PeopleListener.cs,AfterProjectGroupUpdated,The following statement contains a magic number: if (!args.Previous.ADGroups.ToJson ().Equals (args.Entity.ADGroups.ToJson ())) {  	var allActiveDirectoryGroups = args.Context.ActiveDirectory.GetAll ();  	var previousGroups = string.Empty;  	var currentGroups = string.Empty;  	if (args.Previous.ADGroups.Count > 0) {  		var allPreviousGroups = allActiveDirectoryGroups.FindAll (s => args.Previous.ADGroups.Any (a => a.ADGroupId == s.Id));  		if (allPreviousGroups.Count > 0)  			previousGroups = allPreviousGroups.Select (s => s.Name).ToDelimited ("' ").TrimEnd (' ').TrimEnd (''');  	}  	if (args.Entity.ADGroups.Count > 0) {  		var allCurrentGroups = allActiveDirectoryGroups.FindAll (s => args.Entity.ADGroups.Any (a => a.ADGroupId == s.Id));  		if (allCurrentGroups.Count > 0)  			currentGroups = allCurrentGroups.Select (s => s.Name).ToDelimited ("' ").TrimEnd (' ').TrimEnd (''');  	}  	if (LastAdGroupChanged != null) {  		var difference = (DateTime.Now - LastAdGroupChanged.Created).Seconds;  		if (difference <= 3 && LastAdGroupChanged.Id.ToString () == args.Previous.Id.ToString () && LastAdGroupChanged.UserId.ToString () == args.User.Id.ToString () && LastAdGroupChanged.Data == previousGroups) {  			return;  		}  		else {  			LastAdGroupChanged = new CustomTriplet () {  				Id = args.Previous.Id'  				UserId = args.User.Id'  				Created = DateTime.Now'  				Data = previousGroups  			};  		}  	}  	else {  		LastAdGroupChanged = new CustomTriplet () {  			Id = args.Previous.Id'  			UserId = args.User.Id'  			Created = DateTime.Now'  			Data = previousGroups  		};  	}  	changedValues.Add (new Triplet () {  		First = "ad_mappings"'  		Second = currentGroups'  		Third = previousGroups  	});  }  
Magic Number,AdminAudit,PeopleListener,C:\repos\countersoft_App-AdminAudit\listener\PeopleListener.cs,AfterProjectGroupUpdated,The following statement contains a magic number: if (LastAdGroupChanged != null) {  	var difference = (DateTime.Now - LastAdGroupChanged.Created).Seconds;  	if (difference <= 3 && LastAdGroupChanged.Id.ToString () == args.Previous.Id.ToString () && LastAdGroupChanged.UserId.ToString () == args.User.Id.ToString () && LastAdGroupChanged.Data == previousGroups) {  		return;  	}  	else {  		LastAdGroupChanged = new CustomTriplet () {  			Id = args.Previous.Id'  			UserId = args.User.Id'  			Created = DateTime.Now'  			Data = previousGroups  		};  	}  }  else {  	LastAdGroupChanged = new CustomTriplet () {  		Id = args.Previous.Id'  		UserId = args.User.Id'  		Created = DateTime.Now'  		Data = previousGroups  	};  }  
Magic Number,AdminAudit,PeopleListener,C:\repos\countersoft_App-AdminAudit\listener\PeopleListener.cs,AfterProjectGroupUpdated,The following statement contains a magic number: if (difference <= 3 && LastAdGroupChanged.Id.ToString () == args.Previous.Id.ToString () && LastAdGroupChanged.UserId.ToString () == args.User.Id.ToString () && LastAdGroupChanged.Data == previousGroups) {  	return;  }  else {  	LastAdGroupChanged = new CustomTriplet () {  		Id = args.Previous.Id'  		UserId = args.User.Id'  		Created = DateTime.Now'  		Data = previousGroups  	};  }  
Magic Number,AdminAudit,AdminAuditController,C:\repos\countersoft_App-AdminAudit\AdminAuditController.cs,Configuration,The following statement contains a magic number: model.data = AdminAuditRepository.GetAll (DateTime.Today.AddDays (-14)' DateTime.Now' UserContext);  
Magic Number,AdminAudit,AdminAuditController,C:\repos\countersoft_App-AdminAudit\AdminAuditController.cs,GetData,The following statement contains a magic number: if (!dateFromFormatted.HasValue)  	dateFromFormatted = DateTime.Today.AddDays (-14);  
Magic Number,AdminAudit,AdminAuditController,C:\repos\countersoft_App-AdminAudit\AdminAuditController.cs,GetData,The following statement contains a magic number: dateFromFormatted = DateTime.Today.AddDays (-14);  
Magic Number,AdminAudit,AdminAuditController,C:\repos\countersoft_App-AdminAudit\AdminAuditController.cs,GetData,The following statement contains a magic number: model.data = AdminAuditRepository.GetAll (dateFromFormatted.Value' dateToFormatted.Value.AddHours (24)' UserContext' userids);  
Missing Default,AdminAudit,Helper,C:\repos\countersoft_App-AdminAudit\Helper.cs,CreateRollbackQuery,The following switch statement is missing a default case: switch (audit.AdminArea) {  case AdminAreaVisibility.Process:  	if (audit.Action == UserAction.Edited) {  		query = string.Format ("Update gemini_issuetypes set {0} = '{1}' where typeid = {2}"' audit.FieldChanged.ToLower ()' audit.ValueBefore' audit.RowId);  	}  	if (audit.Action == UserAction.Created) {  		query = string.Format ("DELETE from gemini_issuetypes where typeid = {0}"' audit.RowId);  	}  	if (audit.Action == UserAction.Deleted) {  		var data = audit.Data.FromJson<IssueType> ();  		query = "SET IDENTITY_INSERT gemini_issuetypes ON";  		query += string.Format (" INSERT INTO gemini_issuetypes (typeid'seq'typedesc'imagepath'color'screen'workflow'tag'templateid) values ({0}'{1}''{2}'''{3}'''{4}'''{5}'''{6}'''{7}''{8}) "' data.Id' data.Sequence' data.Label' data.Image' data.Color' data.Screen.ToJson ()' data.Workflow.ToJson ()' data.Tag' data.TemplateId);  		query += "SET IDENTITY_INSERT gemini_issuetypes OFF ";  	}  	return query;  case AdminAreaVisibility.ProjectTemplate:  	//Cache.ProjectTemplates.RemoveAll();  	break;  case AdminAreaVisibility.CustomField:  	//Cache.CustomFields.RemoveAll();  	break;  case AdminAreaVisibility.Status:  	//Cache.Meta.StatusRemoveAll();  	break;  case AdminAreaVisibility.Priority:  	//Cache.Meta.PriorityRemoveAll();  	break;  case AdminAreaVisibility.Severity:  	//Cache.Meta.SeverityRemoveAll();  	break;  case AdminAreaVisibility.Resolution:  	//Cache.Meta.ResolutionRemoveAll();  	break;  case AdminAreaVisibility.LinkType:  	//Cache.Meta.LinkTypeRemoveAll();  	break;  case AdminAreaVisibility.TimeType:  	//Cache.Meta.TimeTypeRemoveAll();  	break;  case AdminAreaVisibility.Project:  	//Cache.Projects.RemoveAll();  	break;  case AdminAreaVisibility.ProjectLabel:  	//Cache.ProjectLabels.RemoveAll();  	break;  case AdminAreaVisibility.GeminiConfiguration:  	//Update user property from session/cache?  	break;  case AdminAreaVisibility.PeopleUser:  	//Cache.Users.RemoveAll();  	break;  case AdminAreaVisibility.PeopleGroup:  	//Cache.ProjectGroups.RemoveAll();  	break;  case AdminAreaVisibility.PeoplePermission:  	//Cache.Permissions.RemoveAll();  	break;  case AdminAreaVisibility.BreezeQueue:  	//Update TicketingQueue property from session/cache?  	break;  case AdminAreaVisibility.BreezeSmtp:  	//Update TicketingSmtp property from session/cache?  	break;  case AdminAreaVisibility.BreezeMailbox:  	//Update TicketingMailbox property from session/cache?  	break;  case AdminAreaVisibility.BreezeExpression:  	//Update TicketingExpression property from session/cache?  	break;  case AdminAreaVisibility.BreezeReplyFrom:  	//Update TicketingReplyFrom property from session/cache?  	break;  case AdminAreaVisibility.Rules:  	// Cache.RulesActions.RemoveAll();  	break;  case AdminAreaVisibility.Sla:  	//Cache.SLA.RemoveAll();  	break;  case AdminAreaVisibility.SystemOption:  	//Update SystemOption property from session/cache?  	break;  case AdminAreaVisibility.SystemEmail:  	//Update SystemEmail property from session/cache?  	break;  case AdminAreaVisibility.SystemAlertTemplates:  	//Update SystemAlertTemplates property from session/cache?  	break;  case AdminAreaVisibility.SystemActiveDirectory:  	//Update SystemActiveDirectory property from session/cache?  	break;  case AdminAreaVisibility.SystemLicensing:  	//Update SystemLicensing property from session/cache?  	break;  }  
Missing Default,AdminAudit,AdminAuditController,C:\repos\countersoft_App-AdminAudit\AdminAuditController.cs,Rollback,The following switch statement is missing a default case: switch (data.AdminArea) {  case AdminAreaVisibility.Process:  	Cache.Meta.TypeRemoveAll ();  	break;  case AdminAreaVisibility.ProjectTemplate:  	Cache.ProjectTemplates.RemoveAll ();  	break;  case AdminAreaVisibility.CustomField:  	Cache.CustomFields.RemoveAll ();  	break;  case AdminAreaVisibility.Status:  	Cache.Meta.StatusRemoveAll ();  	break;  case AdminAreaVisibility.Priority:  	Cache.Meta.PriorityRemoveAll ();  	break;  case AdminAreaVisibility.Severity:  	Cache.Meta.SeverityRemoveAll ();  	break;  case AdminAreaVisibility.Resolution:  	Cache.Meta.ResolutionRemoveAll ();  	break;  case AdminAreaVisibility.LinkType:  	Cache.Meta.LinkTypeRemoveAll ();  	break;  case AdminAreaVisibility.TimeType:  	Cache.Meta.TimeTypeRemoveAll ();  	break;  case AdminAreaVisibility.Project:  	Cache.Projects.RemoveAll ();  	break;  case AdminAreaVisibility.ProjectLabel:  	Cache.ProjectLabels.RemoveAll ();  	break;  case AdminAreaVisibility.GeminiConfiguration:  	//Update user property from session/cache?  	break;  case AdminAreaVisibility.PeopleUser:  	Cache.Users.RemoveAll ();  	break;  case AdminAreaVisibility.PeopleGroup:  	Cache.ProjectGroups.RemoveAll ();  	break;  case AdminAreaVisibility.PeoplePermission:  	Cache.Permissions.RemoveAll ();  	break;  case AdminAreaVisibility.BreezeQueue:  	//Update TicketingQueue property from session/cache?  	break;  case AdminAreaVisibility.BreezeSmtp:  	//Update TicketingSmtp property from session/cache?  	break;  case AdminAreaVisibility.BreezeMailbox:  	//Update TicketingMailbox property from session/cache?  	break;  case AdminAreaVisibility.BreezeExpression:  	//Update TicketingExpression property from session/cache?  	break;  case AdminAreaVisibility.BreezeReplyFrom:  	//Update TicketingReplyFrom property from session/cache?  	break;  case AdminAreaVisibility.Rules:  	Cache.RulesActions.RemoveAll ();  	break;  case AdminAreaVisibility.Sla:  	Cache.SLA.RemoveAll ();  	break;  case AdminAreaVisibility.SystemOption:  	//Update SystemOption property from session/cache?  	break;  case AdminAreaVisibility.SystemEmail:  	//Update SystemEmail property from session/cache?  	break;  case AdminAreaVisibility.SystemAlertTemplates:  	//Update SystemAlertTemplates property from session/cache?  	break;  case AdminAreaVisibility.SystemActiveDirectory:  	//Update SystemActiveDirectory property from session/cache?  	break;  case AdminAreaVisibility.SystemLicensing:  	//Update SystemLicensing property from session/cache?  	break;  }  
