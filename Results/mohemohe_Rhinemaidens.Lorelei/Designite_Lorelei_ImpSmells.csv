Implementation smell,Namespace,Class,File,Method,Description
Complex Method,OAuth,OAuthBase,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\OAuth\OAuthBase.cs,GenerateSignatureBase,Cyclomatic complexity of the method is 8
Complex Method,OAuth,OAuthBase,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\OAuth\OAuthBase.cs,GenerateSignature,Cyclomatic complexity of the method is 9
Complex Method,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,Cyclomatic complexity of the method is 11
Long Parameter List,Rhinemaidens.Helper,EditImage,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\Helper\EditImage.cs,GenerateRetweeterImage,The method has 9 parameters.
Long Parameter List,Rhinemaidens.OAuth,OAuthHelper,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\OAuth\OAuthHelper.cs,GenerateSignatureBase,The method has 6 parameters.
Long Parameter List,Rhinemaidens,Lorelei,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\Lorelei.cs,GenerateRetweeterImage,The method has 9 parameters.
Long Parameter List,Rhinemaidens,ILorelei,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\ILorelei.cs,GenerateRetweeterImage,The method has 9 parameters.
Long Parameter List,OAuth,OAuthBase,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\OAuth\OAuthBase.cs,GenerateSignatureBase,The method has 10 parameters.
Long Parameter List,OAuth,OAuthBase,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\OAuth\OAuthBase.cs,GenerateSignature,The method has 10 parameters.
Long Parameter List,OAuth,OAuthBase,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\OAuth\OAuthBase.cs,GenerateSignature,The method has 11 parameters.
Long Statement,Rhinemaidens.Helper,EditImage,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\Helper\EditImage.cs,GenerateRetweeterImage,The length of the statement  "		g.DrawImage (tmpSourceRetweeterImage' GeneratedImage.Width - tmpSourceRetweeterImage.Width' GeneratedImage.Height - tmpSourceRetweeterImage.Height' tmpSourceRetweeterImage.Width' tmpSourceRetweeterImage.Height); " is 211.
Long Statement,Rhinemaidens.OAuth,OAuthHelper,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\OAuth\OAuthHelper.cs,BuildHeaderString,The length of the statement  "	var signatureBase = GenerateSignatureBase (EncodedUrl.Replace ("%3a"' "%3A").Replace ("%2f"' "%2F")' Method' timeStamp' nonce' ExtString1' ExtString2); " is 151.
Long Statement,Rhinemaidens.OAuth,OAuthHelper,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\OAuth\OAuthHelper.cs,BuildHeaderString,The length of the statement  "	var HeaderString = "OAuth oauth_consumer_key=\"" + OAuthData.consumerKey + "\"' oauth_nonce=\"" + nonce + "\"' oauth_signature=\"" + signature + "\"' " + "oauth_signature_method=\"HMAC-SHA1\"' oauth_timestamp=\"" + timeStamp + "\"' oauth_token=\"" + OAuthData.accessToken + "\"' " + "oauth_version=\"1.0\""; " is 307.
Long Statement,Rhinemaidens.OAuth,OAuthHelper,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\OAuth\OAuthHelper.cs,GenerateSignatureBase,The length of the statement  "	signatureBase += "oauth_consumer_key" + EQ + OAuthData.consumerKey + AND + "oauth_nonce" + EQ + Nonce + AND + "oauth_signature_method" + EQ + "HMAC-SHA1" + AND + "oauth_timestamp" + EQ + TimeStamp + AND + "oauth_token" + EQ + OAuthData.accessToken + AND + "oauth_version" + EQ + "1.0"; " is 285.
Long Statement,Rhinemaidens.OAuth,OAuthHelper,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\OAuth\OAuthHelper.cs,GetRequestToken,The length of the statement  "	var signature = oauth.GenerateSignature (new Uri (APIurl.requestTokenUrl)' OAuthData.consumerKey' OAuthData.consumerSecret' null' null' method' timeStamp' nonce' OAuthBase.SignatureTypes.HMACSHA1' out normalizedUrl' out normalizedReqParams); " is 241.
Long Statement,Rhinemaidens.OAuth,OAuthHelper,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\OAuth\OAuthHelper.cs,GetOAuthUrl,The length of the statement  "		OAuthUrl = APIurl.authUrl + "?oauth_token=" + OAuthData.requestToken + "&oauth_token_secret=" + OAuthData.requestTokenSecret; " is 125.
Long Statement,Rhinemaidens.OAuth,OAuthHelper,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\OAuth\OAuthHelper.cs,_GetAccessToken,The length of the statement  "	var signature = oauth.GenerateSignature (new Uri (APIurl.requestTokenUrl)' OAuthData.consumerKey' OAuthData.consumerSecret' OAuthData.requestToken' OAuthData.requestTokenSecret' method' timeStamp' nonce' OAuthBase.SignatureTypes.HMACSHA1' out normalizedUrl' out normalizedReqParams); " is 283.
Long Statement,Rhinemaidens.OAuth,OAuthHelper,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\OAuth\OAuthHelper.cs,_GetAccessToken,The length of the statement  "	var tokenUrl = APIurl.accessTokenUrl + "?" + normalizedReqParams + "&oauth_signature=" + signature + "&oauth_verifier=" + pin; " is 126.
Long Statement,Rhinemaidens,Lorelei,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\Lorelei.cs,GenerateRetweeterImage,The length of the statement  "	i.GenerateRetweeterImage (Width' Height' SourceOriginImage' SourceOriginImageWidth' SourceOriginImageHeight' SourceRetweeterImage' SourceRetweeterImageWidth' SourceRetweeterImageHeight' out GeneratedImage); " is 206.
Long Statement,OAuth,OAuthBase,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\OAuth\OAuthBase.cs,GenerateSignature,The length of the statement  "	return GenerateSignature (url' consumerKey' consumerSecret' token' tokenSecret' httpMethod' timeStamp' nonce' SignatureTypes.HMACSHA1' out normalizedUrl' out normalizedRequestParameters); " is 187.
Long Statement,OAuth,OAuthBase,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\OAuth\OAuthBase.cs,GenerateSignature,The length of the statement  "		string signatureBase = GenerateSignatureBase (url' consumerKey' token' tokenSecret' httpMethod' timeStamp' nonce' HMACSHA1SignatureType' out normalizedUrl' out normalizedRequestParameters); " is 189.
Long Statement,OAuth,OAuthBase,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\OAuth\OAuthBase.cs,GenerateSignature,The length of the statement  "		hmacsha1.Key = Encoding.ASCII.GetBytes (string.Format ("{0}&{1}"' UrlEncode (consumerSecret)' string.IsNullOrEmpty (tokenSecret) ? "" : UrlEncode (tokenSecret))); " is 162.
Long Statement,Rhinemaidens.TwitterAPI.REST,Favorite,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\REST\Favorite.cs,AddFavorite,The length of the statement  "		var headerString = oah.BuildHeaderString (HttpUtility.UrlEncode (APIurl.createFavoriteUrl)' method' "id=" + TweetId' ""); " is 121.
Long Statement,Rhinemaidens.TwitterAPI.REST,Favorite,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\REST\Favorite.cs,DeleteFavorite,The length of the statement  "		var headerString = oah.BuildHeaderString (HttpUtility.UrlEncode (APIurl.destroyFavoriteUrl)' method' "id=" + TweetId' ""); " is 122.
Long Statement,Rhinemaidens.TwitterAPI.REST,PostTweet,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\REST\PostTweet.cs,PostTweetTextOnly,The length of the statement  "			headerString = oah.BuildHeaderString (HttpUtility.UrlEncode (APIurl.postTweetUrl)' method' "in_reply_to_status_id=" + In_reply_to_status_id' "status=" + Uri.EscapeDataString (Body)); " is 182.
Long Statement,Rhinemaidens.TwitterAPI.REST,PostTweet,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\REST\PostTweet.cs,PostTweetTextOnly,The length of the statement  "			sendBytes = Encoding.UTF8.GetBytes ("in_reply_to_status_id=" + In_reply_to_status_id + "&" + "status=" + Uri.EscapeDataString (Body)); " is 134.
Long Statement,Rhinemaidens.TwitterAPI.REST,PostTweet,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\REST\PostTweet.cs,PostTweetTextOnly,The length of the statement  "			headerString = oah.BuildHeaderString (HttpUtility.UrlEncode (APIurl.postTweetUrl)' method' ""' "status=" + Uri.EscapeDataString (Body)); " is 136.
Long Statement,Rhinemaidens.TwitterAPI.REST,PostTweet,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\REST\PostTweet.cs,PostTweetWithImage,The length of the statement  "	var openBytes = Encoding.UTF8.GetBytes (boundary + "\r\n" + "Content-Type: application/x-www-form-urlencoded\r\n" + "Content-Disposition: form-data; name=\"status\"\r\n" + "\r\n" + Body + "\r\n" + boundary + "\r\n" + "Content-Type: application/octet-stream\r\n" + "Content-Disposition: form-data; name=\"media[]\"; filename=\"" + Path.GetFileName (ImageFilePath) + "\"\r\n" + "\r\n"); " is 384.
Long Statement,Rhinemaidens.TwitterAPI.REST,Profile,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\REST\Profile.cs,UpdateDescription,The length of the statement  "		var headerString = oah.BuildHeaderString (HttpUtility.UrlEncode (APIurl.updateProfileUrl)' method' "description=" + Description' ""); " is 133.
Long Statement,Rhinemaidens.TwitterAPI.REST,Profile,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\REST\Profile.cs,UpdateLocation,The length of the statement  "		var headerString = oah.BuildHeaderString (HttpUtility.UrlEncode (APIurl.updateProfileUrl)' method' "location=" + Location' ""); " is 127.
Long Statement,Rhinemaidens.TwitterAPI.REST,Profile,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\REST\Profile.cs,UpdateImage,The length of the statement  "	var openBytes = Encoding.UTF8.GetBytes (boundary + "\r\n" + "Content-Type: application/octet-stream\r\n" + "Content-Disposition: form-data; name=\"media[]\"; filename=\"" + Path.GetFileName (ImageFilePath) + "\"\r\n" + "\r\n"); " is 227.
Long Statement,Rhinemaidens.TwitterAPI.REST,Retweet,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\REST\Retweet.cs,PostRetweet,The length of the statement  "		var headerString = oah.BuildHeaderString (HttpUtility.UrlEncode (APIurl.postRetweetUrl_reqireReplace.Replace ("REPLACE_HERE"' TweetId))' method' ""' ""); " is 153.
Long Statement,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,ParseJsonOfUserStream,The length of the statement  "		var JsonUser = new JavaScriptSerializer ().Deserialize<Dictionary<string' object>> (tweetUserSB.ToString (0' tweetUserSB.Length)); " is 130.
Long Statement,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,ParseJsonOfUserStream,The length of the statement  "			var JsonRetweet = new JavaScriptSerializer ().Deserialize<Dictionary<string' object>> (tweetRetweetedStatusSB.ToString (0' tweetRetweetedStatusSB.Length)); " is 155.
Long Statement,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,ParseJsonOfUserStream,The length of the statement  "			var JsonRetweetOriginUser = new JavaScriptSerializer ().Deserialize<Dictionary<string' object>> (tweetRetweetedOriginUserSB.ToString (0' tweetRetweetedOriginUserSB.Length)); " is 173.
Complex Conditional,OAuth,OAuthBase,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\OAuth\OAuthBase.cs,GenerateSignatureBase,The conditional expression  "!((url.Scheme == "http" && url.Port == 80) || (url.Scheme == "https" && url.Port == 443))"  is complex.
Empty Catch Block,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The method has an empty catch block.
Magic Number,OAuth,OAuthBase,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\OAuth\OAuthBase.cs,GenerateSignatureBase,The following statement contains a magic number: if (!((url.Scheme == "http" && url.Port == 80) || (url.Scheme == "https" && url.Port == 443))) {  	normalizedUrl += ":" + url.Port;  }  
Magic Number,OAuth,OAuthBase,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\OAuth\OAuthBase.cs,GenerateSignatureBase,The following statement contains a magic number: if (!((url.Scheme == "http" && url.Port == 80) || (url.Scheme == "https" && url.Port == 443))) {  	normalizedUrl += ":" + url.Port;  }  
Magic Number,OAuth,OAuthBase,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\OAuth\OAuthBase.cs,GenerateNonce,The following statement contains a magic number: return random.Next (123400' 9999999).ToString ();  
Magic Number,OAuth,OAuthBase,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\OAuth\OAuthBase.cs,GenerateNonce,The following statement contains a magic number: return random.Next (123400' 9999999).ToString ();  
Magic Number,Rhinemaidens.TwitterAPI.REST,PostTweet,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\REST\PostTweet.cs,PostTweetTextOnly,The following statement contains a magic number: if (Body.Length > 140) {  	throw new TooLongTweetBodyException ();  }  
Magic Number,Rhinemaidens.TwitterAPI.REST,PostTweet,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\REST\PostTweet.cs,PostTweetWithImage,The following statement contains a magic number: if (Body.Length > 140) {  	throw new TooLongTweetBodyException ();  }  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: while (isStartedUserStream) {  	WebResponse res = null;  	int i = 0;  	var method = "GET";  	string headerString;  	string url;  	if (IsGetAllReplies) {  		url = APIurl.userStreamUrl + "?replies=all";  		headerString = oah.BuildHeaderString (HttpUtility.UrlEncode (APIurl.userStreamUrl)' method' ""' "replies=all");  	}  	else {  		url = APIurl.userStreamUrl;  		headerString = oah.BuildHeaderString (HttpUtility.UrlEncode (APIurl.userStreamUrl)' method' ""' "");  	}  	do {  		var req = (HttpWebRequest)HttpWebRequest.Create (url);  		req.Method = method;  		req.Headers.Add (HttpRequestHeader.Authorization' headerString);  		req.Timeout = Timeout.Infinite;  		req.ServicePoint.Expect100Continue = false;  		try {  			res = req.GetResponse ();  			i = 0;  		}  		catch (WebException e) {  			if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  				var sleepTime = 5 * 1000 * Math.Pow (2' i);  				if (sleepTime > 300 * 100 * 1000) {  					break;  				}  				Thread.Sleep ((int)sleepTime);  				i++;  			}  			else {  				var sleepTime = 5 * 1000 * Math.Pow (2' i);  				if (sleepTime > 320 * 1000) {  					break;  				}  				Thread.Sleep ((int)sleepTime);  				i++;  			}  		}  		catch {  			var sleepTime = 250 * Math.Pow (2' i);  			if (sleepTime > 16 * 1000) {  				break;  			}  			Thread.Sleep ((int)sleepTime);  			i++;  		}  	}  	while (res == null);  	var sr = new StreamReader (res.GetResponseStream ());  	while (isStartedUserStream == true) {  		try {  			string Text = sr.ReadLine ();  			if (Text != null && Text.Length > 0) {  				ParseJsonOfUserStream (Text);  			}  			else {  				Thread.Sleep (100);  			}  		}  		catch {  			break;  		}  	}  	try {  		res.Close ();  	}  	catch {  	}  }  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: while (isStartedUserStream) {  	WebResponse res = null;  	int i = 0;  	var method = "GET";  	string headerString;  	string url;  	if (IsGetAllReplies) {  		url = APIurl.userStreamUrl + "?replies=all";  		headerString = oah.BuildHeaderString (HttpUtility.UrlEncode (APIurl.userStreamUrl)' method' ""' "replies=all");  	}  	else {  		url = APIurl.userStreamUrl;  		headerString = oah.BuildHeaderString (HttpUtility.UrlEncode (APIurl.userStreamUrl)' method' ""' "");  	}  	do {  		var req = (HttpWebRequest)HttpWebRequest.Create (url);  		req.Method = method;  		req.Headers.Add (HttpRequestHeader.Authorization' headerString);  		req.Timeout = Timeout.Infinite;  		req.ServicePoint.Expect100Continue = false;  		try {  			res = req.GetResponse ();  			i = 0;  		}  		catch (WebException e) {  			if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  				var sleepTime = 5 * 1000 * Math.Pow (2' i);  				if (sleepTime > 300 * 100 * 1000) {  					break;  				}  				Thread.Sleep ((int)sleepTime);  				i++;  			}  			else {  				var sleepTime = 5 * 1000 * Math.Pow (2' i);  				if (sleepTime > 320 * 1000) {  					break;  				}  				Thread.Sleep ((int)sleepTime);  				i++;  			}  		}  		catch {  			var sleepTime = 250 * Math.Pow (2' i);  			if (sleepTime > 16 * 1000) {  				break;  			}  			Thread.Sleep ((int)sleepTime);  			i++;  		}  	}  	while (res == null);  	var sr = new StreamReader (res.GetResponseStream ());  	while (isStartedUserStream == true) {  		try {  			string Text = sr.ReadLine ();  			if (Text != null && Text.Length > 0) {  				ParseJsonOfUserStream (Text);  			}  			else {  				Thread.Sleep (100);  			}  		}  		catch {  			break;  		}  	}  	try {  		res.Close ();  	}  	catch {  	}  }  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: while (isStartedUserStream) {  	WebResponse res = null;  	int i = 0;  	var method = "GET";  	string headerString;  	string url;  	if (IsGetAllReplies) {  		url = APIurl.userStreamUrl + "?replies=all";  		headerString = oah.BuildHeaderString (HttpUtility.UrlEncode (APIurl.userStreamUrl)' method' ""' "replies=all");  	}  	else {  		url = APIurl.userStreamUrl;  		headerString = oah.BuildHeaderString (HttpUtility.UrlEncode (APIurl.userStreamUrl)' method' ""' "");  	}  	do {  		var req = (HttpWebRequest)HttpWebRequest.Create (url);  		req.Method = method;  		req.Headers.Add (HttpRequestHeader.Authorization' headerString);  		req.Timeout = Timeout.Infinite;  		req.ServicePoint.Expect100Continue = false;  		try {  			res = req.GetResponse ();  			i = 0;  		}  		catch (WebException e) {  			if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  				var sleepTime = 5 * 1000 * Math.Pow (2' i);  				if (sleepTime > 300 * 100 * 1000) {  					break;  				}  				Thread.Sleep ((int)sleepTime);  				i++;  			}  			else {  				var sleepTime = 5 * 1000 * Math.Pow (2' i);  				if (sleepTime > 320 * 1000) {  					break;  				}  				Thread.Sleep ((int)sleepTime);  				i++;  			}  		}  		catch {  			var sleepTime = 250 * Math.Pow (2' i);  			if (sleepTime > 16 * 1000) {  				break;  			}  			Thread.Sleep ((int)sleepTime);  			i++;  		}  	}  	while (res == null);  	var sr = new StreamReader (res.GetResponseStream ());  	while (isStartedUserStream == true) {  		try {  			string Text = sr.ReadLine ();  			if (Text != null && Text.Length > 0) {  				ParseJsonOfUserStream (Text);  			}  			else {  				Thread.Sleep (100);  			}  		}  		catch {  			break;  		}  	}  	try {  		res.Close ();  	}  	catch {  	}  }  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: while (isStartedUserStream) {  	WebResponse res = null;  	int i = 0;  	var method = "GET";  	string headerString;  	string url;  	if (IsGetAllReplies) {  		url = APIurl.userStreamUrl + "?replies=all";  		headerString = oah.BuildHeaderString (HttpUtility.UrlEncode (APIurl.userStreamUrl)' method' ""' "replies=all");  	}  	else {  		url = APIurl.userStreamUrl;  		headerString = oah.BuildHeaderString (HttpUtility.UrlEncode (APIurl.userStreamUrl)' method' ""' "");  	}  	do {  		var req = (HttpWebRequest)HttpWebRequest.Create (url);  		req.Method = method;  		req.Headers.Add (HttpRequestHeader.Authorization' headerString);  		req.Timeout = Timeout.Infinite;  		req.ServicePoint.Expect100Continue = false;  		try {  			res = req.GetResponse ();  			i = 0;  		}  		catch (WebException e) {  			if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  				var sleepTime = 5 * 1000 * Math.Pow (2' i);  				if (sleepTime > 300 * 100 * 1000) {  					break;  				}  				Thread.Sleep ((int)sleepTime);  				i++;  			}  			else {  				var sleepTime = 5 * 1000 * Math.Pow (2' i);  				if (sleepTime > 320 * 1000) {  					break;  				}  				Thread.Sleep ((int)sleepTime);  				i++;  			}  		}  		catch {  			var sleepTime = 250 * Math.Pow (2' i);  			if (sleepTime > 16 * 1000) {  				break;  			}  			Thread.Sleep ((int)sleepTime);  			i++;  		}  	}  	while (res == null);  	var sr = new StreamReader (res.GetResponseStream ());  	while (isStartedUserStream == true) {  		try {  			string Text = sr.ReadLine ();  			if (Text != null && Text.Length > 0) {  				ParseJsonOfUserStream (Text);  			}  			else {  				Thread.Sleep (100);  			}  		}  		catch {  			break;  		}  	}  	try {  		res.Close ();  	}  	catch {  	}  }  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: while (isStartedUserStream) {  	WebResponse res = null;  	int i = 0;  	var method = "GET";  	string headerString;  	string url;  	if (IsGetAllReplies) {  		url = APIurl.userStreamUrl + "?replies=all";  		headerString = oah.BuildHeaderString (HttpUtility.UrlEncode (APIurl.userStreamUrl)' method' ""' "replies=all");  	}  	else {  		url = APIurl.userStreamUrl;  		headerString = oah.BuildHeaderString (HttpUtility.UrlEncode (APIurl.userStreamUrl)' method' ""' "");  	}  	do {  		var req = (HttpWebRequest)HttpWebRequest.Create (url);  		req.Method = method;  		req.Headers.Add (HttpRequestHeader.Authorization' headerString);  		req.Timeout = Timeout.Infinite;  		req.ServicePoint.Expect100Continue = false;  		try {  			res = req.GetResponse ();  			i = 0;  		}  		catch (WebException e) {  			if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  				var sleepTime = 5 * 1000 * Math.Pow (2' i);  				if (sleepTime > 300 * 100 * 1000) {  					break;  				}  				Thread.Sleep ((int)sleepTime);  				i++;  			}  			else {  				var sleepTime = 5 * 1000 * Math.Pow (2' i);  				if (sleepTime > 320 * 1000) {  					break;  				}  				Thread.Sleep ((int)sleepTime);  				i++;  			}  		}  		catch {  			var sleepTime = 250 * Math.Pow (2' i);  			if (sleepTime > 16 * 1000) {  				break;  			}  			Thread.Sleep ((int)sleepTime);  			i++;  		}  	}  	while (res == null);  	var sr = new StreamReader (res.GetResponseStream ());  	while (isStartedUserStream == true) {  		try {  			string Text = sr.ReadLine ();  			if (Text != null && Text.Length > 0) {  				ParseJsonOfUserStream (Text);  			}  			else {  				Thread.Sleep (100);  			}  		}  		catch {  			break;  		}  	}  	try {  		res.Close ();  	}  	catch {  	}  }  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: while (isStartedUserStream) {  	WebResponse res = null;  	int i = 0;  	var method = "GET";  	string headerString;  	string url;  	if (IsGetAllReplies) {  		url = APIurl.userStreamUrl + "?replies=all";  		headerString = oah.BuildHeaderString (HttpUtility.UrlEncode (APIurl.userStreamUrl)' method' ""' "replies=all");  	}  	else {  		url = APIurl.userStreamUrl;  		headerString = oah.BuildHeaderString (HttpUtility.UrlEncode (APIurl.userStreamUrl)' method' ""' "");  	}  	do {  		var req = (HttpWebRequest)HttpWebRequest.Create (url);  		req.Method = method;  		req.Headers.Add (HttpRequestHeader.Authorization' headerString);  		req.Timeout = Timeout.Infinite;  		req.ServicePoint.Expect100Continue = false;  		try {  			res = req.GetResponse ();  			i = 0;  		}  		catch (WebException e) {  			if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  				var sleepTime = 5 * 1000 * Math.Pow (2' i);  				if (sleepTime > 300 * 100 * 1000) {  					break;  				}  				Thread.Sleep ((int)sleepTime);  				i++;  			}  			else {  				var sleepTime = 5 * 1000 * Math.Pow (2' i);  				if (sleepTime > 320 * 1000) {  					break;  				}  				Thread.Sleep ((int)sleepTime);  				i++;  			}  		}  		catch {  			var sleepTime = 250 * Math.Pow (2' i);  			if (sleepTime > 16 * 1000) {  				break;  			}  			Thread.Sleep ((int)sleepTime);  			i++;  		}  	}  	while (res == null);  	var sr = new StreamReader (res.GetResponseStream ());  	while (isStartedUserStream == true) {  		try {  			string Text = sr.ReadLine ();  			if (Text != null && Text.Length > 0) {  				ParseJsonOfUserStream (Text);  			}  			else {  				Thread.Sleep (100);  			}  		}  		catch {  			break;  		}  	}  	try {  		res.Close ();  	}  	catch {  	}  }  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: while (isStartedUserStream) {  	WebResponse res = null;  	int i = 0;  	var method = "GET";  	string headerString;  	string url;  	if (IsGetAllReplies) {  		url = APIurl.userStreamUrl + "?replies=all";  		headerString = oah.BuildHeaderString (HttpUtility.UrlEncode (APIurl.userStreamUrl)' method' ""' "replies=all");  	}  	else {  		url = APIurl.userStreamUrl;  		headerString = oah.BuildHeaderString (HttpUtility.UrlEncode (APIurl.userStreamUrl)' method' ""' "");  	}  	do {  		var req = (HttpWebRequest)HttpWebRequest.Create (url);  		req.Method = method;  		req.Headers.Add (HttpRequestHeader.Authorization' headerString);  		req.Timeout = Timeout.Infinite;  		req.ServicePoint.Expect100Continue = false;  		try {  			res = req.GetResponse ();  			i = 0;  		}  		catch (WebException e) {  			if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  				var sleepTime = 5 * 1000 * Math.Pow (2' i);  				if (sleepTime > 300 * 100 * 1000) {  					break;  				}  				Thread.Sleep ((int)sleepTime);  				i++;  			}  			else {  				var sleepTime = 5 * 1000 * Math.Pow (2' i);  				if (sleepTime > 320 * 1000) {  					break;  				}  				Thread.Sleep ((int)sleepTime);  				i++;  			}  		}  		catch {  			var sleepTime = 250 * Math.Pow (2' i);  			if (sleepTime > 16 * 1000) {  				break;  			}  			Thread.Sleep ((int)sleepTime);  			i++;  		}  	}  	while (res == null);  	var sr = new StreamReader (res.GetResponseStream ());  	while (isStartedUserStream == true) {  		try {  			string Text = sr.ReadLine ();  			if (Text != null && Text.Length > 0) {  				ParseJsonOfUserStream (Text);  			}  			else {  				Thread.Sleep (100);  			}  		}  		catch {  			break;  		}  	}  	try {  		res.Close ();  	}  	catch {  	}  }  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: while (isStartedUserStream) {  	WebResponse res = null;  	int i = 0;  	var method = "GET";  	string headerString;  	string url;  	if (IsGetAllReplies) {  		url = APIurl.userStreamUrl + "?replies=all";  		headerString = oah.BuildHeaderString (HttpUtility.UrlEncode (APIurl.userStreamUrl)' method' ""' "replies=all");  	}  	else {  		url = APIurl.userStreamUrl;  		headerString = oah.BuildHeaderString (HttpUtility.UrlEncode (APIurl.userStreamUrl)' method' ""' "");  	}  	do {  		var req = (HttpWebRequest)HttpWebRequest.Create (url);  		req.Method = method;  		req.Headers.Add (HttpRequestHeader.Authorization' headerString);  		req.Timeout = Timeout.Infinite;  		req.ServicePoint.Expect100Continue = false;  		try {  			res = req.GetResponse ();  			i = 0;  		}  		catch (WebException e) {  			if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  				var sleepTime = 5 * 1000 * Math.Pow (2' i);  				if (sleepTime > 300 * 100 * 1000) {  					break;  				}  				Thread.Sleep ((int)sleepTime);  				i++;  			}  			else {  				var sleepTime = 5 * 1000 * Math.Pow (2' i);  				if (sleepTime > 320 * 1000) {  					break;  				}  				Thread.Sleep ((int)sleepTime);  				i++;  			}  		}  		catch {  			var sleepTime = 250 * Math.Pow (2' i);  			if (sleepTime > 16 * 1000) {  				break;  			}  			Thread.Sleep ((int)sleepTime);  			i++;  		}  	}  	while (res == null);  	var sr = new StreamReader (res.GetResponseStream ());  	while (isStartedUserStream == true) {  		try {  			string Text = sr.ReadLine ();  			if (Text != null && Text.Length > 0) {  				ParseJsonOfUserStream (Text);  			}  			else {  				Thread.Sleep (100);  			}  		}  		catch {  			break;  		}  	}  	try {  		res.Close ();  	}  	catch {  	}  }  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: while (isStartedUserStream) {  	WebResponse res = null;  	int i = 0;  	var method = "GET";  	string headerString;  	string url;  	if (IsGetAllReplies) {  		url = APIurl.userStreamUrl + "?replies=all";  		headerString = oah.BuildHeaderString (HttpUtility.UrlEncode (APIurl.userStreamUrl)' method' ""' "replies=all");  	}  	else {  		url = APIurl.userStreamUrl;  		headerString = oah.BuildHeaderString (HttpUtility.UrlEncode (APIurl.userStreamUrl)' method' ""' "");  	}  	do {  		var req = (HttpWebRequest)HttpWebRequest.Create (url);  		req.Method = method;  		req.Headers.Add (HttpRequestHeader.Authorization' headerString);  		req.Timeout = Timeout.Infinite;  		req.ServicePoint.Expect100Continue = false;  		try {  			res = req.GetResponse ();  			i = 0;  		}  		catch (WebException e) {  			if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  				var sleepTime = 5 * 1000 * Math.Pow (2' i);  				if (sleepTime > 300 * 100 * 1000) {  					break;  				}  				Thread.Sleep ((int)sleepTime);  				i++;  			}  			else {  				var sleepTime = 5 * 1000 * Math.Pow (2' i);  				if (sleepTime > 320 * 1000) {  					break;  				}  				Thread.Sleep ((int)sleepTime);  				i++;  			}  		}  		catch {  			var sleepTime = 250 * Math.Pow (2' i);  			if (sleepTime > 16 * 1000) {  				break;  			}  			Thread.Sleep ((int)sleepTime);  			i++;  		}  	}  	while (res == null);  	var sr = new StreamReader (res.GetResponseStream ());  	while (isStartedUserStream == true) {  		try {  			string Text = sr.ReadLine ();  			if (Text != null && Text.Length > 0) {  				ParseJsonOfUserStream (Text);  			}  			else {  				Thread.Sleep (100);  			}  		}  		catch {  			break;  		}  	}  	try {  		res.Close ();  	}  	catch {  	}  }  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: while (isStartedUserStream) {  	WebResponse res = null;  	int i = 0;  	var method = "GET";  	string headerString;  	string url;  	if (IsGetAllReplies) {  		url = APIurl.userStreamUrl + "?replies=all";  		headerString = oah.BuildHeaderString (HttpUtility.UrlEncode (APIurl.userStreamUrl)' method' ""' "replies=all");  	}  	else {  		url = APIurl.userStreamUrl;  		headerString = oah.BuildHeaderString (HttpUtility.UrlEncode (APIurl.userStreamUrl)' method' ""' "");  	}  	do {  		var req = (HttpWebRequest)HttpWebRequest.Create (url);  		req.Method = method;  		req.Headers.Add (HttpRequestHeader.Authorization' headerString);  		req.Timeout = Timeout.Infinite;  		req.ServicePoint.Expect100Continue = false;  		try {  			res = req.GetResponse ();  			i = 0;  		}  		catch (WebException e) {  			if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  				var sleepTime = 5 * 1000 * Math.Pow (2' i);  				if (sleepTime > 300 * 100 * 1000) {  					break;  				}  				Thread.Sleep ((int)sleepTime);  				i++;  			}  			else {  				var sleepTime = 5 * 1000 * Math.Pow (2' i);  				if (sleepTime > 320 * 1000) {  					break;  				}  				Thread.Sleep ((int)sleepTime);  				i++;  			}  		}  		catch {  			var sleepTime = 250 * Math.Pow (2' i);  			if (sleepTime > 16 * 1000) {  				break;  			}  			Thread.Sleep ((int)sleepTime);  			i++;  		}  	}  	while (res == null);  	var sr = new StreamReader (res.GetResponseStream ());  	while (isStartedUserStream == true) {  		try {  			string Text = sr.ReadLine ();  			if (Text != null && Text.Length > 0) {  				ParseJsonOfUserStream (Text);  			}  			else {  				Thread.Sleep (100);  			}  		}  		catch {  			break;  		}  	}  	try {  		res.Close ();  	}  	catch {  	}  }  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: while (isStartedUserStream) {  	WebResponse res = null;  	int i = 0;  	var method = "GET";  	string headerString;  	string url;  	if (IsGetAllReplies) {  		url = APIurl.userStreamUrl + "?replies=all";  		headerString = oah.BuildHeaderString (HttpUtility.UrlEncode (APIurl.userStreamUrl)' method' ""' "replies=all");  	}  	else {  		url = APIurl.userStreamUrl;  		headerString = oah.BuildHeaderString (HttpUtility.UrlEncode (APIurl.userStreamUrl)' method' ""' "");  	}  	do {  		var req = (HttpWebRequest)HttpWebRequest.Create (url);  		req.Method = method;  		req.Headers.Add (HttpRequestHeader.Authorization' headerString);  		req.Timeout = Timeout.Infinite;  		req.ServicePoint.Expect100Continue = false;  		try {  			res = req.GetResponse ();  			i = 0;  		}  		catch (WebException e) {  			if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  				var sleepTime = 5 * 1000 * Math.Pow (2' i);  				if (sleepTime > 300 * 100 * 1000) {  					break;  				}  				Thread.Sleep ((int)sleepTime);  				i++;  			}  			else {  				var sleepTime = 5 * 1000 * Math.Pow (2' i);  				if (sleepTime > 320 * 1000) {  					break;  				}  				Thread.Sleep ((int)sleepTime);  				i++;  			}  		}  		catch {  			var sleepTime = 250 * Math.Pow (2' i);  			if (sleepTime > 16 * 1000) {  				break;  			}  			Thread.Sleep ((int)sleepTime);  			i++;  		}  	}  	while (res == null);  	var sr = new StreamReader (res.GetResponseStream ());  	while (isStartedUserStream == true) {  		try {  			string Text = sr.ReadLine ();  			if (Text != null && Text.Length > 0) {  				ParseJsonOfUserStream (Text);  			}  			else {  				Thread.Sleep (100);  			}  		}  		catch {  			break;  		}  	}  	try {  		res.Close ();  	}  	catch {  	}  }  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: while (isStartedUserStream) {  	WebResponse res = null;  	int i = 0;  	var method = "GET";  	string headerString;  	string url;  	if (IsGetAllReplies) {  		url = APIurl.userStreamUrl + "?replies=all";  		headerString = oah.BuildHeaderString (HttpUtility.UrlEncode (APIurl.userStreamUrl)' method' ""' "replies=all");  	}  	else {  		url = APIurl.userStreamUrl;  		headerString = oah.BuildHeaderString (HttpUtility.UrlEncode (APIurl.userStreamUrl)' method' ""' "");  	}  	do {  		var req = (HttpWebRequest)HttpWebRequest.Create (url);  		req.Method = method;  		req.Headers.Add (HttpRequestHeader.Authorization' headerString);  		req.Timeout = Timeout.Infinite;  		req.ServicePoint.Expect100Continue = false;  		try {  			res = req.GetResponse ();  			i = 0;  		}  		catch (WebException e) {  			if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  				var sleepTime = 5 * 1000 * Math.Pow (2' i);  				if (sleepTime > 300 * 100 * 1000) {  					break;  				}  				Thread.Sleep ((int)sleepTime);  				i++;  			}  			else {  				var sleepTime = 5 * 1000 * Math.Pow (2' i);  				if (sleepTime > 320 * 1000) {  					break;  				}  				Thread.Sleep ((int)sleepTime);  				i++;  			}  		}  		catch {  			var sleepTime = 250 * Math.Pow (2' i);  			if (sleepTime > 16 * 1000) {  				break;  			}  			Thread.Sleep ((int)sleepTime);  			i++;  		}  	}  	while (res == null);  	var sr = new StreamReader (res.GetResponseStream ());  	while (isStartedUserStream == true) {  		try {  			string Text = sr.ReadLine ();  			if (Text != null && Text.Length > 0) {  				ParseJsonOfUserStream (Text);  			}  			else {  				Thread.Sleep (100);  			}  		}  		catch {  			break;  		}  	}  	try {  		res.Close ();  	}  	catch {  	}  }  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: while (isStartedUserStream) {  	WebResponse res = null;  	int i = 0;  	var method = "GET";  	string headerString;  	string url;  	if (IsGetAllReplies) {  		url = APIurl.userStreamUrl + "?replies=all";  		headerString = oah.BuildHeaderString (HttpUtility.UrlEncode (APIurl.userStreamUrl)' method' ""' "replies=all");  	}  	else {  		url = APIurl.userStreamUrl;  		headerString = oah.BuildHeaderString (HttpUtility.UrlEncode (APIurl.userStreamUrl)' method' ""' "");  	}  	do {  		var req = (HttpWebRequest)HttpWebRequest.Create (url);  		req.Method = method;  		req.Headers.Add (HttpRequestHeader.Authorization' headerString);  		req.Timeout = Timeout.Infinite;  		req.ServicePoint.Expect100Continue = false;  		try {  			res = req.GetResponse ();  			i = 0;  		}  		catch (WebException e) {  			if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  				var sleepTime = 5 * 1000 * Math.Pow (2' i);  				if (sleepTime > 300 * 100 * 1000) {  					break;  				}  				Thread.Sleep ((int)sleepTime);  				i++;  			}  			else {  				var sleepTime = 5 * 1000 * Math.Pow (2' i);  				if (sleepTime > 320 * 1000) {  					break;  				}  				Thread.Sleep ((int)sleepTime);  				i++;  			}  		}  		catch {  			var sleepTime = 250 * Math.Pow (2' i);  			if (sleepTime > 16 * 1000) {  				break;  			}  			Thread.Sleep ((int)sleepTime);  			i++;  		}  	}  	while (res == null);  	var sr = new StreamReader (res.GetResponseStream ());  	while (isStartedUserStream == true) {  		try {  			string Text = sr.ReadLine ();  			if (Text != null && Text.Length > 0) {  				ParseJsonOfUserStream (Text);  			}  			else {  				Thread.Sleep (100);  			}  		}  		catch {  			break;  		}  	}  	try {  		res.Close ();  	}  	catch {  	}  }  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: while (isStartedUserStream) {  	WebResponse res = null;  	int i = 0;  	var method = "GET";  	string headerString;  	string url;  	if (IsGetAllReplies) {  		url = APIurl.userStreamUrl + "?replies=all";  		headerString = oah.BuildHeaderString (HttpUtility.UrlEncode (APIurl.userStreamUrl)' method' ""' "replies=all");  	}  	else {  		url = APIurl.userStreamUrl;  		headerString = oah.BuildHeaderString (HttpUtility.UrlEncode (APIurl.userStreamUrl)' method' ""' "");  	}  	do {  		var req = (HttpWebRequest)HttpWebRequest.Create (url);  		req.Method = method;  		req.Headers.Add (HttpRequestHeader.Authorization' headerString);  		req.Timeout = Timeout.Infinite;  		req.ServicePoint.Expect100Continue = false;  		try {  			res = req.GetResponse ();  			i = 0;  		}  		catch (WebException e) {  			if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  				var sleepTime = 5 * 1000 * Math.Pow (2' i);  				if (sleepTime > 300 * 100 * 1000) {  					break;  				}  				Thread.Sleep ((int)sleepTime);  				i++;  			}  			else {  				var sleepTime = 5 * 1000 * Math.Pow (2' i);  				if (sleepTime > 320 * 1000) {  					break;  				}  				Thread.Sleep ((int)sleepTime);  				i++;  			}  		}  		catch {  			var sleepTime = 250 * Math.Pow (2' i);  			if (sleepTime > 16 * 1000) {  				break;  			}  			Thread.Sleep ((int)sleepTime);  			i++;  		}  	}  	while (res == null);  	var sr = new StreamReader (res.GetResponseStream ());  	while (isStartedUserStream == true) {  		try {  			string Text = sr.ReadLine ();  			if (Text != null && Text.Length > 0) {  				ParseJsonOfUserStream (Text);  			}  			else {  				Thread.Sleep (100);  			}  		}  		catch {  			break;  		}  	}  	try {  		res.Close ();  	}  	catch {  	}  }  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: while (isStartedUserStream) {  	WebResponse res = null;  	int i = 0;  	var method = "GET";  	string headerString;  	string url;  	if (IsGetAllReplies) {  		url = APIurl.userStreamUrl + "?replies=all";  		headerString = oah.BuildHeaderString (HttpUtility.UrlEncode (APIurl.userStreamUrl)' method' ""' "replies=all");  	}  	else {  		url = APIurl.userStreamUrl;  		headerString = oah.BuildHeaderString (HttpUtility.UrlEncode (APIurl.userStreamUrl)' method' ""' "");  	}  	do {  		var req = (HttpWebRequest)HttpWebRequest.Create (url);  		req.Method = method;  		req.Headers.Add (HttpRequestHeader.Authorization' headerString);  		req.Timeout = Timeout.Infinite;  		req.ServicePoint.Expect100Continue = false;  		try {  			res = req.GetResponse ();  			i = 0;  		}  		catch (WebException e) {  			if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  				var sleepTime = 5 * 1000 * Math.Pow (2' i);  				if (sleepTime > 300 * 100 * 1000) {  					break;  				}  				Thread.Sleep ((int)sleepTime);  				i++;  			}  			else {  				var sleepTime = 5 * 1000 * Math.Pow (2' i);  				if (sleepTime > 320 * 1000) {  					break;  				}  				Thread.Sleep ((int)sleepTime);  				i++;  			}  		}  		catch {  			var sleepTime = 250 * Math.Pow (2' i);  			if (sleepTime > 16 * 1000) {  				break;  			}  			Thread.Sleep ((int)sleepTime);  			i++;  		}  	}  	while (res == null);  	var sr = new StreamReader (res.GetResponseStream ());  	while (isStartedUserStream == true) {  		try {  			string Text = sr.ReadLine ();  			if (Text != null && Text.Length > 0) {  				ParseJsonOfUserStream (Text);  			}  			else {  				Thread.Sleep (100);  			}  		}  		catch {  			break;  		}  	}  	try {  		res.Close ();  	}  	catch {  	}  }  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: while (isStartedUserStream) {  	WebResponse res = null;  	int i = 0;  	var method = "GET";  	string headerString;  	string url;  	if (IsGetAllReplies) {  		url = APIurl.userStreamUrl + "?replies=all";  		headerString = oah.BuildHeaderString (HttpUtility.UrlEncode (APIurl.userStreamUrl)' method' ""' "replies=all");  	}  	else {  		url = APIurl.userStreamUrl;  		headerString = oah.BuildHeaderString (HttpUtility.UrlEncode (APIurl.userStreamUrl)' method' ""' "");  	}  	do {  		var req = (HttpWebRequest)HttpWebRequest.Create (url);  		req.Method = method;  		req.Headers.Add (HttpRequestHeader.Authorization' headerString);  		req.Timeout = Timeout.Infinite;  		req.ServicePoint.Expect100Continue = false;  		try {  			res = req.GetResponse ();  			i = 0;  		}  		catch (WebException e) {  			if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  				var sleepTime = 5 * 1000 * Math.Pow (2' i);  				if (sleepTime > 300 * 100 * 1000) {  					break;  				}  				Thread.Sleep ((int)sleepTime);  				i++;  			}  			else {  				var sleepTime = 5 * 1000 * Math.Pow (2' i);  				if (sleepTime > 320 * 1000) {  					break;  				}  				Thread.Sleep ((int)sleepTime);  				i++;  			}  		}  		catch {  			var sleepTime = 250 * Math.Pow (2' i);  			if (sleepTime > 16 * 1000) {  				break;  			}  			Thread.Sleep ((int)sleepTime);  			i++;  		}  	}  	while (res == null);  	var sr = new StreamReader (res.GetResponseStream ());  	while (isStartedUserStream == true) {  		try {  			string Text = sr.ReadLine ();  			if (Text != null && Text.Length > 0) {  				ParseJsonOfUserStream (Text);  			}  			else {  				Thread.Sleep (100);  			}  		}  		catch {  			break;  		}  	}  	try {  		res.Close ();  	}  	catch {  	}  }  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: while (isStartedUserStream) {  	WebResponse res = null;  	int i = 0;  	var method = "GET";  	string headerString;  	string url;  	if (IsGetAllReplies) {  		url = APIurl.userStreamUrl + "?replies=all";  		headerString = oah.BuildHeaderString (HttpUtility.UrlEncode (APIurl.userStreamUrl)' method' ""' "replies=all");  	}  	else {  		url = APIurl.userStreamUrl;  		headerString = oah.BuildHeaderString (HttpUtility.UrlEncode (APIurl.userStreamUrl)' method' ""' "");  	}  	do {  		var req = (HttpWebRequest)HttpWebRequest.Create (url);  		req.Method = method;  		req.Headers.Add (HttpRequestHeader.Authorization' headerString);  		req.Timeout = Timeout.Infinite;  		req.ServicePoint.Expect100Continue = false;  		try {  			res = req.GetResponse ();  			i = 0;  		}  		catch (WebException e) {  			if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  				var sleepTime = 5 * 1000 * Math.Pow (2' i);  				if (sleepTime > 300 * 100 * 1000) {  					break;  				}  				Thread.Sleep ((int)sleepTime);  				i++;  			}  			else {  				var sleepTime = 5 * 1000 * Math.Pow (2' i);  				if (sleepTime > 320 * 1000) {  					break;  				}  				Thread.Sleep ((int)sleepTime);  				i++;  			}  		}  		catch {  			var sleepTime = 250 * Math.Pow (2' i);  			if (sleepTime > 16 * 1000) {  				break;  			}  			Thread.Sleep ((int)sleepTime);  			i++;  		}  	}  	while (res == null);  	var sr = new StreamReader (res.GetResponseStream ());  	while (isStartedUserStream == true) {  		try {  			string Text = sr.ReadLine ();  			if (Text != null && Text.Length > 0) {  				ParseJsonOfUserStream (Text);  			}  			else {  				Thread.Sleep (100);  			}  		}  		catch {  			break;  		}  	}  	try {  		res.Close ();  	}  	catch {  	}  }  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: do {  	var req = (HttpWebRequest)HttpWebRequest.Create (url);  	req.Method = method;  	req.Headers.Add (HttpRequestHeader.Authorization' headerString);  	req.Timeout = Timeout.Infinite;  	req.ServicePoint.Expect100Continue = false;  	try {  		res = req.GetResponse ();  		i = 0;  	}  	catch (WebException e) {  		if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  			var sleepTime = 5 * 1000 * Math.Pow (2' i);  			if (sleepTime > 300 * 100 * 1000) {  				break;  			}  			Thread.Sleep ((int)sleepTime);  			i++;  		}  		else {  			var sleepTime = 5 * 1000 * Math.Pow (2' i);  			if (sleepTime > 320 * 1000) {  				break;  			}  			Thread.Sleep ((int)sleepTime);  			i++;  		}  	}  	catch {  		var sleepTime = 250 * Math.Pow (2' i);  		if (sleepTime > 16 * 1000) {  			break;  		}  		Thread.Sleep ((int)sleepTime);  		i++;  	}  }  while (res == null);  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: do {  	var req = (HttpWebRequest)HttpWebRequest.Create (url);  	req.Method = method;  	req.Headers.Add (HttpRequestHeader.Authorization' headerString);  	req.Timeout = Timeout.Infinite;  	req.ServicePoint.Expect100Continue = false;  	try {  		res = req.GetResponse ();  		i = 0;  	}  	catch (WebException e) {  		if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  			var sleepTime = 5 * 1000 * Math.Pow (2' i);  			if (sleepTime > 300 * 100 * 1000) {  				break;  			}  			Thread.Sleep ((int)sleepTime);  			i++;  		}  		else {  			var sleepTime = 5 * 1000 * Math.Pow (2' i);  			if (sleepTime > 320 * 1000) {  				break;  			}  			Thread.Sleep ((int)sleepTime);  			i++;  		}  	}  	catch {  		var sleepTime = 250 * Math.Pow (2' i);  		if (sleepTime > 16 * 1000) {  			break;  		}  		Thread.Sleep ((int)sleepTime);  		i++;  	}  }  while (res == null);  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: do {  	var req = (HttpWebRequest)HttpWebRequest.Create (url);  	req.Method = method;  	req.Headers.Add (HttpRequestHeader.Authorization' headerString);  	req.Timeout = Timeout.Infinite;  	req.ServicePoint.Expect100Continue = false;  	try {  		res = req.GetResponse ();  		i = 0;  	}  	catch (WebException e) {  		if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  			var sleepTime = 5 * 1000 * Math.Pow (2' i);  			if (sleepTime > 300 * 100 * 1000) {  				break;  			}  			Thread.Sleep ((int)sleepTime);  			i++;  		}  		else {  			var sleepTime = 5 * 1000 * Math.Pow (2' i);  			if (sleepTime > 320 * 1000) {  				break;  			}  			Thread.Sleep ((int)sleepTime);  			i++;  		}  	}  	catch {  		var sleepTime = 250 * Math.Pow (2' i);  		if (sleepTime > 16 * 1000) {  			break;  		}  		Thread.Sleep ((int)sleepTime);  		i++;  	}  }  while (res == null);  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: do {  	var req = (HttpWebRequest)HttpWebRequest.Create (url);  	req.Method = method;  	req.Headers.Add (HttpRequestHeader.Authorization' headerString);  	req.Timeout = Timeout.Infinite;  	req.ServicePoint.Expect100Continue = false;  	try {  		res = req.GetResponse ();  		i = 0;  	}  	catch (WebException e) {  		if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  			var sleepTime = 5 * 1000 * Math.Pow (2' i);  			if (sleepTime > 300 * 100 * 1000) {  				break;  			}  			Thread.Sleep ((int)sleepTime);  			i++;  		}  		else {  			var sleepTime = 5 * 1000 * Math.Pow (2' i);  			if (sleepTime > 320 * 1000) {  				break;  			}  			Thread.Sleep ((int)sleepTime);  			i++;  		}  	}  	catch {  		var sleepTime = 250 * Math.Pow (2' i);  		if (sleepTime > 16 * 1000) {  			break;  		}  		Thread.Sleep ((int)sleepTime);  		i++;  	}  }  while (res == null);  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: do {  	var req = (HttpWebRequest)HttpWebRequest.Create (url);  	req.Method = method;  	req.Headers.Add (HttpRequestHeader.Authorization' headerString);  	req.Timeout = Timeout.Infinite;  	req.ServicePoint.Expect100Continue = false;  	try {  		res = req.GetResponse ();  		i = 0;  	}  	catch (WebException e) {  		if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  			var sleepTime = 5 * 1000 * Math.Pow (2' i);  			if (sleepTime > 300 * 100 * 1000) {  				break;  			}  			Thread.Sleep ((int)sleepTime);  			i++;  		}  		else {  			var sleepTime = 5 * 1000 * Math.Pow (2' i);  			if (sleepTime > 320 * 1000) {  				break;  			}  			Thread.Sleep ((int)sleepTime);  			i++;  		}  	}  	catch {  		var sleepTime = 250 * Math.Pow (2' i);  		if (sleepTime > 16 * 1000) {  			break;  		}  		Thread.Sleep ((int)sleepTime);  		i++;  	}  }  while (res == null);  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: do {  	var req = (HttpWebRequest)HttpWebRequest.Create (url);  	req.Method = method;  	req.Headers.Add (HttpRequestHeader.Authorization' headerString);  	req.Timeout = Timeout.Infinite;  	req.ServicePoint.Expect100Continue = false;  	try {  		res = req.GetResponse ();  		i = 0;  	}  	catch (WebException e) {  		if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  			var sleepTime = 5 * 1000 * Math.Pow (2' i);  			if (sleepTime > 300 * 100 * 1000) {  				break;  			}  			Thread.Sleep ((int)sleepTime);  			i++;  		}  		else {  			var sleepTime = 5 * 1000 * Math.Pow (2' i);  			if (sleepTime > 320 * 1000) {  				break;  			}  			Thread.Sleep ((int)sleepTime);  			i++;  		}  	}  	catch {  		var sleepTime = 250 * Math.Pow (2' i);  		if (sleepTime > 16 * 1000) {  			break;  		}  		Thread.Sleep ((int)sleepTime);  		i++;  	}  }  while (res == null);  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: do {  	var req = (HttpWebRequest)HttpWebRequest.Create (url);  	req.Method = method;  	req.Headers.Add (HttpRequestHeader.Authorization' headerString);  	req.Timeout = Timeout.Infinite;  	req.ServicePoint.Expect100Continue = false;  	try {  		res = req.GetResponse ();  		i = 0;  	}  	catch (WebException e) {  		if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  			var sleepTime = 5 * 1000 * Math.Pow (2' i);  			if (sleepTime > 300 * 100 * 1000) {  				break;  			}  			Thread.Sleep ((int)sleepTime);  			i++;  		}  		else {  			var sleepTime = 5 * 1000 * Math.Pow (2' i);  			if (sleepTime > 320 * 1000) {  				break;  			}  			Thread.Sleep ((int)sleepTime);  			i++;  		}  	}  	catch {  		var sleepTime = 250 * Math.Pow (2' i);  		if (sleepTime > 16 * 1000) {  			break;  		}  		Thread.Sleep ((int)sleepTime);  		i++;  	}  }  while (res == null);  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: do {  	var req = (HttpWebRequest)HttpWebRequest.Create (url);  	req.Method = method;  	req.Headers.Add (HttpRequestHeader.Authorization' headerString);  	req.Timeout = Timeout.Infinite;  	req.ServicePoint.Expect100Continue = false;  	try {  		res = req.GetResponse ();  		i = 0;  	}  	catch (WebException e) {  		if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  			var sleepTime = 5 * 1000 * Math.Pow (2' i);  			if (sleepTime > 300 * 100 * 1000) {  				break;  			}  			Thread.Sleep ((int)sleepTime);  			i++;  		}  		else {  			var sleepTime = 5 * 1000 * Math.Pow (2' i);  			if (sleepTime > 320 * 1000) {  				break;  			}  			Thread.Sleep ((int)sleepTime);  			i++;  		}  	}  	catch {  		var sleepTime = 250 * Math.Pow (2' i);  		if (sleepTime > 16 * 1000) {  			break;  		}  		Thread.Sleep ((int)sleepTime);  		i++;  	}  }  while (res == null);  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: do {  	var req = (HttpWebRequest)HttpWebRequest.Create (url);  	req.Method = method;  	req.Headers.Add (HttpRequestHeader.Authorization' headerString);  	req.Timeout = Timeout.Infinite;  	req.ServicePoint.Expect100Continue = false;  	try {  		res = req.GetResponse ();  		i = 0;  	}  	catch (WebException e) {  		if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  			var sleepTime = 5 * 1000 * Math.Pow (2' i);  			if (sleepTime > 300 * 100 * 1000) {  				break;  			}  			Thread.Sleep ((int)sleepTime);  			i++;  		}  		else {  			var sleepTime = 5 * 1000 * Math.Pow (2' i);  			if (sleepTime > 320 * 1000) {  				break;  			}  			Thread.Sleep ((int)sleepTime);  			i++;  		}  	}  	catch {  		var sleepTime = 250 * Math.Pow (2' i);  		if (sleepTime > 16 * 1000) {  			break;  		}  		Thread.Sleep ((int)sleepTime);  		i++;  	}  }  while (res == null);  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: do {  	var req = (HttpWebRequest)HttpWebRequest.Create (url);  	req.Method = method;  	req.Headers.Add (HttpRequestHeader.Authorization' headerString);  	req.Timeout = Timeout.Infinite;  	req.ServicePoint.Expect100Continue = false;  	try {  		res = req.GetResponse ();  		i = 0;  	}  	catch (WebException e) {  		if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  			var sleepTime = 5 * 1000 * Math.Pow (2' i);  			if (sleepTime > 300 * 100 * 1000) {  				break;  			}  			Thread.Sleep ((int)sleepTime);  			i++;  		}  		else {  			var sleepTime = 5 * 1000 * Math.Pow (2' i);  			if (sleepTime > 320 * 1000) {  				break;  			}  			Thread.Sleep ((int)sleepTime);  			i++;  		}  	}  	catch {  		var sleepTime = 250 * Math.Pow (2' i);  		if (sleepTime > 16 * 1000) {  			break;  		}  		Thread.Sleep ((int)sleepTime);  		i++;  	}  }  while (res == null);  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: do {  	var req = (HttpWebRequest)HttpWebRequest.Create (url);  	req.Method = method;  	req.Headers.Add (HttpRequestHeader.Authorization' headerString);  	req.Timeout = Timeout.Infinite;  	req.ServicePoint.Expect100Continue = false;  	try {  		res = req.GetResponse ();  		i = 0;  	}  	catch (WebException e) {  		if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  			var sleepTime = 5 * 1000 * Math.Pow (2' i);  			if (sleepTime > 300 * 100 * 1000) {  				break;  			}  			Thread.Sleep ((int)sleepTime);  			i++;  		}  		else {  			var sleepTime = 5 * 1000 * Math.Pow (2' i);  			if (sleepTime > 320 * 1000) {  				break;  			}  			Thread.Sleep ((int)sleepTime);  			i++;  		}  	}  	catch {  		var sleepTime = 250 * Math.Pow (2' i);  		if (sleepTime > 16 * 1000) {  			break;  		}  		Thread.Sleep ((int)sleepTime);  		i++;  	}  }  while (res == null);  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: do {  	var req = (HttpWebRequest)HttpWebRequest.Create (url);  	req.Method = method;  	req.Headers.Add (HttpRequestHeader.Authorization' headerString);  	req.Timeout = Timeout.Infinite;  	req.ServicePoint.Expect100Continue = false;  	try {  		res = req.GetResponse ();  		i = 0;  	}  	catch (WebException e) {  		if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  			var sleepTime = 5 * 1000 * Math.Pow (2' i);  			if (sleepTime > 300 * 100 * 1000) {  				break;  			}  			Thread.Sleep ((int)sleepTime);  			i++;  		}  		else {  			var sleepTime = 5 * 1000 * Math.Pow (2' i);  			if (sleepTime > 320 * 1000) {  				break;  			}  			Thread.Sleep ((int)sleepTime);  			i++;  		}  	}  	catch {  		var sleepTime = 250 * Math.Pow (2' i);  		if (sleepTime > 16 * 1000) {  			break;  		}  		Thread.Sleep ((int)sleepTime);  		i++;  	}  }  while (res == null);  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: do {  	var req = (HttpWebRequest)HttpWebRequest.Create (url);  	req.Method = method;  	req.Headers.Add (HttpRequestHeader.Authorization' headerString);  	req.Timeout = Timeout.Infinite;  	req.ServicePoint.Expect100Continue = false;  	try {  		res = req.GetResponse ();  		i = 0;  	}  	catch (WebException e) {  		if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  			var sleepTime = 5 * 1000 * Math.Pow (2' i);  			if (sleepTime > 300 * 100 * 1000) {  				break;  			}  			Thread.Sleep ((int)sleepTime);  			i++;  		}  		else {  			var sleepTime = 5 * 1000 * Math.Pow (2' i);  			if (sleepTime > 320 * 1000) {  				break;  			}  			Thread.Sleep ((int)sleepTime);  			i++;  		}  	}  	catch {  		var sleepTime = 250 * Math.Pow (2' i);  		if (sleepTime > 16 * 1000) {  			break;  		}  		Thread.Sleep ((int)sleepTime);  		i++;  	}  }  while (res == null);  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: do {  	var req = (HttpWebRequest)HttpWebRequest.Create (url);  	req.Method = method;  	req.Headers.Add (HttpRequestHeader.Authorization' headerString);  	req.Timeout = Timeout.Infinite;  	req.ServicePoint.Expect100Continue = false;  	try {  		res = req.GetResponse ();  		i = 0;  	}  	catch (WebException e) {  		if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  			var sleepTime = 5 * 1000 * Math.Pow (2' i);  			if (sleepTime > 300 * 100 * 1000) {  				break;  			}  			Thread.Sleep ((int)sleepTime);  			i++;  		}  		else {  			var sleepTime = 5 * 1000 * Math.Pow (2' i);  			if (sleepTime > 320 * 1000) {  				break;  			}  			Thread.Sleep ((int)sleepTime);  			i++;  		}  	}  	catch {  		var sleepTime = 250 * Math.Pow (2' i);  		if (sleepTime > 16 * 1000) {  			break;  		}  		Thread.Sleep ((int)sleepTime);  		i++;  	}  }  while (res == null);  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: do {  	var req = (HttpWebRequest)HttpWebRequest.Create (url);  	req.Method = method;  	req.Headers.Add (HttpRequestHeader.Authorization' headerString);  	req.Timeout = Timeout.Infinite;  	req.ServicePoint.Expect100Continue = false;  	try {  		res = req.GetResponse ();  		i = 0;  	}  	catch (WebException e) {  		if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  			var sleepTime = 5 * 1000 * Math.Pow (2' i);  			if (sleepTime > 300 * 100 * 1000) {  				break;  			}  			Thread.Sleep ((int)sleepTime);  			i++;  		}  		else {  			var sleepTime = 5 * 1000 * Math.Pow (2' i);  			if (sleepTime > 320 * 1000) {  				break;  			}  			Thread.Sleep ((int)sleepTime);  			i++;  		}  	}  	catch {  		var sleepTime = 250 * Math.Pow (2' i);  		if (sleepTime > 16 * 1000) {  			break;  		}  		Thread.Sleep ((int)sleepTime);  		i++;  	}  }  while (res == null);  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: do {  	var req = (HttpWebRequest)HttpWebRequest.Create (url);  	req.Method = method;  	req.Headers.Add (HttpRequestHeader.Authorization' headerString);  	req.Timeout = Timeout.Infinite;  	req.ServicePoint.Expect100Continue = false;  	try {  		res = req.GetResponse ();  		i = 0;  	}  	catch (WebException e) {  		if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  			var sleepTime = 5 * 1000 * Math.Pow (2' i);  			if (sleepTime > 300 * 100 * 1000) {  				break;  			}  			Thread.Sleep ((int)sleepTime);  			i++;  		}  		else {  			var sleepTime = 5 * 1000 * Math.Pow (2' i);  			if (sleepTime > 320 * 1000) {  				break;  			}  			Thread.Sleep ((int)sleepTime);  			i++;  		}  	}  	catch {  		var sleepTime = 250 * Math.Pow (2' i);  		if (sleepTime > 16 * 1000) {  			break;  		}  		Thread.Sleep ((int)sleepTime);  		i++;  	}  }  while (res == null);  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: try {  	res = req.GetResponse ();  	i = 0;  }  catch (WebException e) {  	if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  		var sleepTime = 5 * 1000 * Math.Pow (2' i);  		if (sleepTime > 300 * 100 * 1000) {  			break;  		}  		Thread.Sleep ((int)sleepTime);  		i++;  	}  	else {  		var sleepTime = 5 * 1000 * Math.Pow (2' i);  		if (sleepTime > 320 * 1000) {  			break;  		}  		Thread.Sleep ((int)sleepTime);  		i++;  	}  }  catch {  	var sleepTime = 250 * Math.Pow (2' i);  	if (sleepTime > 16 * 1000) {  		break;  	}  	Thread.Sleep ((int)sleepTime);  	i++;  }  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: try {  	res = req.GetResponse ();  	i = 0;  }  catch (WebException e) {  	if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  		var sleepTime = 5 * 1000 * Math.Pow (2' i);  		if (sleepTime > 300 * 100 * 1000) {  			break;  		}  		Thread.Sleep ((int)sleepTime);  		i++;  	}  	else {  		var sleepTime = 5 * 1000 * Math.Pow (2' i);  		if (sleepTime > 320 * 1000) {  			break;  		}  		Thread.Sleep ((int)sleepTime);  		i++;  	}  }  catch {  	var sleepTime = 250 * Math.Pow (2' i);  	if (sleepTime > 16 * 1000) {  		break;  	}  	Thread.Sleep ((int)sleepTime);  	i++;  }  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: try {  	res = req.GetResponse ();  	i = 0;  }  catch (WebException e) {  	if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  		var sleepTime = 5 * 1000 * Math.Pow (2' i);  		if (sleepTime > 300 * 100 * 1000) {  			break;  		}  		Thread.Sleep ((int)sleepTime);  		i++;  	}  	else {  		var sleepTime = 5 * 1000 * Math.Pow (2' i);  		if (sleepTime > 320 * 1000) {  			break;  		}  		Thread.Sleep ((int)sleepTime);  		i++;  	}  }  catch {  	var sleepTime = 250 * Math.Pow (2' i);  	if (sleepTime > 16 * 1000) {  		break;  	}  	Thread.Sleep ((int)sleepTime);  	i++;  }  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: try {  	res = req.GetResponse ();  	i = 0;  }  catch (WebException e) {  	if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  		var sleepTime = 5 * 1000 * Math.Pow (2' i);  		if (sleepTime > 300 * 100 * 1000) {  			break;  		}  		Thread.Sleep ((int)sleepTime);  		i++;  	}  	else {  		var sleepTime = 5 * 1000 * Math.Pow (2' i);  		if (sleepTime > 320 * 1000) {  			break;  		}  		Thread.Sleep ((int)sleepTime);  		i++;  	}  }  catch {  	var sleepTime = 250 * Math.Pow (2' i);  	if (sleepTime > 16 * 1000) {  		break;  	}  	Thread.Sleep ((int)sleepTime);  	i++;  }  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: try {  	res = req.GetResponse ();  	i = 0;  }  catch (WebException e) {  	if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  		var sleepTime = 5 * 1000 * Math.Pow (2' i);  		if (sleepTime > 300 * 100 * 1000) {  			break;  		}  		Thread.Sleep ((int)sleepTime);  		i++;  	}  	else {  		var sleepTime = 5 * 1000 * Math.Pow (2' i);  		if (sleepTime > 320 * 1000) {  			break;  		}  		Thread.Sleep ((int)sleepTime);  		i++;  	}  }  catch {  	var sleepTime = 250 * Math.Pow (2' i);  	if (sleepTime > 16 * 1000) {  		break;  	}  	Thread.Sleep ((int)sleepTime);  	i++;  }  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: try {  	res = req.GetResponse ();  	i = 0;  }  catch (WebException e) {  	if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  		var sleepTime = 5 * 1000 * Math.Pow (2' i);  		if (sleepTime > 300 * 100 * 1000) {  			break;  		}  		Thread.Sleep ((int)sleepTime);  		i++;  	}  	else {  		var sleepTime = 5 * 1000 * Math.Pow (2' i);  		if (sleepTime > 320 * 1000) {  			break;  		}  		Thread.Sleep ((int)sleepTime);  		i++;  	}  }  catch {  	var sleepTime = 250 * Math.Pow (2' i);  	if (sleepTime > 16 * 1000) {  		break;  	}  	Thread.Sleep ((int)sleepTime);  	i++;  }  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: try {  	res = req.GetResponse ();  	i = 0;  }  catch (WebException e) {  	if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  		var sleepTime = 5 * 1000 * Math.Pow (2' i);  		if (sleepTime > 300 * 100 * 1000) {  			break;  		}  		Thread.Sleep ((int)sleepTime);  		i++;  	}  	else {  		var sleepTime = 5 * 1000 * Math.Pow (2' i);  		if (sleepTime > 320 * 1000) {  			break;  		}  		Thread.Sleep ((int)sleepTime);  		i++;  	}  }  catch {  	var sleepTime = 250 * Math.Pow (2' i);  	if (sleepTime > 16 * 1000) {  		break;  	}  	Thread.Sleep ((int)sleepTime);  	i++;  }  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: try {  	res = req.GetResponse ();  	i = 0;  }  catch (WebException e) {  	if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  		var sleepTime = 5 * 1000 * Math.Pow (2' i);  		if (sleepTime > 300 * 100 * 1000) {  			break;  		}  		Thread.Sleep ((int)sleepTime);  		i++;  	}  	else {  		var sleepTime = 5 * 1000 * Math.Pow (2' i);  		if (sleepTime > 320 * 1000) {  			break;  		}  		Thread.Sleep ((int)sleepTime);  		i++;  	}  }  catch {  	var sleepTime = 250 * Math.Pow (2' i);  	if (sleepTime > 16 * 1000) {  		break;  	}  	Thread.Sleep ((int)sleepTime);  	i++;  }  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: try {  	res = req.GetResponse ();  	i = 0;  }  catch (WebException e) {  	if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  		var sleepTime = 5 * 1000 * Math.Pow (2' i);  		if (sleepTime > 300 * 100 * 1000) {  			break;  		}  		Thread.Sleep ((int)sleepTime);  		i++;  	}  	else {  		var sleepTime = 5 * 1000 * Math.Pow (2' i);  		if (sleepTime > 320 * 1000) {  			break;  		}  		Thread.Sleep ((int)sleepTime);  		i++;  	}  }  catch {  	var sleepTime = 250 * Math.Pow (2' i);  	if (sleepTime > 16 * 1000) {  		break;  	}  	Thread.Sleep ((int)sleepTime);  	i++;  }  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: try {  	res = req.GetResponse ();  	i = 0;  }  catch (WebException e) {  	if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  		var sleepTime = 5 * 1000 * Math.Pow (2' i);  		if (sleepTime > 300 * 100 * 1000) {  			break;  		}  		Thread.Sleep ((int)sleepTime);  		i++;  	}  	else {  		var sleepTime = 5 * 1000 * Math.Pow (2' i);  		if (sleepTime > 320 * 1000) {  			break;  		}  		Thread.Sleep ((int)sleepTime);  		i++;  	}  }  catch {  	var sleepTime = 250 * Math.Pow (2' i);  	if (sleepTime > 16 * 1000) {  		break;  	}  	Thread.Sleep ((int)sleepTime);  	i++;  }  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: try {  	res = req.GetResponse ();  	i = 0;  }  catch (WebException e) {  	if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  		var sleepTime = 5 * 1000 * Math.Pow (2' i);  		if (sleepTime > 300 * 100 * 1000) {  			break;  		}  		Thread.Sleep ((int)sleepTime);  		i++;  	}  	else {  		var sleepTime = 5 * 1000 * Math.Pow (2' i);  		if (sleepTime > 320 * 1000) {  			break;  		}  		Thread.Sleep ((int)sleepTime);  		i++;  	}  }  catch {  	var sleepTime = 250 * Math.Pow (2' i);  	if (sleepTime > 16 * 1000) {  		break;  	}  	Thread.Sleep ((int)sleepTime);  	i++;  }  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: try {  	res = req.GetResponse ();  	i = 0;  }  catch (WebException e) {  	if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  		var sleepTime = 5 * 1000 * Math.Pow (2' i);  		if (sleepTime > 300 * 100 * 1000) {  			break;  		}  		Thread.Sleep ((int)sleepTime);  		i++;  	}  	else {  		var sleepTime = 5 * 1000 * Math.Pow (2' i);  		if (sleepTime > 320 * 1000) {  			break;  		}  		Thread.Sleep ((int)sleepTime);  		i++;  	}  }  catch {  	var sleepTime = 250 * Math.Pow (2' i);  	if (sleepTime > 16 * 1000) {  		break;  	}  	Thread.Sleep ((int)sleepTime);  	i++;  }  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: try {  	res = req.GetResponse ();  	i = 0;  }  catch (WebException e) {  	if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  		var sleepTime = 5 * 1000 * Math.Pow (2' i);  		if (sleepTime > 300 * 100 * 1000) {  			break;  		}  		Thread.Sleep ((int)sleepTime);  		i++;  	}  	else {  		var sleepTime = 5 * 1000 * Math.Pow (2' i);  		if (sleepTime > 320 * 1000) {  			break;  		}  		Thread.Sleep ((int)sleepTime);  		i++;  	}  }  catch {  	var sleepTime = 250 * Math.Pow (2' i);  	if (sleepTime > 16 * 1000) {  		break;  	}  	Thread.Sleep ((int)sleepTime);  	i++;  }  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: try {  	res = req.GetResponse ();  	i = 0;  }  catch (WebException e) {  	if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  		var sleepTime = 5 * 1000 * Math.Pow (2' i);  		if (sleepTime > 300 * 100 * 1000) {  			break;  		}  		Thread.Sleep ((int)sleepTime);  		i++;  	}  	else {  		var sleepTime = 5 * 1000 * Math.Pow (2' i);  		if (sleepTime > 320 * 1000) {  			break;  		}  		Thread.Sleep ((int)sleepTime);  		i++;  	}  }  catch {  	var sleepTime = 250 * Math.Pow (2' i);  	if (sleepTime > 16 * 1000) {  		break;  	}  	Thread.Sleep ((int)sleepTime);  	i++;  }  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: try {  	res = req.GetResponse ();  	i = 0;  }  catch (WebException e) {  	if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  		var sleepTime = 5 * 1000 * Math.Pow (2' i);  		if (sleepTime > 300 * 100 * 1000) {  			break;  		}  		Thread.Sleep ((int)sleepTime);  		i++;  	}  	else {  		var sleepTime = 5 * 1000 * Math.Pow (2' i);  		if (sleepTime > 320 * 1000) {  			break;  		}  		Thread.Sleep ((int)sleepTime);  		i++;  	}  }  catch {  	var sleepTime = 250 * Math.Pow (2' i);  	if (sleepTime > 16 * 1000) {  		break;  	}  	Thread.Sleep ((int)sleepTime);  	i++;  }  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: try {  	res = req.GetResponse ();  	i = 0;  }  catch (WebException e) {  	if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  		var sleepTime = 5 * 1000 * Math.Pow (2' i);  		if (sleepTime > 300 * 100 * 1000) {  			break;  		}  		Thread.Sleep ((int)sleepTime);  		i++;  	}  	else {  		var sleepTime = 5 * 1000 * Math.Pow (2' i);  		if (sleepTime > 320 * 1000) {  			break;  		}  		Thread.Sleep ((int)sleepTime);  		i++;  	}  }  catch {  	var sleepTime = 250 * Math.Pow (2' i);  	if (sleepTime > 16 * 1000) {  		break;  	}  	Thread.Sleep ((int)sleepTime);  	i++;  }  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  	var sleepTime = 5 * 1000 * Math.Pow (2' i);  	if (sleepTime > 300 * 100 * 1000) {  		break;  	}  	Thread.Sleep ((int)sleepTime);  	i++;  }  else {  	var sleepTime = 5 * 1000 * Math.Pow (2' i);  	if (sleepTime > 320 * 1000) {  		break;  	}  	Thread.Sleep ((int)sleepTime);  	i++;  }  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  	var sleepTime = 5 * 1000 * Math.Pow (2' i);  	if (sleepTime > 300 * 100 * 1000) {  		break;  	}  	Thread.Sleep ((int)sleepTime);  	i++;  }  else {  	var sleepTime = 5 * 1000 * Math.Pow (2' i);  	if (sleepTime > 320 * 1000) {  		break;  	}  	Thread.Sleep ((int)sleepTime);  	i++;  }  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  	var sleepTime = 5 * 1000 * Math.Pow (2' i);  	if (sleepTime > 300 * 100 * 1000) {  		break;  	}  	Thread.Sleep ((int)sleepTime);  	i++;  }  else {  	var sleepTime = 5 * 1000 * Math.Pow (2' i);  	if (sleepTime > 320 * 1000) {  		break;  	}  	Thread.Sleep ((int)sleepTime);  	i++;  }  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  	var sleepTime = 5 * 1000 * Math.Pow (2' i);  	if (sleepTime > 300 * 100 * 1000) {  		break;  	}  	Thread.Sleep ((int)sleepTime);  	i++;  }  else {  	var sleepTime = 5 * 1000 * Math.Pow (2' i);  	if (sleepTime > 320 * 1000) {  		break;  	}  	Thread.Sleep ((int)sleepTime);  	i++;  }  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  	var sleepTime = 5 * 1000 * Math.Pow (2' i);  	if (sleepTime > 300 * 100 * 1000) {  		break;  	}  	Thread.Sleep ((int)sleepTime);  	i++;  }  else {  	var sleepTime = 5 * 1000 * Math.Pow (2' i);  	if (sleepTime > 320 * 1000) {  		break;  	}  	Thread.Sleep ((int)sleepTime);  	i++;  }  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  	var sleepTime = 5 * 1000 * Math.Pow (2' i);  	if (sleepTime > 300 * 100 * 1000) {  		break;  	}  	Thread.Sleep ((int)sleepTime);  	i++;  }  else {  	var sleepTime = 5 * 1000 * Math.Pow (2' i);  	if (sleepTime > 320 * 1000) {  		break;  	}  	Thread.Sleep ((int)sleepTime);  	i++;  }  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  	var sleepTime = 5 * 1000 * Math.Pow (2' i);  	if (sleepTime > 300 * 100 * 1000) {  		break;  	}  	Thread.Sleep ((int)sleepTime);  	i++;  }  else {  	var sleepTime = 5 * 1000 * Math.Pow (2' i);  	if (sleepTime > 320 * 1000) {  		break;  	}  	Thread.Sleep ((int)sleepTime);  	i++;  }  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  	var sleepTime = 5 * 1000 * Math.Pow (2' i);  	if (sleepTime > 300 * 100 * 1000) {  		break;  	}  	Thread.Sleep ((int)sleepTime);  	i++;  }  else {  	var sleepTime = 5 * 1000 * Math.Pow (2' i);  	if (sleepTime > 320 * 1000) {  		break;  	}  	Thread.Sleep ((int)sleepTime);  	i++;  }  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  	var sleepTime = 5 * 1000 * Math.Pow (2' i);  	if (sleepTime > 300 * 100 * 1000) {  		break;  	}  	Thread.Sleep ((int)sleepTime);  	i++;  }  else {  	var sleepTime = 5 * 1000 * Math.Pow (2' i);  	if (sleepTime > 320 * 1000) {  		break;  	}  	Thread.Sleep ((int)sleepTime);  	i++;  }  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  	var sleepTime = 5 * 1000 * Math.Pow (2' i);  	if (sleepTime > 300 * 100 * 1000) {  		break;  	}  	Thread.Sleep ((int)sleepTime);  	i++;  }  else {  	var sleepTime = 5 * 1000 * Math.Pow (2' i);  	if (sleepTime > 320 * 1000) {  		break;  	}  	Thread.Sleep ((int)sleepTime);  	i++;  }  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  	var sleepTime = 5 * 1000 * Math.Pow (2' i);  	if (sleepTime > 300 * 100 * 1000) {  		break;  	}  	Thread.Sleep ((int)sleepTime);  	i++;  }  else {  	var sleepTime = 5 * 1000 * Math.Pow (2' i);  	if (sleepTime > 320 * 1000) {  		break;  	}  	Thread.Sleep ((int)sleepTime);  	i++;  }  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: if ((int)((HttpWebResponse)e.Response).StatusCode == 420) {  	var sleepTime = 5 * 1000 * Math.Pow (2' i);  	if (sleepTime > 300 * 100 * 1000) {  		break;  	}  	Thread.Sleep ((int)sleepTime);  	i++;  }  else {  	var sleepTime = 5 * 1000 * Math.Pow (2' i);  	if (sleepTime > 320 * 1000) {  		break;  	}  	Thread.Sleep ((int)sleepTime);  	i++;  }  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: if (sleepTime > 300 * 100 * 1000) {  	break;  }  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: if (sleepTime > 300 * 100 * 1000) {  	break;  }  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: if (sleepTime > 300 * 100 * 1000) {  	break;  }  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: if (sleepTime > 320 * 1000) {  	break;  }  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: if (sleepTime > 320 * 1000) {  	break;  }  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: if (sleepTime > 16 * 1000) {  	break;  }  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: if (sleepTime > 16 * 1000) {  	break;  }  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: while (isStartedUserStream == true) {  	try {  		string Text = sr.ReadLine ();  		if (Text != null && Text.Length > 0) {  			ParseJsonOfUserStream (Text);  		}  		else {  			Thread.Sleep (100);  		}  	}  	catch {  		break;  	}  }  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: try {  	string Text = sr.ReadLine ();  	if (Text != null && Text.Length > 0) {  		ParseJsonOfUserStream (Text);  	}  	else {  		Thread.Sleep (100);  	}  }  catch {  	break;  }  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: if (Text != null && Text.Length > 0) {  	ParseJsonOfUserStream (Text);  }  else {  	Thread.Sleep (100);  }  
Magic Number,Rhinemaidens.TwitterAPI.Streaming,UserStream,C:\repos\mohemohe_Rhinemaidens.Lorelei\Lorelei\TwitterAPI\Streaming\UserStream.cs,GetUserStream,The following statement contains a magic number: Thread.Sleep (100);  
