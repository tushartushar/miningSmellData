Implementation smell,Namespace,Class,File,Method,Description
Magic Number,Xemio.GameLibrary.Rendering.Xna,XnaHelper,C:\repos\XemioNetwork_GameLibrary\Contrib\Rendering\Xemio.GameLibrary.Rendering.Xna\XnaHelper.cs,TryCreateDevice,The following statement contains a magic number: try              {                  Control control = new Control();                    var parameters = new PresentationParameters                  {                      BackBufferWidth = 400'                      BackBufferHeight = 300'                      BackBufferFormat = SurfaceFormat.Color'                      DepthStencilFormat = DepthFormat.Depth24'                      DeviceWindowHandle = control.Handle'                      PresentationInterval = PresentInterval.Immediate'                      IsFullScreen = false                  };                    //Just call the constructor to see if we can create a XNA graphics device                  new XnaGraphicsDevice(                      GraphicsAdapter.DefaultAdapter'                      GraphicsProfile.HiDef'                      parameters);                    return true;              }              catch (Exception ex)              {                  var eventManager = XGL.Components.Get<EventManager>();                  eventManager.Publish(new ExceptionEvent(ex));                    return false;              }
Magic Number,Xemio.GameLibrary.Rendering.Xna,XnaHelper,C:\repos\XemioNetwork_GameLibrary\Contrib\Rendering\Xemio.GameLibrary.Rendering.Xna\XnaHelper.cs,TryCreateDevice,The following statement contains a magic number: try              {                  Control control = new Control();                    var parameters = new PresentationParameters                  {                      BackBufferWidth = 400'                      BackBufferHeight = 300'                      BackBufferFormat = SurfaceFormat.Color'                      DepthStencilFormat = DepthFormat.Depth24'                      DeviceWindowHandle = control.Handle'                      PresentationInterval = PresentInterval.Immediate'                      IsFullScreen = false                  };                    //Just call the constructor to see if we can create a XNA graphics device                  new XnaGraphicsDevice(                      GraphicsAdapter.DefaultAdapter'                      GraphicsProfile.HiDef'                      parameters);                    return true;              }              catch (Exception ex)              {                  var eventManager = XGL.Components.Get<EventManager>();                  eventManager.Publish(new ExceptionEvent(ex));                    return false;              }
