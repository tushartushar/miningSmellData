Implementation smell,Namespace,Class,File,Method,Description
Long Method,Helpmebot.IRC,IrcClient,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\IRC\IrcClient.cs,RegisterConnection,The method has 134 lines of code.
Complex Method,Helpmebot.IRC,IrcClient,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\IRC\IrcClient.cs,OnMessageReceivedEvent,Cyclomatic complexity of the method is 19
Complex Method,Helpmebot.IRC,IrcClient,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\IRC\IrcClient.cs,RegisterConnection,Cyclomatic complexity of the method is 21
Complex Method,helpmebot6.Commands,Access,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Access.cs,ExecuteCommand,Cyclomatic complexity of the method is 31
Complex Method,helpmebot6.Commands,Afcbacklog,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Afcbacklog.cs,ExecuteCommand,Cyclomatic complexity of the method is 10
Complex Method,helpmebot6.Commands,Blockmonitor,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Blockmonitor.cs,ExecuteCommand,Cyclomatic complexity of the method is 9
Complex Method,helpmebot6.Commands,Autolink,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Autolink.cs,ExecuteCommand,Cyclomatic complexity of the method is 15
Complex Method,helpmebot6.Commands,Page,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Page.cs,ExecuteCommand,Cyclomatic complexity of the method is 23
Complex Method,helpmebot6.Commands,Registration,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Registration.cs,GetRegistrationDate,Cyclomatic complexity of the method is 8
Complex Method,helpmebot6.Commands,Rights,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Rights.cs,GetRights,Cyclomatic complexity of the method is 8
Complex Method,helpmebot6.Commands,Silence,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Silence.cs,ExecuteCommand,Cyclomatic complexity of the method is 16
Complex Method,helpmebot6.Commands,Welcomer,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Welcomer.cs,ExecuteCommand,Cyclomatic complexity of the method is 16
Complex Method,Helpmebot.Model.ModeMonitoring,ModeChanges,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Model\ModeMonitoring\ModeChanges.cs,FromChangeList,Cyclomatic complexity of the method is 46
Complex Method,Helpmebot.Services,JoinMessageService,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Services\JoinMessageService.cs,Welcome,Cyclomatic complexity of the method is 9
Complex Method,Helpmebot.Services,ModeMonitoringService,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Services\ModeMonitoringService.cs,OnMessageReceived,Cyclomatic complexity of the method is 8
Complex Method,Helpmebot.Services.Geolocation,IpInfoDbGeoloationService,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Services\Geolocation\IpInfoDbGeoloationService.cs,GetLocation,Cyclomatic complexity of the method is 28
Complex Method,Helpmebot.Monitoring,WatcherController,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Monitoring\WatcherController.cs,CompileMessage,Cyclomatic complexity of the method is 9
Complex Method,Helpmebot.Legacy,LegacyCommandParser,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\LegacyCommandParser.cs,HandleCommand,Cyclomatic complexity of the method is 13
Complex Method,Helpmebot.Legacy,LegacyCommandParser,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\LegacyCommandParser.cs,HandleCommandResponseHandler,Cyclomatic complexity of the method is 13
Long Parameter List,Helpmebot.Commands,CommandBase,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Commands\CommandBase.cs,CommandBase,The method has 7 parameters.
Long Parameter List,Helpmebot.Commands,CommandServiceHelper,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Commands\CommandServiceHelper.cs,CommandServiceHelper,The method has 7 parameters.
Long Parameter List,Helpmebot.Monitoring,WatcherController,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Monitoring\WatcherController.cs,WatcherController,The method has 8 parameters.
Long Statement,Helpmebot,AccessLog,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\AccessLog.cs,Save,The length of the statement  "	var insertCommand = new MySqlCommand ("INSERT INTO accesslog (al_nuh' al_accesslevel' al_reqaccesslevel' al_class'" + " al_allowed' al_channel' al_args) VALUES (@nuh' @accesslevel' " + "@reqaccesslevel' @class' @allowed' @channel' @args);"); " is 241.
Long Statement,Helpmebot,Linker,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Linker.cs,GetLink,The length of the statement  "	return links.Cast<string> ().Aggregate (string.Empty' (current' link) => current + " " + GetRealLink (destination' link' useSecureServer)); " is 139.
Long Statement,Helpmebot,Linker,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Linker.cs,Antispace,The length of the statement  "	return source.Replace (' '' '_').Replace ("%"' "%25").Replace ("!"' "%21").Replace ("*"' "%2A").Replace ("'"' "%27").Replace ("("' "%28").Replace (")"' "%29").Replace (";"' "%3B")// .Replace(":"' "%3A") " is 202.
Long Statement,Helpmebot,Linker,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Linker.cs,Antispace,The length of the statement  "	.Replace ("@"' "%40").Replace ("&"' "%26").Replace ("="' "%3D").Replace ("+"' "%2B").Replace ("$"' "%24").Replace ("'"' "%2C")// .Replace("/"' "%2F") " is 149.
Long Statement,Helpmebot,Helpmebot6,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Helpmebot.cs,InitialiseBot,The length of the statement  "		networkClient = new SslNetworkClient (configurationHelper.IrcConfiguration.Hostname' configurationHelper.IrcConfiguration.Port' container.Resolve<ILogger> ().CreateChildLogger ("NetworkClient")); " is 195.
Long Statement,Helpmebot,Helpmebot6,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Helpmebot.cs,InitialiseBot,The length of the statement  "		networkClient = new NetworkClient (configurationHelper.IrcConfiguration.Hostname' configurationHelper.IrcConfiguration.Port' container.Resolve<ILogger> ().CreateChildLogger ("NetworkClient")); " is 192.
Long Statement,Helpmebot,Helpmebot6,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Helpmebot.cs,InitialiseBot,The length of the statement  "	newIrc = new IrcClient (networkClient' container.Resolve<ILogger> ().CreateChildLogger ("IrcClient")' configurationHelper.IrcConfiguration' configurationHelper.PrivateConfiguration.IrcPassword); " is 194.
Long Statement,Helpmebot,Helpmebot6,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Helpmebot.cs,InitialiseBot,The length of the statement  "	var modeMonitor = new ModeMonitoringService (newIrc' container.Resolve<ILogger> ().CreateChildLogger ("ModeMonitoringService")); " is 128.
Long Statement,Helpmebot,Helpmebot6,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Helpmebot.cs,InitialiseBot,The length of the statement  "	container.Register (Component.For<IModeMonitoringService> ().Instance (modeMonitor).IsDefault ().NamedAutomatically ("modemon")); " is 129.
Long Statement,Helpmebot,Helpmebot6,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Helpmebot.cs,ReceivedMessage,The length of the statement  "	var cmd = new LegacyCommandParser (ServiceLocator.Current.GetInstance<ICommandServiceHelper> ()' Log.CreateChildLogger ("LegacyCommandParser")' ServiceLocator.Current.GetInstance<IRedirectionParserService> ()); " is 210.
Long Statement,Helpmebot.ExtensionMethods,MediaWikiSiteExtensions,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\ExtensionMethods\MediaWikiSiteExtensions.cs,GetBlockInformation,The length of the statement  "	string apiParams = string.Format ("{2}?action=query&list=blocks&bk{0}={1}&format=xml"' IPAddress.TryParse (userName' out ip) ? "ip" : "users"' userName' site.Api); " is 163.
Long Statement,Helpmebot.ExtensionMethods,MediaWikiSiteExtensions,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\ExtensionMethods\MediaWikiSiteExtensions.cs,GetCategorySize,The length of the statement  "	string apiCall = string.Format ("{1}?action=query&format=xml&prop=categoryinfo&titles=Category:{0}"' category' site.Api); " is 121.
Long Statement,Helpmebot.ExtensionMethods,CtcpExtensions,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\ExtensionMethods\CtcpExtensions.cs,SetupForCtcp,The length of the statement  "	return asc.GetString (ctcp) + ctcpCommand.ToUpper () + (message == string.Empty ? string.Empty : " " + message) + asc.GetString (ctcp); " is 135.
Long Statement,Helpmebot.IRC.Model,IrcChannelUser,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\IRC\Model\IrcChannelUser.cs,ToString,The length of the statement  "	return string.Format ("[{0} {1}{2} {3}]"' this.Channel' this.Operator ? "@" : string.Empty' this.Voice ? "+" : string.Empty' this.User); " is 136.
Long Statement,Helpmebot.IRC.Model,IrcChannelUser,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\IRC\Model\IrcChannelUser.cs,GetHashCode,The length of the statement  "		return ((this.User != null ? this.User.GetHashCode () : 0) * 397) ^ (this.Channel != null ? this.Channel.GetHashCode () : 0); " is 125.
Long Statement,Helpmebot.IRC.Messages,Message,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\IRC\Messages\Message.cs,Parse,The length of the statement  "			var parameterList = parameters.Substring (0' parameters.IndexOf (":"' StringComparison.Ordinal)).Split (separator' StringSplitOptions.RemoveEmptyEntries).ToList (); " is 164.
Long Statement,Helpmebot.IRC,IrcClient,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\IRC\IrcClient.cs,HandleWhoXReply,The length of the statement  "		/* >> :holmes.freenode.net 354 stwalkerster 001 #wikipedia-en-accounts ChanServ services.           ChanServ       H@  0" is 120.
Long Statement,Helpmebot.IRC,IrcClient,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\IRC\IrcClient.cs,HandleWhoXReply,The length of the statement  "                 * >> :holmes.freenode.net 354 stwalkerster 001 #wikipedia-en-accounts ~jamesur wikimedia/Jamesofur Jamesofur|away G  jamesofur" is 126.
Long Statement,Helpmebot.IRC,IrcClient,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\IRC\IrcClient.cs,OnNickChangeReceived,The length of the statement  "						this.logger.ErrorFormat ("Channel user {0} doesn't match irc user {1} for NICK in {2}"' channelUser.User' ircUser' channelPair.Value.Name); " is 139.
Long Statement,helpmebot6.Commands,Accstatus,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\AccBot\AccStatus.cs,ExecuteCommand,The length of the statement  "			string message = this.CommandServiceHelper.MessageService.RetrieveMessage ("CmdAccStatus"' this.Channel' messageParams); " is 120.
Long Statement,helpmebot6.Commands,Accdeploy,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\AccBot\AccDeploy.cs,ExecuteCommand,The length of the statement  "		this.CommandServiceHelper.Client.SendNotice (this.Source.Nickname' messageService.RetrieveMessage (Messages.NotEnoughParameters' this.Channel' messageParameters)); " is 163.
Long Statement,helpmebot6.Commands,Accdeploy,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\AccBot\AccDeploy.cs,EncodeMD5,The length of the statement  "	return BitConverter.ToString (System.Security.Cryptography.MD5.Create ().ComputeHash (new System.Text.UTF8Encoding ().GetBytes (s))).Replace ("-"' string.Empty).ToLower (); " is 172.
Long Statement,helpmebot6.Commands,Access,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Access.cs,ExecuteCommand,The length of the statement  "				return new CommandResponseHandler (messageService.RetrieveMessage ("notEnoughParameters"' this.Channel' messageParameters)); " is 124.
Long Statement,helpmebot6.Commands,Access,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Access.cs,ExecuteCommand,The length of the statement  "		return new CommandResponseHandler (messageService.RetrieveMessage ("notEnoughParameters"' this.Channel' messageParameters)); " is 124.
Long Statement,helpmebot6.Commands,Access,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Access.cs,OnAccessDenied,The length of the statement  "	var message = this.CommandServiceHelper.MessageService.RetrieveMessage ("CmdAccessAccessDenied"' this.Channel' new string[0]); " is 126.
Long Statement,helpmebot6.Commands,Access,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Access.cs,AddAccessEntry,The length of the statement  "	string message = this.CommandServiceHelper.MessageService.RetrieveMessage ("addAccessEntry"' this.Channel' messageParams); " is 122.
Long Statement,helpmebot6.Commands,Access,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Access.cs,AddAccessEntry,The length of the statement  "	ServiceLocator.Current.GetInstance<ILogger> ().Info (string.Format ("Adding access entry for {0} at level {1}"' newEntry' accessLevel)); " is 136.
Long Statement,helpmebot6.Commands,Access,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Access.cs,DeleteAccessEntry,The length of the statement  "	string message = this.CommandServiceHelper.MessageService.RetrieveMessage ("removeAccessEntry"' this.Channel' messageParams); " is 125.
Long Statement,helpmebot6.Commands,Afcbacklog,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Afcbacklog.cs,ExecuteCommand,The length of the statement  "		return new CommandResponseHandler ("Unknown error occurred' current status of AfC is unknown."' CommandResponseDestination.PrivateMessage); " is 139.
Long Statement,helpmebot6.Commands,Game,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\FunStuff\Game.cs,ExecuteCommand,The length of the statement  "	return new CommandResponseHandler (this.CommandServiceHelper.MessageService.RetrieveMessage ("TheGame"' this.Channel' null)); " is 125.
Long Statement,helpmebot6.Commands,Whistle,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\FunStuff\Whistle.cs,ExecuteCommand,The length of the statement  "	return new CommandResponseHandler (this.CommandServiceHelper.MessageService.RetrieveMessage ("CmdWhistle"' this.Channel' null)); " is 128.
Long Statement,helpmebot6.Commands,Refresh,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Refresh.cs,ExecuteCommand,The length of the statement  "	return new CommandResponseHandler (this.CommandServiceHelper.MessageService.Done (this.Channel)' CommandResponseDestination.PrivateMessage); " is 140.
Long Statement,helpmebot6.Commands,Whois,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Whois.cs,ExecuteCommand,The length of the statement  "		this.CommandServiceHelper.Client.SendNotice (this.Source.Nickname' messageService.RetrieveMessage (Messages.NotEnoughParameters' this.Channel' messageParameters)); " is 163.
Long Statement,helpmebot6.Commands,CategoryWatcher,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\CategoryWatcher.cs,ExecuteCommand,The length of the statement  "		Type subCmdType = Type.GetType ("helpmebot6.Commands.CategoryWatcherCommand." + this.Arguments [1].Substring (0' 1).ToUpper () + this.Arguments [1].Substring (1).ToLower ()); " is 174.
Long Statement,helpmebot6.Commands,CategoryWatcher,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\CategoryWatcher.cs,ExecuteCommand,The length of the statement  "			return ((GenericCommand)Activator.CreateInstance (subCmdType' this.Source' this.Channel' this.Arguments' this.CommandServiceHelper)).RunCommand (); " is 147.
Long Statement,helpmebot6.Commands,Autolink,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Autolink.cs,ExecuteCommand,The length of the statement  "	bool oldValue = bool.Parse (!global ? LegacyConfig.Singleton () ["autoLink"' this.Channel] : LegacyConfig.Singleton () ["autoLink"]); " is 133.
Long Statement,helpmebot6.Commands,Autolink,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Autolink.cs,ExecuteCommand,The length of the statement  "			return new CommandResponseHandler (messageService.RetrieveMessage (Messages.NoChange' this.Channel' null)' CommandResponseDestination.PrivateMessage); " is 150.
Long Statement,helpmebot6.Commands,Autolink,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Autolink.cs,ExecuteCommand,The length of the statement  "			return new CommandResponseHandler (messageService.RetrieveMessage (Messages.DefaultConfig' this.Channel' null)' CommandResponseDestination.PrivateMessage); " is 155.
Long Statement,helpmebot6.Commands,Autolink,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Autolink.cs,ExecuteCommand,The length of the statement  "		return new CommandResponseHandler (messageService.RetrieveMessage (Messages.Done' this.Channel' null)' CommandResponseDestination.PrivateMessage); " is 146.
Long Statement,helpmebot6.Commands,Autolink,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Autolink.cs,ExecuteCommand,The length of the statement  "	return new CommandResponseHandler (messageService.RetrieveMessage (Messages.NotEnoughParameters' this.Channel' mP)' CommandResponseDestination.PrivateMessage); " is 159.
Long Statement,helpmebot6.Commands,Configcacheclear,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Configcacheclear.cs,ExecuteCommand,The length of the statement  "	return new CommandResponseHandler (this.CommandServiceHelper.MessageService.RetrieveMessage (Messages.Done' this.Channel' null)); " is 129.
Long Statement,helpmebot6.Commands,Commandaccess,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Commandaccess.cs,ExecuteCommand,The length of the statement  "		Type cmd = Type.GetType ("helpmebot6.Commands." + this.Arguments [0].Substring (0' 1).ToUpper () + this.Arguments [0].Substring (1).ToLower ()); " is 144.
Long Statement,helpmebot6.Commands,Commandaccess,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Commandaccess.cs,ExecuteCommand,The length of the statement  "		new CommandResponseHandler (((GenericCommand)Activator.CreateInstance (cmd' this.Source' this.Channel' this.Arguments' this.CommandServiceHelper)).AccessLevel.ToString ()); " is 172.
Long Statement,helpmebot6.Commands,Commandaccess,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Commandaccess.cs,ExecuteCommand,The length of the statement  "	return new CommandResponseHandler (this.CommandServiceHelper.MessageService.RetrieveMessage (Messages.NotEnoughParameters' this.Channel' messageParameters)); " is 157.
Long Statement,helpmebot6.Commands,Categorysize,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\CategorySize.cs,ExecuteCommand,The length of the statement  "		return new CommandResponseHandler (this.CommandServiceHelper.MessageService.NotEnoughParameters (this.Channel' "CategorySize"' 1' 0)); " is 134.
Long Statement,helpmebot6.Commands,Charge,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\FunStuff\Charge.cs,ExecuteCommand,The length of the statement  "	return this.Arguments.Length > 0 ? new CommandResponseHandler (messageService.RetrieveMessage ("cmdChargeParam"' this.Channel' new[] { " is 134.
Long Statement,helpmebot6.Commands,Curl,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\FunStuff\Curl.cs,ExecuteCommand,The length of the statement  "	return new CommandResponseHandler (this.CommandServiceHelper.MessageService.RetrieveMessage ("HedgehogCurlup"' this.Channel' null)); " is 132.
Long Statement,helpmebot6.Commands,Uncurl,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\FunStuff\Uncurl.cs,ExecuteCommand,The length of the statement  "	return new CommandResponseHandler (this.CommandServiceHelper.MessageService.RetrieveMessage (Messages.Done' this.Channel' null)); " is 129.
Long Statement,helpmebot6.Commands,Vorticough,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\FunStuff\Vorticough.cs,ExecuteCommand,The length of the statement  "	return new CommandResponseHandler (this.CommandServiceHelper.MessageService.RetrieveMessage ("Vortigaunt"' this.Channel' null)); " is 128.
Long Statement,helpmebot6.Commands,Editcount,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Editcount.cs,GetEditCount,The length of the statement  "	var uri = string.Format ("{0}?format=xml&action=query&list=users&usprop=editcount&format=xml&ususers={1}"' mediaWikiSite.Api' username); " is 136.
Long Statement,helpmebot6.Commands,Editcount,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Editcount.cs,ExecuteCommand,The length of the statement  "		var xtoolsUrl = string.Format ("https://tools.wmflabs.org/xtools-ec/index.php?user={0}&project=en.wikipedia.org"' userName); " is 124.
Long Statement,helpmebot6.Commands,Decode,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Decode.cs,ExecuteCommand,The length of the statement  "		return new CommandResponseHandler (messageService.RetrieveMessage (Messages.NotEnoughParameters' this.Channel' messageParameters)); " is 131.
Long Statement,helpmebot6.Commands,Decode,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Decode.cs,ExecuteCommand,The length of the statement  "		return new CommandResponseHandler (messageService.RetrieveMessage ("hexDecodeResultNoResolve"' this.Channel' messageargs)); " is 123.
Long Statement,helpmebot6.Commands,Fetchall,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Fetchall.cs,ExecuteCommand,The length of the statement  "	Dictionary<string' Helpmebot.Monitoring.CategoryWatcher>.KeyCollection kc = WatcherController.Instance ().GetKeywords (); " is 121.
Long Statement,helpmebot6.Commands,Forget,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Forget.cs,ExecuteCommand,The length of the statement  "		this.CommandServiceHelper.Client.SendNotice (this.Source.Nickname' messageService.RetrieveMessage (Messages.NotEnoughParameters' this.Channel' messageParameters)); " is 163.
Long Statement,helpmebot6.Commands,Die,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Die.cs,NotConfirmed,The length of the statement  "	return new CommandResponseHandler (this.CommandServiceHelper.MessageService.RetrieveMessage ("Die-unconfirmed"' this.Channel' null)); " is 133.
Long Statement,helpmebot6.Commands,GenericCommand,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\GenericCommand.cs,OnAccessDenied,The length of the statement  "	if (!AccessLog.Instance ().Save (new AccessLog.AccessLogEntry (this.Source' this.GetType ()' false' this.Channel' this.Arguments' this.AccessLevel))) { " is 151.
Long Statement,helpmebot6.Commands,GenericCommand,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\GenericCommand.cs,ReallyRunCommand,The length of the statement  "	if (!AccessLog.Instance ().Save (new AccessLog.AccessLogEntry (this.Source' this.GetType ()' true' this.Channel' this.Arguments' this.AccessLevel))) { " is 150.
Long Statement,helpmebot6.Commands,GenericCommand,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\GenericCommand.cs,ReallyRunCommand,The length of the statement  "		string message = this.CommandServiceHelper.MessageService.RetrieveMessage ("AccessDeniedAccessListFailure"' this.Channel' null); " is 128.
Long Statement,helpmebot6.Commands,Geolocate,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Geolocate.cs,ExecuteCommand,The length of the statement  "		return new CommandResponseHandler (messageService.RetrieveMessage (Messages.NotEnoughParameters' this.Channel' messageParameters)); " is 131.
Long Statement,helpmebot6.Commands,Isgd,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Isgd.cs,ExecuteCommand,The length of the statement  "		return new CommandResponseHandler (this.CommandServiceHelper.MessageService.RetrieveMessage (Messages.NotEnoughParameters' this.Channel' messageParameters)); " is 157.
Long Statement,helpmebot6.Commands,Join,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Join.cs,ExecuteCommand,The length of the statement  "	return new CommandResponseHandler (this.CommandServiceHelper.MessageService.RetrieveMessage (Messages.NotEnoughParameters' this.Channel' messageParameters)); " is 157.
Long Statement,helpmebot6.Commands,Learn,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Learn.cs,ExecuteCommand,The length of the statement  "		this.CommandServiceHelper.Client.SendNotice (this.Source.Nickname' messageService.RetrieveMessage (Messages.NotEnoughParameters' this.Channel' messageParameters)); " is 163.
Long Statement,helpmebot6.Commands,Link,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Link.cs,ExecuteCommand,The length of the statement  "		string message = links.Cast<string> ().Aggregate (string.Empty' (current' link) => current + " " + Linker.GetRealLink (this.Channel' link' secure)); " is 148.
Long Statement,helpmebot6.Commands,Maxlag,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\MaxLag.cs,ExecuteCommand,The length of the statement  "	string message = this.CommandServiceHelper.MessageService.RetrieveMessage ("cmdMaxLag"' this.Channel' messageParameters); " is 121.
Long Statement,helpmebot6.Commands,Page,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Page.cs,ExecuteCommand,The length of the statement  "					protection.Add (new PageProtection (xtr.GetAttribute ("type")' xtr.GetAttribute ("level")' time == "infinity" ? DateTime.MaxValue : DateTime.Parse (time))); " is 156.
Long Statement,helpmebot6.Commands,Page,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Page.cs,GetApiCallUri,The length of the statement  "	var query = HttpUtility.ParseQueryString ("action=query&prop=revisions|info&rvprop=user|comment&redirects&inprop=protection&format=xml"); " is 137.
Long Statement,helpmebot6.Commands,Part,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Part.cs,ExecuteCommand,The length of the statement  "	string partMessage = this.CommandServiceHelper.MessageService.RetrieveMessage (Messages.RequestedBy' this.Channel' this.Source.ToString ().ToEnumerable ()); " is 156.
Long Statement,helpmebot6.Commands,ProtectedCommand,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\ProtectedCommand.cs,ReallyRunCommand,The length of the statement  "	if (!AccessLog.Instance ().Save (new AccessLog.AccessLogEntry (this.Source' this.GetType ()' true' this.Channel' this.Arguments' this.AccessLevel))) { " is 150.
Long Statement,helpmebot6.Commands,ProtectedCommand,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\ProtectedCommand.cs,ReallyRunCommand,The length of the statement  "		string message = this.CommandServiceHelper.MessageService.RetrieveMessage ("AccessDeniedAccessListFailure"' this.Channel' null); " is 128.
Long Statement,helpmebot6.Commands,Registration,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Registration.cs,GetRegistrationDate,The length of the statement  "	var uri = string.Format ("{0}?action=query&list=users&usprop=registration&format=xml&ususers={1}"' mediaWikiSite.Api' username); " is 128.
Long Statement,helpmebot6.Commands,Registration,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Registration.cs,ExecuteCommand,The length of the statement  "		string notEnoughParamsMessage = messageService.RetrieveMessage (Messages.NotEnoughParameters' this.Channel' messageParameters); " is 127.
Long Statement,helpmebot6.Commands,Resolve,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Resolve.cs,ExecuteCommand,The length of the statement  "		return new CommandResponseHandler (messageService.RetrieveMessage (Messages.NotEnoughParameters' this.Channel' messageParameters)); " is 131.
Long Statement,helpmebot6.Commands,Rights,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Rights.cs,GetRights,The length of the statement  "	var uri = string.Format ("{0}?action=query&list=users&usprop=groups&format=xml&ususers={1}"' mediaWikiSite.Api' username); " is 122.
Long Statement,helpmebot6.Commands,Sayhi,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\FunStuff\SayHi.cs,ExecuteCommand,The length of the statement  "	return new CommandResponseHandler (this.CommandServiceHelper.MessageService.RetrieveMessage ("cmdSayHi1"' this.Channel' commandParams)); " is 136.
Long Statement,helpmebot6.Commands,Silence,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Silence.cs,ExecuteCommand,The length of the statement  "	bool oldValue = bool.Parse (!global ? LegacyConfig.Singleton () ["silence"' this.Channel] : LegacyConfig.Singleton () ["silence"]); " is 131.
Long Statement,helpmebot6.Commands,Silence,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Silence.cs,ExecuteCommand,The length of the statement  "			return new CommandResponseHandler (messageService.RetrieveMessage (Messages.NoChange' this.Channel' null)' CommandResponseDestination.PrivateMessage); " is 150.
Long Statement,helpmebot6.Commands,Silence,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Silence.cs,ExecuteCommand,The length of the statement  "			return new CommandResponseHandler (messageService.RetrieveMessage (Messages.DefaultConfig' this.Channel' null)' CommandResponseDestination.PrivateMessage); " is 155.
Long Statement,helpmebot6.Commands,Silence,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Silence.cs,ExecuteCommand,The length of the statement  "		return new CommandResponseHandler (messageService.RetrieveMessage (Messages.Done' this.Channel' null)' CommandResponseDestination.PrivateMessage); " is 146.
Long Statement,helpmebot6.Commands,Silence,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Silence.cs,ExecuteCommand,The length of the statement  "	return new CommandResponseHandler (messageService.RetrieveMessage (Messages.NotEnoughParameters' this.Channel' mP)' CommandResponseDestination.PrivateMessage); " is 159.
Long Statement,helpmebot6.Commands,Uptime,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Uptime.cs,ExecuteCommand,The length of the statement  "	string message = this.CommandServiceHelper.MessageService.RetrieveMessage ("cmdUptimeUpSince"' this.Channel' messageParams); " is 124.
Long Statement,helpmebot6.Commands,Userinfo,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\UserInfo.cs,ExecuteCommand,The length of the statement  "		var notEnoughParamsMessage = messageService.RetrieveMessage (Messages.NotEnoughParameters' this.Channel' messageParameters); " is 124.
Long Statement,helpmebot6.Commands,Userinfo,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\UserInfo.cs,SendShortUserInfo,The length of the statement  "	var age = string.Format ("{0}y {1}d {2}h {3}m"' (userInformation.UserAge.Days / 365).ToString (CultureInfo.InvariantCulture)' (userInformation.UserAge.Days % 365).ToString (CultureInfo.InvariantCulture)' userInformation.UserAge.Hours.ToString (CultureInfo.InvariantCulture)' userInformation.UserAge.Minutes.ToString (CultureInfo.InvariantCulture)); " is 348.
Long Statement,helpmebot6.Commands,Userinfo,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\UserInfo.cs,SendShortUserInfo,The length of the statement  "	string message = this.CommandServiceHelper.MessageService.RetrieveMessage ("cmdUserInfoShort"' this.Channel' messageParameters); " is 128.
Long Statement,helpmebot6.Commands,Userinfo,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\UserInfo.cs,SendLongUserInfo,The length of the statement  "	var xtoolsUrl = string.Format ("https://tools.wmflabs.org/xtools-ec/index.php?user={0}&project=en.wikipedia.org"' userInformation.UserName); " is 140.
Long Statement,helpmebot6.Commands,Welcomer,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Welcomer.cs,ExecuteCommand,The length of the statement  "		response.Respond (this.CommandServiceHelper.MessageService.RetrieveMessage ("Welcomer-ObsoleteOption"' this.Channel' new[] { " is 124.
Long Statement,helpmebot6.Commands,Welcomer,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Welcomer.cs,DeleteMode,The length of the statement  "		var welcomeUsers = this.databaseSession.QueryOver<WelcomeUser> ().Where (x => x.Exception == exception && x.Host == implode && x.Channel == this.Channel).List (); " is 162.
Long Statement,Helpmebot.Commands.FunStuff,TargetedFunCommand,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\FunStuff\TargetedFunCommand.cs,ExecuteCommand,The length of the statement  "	string message = this.CommandServiceHelper.MessageService.RetrieveMessage (this.TargetMessage' this.Channel' messageparams); " is 124.
Long Statement,Helpmebot.Legacy.Database,LegacyDatabase,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Database\LegacyDatabase.cs,RunConnectionTest,The length of the statement  "		connectionOk = (this.connection.State == ConnectionState.Open) || (this.connection.State == ConnectionState.Fetching) || (this.connection.State == ConnectionState.Executing); " is 174.
Long Statement,Helpmebot.Model,FlagGroupUser,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Model\FlagGroupUser.cs,ToString,The length of the statement  "	return string.Format (@"{0}!{1}@{2} ({3}): {4}"' this.Nickname' this.Username' this.Hostname' this.Account' this.FlagGroup); " is 124.
Long Statement,Helpmebot.Model,Keyword,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Model\Keyword.cs,Equals,The length of the statement  "	return string.Equals (this.Name' other.Name) && string.Equals (this.Response' other.Response) && this.Action.Equals (other.Action); " is 131.
Long Statement,Helpmebot.Model,GeolocateResult,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Model\GeolocateResult.cs,ToString,The length of the statement  "		return string.Format ("Latitude: {0}N' Longitude: {1}E{2}"' this.Latitude.Value' this.Longitude.Value' estimatedLocation); " is 122.
Long Statement,Helpmebot.Repositories,KeywordRepository,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Repositories\KeywordRepository.cs,Create,The length of the statement  "		var existing = session.CreateCriteria<Keyword> ().Add (Restrictions.Eq ("Name"' name)).List<Keyword> ().FirstOrDefault () ?? new Keyword (); " is 140.
Long Statement,Helpmebot.Repositories,ShortUrlCacheRepository,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Repositories\ShortUrlCacheRepository.cs,GetShortUrl,The length of the statement  "			var shortUrlCacheEntry = session.CreateCriteria<ShortUrlCacheEntry> ().Add (Restrictions.Eq ("LongUrl"' longUrl)).List<ShortUrlCacheEntry> ().FirstOrDefault (); " is 160.
Long Statement,Helpmebot.Services,BlockMonitoringService,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Services\BlockMonitoringService.cs,DoEventProcessing,The length of the statement  "			var message = string.Format ("Joined user {0} ({4}{5}) in channel {1} is blocked ({2}) because: {3}"' user.Nickname' channel' blockInformation.Target' blockInformation.BlockReason' ip' orgname); " is 194.
Long Statement,Helpmebot.Services,BlockMonitoringService,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Services\BlockMonitoringService.cs,DeleteMap,The length of the statement  "		this.blockMonitorRepository.Delete (Restrictions.And (Restrictions.Eq ("MonitorChannel"' monitorChannel)' Restrictions.Eq ("ReportChannel"' reportChannel))); " is 157.
Long Statement,Helpmebot.Services,ModeMonitoringService,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Services\ModeMonitoringService.cs,OnNoticeReceived,The length of the statement  "			this.ircClient.SendMessage (this.watchedChannels [channel]' string.Format ("Unable to obtain ops from ChanServ in {0}; I won't be monitoring this channel for ban exemptions"' channel)); " is 185.
Long Statement,Helpmebot.Services,MessageService,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Services\MessageService.cs,GetMessageFromDatabase,The length of the statement  "		this.Log.InfoFormat ("Message {0} with context path {1} not found: Falling back to non-context-sensitive message."' messageKey' contextPath); " is 141.
Long Statement,Helpmebot.Services.Geolocation,IpInfoDbGeoloationService,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Services\Geolocation\IpInfoDbGeoloationService.cs,GetLocation,The length of the statement  "	var requestData = HttpRequest.Get ("https://api.ipinfodb.com/v3/ip-city/?key=" + this.apiKey + "&ip=" + address + "&format=xml"); " is 129.
Long Statement,Helpmebot.Services.UrlShortening,IsGdUrlShorteningService,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Services\UrlShortening\IsGdUrlShorteningService.cs,GetShortUrl,The length of the statement  "	var wrq = (HttpWebRequest)WebRequest.Create ("https://is.gd/create.php?format=simple&url=" + HttpUtility.UrlEncode (longUrl)); " is 126.
Long Statement,Helpmebot.Startup,DeferredWindsorBootstrap,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Startup\DeferredWindsorBootstrap.cs,Select,The length of the statement  "	var enumerable = orderedInstallers.Where (x => x.GetCustomAttributes (typeof(DeferredInstallerAttribute)' false).Any ()); " is 121.
Long Statement,Helpmebot.Startup,WindsorBootstrap,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Startup\WindsorBootstrap.cs,Select,The length of the statement  "	var enumerable = orderedInstallers.Where (x => !x.GetCustomAttributes (typeof(DeferredInstallerAttribute)' false).Any ()); " is 122.
Long Statement,Helpmebot.Startup,WindsorBootstrap,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Startup\WindsorBootstrap.cs,GetPriority,The length of the statement  "	var attribute = type.GetCustomAttributes (typeof(InstallerPriorityAttribute)' false).FirstOrDefault () as InstallerPriorityAttribute; " is 133.
Long Statement,Helpmebot.Startup.Facilities,PersistenceFacility,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Startup\Facilities\PersistenceFacility.cs,Init,The length of the statement  "	this.Kernel.Register (Component.For<ISessionFactory> ().UsingFactoryMethod (k => k.Resolve<ISessionFactoryProvider> ().SessionFactory)' Component.For<ISession> ().UsingFactoryMethod (k => k.Resolve<ISessionFactory> ().OpenSession ()).LifestyleTransient ()); " is 257.
Long Statement,Helpmebot.Startup.Facilities,PersistenceFacility,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Startup\Facilities\PersistenceFacility.cs,BuildDatabaseConfiguration,The length of the statement  "	return Fluently.Configure ().Database (this.SetupDatabase).Mappings (a => a.FluentMappings.AddFromAssemblyOf<EntityBase> ()).Cache (x => x.Not.UseSecondLevelCache ()).ExposeConfiguration (this.ConfigurePersistence).BuildConfiguration (); " is 237.
Long Statement,Helpmebot.Monitoring,CategoryWatcher,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Monitoring\CategoryWatcher.cs,WatcherThreadMethod,The length of the statement  "			// iteratively sleep (yuck) until we've got less than a second of our sleep remaining - sounds like a good enough tolerance for me. " is 131.
Long Statement,Helpmebot.Monitoring,CategoryWatcher,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Monitoring\CategoryWatcher.cs,WatcherThreadMethod,The length of the statement  "				this.logger.DebugFormat ("Thread has woken after {0}ms' with {1} ms remaining"' stopwatch.ElapsedMilliseconds' remaining); " is 122.
Long Statement,Helpmebot.Monitoring,WatcherController,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Monitoring\WatcherController.cs,AddWatcherToChannel,The length of the statement  "	var countCommand = new MySqlCommand ("SELECT COUNT(*) FROM channelwatchers WHERE cw_channel = @channel AND cw_watcher = @watcher;"); " is 132.
Long Statement,Helpmebot.Monitoring,WatcherController,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Monitoring\WatcherController.cs,IsWatcherInChannel,The length of the statement  "	var command = new MySqlCommand ("SELECT COUNT(*) FROM channelwatchers INNER JOIN channel ON cw_channel = channel_id INNER JOIN watcher ON cw_watcher = watcher_id WHERE channel_name = @channel AND watcher_keyword = @keyword;"); " is 226.
Long Statement,Helpmebot.Monitoring,WatcherController,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Monitoring\WatcherController.cs,RemoveWatcherFromChannel,The length of the statement  "	var deleteCommand = new MySqlCommand ("DELETE FROM channelwatchers WHERE cw_channel = @channel AND cw_watcher = @watcher;"); " is 124.
Long Statement,Helpmebot.Monitoring,WatcherController,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Monitoring\WatcherController.cs,SetDelay,The length of the statement  "		var command = new MySqlCommand ("UPDATE watcher SET watcher_sleeptime = @value WHERE watcher_keyword = @name LIMIT 1;"); " is 120.
Long Statement,Helpmebot.Monitoring,WatcherController,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Monitoring\WatcherController.cs,UpdateDatabaseTable,The length of the statement  "		var countCommand = new MySqlCommand ("SELECT COUNT(*) FROM categoryitems WHERE item_name = @name AND item_keyword = @keyword;"); " is 128.
Long Statement,Helpmebot.Monitoring,WatcherController,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Monitoring\WatcherController.cs,UpdateDatabaseTable,The length of the statement  "			var command = new MySqlCommand ("UPDATE categoryitems SET item_updateflag = 1 WHERE item_keyword = @keyword AND item_name = @name LIMIT 1;"); " is 141.
Long Statement,Helpmebot.Monitoring,WatcherController,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Monitoring\WatcherController.cs,UpdateDatabaseTable,The length of the statement  "	var deleteCommand = new MySqlCommand ("DELETE FROM categoryitems WHERE item_updateflag = 0 AND item_keyword = @keyword;"); " is 122.
Long Statement,Helpmebot.Monitoring,WatcherController,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Monitoring\WatcherController.cs,CategoryHasItemsEvent,The length of the statement  "	var query = new MySqlCommand ("SELECT channel_name FROM `watcher` INNER JOIN `channelwatchers` ON watcher_id = cw_watcher INNER JOIN `channel` ON channel_id = cw_channel WHERE watcher_keyword = @keyword;"); " is 206.
Long Statement,Helpmebot.Monitoring,WatcherController,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Monitoring\WatcherController.cs,CompileMessage,The length of the statement  "	bool showWaitTime = fakedestination != string.Empty && (LegacyConfig.Singleton () ["showWaitTime"' destination] == "true"); " is 123.
Long Statement,Helpmebot.Monitoring,WatcherController,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Monitoring\WatcherController.cs,CompileMessage,The length of the statement  "	bool shortenUrls = fakedestination != string.Empty && (LegacyConfig.Singleton () ["useShortUrlsInsteadOfWikilinks"' destination] == "true"); " is 140.
Long Statement,Helpmebot.Monitoring,WatcherController,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Monitoring\WatcherController.cs,CompileMessage,The length of the statement  "	bool showDelta = fakedestination != string.Empty && (LegacyConfig.Singleton () ["catWatcherShowDelta"' destination] == "true"); " is 127.
Long Statement,Helpmebot.Monitoring,WatcherController,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Monitoring\WatcherController.cs,CompileMessage,The length of the statement  "				var command = new MySqlCommand ("SELECT item_entrytime FROM categoryitems WHERE item_name = @name and item_keyword = @keyword;"); " is 129.
Long Statement,Helpmebot.Monitoring,WatcherController,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Monitoring\WatcherController.cs,CompileMessage,The length of the statement  "		string pluralString = items.Count () == 1 ? this.messageService.RetrieveMessage (keyword + "Singular"' destination' new[] { " is 123.
Long Statement,Helpmebot.Monitoring,WatcherController,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Monitoring\WatcherController.cs,CompileMessage,The length of the statement  "		message = this.messageService.RetrieveMessage (keyword + (showDelta ? "New" : string.Empty) + "HasItems"' destination' messageParams); " is 134.
Long Statement,helpmebot6.Commands.CategoryWatcherCommand,Delay,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\CategoryWatcherCommand\Delay.cs,ExecuteCommand,The length of the statement  "		string message = this.CommandServiceHelper.MessageService.RetrieveMessage ("catWatcherCurrentDelay"' this.Channel' messageParams); " is 130.
Long Statement,helpmebot6.Commands.CategoryWatcherCommand,Disable,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\CategoryWatcherCommand\Disable.cs,ExecuteCommand,The length of the statement  "	return new CommandResponseHandler (this.CommandServiceHelper.MessageService.RetrieveMessage (Messages.Done' this.Channel' null)); " is 129.
Long Statement,helpmebot6.Commands.CategoryWatcherCommand,Enable,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\CategoryWatcherCommand\Enable.cs,ExecuteCommand,The length of the statement  "	return WatcherController.Instance ().AddWatcherToChannel (this.Arguments [0]' this.Channel) ? new CommandResponseHandler (this.CommandServiceHelper.MessageService.RetrieveMessage (Messages.Done' this.Channel' null)) : new CommandResponseHandler (this.CommandServiceHelper.MessageService.RetrieveMessage (Messages.NoChange' this.Channel' null)); " is 344.
Long Statement,helpmebot6.Commands.CategoryWatcherCommand,Status,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\CategoryWatcherCommand\Status.cs,ExecuteCommand,The length of the statement  "		WatcherController.Instance ().IsWatcherInChannel (this.Channel' this.Arguments [0]) ? this.CommandServiceHelper.MessageService.RetrieveMessage (Messages.Enabled' this.Channel' null) : this.CommandServiceHelper.MessageService.RetrieveMessage (Messages.Disabled' this.Channel' null)' " is 281.
Long Statement,helpmebot6.Commands.CategoryWatcherCommand,Status,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\CategoryWatcherCommand\Status.cs,ExecuteCommand,The length of the statement  "	return new CommandResponseHandler (this.CommandServiceHelper.MessageService.RetrieveMessage ("keywordStatus"' this.Channel' messageParams)); " is 140.
Long Statement,helpmebot6.Commands.FunStuff,FunCommand,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\FunStuff\FunCommand.cs,OnAccessDenied,The length of the statement  "	string message = this.CommandServiceHelper.MessageService.RetrieveMessage (Messages.HedgehogAccessDenied' this.Channel' null); " is 126.
Long Statement,helpmebot6.Commands.FunStuff,FunCommand,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\FunStuff\FunCommand.cs,OnAccessDenied,The length of the statement  "	return LegacyConfig.Singleton () ["hedgehog"' this.Channel] == "false" ? base.OnAccessDenied () : new CommandResponseHandler (message' CommandResponseDestination.PrivateMessage); " is 178.
Long Statement,Helpmebot.Legacy,LegacyCommandParser,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\LegacyCommandParser.cs,IsRecognisedMessage,The length of the statement  "	return ParseRawLineForMessage (ref message' client.Nickname' this.commandServiceHelper.ConfigurationHelper.CoreConfiguration.CommandTrigger); " is 141.
Long Statement,Helpmebot.Legacy,LegacyCommandParser,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\LegacyCommandParser.cs,HandleCommand,The length of the statement  "		CommandResponseHandler crh = new CategoryWatcher (source' destination' redirectionResult.Message.ToArray ()' this.commandServiceHelper).RunCommand (); " is 150.
Long Statement,Helpmebot.Legacy,LegacyCommandParser,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\LegacyCommandParser.cs,HandleCommand,The length of the statement  "	Type commandHandler = Type.GetType ("helpmebot6.Commands." + command.Substring (0' 1).ToUpper () + command.Substring (1).ToLower ()); " is 133.
Long Statement,Helpmebot.Legacy,LegacyCommandParser,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\LegacyCommandParser.cs,HandleCommand,The length of the statement  "		var cmd = (GenericCommand)Activator.CreateInstance (commandHandler' source' destination' redirectionResult.Message.ToArray ()' this.commandServiceHelper); " is 154.
Long Statement,Helpmebot.Legacy,LegacyCommandParser,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\LegacyCommandParser.cs,HandleCommand,The length of the statement  "				crh.Respond (messageService1.RetrieveMessage (Messages.OnAccessDenied' destination' null)' CommandResponseDestination.PrivateMessage); " is 134.
Long Statement,Helpmebot.Legacy,LegacyCommandParser,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\LegacyCommandParser.cs,HandleCommand,The length of the statement  "				crh.Respond (messageService1.RetrieveMessage ("accessDeniedDebug"' destination' accessDeniedArguments)' CommandResponseDestination.ChannelDebug); " is 145.
Long Statement,Helpmebot.Legacy,LegacyCommandParser,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\LegacyCommandParser.cs,ParseRawLineForMessage,The length of the statement  "	var validCommand = new Regex (@"^(?:" + trigger + @"(?:(?<botname>" + nickname.ToLower () + @") )?(?<cmd>[" + AllowedCommandNameChars + "]+)|(?<botname>" + nickname.ToLower () + @")[ '>:](?: )?(?<cmd>[" + AllowedCommandNameChars + "]+))(?: )?(?<args>.*?)(?:\r)?$"); " is 265.
Long Statement,Helpmebot.Legacy.Configuration,LegacyConfig,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Configuration\LegacyConfig.cs,RetrieveOptionFromDatabase,The length of the statement  "		var command = new MySqlCommand ("SELECT configuration_value FROM `configuration` WHERE configuration_name = @name LIMIT 1;"); " is 125.
Long Statement,Helpmebot.Legacy.Configuration,LegacyConfig,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Configuration\LegacyConfig.cs,SetGlobalOption,The length of the statement  "	var command = new MySqlCommand ("UPDATE configuration SET configuration_value = @value WHERE configuration_name = @name LIMIT 1;"); " is 131.
Long Statement,Helpmebot.Legacy.Configuration,LegacyConfig,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Configuration\LegacyConfig.cs,SetLocalOption,The length of the statement  "	// INNER JOIN `channel` ON `channel_id` = `cc_channel` WHERE `channel_name` = '##helpmebot' AND `configuration_name` = 'silence' " is 128.
Long Statement,Helpmebot.Legacy.Configuration,LegacyConfig,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Configuration\LegacyConfig.cs,SetLocalOption,The length of the statement  "		var deleteCommand = new MySqlCommand ("DELETE FROM channelconfig WHERE cc_config = @config AND cc_channel = @channel LIMIT 1;"); " is 128.
Long Statement,Helpmebot.Legacy.Configuration,LegacyConfig,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Configuration\LegacyConfig.cs,SetLocalOption,The length of the statement  "	var selectCommand = new MySqlCommand ("SELECT COUNT(*) FROM channelconfig WHERE cc_channel = @channel AND cc_config = @config;"); " is 129.
Long Statement,Helpmebot.Legacy.Configuration,LegacyConfig,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Configuration\LegacyConfig.cs,SetLocalOption,The length of the statement  "		var command = new MySqlCommand ("UPDATE channelconfig SET cc_value = @value WHERE cc_channel = @channel AND cc_config = @name LIMIT 1;"); " is 137.
Long Statement,Helpmebot.Startup.Resolvers,AppSettingsDependencyResolver,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Startup\Resolvers\AppSettingsDependencyResolver.cs,CanResolve,The length of the statement  "	return ConfigurationManager.AppSettings.AllKeys.Contains (dependency.DependencyKey) && TypeDescriptor.GetConverter (dependency.TargetType).CanConvertFrom (typeof(string)); " is 171.
Long Statement,Helpmebot.Startup.Resolvers,AppSettingsDependencyResolver,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Startup\Resolvers\AppSettingsDependencyResolver.cs,Resolve,The length of the statement  "	return TypeDescriptor.GetConverter (dependency.TargetType).ConvertFrom (ConfigurationManager.AppSettings [dependency.DependencyKey]); " is 133.
Empty Catch Block,helpmebot6.Commands,Decode,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Decode.cs,ExecuteCommand,The method has an empty catch block.
Empty Catch Block,helpmebot6.Commands,Resolve,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Resolve.cs,ExecuteCommand,The method has an empty catch block.
Empty Catch Block,Helpmebot.Services,BlockMonitoringService,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Services\BlockMonitoringService.cs,GetIpAddress,The method has an empty catch block.
Magic Number,Helpmebot,Linker,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Linker.cs,ReallyParseMessage,The following statement contains a magic number: while (m.Length > 0) {  	if (m.Groups [1].Length > 0) {  		newLinks.Add (m.Groups [1].Value);  	}  	if (m.Groups [2].Length > 0) {  		newLinks.Add ("Template:" + m.Groups [2].Value);  	}  	m = m.NextMatch ();  }  
Magic Number,Helpmebot,Linker,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Linker.cs,ReallyParseMessage,The following statement contains a magic number: while (m.Length > 0) {  	if (m.Groups [1].Length > 0) {  		newLinks.Add (m.Groups [1].Value);  	}  	if (m.Groups [2].Length > 0) {  		newLinks.Add ("Template:" + m.Groups [2].Value);  	}  	m = m.NextMatch ();  }  
Magic Number,Helpmebot,Linker,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Linker.cs,ReallyParseMessage,The following statement contains a magic number: if (m.Groups [2].Length > 0) {  	newLinks.Add ("Template:" + m.Groups [2].Value);  }  
Magic Number,Helpmebot,Linker,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Linker.cs,ReallyParseMessage,The following statement contains a magic number: if (m.Groups [2].Length > 0) {  	newLinks.Add ("Template:" + m.Groups [2].Value);  }  
Magic Number,Helpmebot,Linker,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Linker.cs,ReallyParseMessage,The following statement contains a magic number: newLinks.Add ("Template:" + m.Groups [2].Value);  
Magic Number,Helpmebot.Background,NotificationBackgroundService,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Background\NotificationBackgroundService.cs,TimerOnElapsed,The following statement contains a magic number: lock (this.syncLock) {  	this.Logger.Debug ("Retrieving items from notification queue...");  	// Get items from the notification queue  	var list = this.notificationRepository.RetrieveLatest ().ToList ();  	this.Logger.DebugFormat ("Found {0} items."' list.Count ());  	// Iterate to send them.  	foreach (var notification in list) {  		var destination = "##helpmebot";  		// TODO: move me to a separate table or something  		switch (notification.Type) {  		case 1:  			destination = "#wikipedia-en-accounts";  			break;  		case 2:  			destination = "#wikipedia-en-accounts-devs";  			break;  		}  		this.ircClient.SendMessage (destination' this.SanitiseMessage (notification.Text));  	}  }  
Magic Number,Helpmebot.Background,NotificationBackgroundService,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Background\NotificationBackgroundService.cs,TimerOnElapsed,The following statement contains a magic number: foreach (var notification in list) {  	var destination = "##helpmebot";  	// TODO: move me to a separate table or something  	switch (notification.Type) {  	case 1:  		destination = "#wikipedia-en-accounts";  		break;  	case 2:  		destination = "#wikipedia-en-accounts-devs";  		break;  	}  	this.ircClient.SendMessage (destination' this.SanitiseMessage (notification.Text));  }  
Magic Number,Helpmebot.Background,NotificationBackgroundService,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Background\NotificationBackgroundService.cs,TimerOnElapsed,The following statement contains a magic number: switch (notification.Type) {  case 1:  	destination = "#wikipedia-en-accounts";  	break;  case 2:  	destination = "#wikipedia-en-accounts-devs";  	break;  }  
Magic Number,Helpmebot.Background,SystemMonitoringClientService,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Background\SystemMonitoringClientService.cs,ThreadMethod,The following statement contains a magic number: while (this.alive) {  	if (!this.service.Pending ()) {  		Thread.Sleep (10);  		continue;  	}  	this.logger.Debug ("Found waiting request.");  	TcpClient client = this.service.AcceptTcpClient ();  	var sw = new StreamWriter (client.GetStream ());  	sw.WriteLine (this.Message);  	sw.Flush ();  	client.Close ();  }  
Magic Number,Helpmebot.Background,SystemMonitoringClientService,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Background\SystemMonitoringClientService.cs,ThreadMethod,The following statement contains a magic number: if (!this.service.Pending ()) {  	Thread.Sleep (10);  	continue;  }  
Magic Number,Helpmebot.Background,SystemMonitoringClientService,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Background\SystemMonitoringClientService.cs,ThreadMethod,The following statement contains a magic number: Thread.Sleep (10);  
Magic Number,Helpmebot.IRC.Model,IrcChannelUser,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\IRC\Model\IrcChannelUser.cs,GetHashCode,The following statement contains a magic number: unchecked {  	return ((this.User != null ? this.User.GetHashCode () : 0) * 397) ^ (this.Channel != null ? this.Channel.GetHashCode () : 0);  }  
Magic Number,Helpmebot.IRC.Model,IrcChannelUser,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\IRC\Model\IrcChannelUser.cs,GetHashCode,The following statement contains a magic number: return ((this.User != null ? this.User.GetHashCode () : 0) * 397) ^ (this.Channel != null ? this.Channel.GetHashCode () : 0);  
Magic Number,Helpmebot.IRC.Messages,Message,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\IRC\Messages\Message.cs,Parse,The following statement contains a magic number: if (data.StartsWith (":")) {  	var prefixstrings = data.Split (separator' 2' StringSplitOptions.RemoveEmptyEntries);  	data = prefixstrings [1];  	prefix = prefixstrings [0].Substring (1);  	// strip the leading : too  }  
Magic Number,Helpmebot.IRC.Messages,Message,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\IRC\Messages\Message.cs,Parse,The following statement contains a magic number: if (strings.Length == 2) {  	var parameters = strings [1];  	if (parameters.Contains (" :") || parameters.StartsWith (":")) {  		var paramend = parameters.Substring (parameters.IndexOf (":"' StringComparison.Ordinal) + 1);  		var parameterList = parameters.Substring (0' parameters.IndexOf (":"' StringComparison.Ordinal)).Split (separator' StringSplitOptions.RemoveEmptyEntries).ToList ();  		parameterList.Add (paramend);  		messageParameters = parameterList;  	} else {  		messageParameters = parameters.Split (separator' StringSplitOptions.RemoveEmptyEntries).ToList ();  	}  }  
Magic Number,Helpmebot.IRC,IrcClient,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\IRC\IrcClient.cs,HandleWhoXReply,The following statement contains a magic number: try {  	if (message.Command != Numerics.WhoXReply) {  		throw new ArgumentException ("Expected WHOX reply message"' "message");  	}  	List<string> parameters = message.Parameters.ToList ();  	if (parameters.Count () != 8) {  		throw new ArgumentException ("Expected 8 WHOX parameters."' "message");  	}  	/* >> :holmes.freenode.net 354 stwalkerster 001 #wikipedia-en-accounts ChanServ services.           ChanServ       H@  0                  * >> :holmes.freenode.net 354 stwalkerster 001 #wikipedia-en-accounts ~jamesur wikimedia/Jamesofur Jamesofur|away G  jamesofur                  *                             .            t   c                      u        h                   n              f  a                  *     prefix              cmd    0         1   2                      3        4                   5              6  7                  */string channel = parameters [2];  	string user = parameters [3];  	string host = parameters [4];  	string nick = parameters [5];  	string flags = parameters [6];  	bool away = flags [0] == 'G';  	// H (here) / G (gone)  	string modes = flags.Substring (1);  	string account = parameters [7];  	lock (this.userOperationLock) {  		var ircUser = new IrcUser ();  		if (this.userCache.ContainsKey (nick)) {  			ircUser = this.userCache [nick];  		} else {  			ircUser.Nickname = nick;  			this.userCache.Add (nick' ircUser);  		}  		ircUser.Account = account;  		ircUser.Username = user;  		ircUser.Hostname = host;  		ircUser.Away = away;  		if (this.channels [channel].Users.ContainsKey (ircUser.Nickname)) {  			IrcChannelUser channelUser = this.channels [channel].Users [ircUser.Nickname];  			channelUser.Operator = modes.Contains ("@");  			channelUser.Voice = modes.Contains ("+");  		} else {  			var channelUser = new IrcChannelUser (ircUser' channel) {  				Operator = modes.Contains ("@")'  				Voice = modes.Contains ("+")  			};  			this.channels [channel].Users.Add (ircUser.Nickname' channelUser);  		}  	}  } catch (Exception ex) {  	this.nickTrackingValid = false;  	this.logger.Error ("Nick tracking for authentication is no longer valid."' ex);  	throw;  }  
Magic Number,Helpmebot.IRC,IrcClient,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\IRC\IrcClient.cs,HandleWhoXReply,The following statement contains a magic number: try {  	if (message.Command != Numerics.WhoXReply) {  		throw new ArgumentException ("Expected WHOX reply message"' "message");  	}  	List<string> parameters = message.Parameters.ToList ();  	if (parameters.Count () != 8) {  		throw new ArgumentException ("Expected 8 WHOX parameters."' "message");  	}  	/* >> :holmes.freenode.net 354 stwalkerster 001 #wikipedia-en-accounts ChanServ services.           ChanServ       H@  0                  * >> :holmes.freenode.net 354 stwalkerster 001 #wikipedia-en-accounts ~jamesur wikimedia/Jamesofur Jamesofur|away G  jamesofur                  *                             .            t   c                      u        h                   n              f  a                  *     prefix              cmd    0         1   2                      3        4                   5              6  7                  */string channel = parameters [2];  	string user = parameters [3];  	string host = parameters [4];  	string nick = parameters [5];  	string flags = parameters [6];  	bool away = flags [0] == 'G';  	// H (here) / G (gone)  	string modes = flags.Substring (1);  	string account = parameters [7];  	lock (this.userOperationLock) {  		var ircUser = new IrcUser ();  		if (this.userCache.ContainsKey (nick)) {  			ircUser = this.userCache [nick];  		} else {  			ircUser.Nickname = nick;  			this.userCache.Add (nick' ircUser);  		}  		ircUser.Account = account;  		ircUser.Username = user;  		ircUser.Hostname = host;  		ircUser.Away = away;  		if (this.channels [channel].Users.ContainsKey (ircUser.Nickname)) {  			IrcChannelUser channelUser = this.channels [channel].Users [ircUser.Nickname];  			channelUser.Operator = modes.Contains ("@");  			channelUser.Voice = modes.Contains ("+");  		} else {  			var channelUser = new IrcChannelUser (ircUser' channel) {  				Operator = modes.Contains ("@")'  				Voice = modes.Contains ("+")  			};  			this.channels [channel].Users.Add (ircUser.Nickname' channelUser);  		}  	}  } catch (Exception ex) {  	this.nickTrackingValid = false;  	this.logger.Error ("Nick tracking for authentication is no longer valid."' ex);  	throw;  }  
Magic Number,Helpmebot.IRC,IrcClient,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\IRC\IrcClient.cs,HandleWhoXReply,The following statement contains a magic number: try {  	if (message.Command != Numerics.WhoXReply) {  		throw new ArgumentException ("Expected WHOX reply message"' "message");  	}  	List<string> parameters = message.Parameters.ToList ();  	if (parameters.Count () != 8) {  		throw new ArgumentException ("Expected 8 WHOX parameters."' "message");  	}  	/* >> :holmes.freenode.net 354 stwalkerster 001 #wikipedia-en-accounts ChanServ services.           ChanServ       H@  0                  * >> :holmes.freenode.net 354 stwalkerster 001 #wikipedia-en-accounts ~jamesur wikimedia/Jamesofur Jamesofur|away G  jamesofur                  *                             .            t   c                      u        h                   n              f  a                  *     prefix              cmd    0         1   2                      3        4                   5              6  7                  */string channel = parameters [2];  	string user = parameters [3];  	string host = parameters [4];  	string nick = parameters [5];  	string flags = parameters [6];  	bool away = flags [0] == 'G';  	// H (here) / G (gone)  	string modes = flags.Substring (1);  	string account = parameters [7];  	lock (this.userOperationLock) {  		var ircUser = new IrcUser ();  		if (this.userCache.ContainsKey (nick)) {  			ircUser = this.userCache [nick];  		} else {  			ircUser.Nickname = nick;  			this.userCache.Add (nick' ircUser);  		}  		ircUser.Account = account;  		ircUser.Username = user;  		ircUser.Hostname = host;  		ircUser.Away = away;  		if (this.channels [channel].Users.ContainsKey (ircUser.Nickname)) {  			IrcChannelUser channelUser = this.channels [channel].Users [ircUser.Nickname];  			channelUser.Operator = modes.Contains ("@");  			channelUser.Voice = modes.Contains ("+");  		} else {  			var channelUser = new IrcChannelUser (ircUser' channel) {  				Operator = modes.Contains ("@")'  				Voice = modes.Contains ("+")  			};  			this.channels [channel].Users.Add (ircUser.Nickname' channelUser);  		}  	}  } catch (Exception ex) {  	this.nickTrackingValid = false;  	this.logger.Error ("Nick tracking for authentication is no longer valid."' ex);  	throw;  }  
Magic Number,Helpmebot.IRC,IrcClient,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\IRC\IrcClient.cs,HandleWhoXReply,The following statement contains a magic number: try {  	if (message.Command != Numerics.WhoXReply) {  		throw new ArgumentException ("Expected WHOX reply message"' "message");  	}  	List<string> parameters = message.Parameters.ToList ();  	if (parameters.Count () != 8) {  		throw new ArgumentException ("Expected 8 WHOX parameters."' "message");  	}  	/* >> :holmes.freenode.net 354 stwalkerster 001 #wikipedia-en-accounts ChanServ services.           ChanServ       H@  0                  * >> :holmes.freenode.net 354 stwalkerster 001 #wikipedia-en-accounts ~jamesur wikimedia/Jamesofur Jamesofur|away G  jamesofur                  *                             .            t   c                      u        h                   n              f  a                  *     prefix              cmd    0         1   2                      3        4                   5              6  7                  */string channel = parameters [2];  	string user = parameters [3];  	string host = parameters [4];  	string nick = parameters [5];  	string flags = parameters [6];  	bool away = flags [0] == 'G';  	// H (here) / G (gone)  	string modes = flags.Substring (1);  	string account = parameters [7];  	lock (this.userOperationLock) {  		var ircUser = new IrcUser ();  		if (this.userCache.ContainsKey (nick)) {  			ircUser = this.userCache [nick];  		} else {  			ircUser.Nickname = nick;  			this.userCache.Add (nick' ircUser);  		}  		ircUser.Account = account;  		ircUser.Username = user;  		ircUser.Hostname = host;  		ircUser.Away = away;  		if (this.channels [channel].Users.ContainsKey (ircUser.Nickname)) {  			IrcChannelUser channelUser = this.channels [channel].Users [ircUser.Nickname];  			channelUser.Operator = modes.Contains ("@");  			channelUser.Voice = modes.Contains ("+");  		} else {  			var channelUser = new IrcChannelUser (ircUser' channel) {  				Operator = modes.Contains ("@")'  				Voice = modes.Contains ("+")  			};  			this.channels [channel].Users.Add (ircUser.Nickname' channelUser);  		}  	}  } catch (Exception ex) {  	this.nickTrackingValid = false;  	this.logger.Error ("Nick tracking for authentication is no longer valid."' ex);  	throw;  }  
Magic Number,Helpmebot.IRC,IrcClient,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\IRC\IrcClient.cs,HandleWhoXReply,The following statement contains a magic number: try {  	if (message.Command != Numerics.WhoXReply) {  		throw new ArgumentException ("Expected WHOX reply message"' "message");  	}  	List<string> parameters = message.Parameters.ToList ();  	if (parameters.Count () != 8) {  		throw new ArgumentException ("Expected 8 WHOX parameters."' "message");  	}  	/* >> :holmes.freenode.net 354 stwalkerster 001 #wikipedia-en-accounts ChanServ services.           ChanServ       H@  0                  * >> :holmes.freenode.net 354 stwalkerster 001 #wikipedia-en-accounts ~jamesur wikimedia/Jamesofur Jamesofur|away G  jamesofur                  *                             .            t   c                      u        h                   n              f  a                  *     prefix              cmd    0         1   2                      3        4                   5              6  7                  */string channel = parameters [2];  	string user = parameters [3];  	string host = parameters [4];  	string nick = parameters [5];  	string flags = parameters [6];  	bool away = flags [0] == 'G';  	// H (here) / G (gone)  	string modes = flags.Substring (1);  	string account = parameters [7];  	lock (this.userOperationLock) {  		var ircUser = new IrcUser ();  		if (this.userCache.ContainsKey (nick)) {  			ircUser = this.userCache [nick];  		} else {  			ircUser.Nickname = nick;  			this.userCache.Add (nick' ircUser);  		}  		ircUser.Account = account;  		ircUser.Username = user;  		ircUser.Hostname = host;  		ircUser.Away = away;  		if (this.channels [channel].Users.ContainsKey (ircUser.Nickname)) {  			IrcChannelUser channelUser = this.channels [channel].Users [ircUser.Nickname];  			channelUser.Operator = modes.Contains ("@");  			channelUser.Voice = modes.Contains ("+");  		} else {  			var channelUser = new IrcChannelUser (ircUser' channel) {  				Operator = modes.Contains ("@")'  				Voice = modes.Contains ("+")  			};  			this.channels [channel].Users.Add (ircUser.Nickname' channelUser);  		}  	}  } catch (Exception ex) {  	this.nickTrackingValid = false;  	this.logger.Error ("Nick tracking for authentication is no longer valid."' ex);  	throw;  }  
Magic Number,Helpmebot.IRC,IrcClient,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\IRC\IrcClient.cs,HandleWhoXReply,The following statement contains a magic number: try {  	if (message.Command != Numerics.WhoXReply) {  		throw new ArgumentException ("Expected WHOX reply message"' "message");  	}  	List<string> parameters = message.Parameters.ToList ();  	if (parameters.Count () != 8) {  		throw new ArgumentException ("Expected 8 WHOX parameters."' "message");  	}  	/* >> :holmes.freenode.net 354 stwalkerster 001 #wikipedia-en-accounts ChanServ services.           ChanServ       H@  0                  * >> :holmes.freenode.net 354 stwalkerster 001 #wikipedia-en-accounts ~jamesur wikimedia/Jamesofur Jamesofur|away G  jamesofur                  *                             .            t   c                      u        h                   n              f  a                  *     prefix              cmd    0         1   2                      3        4                   5              6  7                  */string channel = parameters [2];  	string user = parameters [3];  	string host = parameters [4];  	string nick = parameters [5];  	string flags = parameters [6];  	bool away = flags [0] == 'G';  	// H (here) / G (gone)  	string modes = flags.Substring (1);  	string account = parameters [7];  	lock (this.userOperationLock) {  		var ircUser = new IrcUser ();  		if (this.userCache.ContainsKey (nick)) {  			ircUser = this.userCache [nick];  		} else {  			ircUser.Nickname = nick;  			this.userCache.Add (nick' ircUser);  		}  		ircUser.Account = account;  		ircUser.Username = user;  		ircUser.Hostname = host;  		ircUser.Away = away;  		if (this.channels [channel].Users.ContainsKey (ircUser.Nickname)) {  			IrcChannelUser channelUser = this.channels [channel].Users [ircUser.Nickname];  			channelUser.Operator = modes.Contains ("@");  			channelUser.Voice = modes.Contains ("+");  		} else {  			var channelUser = new IrcChannelUser (ircUser' channel) {  				Operator = modes.Contains ("@")'  				Voice = modes.Contains ("+")  			};  			this.channels [channel].Users.Add (ircUser.Nickname' channelUser);  		}  	}  } catch (Exception ex) {  	this.nickTrackingValid = false;  	this.logger.Error ("Nick tracking for authentication is no longer valid."' ex);  	throw;  }  
Magic Number,Helpmebot.IRC,IrcClient,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\IRC\IrcClient.cs,HandleWhoXReply,The following statement contains a magic number: try {  	if (message.Command != Numerics.WhoXReply) {  		throw new ArgumentException ("Expected WHOX reply message"' "message");  	}  	List<string> parameters = message.Parameters.ToList ();  	if (parameters.Count () != 8) {  		throw new ArgumentException ("Expected 8 WHOX parameters."' "message");  	}  	/* >> :holmes.freenode.net 354 stwalkerster 001 #wikipedia-en-accounts ChanServ services.           ChanServ       H@  0                  * >> :holmes.freenode.net 354 stwalkerster 001 #wikipedia-en-accounts ~jamesur wikimedia/Jamesofur Jamesofur|away G  jamesofur                  *                             .            t   c                      u        h                   n              f  a                  *     prefix              cmd    0         1   2                      3        4                   5              6  7                  */string channel = parameters [2];  	string user = parameters [3];  	string host = parameters [4];  	string nick = parameters [5];  	string flags = parameters [6];  	bool away = flags [0] == 'G';  	// H (here) / G (gone)  	string modes = flags.Substring (1);  	string account = parameters [7];  	lock (this.userOperationLock) {  		var ircUser = new IrcUser ();  		if (this.userCache.ContainsKey (nick)) {  			ircUser = this.userCache [nick];  		} else {  			ircUser.Nickname = nick;  			this.userCache.Add (nick' ircUser);  		}  		ircUser.Account = account;  		ircUser.Username = user;  		ircUser.Hostname = host;  		ircUser.Away = away;  		if (this.channels [channel].Users.ContainsKey (ircUser.Nickname)) {  			IrcChannelUser channelUser = this.channels [channel].Users [ircUser.Nickname];  			channelUser.Operator = modes.Contains ("@");  			channelUser.Voice = modes.Contains ("+");  		} else {  			var channelUser = new IrcChannelUser (ircUser' channel) {  				Operator = modes.Contains ("@")'  				Voice = modes.Contains ("+")  			};  			this.channels [channel].Users.Add (ircUser.Nickname' channelUser);  		}  	}  } catch (Exception ex) {  	this.nickTrackingValid = false;  	this.logger.Error ("Nick tracking for authentication is no longer valid."' ex);  	throw;  }  
Magic Number,Helpmebot.IRC,IrcClient,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\IRC\IrcClient.cs,HandleWhoXReply,The following statement contains a magic number: if (parameters.Count () != 8) {  	throw new ArgumentException ("Expected 8 WHOX parameters."' "message");  }  
Magic Number,Helpmebot.IRC,IrcClient,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\IRC\IrcClient.cs,RegisterConnection,The following statement contains a magic number: if (message.Command == "CAP") {  	List<string> list = message.Parameters.ToList ();  	if (list [1] == "LS") {  		string[] serverCapabilities = list [2].Split (' ');  		this.logger.DebugFormat ("Server Capabilities: {0}"' serverCapabilities.Implode ("' "));  		this.logger.DebugFormat ("Client Capabilities: {0}"' this.clientCapabilities.Implode ("' "));  		List<string> caps = serverCapabilities.Intersect (this.clientCapabilities).ToList ();  		// We don't support one without the other!  		if (caps.Intersect (new[] {  			"account-notify"'  			"extended-join"  		}).Count () == 1) {  			this.logger.Warn ("Dropping account-notify and extended-join support since server only supports one of them!");  			caps.Remove ("account-notify");  			caps.Remove ("extended-join");  		}  		if (caps.Count == 0) {  			// nothing is suitable for us' so downgrade to 1459  			this.logger.InfoFormat ("Requesting no capabilities.");  			this.Send (new Message ("CAP"' "END"));  			this.Send1459Registration ();  			return;  		}  		this.logger.InfoFormat ("Requesting capabilities: {0}"' caps.Implode ("' "));  		this.Send (new Message ("CAP"' new[] {  			"REQ"'  			caps.Implode ()  		}));  		return;  	}  	if (list [1] == "ACK") {  		string[] caps = list [2].Split (' ');  		this.logger.InfoFormat ("Acknowledged capabilities: {0}"' caps.Implode ("' "));  		foreach (string cap in caps) {  			if (cap == "sasl") {  				this.capSasl = true;  			}  			if (cap == "extended-join") {  				// This includes account-notify since both are required.  				this.capExtendedJoin = true;  			}  			// We don't care about multi-prefix' since the code to   			// handle it works nicely for those without it.  		}  		if (this.capSasl) {  			this.SaslAuth (null);  		} else {  			this.Send (new Message ("CAP"' "END"));  			this.Send1459Registration ();  		}  		return;  	}  	if (list [1] == "NAK") {  		// something went wrong' so downgrade to 1459.  		string[] caps = list [2].Split (' ');  		this.logger.WarnFormat ("NOT Acked capabilities: {0}"' caps.Implode ("' "));  		this.Send (new Message ("CAP"' "END"));  		this.Send1459Registration ();  		return;  	}  }  
Magic Number,Helpmebot.IRC,IrcClient,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\IRC\IrcClient.cs,RegisterConnection,The following statement contains a magic number: if (message.Command == "CAP") {  	List<string> list = message.Parameters.ToList ();  	if (list [1] == "LS") {  		string[] serverCapabilities = list [2].Split (' ');  		this.logger.DebugFormat ("Server Capabilities: {0}"' serverCapabilities.Implode ("' "));  		this.logger.DebugFormat ("Client Capabilities: {0}"' this.clientCapabilities.Implode ("' "));  		List<string> caps = serverCapabilities.Intersect (this.clientCapabilities).ToList ();  		// We don't support one without the other!  		if (caps.Intersect (new[] {  			"account-notify"'  			"extended-join"  		}).Count () == 1) {  			this.logger.Warn ("Dropping account-notify and extended-join support since server only supports one of them!");  			caps.Remove ("account-notify");  			caps.Remove ("extended-join");  		}  		if (caps.Count == 0) {  			// nothing is suitable for us' so downgrade to 1459  			this.logger.InfoFormat ("Requesting no capabilities.");  			this.Send (new Message ("CAP"' "END"));  			this.Send1459Registration ();  			return;  		}  		this.logger.InfoFormat ("Requesting capabilities: {0}"' caps.Implode ("' "));  		this.Send (new Message ("CAP"' new[] {  			"REQ"'  			caps.Implode ()  		}));  		return;  	}  	if (list [1] == "ACK") {  		string[] caps = list [2].Split (' ');  		this.logger.InfoFormat ("Acknowledged capabilities: {0}"' caps.Implode ("' "));  		foreach (string cap in caps) {  			if (cap == "sasl") {  				this.capSasl = true;  			}  			if (cap == "extended-join") {  				// This includes account-notify since both are required.  				this.capExtendedJoin = true;  			}  			// We don't care about multi-prefix' since the code to   			// handle it works nicely for those without it.  		}  		if (this.capSasl) {  			this.SaslAuth (null);  		} else {  			this.Send (new Message ("CAP"' "END"));  			this.Send1459Registration ();  		}  		return;  	}  	if (list [1] == "NAK") {  		// something went wrong' so downgrade to 1459.  		string[] caps = list [2].Split (' ');  		this.logger.WarnFormat ("NOT Acked capabilities: {0}"' caps.Implode ("' "));  		this.Send (new Message ("CAP"' "END"));  		this.Send1459Registration ();  		return;  	}  }  
Magic Number,Helpmebot.IRC,IrcClient,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\IRC\IrcClient.cs,RegisterConnection,The following statement contains a magic number: if (message.Command == "CAP") {  	List<string> list = message.Parameters.ToList ();  	if (list [1] == "LS") {  		string[] serverCapabilities = list [2].Split (' ');  		this.logger.DebugFormat ("Server Capabilities: {0}"' serverCapabilities.Implode ("' "));  		this.logger.DebugFormat ("Client Capabilities: {0}"' this.clientCapabilities.Implode ("' "));  		List<string> caps = serverCapabilities.Intersect (this.clientCapabilities).ToList ();  		// We don't support one without the other!  		if (caps.Intersect (new[] {  			"account-notify"'  			"extended-join"  		}).Count () == 1) {  			this.logger.Warn ("Dropping account-notify and extended-join support since server only supports one of them!");  			caps.Remove ("account-notify");  			caps.Remove ("extended-join");  		}  		if (caps.Count == 0) {  			// nothing is suitable for us' so downgrade to 1459  			this.logger.InfoFormat ("Requesting no capabilities.");  			this.Send (new Message ("CAP"' "END"));  			this.Send1459Registration ();  			return;  		}  		this.logger.InfoFormat ("Requesting capabilities: {0}"' caps.Implode ("' "));  		this.Send (new Message ("CAP"' new[] {  			"REQ"'  			caps.Implode ()  		}));  		return;  	}  	if (list [1] == "ACK") {  		string[] caps = list [2].Split (' ');  		this.logger.InfoFormat ("Acknowledged capabilities: {0}"' caps.Implode ("' "));  		foreach (string cap in caps) {  			if (cap == "sasl") {  				this.capSasl = true;  			}  			if (cap == "extended-join") {  				// This includes account-notify since both are required.  				this.capExtendedJoin = true;  			}  			// We don't care about multi-prefix' since the code to   			// handle it works nicely for those without it.  		}  		if (this.capSasl) {  			this.SaslAuth (null);  		} else {  			this.Send (new Message ("CAP"' "END"));  			this.Send1459Registration ();  		}  		return;  	}  	if (list [1] == "NAK") {  		// something went wrong' so downgrade to 1459.  		string[] caps = list [2].Split (' ');  		this.logger.WarnFormat ("NOT Acked capabilities: {0}"' caps.Implode ("' "));  		this.Send (new Message ("CAP"' "END"));  		this.Send1459Registration ();  		return;  	}  }  
Magic Number,Helpmebot.IRC,IrcClient,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\IRC\IrcClient.cs,RegisterConnection,The following statement contains a magic number: if (list [1] == "LS") {  	string[] serverCapabilities = list [2].Split (' ');  	this.logger.DebugFormat ("Server Capabilities: {0}"' serverCapabilities.Implode ("' "));  	this.logger.DebugFormat ("Client Capabilities: {0}"' this.clientCapabilities.Implode ("' "));  	List<string> caps = serverCapabilities.Intersect (this.clientCapabilities).ToList ();  	// We don't support one without the other!  	if (caps.Intersect (new[] {  		"account-notify"'  		"extended-join"  	}).Count () == 1) {  		this.logger.Warn ("Dropping account-notify and extended-join support since server only supports one of them!");  		caps.Remove ("account-notify");  		caps.Remove ("extended-join");  	}  	if (caps.Count == 0) {  		// nothing is suitable for us' so downgrade to 1459  		this.logger.InfoFormat ("Requesting no capabilities.");  		this.Send (new Message ("CAP"' "END"));  		this.Send1459Registration ();  		return;  	}  	this.logger.InfoFormat ("Requesting capabilities: {0}"' caps.Implode ("' "));  	this.Send (new Message ("CAP"' new[] {  		"REQ"'  		caps.Implode ()  	}));  	return;  }  
Magic Number,Helpmebot.IRC,IrcClient,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\IRC\IrcClient.cs,RegisterConnection,The following statement contains a magic number: if (list [1] == "ACK") {  	string[] caps = list [2].Split (' ');  	this.logger.InfoFormat ("Acknowledged capabilities: {0}"' caps.Implode ("' "));  	foreach (string cap in caps) {  		if (cap == "sasl") {  			this.capSasl = true;  		}  		if (cap == "extended-join") {  			// This includes account-notify since both are required.  			this.capExtendedJoin = true;  		}  		// We don't care about multi-prefix' since the code to   		// handle it works nicely for those without it.  	}  	if (this.capSasl) {  		this.SaslAuth (null);  	} else {  		this.Send (new Message ("CAP"' "END"));  		this.Send1459Registration ();  	}  	return;  }  
Magic Number,Helpmebot.IRC,IrcClient,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\IRC\IrcClient.cs,RegisterConnection,The following statement contains a magic number: if (list [1] == "NAK") {  	// something went wrong' so downgrade to 1459.  	string[] caps = list [2].Split (' ');  	this.logger.WarnFormat ("NOT Acked capabilities: {0}"' caps.Implode ("' "));  	this.Send (new Message ("CAP"' "END"));  	this.Send1459Registration ();  	return;  }  
Magic Number,Helpmebot.IRC,IrcClient,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\IRC\IrcClient.cs,RegisterConnection,The following statement contains a magic number: if (message.Command == Numerics.SaslLoggedIn) {  	string[] strings = message.Parameters.ToArray ();  	this.logger.InfoFormat ("You are now logged in as {1} ({0})"' strings [1]' strings [2]);  	this.servicesLoggedIn = true;  	return;  }  
Magic Number,Helpmebot.IRC,IrcClient,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\IRC\IrcClient.cs,RegisterConnection,The following statement contains a magic number: this.logger.InfoFormat ("You are now logged in as {1} ({0})"' strings [1]' strings [2]);  
Magic Number,Helpmebot.IRC,NetworkClient,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\IRC\NetworkClient.cs,WriterThreadTask,The following statement contains a magic number: while (this.client.Connected) {  	string item = null;  	// grab an item from the queue if we can  	lock (this.sendQueueLock) {  		if (this.sendQueue.Count > 0) {  			item = this.sendQueue.Dequeue ();  		}  	}  	if (item == null) {  		// Wait here for an item to be added to the queue  		this.writerThreadResetEvent.WaitOne ();  	} else {  		if (string.IsNullOrEmpty (item)) {  			continue;  		}  		this.outboundLogger.Debug (item);  		this.Writer.WriteLine (item);  		this.Writer.Flush ();  		// Flood protection  		Thread.Sleep (500);  	}  }  
Magic Number,Helpmebot.IRC,NetworkClient,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\IRC\NetworkClient.cs,WriterThreadTask,The following statement contains a magic number: if (item == null) {  	// Wait here for an item to be added to the queue  	this.writerThreadResetEvent.WaitOne ();  } else {  	if (string.IsNullOrEmpty (item)) {  		continue;  	}  	this.outboundLogger.Debug (item);  	this.Writer.WriteLine (item);  	this.Writer.Flush ();  	// Flood protection  	Thread.Sleep (500);  }  
Magic Number,Helpmebot.IRC,NetworkClient,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\IRC\NetworkClient.cs,WriterThreadTask,The following statement contains a magic number: Thread.Sleep (500);  
Magic Number,helpmebot6.Commands,Accdeploy,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\AccBot\AccDeploy.cs,ExecuteCommand,The following statement contains a magic number: using (Stream data = HttpRequest.Get (requestUri' 1000 * 30/* 30 sec timeout */).ToStream ()) {  	var r = new StreamReader (data);  	var crh = new CommandResponseHandler ();  	foreach (var x in r.ReadToEnd ().Split ('\n'' '\r')) {  		crh.Respond (x);  	}  	return crh;  }  
Magic Number,helpmebot6.Commands,Accdeploy,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\AccBot\AccDeploy.cs,ExecuteCommand,The following statement contains a magic number: using (Stream data = HttpRequest.Get (requestUri' 1000 * 30/* 30 sec timeout */).ToStream ()) {  	var r = new StreamReader (data);  	var crh = new CommandResponseHandler ();  	foreach (var x in r.ReadToEnd ().Split ('\n'' '\r')) {  		crh.Respond (x);  	}  	return crh;  }  
Magic Number,helpmebot6.Commands,Access,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Access.cs,ExecuteCommand,The following statement contains a magic number: if (this.Arguments.Length > 1) {  	switch (this.Arguments [0].ToLower ()) {  	case "add":  		if (this.Arguments.Length > 2) {  			var aL = LegacyUser.UserRights.Normal;  			switch (this.Arguments [2].ToLower ()) {  			case "superuser":  				aL = LegacyUser.UserRights.Superuser;  				break;  			case "advanced":  				aL = LegacyUser.UserRights.Advanced;  				break;  			case "semi-ignored":  				aL = LegacyUser.UserRights.Semiignored;  				break;  			case "semiignored":  				aL = LegacyUser.UserRights.Semiignored;  				break;  			case "ignored":  				aL = LegacyUser.UserRights.Ignored;  				break;  			case "normal":  				aL = LegacyUser.UserRights.Normal;  				break;  			}  			var s = this.Arguments [1];  			var legacyUser = LegacyUser.NewFromString (s);  			if (legacyUser == null) {  				string[] errArgs =  {  					s  				};  				crh.Respond (messageService.RetrieveMessage ("cmdAccessInvalidUser"' this.Channel' errArgs));  				return crh;  			}  			if (!s.Contains ("@") || !s.Contains ("!")) {  				string[] errArgs =  {  					s  				};  				crh.Respond (messageService.RetrieveMessage ("cmdAccessInvalidNuh"' this.Channel' errArgs));  				return crh;  			}  			crh = this.AddAccessEntry (legacyUser' aL);  		} else {  			string[] messageParameters =  {  				"access add"'  				"3"'  				this.Arguments.Length.ToString (CultureInfo.InvariantCulture)  			};  			return new CommandResponseHandler (messageService.RetrieveMessage ("notEnoughParameters"' this.Channel' messageParameters));  		}  		break;  	case "del":  		crh = this.DeleteAccessEntry (int.Parse (this.Arguments [1]));  		break;  	default:  		crh = new CommandResponseHandler ();  		crh.Respond (messageService.RetrieveMessage ("CmdAccessInvalidSubcommand"' this.Channel' new string[0]));  		break;  	}  	/*                  * add <source> <level>                  *                  * del <id>                  */} else {  	string[] messageParameters =  {  		"access"'  		"2"'  		this.Arguments.Length.ToString (CultureInfo.InstalledUICulture)  	};  	return new CommandResponseHandler (messageService.RetrieveMessage ("notEnoughParameters"' this.Channel' messageParameters));  }  
Magic Number,helpmebot6.Commands,Access,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Access.cs,ExecuteCommand,The following statement contains a magic number: if (this.Arguments.Length > 1) {  	switch (this.Arguments [0].ToLower ()) {  	case "add":  		if (this.Arguments.Length > 2) {  			var aL = LegacyUser.UserRights.Normal;  			switch (this.Arguments [2].ToLower ()) {  			case "superuser":  				aL = LegacyUser.UserRights.Superuser;  				break;  			case "advanced":  				aL = LegacyUser.UserRights.Advanced;  				break;  			case "semi-ignored":  				aL = LegacyUser.UserRights.Semiignored;  				break;  			case "semiignored":  				aL = LegacyUser.UserRights.Semiignored;  				break;  			case "ignored":  				aL = LegacyUser.UserRights.Ignored;  				break;  			case "normal":  				aL = LegacyUser.UserRights.Normal;  				break;  			}  			var s = this.Arguments [1];  			var legacyUser = LegacyUser.NewFromString (s);  			if (legacyUser == null) {  				string[] errArgs =  {  					s  				};  				crh.Respond (messageService.RetrieveMessage ("cmdAccessInvalidUser"' this.Channel' errArgs));  				return crh;  			}  			if (!s.Contains ("@") || !s.Contains ("!")) {  				string[] errArgs =  {  					s  				};  				crh.Respond (messageService.RetrieveMessage ("cmdAccessInvalidNuh"' this.Channel' errArgs));  				return crh;  			}  			crh = this.AddAccessEntry (legacyUser' aL);  		} else {  			string[] messageParameters =  {  				"access add"'  				"3"'  				this.Arguments.Length.ToString (CultureInfo.InvariantCulture)  			};  			return new CommandResponseHandler (messageService.RetrieveMessage ("notEnoughParameters"' this.Channel' messageParameters));  		}  		break;  	case "del":  		crh = this.DeleteAccessEntry (int.Parse (this.Arguments [1]));  		break;  	default:  		crh = new CommandResponseHandler ();  		crh.Respond (messageService.RetrieveMessage ("CmdAccessInvalidSubcommand"' this.Channel' new string[0]));  		break;  	}  	/*                  * add <source> <level>                  *                  * del <id>                  */} else {  	string[] messageParameters =  {  		"access"'  		"2"'  		this.Arguments.Length.ToString (CultureInfo.InstalledUICulture)  	};  	return new CommandResponseHandler (messageService.RetrieveMessage ("notEnoughParameters"' this.Channel' messageParameters));  }  
Magic Number,helpmebot6.Commands,Access,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Access.cs,ExecuteCommand,The following statement contains a magic number: switch (this.Arguments [0].ToLower ()) {  case "add":  	if (this.Arguments.Length > 2) {  		var aL = LegacyUser.UserRights.Normal;  		switch (this.Arguments [2].ToLower ()) {  		case "superuser":  			aL = LegacyUser.UserRights.Superuser;  			break;  		case "advanced":  			aL = LegacyUser.UserRights.Advanced;  			break;  		case "semi-ignored":  			aL = LegacyUser.UserRights.Semiignored;  			break;  		case "semiignored":  			aL = LegacyUser.UserRights.Semiignored;  			break;  		case "ignored":  			aL = LegacyUser.UserRights.Ignored;  			break;  		case "normal":  			aL = LegacyUser.UserRights.Normal;  			break;  		}  		var s = this.Arguments [1];  		var legacyUser = LegacyUser.NewFromString (s);  		if (legacyUser == null) {  			string[] errArgs =  {  				s  			};  			crh.Respond (messageService.RetrieveMessage ("cmdAccessInvalidUser"' this.Channel' errArgs));  			return crh;  		}  		if (!s.Contains ("@") || !s.Contains ("!")) {  			string[] errArgs =  {  				s  			};  			crh.Respond (messageService.RetrieveMessage ("cmdAccessInvalidNuh"' this.Channel' errArgs));  			return crh;  		}  		crh = this.AddAccessEntry (legacyUser' aL);  	} else {  		string[] messageParameters =  {  			"access add"'  			"3"'  			this.Arguments.Length.ToString (CultureInfo.InvariantCulture)  		};  		return new CommandResponseHandler (messageService.RetrieveMessage ("notEnoughParameters"' this.Channel' messageParameters));  	}  	break;  case "del":  	crh = this.DeleteAccessEntry (int.Parse (this.Arguments [1]));  	break;  default:  	crh = new CommandResponseHandler ();  	crh.Respond (messageService.RetrieveMessage ("CmdAccessInvalidSubcommand"' this.Channel' new string[0]));  	break;  }  
Magic Number,helpmebot6.Commands,Access,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Access.cs,ExecuteCommand,The following statement contains a magic number: switch (this.Arguments [0].ToLower ()) {  case "add":  	if (this.Arguments.Length > 2) {  		var aL = LegacyUser.UserRights.Normal;  		switch (this.Arguments [2].ToLower ()) {  		case "superuser":  			aL = LegacyUser.UserRights.Superuser;  			break;  		case "advanced":  			aL = LegacyUser.UserRights.Advanced;  			break;  		case "semi-ignored":  			aL = LegacyUser.UserRights.Semiignored;  			break;  		case "semiignored":  			aL = LegacyUser.UserRights.Semiignored;  			break;  		case "ignored":  			aL = LegacyUser.UserRights.Ignored;  			break;  		case "normal":  			aL = LegacyUser.UserRights.Normal;  			break;  		}  		var s = this.Arguments [1];  		var legacyUser = LegacyUser.NewFromString (s);  		if (legacyUser == null) {  			string[] errArgs =  {  				s  			};  			crh.Respond (messageService.RetrieveMessage ("cmdAccessInvalidUser"' this.Channel' errArgs));  			return crh;  		}  		if (!s.Contains ("@") || !s.Contains ("!")) {  			string[] errArgs =  {  				s  			};  			crh.Respond (messageService.RetrieveMessage ("cmdAccessInvalidNuh"' this.Channel' errArgs));  			return crh;  		}  		crh = this.AddAccessEntry (legacyUser' aL);  	} else {  		string[] messageParameters =  {  			"access add"'  			"3"'  			this.Arguments.Length.ToString (CultureInfo.InvariantCulture)  		};  		return new CommandResponseHandler (messageService.RetrieveMessage ("notEnoughParameters"' this.Channel' messageParameters));  	}  	break;  case "del":  	crh = this.DeleteAccessEntry (int.Parse (this.Arguments [1]));  	break;  default:  	crh = new CommandResponseHandler ();  	crh.Respond (messageService.RetrieveMessage ("CmdAccessInvalidSubcommand"' this.Channel' new string[0]));  	break;  }  
Magic Number,helpmebot6.Commands,Access,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Access.cs,ExecuteCommand,The following statement contains a magic number: if (this.Arguments.Length > 2) {  	var aL = LegacyUser.UserRights.Normal;  	switch (this.Arguments [2].ToLower ()) {  	case "superuser":  		aL = LegacyUser.UserRights.Superuser;  		break;  	case "advanced":  		aL = LegacyUser.UserRights.Advanced;  		break;  	case "semi-ignored":  		aL = LegacyUser.UserRights.Semiignored;  		break;  	case "semiignored":  		aL = LegacyUser.UserRights.Semiignored;  		break;  	case "ignored":  		aL = LegacyUser.UserRights.Ignored;  		break;  	case "normal":  		aL = LegacyUser.UserRights.Normal;  		break;  	}  	var s = this.Arguments [1];  	var legacyUser = LegacyUser.NewFromString (s);  	if (legacyUser == null) {  		string[] errArgs =  {  			s  		};  		crh.Respond (messageService.RetrieveMessage ("cmdAccessInvalidUser"' this.Channel' errArgs));  		return crh;  	}  	if (!s.Contains ("@") || !s.Contains ("!")) {  		string[] errArgs =  {  			s  		};  		crh.Respond (messageService.RetrieveMessage ("cmdAccessInvalidNuh"' this.Channel' errArgs));  		return crh;  	}  	crh = this.AddAccessEntry (legacyUser' aL);  } else {  	string[] messageParameters =  {  		"access add"'  		"3"'  		this.Arguments.Length.ToString (CultureInfo.InvariantCulture)  	};  	return new CommandResponseHandler (messageService.RetrieveMessage ("notEnoughParameters"' this.Channel' messageParameters));  }  
Magic Number,helpmebot6.Commands,Access,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Access.cs,ExecuteCommand,The following statement contains a magic number: if (this.Arguments.Length > 2) {  	var aL = LegacyUser.UserRights.Normal;  	switch (this.Arguments [2].ToLower ()) {  	case "superuser":  		aL = LegacyUser.UserRights.Superuser;  		break;  	case "advanced":  		aL = LegacyUser.UserRights.Advanced;  		break;  	case "semi-ignored":  		aL = LegacyUser.UserRights.Semiignored;  		break;  	case "semiignored":  		aL = LegacyUser.UserRights.Semiignored;  		break;  	case "ignored":  		aL = LegacyUser.UserRights.Ignored;  		break;  	case "normal":  		aL = LegacyUser.UserRights.Normal;  		break;  	}  	var s = this.Arguments [1];  	var legacyUser = LegacyUser.NewFromString (s);  	if (legacyUser == null) {  		string[] errArgs =  {  			s  		};  		crh.Respond (messageService.RetrieveMessage ("cmdAccessInvalidUser"' this.Channel' errArgs));  		return crh;  	}  	if (!s.Contains ("@") || !s.Contains ("!")) {  		string[] errArgs =  {  			s  		};  		crh.Respond (messageService.RetrieveMessage ("cmdAccessInvalidNuh"' this.Channel' errArgs));  		return crh;  	}  	crh = this.AddAccessEntry (legacyUser' aL);  } else {  	string[] messageParameters =  {  		"access add"'  		"3"'  		this.Arguments.Length.ToString (CultureInfo.InvariantCulture)  	};  	return new CommandResponseHandler (messageService.RetrieveMessage ("notEnoughParameters"' this.Channel' messageParameters));  }  
Magic Number,helpmebot6.Commands,Access,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Access.cs,ExecuteCommand,The following statement contains a magic number: switch (this.Arguments [2].ToLower ()) {  case "superuser":  	aL = LegacyUser.UserRights.Superuser;  	break;  case "advanced":  	aL = LegacyUser.UserRights.Advanced;  	break;  case "semi-ignored":  	aL = LegacyUser.UserRights.Semiignored;  	break;  case "semiignored":  	aL = LegacyUser.UserRights.Semiignored;  	break;  case "ignored":  	aL = LegacyUser.UserRights.Ignored;  	break;  case "normal":  	aL = LegacyUser.UserRights.Normal;  	break;  }  
Magic Number,helpmebot6.Commands,Afcbacklog,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Afcbacklog.cs,ExecuteCommand,The following statement contains a magic number: if (size == 0) {  	// TODO: push these to the wiki?  	return new CommandResponseHandler ("There are no new AfC submissions.");  } else if (size < 200) {  	return new CommandResponseHandler ("AfC is clearing out.");  } else if (size < 400) {  	return new CommandResponseHandler ("There is a normal backlog at AfC.");  } else if (size < 650) {  	return new CommandResponseHandler ("AfC is semi-backlogged at the moment.");  } else if (size < 900) {  	return new CommandResponseHandler ("There is a backlog at AfC.");  } else if (size < 1200) {  	return new CommandResponseHandler ("AfC is highly backlogged at the moment.");  } else if (size < 2000) {  	return new CommandResponseHandler ("There is a severe backlog at AfC.");  } else if (size < 4000) {  	return new CommandResponseHandler ("AfC is critically backlogged.");  } else if (size < 10000) {  	return new CommandResponseHandler ("AfC is out of order.");  } else {  	return new CommandResponseHandler ("Unknown error occurred' current status of AfC is unknown."' CommandResponseDestination.PrivateMessage);  }  
Magic Number,helpmebot6.Commands,Afcbacklog,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Afcbacklog.cs,ExecuteCommand,The following statement contains a magic number: if (size == 0) {  	// TODO: push these to the wiki?  	return new CommandResponseHandler ("There are no new AfC submissions.");  } else if (size < 200) {  	return new CommandResponseHandler ("AfC is clearing out.");  } else if (size < 400) {  	return new CommandResponseHandler ("There is a normal backlog at AfC.");  } else if (size < 650) {  	return new CommandResponseHandler ("AfC is semi-backlogged at the moment.");  } else if (size < 900) {  	return new CommandResponseHandler ("There is a backlog at AfC.");  } else if (size < 1200) {  	return new CommandResponseHandler ("AfC is highly backlogged at the moment.");  } else if (size < 2000) {  	return new CommandResponseHandler ("There is a severe backlog at AfC.");  } else if (size < 4000) {  	return new CommandResponseHandler ("AfC is critically backlogged.");  } else if (size < 10000) {  	return new CommandResponseHandler ("AfC is out of order.");  } else {  	return new CommandResponseHandler ("Unknown error occurred' current status of AfC is unknown."' CommandResponseDestination.PrivateMessage);  }  
Magic Number,helpmebot6.Commands,Afcbacklog,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Afcbacklog.cs,ExecuteCommand,The following statement contains a magic number: if (size == 0) {  	// TODO: push these to the wiki?  	return new CommandResponseHandler ("There are no new AfC submissions.");  } else if (size < 200) {  	return new CommandResponseHandler ("AfC is clearing out.");  } else if (size < 400) {  	return new CommandResponseHandler ("There is a normal backlog at AfC.");  } else if (size < 650) {  	return new CommandResponseHandler ("AfC is semi-backlogged at the moment.");  } else if (size < 900) {  	return new CommandResponseHandler ("There is a backlog at AfC.");  } else if (size < 1200) {  	return new CommandResponseHandler ("AfC is highly backlogged at the moment.");  } else if (size < 2000) {  	return new CommandResponseHandler ("There is a severe backlog at AfC.");  } else if (size < 4000) {  	return new CommandResponseHandler ("AfC is critically backlogged.");  } else if (size < 10000) {  	return new CommandResponseHandler ("AfC is out of order.");  } else {  	return new CommandResponseHandler ("Unknown error occurred' current status of AfC is unknown."' CommandResponseDestination.PrivateMessage);  }  
Magic Number,helpmebot6.Commands,Afcbacklog,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Afcbacklog.cs,ExecuteCommand,The following statement contains a magic number: if (size == 0) {  	// TODO: push these to the wiki?  	return new CommandResponseHandler ("There are no new AfC submissions.");  } else if (size < 200) {  	return new CommandResponseHandler ("AfC is clearing out.");  } else if (size < 400) {  	return new CommandResponseHandler ("There is a normal backlog at AfC.");  } else if (size < 650) {  	return new CommandResponseHandler ("AfC is semi-backlogged at the moment.");  } else if (size < 900) {  	return new CommandResponseHandler ("There is a backlog at AfC.");  } else if (size < 1200) {  	return new CommandResponseHandler ("AfC is highly backlogged at the moment.");  } else if (size < 2000) {  	return new CommandResponseHandler ("There is a severe backlog at AfC.");  } else if (size < 4000) {  	return new CommandResponseHandler ("AfC is critically backlogged.");  } else if (size < 10000) {  	return new CommandResponseHandler ("AfC is out of order.");  } else {  	return new CommandResponseHandler ("Unknown error occurred' current status of AfC is unknown."' CommandResponseDestination.PrivateMessage);  }  
Magic Number,helpmebot6.Commands,Afcbacklog,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Afcbacklog.cs,ExecuteCommand,The following statement contains a magic number: if (size == 0) {  	// TODO: push these to the wiki?  	return new CommandResponseHandler ("There are no new AfC submissions.");  } else if (size < 200) {  	return new CommandResponseHandler ("AfC is clearing out.");  } else if (size < 400) {  	return new CommandResponseHandler ("There is a normal backlog at AfC.");  } else if (size < 650) {  	return new CommandResponseHandler ("AfC is semi-backlogged at the moment.");  } else if (size < 900) {  	return new CommandResponseHandler ("There is a backlog at AfC.");  } else if (size < 1200) {  	return new CommandResponseHandler ("AfC is highly backlogged at the moment.");  } else if (size < 2000) {  	return new CommandResponseHandler ("There is a severe backlog at AfC.");  } else if (size < 4000) {  	return new CommandResponseHandler ("AfC is critically backlogged.");  } else if (size < 10000) {  	return new CommandResponseHandler ("AfC is out of order.");  } else {  	return new CommandResponseHandler ("Unknown error occurred' current status of AfC is unknown."' CommandResponseDestination.PrivateMessage);  }  
Magic Number,helpmebot6.Commands,Afcbacklog,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Afcbacklog.cs,ExecuteCommand,The following statement contains a magic number: if (size == 0) {  	// TODO: push these to the wiki?  	return new CommandResponseHandler ("There are no new AfC submissions.");  } else if (size < 200) {  	return new CommandResponseHandler ("AfC is clearing out.");  } else if (size < 400) {  	return new CommandResponseHandler ("There is a normal backlog at AfC.");  } else if (size < 650) {  	return new CommandResponseHandler ("AfC is semi-backlogged at the moment.");  } else if (size < 900) {  	return new CommandResponseHandler ("There is a backlog at AfC.");  } else if (size < 1200) {  	return new CommandResponseHandler ("AfC is highly backlogged at the moment.");  } else if (size < 2000) {  	return new CommandResponseHandler ("There is a severe backlog at AfC.");  } else if (size < 4000) {  	return new CommandResponseHandler ("AfC is critically backlogged.");  } else if (size < 10000) {  	return new CommandResponseHandler ("AfC is out of order.");  } else {  	return new CommandResponseHandler ("Unknown error occurred' current status of AfC is unknown."' CommandResponseDestination.PrivateMessage);  }  
Magic Number,helpmebot6.Commands,Afcbacklog,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Afcbacklog.cs,ExecuteCommand,The following statement contains a magic number: if (size == 0) {  	// TODO: push these to the wiki?  	return new CommandResponseHandler ("There are no new AfC submissions.");  } else if (size < 200) {  	return new CommandResponseHandler ("AfC is clearing out.");  } else if (size < 400) {  	return new CommandResponseHandler ("There is a normal backlog at AfC.");  } else if (size < 650) {  	return new CommandResponseHandler ("AfC is semi-backlogged at the moment.");  } else if (size < 900) {  	return new CommandResponseHandler ("There is a backlog at AfC.");  } else if (size < 1200) {  	return new CommandResponseHandler ("AfC is highly backlogged at the moment.");  } else if (size < 2000) {  	return new CommandResponseHandler ("There is a severe backlog at AfC.");  } else if (size < 4000) {  	return new CommandResponseHandler ("AfC is critically backlogged.");  } else if (size < 10000) {  	return new CommandResponseHandler ("AfC is out of order.");  } else {  	return new CommandResponseHandler ("Unknown error occurred' current status of AfC is unknown."' CommandResponseDestination.PrivateMessage);  }  
Magic Number,helpmebot6.Commands,Afcbacklog,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Afcbacklog.cs,ExecuteCommand,The following statement contains a magic number: if (size == 0) {  	// TODO: push these to the wiki?  	return new CommandResponseHandler ("There are no new AfC submissions.");  } else if (size < 200) {  	return new CommandResponseHandler ("AfC is clearing out.");  } else if (size < 400) {  	return new CommandResponseHandler ("There is a normal backlog at AfC.");  } else if (size < 650) {  	return new CommandResponseHandler ("AfC is semi-backlogged at the moment.");  } else if (size < 900) {  	return new CommandResponseHandler ("There is a backlog at AfC.");  } else if (size < 1200) {  	return new CommandResponseHandler ("AfC is highly backlogged at the moment.");  } else if (size < 2000) {  	return new CommandResponseHandler ("There is a severe backlog at AfC.");  } else if (size < 4000) {  	return new CommandResponseHandler ("AfC is critically backlogged.");  } else if (size < 10000) {  	return new CommandResponseHandler ("AfC is out of order.");  } else {  	return new CommandResponseHandler ("Unknown error occurred' current status of AfC is unknown."' CommandResponseDestination.PrivateMessage);  }  
Magic Number,helpmebot6.Commands,Afcbacklog,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Afcbacklog.cs,ExecuteCommand,The following statement contains a magic number: if (size < 200) {  	return new CommandResponseHandler ("AfC is clearing out.");  } else if (size < 400) {  	return new CommandResponseHandler ("There is a normal backlog at AfC.");  } else if (size < 650) {  	return new CommandResponseHandler ("AfC is semi-backlogged at the moment.");  } else if (size < 900) {  	return new CommandResponseHandler ("There is a backlog at AfC.");  } else if (size < 1200) {  	return new CommandResponseHandler ("AfC is highly backlogged at the moment.");  } else if (size < 2000) {  	return new CommandResponseHandler ("There is a severe backlog at AfC.");  } else if (size < 4000) {  	return new CommandResponseHandler ("AfC is critically backlogged.");  } else if (size < 10000) {  	return new CommandResponseHandler ("AfC is out of order.");  } else {  	return new CommandResponseHandler ("Unknown error occurred' current status of AfC is unknown."' CommandResponseDestination.PrivateMessage);  }  
Magic Number,helpmebot6.Commands,Afcbacklog,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Afcbacklog.cs,ExecuteCommand,The following statement contains a magic number: if (size < 200) {  	return new CommandResponseHandler ("AfC is clearing out.");  } else if (size < 400) {  	return new CommandResponseHandler ("There is a normal backlog at AfC.");  } else if (size < 650) {  	return new CommandResponseHandler ("AfC is semi-backlogged at the moment.");  } else if (size < 900) {  	return new CommandResponseHandler ("There is a backlog at AfC.");  } else if (size < 1200) {  	return new CommandResponseHandler ("AfC is highly backlogged at the moment.");  } else if (size < 2000) {  	return new CommandResponseHandler ("There is a severe backlog at AfC.");  } else if (size < 4000) {  	return new CommandResponseHandler ("AfC is critically backlogged.");  } else if (size < 10000) {  	return new CommandResponseHandler ("AfC is out of order.");  } else {  	return new CommandResponseHandler ("Unknown error occurred' current status of AfC is unknown."' CommandResponseDestination.PrivateMessage);  }  
Magic Number,helpmebot6.Commands,Afcbacklog,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Afcbacklog.cs,ExecuteCommand,The following statement contains a magic number: if (size < 200) {  	return new CommandResponseHandler ("AfC is clearing out.");  } else if (size < 400) {  	return new CommandResponseHandler ("There is a normal backlog at AfC.");  } else if (size < 650) {  	return new CommandResponseHandler ("AfC is semi-backlogged at the moment.");  } else if (size < 900) {  	return new CommandResponseHandler ("There is a backlog at AfC.");  } else if (size < 1200) {  	return new CommandResponseHandler ("AfC is highly backlogged at the moment.");  } else if (size < 2000) {  	return new CommandResponseHandler ("There is a severe backlog at AfC.");  } else if (size < 4000) {  	return new CommandResponseHandler ("AfC is critically backlogged.");  } else if (size < 10000) {  	return new CommandResponseHandler ("AfC is out of order.");  } else {  	return new CommandResponseHandler ("Unknown error occurred' current status of AfC is unknown."' CommandResponseDestination.PrivateMessage);  }  
Magic Number,helpmebot6.Commands,Afcbacklog,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Afcbacklog.cs,ExecuteCommand,The following statement contains a magic number: if (size < 200) {  	return new CommandResponseHandler ("AfC is clearing out.");  } else if (size < 400) {  	return new CommandResponseHandler ("There is a normal backlog at AfC.");  } else if (size < 650) {  	return new CommandResponseHandler ("AfC is semi-backlogged at the moment.");  } else if (size < 900) {  	return new CommandResponseHandler ("There is a backlog at AfC.");  } else if (size < 1200) {  	return new CommandResponseHandler ("AfC is highly backlogged at the moment.");  } else if (size < 2000) {  	return new CommandResponseHandler ("There is a severe backlog at AfC.");  } else if (size < 4000) {  	return new CommandResponseHandler ("AfC is critically backlogged.");  } else if (size < 10000) {  	return new CommandResponseHandler ("AfC is out of order.");  } else {  	return new CommandResponseHandler ("Unknown error occurred' current status of AfC is unknown."' CommandResponseDestination.PrivateMessage);  }  
Magic Number,helpmebot6.Commands,Afcbacklog,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Afcbacklog.cs,ExecuteCommand,The following statement contains a magic number: if (size < 200) {  	return new CommandResponseHandler ("AfC is clearing out.");  } else if (size < 400) {  	return new CommandResponseHandler ("There is a normal backlog at AfC.");  } else if (size < 650) {  	return new CommandResponseHandler ("AfC is semi-backlogged at the moment.");  } else if (size < 900) {  	return new CommandResponseHandler ("There is a backlog at AfC.");  } else if (size < 1200) {  	return new CommandResponseHandler ("AfC is highly backlogged at the moment.");  } else if (size < 2000) {  	return new CommandResponseHandler ("There is a severe backlog at AfC.");  } else if (size < 4000) {  	return new CommandResponseHandler ("AfC is critically backlogged.");  } else if (size < 10000) {  	return new CommandResponseHandler ("AfC is out of order.");  } else {  	return new CommandResponseHandler ("Unknown error occurred' current status of AfC is unknown."' CommandResponseDestination.PrivateMessage);  }  
Magic Number,helpmebot6.Commands,Afcbacklog,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Afcbacklog.cs,ExecuteCommand,The following statement contains a magic number: if (size < 200) {  	return new CommandResponseHandler ("AfC is clearing out.");  } else if (size < 400) {  	return new CommandResponseHandler ("There is a normal backlog at AfC.");  } else if (size < 650) {  	return new CommandResponseHandler ("AfC is semi-backlogged at the moment.");  } else if (size < 900) {  	return new CommandResponseHandler ("There is a backlog at AfC.");  } else if (size < 1200) {  	return new CommandResponseHandler ("AfC is highly backlogged at the moment.");  } else if (size < 2000) {  	return new CommandResponseHandler ("There is a severe backlog at AfC.");  } else if (size < 4000) {  	return new CommandResponseHandler ("AfC is critically backlogged.");  } else if (size < 10000) {  	return new CommandResponseHandler ("AfC is out of order.");  } else {  	return new CommandResponseHandler ("Unknown error occurred' current status of AfC is unknown."' CommandResponseDestination.PrivateMessage);  }  
Magic Number,helpmebot6.Commands,Afcbacklog,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Afcbacklog.cs,ExecuteCommand,The following statement contains a magic number: if (size < 200) {  	return new CommandResponseHandler ("AfC is clearing out.");  } else if (size < 400) {  	return new CommandResponseHandler ("There is a normal backlog at AfC.");  } else if (size < 650) {  	return new CommandResponseHandler ("AfC is semi-backlogged at the moment.");  } else if (size < 900) {  	return new CommandResponseHandler ("There is a backlog at AfC.");  } else if (size < 1200) {  	return new CommandResponseHandler ("AfC is highly backlogged at the moment.");  } else if (size < 2000) {  	return new CommandResponseHandler ("There is a severe backlog at AfC.");  } else if (size < 4000) {  	return new CommandResponseHandler ("AfC is critically backlogged.");  } else if (size < 10000) {  	return new CommandResponseHandler ("AfC is out of order.");  } else {  	return new CommandResponseHandler ("Unknown error occurred' current status of AfC is unknown."' CommandResponseDestination.PrivateMessage);  }  
Magic Number,helpmebot6.Commands,Afcbacklog,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Afcbacklog.cs,ExecuteCommand,The following statement contains a magic number: if (size < 200) {  	return new CommandResponseHandler ("AfC is clearing out.");  } else if (size < 400) {  	return new CommandResponseHandler ("There is a normal backlog at AfC.");  } else if (size < 650) {  	return new CommandResponseHandler ("AfC is semi-backlogged at the moment.");  } else if (size < 900) {  	return new CommandResponseHandler ("There is a backlog at AfC.");  } else if (size < 1200) {  	return new CommandResponseHandler ("AfC is highly backlogged at the moment.");  } else if (size < 2000) {  	return new CommandResponseHandler ("There is a severe backlog at AfC.");  } else if (size < 4000) {  	return new CommandResponseHandler ("AfC is critically backlogged.");  } else if (size < 10000) {  	return new CommandResponseHandler ("AfC is out of order.");  } else {  	return new CommandResponseHandler ("Unknown error occurred' current status of AfC is unknown."' CommandResponseDestination.PrivateMessage);  }  
Magic Number,helpmebot6.Commands,Afcbacklog,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Afcbacklog.cs,ExecuteCommand,The following statement contains a magic number: if (size < 400) {  	return new CommandResponseHandler ("There is a normal backlog at AfC.");  } else if (size < 650) {  	return new CommandResponseHandler ("AfC is semi-backlogged at the moment.");  } else if (size < 900) {  	return new CommandResponseHandler ("There is a backlog at AfC.");  } else if (size < 1200) {  	return new CommandResponseHandler ("AfC is highly backlogged at the moment.");  } else if (size < 2000) {  	return new CommandResponseHandler ("There is a severe backlog at AfC.");  } else if (size < 4000) {  	return new CommandResponseHandler ("AfC is critically backlogged.");  } else if (size < 10000) {  	return new CommandResponseHandler ("AfC is out of order.");  } else {  	return new CommandResponseHandler ("Unknown error occurred' current status of AfC is unknown."' CommandResponseDestination.PrivateMessage);  }  
Magic Number,helpmebot6.Commands,Afcbacklog,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Afcbacklog.cs,ExecuteCommand,The following statement contains a magic number: if (size < 400) {  	return new CommandResponseHandler ("There is a normal backlog at AfC.");  } else if (size < 650) {  	return new CommandResponseHandler ("AfC is semi-backlogged at the moment.");  } else if (size < 900) {  	return new CommandResponseHandler ("There is a backlog at AfC.");  } else if (size < 1200) {  	return new CommandResponseHandler ("AfC is highly backlogged at the moment.");  } else if (size < 2000) {  	return new CommandResponseHandler ("There is a severe backlog at AfC.");  } else if (size < 4000) {  	return new CommandResponseHandler ("AfC is critically backlogged.");  } else if (size < 10000) {  	return new CommandResponseHandler ("AfC is out of order.");  } else {  	return new CommandResponseHandler ("Unknown error occurred' current status of AfC is unknown."' CommandResponseDestination.PrivateMessage);  }  
Magic Number,helpmebot6.Commands,Afcbacklog,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Afcbacklog.cs,ExecuteCommand,The following statement contains a magic number: if (size < 400) {  	return new CommandResponseHandler ("There is a normal backlog at AfC.");  } else if (size < 650) {  	return new CommandResponseHandler ("AfC is semi-backlogged at the moment.");  } else if (size < 900) {  	return new CommandResponseHandler ("There is a backlog at AfC.");  } else if (size < 1200) {  	return new CommandResponseHandler ("AfC is highly backlogged at the moment.");  } else if (size < 2000) {  	return new CommandResponseHandler ("There is a severe backlog at AfC.");  } else if (size < 4000) {  	return new CommandResponseHandler ("AfC is critically backlogged.");  } else if (size < 10000) {  	return new CommandResponseHandler ("AfC is out of order.");  } else {  	return new CommandResponseHandler ("Unknown error occurred' current status of AfC is unknown."' CommandResponseDestination.PrivateMessage);  }  
Magic Number,helpmebot6.Commands,Afcbacklog,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Afcbacklog.cs,ExecuteCommand,The following statement contains a magic number: if (size < 400) {  	return new CommandResponseHandler ("There is a normal backlog at AfC.");  } else if (size < 650) {  	return new CommandResponseHandler ("AfC is semi-backlogged at the moment.");  } else if (size < 900) {  	return new CommandResponseHandler ("There is a backlog at AfC.");  } else if (size < 1200) {  	return new CommandResponseHandler ("AfC is highly backlogged at the moment.");  } else if (size < 2000) {  	return new CommandResponseHandler ("There is a severe backlog at AfC.");  } else if (size < 4000) {  	return new CommandResponseHandler ("AfC is critically backlogged.");  } else if (size < 10000) {  	return new CommandResponseHandler ("AfC is out of order.");  } else {  	return new CommandResponseHandler ("Unknown error occurred' current status of AfC is unknown."' CommandResponseDestination.PrivateMessage);  }  
Magic Number,helpmebot6.Commands,Afcbacklog,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Afcbacklog.cs,ExecuteCommand,The following statement contains a magic number: if (size < 400) {  	return new CommandResponseHandler ("There is a normal backlog at AfC.");  } else if (size < 650) {  	return new CommandResponseHandler ("AfC is semi-backlogged at the moment.");  } else if (size < 900) {  	return new CommandResponseHandler ("There is a backlog at AfC.");  } else if (size < 1200) {  	return new CommandResponseHandler ("AfC is highly backlogged at the moment.");  } else if (size < 2000) {  	return new CommandResponseHandler ("There is a severe backlog at AfC.");  } else if (size < 4000) {  	return new CommandResponseHandler ("AfC is critically backlogged.");  } else if (size < 10000) {  	return new CommandResponseHandler ("AfC is out of order.");  } else {  	return new CommandResponseHandler ("Unknown error occurred' current status of AfC is unknown."' CommandResponseDestination.PrivateMessage);  }  
Magic Number,helpmebot6.Commands,Afcbacklog,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Afcbacklog.cs,ExecuteCommand,The following statement contains a magic number: if (size < 400) {  	return new CommandResponseHandler ("There is a normal backlog at AfC.");  } else if (size < 650) {  	return new CommandResponseHandler ("AfC is semi-backlogged at the moment.");  } else if (size < 900) {  	return new CommandResponseHandler ("There is a backlog at AfC.");  } else if (size < 1200) {  	return new CommandResponseHandler ("AfC is highly backlogged at the moment.");  } else if (size < 2000) {  	return new CommandResponseHandler ("There is a severe backlog at AfC.");  } else if (size < 4000) {  	return new CommandResponseHandler ("AfC is critically backlogged.");  } else if (size < 10000) {  	return new CommandResponseHandler ("AfC is out of order.");  } else {  	return new CommandResponseHandler ("Unknown error occurred' current status of AfC is unknown."' CommandResponseDestination.PrivateMessage);  }  
Magic Number,helpmebot6.Commands,Afcbacklog,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Afcbacklog.cs,ExecuteCommand,The following statement contains a magic number: if (size < 400) {  	return new CommandResponseHandler ("There is a normal backlog at AfC.");  } else if (size < 650) {  	return new CommandResponseHandler ("AfC is semi-backlogged at the moment.");  } else if (size < 900) {  	return new CommandResponseHandler ("There is a backlog at AfC.");  } else if (size < 1200) {  	return new CommandResponseHandler ("AfC is highly backlogged at the moment.");  } else if (size < 2000) {  	return new CommandResponseHandler ("There is a severe backlog at AfC.");  } else if (size < 4000) {  	return new CommandResponseHandler ("AfC is critically backlogged.");  } else if (size < 10000) {  	return new CommandResponseHandler ("AfC is out of order.");  } else {  	return new CommandResponseHandler ("Unknown error occurred' current status of AfC is unknown."' CommandResponseDestination.PrivateMessage);  }  
Magic Number,helpmebot6.Commands,Afcbacklog,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Afcbacklog.cs,ExecuteCommand,The following statement contains a magic number: if (size < 650) {  	return new CommandResponseHandler ("AfC is semi-backlogged at the moment.");  } else if (size < 900) {  	return new CommandResponseHandler ("There is a backlog at AfC.");  } else if (size < 1200) {  	return new CommandResponseHandler ("AfC is highly backlogged at the moment.");  } else if (size < 2000) {  	return new CommandResponseHandler ("There is a severe backlog at AfC.");  } else if (size < 4000) {  	return new CommandResponseHandler ("AfC is critically backlogged.");  } else if (size < 10000) {  	return new CommandResponseHandler ("AfC is out of order.");  } else {  	return new CommandResponseHandler ("Unknown error occurred' current status of AfC is unknown."' CommandResponseDestination.PrivateMessage);  }  
Magic Number,helpmebot6.Commands,Afcbacklog,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Afcbacklog.cs,ExecuteCommand,The following statement contains a magic number: if (size < 650) {  	return new CommandResponseHandler ("AfC is semi-backlogged at the moment.");  } else if (size < 900) {  	return new CommandResponseHandler ("There is a backlog at AfC.");  } else if (size < 1200) {  	return new CommandResponseHandler ("AfC is highly backlogged at the moment.");  } else if (size < 2000) {  	return new CommandResponseHandler ("There is a severe backlog at AfC.");  } else if (size < 4000) {  	return new CommandResponseHandler ("AfC is critically backlogged.");  } else if (size < 10000) {  	return new CommandResponseHandler ("AfC is out of order.");  } else {  	return new CommandResponseHandler ("Unknown error occurred' current status of AfC is unknown."' CommandResponseDestination.PrivateMessage);  }  
Magic Number,helpmebot6.Commands,Afcbacklog,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Afcbacklog.cs,ExecuteCommand,The following statement contains a magic number: if (size < 650) {  	return new CommandResponseHandler ("AfC is semi-backlogged at the moment.");  } else if (size < 900) {  	return new CommandResponseHandler ("There is a backlog at AfC.");  } else if (size < 1200) {  	return new CommandResponseHandler ("AfC is highly backlogged at the moment.");  } else if (size < 2000) {  	return new CommandResponseHandler ("There is a severe backlog at AfC.");  } else if (size < 4000) {  	return new CommandResponseHandler ("AfC is critically backlogged.");  } else if (size < 10000) {  	return new CommandResponseHandler ("AfC is out of order.");  } else {  	return new CommandResponseHandler ("Unknown error occurred' current status of AfC is unknown."' CommandResponseDestination.PrivateMessage);  }  
Magic Number,helpmebot6.Commands,Afcbacklog,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Afcbacklog.cs,ExecuteCommand,The following statement contains a magic number: if (size < 650) {  	return new CommandResponseHandler ("AfC is semi-backlogged at the moment.");  } else if (size < 900) {  	return new CommandResponseHandler ("There is a backlog at AfC.");  } else if (size < 1200) {  	return new CommandResponseHandler ("AfC is highly backlogged at the moment.");  } else if (size < 2000) {  	return new CommandResponseHandler ("There is a severe backlog at AfC.");  } else if (size < 4000) {  	return new CommandResponseHandler ("AfC is critically backlogged.");  } else if (size < 10000) {  	return new CommandResponseHandler ("AfC is out of order.");  } else {  	return new CommandResponseHandler ("Unknown error occurred' current status of AfC is unknown."' CommandResponseDestination.PrivateMessage);  }  
Magic Number,helpmebot6.Commands,Afcbacklog,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Afcbacklog.cs,ExecuteCommand,The following statement contains a magic number: if (size < 650) {  	return new CommandResponseHandler ("AfC is semi-backlogged at the moment.");  } else if (size < 900) {  	return new CommandResponseHandler ("There is a backlog at AfC.");  } else if (size < 1200) {  	return new CommandResponseHandler ("AfC is highly backlogged at the moment.");  } else if (size < 2000) {  	return new CommandResponseHandler ("There is a severe backlog at AfC.");  } else if (size < 4000) {  	return new CommandResponseHandler ("AfC is critically backlogged.");  } else if (size < 10000) {  	return new CommandResponseHandler ("AfC is out of order.");  } else {  	return new CommandResponseHandler ("Unknown error occurred' current status of AfC is unknown."' CommandResponseDestination.PrivateMessage);  }  
Magic Number,helpmebot6.Commands,Afcbacklog,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Afcbacklog.cs,ExecuteCommand,The following statement contains a magic number: if (size < 650) {  	return new CommandResponseHandler ("AfC is semi-backlogged at the moment.");  } else if (size < 900) {  	return new CommandResponseHandler ("There is a backlog at AfC.");  } else if (size < 1200) {  	return new CommandResponseHandler ("AfC is highly backlogged at the moment.");  } else if (size < 2000) {  	return new CommandResponseHandler ("There is a severe backlog at AfC.");  } else if (size < 4000) {  	return new CommandResponseHandler ("AfC is critically backlogged.");  } else if (size < 10000) {  	return new CommandResponseHandler ("AfC is out of order.");  } else {  	return new CommandResponseHandler ("Unknown error occurred' current status of AfC is unknown."' CommandResponseDestination.PrivateMessage);  }  
Magic Number,helpmebot6.Commands,Afcbacklog,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Afcbacklog.cs,ExecuteCommand,The following statement contains a magic number: if (size < 900) {  	return new CommandResponseHandler ("There is a backlog at AfC.");  } else if (size < 1200) {  	return new CommandResponseHandler ("AfC is highly backlogged at the moment.");  } else if (size < 2000) {  	return new CommandResponseHandler ("There is a severe backlog at AfC.");  } else if (size < 4000) {  	return new CommandResponseHandler ("AfC is critically backlogged.");  } else if (size < 10000) {  	return new CommandResponseHandler ("AfC is out of order.");  } else {  	return new CommandResponseHandler ("Unknown error occurred' current status of AfC is unknown."' CommandResponseDestination.PrivateMessage);  }  
Magic Number,helpmebot6.Commands,Afcbacklog,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Afcbacklog.cs,ExecuteCommand,The following statement contains a magic number: if (size < 900) {  	return new CommandResponseHandler ("There is a backlog at AfC.");  } else if (size < 1200) {  	return new CommandResponseHandler ("AfC is highly backlogged at the moment.");  } else if (size < 2000) {  	return new CommandResponseHandler ("There is a severe backlog at AfC.");  } else if (size < 4000) {  	return new CommandResponseHandler ("AfC is critically backlogged.");  } else if (size < 10000) {  	return new CommandResponseHandler ("AfC is out of order.");  } else {  	return new CommandResponseHandler ("Unknown error occurred' current status of AfC is unknown."' CommandResponseDestination.PrivateMessage);  }  
Magic Number,helpmebot6.Commands,Afcbacklog,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Afcbacklog.cs,ExecuteCommand,The following statement contains a magic number: if (size < 900) {  	return new CommandResponseHandler ("There is a backlog at AfC.");  } else if (size < 1200) {  	return new CommandResponseHandler ("AfC is highly backlogged at the moment.");  } else if (size < 2000) {  	return new CommandResponseHandler ("There is a severe backlog at AfC.");  } else if (size < 4000) {  	return new CommandResponseHandler ("AfC is critically backlogged.");  } else if (size < 10000) {  	return new CommandResponseHandler ("AfC is out of order.");  } else {  	return new CommandResponseHandler ("Unknown error occurred' current status of AfC is unknown."' CommandResponseDestination.PrivateMessage);  }  
Magic Number,helpmebot6.Commands,Afcbacklog,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Afcbacklog.cs,ExecuteCommand,The following statement contains a magic number: if (size < 900) {  	return new CommandResponseHandler ("There is a backlog at AfC.");  } else if (size < 1200) {  	return new CommandResponseHandler ("AfC is highly backlogged at the moment.");  } else if (size < 2000) {  	return new CommandResponseHandler ("There is a severe backlog at AfC.");  } else if (size < 4000) {  	return new CommandResponseHandler ("AfC is critically backlogged.");  } else if (size < 10000) {  	return new CommandResponseHandler ("AfC is out of order.");  } else {  	return new CommandResponseHandler ("Unknown error occurred' current status of AfC is unknown."' CommandResponseDestination.PrivateMessage);  }  
Magic Number,helpmebot6.Commands,Afcbacklog,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Afcbacklog.cs,ExecuteCommand,The following statement contains a magic number: if (size < 900) {  	return new CommandResponseHandler ("There is a backlog at AfC.");  } else if (size < 1200) {  	return new CommandResponseHandler ("AfC is highly backlogged at the moment.");  } else if (size < 2000) {  	return new CommandResponseHandler ("There is a severe backlog at AfC.");  } else if (size < 4000) {  	return new CommandResponseHandler ("AfC is critically backlogged.");  } else if (size < 10000) {  	return new CommandResponseHandler ("AfC is out of order.");  } else {  	return new CommandResponseHandler ("Unknown error occurred' current status of AfC is unknown."' CommandResponseDestination.PrivateMessage);  }  
Magic Number,helpmebot6.Commands,Afcbacklog,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Afcbacklog.cs,ExecuteCommand,The following statement contains a magic number: if (size < 1200) {  	return new CommandResponseHandler ("AfC is highly backlogged at the moment.");  } else if (size < 2000) {  	return new CommandResponseHandler ("There is a severe backlog at AfC.");  } else if (size < 4000) {  	return new CommandResponseHandler ("AfC is critically backlogged.");  } else if (size < 10000) {  	return new CommandResponseHandler ("AfC is out of order.");  } else {  	return new CommandResponseHandler ("Unknown error occurred' current status of AfC is unknown."' CommandResponseDestination.PrivateMessage);  }  
Magic Number,helpmebot6.Commands,Afcbacklog,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Afcbacklog.cs,ExecuteCommand,The following statement contains a magic number: if (size < 1200) {  	return new CommandResponseHandler ("AfC is highly backlogged at the moment.");  } else if (size < 2000) {  	return new CommandResponseHandler ("There is a severe backlog at AfC.");  } else if (size < 4000) {  	return new CommandResponseHandler ("AfC is critically backlogged.");  } else if (size < 10000) {  	return new CommandResponseHandler ("AfC is out of order.");  } else {  	return new CommandResponseHandler ("Unknown error occurred' current status of AfC is unknown."' CommandResponseDestination.PrivateMessage);  }  
Magic Number,helpmebot6.Commands,Afcbacklog,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Afcbacklog.cs,ExecuteCommand,The following statement contains a magic number: if (size < 1200) {  	return new CommandResponseHandler ("AfC is highly backlogged at the moment.");  } else if (size < 2000) {  	return new CommandResponseHandler ("There is a severe backlog at AfC.");  } else if (size < 4000) {  	return new CommandResponseHandler ("AfC is critically backlogged.");  } else if (size < 10000) {  	return new CommandResponseHandler ("AfC is out of order.");  } else {  	return new CommandResponseHandler ("Unknown error occurred' current status of AfC is unknown."' CommandResponseDestination.PrivateMessage);  }  
Magic Number,helpmebot6.Commands,Afcbacklog,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Afcbacklog.cs,ExecuteCommand,The following statement contains a magic number: if (size < 1200) {  	return new CommandResponseHandler ("AfC is highly backlogged at the moment.");  } else if (size < 2000) {  	return new CommandResponseHandler ("There is a severe backlog at AfC.");  } else if (size < 4000) {  	return new CommandResponseHandler ("AfC is critically backlogged.");  } else if (size < 10000) {  	return new CommandResponseHandler ("AfC is out of order.");  } else {  	return new CommandResponseHandler ("Unknown error occurred' current status of AfC is unknown."' CommandResponseDestination.PrivateMessage);  }  
Magic Number,helpmebot6.Commands,Afcbacklog,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Afcbacklog.cs,ExecuteCommand,The following statement contains a magic number: if (size < 2000) {  	return new CommandResponseHandler ("There is a severe backlog at AfC.");  } else if (size < 4000) {  	return new CommandResponseHandler ("AfC is critically backlogged.");  } else if (size < 10000) {  	return new CommandResponseHandler ("AfC is out of order.");  } else {  	return new CommandResponseHandler ("Unknown error occurred' current status of AfC is unknown."' CommandResponseDestination.PrivateMessage);  }  
Magic Number,helpmebot6.Commands,Afcbacklog,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Afcbacklog.cs,ExecuteCommand,The following statement contains a magic number: if (size < 2000) {  	return new CommandResponseHandler ("There is a severe backlog at AfC.");  } else if (size < 4000) {  	return new CommandResponseHandler ("AfC is critically backlogged.");  } else if (size < 10000) {  	return new CommandResponseHandler ("AfC is out of order.");  } else {  	return new CommandResponseHandler ("Unknown error occurred' current status of AfC is unknown."' CommandResponseDestination.PrivateMessage);  }  
Magic Number,helpmebot6.Commands,Afcbacklog,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Afcbacklog.cs,ExecuteCommand,The following statement contains a magic number: if (size < 2000) {  	return new CommandResponseHandler ("There is a severe backlog at AfC.");  } else if (size < 4000) {  	return new CommandResponseHandler ("AfC is critically backlogged.");  } else if (size < 10000) {  	return new CommandResponseHandler ("AfC is out of order.");  } else {  	return new CommandResponseHandler ("Unknown error occurred' current status of AfC is unknown."' CommandResponseDestination.PrivateMessage);  }  
Magic Number,helpmebot6.Commands,Afcbacklog,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Afcbacklog.cs,ExecuteCommand,The following statement contains a magic number: if (size < 4000) {  	return new CommandResponseHandler ("AfC is critically backlogged.");  } else if (size < 10000) {  	return new CommandResponseHandler ("AfC is out of order.");  } else {  	return new CommandResponseHandler ("Unknown error occurred' current status of AfC is unknown."' CommandResponseDestination.PrivateMessage);  }  
Magic Number,helpmebot6.Commands,Afcbacklog,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Afcbacklog.cs,ExecuteCommand,The following statement contains a magic number: if (size < 4000) {  	return new CommandResponseHandler ("AfC is critically backlogged.");  } else if (size < 10000) {  	return new CommandResponseHandler ("AfC is out of order.");  } else {  	return new CommandResponseHandler ("Unknown error occurred' current status of AfC is unknown."' CommandResponseDestination.PrivateMessage);  }  
Magic Number,helpmebot6.Commands,Afcbacklog,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Afcbacklog.cs,ExecuteCommand,The following statement contains a magic number: if (size < 10000) {  	return new CommandResponseHandler ("AfC is out of order.");  } else {  	return new CommandResponseHandler ("Unknown error occurred' current status of AfC is unknown."' CommandResponseDestination.PrivateMessage);  }  
Magic Number,helpmebot6.Commands,Age,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Age.cs,ExecuteCommand,The following statement contains a magic number: if (time.Equals (new TimeSpan (0))) {  	string[] messageParameters =  {  		userName  	};  	message = messageService.RetrieveMessage ("noSuchUser"' this.Channel' messageParameters);  } else {  	string[] messageParameters =  {  		userName'  		(time.Days / 365).ToString (CultureInfo.InvariantCulture)'  		(time.Days % 365).ToString (CultureInfo.InvariantCulture)'  		time.Hours.ToString (CultureInfo.InvariantCulture)'  		time.Minutes.ToString (CultureInfo.InvariantCulture)'  		time.Seconds.ToString (CultureInfo.InvariantCulture)  	};  	message = messageService.RetrieveMessage ("cmdAge"' this.Channel' messageParameters);  }  
Magic Number,helpmebot6.Commands,Age,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Age.cs,ExecuteCommand,The following statement contains a magic number: if (time.Equals (new TimeSpan (0))) {  	string[] messageParameters =  {  		userName  	};  	message = messageService.RetrieveMessage ("noSuchUser"' this.Channel' messageParameters);  } else {  	string[] messageParameters =  {  		userName'  		(time.Days / 365).ToString (CultureInfo.InvariantCulture)'  		(time.Days % 365).ToString (CultureInfo.InvariantCulture)'  		time.Hours.ToString (CultureInfo.InvariantCulture)'  		time.Minutes.ToString (CultureInfo.InvariantCulture)'  		time.Seconds.ToString (CultureInfo.InvariantCulture)  	};  	message = messageService.RetrieveMessage ("cmdAge"' this.Channel' messageParameters);  }  
Magic Number,helpmebot6.Commands,Blockuser,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Blockuser.cs,ExecuteCommand,The following statement contains a magic number: if (name.Contains (":")) {  	string origname = name;  	string[] parts = name.Split (new[] {  		':'  	}' 2);  	name = parts [1];  	prefix = parts [0];  	if (this.CommandServiceHelper.InterwikiPrefixRepository.GetByPrefix (prefix) == null) {  		name = origname;  		prefix = string.Empty;  	} else {  		prefix += ":";  	}  }  
Magic Number,helpmebot6.Commands,Decode,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Decode.cs,GetIpAddressFromHex,The following statement contains a magic number: ip [0] = Convert.ToByte (input.Substring (0' 2)' 16);  
Magic Number,helpmebot6.Commands,Decode,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Decode.cs,GetIpAddressFromHex,The following statement contains a magic number: ip [0] = Convert.ToByte (input.Substring (0' 2)' 16);  
Magic Number,helpmebot6.Commands,Decode,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Decode.cs,GetIpAddressFromHex,The following statement contains a magic number: ip [1] = Convert.ToByte (input.Substring (2' 2)' 16);  
Magic Number,helpmebot6.Commands,Decode,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Decode.cs,GetIpAddressFromHex,The following statement contains a magic number: ip [1] = Convert.ToByte (input.Substring (2' 2)' 16);  
Magic Number,helpmebot6.Commands,Decode,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Decode.cs,GetIpAddressFromHex,The following statement contains a magic number: ip [1] = Convert.ToByte (input.Substring (2' 2)' 16);  
Magic Number,helpmebot6.Commands,Decode,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Decode.cs,GetIpAddressFromHex,The following statement contains a magic number: ip [2] = Convert.ToByte (input.Substring (4' 2)' 16);  
Magic Number,helpmebot6.Commands,Decode,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Decode.cs,GetIpAddressFromHex,The following statement contains a magic number: ip [2] = Convert.ToByte (input.Substring (4' 2)' 16);  
Magic Number,helpmebot6.Commands,Decode,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Decode.cs,GetIpAddressFromHex,The following statement contains a magic number: ip [2] = Convert.ToByte (input.Substring (4' 2)' 16);  
Magic Number,helpmebot6.Commands,Decode,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Decode.cs,GetIpAddressFromHex,The following statement contains a magic number: ip [2] = Convert.ToByte (input.Substring (4' 2)' 16);  
Magic Number,helpmebot6.Commands,Decode,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Decode.cs,GetIpAddressFromHex,The following statement contains a magic number: ip [3] = Convert.ToByte (input.Substring (6' 2)' 16);  
Magic Number,helpmebot6.Commands,Decode,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Decode.cs,GetIpAddressFromHex,The following statement contains a magic number: ip [3] = Convert.ToByte (input.Substring (6' 2)' 16);  
Magic Number,helpmebot6.Commands,Decode,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Decode.cs,GetIpAddressFromHex,The following statement contains a magic number: ip [3] = Convert.ToByte (input.Substring (6' 2)' 16);  
Magic Number,helpmebot6.Commands,Decode,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Decode.cs,GetIpAddressFromHex,The following statement contains a magic number: ip [3] = Convert.ToByte (input.Substring (6' 2)' 16);  
Magic Number,helpmebot6.Commands,Learn,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Learn.cs,ExecuteCommand,The following statement contains a magic number: if (args.Count > 3) {  	if (args [0] == "@action") {  		action = true;  		args.PopFromFront ();  	}  }  
Magic Number,helpmebot6.Commands,Learn,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Learn.cs,ExecuteCommand,The following statement contains a magic number: if (args.Count >= 2) {  	var keywordName = args.PopFromFront ();  	string message;  	try {  		this.keywordService.Create (keywordName' args.Implode ()' action);  		message = messageService.RetrieveMessage ("cmdLearnDone"' this.Channel' null);  	} catch (Exception ex) {  		message = messageService.RetrieveMessage ("cmdLearnError"' this.Channel' null);  		this.Log.Error ("Error learning command"' ex);  	}  	this.CommandServiceHelper.Client.SendNotice (this.Source.Nickname' message);  } else {  	string[] messageParameters =  {  		"learn"'  		"2"'  		args.Count.ToString (CultureInfo.InvariantCulture)  	};  	this.CommandServiceHelper.Client.SendNotice (this.Source.Nickname' messageService.RetrieveMessage (Messages.NotEnoughParameters' this.Channel' messageParameters));  }  
Magic Number,helpmebot6.Commands,Registration,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Registration.cs,GetRegistrationDate,The following statement contains a magic number: using (var xmlFragment = HttpRequest.Get (uri).ToStream ()) {  	var creader = new XmlTextReader (xmlFragment);  	do {  		creader.Read ();  	} while (creader.Name != "user");  	string apiRegDate = creader.GetAttribute ("registration");  	if (apiRegDate != null) {  		if (apiRegDate == string.Empty) {  			var registrationDate = new DateTime (1970' 1' 1' 0' 0' 0);  			RegistrationCache.Add (baseWiki + "||" + username' registrationDate);  			return registrationDate;  		}  		DateTime regDate = DateTime.Parse (apiRegDate);  		RegistrationCache.Add (baseWiki + "||" + username' regDate);  		return regDate;  	}  }  
Magic Number,helpmebot6.Commands,Registration,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Registration.cs,GetRegistrationDate,The following statement contains a magic number: if (apiRegDate != null) {  	if (apiRegDate == string.Empty) {  		var registrationDate = new DateTime (1970' 1' 1' 0' 0' 0);  		RegistrationCache.Add (baseWiki + "||" + username' registrationDate);  		return registrationDate;  	}  	DateTime regDate = DateTime.Parse (apiRegDate);  	RegistrationCache.Add (baseWiki + "||" + username' regDate);  	return regDate;  }  
Magic Number,helpmebot6.Commands,Registration,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Registration.cs,GetRegistrationDate,The following statement contains a magic number: if (apiRegDate == string.Empty) {  	var registrationDate = new DateTime (1970' 1' 1' 0' 0' 0);  	RegistrationCache.Add (baseWiki + "||" + username' registrationDate);  	return registrationDate;  }  
Magic Number,helpmebot6.Commands,Rights,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Rights.cs,GetRights,The following statement contains a magic number: using (var stream = HttpRequest.Get (uri).ToStream ()) {  	var creader = new XmlTextReader (stream);  	do {  		creader.Read ();  	} while (creader.Name != "user");  	creader.Read ();  	if (creader.Name == "groups") {  		// the start of the group list  		do {  			creader.Read ();  			string rightsList = creader.ReadString ();  			if (!(rightsList == string.Empty || rightsList == "*")) {  				returnStr = returnStr + rightsList + "' ";  			}  			rightsCount = rightsCount + 1;  		} while (creader.Name == "g");  		// each group should be added  	}  	returnStr = rightsCount == 0 ? string.Empty : returnStr.Remove (returnStr.Length - 2);  	return returnStr;  }  
Magic Number,helpmebot6.Commands,Rights,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Rights.cs,GetRights,The following statement contains a magic number: returnStr = rightsCount == 0 ? string.Empty : returnStr.Remove (returnStr.Length - 2);  
Magic Number,helpmebot6.Commands,Set,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Set.cs,ExecuteCommand,The following statement contains a magic number: if (this.Arguments [0] == "global") {  	LegacyConfig.Singleton () [this.Arguments [1]] = this.Arguments [2];  } else {  	LegacyConfig.Singleton () [this.Arguments [1]' this.Arguments [0]] = this.Arguments [2];  }  
Magic Number,helpmebot6.Commands,Set,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Set.cs,ExecuteCommand,The following statement contains a magic number: if (this.Arguments [0] == "global") {  	LegacyConfig.Singleton () [this.Arguments [1]] = this.Arguments [2];  } else {  	LegacyConfig.Singleton () [this.Arguments [1]' this.Arguments [0]] = this.Arguments [2];  }  
Magic Number,helpmebot6.Commands,Set,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Set.cs,ExecuteCommand,The following statement contains a magic number: LegacyConfig.Singleton () [this.Arguments [1]] = this.Arguments [2];  
Magic Number,helpmebot6.Commands,Set,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Set.cs,ExecuteCommand,The following statement contains a magic number: LegacyConfig.Singleton () [this.Arguments [1]' this.Arguments [0]] = this.Arguments [2];  
Magic Number,Helpmebot.Legacy.Database,LegacyDatabase,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Database\LegacyDatabase.cs,RunConnectionTest,The following statement contains a magic number: while (!connectionOk || totalTimeSlept >= 180 /*seconds*/* 1000/*transform to milliseconds*/) {  	if (!firstTime) {  		this.Log.Warn ("Reconnecting to database...");  		this.Connect ();  		Thread.Sleep (sleepTime);  		totalTimeSlept += sleepTime;  		sleepTime = (int)(sleepTime * 1.5) > int.MaxValue ? sleepTime : (int)(sleepTime * 1.5);  	}  	while (this.connection.State == ConnectionState.Connecting) {  		Thread.Sleep (100);  		totalTimeSlept += 100;  	}  	connectionOk = (this.connection.State == ConnectionState.Open) || (this.connection.State == ConnectionState.Fetching) || (this.connection.State == ConnectionState.Executing);  	firstTime = false;  }  
Magic Number,Helpmebot.Legacy.Database,LegacyDatabase,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Database\LegacyDatabase.cs,RunConnectionTest,The following statement contains a magic number: while (!connectionOk || totalTimeSlept >= 180 /*seconds*/* 1000/*transform to milliseconds*/) {  	if (!firstTime) {  		this.Log.Warn ("Reconnecting to database...");  		this.Connect ();  		Thread.Sleep (sleepTime);  		totalTimeSlept += sleepTime;  		sleepTime = (int)(sleepTime * 1.5) > int.MaxValue ? sleepTime : (int)(sleepTime * 1.5);  	}  	while (this.connection.State == ConnectionState.Connecting) {  		Thread.Sleep (100);  		totalTimeSlept += 100;  	}  	connectionOk = (this.connection.State == ConnectionState.Open) || (this.connection.State == ConnectionState.Fetching) || (this.connection.State == ConnectionState.Executing);  	firstTime = false;  }  
Magic Number,Helpmebot.Legacy.Database,LegacyDatabase,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Database\LegacyDatabase.cs,RunConnectionTest,The following statement contains a magic number: while (!connectionOk || totalTimeSlept >= 180 /*seconds*/* 1000/*transform to milliseconds*/) {  	if (!firstTime) {  		this.Log.Warn ("Reconnecting to database...");  		this.Connect ();  		Thread.Sleep (sleepTime);  		totalTimeSlept += sleepTime;  		sleepTime = (int)(sleepTime * 1.5) > int.MaxValue ? sleepTime : (int)(sleepTime * 1.5);  	}  	while (this.connection.State == ConnectionState.Connecting) {  		Thread.Sleep (100);  		totalTimeSlept += 100;  	}  	connectionOk = (this.connection.State == ConnectionState.Open) || (this.connection.State == ConnectionState.Fetching) || (this.connection.State == ConnectionState.Executing);  	firstTime = false;  }  
Magic Number,Helpmebot.Legacy.Database,LegacyDatabase,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Database\LegacyDatabase.cs,RunConnectionTest,The following statement contains a magic number: while (!connectionOk || totalTimeSlept >= 180 /*seconds*/* 1000/*transform to milliseconds*/) {  	if (!firstTime) {  		this.Log.Warn ("Reconnecting to database...");  		this.Connect ();  		Thread.Sleep (sleepTime);  		totalTimeSlept += sleepTime;  		sleepTime = (int)(sleepTime * 1.5) > int.MaxValue ? sleepTime : (int)(sleepTime * 1.5);  	}  	while (this.connection.State == ConnectionState.Connecting) {  		Thread.Sleep (100);  		totalTimeSlept += 100;  	}  	connectionOk = (this.connection.State == ConnectionState.Open) || (this.connection.State == ConnectionState.Fetching) || (this.connection.State == ConnectionState.Executing);  	firstTime = false;  }  
Magic Number,Helpmebot.Legacy.Database,LegacyDatabase,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Database\LegacyDatabase.cs,RunConnectionTest,The following statement contains a magic number: while (!connectionOk || totalTimeSlept >= 180 /*seconds*/* 1000/*transform to milliseconds*/) {  	if (!firstTime) {  		this.Log.Warn ("Reconnecting to database...");  		this.Connect ();  		Thread.Sleep (sleepTime);  		totalTimeSlept += sleepTime;  		sleepTime = (int)(sleepTime * 1.5) > int.MaxValue ? sleepTime : (int)(sleepTime * 1.5);  	}  	while (this.connection.State == ConnectionState.Connecting) {  		Thread.Sleep (100);  		totalTimeSlept += 100;  	}  	connectionOk = (this.connection.State == ConnectionState.Open) || (this.connection.State == ConnectionState.Fetching) || (this.connection.State == ConnectionState.Executing);  	firstTime = false;  }  
Magic Number,Helpmebot.Legacy.Database,LegacyDatabase,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Database\LegacyDatabase.cs,RunConnectionTest,The following statement contains a magic number: while (!connectionOk || totalTimeSlept >= 180 /*seconds*/* 1000/*transform to milliseconds*/) {  	if (!firstTime) {  		this.Log.Warn ("Reconnecting to database...");  		this.Connect ();  		Thread.Sleep (sleepTime);  		totalTimeSlept += sleepTime;  		sleepTime = (int)(sleepTime * 1.5) > int.MaxValue ? sleepTime : (int)(sleepTime * 1.5);  	}  	while (this.connection.State == ConnectionState.Connecting) {  		Thread.Sleep (100);  		totalTimeSlept += 100;  	}  	connectionOk = (this.connection.State == ConnectionState.Open) || (this.connection.State == ConnectionState.Fetching) || (this.connection.State == ConnectionState.Executing);  	firstTime = false;  }  
Magic Number,Helpmebot.Legacy.Database,LegacyDatabase,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Database\LegacyDatabase.cs,RunConnectionTest,The following statement contains a magic number: if (!firstTime) {  	this.Log.Warn ("Reconnecting to database...");  	this.Connect ();  	Thread.Sleep (sleepTime);  	totalTimeSlept += sleepTime;  	sleepTime = (int)(sleepTime * 1.5) > int.MaxValue ? sleepTime : (int)(sleepTime * 1.5);  }  
Magic Number,Helpmebot.Legacy.Database,LegacyDatabase,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Database\LegacyDatabase.cs,RunConnectionTest,The following statement contains a magic number: if (!firstTime) {  	this.Log.Warn ("Reconnecting to database...");  	this.Connect ();  	Thread.Sleep (sleepTime);  	totalTimeSlept += sleepTime;  	sleepTime = (int)(sleepTime * 1.5) > int.MaxValue ? sleepTime : (int)(sleepTime * 1.5);  }  
Magic Number,Helpmebot.Legacy.Database,LegacyDatabase,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Database\LegacyDatabase.cs,RunConnectionTest,The following statement contains a magic number: sleepTime = (int)(sleepTime * 1.5) > int.MaxValue ? sleepTime : (int)(sleepTime * 1.5);  
Magic Number,Helpmebot.Legacy.Database,LegacyDatabase,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Database\LegacyDatabase.cs,RunConnectionTest,The following statement contains a magic number: sleepTime = (int)(sleepTime * 1.5) > int.MaxValue ? sleepTime : (int)(sleepTime * 1.5);  
Magic Number,Helpmebot.Legacy.Database,LegacyDatabase,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Database\LegacyDatabase.cs,RunConnectionTest,The following statement contains a magic number: while (this.connection.State == ConnectionState.Connecting) {  	Thread.Sleep (100);  	totalTimeSlept += 100;  }  
Magic Number,Helpmebot.Legacy.Database,LegacyDatabase,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Database\LegacyDatabase.cs,RunConnectionTest,The following statement contains a magic number: while (this.connection.State == ConnectionState.Connecting) {  	Thread.Sleep (100);  	totalTimeSlept += 100;  }  
Magic Number,Helpmebot.Legacy.Database,LegacyDatabase,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Database\LegacyDatabase.cs,RunConnectionTest,The following statement contains a magic number: Thread.Sleep (100);  
Magic Number,Helpmebot.Legacy.Database,LegacyDatabase,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Database\LegacyDatabase.cs,RunConnectionTest,The following statement contains a magic number: totalTimeSlept += 100;  
Magic Number,Helpmebot.Legacy.Model,LegacyUser,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Model\LegacyUser.cs,NewFromString,The following statement contains a magic number: try {  	if (source.Contains ("@") && source.Contains ("!")) {  		char[] splitSeparators =  {  			'!''  			'@'  		};  		string[] sourceSegment = source.Split (splitSeparators' 3);  		nick = sourceSegment [0];  		user = sourceSegment [1];  		host = sourceSegment [2];  	} else if (source.Contains ("@")) {  		char[] splitSeparators =  {  			'@'  		};  		string[] sourceSegment = source.Split (splitSeparators' 2);  		nick = sourceSegment [0];  		host = sourceSegment [1];  	} else {  		nick = source;  	}  } catch (IndexOutOfRangeException ex) {  	logger.Error (ex.Message' ex);  }  
Magic Number,Helpmebot.Legacy.Model,LegacyUser,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Model\LegacyUser.cs,NewFromString,The following statement contains a magic number: try {  	if (source.Contains ("@") && source.Contains ("!")) {  		char[] splitSeparators =  {  			'!''  			'@'  		};  		string[] sourceSegment = source.Split (splitSeparators' 3);  		nick = sourceSegment [0];  		user = sourceSegment [1];  		host = sourceSegment [2];  	} else if (source.Contains ("@")) {  		char[] splitSeparators =  {  			'@'  		};  		string[] sourceSegment = source.Split (splitSeparators' 2);  		nick = sourceSegment [0];  		host = sourceSegment [1];  	} else {  		nick = source;  	}  } catch (IndexOutOfRangeException ex) {  	logger.Error (ex.Message' ex);  }  
Magic Number,Helpmebot.Legacy.Model,LegacyUser,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Model\LegacyUser.cs,NewFromString,The following statement contains a magic number: try {  	if (source.Contains ("@") && source.Contains ("!")) {  		char[] splitSeparators =  {  			'!''  			'@'  		};  		string[] sourceSegment = source.Split (splitSeparators' 3);  		nick = sourceSegment [0];  		user = sourceSegment [1];  		host = sourceSegment [2];  	} else if (source.Contains ("@")) {  		char[] splitSeparators =  {  			'@'  		};  		string[] sourceSegment = source.Split (splitSeparators' 2);  		nick = sourceSegment [0];  		host = sourceSegment [1];  	} else {  		nick = source;  	}  } catch (IndexOutOfRangeException ex) {  	logger.Error (ex.Message' ex);  }  
Magic Number,Helpmebot.Legacy.Model,LegacyUser,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Model\LegacyUser.cs,NewFromString,The following statement contains a magic number: if (source.Contains ("@") && source.Contains ("!")) {  	char[] splitSeparators =  {  		'!''  		'@'  	};  	string[] sourceSegment = source.Split (splitSeparators' 3);  	nick = sourceSegment [0];  	user = sourceSegment [1];  	host = sourceSegment [2];  } else if (source.Contains ("@")) {  	char[] splitSeparators =  {  		'@'  	};  	string[] sourceSegment = source.Split (splitSeparators' 2);  	nick = sourceSegment [0];  	host = sourceSegment [1];  } else {  	nick = source;  }  
Magic Number,Helpmebot.Legacy.Model,LegacyUser,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Model\LegacyUser.cs,NewFromString,The following statement contains a magic number: if (source.Contains ("@") && source.Contains ("!")) {  	char[] splitSeparators =  {  		'!''  		'@'  	};  	string[] sourceSegment = source.Split (splitSeparators' 3);  	nick = sourceSegment [0];  	user = sourceSegment [1];  	host = sourceSegment [2];  } else if (source.Contains ("@")) {  	char[] splitSeparators =  {  		'@'  	};  	string[] sourceSegment = source.Split (splitSeparators' 2);  	nick = sourceSegment [0];  	host = sourceSegment [1];  } else {  	nick = source;  }  
Magic Number,Helpmebot.Legacy.Model,LegacyUser,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Model\LegacyUser.cs,NewFromString,The following statement contains a magic number: if (source.Contains ("@") && source.Contains ("!")) {  	char[] splitSeparators =  {  		'!''  		'@'  	};  	string[] sourceSegment = source.Split (splitSeparators' 3);  	nick = sourceSegment [0];  	user = sourceSegment [1];  	host = sourceSegment [2];  } else if (source.Contains ("@")) {  	char[] splitSeparators =  {  		'@'  	};  	string[] sourceSegment = source.Split (splitSeparators' 2);  	nick = sourceSegment [0];  	host = sourceSegment [1];  } else {  	nick = source;  }  
Magic Number,Helpmebot.Legacy.Model,LegacyUser,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Model\LegacyUser.cs,NewFromString,The following statement contains a magic number: host = sourceSegment [2];  
Magic Number,Helpmebot.Legacy.Model,LegacyUser,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Model\LegacyUser.cs,NewFromString,The following statement contains a magic number: if (source.Contains ("@")) {  	char[] splitSeparators =  {  		'@'  	};  	string[] sourceSegment = source.Split (splitSeparators' 2);  	nick = sourceSegment [0];  	host = sourceSegment [1];  } else {  	nick = source;  }  
Magic Number,Helpmebot.Model,Keyword,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Model\Keyword.cs,GetHashCode,The following statement contains a magic number: unchecked {  	var hashCode = this.Name != null ? this.Name.GetHashCode () : 0;  	hashCode = (hashCode * 397) ^ (this.Response != null ? this.Response.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ this.Action.GetHashCode ();  	return hashCode;  }  
Magic Number,Helpmebot.Model,Keyword,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Model\Keyword.cs,GetHashCode,The following statement contains a magic number: unchecked {  	var hashCode = this.Name != null ? this.Name.GetHashCode () : 0;  	hashCode = (hashCode * 397) ^ (this.Response != null ? this.Response.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ this.Action.GetHashCode ();  	return hashCode;  }  
Magic Number,Helpmebot.Model,Keyword,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Model\Keyword.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (this.Response != null ? this.Response.GetHashCode () : 0);  
Magic Number,Helpmebot.Model,Keyword,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Model\Keyword.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ this.Action.GetHashCode ();  
Magic Number,Helpmebot.Services,ModeMonitoringService,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Services\ModeMonitoringService.cs,OnMessageReceived,The following statement contains a magic number: if (e.Message.Command == Numerics.BanListEntry) {  	var parameters = e.Message.Parameters.ToList ();  	this.ProcessBanListEntry (parameters [2]' parameters [1]' "b");  }  
Magic Number,Helpmebot.Services,ModeMonitoringService,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Services\ModeMonitoringService.cs,OnMessageReceived,The following statement contains a magic number: this.ProcessBanListEntry (parameters [2]' parameters [1]' "b");  
Magic Number,Helpmebot.Services,ModeMonitoringService,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Services\ModeMonitoringService.cs,OnMessageReceived,The following statement contains a magic number: if (e.Message.Command == Numerics.QuietListEntry) {  	var parameters = e.Message.Parameters.ToList ();  	this.ProcessBanListEntry (parameters [3]' parameters [1]' "q");  }  
Magic Number,Helpmebot.Services,ModeMonitoringService,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Services\ModeMonitoringService.cs,OnMessageReceived,The following statement contains a magic number: this.ProcessBanListEntry (parameters [3]' parameters [1]' "q");  
Magic Number,Helpmebot.Services,ModeMonitoringService,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Services\ModeMonitoringService.cs,OnMessageReceived,The following statement contains a magic number: if (e.Message.Command == Numerics.ExemptListEntry) {  	var parameters = e.Message.Parameters.ToList ();  	this.ProcessBanListEntry (parameters [2]' parameters [1]' "e");  }  
Magic Number,Helpmebot.Services,ModeMonitoringService,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Services\ModeMonitoringService.cs,OnMessageReceived,The following statement contains a magic number: this.ProcessBanListEntry (parameters [2]' parameters [1]' "e");  
Magic Number,Helpmebot.Services,MessageService,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Services\MessageService.cs,RetrieveMessage,The following statement contains a magic number: if (builtString.StartsWith ("#ACTION")) {  	builtString = builtString.Substring (8).SetupForCtcp ("ACTION");  }  
Magic Number,Helpmebot.Services,MessageService,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Services\MessageService.cs,RetrieveMessage,The following statement contains a magic number: builtString = builtString.Substring (8).SetupForCtcp ("ACTION");  
Magic Number,Helpmebot.Monitoring,CategoryWatcher,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Monitoring\CategoryWatcher.cs,WatcherThreadMethod,The following statement contains a magic number: try {  	while (true) {  		this.logger.DebugFormat ("Sleeping thread for {0} seconds"' this.SleepTime);  		int remaining = this.SleepTime * 1000;  		// iteratively sleep (yuck) until we've got less than a second of our sleep remaining - sounds like a good enough tolerance for me.  		while (remaining > 1000) {  			var millisecondsTimeout = remaining / 2;  			var stopwatch = Stopwatch.StartNew ();  			Thread.Sleep (millisecondsTimeout);  			stopwatch.Stop ();  			remaining -= (int)stopwatch.ElapsedMilliseconds;  			this.logger.DebugFormat ("Thread has woken after {0}ms' with {1} ms remaining"' stopwatch.ElapsedMilliseconds' remaining);  		}  		this.logger.DebugFormat ("Thread wakeup"' this.SleepTime);  		try {  			var categoryCheckResult = this.DoCategoryCheck ();  			IEnumerable<string> categoryResults = categoryCheckResult.ToList ();  			if (categoryResults.Any ()) {  				var onCategoryHasItemsEvent = this.CategoryHasItemsEvent;  				if (onCategoryHasItemsEvent != null) {  					onCategoryHasItemsEvent (this' new CategoryHasItemsEventArgs (categoryResults' this.key));  				}  			}  		} catch (WebException e) {  			this.logger.Warn (e.Message' e);  		}  	}  } catch (ThreadAbortException) {  	EventHandler temp = this.ThreadFatalErrorEvent;  	if (temp != null) {  		temp (this' new EventArgs ());  	}  }  
Magic Number,Helpmebot.Monitoring,CategoryWatcher,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Monitoring\CategoryWatcher.cs,WatcherThreadMethod,The following statement contains a magic number: try {  	while (true) {  		this.logger.DebugFormat ("Sleeping thread for {0} seconds"' this.SleepTime);  		int remaining = this.SleepTime * 1000;  		// iteratively sleep (yuck) until we've got less than a second of our sleep remaining - sounds like a good enough tolerance for me.  		while (remaining > 1000) {  			var millisecondsTimeout = remaining / 2;  			var stopwatch = Stopwatch.StartNew ();  			Thread.Sleep (millisecondsTimeout);  			stopwatch.Stop ();  			remaining -= (int)stopwatch.ElapsedMilliseconds;  			this.logger.DebugFormat ("Thread has woken after {0}ms' with {1} ms remaining"' stopwatch.ElapsedMilliseconds' remaining);  		}  		this.logger.DebugFormat ("Thread wakeup"' this.SleepTime);  		try {  			var categoryCheckResult = this.DoCategoryCheck ();  			IEnumerable<string> categoryResults = categoryCheckResult.ToList ();  			if (categoryResults.Any ()) {  				var onCategoryHasItemsEvent = this.CategoryHasItemsEvent;  				if (onCategoryHasItemsEvent != null) {  					onCategoryHasItemsEvent (this' new CategoryHasItemsEventArgs (categoryResults' this.key));  				}  			}  		} catch (WebException e) {  			this.logger.Warn (e.Message' e);  		}  	}  } catch (ThreadAbortException) {  	EventHandler temp = this.ThreadFatalErrorEvent;  	if (temp != null) {  		temp (this' new EventArgs ());  	}  }  
Magic Number,Helpmebot.Monitoring,CategoryWatcher,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Monitoring\CategoryWatcher.cs,WatcherThreadMethod,The following statement contains a magic number: try {  	while (true) {  		this.logger.DebugFormat ("Sleeping thread for {0} seconds"' this.SleepTime);  		int remaining = this.SleepTime * 1000;  		// iteratively sleep (yuck) until we've got less than a second of our sleep remaining - sounds like a good enough tolerance for me.  		while (remaining > 1000) {  			var millisecondsTimeout = remaining / 2;  			var stopwatch = Stopwatch.StartNew ();  			Thread.Sleep (millisecondsTimeout);  			stopwatch.Stop ();  			remaining -= (int)stopwatch.ElapsedMilliseconds;  			this.logger.DebugFormat ("Thread has woken after {0}ms' with {1} ms remaining"' stopwatch.ElapsedMilliseconds' remaining);  		}  		this.logger.DebugFormat ("Thread wakeup"' this.SleepTime);  		try {  			var categoryCheckResult = this.DoCategoryCheck ();  			IEnumerable<string> categoryResults = categoryCheckResult.ToList ();  			if (categoryResults.Any ()) {  				var onCategoryHasItemsEvent = this.CategoryHasItemsEvent;  				if (onCategoryHasItemsEvent != null) {  					onCategoryHasItemsEvent (this' new CategoryHasItemsEventArgs (categoryResults' this.key));  				}  			}  		} catch (WebException e) {  			this.logger.Warn (e.Message' e);  		}  	}  } catch (ThreadAbortException) {  	EventHandler temp = this.ThreadFatalErrorEvent;  	if (temp != null) {  		temp (this' new EventArgs ());  	}  }  
Magic Number,Helpmebot.Monitoring,CategoryWatcher,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Monitoring\CategoryWatcher.cs,WatcherThreadMethod,The following statement contains a magic number: while (true) {  	this.logger.DebugFormat ("Sleeping thread for {0} seconds"' this.SleepTime);  	int remaining = this.SleepTime * 1000;  	// iteratively sleep (yuck) until we've got less than a second of our sleep remaining - sounds like a good enough tolerance for me.  	while (remaining > 1000) {  		var millisecondsTimeout = remaining / 2;  		var stopwatch = Stopwatch.StartNew ();  		Thread.Sleep (millisecondsTimeout);  		stopwatch.Stop ();  		remaining -= (int)stopwatch.ElapsedMilliseconds;  		this.logger.DebugFormat ("Thread has woken after {0}ms' with {1} ms remaining"' stopwatch.ElapsedMilliseconds' remaining);  	}  	this.logger.DebugFormat ("Thread wakeup"' this.SleepTime);  	try {  		var categoryCheckResult = this.DoCategoryCheck ();  		IEnumerable<string> categoryResults = categoryCheckResult.ToList ();  		if (categoryResults.Any ()) {  			var onCategoryHasItemsEvent = this.CategoryHasItemsEvent;  			if (onCategoryHasItemsEvent != null) {  				onCategoryHasItemsEvent (this' new CategoryHasItemsEventArgs (categoryResults' this.key));  			}  		}  	} catch (WebException e) {  		this.logger.Warn (e.Message' e);  	}  }  
Magic Number,Helpmebot.Monitoring,CategoryWatcher,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Monitoring\CategoryWatcher.cs,WatcherThreadMethod,The following statement contains a magic number: while (true) {  	this.logger.DebugFormat ("Sleeping thread for {0} seconds"' this.SleepTime);  	int remaining = this.SleepTime * 1000;  	// iteratively sleep (yuck) until we've got less than a second of our sleep remaining - sounds like a good enough tolerance for me.  	while (remaining > 1000) {  		var millisecondsTimeout = remaining / 2;  		var stopwatch = Stopwatch.StartNew ();  		Thread.Sleep (millisecondsTimeout);  		stopwatch.Stop ();  		remaining -= (int)stopwatch.ElapsedMilliseconds;  		this.logger.DebugFormat ("Thread has woken after {0}ms' with {1} ms remaining"' stopwatch.ElapsedMilliseconds' remaining);  	}  	this.logger.DebugFormat ("Thread wakeup"' this.SleepTime);  	try {  		var categoryCheckResult = this.DoCategoryCheck ();  		IEnumerable<string> categoryResults = categoryCheckResult.ToList ();  		if (categoryResults.Any ()) {  			var onCategoryHasItemsEvent = this.CategoryHasItemsEvent;  			if (onCategoryHasItemsEvent != null) {  				onCategoryHasItemsEvent (this' new CategoryHasItemsEventArgs (categoryResults' this.key));  			}  		}  	} catch (WebException e) {  		this.logger.Warn (e.Message' e);  	}  }  
Magic Number,Helpmebot.Monitoring,CategoryWatcher,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Monitoring\CategoryWatcher.cs,WatcherThreadMethod,The following statement contains a magic number: while (true) {  	this.logger.DebugFormat ("Sleeping thread for {0} seconds"' this.SleepTime);  	int remaining = this.SleepTime * 1000;  	// iteratively sleep (yuck) until we've got less than a second of our sleep remaining - sounds like a good enough tolerance for me.  	while (remaining > 1000) {  		var millisecondsTimeout = remaining / 2;  		var stopwatch = Stopwatch.StartNew ();  		Thread.Sleep (millisecondsTimeout);  		stopwatch.Stop ();  		remaining -= (int)stopwatch.ElapsedMilliseconds;  		this.logger.DebugFormat ("Thread has woken after {0}ms' with {1} ms remaining"' stopwatch.ElapsedMilliseconds' remaining);  	}  	this.logger.DebugFormat ("Thread wakeup"' this.SleepTime);  	try {  		var categoryCheckResult = this.DoCategoryCheck ();  		IEnumerable<string> categoryResults = categoryCheckResult.ToList ();  		if (categoryResults.Any ()) {  			var onCategoryHasItemsEvent = this.CategoryHasItemsEvent;  			if (onCategoryHasItemsEvent != null) {  				onCategoryHasItemsEvent (this' new CategoryHasItemsEventArgs (categoryResults' this.key));  			}  		}  	} catch (WebException e) {  		this.logger.Warn (e.Message' e);  	}  }  
Magic Number,Helpmebot.Monitoring,CategoryWatcher,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Monitoring\CategoryWatcher.cs,WatcherThreadMethod,The following statement contains a magic number: while (remaining > 1000) {  	var millisecondsTimeout = remaining / 2;  	var stopwatch = Stopwatch.StartNew ();  	Thread.Sleep (millisecondsTimeout);  	stopwatch.Stop ();  	remaining -= (int)stopwatch.ElapsedMilliseconds;  	this.logger.DebugFormat ("Thread has woken after {0}ms' with {1} ms remaining"' stopwatch.ElapsedMilliseconds' remaining);  }  
Magic Number,Helpmebot.Monitoring,CategoryWatcher,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Monitoring\CategoryWatcher.cs,WatcherThreadMethod,The following statement contains a magic number: while (remaining > 1000) {  	var millisecondsTimeout = remaining / 2;  	var stopwatch = Stopwatch.StartNew ();  	Thread.Sleep (millisecondsTimeout);  	stopwatch.Stop ();  	remaining -= (int)stopwatch.ElapsedMilliseconds;  	this.logger.DebugFormat ("Thread has woken after {0}ms' with {1} ms remaining"' stopwatch.ElapsedMilliseconds' remaining);  }  
Magic Number,Helpmebot.Monitoring,WatcherController,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Monitoring\WatcherController.cs,CompileMessage,The following statement contains a magic number: if (items.Any ()) {  	string listString = string.Empty;  	foreach (string item in items) {  		// Display [[]]'ied name of the page which requests help  		listString += "[[" + item + "]] ";  		// Display an http URL to the page' if desired  		if (shortenUrls) {  			string urlName = item.Replace (' '' '_');  			string uriString = LegacyConfig.Singleton () ["wikiUrl"] + HttpUtility.UrlEncode (urlName);  			listString += this.urlShorteningService.Shorten (uriString);  		}  		if (showWaitTime) {  			var command = new MySqlCommand ("SELECT item_entrytime FROM categoryitems WHERE item_name = @name and item_keyword = @keyword;");  			command.Parameters.AddWithValue ("@name"' item);  			command.Parameters.AddWithValue ("@keyword"' keyword);  			string insertDate = this.legacyDatabase.ExecuteScalarSelect (command);  			DateTime realInsertDate;  			if (!DateTime.TryParse (insertDate' out realInsertDate)) {  				realInsertDate = DateTime.Now;  			}  			TimeSpan ts = DateTime.Now - realInsertDate;  			if (ts >= minimumWaitTime) {  				string[] messageparams =  {  					ts.Hours.ToString (CultureInfo.InvariantCulture).PadLeft (2' '0')'  					ts.Minutes.ToString (CultureInfo.InvariantCulture).PadLeft (2' '0')'  					ts.Seconds.ToString (CultureInfo.InvariantCulture).PadLeft (2' '0')'  					ts.TotalDays >= 1 ? ((int)Math.Floor (ts.TotalDays)) + "d " : string.Empty  				};  				listString += this.messageService.RetrieveMessage ("catWatcherWaiting"' destination' messageparams);  			}  		}  		// trailing space added as a hack because MediaWiki doesn't preserve the trailing space :(  		listString += this.messageService.RetrieveMessage ("listSeparator"' destination' null) + " ";  	}  	listString = listString.TrimEnd (' '' ''');  	string pluralString = items.Count () == 1 ? this.messageService.RetrieveMessage (keyword + "Singular"' destination' new[] {  		"keywordSingularDefault"  	}) : this.messageService.RetrieveMessage (keyword + "Plural"' destination' new[] {  		"keywordPluralDefault"  	});  	string[] messageParams =  {  		items.Count ().ToString (CultureInfo.InvariantCulture)'  		pluralString'  		listString  	};  	message = this.messageService.RetrieveMessage (keyword + (showDelta ? "New" : string.Empty) + "HasItems"' destination' messageParams);  } else {  	string[] mp =  {  		this.messageService.RetrieveMessage (keyword + "Plural"' destination' new[] {  			"keywordPluralDefault"  		})  	};  	message = this.messageService.RetrieveMessage (keyword + "NoItems"' destination' mp);  }  
Magic Number,Helpmebot.Monitoring,WatcherController,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Monitoring\WatcherController.cs,CompileMessage,The following statement contains a magic number: if (items.Any ()) {  	string listString = string.Empty;  	foreach (string item in items) {  		// Display [[]]'ied name of the page which requests help  		listString += "[[" + item + "]] ";  		// Display an http URL to the page' if desired  		if (shortenUrls) {  			string urlName = item.Replace (' '' '_');  			string uriString = LegacyConfig.Singleton () ["wikiUrl"] + HttpUtility.UrlEncode (urlName);  			listString += this.urlShorteningService.Shorten (uriString);  		}  		if (showWaitTime) {  			var command = new MySqlCommand ("SELECT item_entrytime FROM categoryitems WHERE item_name = @name and item_keyword = @keyword;");  			command.Parameters.AddWithValue ("@name"' item);  			command.Parameters.AddWithValue ("@keyword"' keyword);  			string insertDate = this.legacyDatabase.ExecuteScalarSelect (command);  			DateTime realInsertDate;  			if (!DateTime.TryParse (insertDate' out realInsertDate)) {  				realInsertDate = DateTime.Now;  			}  			TimeSpan ts = DateTime.Now - realInsertDate;  			if (ts >= minimumWaitTime) {  				string[] messageparams =  {  					ts.Hours.ToString (CultureInfo.InvariantCulture).PadLeft (2' '0')'  					ts.Minutes.ToString (CultureInfo.InvariantCulture).PadLeft (2' '0')'  					ts.Seconds.ToString (CultureInfo.InvariantCulture).PadLeft (2' '0')'  					ts.TotalDays >= 1 ? ((int)Math.Floor (ts.TotalDays)) + "d " : string.Empty  				};  				listString += this.messageService.RetrieveMessage ("catWatcherWaiting"' destination' messageparams);  			}  		}  		// trailing space added as a hack because MediaWiki doesn't preserve the trailing space :(  		listString += this.messageService.RetrieveMessage ("listSeparator"' destination' null) + " ";  	}  	listString = listString.TrimEnd (' '' ''');  	string pluralString = items.Count () == 1 ? this.messageService.RetrieveMessage (keyword + "Singular"' destination' new[] {  		"keywordSingularDefault"  	}) : this.messageService.RetrieveMessage (keyword + "Plural"' destination' new[] {  		"keywordPluralDefault"  	});  	string[] messageParams =  {  		items.Count ().ToString (CultureInfo.InvariantCulture)'  		pluralString'  		listString  	};  	message = this.messageService.RetrieveMessage (keyword + (showDelta ? "New" : string.Empty) + "HasItems"' destination' messageParams);  } else {  	string[] mp =  {  		this.messageService.RetrieveMessage (keyword + "Plural"' destination' new[] {  			"keywordPluralDefault"  		})  	};  	message = this.messageService.RetrieveMessage (keyword + "NoItems"' destination' mp);  }  
Magic Number,Helpmebot.Monitoring,WatcherController,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Monitoring\WatcherController.cs,CompileMessage,The following statement contains a magic number: if (items.Any ()) {  	string listString = string.Empty;  	foreach (string item in items) {  		// Display [[]]'ied name of the page which requests help  		listString += "[[" + item + "]] ";  		// Display an http URL to the page' if desired  		if (shortenUrls) {  			string urlName = item.Replace (' '' '_');  			string uriString = LegacyConfig.Singleton () ["wikiUrl"] + HttpUtility.UrlEncode (urlName);  			listString += this.urlShorteningService.Shorten (uriString);  		}  		if (showWaitTime) {  			var command = new MySqlCommand ("SELECT item_entrytime FROM categoryitems WHERE item_name = @name and item_keyword = @keyword;");  			command.Parameters.AddWithValue ("@name"' item);  			command.Parameters.AddWithValue ("@keyword"' keyword);  			string insertDate = this.legacyDatabase.ExecuteScalarSelect (command);  			DateTime realInsertDate;  			if (!DateTime.TryParse (insertDate' out realInsertDate)) {  				realInsertDate = DateTime.Now;  			}  			TimeSpan ts = DateTime.Now - realInsertDate;  			if (ts >= minimumWaitTime) {  				string[] messageparams =  {  					ts.Hours.ToString (CultureInfo.InvariantCulture).PadLeft (2' '0')'  					ts.Minutes.ToString (CultureInfo.InvariantCulture).PadLeft (2' '0')'  					ts.Seconds.ToString (CultureInfo.InvariantCulture).PadLeft (2' '0')'  					ts.TotalDays >= 1 ? ((int)Math.Floor (ts.TotalDays)) + "d " : string.Empty  				};  				listString += this.messageService.RetrieveMessage ("catWatcherWaiting"' destination' messageparams);  			}  		}  		// trailing space added as a hack because MediaWiki doesn't preserve the trailing space :(  		listString += this.messageService.RetrieveMessage ("listSeparator"' destination' null) + " ";  	}  	listString = listString.TrimEnd (' '' ''');  	string pluralString = items.Count () == 1 ? this.messageService.RetrieveMessage (keyword + "Singular"' destination' new[] {  		"keywordSingularDefault"  	}) : this.messageService.RetrieveMessage (keyword + "Plural"' destination' new[] {  		"keywordPluralDefault"  	});  	string[] messageParams =  {  		items.Count ().ToString (CultureInfo.InvariantCulture)'  		pluralString'  		listString  	};  	message = this.messageService.RetrieveMessage (keyword + (showDelta ? "New" : string.Empty) + "HasItems"' destination' messageParams);  } else {  	string[] mp =  {  		this.messageService.RetrieveMessage (keyword + "Plural"' destination' new[] {  			"keywordPluralDefault"  		})  	};  	message = this.messageService.RetrieveMessage (keyword + "NoItems"' destination' mp);  }  
Magic Number,Helpmebot.Monitoring,WatcherController,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Monitoring\WatcherController.cs,CompileMessage,The following statement contains a magic number: foreach (string item in items) {  	// Display [[]]'ied name of the page which requests help  	listString += "[[" + item + "]] ";  	// Display an http URL to the page' if desired  	if (shortenUrls) {  		string urlName = item.Replace (' '' '_');  		string uriString = LegacyConfig.Singleton () ["wikiUrl"] + HttpUtility.UrlEncode (urlName);  		listString += this.urlShorteningService.Shorten (uriString);  	}  	if (showWaitTime) {  		var command = new MySqlCommand ("SELECT item_entrytime FROM categoryitems WHERE item_name = @name and item_keyword = @keyword;");  		command.Parameters.AddWithValue ("@name"' item);  		command.Parameters.AddWithValue ("@keyword"' keyword);  		string insertDate = this.legacyDatabase.ExecuteScalarSelect (command);  		DateTime realInsertDate;  		if (!DateTime.TryParse (insertDate' out realInsertDate)) {  			realInsertDate = DateTime.Now;  		}  		TimeSpan ts = DateTime.Now - realInsertDate;  		if (ts >= minimumWaitTime) {  			string[] messageparams =  {  				ts.Hours.ToString (CultureInfo.InvariantCulture).PadLeft (2' '0')'  				ts.Minutes.ToString (CultureInfo.InvariantCulture).PadLeft (2' '0')'  				ts.Seconds.ToString (CultureInfo.InvariantCulture).PadLeft (2' '0')'  				ts.TotalDays >= 1 ? ((int)Math.Floor (ts.TotalDays)) + "d " : string.Empty  			};  			listString += this.messageService.RetrieveMessage ("catWatcherWaiting"' destination' messageparams);  		}  	}  	// trailing space added as a hack because MediaWiki doesn't preserve the trailing space :(  	listString += this.messageService.RetrieveMessage ("listSeparator"' destination' null) + " ";  }  
Magic Number,Helpmebot.Monitoring,WatcherController,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Monitoring\WatcherController.cs,CompileMessage,The following statement contains a magic number: foreach (string item in items) {  	// Display [[]]'ied name of the page which requests help  	listString += "[[" + item + "]] ";  	// Display an http URL to the page' if desired  	if (shortenUrls) {  		string urlName = item.Replace (' '' '_');  		string uriString = LegacyConfig.Singleton () ["wikiUrl"] + HttpUtility.UrlEncode (urlName);  		listString += this.urlShorteningService.Shorten (uriString);  	}  	if (showWaitTime) {  		var command = new MySqlCommand ("SELECT item_entrytime FROM categoryitems WHERE item_name = @name and item_keyword = @keyword;");  		command.Parameters.AddWithValue ("@name"' item);  		command.Parameters.AddWithValue ("@keyword"' keyword);  		string insertDate = this.legacyDatabase.ExecuteScalarSelect (command);  		DateTime realInsertDate;  		if (!DateTime.TryParse (insertDate' out realInsertDate)) {  			realInsertDate = DateTime.Now;  		}  		TimeSpan ts = DateTime.Now - realInsertDate;  		if (ts >= minimumWaitTime) {  			string[] messageparams =  {  				ts.Hours.ToString (CultureInfo.InvariantCulture).PadLeft (2' '0')'  				ts.Minutes.ToString (CultureInfo.InvariantCulture).PadLeft (2' '0')'  				ts.Seconds.ToString (CultureInfo.InvariantCulture).PadLeft (2' '0')'  				ts.TotalDays >= 1 ? ((int)Math.Floor (ts.TotalDays)) + "d " : string.Empty  			};  			listString += this.messageService.RetrieveMessage ("catWatcherWaiting"' destination' messageparams);  		}  	}  	// trailing space added as a hack because MediaWiki doesn't preserve the trailing space :(  	listString += this.messageService.RetrieveMessage ("listSeparator"' destination' null) + " ";  }  
Magic Number,Helpmebot.Monitoring,WatcherController,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Monitoring\WatcherController.cs,CompileMessage,The following statement contains a magic number: foreach (string item in items) {  	// Display [[]]'ied name of the page which requests help  	listString += "[[" + item + "]] ";  	// Display an http URL to the page' if desired  	if (shortenUrls) {  		string urlName = item.Replace (' '' '_');  		string uriString = LegacyConfig.Singleton () ["wikiUrl"] + HttpUtility.UrlEncode (urlName);  		listString += this.urlShorteningService.Shorten (uriString);  	}  	if (showWaitTime) {  		var command = new MySqlCommand ("SELECT item_entrytime FROM categoryitems WHERE item_name = @name and item_keyword = @keyword;");  		command.Parameters.AddWithValue ("@name"' item);  		command.Parameters.AddWithValue ("@keyword"' keyword);  		string insertDate = this.legacyDatabase.ExecuteScalarSelect (command);  		DateTime realInsertDate;  		if (!DateTime.TryParse (insertDate' out realInsertDate)) {  			realInsertDate = DateTime.Now;  		}  		TimeSpan ts = DateTime.Now - realInsertDate;  		if (ts >= minimumWaitTime) {  			string[] messageparams =  {  				ts.Hours.ToString (CultureInfo.InvariantCulture).PadLeft (2' '0')'  				ts.Minutes.ToString (CultureInfo.InvariantCulture).PadLeft (2' '0')'  				ts.Seconds.ToString (CultureInfo.InvariantCulture).PadLeft (2' '0')'  				ts.TotalDays >= 1 ? ((int)Math.Floor (ts.TotalDays)) + "d " : string.Empty  			};  			listString += this.messageService.RetrieveMessage ("catWatcherWaiting"' destination' messageparams);  		}  	}  	// trailing space added as a hack because MediaWiki doesn't preserve the trailing space :(  	listString += this.messageService.RetrieveMessage ("listSeparator"' destination' null) + " ";  }  
Magic Number,Helpmebot.Monitoring,WatcherController,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Monitoring\WatcherController.cs,CompileMessage,The following statement contains a magic number: if (showWaitTime) {  	var command = new MySqlCommand ("SELECT item_entrytime FROM categoryitems WHERE item_name = @name and item_keyword = @keyword;");  	command.Parameters.AddWithValue ("@name"' item);  	command.Parameters.AddWithValue ("@keyword"' keyword);  	string insertDate = this.legacyDatabase.ExecuteScalarSelect (command);  	DateTime realInsertDate;  	if (!DateTime.TryParse (insertDate' out realInsertDate)) {  		realInsertDate = DateTime.Now;  	}  	TimeSpan ts = DateTime.Now - realInsertDate;  	if (ts >= minimumWaitTime) {  		string[] messageparams =  {  			ts.Hours.ToString (CultureInfo.InvariantCulture).PadLeft (2' '0')'  			ts.Minutes.ToString (CultureInfo.InvariantCulture).PadLeft (2' '0')'  			ts.Seconds.ToString (CultureInfo.InvariantCulture).PadLeft (2' '0')'  			ts.TotalDays >= 1 ? ((int)Math.Floor (ts.TotalDays)) + "d " : string.Empty  		};  		listString += this.messageService.RetrieveMessage ("catWatcherWaiting"' destination' messageparams);  	}  }  
Magic Number,Helpmebot.Monitoring,WatcherController,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Monitoring\WatcherController.cs,CompileMessage,The following statement contains a magic number: if (showWaitTime) {  	var command = new MySqlCommand ("SELECT item_entrytime FROM categoryitems WHERE item_name = @name and item_keyword = @keyword;");  	command.Parameters.AddWithValue ("@name"' item);  	command.Parameters.AddWithValue ("@keyword"' keyword);  	string insertDate = this.legacyDatabase.ExecuteScalarSelect (command);  	DateTime realInsertDate;  	if (!DateTime.TryParse (insertDate' out realInsertDate)) {  		realInsertDate = DateTime.Now;  	}  	TimeSpan ts = DateTime.Now - realInsertDate;  	if (ts >= minimumWaitTime) {  		string[] messageparams =  {  			ts.Hours.ToString (CultureInfo.InvariantCulture).PadLeft (2' '0')'  			ts.Minutes.ToString (CultureInfo.InvariantCulture).PadLeft (2' '0')'  			ts.Seconds.ToString (CultureInfo.InvariantCulture).PadLeft (2' '0')'  			ts.TotalDays >= 1 ? ((int)Math.Floor (ts.TotalDays)) + "d " : string.Empty  		};  		listString += this.messageService.RetrieveMessage ("catWatcherWaiting"' destination' messageparams);  	}  }  
Magic Number,Helpmebot.Monitoring,WatcherController,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Monitoring\WatcherController.cs,CompileMessage,The following statement contains a magic number: if (showWaitTime) {  	var command = new MySqlCommand ("SELECT item_entrytime FROM categoryitems WHERE item_name = @name and item_keyword = @keyword;");  	command.Parameters.AddWithValue ("@name"' item);  	command.Parameters.AddWithValue ("@keyword"' keyword);  	string insertDate = this.legacyDatabase.ExecuteScalarSelect (command);  	DateTime realInsertDate;  	if (!DateTime.TryParse (insertDate' out realInsertDate)) {  		realInsertDate = DateTime.Now;  	}  	TimeSpan ts = DateTime.Now - realInsertDate;  	if (ts >= minimumWaitTime) {  		string[] messageparams =  {  			ts.Hours.ToString (CultureInfo.InvariantCulture).PadLeft (2' '0')'  			ts.Minutes.ToString (CultureInfo.InvariantCulture).PadLeft (2' '0')'  			ts.Seconds.ToString (CultureInfo.InvariantCulture).PadLeft (2' '0')'  			ts.TotalDays >= 1 ? ((int)Math.Floor (ts.TotalDays)) + "d " : string.Empty  		};  		listString += this.messageService.RetrieveMessage ("catWatcherWaiting"' destination' messageparams);  	}  }  
Magic Number,Helpmebot.Monitoring,WatcherController,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Monitoring\WatcherController.cs,CompileMessage,The following statement contains a magic number: if (ts >= minimumWaitTime) {  	string[] messageparams =  {  		ts.Hours.ToString (CultureInfo.InvariantCulture).PadLeft (2' '0')'  		ts.Minutes.ToString (CultureInfo.InvariantCulture).PadLeft (2' '0')'  		ts.Seconds.ToString (CultureInfo.InvariantCulture).PadLeft (2' '0')'  		ts.TotalDays >= 1 ? ((int)Math.Floor (ts.TotalDays)) + "d " : string.Empty  	};  	listString += this.messageService.RetrieveMessage ("catWatcherWaiting"' destination' messageparams);  }  
Magic Number,Helpmebot.Monitoring,WatcherController,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Monitoring\WatcherController.cs,CompileMessage,The following statement contains a magic number: if (ts >= minimumWaitTime) {  	string[] messageparams =  {  		ts.Hours.ToString (CultureInfo.InvariantCulture).PadLeft (2' '0')'  		ts.Minutes.ToString (CultureInfo.InvariantCulture).PadLeft (2' '0')'  		ts.Seconds.ToString (CultureInfo.InvariantCulture).PadLeft (2' '0')'  		ts.TotalDays >= 1 ? ((int)Math.Floor (ts.TotalDays)) + "d " : string.Empty  	};  	listString += this.messageService.RetrieveMessage ("catWatcherWaiting"' destination' messageparams);  }  
Magic Number,Helpmebot.Monitoring,WatcherController,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Monitoring\WatcherController.cs,CompileMessage,The following statement contains a magic number: if (ts >= minimumWaitTime) {  	string[] messageparams =  {  		ts.Hours.ToString (CultureInfo.InvariantCulture).PadLeft (2' '0')'  		ts.Minutes.ToString (CultureInfo.InvariantCulture).PadLeft (2' '0')'  		ts.Seconds.ToString (CultureInfo.InvariantCulture).PadLeft (2' '0')'  		ts.TotalDays >= 1 ? ((int)Math.Floor (ts.TotalDays)) + "d " : string.Empty  	};  	listString += this.messageService.RetrieveMessage ("catWatcherWaiting"' destination' messageparams);  }  
Magic Number,helpmebot6.Commands.CategoryWatcherCommand,Delay,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\CategoryWatcherCommand\Delay.cs,ExecuteCommand,The following statement contains a magic number: if (this.Arguments.Length > 2) {  	// 2 or more args  	return WatcherController.Instance ().SetDelay (this.Arguments [0]' int.Parse (this.Arguments [2])' this.Channel);  }  
Magic Number,helpmebot6.Commands.CategoryWatcherCommand,Delay,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\CategoryWatcherCommand\Delay.cs,ExecuteCommand,The following statement contains a magic number: if (this.Arguments.Length > 2) {  	// 2 or more args  	return WatcherController.Instance ().SetDelay (this.Arguments [0]' int.Parse (this.Arguments [2])' this.Channel);  }  
Magic Number,helpmebot6.Commands.CategoryWatcherCommand,Delay,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\CategoryWatcherCommand\Delay.cs,ExecuteCommand,The following statement contains a magic number: return WatcherController.Instance ().SetDelay (this.Arguments [0]' int.Parse (this.Arguments [2])' this.Channel);  
Magic Number,helpmebot6.Commands.CategoryWatcherCommand,Delay,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\CategoryWatcherCommand\Delay.cs,ExecuteCommand,The following statement contains a magic number: if (this.Arguments.Length == 2) {  	int delay = WatcherController.Instance ().GetDelay (this.Arguments [0]);  	string[] messageParams =  {  		this.Arguments [0]'  		delay.ToString (CultureInfo.InvariantCulture)  	};  	string message = this.CommandServiceHelper.MessageService.RetrieveMessage ("catWatcherCurrentDelay"' this.Channel' messageParams);  	return new CommandResponseHandler (message);  }  
Missing Default,Helpmebot.Background,NotificationBackgroundService,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Background\NotificationBackgroundService.cs,TimerOnElapsed,The following switch statement is missing a default case: switch (notification.Type) {  case 1:  	destination = "#wikipedia-en-accounts";  	break;  case 2:  	destination = "#wikipedia-en-accounts-devs";  	break;  }  
Missing Default,helpmebot6.Commands,Access,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Access.cs,ExecuteCommand,The following switch statement is missing a default case: switch (this.Arguments [2].ToLower ()) {  case "superuser":  	aL = LegacyUser.UserRights.Superuser;  	break;  case "advanced":  	aL = LegacyUser.UserRights.Advanced;  	break;  case "semi-ignored":  	aL = LegacyUser.UserRights.Semiignored;  	break;  case "semiignored":  	aL = LegacyUser.UserRights.Semiignored;  	break;  case "ignored":  	aL = LegacyUser.UserRights.Ignored;  	break;  case "normal":  	aL = LegacyUser.UserRights.Normal;  	break;  }  
Missing Default,helpmebot6.Commands,Blockmonitor,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Blockmonitor.cs,ExecuteCommand,The following switch statement is missing a default case: switch (mode.ToLower ()) {  case "add":  	this.AddMode (argumentsList' response);  	break;  case "del":  case "delete":  case "remove":  	this.DeleteMode (argumentsList' response);  	break;  }  
Missing Default,helpmebot6.Commands,Autolink,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Autolink.cs,ExecuteCommand,The following switch statement is missing a default case: switch (args [0].ToLower ()) {  case "enable":  	newValue = "true";  	break;  case "disable":  	newValue = "false";  	break;  case "global":  	newValue = "global";  	break;  }  
Missing Default,helpmebot6.Commands,Page,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Page.cs,ExecuteCommand,The following switch statement is missing a default case: switch (xtr.Name) {  case "r":  	// redirect!  	// <r from="Sausages" to="Sausage" />  	redirects = xtr.GetAttribute ("from");  	break;  case "page":  	if (xtr.GetAttribute ("missing") != null) {  		var msg = messageService.RetrieveMessage ("pageMissing"' this.Channel' null);  		return new CommandResponseHandler (msg);  	}  	title = xtr.GetAttribute ("title");  	touched = DateTime.Parse (xtr.GetAttribute ("touched"));  	break;  case "rev":  	// user' comment  	// <rev user="RjwilmsiBot" comment="..." />  	user = xtr.GetAttribute ("user");  	comment = xtr.GetAttribute ("comment");  	break;  case "pr":  	// protections    	// <pr type="edit" level="autoconfirmed" expiry="2010-06-30T18:36:52Z" />  	string time = xtr.GetAttribute ("expiry");  	protection.Add (new PageProtection (xtr.GetAttribute ("type")' xtr.GetAttribute ("level")' time == "infinity" ? DateTime.MaxValue : DateTime.Parse (time)));  	break;  }  
Missing Default,helpmebot6.Commands,Silence,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Silence.cs,ExecuteCommand,The following switch statement is missing a default case: switch (args [0].ToLower ()) {  case "enable":  	newValue = "true";  	break;  case "disable":  	newValue = "false";  	break;  case "global":  	newValue = "global";  	break;  }  
Missing Default,helpmebot6.Commands,Welcomer,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\Commands\Welcomer.cs,ExecuteCommand,The following switch statement is missing a default case: switch (mode.ToLower ()) {  case "enable":  case "disable":  	response.Respond (this.CommandServiceHelper.MessageService.RetrieveMessage ("Welcomer-ObsoleteOption"' this.Channel' new[] {  		mode  	})' CommandResponseDestination.PrivateMessage);  	break;  case "add":  	this.AddMode (argumentsList' response);  	break;  case "del":  case "delete":  case "remove":  	this.DeleteMode (argumentsList' response);  	break;  case "list":  	this.ListMode (response);  	break;  }  
Missing Default,Helpmebot.Model.ModeMonitoring,ModeChanges,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Model\ModeMonitoring\ModeChanges.cs,FromChangeList,The following switch statement is missing a default case: switch (c) {  case '+':  	adding = true;  	break;  case '-':  	adding = false;  	break;  case 'o':  	var op = modeParameters.First ();  	modeParameters.RemoveAt (0);  	if (adding) {  		changes.Ops.Add (op);  	} else {  		changes.Deops.Add (op);  	}  	break;  case 'b':  	var ban = modeParameters.First ();  	modeParameters.RemoveAt (0);  	if (adding) {  		changes.Bans.Add (ban);  	} else {  		changes.Unbans.Add (ban);  	}  	break;  case 'q':  	var quiet = modeParameters.First ();  	modeParameters.RemoveAt (0);  	if (adding) {  		changes.Quiets.Add (quiet);  	} else {  		changes.Unquiets.Add (quiet);  	}  	break;  case 'e':  	var exempt = modeParameters.First ();  	modeParameters.RemoveAt (0);  	if (adding) {  		changes.Exempts.Add (exempt);  	} else {  		changes.Unexempts.Add (exempt);  	}  	break;  case 'z':  	changes.ReducedModeration = adding;  	break;  case 'm':  	changes.Moderated = adding;  	break;  case 'r':  	changes.RegisteredOnly = adding;  	break;  case 'f':  case 'j':  case 'l':  case 'k':  	modeParameters.RemoveAt (0);  	break;  }  
Missing Default,Helpmebot.Services.Geolocation,IpInfoDbGeoloationService,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Services\Geolocation\IpInfoDbGeoloationService.cs,GetLocation,The following switch statement is missing a default case: switch (xtr.Name) {  case "statusCode":  	result.Status = xtr.ReadElementContentAsString ();  	break;  case "countryCode":  	result.CountryCode = xtr.ReadElementContentAsString ();  	break;  case "countryName":  	result.Country = xtr.ReadElementContentAsString ();  	break;  case "regionName":  	result.Region = xtr.ReadElementContentAsString ();  	break;  case "cityName":  	result.City = xtr.ReadElementContentAsString ();  	break;  case "zipCode":  	result.ZipPostalCode = xtr.ReadElementContentAsString ();  	break;  case "latitude":  	result.Latitude = xtr.ReadElementContentAsFloat ();  	break;  case "longitude":  	result.Longitude = xtr.ReadElementContentAsFloat ();  	break;  }  
Missing Default,Helpmebot.Legacy,LegacyCommandParser,F:\newReposMay17\helpmebot_helpmebot\src\Helpmebot\Legacy\LegacyCommandParser.cs,HandleCommandResponseHandler,The following switch statement is missing a default case: switch (item.Destination) {  case CommandResponseDestination.Default:  	if (this.OverrideBotSilence || LegacyConfig.Singleton () ["silence"' destination] != "true") {  		irc1.SendMessage (destination' message);  	}  	break;  case CommandResponseDestination.ChannelDebug:  	irc1.SendMessage (this.commandServiceHelper.ConfigurationHelper.CoreConfiguration.DebugChannel' message);  	break;  case CommandResponseDestination.PrivateMessage:  	irc1.SendMessage (source.Nickname' message);  	break;  }  
