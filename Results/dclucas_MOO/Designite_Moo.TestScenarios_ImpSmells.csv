Implementation smell,Namespace,Class,File,Method,Description
Magic Number,Moo.TestScenarios,FullMappingTests<TSource;TTarget>,D:\research\architectureSmells\repos\dclucas_MOO\Moo.TestScenarios\FullMappingTests.cs,CreateSourceObject,The following statement contains a magic number: fixture.Register(() => new Manager() { Id = 1234 });
Magic Number,Moo.TestScenarios,MappingSamples,D:\research\architectureSmells\repos\dclucas_MOO\Moo.TestScenarios\MappingSamples.cs,Sample_MapperSequenceOverride_CreatesCorrectly,The following statement contains a magic number: repo.AddMapping<Person' PersonEditModel>()                  .From(s => 111)                  .To(t => t.Id);
Magic Number,Moo.TestScenarios,MappingSamples,D:\research\architectureSmells\repos\dclucas_MOO\Moo.TestScenarios\MappingSamples.cs,Sample_SingleMapperSequenceOverride_CreatesCorrectly,The following statement contains a magic number: repo.AddMapping<Person' PersonEditModel>()                  .From(s => 111)                  .To(t => t.Id);
Magic Number,Moo.TestScenarios,MappingSamples,D:\research\architectureSmells\repos\dclucas_MOO\Moo.TestScenarios\MappingSamples.cs,Sample_SingleMapperSequenceOverride_CreatesCorrectly,The following statement contains a magic number: result.Id.ShouldBe(111);
Magic Number,Moo.TestScenarios,MappingSamples,D:\research\architectureSmells\repos\dclucas_MOO\Moo.TestScenarios\MappingSamples.cs,CreateSource,The following statement contains a magic number: return new Person()              {                  Id = 1234'                  LastName = "Doe"'                  FirstName = "John"'                  Contacts = new Contact[]                  {                      new Contact() { Email = "john.doe@email.com" }                  }'                  Account = new Account() { Login = "FakeLogin"' Password = "FakePassword" }              };
Magic Number,Moo.TestScenarios,MappingSamples,D:\research\architectureSmells\repos\dclucas_MOO\Moo.TestScenarios\MappingSamples.cs,CreateMany,The following statement contains a magic number: return Enumerable.Range(0' 5).Select(i => this.CreateSource());
