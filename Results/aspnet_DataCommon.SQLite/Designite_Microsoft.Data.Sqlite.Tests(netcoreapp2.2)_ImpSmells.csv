Implementation smell,Namespace,Class,File,Method,Description
Long Method,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetSchemaTable_works,The method has 110 lines of code.
Long Statement,Microsoft.Data.Sqlite,SqliteConnectionStringBuilderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteConnectionStringBuilderTest.cs,It_takes_last_alias_specified,The length of the statement  "            var builder = new SqliteConnectionStringBuilder("Filename=ignore me.db; Data Source=and me too.db; DataSource=this_one.db"); " is 124.
Magic Number,Microsoft.Data.Sqlite,SqliteCommandTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteCommandTest.cs,Multiple_command_executes_works,The following statement contains a magic number: const int INSERTS = 3;
Magic Number,Microsoft.Data.Sqlite,SqliteCommandTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteCommandTest.cs,ExecuteScalar_returns_double_when_real,The following statement contains a magic number: Assert.Equal(3.14' command.ExecuteScalar());
Magic Number,Microsoft.Data.Sqlite,SqliteCommandTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteCommandTest.cs,ExecuteScalar_returns_long_when_batching,The following statement contains a magic number: Assert.Equal(42L' command.ExecuteScalar());
Magic Number,Microsoft.Data.Sqlite,SqliteCommandTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteCommandTest.cs,ExecuteScalar_returns_long_when_multiple_columns,The following statement contains a magic number: Assert.Equal(42L' command.ExecuteScalar());
Magic Number,Microsoft.Data.Sqlite,SqliteCommandTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteCommandTest.cs,ExecuteScalar_returns_long_when_multiple_rows,The following statement contains a magic number: Assert.Equal(42L' command.ExecuteScalar());
Magic Number,Microsoft.Data.Sqlite,SqliteCommandTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteCommandTest.cs,ExecuteReader_retries_when_locked,The following statement contains a magic number: return Task.WhenAll(                  Task.Run(                      async () =>                          {                              using (var connection = new SqliteConnection(connectionString))                              {                                  connection.Open();                                  if (extendedErrorCode)                                  {                                      raw.sqlite3_extended_result_codes(connection.Handle' 1);                                  }                                    connection.ExecuteNonQuery(                                      "CREATE TABLE Data (Value); INSERT INTO Data VALUES (0);");                                    using (connection.ExecuteReader("SELECT * FROM Data;"))                                  {                                      selectedSignal.Set();                                        await Task.Delay(1000);                                  }                              }                          })'                  Task.Run(                      () =>                          {                              using (var connection = new SqliteConnection(connectionString))                              {                                  connection.Open();                                  if (extendedErrorCode)                                  {                                      raw.sqlite3_extended_result_codes(connection.Handle' 1);                                  }                                    selectedSignal.WaitOne();                                    var command = connection.CreateCommand();                                  command.CommandText = "DROP TABLE Data;";                                    command.ExecuteNonQuery();                              }                          }));
Magic Number,Microsoft.Data.Sqlite,SqliteCommandTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteCommandTest.cs,ExecuteReader_retries_when_busy,The following statement contains a magic number: await Task.WhenAll(                      Task.Run(                          async () =>                              {                                  using (var connection = new SqliteConnection(connectionString))                                  {                                      connection.Open();                                        connection.ExecuteNonQuery(                                          "CREATE TABLE Data (Value); INSERT INTO Data VALUES (0);");                                        using (connection.ExecuteReader("SELECT * FROM Data;"))                                      {                                          selectedSignal.Set();                                            await Task.Delay(1000);                                      }                                  }                              })'                      Task.Run(                          () =>                              {                                  using (var connection = new SqliteConnection(connectionString))                                  {                                      connection.Open();                                        selectedSignal.WaitOne();                                        var command = connection.CreateCommand();                                      command.CommandText = "DROP TABLE Data;";                                        command.ExecuteNonQuery();                                  }                              }));
Magic Number,Microsoft.Data.Sqlite,SqliteCommandTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteCommandTest.cs,ExecuteReader_honors_CommandTimeout,The following statement contains a magic number: Assert.InRange(stopwatch.ElapsedMilliseconds' 1000' 1999);
Magic Number,Microsoft.Data.Sqlite,SqliteCommandTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteCommandTest.cs,ExecuteReader_honors_CommandTimeout,The following statement contains a magic number: Assert.InRange(stopwatch.ElapsedMilliseconds' 1000' 1999);
Magic Number,Microsoft.Data.Sqlite,SqliteConnectionStringBuilderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteConnectionStringBuilderTest.cs,Keys_works,The following statement contains a magic number: Assert.Equal(3' keys.Count);
Magic Number,Microsoft.Data.Sqlite,SqliteConnectionStringBuilderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteConnectionStringBuilderTest.cs,Values_works,The following statement contains a magic number: Assert.Equal(3' values.Count);
Magic Number,Microsoft.Data.Sqlite,SqliteConnectionTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteConnectionTest.cs,DefaultTimeout_defaults_to_30,The following statement contains a magic number: Assert.Equal(30' connection.DefaultTimeout);
Magic Number,Microsoft.Data.Sqlite,SqliteConnectionTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteConnectionTest.cs,CreateFunction_works_when_sqlite_exception,The following statement contains a magic number: connection.CreateFunction<long>("test"' () => throw new SqliteException("Test"' 200));
Magic Number,Microsoft.Data.Sqlite,SqliteConnectionTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteConnectionTest.cs,CreateFunction_works_when_sqlite_exception,The following statement contains a magic number: Assert.Equal(Resources.SqliteNativeError(200' "Test")' ex.Message);
Magic Number,Microsoft.Data.Sqlite,SqliteConnectionTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteConnectionTest.cs,CreateFunction_works_when_sqlite_exception,The following statement contains a magic number: Assert.Equal(200' ex.SqliteErrorCode);
Magic Number,Microsoft.Data.Sqlite,SqliteConnectionTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteConnectionTest.cs,CreateAggregate_works_when_sqlite_exception,The following statement contains a magic number: connection.CreateAggregate("test"' (string a) => throw new SqliteException("Test"' 200));
Magic Number,Microsoft.Data.Sqlite,SqliteConnectionTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteConnectionTest.cs,CreateAggregate_works_when_sqlite_exception,The following statement contains a magic number: Assert.Equal(Resources.SqliteNativeError(200' "Test")' ex.Message);
Magic Number,Microsoft.Data.Sqlite,SqliteConnectionTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteConnectionTest.cs,CreateAggregate_works_when_sqlite_exception,The following statement contains a magic number: Assert.Equal(200' ex.SqliteErrorCode);
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetBytes_works,The following statement contains a magic number: var buffer = new byte[6];
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetBytes_works,The following statement contains a magic number: Assert.Equal(4' bytesRead);
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetBytes_works,The following statement contains a magic number: Assert.Equal(3' list.Count);
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetBytes_works,The following statement contains a magic number: Assert.Equal(new byte[6] { 0x42' 0x7E' 0x57' 0x43' 0' 0 }' list[0]);
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetBytes_works,The following statement contains a magic number: Assert.Equal(new byte[6] { 0x53' 0x8F' 0x68' 0x54' 0' 0 }' list[1]);
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetBytes_works,The following statement contains a magic number: Assert.Equal(new byte[6] { 0x64' 0x9A' 0x79' 0x65' 0' 0 }' list[2]);
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetBytes_works,The following statement contains a magic number: Assert.Equal(new byte[6] { 0x64' 0x9A' 0x79' 0x65' 0' 0 }' list[2]);
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetBytes_NullBuffer,The following statement contains a magic number: long bytesRead = reader.GetBytes(0' 1' buffer' 0' 3);
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetBytes_NullBuffer,The following statement contains a magic number: Assert.Equal(3' bytesRead);
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetBytes_works_with_overflow,The following statement contains a magic number: var hugeBuffer = new byte[1024];
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetBytes_works_with_overflow,The following statement contains a magic number: Assert.Equal(3' bytesRead);
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetBytes_works_with_overflow,The following statement contains a magic number: var correctBytes = new byte[3] { 0x7E' 0x57' 0x43 };
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetChars_works,The following statement contains a magic number: var buffer = new char[2];
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetChars_works,The following statement contains a magic number: Assert.Equal(new char[2] { 'e'' 's' }' buffer);
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetChars_works_with_overflow,The following statement contains a magic number: var hugeBuffer = new char[1024];
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetChars_works_with_overflow,The following statement contains a magic number: Assert.Equal(3' charsRead);
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetChars_works_with_overflow,The following statement contains a magic number: var correctBytes = new char[3] { 'e'' 's'' 't' };
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetValues_works,The following statement contains a magic number: var values = new object[2];
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,NextResult_works,The following statement contains a magic number: Assert.Equal(2L' reader.GetInt64(0));
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,NextResult_skips_DML_statements,The following statement contains a magic number: Assert.Equal(2L' reader.GetInt64(0));
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,Read_works,The following statement contains a magic number: Assert.Equal(2L' reader.GetInt64(0));
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetSchemaTable_works,The following statement contains a magic number: Assert.Equal(4' schema.Rows.Count);
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetSchemaTable_works,The following statement contains a magic number: Assert.Equal("Code"' schema.Rows[2]["ColumnName"]);
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetSchemaTable_works,The following statement contains a magic number: Assert.Equal(2' schema.Rows[2]["ColumnOrdinal"]);
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetSchemaTable_works,The following statement contains a magic number: Assert.Equal(2' schema.Rows[2]["ColumnOrdinal"]);
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetSchemaTable_works,The following statement contains a magic number: Assert.Equal(DBNull.Value' schema.Rows[2]["ColumnSize"]);
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetSchemaTable_works,The following statement contains a magic number: Assert.Equal(DBNull.Value' schema.Rows[2]["NumericPrecision"]);
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetSchemaTable_works,The following statement contains a magic number: Assert.Equal(DBNull.Value' schema.Rows[2]["NumericScale"]);
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetSchemaTable_works,The following statement contains a magic number: Assert.True((bool)schema.Rows[2]["IsUnique"]);
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetSchemaTable_works,The following statement contains a magic number: Assert.False((bool)schema.Rows[2]["IsKey"]);
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetSchemaTable_works,The following statement contains a magic number: Assert.Equal(""' schema.Rows[2]["BaseServerName"]);
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetSchemaTable_works,The following statement contains a magic number: Assert.Equal("main"' schema.Rows[2]["BaseCatalogName"]);
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetSchemaTable_works,The following statement contains a magic number: Assert.Equal("Code"' schema.Rows[2]["BaseColumnName"]);
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetSchemaTable_works,The following statement contains a magic number: Assert.Equal(DBNull.Value' schema.Rows[2]["BaseSchemaName"]);
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetSchemaTable_works,The following statement contains a magic number: Assert.Equal("Person"' schema.Rows[2]["BaseTableName"]);
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetSchemaTable_works,The following statement contains a magic number: Assert.Equal(typeof(long)' schema.Rows[2]["DataType"]);
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetSchemaTable_works,The following statement contains a magic number: Assert.Equal("INT"' schema.Rows[2]["DataTypeName"]);
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetSchemaTable_works,The following statement contains a magic number: Assert.True((bool)schema.Rows[2]["AllowDBNull"]);
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetSchemaTable_works,The following statement contains a magic number: Assert.False((bool)schema.Rows[2]["IsAliased"]);
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetSchemaTable_works,The following statement contains a magic number: Assert.False((bool)schema.Rows[2]["IsExpression"]);
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetSchemaTable_works,The following statement contains a magic number: Assert.False((bool)schema.Rows[2]["IsAutoIncrement"]);
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetSchemaTable_works,The following statement contains a magic number: Assert.Equal(DBNull.Value' schema.Rows[2]["IsLong"]);
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetSchemaTable_works,The following statement contains a magic number: Assert.Equal("IncID"' schema.Rows[3]["ColumnName"]);
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetSchemaTable_works,The following statement contains a magic number: Assert.Equal(3' schema.Rows[3]["ColumnOrdinal"]);
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetSchemaTable_works,The following statement contains a magic number: Assert.Equal(3' schema.Rows[3]["ColumnOrdinal"]);
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetSchemaTable_works,The following statement contains a magic number: Assert.Equal(DBNull.Value' schema.Rows[3]["ColumnSize"]);
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetSchemaTable_works,The following statement contains a magic number: Assert.Equal(DBNull.Value' schema.Rows[3]["NumericPrecision"]);
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetSchemaTable_works,The following statement contains a magic number: Assert.Equal(DBNull.Value' schema.Rows[3]["NumericScale"]);
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetSchemaTable_works,The following statement contains a magic number: Assert.Equal(DBNull.Value' schema.Rows[3]["IsUnique"]);
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetSchemaTable_works,The following statement contains a magic number: Assert.Equal(DBNull.Value' schema.Rows[3]["IsKey"]);
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetSchemaTable_works,The following statement contains a magic number: Assert.Equal(""' schema.Rows[3]["BaseServerName"]);
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetSchemaTable_works,The following statement contains a magic number: Assert.Equal(DBNull.Value' schema.Rows[3]["BaseCatalogName"]);
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetSchemaTable_works,The following statement contains a magic number: Assert.Equal(DBNull.Value' schema.Rows[3]["BaseColumnName"]);
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetSchemaTable_works,The following statement contains a magic number: Assert.Equal(DBNull.Value' schema.Rows[3]["BaseSchemaName"]);
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetSchemaTable_works,The following statement contains a magic number: Assert.Equal(DBNull.Value' schema.Rows[3]["BaseTableName"]);
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetSchemaTable_works,The following statement contains a magic number: Assert.Equal(typeof(long)' schema.Rows[3]["DataType"]);
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetSchemaTable_works,The following statement contains a magic number: Assert.Equal("INTEGER"' schema.Rows[3]["DataTypeName"]);
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetSchemaTable_works,The following statement contains a magic number: Assert.Equal(DBNull.Value' schema.Rows[3]["AllowDBNull"]);
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetSchemaTable_works,The following statement contains a magic number: Assert.True((bool)schema.Rows[3]["IsAliased"]);
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetSchemaTable_works,The following statement contains a magic number: Assert.True((bool)schema.Rows[3]["IsExpression"]);
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetSchemaTable_works,The following statement contains a magic number: Assert.Equal(DBNull.Value' schema.Rows[3]["IsAutoIncrement"]);
Magic Number,Microsoft.Data.Sqlite,SqliteDataReaderTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteDataReaderTest.cs,GetSchemaTable_works,The following statement contains a magic number: Assert.Equal(DBNull.Value' schema.Rows[3]["IsLong"]);
Magic Number,Microsoft.Data.Sqlite,SqliteParameterTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteParameterTest.cs,Ctor_sets_other_values,The following statement contains a magic number: var result = new SqliteParameter("@Parameter"' SqliteType.Integer' 8' "Column");
Magic Number,Microsoft.Data.Sqlite,SqliteParameterTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteParameterTest.cs,Ctor_sets_other_values,The following statement contains a magic number: Assert.Equal(8' result.Size);
Magic Number,Microsoft.Data.Sqlite,SqliteParameterTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteParameterTest.cs,Size_validates_argument,The following statement contains a magic number: var ex = Assert.Throws<ArgumentOutOfRangeException>(() => parameter.Size = -2);
Magic Number,Microsoft.Data.Sqlite,SqliteParameterTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteParameterTest.cs,Size_validates_argument,The following statement contains a magic number: Assert.Equal(-2' ex.ActualValue);
Magic Number,Microsoft.Data.Sqlite,SqliteParameterTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteParameterTest.cs,Bind_with_restricted_size_works_on_string_values,The following statement contains a magic number: command.Parameters.AddWithValue("@Text"' "ABCDE").Size = 3;
Magic Number,Microsoft.Data.Sqlite,SqliteParameterTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteParameterTest.cs,Bind_with_restricted_size_works_on_blob_values,The following statement contains a magic number: command.Parameters.AddWithValue("@Blob"' new byte[] { 1' 2' 3' 4' 5 }).Size = 3;
Magic Number,Microsoft.Data.Sqlite,SqliteParameterTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteParameterTest.cs,Bind_with_restricted_size_works_on_blob_values,The following statement contains a magic number: command.Parameters.AddWithValue("@Blob"' new byte[] { 1' 2' 3' 4' 5 }).Size = 3;
Magic Number,Microsoft.Data.Sqlite,SqliteParameterTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteParameterTest.cs,Bind_with_restricted_size_works_on_blob_values,The following statement contains a magic number: command.Parameters.AddWithValue("@Blob"' new byte[] { 1' 2' 3' 4' 5 }).Size = 3;
Magic Number,Microsoft.Data.Sqlite,SqliteParameterTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteParameterTest.cs,Bind_with_restricted_size_works_on_blob_values,The following statement contains a magic number: command.Parameters.AddWithValue("@Blob"' new byte[] { 1' 2' 3' 4' 5 }).Size = 3;
Magic Number,Microsoft.Data.Sqlite,SqliteParameterTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteParameterTest.cs,Bind_with_restricted_size_works_on_blob_values,The following statement contains a magic number: command.Parameters.AddWithValue("@Blob"' new byte[] { 1' 2' 3' 4' 5 }).Size = 3;
Magic Number,Microsoft.Data.Sqlite,SqliteParameterTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteParameterTest.cs,Bind_with_restricted_size_works_on_blob_values,The following statement contains a magic number: Assert.Equal(new byte[] { 1' 2' 3 }' result);
Magic Number,Microsoft.Data.Sqlite,SqliteParameterTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteParameterTest.cs,Bind_with_restricted_size_works_on_blob_values,The following statement contains a magic number: Assert.Equal(new byte[] { 1' 2' 3 }' result);
Magic Number,Microsoft.Data.Sqlite,SqliteParameterTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteParameterTest.cs,Bind_with_prefixed_names,The following statement contains a magic number: command.Parameters.AddWithValue("$Param"' 2);
Magic Number,Microsoft.Data.Sqlite,SqliteParameterTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteParameterTest.cs,Bind_with_prefixed_names,The following statement contains a magic number: command.Parameters.AddWithValue(":Param"' 3);
Magic Number,Microsoft.Data.Sqlite,SqliteParameterTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteParameterTest.cs,Bind_with_prefixed_names,The following statement contains a magic number: Assert.Equal(2' reader.GetFieldValue<int>(1));
Magic Number,Microsoft.Data.Sqlite,SqliteParameterTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteParameterTest.cs,Bind_with_prefixed_names,The following statement contains a magic number: Assert.Equal(3' reader.GetFieldValue<int>(2));
Magic Number,Microsoft.Data.Sqlite,SqliteParameterTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteParameterTest.cs,Bind_with_prefixed_names,The following statement contains a magic number: Assert.Equal(3' reader.GetFieldValue<int>(2));
Magic Number,Microsoft.Data.Sqlite,SqliteParameterTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteParameterTest.cs,Bind_DateTime_with_Arabic_Culture,The following statement contains a magic number: var date = new DateTime(2018' 3' 25);
Magic Number,Microsoft.Data.Sqlite,SqliteParameterTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteParameterTest.cs,Bind_DateTime_with_Arabic_Culture,The following statement contains a magic number: var date = new DateTime(2018' 3' 25);
Magic Number,Microsoft.Data.Sqlite,SqliteParameterTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteParameterTest.cs,Bind_DateTime_with_Arabic_Culture,The following statement contains a magic number: var date = new DateTime(2018' 3' 25);
Magic Number,Microsoft.Data.Sqlite,SqliteParameterTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteParameterTest.cs,Bind_DateTimeOffset_with_Arabic_Culture,The following statement contains a magic number: var date = new DateTimeOffset(new DateTime(2018' 3' 25)' new TimeSpan());
Magic Number,Microsoft.Data.Sqlite,SqliteParameterTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteParameterTest.cs,Bind_DateTimeOffset_with_Arabic_Culture,The following statement contains a magic number: var date = new DateTimeOffset(new DateTime(2018' 3' 25)' new TimeSpan());
Magic Number,Microsoft.Data.Sqlite,SqliteParameterTest,D:\research\architectureSmells\repos\aspnet_DataCommon.SQLite\test\Microsoft.Data.Sqlite.Tests\SqliteParameterTest.cs,Bind_DateTimeOffset_with_Arabic_Culture,The following statement contains a magic number: var date = new DateTimeOffset(new DateTime(2018' 3' 25)' new TimeSpan());
