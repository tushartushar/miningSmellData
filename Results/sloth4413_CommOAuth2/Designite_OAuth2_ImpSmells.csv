Implementation smell,Namespace,Class,File,Method,Description
Complex Method,OAuth2.HttpUtils,RequestUtility,C:\repos\sloth4413_CommOAuth2\OAuth2\HttpUtils\RequestUtility.cs,HttpPost,Cyclomatic complexity of the method is 16
Long Parameter List,OAuth2.HttpUtils,Post,C:\repos\sloth4413_CommOAuth2\OAuth2\HttpUtils\Post.cs,PostFileGetJson,The method has 5 parameters.
Long Parameter List,OAuth2.HttpUtils,Post,C:\repos\sloth4413_CommOAuth2\OAuth2\HttpUtils\Post.cs,PostGetJson,The method has 6 parameters.
Long Parameter List,OAuth2.HttpUtils,Post,C:\repos\sloth4413_CommOAuth2\OAuth2\HttpUtils\Post.cs,PostGetJson,The method has 5 parameters.
Long Parameter List,OAuth2.HttpUtils,RequestUtility,C:\repos\sloth4413_CommOAuth2\OAuth2\HttpUtils\RequestUtility.cs,HttpPost,The method has 5 parameters.
Long Parameter List,OAuth2.HttpUtils,RequestUtility,C:\repos\sloth4413_CommOAuth2\OAuth2\HttpUtils\RequestUtility.cs,HttpPost,The method has 7 parameters.
Long Statement,OAuth2.HttpUtils,RequestUtility,C:\repos\sloth4413_CommOAuth2\OAuth2\HttpUtils\RequestUtility.cs,HttpPost,The length of the statement  "		string formdataTemplate = "\r\n--" + boundary + "\r\nContent-Disposition: form-data; name=\"{0}\"; filename=\"{1}\"\r\nContent-Type: application/octet-stream\r\n\r\n"; " is 167.
Long Statement,OAuth2.HttpUtils,RequestUtility,C:\repos\sloth4413_CommOAuth2\OAuth2\HttpUtils\RequestUtility.cs,HttpPost,The length of the statement  "					var formdataBytes = Encoding.ASCII.GetBytes (postStream.Length == 0 ? formdata.Substring (2' formdata.Length - 2) : formdata); " is 126.
Long Statement,OAuth2.HttpUtils,RequestUtility,C:\repos\sloth4413_CommOAuth2\OAuth2\HttpUtils\RequestUtility.cs,HttpPost,The length of the statement  "	request.UserAgent = "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML' like Gecko) Chrome/31.0.1650.57 Safari/537.36"; " is 131.
Long Statement,OAuth2.HttpUtils,RequestUtility,C:\repos\sloth4413_CommOAuth2\OAuth2\HttpUtils\RequestUtility.cs,IsWeixinClientRequest,The length of the statement  "	return !string.IsNullOrEmpty (httpContext.Request.UserAgent) && httpContext.Request.UserAgent.Contains ("MicroMessenger"); " is 122.
Long Statement,OAuth2.Protocols,QzoneProtocal,C:\repos\sloth4413_CommOAuth2\OAuth2\Protocols\QzoneProtocal.cs,RequestUserAuthPtl,The length of the statement  "	if (String.IsNullOrEmpty (setting.AppId) || String.IsNullOrEmpty (setting.RedirectUri) || setting.Scope == null || !setting.Scope.Any ()) { " is 139.
Long Statement,OAuth2.Protocols,QzoneProtocal,C:\repos\sloth4413_CommOAuth2\OAuth2\Protocols\QzoneProtocal.cs,RequestUserAuthPtl,The length of the statement  "	const string format = "https://graph.qq.com/oauth2.0/authorize?response_type=code&client_id={0}&redirect_uri={1}&scope={2}&state={3}"; " is 134.
Long Statement,OAuth2.Protocols,QzoneProtocal,C:\repos\sloth4413_CommOAuth2\OAuth2\Protocols\QzoneProtocal.cs,RequestGetAccessTokenPtl,The length of the statement  "	if (String.IsNullOrEmpty (setting.AppId) || String.IsNullOrEmpty (setting.AppSecret) || String.IsNullOrEmpty (setting.Code) || String.IsNullOrEmpty (setting.RedirectUri)) { " is 172.
Long Statement,OAuth2.Protocols,QzoneProtocal,C:\repos\sloth4413_CommOAuth2\OAuth2\Protocols\QzoneProtocal.cs,RequestGetAccessTokenPtl,The length of the statement  "	const string format = "https://graph.qq.com/oauth2.0/token?grant_type={0}&client_id={1}&client_secret={2}&code={3}&redirect_uri={4}"; " is 133.
Long Statement,OAuth2.Protocols,QzoneProtocal,C:\repos\sloth4413_CommOAuth2\OAuth2\Protocols\QzoneProtocal.cs,RequestGetAccessTokenPtl,The length of the statement  "	var url = string.Format (format' "authorization_code"' setting.AppId' setting.AppSecret' setting.Code' setting.RedirectUri); " is 124.
Long Statement,OAuth2.Protocols,QzoneProtocal,C:\repos\sloth4413_CommOAuth2\OAuth2\Protocols\QzoneProtocal.cs,RequestUserInfoPtl,The length of the statement  "	if (String.IsNullOrEmpty (session.AccessToken.Value) || String.IsNullOrEmpty (session.AppId) || String.IsNullOrEmpty (session.OpenId)) { " is 136.
Long Statement,OAuth2.Protocols,QzoneProtocal,C:\repos\sloth4413_CommOAuth2\OAuth2\Protocols\QzoneProtocal.cs,RequestUserInfoPtl,The length of the statement  "	const string format = "https://graph.qq.com/user/get_user_info?access_token={0}&oauth_consumer_key={1}&openid={2}&format=json"; " is 127.
Long Statement,OAuth2.Protocols,SinaProtocal,C:\repos\sloth4413_CommOAuth2\OAuth2\Protocols\SinaProtocal.cs,RequestUserAuthPtl,The length of the statement  "	if (String.IsNullOrEmpty (setting.ClientId) || String.IsNullOrEmpty (setting.RedirectUri) || setting.ScopeStorage == null) { " is 124.
Long Statement,OAuth2.Protocols,SinaProtocal,C:\repos\sloth4413_CommOAuth2\OAuth2\Protocols\SinaProtocal.cs,RequestUserAuthPtl,The length of the statement  "	const string format = "https://api.weibo.com/oauth2/authorize?client_id={0}&response_type=code&redirect_uri={1}&scope={2}&state=sina"; " is 134.
Long Statement,OAuth2.Protocols,SinaProtocal,C:\repos\sloth4413_CommOAuth2\OAuth2\Protocols\SinaProtocal.cs,RequestGetAccessTokenPtl,The length of the statement  "	if (String.IsNullOrEmpty (setting.ClientId) || String.IsNullOrEmpty (setting.ClientSecret) || String.IsNullOrEmpty (setting.Code) || String.IsNullOrEmpty (setting.RedirectUri)) { " is 178.
Long Statement,OAuth2.Protocols,SinaProtocal,C:\repos\sloth4413_CommOAuth2\OAuth2\Protocols\SinaProtocal.cs,RequestGetAccessTokenPtl,The length of the statement  "	const string format = "https://api.weibo.com/oauth2/access_token?client_id={0}&client_secret={1}&grant_type=authorization_code&redirect_uri={2}&code={3}"; " is 154.
Long Statement,OAuth2.Protocols,WxProtocol,C:\repos\sloth4413_CommOAuth2\OAuth2\Protocols\WxProtocol.cs,RequestUserAuthPtl,The length of the statement  "	if (String.IsNullOrEmpty (setting.AppId) || String.IsNullOrEmpty (setting.RedirectUri) || setting.ScopeStorage == null || !setting.ScopeStorage.Any ()) { " is 153.
Long Statement,OAuth2.Protocols,WxProtocol,C:\repos\sloth4413_CommOAuth2\OAuth2\Protocols\WxProtocol.cs,RequestUserAuthPtl,The length of the statement  "	const string format = "https://open.weixin.qq.com/connect/oauth2/authorize?appid={0}&redirect_uri={1}&response_type={2}&scope={3}&state={4}#wechat_redirect"; " is 157.
Long Statement,OAuth2.Protocols,WxProtocol,C:\repos\sloth4413_CommOAuth2\OAuth2\Protocols\WxProtocol.cs,RequestUserAuthPtl,The length of the statement  "	var url = string.Format (format' setting.AppId' urlEncoded' setting.ResponseType' String.Join ("'"' setting.ScopeStorage)' "wx"); " is 129.
Long Statement,OAuth2.Protocols,WxProtocol,C:\repos\sloth4413_CommOAuth2\OAuth2\Protocols\WxProtocol.cs,RequestGetAccessTokenPtl,The length of the statement  "	if (String.IsNullOrEmpty (setting.AppId) || String.IsNullOrEmpty (setting.AppSecret) || String.IsNullOrEmpty (setting.Code)) { " is 126.
Long Statement,OAuth2.Protocols,WxProtocol,C:\repos\sloth4413_CommOAuth2\OAuth2\Protocols\WxProtocol.cs,RequestGetAccessTokenPtl,The length of the statement  "	const string format = "https://api.weixin.qq.com/sns/oauth2/access_token?appid={0}&secret={1}&code={2}&grant_type=authorization_code"; " is 134.
Long Statement,OAuth2.Qzone,QzoneResourceSessionBuilder,C:\repos\sloth4413_CommOAuth2\OAuth2\Qzone\QzoneResourceSession.cs,Build,The length of the statement  "		var interactiveInfo = HttpSupplier.Get<QzoneAccessTokenInteractive' QzoneErrorResult> (new Uri (setting.RequestGetAccessTokenPtl ())' new UrlParamConverter ()); " is 160.
Long Statement,OAuth2.Qzone,QzoneResourceSessionBuilder,C:\repos\sloth4413_CommOAuth2\OAuth2\Qzone\QzoneResourceSession.cs,Build,The length of the statement  "		var openIdInfo = HttpSupplier.Get<QzoneOpenIdResult' QzoneErrorResult> (new Uri (qzoneSession.RequestOpenIdPtl ())' new CallbackConverter ()); " is 142.
Long Statement,OAuth2.Sina,SinaResourceSessionBuilder,C:\repos\sloth4413_CommOAuth2\OAuth2\Sina\SinaResourceSession.cs,Build,The length of the statement  "		var interactiveInfo = HttpSupplier.Post<SinaAccessTokenInteractive' SinaErrorResult> (new Uri (setting.RequestGetAccessTokenPtl ())); " is 133.
Long Statement,OAuth2.WeiXin,WxResourceSessionBuilder,C:\repos\sloth4413_CommOAuth2\OAuth2\WeiXin\WxResourceSession.cs,Build,The length of the statement  "		var interactiveInfo = HttpSupplier.Get<WxAccessTokenInteractive' WxErrorResult> (new Uri (setting.RequestGetAccessTokenPtl ())); " is 128.
Long Statement,OAuth2.WeiXin,WxResourceSessionBuilder,C:\repos\sloth4413_CommOAuth2\OAuth2\WeiXin\WxResourceSession.cs,Build,The length of the statement  "		return new WxResourceSession (HttpSupplier' new AccessToken (interactiveInfo.access_token)' new RefrechToken (interactiveInfo.refresh_token)) { " is 143.
Complex Conditional,OAuth2.Protocols,QzoneProtocal,C:\repos\sloth4413_CommOAuth2\OAuth2\Protocols\QzoneProtocal.cs,RequestUserAuthPtl,The conditional expression  "String.IsNullOrEmpty (setting.AppId) || String.IsNullOrEmpty (setting.RedirectUri) || setting.Scope == null || !setting.Scope.Any ()"  is complex.
Complex Conditional,OAuth2.Protocols,QzoneProtocal,C:\repos\sloth4413_CommOAuth2\OAuth2\Protocols\QzoneProtocal.cs,RequestGetAccessTokenPtl,The conditional expression  "String.IsNullOrEmpty (setting.AppId) || String.IsNullOrEmpty (setting.AppSecret) || String.IsNullOrEmpty (setting.Code) || String.IsNullOrEmpty (setting.RedirectUri)"  is complex.
Complex Conditional,OAuth2.Protocols,SinaProtocal,C:\repos\sloth4413_CommOAuth2\OAuth2\Protocols\SinaProtocal.cs,RequestGetAccessTokenPtl,The conditional expression  "String.IsNullOrEmpty (setting.ClientId) || String.IsNullOrEmpty (setting.ClientSecret) || String.IsNullOrEmpty (setting.Code) || String.IsNullOrEmpty (setting.RedirectUri)"  is complex.
Complex Conditional,OAuth2.Protocols,WxProtocol,C:\repos\sloth4413_CommOAuth2\OAuth2\Protocols\WxProtocol.cs,RequestUserAuthPtl,The conditional expression  "String.IsNullOrEmpty (setting.AppId) || String.IsNullOrEmpty (setting.RedirectUri) || setting.ScopeStorage == null || !setting.ScopeStorage.Any ()"  is complex.
Magic Number,OAuth2.JsonConverter,UrlParamConverter,C:\repos\sloth4413_CommOAuth2\OAuth2\JsonConverter\UrlParamConverter.cs,Convert,The following statement contains a magic number: if (pairArray.Any ()) {  	foreach (var cell in pairArray) {  		var temporary = cell.Split (new[] {  			'='  		}' StringSplitOptions.RemoveEmptyEntries);  		if (temporary.Length == 2) {  			converter.Add (temporary [0]' temporary [1]);  		}  	}  }  
Magic Number,OAuth2.JsonConverter,UrlParamConverter,C:\repos\sloth4413_CommOAuth2\OAuth2\JsonConverter\UrlParamConverter.cs,Convert,The following statement contains a magic number: foreach (var cell in pairArray) {  	var temporary = cell.Split (new[] {  		'='  	}' StringSplitOptions.RemoveEmptyEntries);  	if (temporary.Length == 2) {  		converter.Add (temporary [0]' temporary [1]);  	}  }  
Magic Number,OAuth2.JsonConverter,UrlParamConverter,C:\repos\sloth4413_CommOAuth2\OAuth2\JsonConverter\UrlParamConverter.cs,Convert,The following statement contains a magic number: if (temporary.Length == 2) {  	converter.Add (temporary [0]' temporary [1]);  }  
Magic Number,OAuth2.HttpUtils,RequestUtility,C:\repos\sloth4413_CommOAuth2\OAuth2\HttpUtils\RequestUtility.cs,HttpPost,The following statement contains a magic number: if (formUploadFile) {  	//通过表单上传文件  	postStream = new MemoryStream ();  	string boundary = "----" + DateTime.Now.Ticks.ToString ("x");  	//byte[] boundarybytes = Encoding.ASCII.GetBytes("\r\n--" + boundary + "\r\n");  	string formdataTemplate = "\r\n--" + boundary + "\r\nContent-Disposition: form-data; name=\"{0}\"; filename=\"{1}\"\r\nContent-Type: application/octet-stream\r\n\r\n";  	foreach (var file in fileDictionary) {  		try {  			var fileName = file.Value;  			//准备文件流  			using (var fileStream = FileHelper.GetFileStream (fileName)) {  				var formdata = string.Format (formdataTemplate' file.Key' fileName/*Path.GetFileName(fileName)*/);  				var formdataBytes = Encoding.ASCII.GetBytes (postStream.Length == 0 ? formdata.Substring (2' formdata.Length - 2) : formdata);  				//第一行不需要换行  				postStream.Write (formdataBytes' 0' formdataBytes.Length);  				//写入文件  				byte[] buffer = new byte[1024];  				int bytesRead = 0;  				while ((bytesRead = fileStream.Read (buffer' 0' buffer.Length)) != 0) {  					postStream.Write (buffer' 0' bytesRead);  				}  			}  		}  		catch (Exception ex) {  			throw ex;  		}  	}  	//结尾  	var footer = Encoding.ASCII.GetBytes ("\r\n--" + boundary + "--\r\n");  	postStream.Write (footer' 0' footer.Length);  	request.ContentType = string.Format ("multipart/form-data; boundary={0}"' boundary);  }  else {  	request.ContentType = "application/x-www-form-urlencoded";  }  
Magic Number,OAuth2.HttpUtils,RequestUtility,C:\repos\sloth4413_CommOAuth2\OAuth2\HttpUtils\RequestUtility.cs,HttpPost,The following statement contains a magic number: if (formUploadFile) {  	//通过表单上传文件  	postStream = new MemoryStream ();  	string boundary = "----" + DateTime.Now.Ticks.ToString ("x");  	//byte[] boundarybytes = Encoding.ASCII.GetBytes("\r\n--" + boundary + "\r\n");  	string formdataTemplate = "\r\n--" + boundary + "\r\nContent-Disposition: form-data; name=\"{0}\"; filename=\"{1}\"\r\nContent-Type: application/octet-stream\r\n\r\n";  	foreach (var file in fileDictionary) {  		try {  			var fileName = file.Value;  			//准备文件流  			using (var fileStream = FileHelper.GetFileStream (fileName)) {  				var formdata = string.Format (formdataTemplate' file.Key' fileName/*Path.GetFileName(fileName)*/);  				var formdataBytes = Encoding.ASCII.GetBytes (postStream.Length == 0 ? formdata.Substring (2' formdata.Length - 2) : formdata);  				//第一行不需要换行  				postStream.Write (formdataBytes' 0' formdataBytes.Length);  				//写入文件  				byte[] buffer = new byte[1024];  				int bytesRead = 0;  				while ((bytesRead = fileStream.Read (buffer' 0' buffer.Length)) != 0) {  					postStream.Write (buffer' 0' bytesRead);  				}  			}  		}  		catch (Exception ex) {  			throw ex;  		}  	}  	//结尾  	var footer = Encoding.ASCII.GetBytes ("\r\n--" + boundary + "--\r\n");  	postStream.Write (footer' 0' footer.Length);  	request.ContentType = string.Format ("multipart/form-data; boundary={0}"' boundary);  }  else {  	request.ContentType = "application/x-www-form-urlencoded";  }  
Magic Number,OAuth2.HttpUtils,RequestUtility,C:\repos\sloth4413_CommOAuth2\OAuth2\HttpUtils\RequestUtility.cs,HttpPost,The following statement contains a magic number: if (formUploadFile) {  	//通过表单上传文件  	postStream = new MemoryStream ();  	string boundary = "----" + DateTime.Now.Ticks.ToString ("x");  	//byte[] boundarybytes = Encoding.ASCII.GetBytes("\r\n--" + boundary + "\r\n");  	string formdataTemplate = "\r\n--" + boundary + "\r\nContent-Disposition: form-data; name=\"{0}\"; filename=\"{1}\"\r\nContent-Type: application/octet-stream\r\n\r\n";  	foreach (var file in fileDictionary) {  		try {  			var fileName = file.Value;  			//准备文件流  			using (var fileStream = FileHelper.GetFileStream (fileName)) {  				var formdata = string.Format (formdataTemplate' file.Key' fileName/*Path.GetFileName(fileName)*/);  				var formdataBytes = Encoding.ASCII.GetBytes (postStream.Length == 0 ? formdata.Substring (2' formdata.Length - 2) : formdata);  				//第一行不需要换行  				postStream.Write (formdataBytes' 0' formdataBytes.Length);  				//写入文件  				byte[] buffer = new byte[1024];  				int bytesRead = 0;  				while ((bytesRead = fileStream.Read (buffer' 0' buffer.Length)) != 0) {  					postStream.Write (buffer' 0' bytesRead);  				}  			}  		}  		catch (Exception ex) {  			throw ex;  		}  	}  	//结尾  	var footer = Encoding.ASCII.GetBytes ("\r\n--" + boundary + "--\r\n");  	postStream.Write (footer' 0' footer.Length);  	request.ContentType = string.Format ("multipart/form-data; boundary={0}"' boundary);  }  else {  	request.ContentType = "application/x-www-form-urlencoded";  }  
Magic Number,OAuth2.HttpUtils,RequestUtility,C:\repos\sloth4413_CommOAuth2\OAuth2\HttpUtils\RequestUtility.cs,HttpPost,The following statement contains a magic number: foreach (var file in fileDictionary) {  	try {  		var fileName = file.Value;  		//准备文件流  		using (var fileStream = FileHelper.GetFileStream (fileName)) {  			var formdata = string.Format (formdataTemplate' file.Key' fileName/*Path.GetFileName(fileName)*/);  			var formdataBytes = Encoding.ASCII.GetBytes (postStream.Length == 0 ? formdata.Substring (2' formdata.Length - 2) : formdata);  			//第一行不需要换行  			postStream.Write (formdataBytes' 0' formdataBytes.Length);  			//写入文件  			byte[] buffer = new byte[1024];  			int bytesRead = 0;  			while ((bytesRead = fileStream.Read (buffer' 0' buffer.Length)) != 0) {  				postStream.Write (buffer' 0' bytesRead);  			}  		}  	}  	catch (Exception ex) {  		throw ex;  	}  }  
Magic Number,OAuth2.HttpUtils,RequestUtility,C:\repos\sloth4413_CommOAuth2\OAuth2\HttpUtils\RequestUtility.cs,HttpPost,The following statement contains a magic number: foreach (var file in fileDictionary) {  	try {  		var fileName = file.Value;  		//准备文件流  		using (var fileStream = FileHelper.GetFileStream (fileName)) {  			var formdata = string.Format (formdataTemplate' file.Key' fileName/*Path.GetFileName(fileName)*/);  			var formdataBytes = Encoding.ASCII.GetBytes (postStream.Length == 0 ? formdata.Substring (2' formdata.Length - 2) : formdata);  			//第一行不需要换行  			postStream.Write (formdataBytes' 0' formdataBytes.Length);  			//写入文件  			byte[] buffer = new byte[1024];  			int bytesRead = 0;  			while ((bytesRead = fileStream.Read (buffer' 0' buffer.Length)) != 0) {  				postStream.Write (buffer' 0' bytesRead);  			}  		}  	}  	catch (Exception ex) {  		throw ex;  	}  }  
Magic Number,OAuth2.HttpUtils,RequestUtility,C:\repos\sloth4413_CommOAuth2\OAuth2\HttpUtils\RequestUtility.cs,HttpPost,The following statement contains a magic number: foreach (var file in fileDictionary) {  	try {  		var fileName = file.Value;  		//准备文件流  		using (var fileStream = FileHelper.GetFileStream (fileName)) {  			var formdata = string.Format (formdataTemplate' file.Key' fileName/*Path.GetFileName(fileName)*/);  			var formdataBytes = Encoding.ASCII.GetBytes (postStream.Length == 0 ? formdata.Substring (2' formdata.Length - 2) : formdata);  			//第一行不需要换行  			postStream.Write (formdataBytes' 0' formdataBytes.Length);  			//写入文件  			byte[] buffer = new byte[1024];  			int bytesRead = 0;  			while ((bytesRead = fileStream.Read (buffer' 0' buffer.Length)) != 0) {  				postStream.Write (buffer' 0' bytesRead);  			}  		}  	}  	catch (Exception ex) {  		throw ex;  	}  }  
Magic Number,OAuth2.HttpUtils,RequestUtility,C:\repos\sloth4413_CommOAuth2\OAuth2\HttpUtils\RequestUtility.cs,HttpPost,The following statement contains a magic number: try {  	var fileName = file.Value;  	//准备文件流  	using (var fileStream = FileHelper.GetFileStream (fileName)) {  		var formdata = string.Format (formdataTemplate' file.Key' fileName/*Path.GetFileName(fileName)*/);  		var formdataBytes = Encoding.ASCII.GetBytes (postStream.Length == 0 ? formdata.Substring (2' formdata.Length - 2) : formdata);  		//第一行不需要换行  		postStream.Write (formdataBytes' 0' formdataBytes.Length);  		//写入文件  		byte[] buffer = new byte[1024];  		int bytesRead = 0;  		while ((bytesRead = fileStream.Read (buffer' 0' buffer.Length)) != 0) {  			postStream.Write (buffer' 0' bytesRead);  		}  	}  }  catch (Exception ex) {  	throw ex;  }  
Magic Number,OAuth2.HttpUtils,RequestUtility,C:\repos\sloth4413_CommOAuth2\OAuth2\HttpUtils\RequestUtility.cs,HttpPost,The following statement contains a magic number: try {  	var fileName = file.Value;  	//准备文件流  	using (var fileStream = FileHelper.GetFileStream (fileName)) {  		var formdata = string.Format (formdataTemplate' file.Key' fileName/*Path.GetFileName(fileName)*/);  		var formdataBytes = Encoding.ASCII.GetBytes (postStream.Length == 0 ? formdata.Substring (2' formdata.Length - 2) : formdata);  		//第一行不需要换行  		postStream.Write (formdataBytes' 0' formdataBytes.Length);  		//写入文件  		byte[] buffer = new byte[1024];  		int bytesRead = 0;  		while ((bytesRead = fileStream.Read (buffer' 0' buffer.Length)) != 0) {  			postStream.Write (buffer' 0' bytesRead);  		}  	}  }  catch (Exception ex) {  	throw ex;  }  
Magic Number,OAuth2.HttpUtils,RequestUtility,C:\repos\sloth4413_CommOAuth2\OAuth2\HttpUtils\RequestUtility.cs,HttpPost,The following statement contains a magic number: try {  	var fileName = file.Value;  	//准备文件流  	using (var fileStream = FileHelper.GetFileStream (fileName)) {  		var formdata = string.Format (formdataTemplate' file.Key' fileName/*Path.GetFileName(fileName)*/);  		var formdataBytes = Encoding.ASCII.GetBytes (postStream.Length == 0 ? formdata.Substring (2' formdata.Length - 2) : formdata);  		//第一行不需要换行  		postStream.Write (formdataBytes' 0' formdataBytes.Length);  		//写入文件  		byte[] buffer = new byte[1024];  		int bytesRead = 0;  		while ((bytesRead = fileStream.Read (buffer' 0' buffer.Length)) != 0) {  			postStream.Write (buffer' 0' bytesRead);  		}  	}  }  catch (Exception ex) {  	throw ex;  }  
Magic Number,OAuth2.HttpUtils,RequestUtility,C:\repos\sloth4413_CommOAuth2\OAuth2\HttpUtils\RequestUtility.cs,HttpPost,The following statement contains a magic number: using (var fileStream = FileHelper.GetFileStream (fileName)) {  	var formdata = string.Format (formdataTemplate' file.Key' fileName/*Path.GetFileName(fileName)*/);  	var formdataBytes = Encoding.ASCII.GetBytes (postStream.Length == 0 ? formdata.Substring (2' formdata.Length - 2) : formdata);  	//第一行不需要换行  	postStream.Write (formdataBytes' 0' formdataBytes.Length);  	//写入文件  	byte[] buffer = new byte[1024];  	int bytesRead = 0;  	while ((bytesRead = fileStream.Read (buffer' 0' buffer.Length)) != 0) {  		postStream.Write (buffer' 0' bytesRead);  	}  }  
Magic Number,OAuth2.HttpUtils,RequestUtility,C:\repos\sloth4413_CommOAuth2\OAuth2\HttpUtils\RequestUtility.cs,HttpPost,The following statement contains a magic number: using (var fileStream = FileHelper.GetFileStream (fileName)) {  	var formdata = string.Format (formdataTemplate' file.Key' fileName/*Path.GetFileName(fileName)*/);  	var formdataBytes = Encoding.ASCII.GetBytes (postStream.Length == 0 ? formdata.Substring (2' formdata.Length - 2) : formdata);  	//第一行不需要换行  	postStream.Write (formdataBytes' 0' formdataBytes.Length);  	//写入文件  	byte[] buffer = new byte[1024];  	int bytesRead = 0;  	while ((bytesRead = fileStream.Read (buffer' 0' buffer.Length)) != 0) {  		postStream.Write (buffer' 0' bytesRead);  	}  }  
Magic Number,OAuth2.HttpUtils,RequestUtility,C:\repos\sloth4413_CommOAuth2\OAuth2\HttpUtils\RequestUtility.cs,HttpPost,The following statement contains a magic number: using (var fileStream = FileHelper.GetFileStream (fileName)) {  	var formdata = string.Format (formdataTemplate' file.Key' fileName/*Path.GetFileName(fileName)*/);  	var formdataBytes = Encoding.ASCII.GetBytes (postStream.Length == 0 ? formdata.Substring (2' formdata.Length - 2) : formdata);  	//第一行不需要换行  	postStream.Write (formdataBytes' 0' formdataBytes.Length);  	//写入文件  	byte[] buffer = new byte[1024];  	int bytesRead = 0;  	while ((bytesRead = fileStream.Read (buffer' 0' buffer.Length)) != 0) {  		postStream.Write (buffer' 0' bytesRead);  	}  }  
Magic Number,OAuth2.HttpUtils,RequestUtility,C:\repos\sloth4413_CommOAuth2\OAuth2\HttpUtils\RequestUtility.cs,HttpPost,The following statement contains a magic number: if (postStream != null) {  	postStream.Position = 0;  	//直接写入流  	Stream requestStream = request.GetRequestStream ();  	byte[] buffer = new byte[1024];  	int bytesRead = 0;  	while ((bytesRead = postStream.Read (buffer' 0' buffer.Length)) != 0) {  		requestStream.Write (buffer' 0' bytesRead);  	}  	postStream.Close ();  	//关闭文件访问  }  
