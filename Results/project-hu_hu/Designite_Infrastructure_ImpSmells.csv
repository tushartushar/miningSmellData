Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Infrastructure,ExpressionCombiner,C:\repos\project-hu_hu\Tesco.Hudl\Infrastructure\Infrastructure\ExpressionCombiner.cs,Compose,The method has 7 parameters.
Long Parameter List,Infrastructure.Messaging.Handling,EventDispatcher,C:\repos\project-hu_hu\Tesco.Hudl\Infrastructure\Infrastructure\Messaging\Handling\EventDispatcher.cs,BuildHandlerInvocations,The method has 7 parameters.
Long Parameter List,Infrastructure.Tasks,TimerTaskFactory,C:\repos\project-hu_hu\Tesco.Hudl\Infrastructure\Infrastructure\Tasks\TimerTaskFactory.cs,StartNew,The method has 5 parameters.
Long Identifier,Infrastructure.Messaging.Handling,EventDispatcher,C:\repos\project-hu_hu\Tesco.Hudl\Infrastructure\Infrastructure\Messaging\Handling\EventDispatcher.cs,BuildHandlerInvocations,The length of the parameter envelopedEventHandlerInvocations is 32.
Long Statement,Infrastructure,StandardMetadataProvider,C:\repos\project-hu_hu\Tesco.Hudl\Infrastructure\Infrastructure\StandardMetadataProvider.cs,GetMetadata,The length of the statement  "	metadata [StandardMetadata.AssemblyName] = Path.GetFileNameWithoutExtension (type.Assembly.ManifestModule.FullyQualifiedName); " is 126.
Long Statement,Infrastructure.Messaging.Handling,EventDispatcher,C:\repos\project-hu_hu\Tesco.Hudl\Infrastructure\Infrastructure\Messaging\Handling\EventDispatcher.cs,DoDispatchMessage,The length of the statement  "			// Trace.WriteLine(string.Format(CultureInfo.InvariantCulture' "Event{0} handled by {1}."' traceIdentifier' handler.Item1.FullName)); " is 133.
Long Statement,Infrastructure.Messaging.Handling,EventDispatcher,C:\repos\project-hu_hu\Tesco.Hudl\Infrastructure\Infrastructure\Messaging\Handling\EventDispatcher.cs,BuildHandlerInvocations,The length of the statement  "	var eventHandlerInvocations = interfaces.Where (i => i.IsGenericType && i.GetGenericTypeDefinition () == typeof(IEventHandler<>)).Select (i => new { " is 148.
Long Statement,Infrastructure.Messaging.Handling,EventDispatcher,C:\repos\project-hu_hu\Tesco.Hudl\Infrastructure\Infrastructure\Messaging\Handling\EventDispatcher.cs,BuildHandlerInvocations,The length of the statement  "	}).Select (e => new Tuple<Type' Action<Envelope>> (e.EventType' this.BuildHandlerInvocation (handler' e.HandlerInterface' e.EventType))); " is 137.
Long Statement,Infrastructure.Messaging.Handling,EventDispatcher,C:\repos\project-hu_hu\Tesco.Hudl\Infrastructure\Infrastructure\Messaging\Handling\EventDispatcher.cs,BuildHandlerInvocations,The length of the statement  "	var envelopedEventHandlerInvocations = interfaces.Where (i => i.IsGenericType && i.GetGenericTypeDefinition () == typeof(IEnvelopedEventHandler<>)).Select (i => new { " is 166.
Long Statement,Infrastructure.Messaging.Handling,EventDispatcher,C:\repos\project-hu_hu\Tesco.Hudl\Infrastructure\Infrastructure\Messaging\Handling\EventDispatcher.cs,BuildHandlerInvocations,The length of the statement  "	}).Select (e => new Tuple<Type' Action<Envelope>> (e.EventType' this.BuildEnvelopeHandlerInvocation (handler' e.HandlerInterface' e.EventType))); " is 145.
Long Statement,Infrastructure.Messaging.Handling,EventDispatcher,C:\repos\project-hu_hu\Tesco.Hudl\Infrastructure\Infrastructure\Messaging\Handling\EventDispatcher.cs,BuildHandlerInvocation,The length of the statement  "	var invocationExpression = Expression.Lambda (Expression.Block (Expression.Call (Expression.Convert (Expression.Constant (handler)' handlerType)' handlerType.GetMethod ("Handle")' Expression.Property (Expression.Convert (parameter' envelopeType)' "Body")))' parameter); " is 269.
Long Statement,Infrastructure.Messaging.Handling,EventDispatcher,C:\repos\project-hu_hu\Tesco.Hudl\Infrastructure\Infrastructure\Messaging\Handling\EventDispatcher.cs,BuildEnvelopeHandlerInvocation,The length of the statement  "	var invocationExpression = Expression.Lambda (Expression.Block (Expression.Call (Expression.Convert (Expression.Constant (handler)' handlerType)' handlerType.GetMethod ("Handle")' Expression.Convert (parameter' envelopeType)))' parameter); " is 239.
Long Statement,Infrastructure.Messaging.Handling,EventDispatcher,C:\repos\project-hu_hu\Tesco.Hudl\Infrastructure\Infrastructure\Messaging\Handling\EventDispatcher.cs,BuildDispatchInvocation,The length of the statement  "	var dispatchExpression = Expression.Lambda (Expression.Block (Expression.Call (Expression.Constant (this)' this.GetType ().GetMethod ("DoDispatchMessage"' BindingFlags.Instance | BindingFlags.NonPublic).MakeGenericMethod (eventType)' Expression.Convert (eventParameter' eventType)' messageIdParameter' correlationIdParameter' traceIdParameter))' eventParameter' messageIdParameter' correlationIdParameter' traceIdParameter); " is 424.
Magic Number,Infrastructure.Utils,GuidUtil,C:\repos\project-hu_hu\Tesco.Hudl\Infrastructure\Infrastructure\Utils\GuidUtil.cs,NewSequentialId,The following statement contains a magic number: if (BitConverter.IsLittleEndian) {  	guidBytes [10] = sequential [5];  	guidBytes [11] = sequential [4];  	guidBytes [12] = sequential [3];  	guidBytes [13] = sequential [2];  	guidBytes [14] = sequential [1];  	guidBytes [15] = sequential [0];  }  else {  	Buffer.BlockCopy (sequential' 2' guidBytes' 10' 6);  }  
Magic Number,Infrastructure.Utils,GuidUtil,C:\repos\project-hu_hu\Tesco.Hudl\Infrastructure\Infrastructure\Utils\GuidUtil.cs,NewSequentialId,The following statement contains a magic number: if (BitConverter.IsLittleEndian) {  	guidBytes [10] = sequential [5];  	guidBytes [11] = sequential [4];  	guidBytes [12] = sequential [3];  	guidBytes [13] = sequential [2];  	guidBytes [14] = sequential [1];  	guidBytes [15] = sequential [0];  }  else {  	Buffer.BlockCopy (sequential' 2' guidBytes' 10' 6);  }  
Magic Number,Infrastructure.Utils,GuidUtil,C:\repos\project-hu_hu\Tesco.Hudl\Infrastructure\Infrastructure\Utils\GuidUtil.cs,NewSequentialId,The following statement contains a magic number: if (BitConverter.IsLittleEndian) {  	guidBytes [10] = sequential [5];  	guidBytes [11] = sequential [4];  	guidBytes [12] = sequential [3];  	guidBytes [13] = sequential [2];  	guidBytes [14] = sequential [1];  	guidBytes [15] = sequential [0];  }  else {  	Buffer.BlockCopy (sequential' 2' guidBytes' 10' 6);  }  
Magic Number,Infrastructure.Utils,GuidUtil,C:\repos\project-hu_hu\Tesco.Hudl\Infrastructure\Infrastructure\Utils\GuidUtil.cs,NewSequentialId,The following statement contains a magic number: if (BitConverter.IsLittleEndian) {  	guidBytes [10] = sequential [5];  	guidBytes [11] = sequential [4];  	guidBytes [12] = sequential [3];  	guidBytes [13] = sequential [2];  	guidBytes [14] = sequential [1];  	guidBytes [15] = sequential [0];  }  else {  	Buffer.BlockCopy (sequential' 2' guidBytes' 10' 6);  }  
Magic Number,Infrastructure.Utils,GuidUtil,C:\repos\project-hu_hu\Tesco.Hudl\Infrastructure\Infrastructure\Utils\GuidUtil.cs,NewSequentialId,The following statement contains a magic number: if (BitConverter.IsLittleEndian) {  	guidBytes [10] = sequential [5];  	guidBytes [11] = sequential [4];  	guidBytes [12] = sequential [3];  	guidBytes [13] = sequential [2];  	guidBytes [14] = sequential [1];  	guidBytes [15] = sequential [0];  }  else {  	Buffer.BlockCopy (sequential' 2' guidBytes' 10' 6);  }  
Magic Number,Infrastructure.Utils,GuidUtil,C:\repos\project-hu_hu\Tesco.Hudl\Infrastructure\Infrastructure\Utils\GuidUtil.cs,NewSequentialId,The following statement contains a magic number: if (BitConverter.IsLittleEndian) {  	guidBytes [10] = sequential [5];  	guidBytes [11] = sequential [4];  	guidBytes [12] = sequential [3];  	guidBytes [13] = sequential [2];  	guidBytes [14] = sequential [1];  	guidBytes [15] = sequential [0];  }  else {  	Buffer.BlockCopy (sequential' 2' guidBytes' 10' 6);  }  
Magic Number,Infrastructure.Utils,GuidUtil,C:\repos\project-hu_hu\Tesco.Hudl\Infrastructure\Infrastructure\Utils\GuidUtil.cs,NewSequentialId,The following statement contains a magic number: if (BitConverter.IsLittleEndian) {  	guidBytes [10] = sequential [5];  	guidBytes [11] = sequential [4];  	guidBytes [12] = sequential [3];  	guidBytes [13] = sequential [2];  	guidBytes [14] = sequential [1];  	guidBytes [15] = sequential [0];  }  else {  	Buffer.BlockCopy (sequential' 2' guidBytes' 10' 6);  }  
Magic Number,Infrastructure.Utils,GuidUtil,C:\repos\project-hu_hu\Tesco.Hudl\Infrastructure\Infrastructure\Utils\GuidUtil.cs,NewSequentialId,The following statement contains a magic number: if (BitConverter.IsLittleEndian) {  	guidBytes [10] = sequential [5];  	guidBytes [11] = sequential [4];  	guidBytes [12] = sequential [3];  	guidBytes [13] = sequential [2];  	guidBytes [14] = sequential [1];  	guidBytes [15] = sequential [0];  }  else {  	Buffer.BlockCopy (sequential' 2' guidBytes' 10' 6);  }  
Magic Number,Infrastructure.Utils,GuidUtil,C:\repos\project-hu_hu\Tesco.Hudl\Infrastructure\Infrastructure\Utils\GuidUtil.cs,NewSequentialId,The following statement contains a magic number: if (BitConverter.IsLittleEndian) {  	guidBytes [10] = sequential [5];  	guidBytes [11] = sequential [4];  	guidBytes [12] = sequential [3];  	guidBytes [13] = sequential [2];  	guidBytes [14] = sequential [1];  	guidBytes [15] = sequential [0];  }  else {  	Buffer.BlockCopy (sequential' 2' guidBytes' 10' 6);  }  
Magic Number,Infrastructure.Utils,GuidUtil,C:\repos\project-hu_hu\Tesco.Hudl\Infrastructure\Infrastructure\Utils\GuidUtil.cs,NewSequentialId,The following statement contains a magic number: if (BitConverter.IsLittleEndian) {  	guidBytes [10] = sequential [5];  	guidBytes [11] = sequential [4];  	guidBytes [12] = sequential [3];  	guidBytes [13] = sequential [2];  	guidBytes [14] = sequential [1];  	guidBytes [15] = sequential [0];  }  else {  	Buffer.BlockCopy (sequential' 2' guidBytes' 10' 6);  }  
Magic Number,Infrastructure.Utils,GuidUtil,C:\repos\project-hu_hu\Tesco.Hudl\Infrastructure\Infrastructure\Utils\GuidUtil.cs,NewSequentialId,The following statement contains a magic number: if (BitConverter.IsLittleEndian) {  	guidBytes [10] = sequential [5];  	guidBytes [11] = sequential [4];  	guidBytes [12] = sequential [3];  	guidBytes [13] = sequential [2];  	guidBytes [14] = sequential [1];  	guidBytes [15] = sequential [0];  }  else {  	Buffer.BlockCopy (sequential' 2' guidBytes' 10' 6);  }  
Magic Number,Infrastructure.Utils,GuidUtil,C:\repos\project-hu_hu\Tesco.Hudl\Infrastructure\Infrastructure\Utils\GuidUtil.cs,NewSequentialId,The following statement contains a magic number: if (BitConverter.IsLittleEndian) {  	guidBytes [10] = sequential [5];  	guidBytes [11] = sequential [4];  	guidBytes [12] = sequential [3];  	guidBytes [13] = sequential [2];  	guidBytes [14] = sequential [1];  	guidBytes [15] = sequential [0];  }  else {  	Buffer.BlockCopy (sequential' 2' guidBytes' 10' 6);  }  
Magic Number,Infrastructure.Utils,GuidUtil,C:\repos\project-hu_hu\Tesco.Hudl\Infrastructure\Infrastructure\Utils\GuidUtil.cs,NewSequentialId,The following statement contains a magic number: if (BitConverter.IsLittleEndian) {  	guidBytes [10] = sequential [5];  	guidBytes [11] = sequential [4];  	guidBytes [12] = sequential [3];  	guidBytes [13] = sequential [2];  	guidBytes [14] = sequential [1];  	guidBytes [15] = sequential [0];  }  else {  	Buffer.BlockCopy (sequential' 2' guidBytes' 10' 6);  }  
Magic Number,Infrastructure.Utils,GuidUtil,C:\repos\project-hu_hu\Tesco.Hudl\Infrastructure\Infrastructure\Utils\GuidUtil.cs,NewSequentialId,The following statement contains a magic number: guidBytes [10] = sequential [5];  
Magic Number,Infrastructure.Utils,GuidUtil,C:\repos\project-hu_hu\Tesco.Hudl\Infrastructure\Infrastructure\Utils\GuidUtil.cs,NewSequentialId,The following statement contains a magic number: guidBytes [10] = sequential [5];  
Magic Number,Infrastructure.Utils,GuidUtil,C:\repos\project-hu_hu\Tesco.Hudl\Infrastructure\Infrastructure\Utils\GuidUtil.cs,NewSequentialId,The following statement contains a magic number: guidBytes [11] = sequential [4];  
Magic Number,Infrastructure.Utils,GuidUtil,C:\repos\project-hu_hu\Tesco.Hudl\Infrastructure\Infrastructure\Utils\GuidUtil.cs,NewSequentialId,The following statement contains a magic number: guidBytes [11] = sequential [4];  
Magic Number,Infrastructure.Utils,GuidUtil,C:\repos\project-hu_hu\Tesco.Hudl\Infrastructure\Infrastructure\Utils\GuidUtil.cs,NewSequentialId,The following statement contains a magic number: guidBytes [12] = sequential [3];  
Magic Number,Infrastructure.Utils,GuidUtil,C:\repos\project-hu_hu\Tesco.Hudl\Infrastructure\Infrastructure\Utils\GuidUtil.cs,NewSequentialId,The following statement contains a magic number: guidBytes [12] = sequential [3];  
Magic Number,Infrastructure.Utils,GuidUtil,C:\repos\project-hu_hu\Tesco.Hudl\Infrastructure\Infrastructure\Utils\GuidUtil.cs,NewSequentialId,The following statement contains a magic number: guidBytes [13] = sequential [2];  
Magic Number,Infrastructure.Utils,GuidUtil,C:\repos\project-hu_hu\Tesco.Hudl\Infrastructure\Infrastructure\Utils\GuidUtil.cs,NewSequentialId,The following statement contains a magic number: guidBytes [13] = sequential [2];  
Magic Number,Infrastructure.Utils,GuidUtil,C:\repos\project-hu_hu\Tesco.Hudl\Infrastructure\Infrastructure\Utils\GuidUtil.cs,NewSequentialId,The following statement contains a magic number: guidBytes [14] = sequential [1];  
Magic Number,Infrastructure.Utils,GuidUtil,C:\repos\project-hu_hu\Tesco.Hudl\Infrastructure\Infrastructure\Utils\GuidUtil.cs,NewSequentialId,The following statement contains a magic number: guidBytes [15] = sequential [0];  
Magic Number,Infrastructure.Utils,GuidUtil,C:\repos\project-hu_hu\Tesco.Hudl\Infrastructure\Infrastructure\Utils\GuidUtil.cs,NewSequentialId,The following statement contains a magic number: Buffer.BlockCopy (sequential' 2' guidBytes' 10' 6);  
Magic Number,Infrastructure.Utils,GuidUtil,C:\repos\project-hu_hu\Tesco.Hudl\Infrastructure\Infrastructure\Utils\GuidUtil.cs,NewSequentialId,The following statement contains a magic number: Buffer.BlockCopy (sequential' 2' guidBytes' 10' 6);  
Magic Number,Infrastructure.Utils,GuidUtil,C:\repos\project-hu_hu\Tesco.Hudl\Infrastructure\Infrastructure\Utils\GuidUtil.cs,NewSequentialId,The following statement contains a magic number: Buffer.BlockCopy (sequential' 2' guidBytes' 10' 6);  
