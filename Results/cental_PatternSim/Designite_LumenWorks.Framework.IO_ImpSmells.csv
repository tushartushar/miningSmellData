Implementation smell,Namespace,Class,File,Method,Description
Long Method,LumenWorks.Framework.IO.Csv,CsvReader,F:\newReposMay17\cental_PatternSim\rank\src\lib\LumenWorks.Framework.IO\Csv\CsvReader.cs,ReadField,The method has 214 lines of code.
Long Method,LumenWorks.Framework.IO.Csv,CsvReader,F:\newReposMay17\cental_PatternSim\rank\src\lib\LumenWorks.Framework.IO\Csv\CsvReader.cs,ReadNextRecord,The method has 110 lines of code.
Complex Method,LumenWorks.Framework.IO.Csv,CsvReader,F:\newReposMay17\cental_PatternSim\rank\src\lib\LumenWorks.Framework.IO\Csv\CsvReader.cs,ParseNewLine,Cyclomatic complexity of the method is 10
Complex Method,LumenWorks.Framework.IO.Csv,CsvReader,F:\newReposMay17\cental_PatternSim\rank\src\lib\LumenWorks.Framework.IO\Csv\CsvReader.cs,ReadField,Cyclomatic complexity of the method is 58
Complex Method,LumenWorks.Framework.IO.Csv,CsvReader,F:\newReposMay17\cental_PatternSim\rank\src\lib\LumenWorks.Framework.IO\Csv\CsvReader.cs,ReadNextRecord,Cyclomatic complexity of the method is 19
Complex Method,LumenWorks.Framework.IO.Csv,CsvReader,F:\newReposMay17\cental_PatternSim\rank\src\lib\LumenWorks.Framework.IO\Csv\CsvReader.cs,HandleParseError,Cyclomatic complexity of the method is 14
Complex Method,LumenWorks.Framework.IO.Csv,CsvReader,F:\newReposMay17\cental_PatternSim\rank\src\lib\LumenWorks.Framework.IO\Csv\CsvReader.cs,HandleMissingField,Cyclomatic complexity of the method is 9
Long Parameter List,LumenWorks.Framework.IO.Csv,CachedCsvReader,F:\newReposMay17\cental_PatternSim\rank\src\lib\LumenWorks.Framework.IO\Csv\CachedCsvReader.cs,CachedCsvReader,The method has 7 parameters.
Long Parameter List,LumenWorks.Framework.IO.Csv,CachedCsvReader,F:\newReposMay17\cental_PatternSim\rank\src\lib\LumenWorks.Framework.IO\Csv\CachedCsvReader.cs,CachedCsvReader,The method has 8 parameters.
Long Parameter List,LumenWorks.Framework.IO.Csv,CsvReader,F:\newReposMay17\cental_PatternSim\rank\src\lib\LumenWorks.Framework.IO\Csv\CsvReader.cs,CsvReader,The method has 7 parameters.
Long Parameter List,LumenWorks.Framework.IO.Csv,CsvReader,F:\newReposMay17\cental_PatternSim\rank\src\lib\LumenWorks.Framework.IO\Csv\CsvReader.cs,CsvReader,The method has 8 parameters.
Long Parameter List,LumenWorks.Framework.IO.Csv,CsvReader,F:\newReposMay17\cental_PatternSim\rank\src\lib\LumenWorks.Framework.IO\Csv\CsvReader.cs,CopyFieldToArray,The method has 5 parameters.
Long Parameter List,LumenWorks.Framework.IO.Csv,CsvReader,F:\newReposMay17\cental_PatternSim\rank\src\lib\LumenWorks.Framework.IO\Csv\CsvReader.cs,GetBytes,The method has 5 parameters.
Long Parameter List,LumenWorks.Framework.IO.Csv,CsvReader,F:\newReposMay17\cental_PatternSim\rank\src\lib\LumenWorks.Framework.IO\Csv\CsvReader.cs,GetChars,The method has 5 parameters.
Long Parameter List,LumenWorks.Framework.IO.Csv,MalformedCsvException,F:\newReposMay17\cental_PatternSim\rank\src\lib\LumenWorks.Framework.IO\Csv\Exceptions\MalformedCsvException.cs,MalformedCsvException,The method has 5 parameters.
Long Parameter List,LumenWorks.Framework.IO.Csv,MissingFieldCsvException,F:\newReposMay17\cental_PatternSim\rank\src\lib\LumenWorks.Framework.IO\Csv\Exceptions\MissingFieldCsvException.cs,MissingFieldCsvException,The method has 5 parameters.
Long Statement,LumenWorks.Framework.IO.Csv,CsvReader,F:\newReposMay17\cental_PatternSim\rank\src\lib\LumenWorks.Framework.IO\Csv\CsvReader.cs,IsWhiteSpace,The length of the statement  "			return (System.Globalization.CharUnicodeInfo.GetUnicodeCategory (c) == System.Globalization.UnicodeCategory.SpaceSeparator); " is 124.
Long Statement,LumenWorks.Framework.IO.Csv,CsvReader,F:\newReposMay17\cental_PatternSim\rank\src\lib\LumenWorks.Framework.IO\Csv\CsvReader.cs,ReadField,The length of the statement  "			throw new ArgumentOutOfRangeException ("field"' field' string.Format (CultureInfo.InvariantCulture' ExceptionMessage.FieldIndexOutOfRange' field)); " is 147.
Long Statement,LumenWorks.Framework.IO.Csv,CsvReader,F:\newReposMay17\cental_PatternSim\rank\src\lib\LumenWorks.Framework.IO\Csv\CsvReader.cs,ReadField,The length of the statement  "						else if (c == _escape && (_escape != _quote || (pos + 1 < _bufferLength && _buffer [pos + 1] == _quote) || (pos + 1 == _bufferLength && _reader.Peek () == _quote))) { " is 166.
Long Statement,LumenWorks.Framework.IO.Csv,CsvReader,F:\newReposMay17\cental_PatternSim\rank\src\lib\LumenWorks.Framework.IO\Csv\CsvReader.cs,ReadField,The length of the statement  "							HandleParseError (new MalformedCsvException (GetCurrentRawData ()' _nextFieldStart' Math.Max (0' _currentRecordIndex)' index)' ref _nextFieldStart); " is 148.
Long Statement,LumenWorks.Framework.IO.Csv,CsvReader,F:\newReposMay17\cental_PatternSim\rank\src\lib\LumenWorks.Framework.IO\Csv\CsvReader.cs,ReadField,The length of the statement  "						HandleParseError (new MalformedCsvException (GetCurrentRawData ()' _nextFieldStart' Math.Max (0' _currentRecordIndex)' index)' ref _nextFieldStart); " is 148.
Long Statement,LumenWorks.Framework.IO.Csv,CsvReader,F:\newReposMay17\cental_PatternSim\rank\src\lib\LumenWorks.Framework.IO\Csv\CsvReader.cs,ReadField,The length of the statement  "	HandleParseError (new MalformedCsvException (GetCurrentRawData ()' _nextFieldStart' Math.Max (0' _currentRecordIndex)' index)' ref _nextFieldStart); " is 148.
Long Statement,LumenWorks.Framework.IO.Csv,CsvReader,F:\newReposMay17\cental_PatternSim\rank\src\lib\LumenWorks.Framework.IO\Csv\CsvReader.cs,HandleParseError,The length of the statement  "			throw new InvalidOperationException (string.Format (CultureInfo.InvariantCulture' ExceptionMessage.ParseErrorActionInvalidInsideParseErrorEvent' e.Action)' e.Error); " is 165.
Long Statement,LumenWorks.Framework.IO.Csv,CsvReader,F:\newReposMay17\cental_PatternSim\rank\src\lib\LumenWorks.Framework.IO\Csv\CsvReader.cs,HandleParseError,The length of the statement  "			throw new NotSupportedException (string.Format (CultureInfo.InvariantCulture' ExceptionMessage.ParseErrorActionNotSupported' e.Action)' e.Error); " is 145.
Long Statement,LumenWorks.Framework.IO.Csv,CsvReader,F:\newReposMay17\cental_PatternSim\rank\src\lib\LumenWorks.Framework.IO\Csv\CsvReader.cs,HandleParseError,The length of the statement  "		throw new NotSupportedException (string.Format (CultureInfo.InvariantCulture' ExceptionMessage.ParseErrorActionNotSupported' _defaultParseErrorAction)' error); " is 159.
Long Statement,LumenWorks.Framework.IO.Csv,CsvReader,F:\newReposMay17\cental_PatternSim\rank\src\lib\LumenWorks.Framework.IO\Csv\CsvReader.cs,HandleMissingField,The length of the statement  "		throw new ArgumentOutOfRangeException ("fieldIndex"' fieldIndex' string.Format (CultureInfo.InvariantCulture' ExceptionMessage.FieldIndexOutOfRange' fieldIndex)); " is 162.
Long Statement,LumenWorks.Framework.IO.Csv,CsvReader,F:\newReposMay17\cental_PatternSim\rank\src\lib\LumenWorks.Framework.IO\Csv\CsvReader.cs,HandleMissingField,The length of the statement  "			HandleParseError (new MissingFieldCsvException (GetCurrentRawData ()' currentPosition' Math.Max (0' _currentRecordIndex)' fieldIndex)' ref currentPosition); " is 156.
Long Statement,LumenWorks.Framework.IO.Csv,CsvReader,F:\newReposMay17\cental_PatternSim\rank\src\lib\LumenWorks.Framework.IO\Csv\CsvReader.cs,HandleMissingField,The length of the statement  "			throw new NotSupportedException (string.Format (CultureInfo.InvariantCulture' ExceptionMessage.MissingFieldActionNotSupported' _missingFieldAction)); " is 149.
Long Statement,LumenWorks.Framework.IO.Csv,CsvReader,F:\newReposMay17\cental_PatternSim\rank\src\lib\LumenWorks.Framework.IO\Csv\CsvReader.cs,CopyFieldToArray,The length of the statement  "		throw new ArgumentOutOfRangeException ("field"' field' string.Format (CultureInfo.InvariantCulture' ExceptionMessage.FieldIndexOutOfRange' field)); " is 147.
Long Statement,LumenWorks.Framework.IO.Csv,CsvReader,F:\newReposMay17\cental_PatternSim\rank\src\lib\LumenWorks.Framework.IO\Csv\CsvReader.cs,GetFieldType,The length of the statement  "		throw new ArgumentOutOfRangeException ("i"' i' string.Format (CultureInfo.InvariantCulture' ExceptionMessage.FieldIndexOutOfRange' i)); " is 135.
Long Statement,LumenWorks.Framework.IO.Csv,CsvReader,F:\newReposMay17\cental_PatternSim\rank\src\lib\LumenWorks.Framework.IO\Csv\CsvReader.cs,GetName,The length of the statement  "		throw new ArgumentOutOfRangeException ("i"' i' string.Format (CultureInfo.InvariantCulture' ExceptionMessage.FieldIndexOutOfRange' i)); " is 135.
Long Statement,LumenWorks.Framework.IO.Csv,CsvReader,F:\newReposMay17\cental_PatternSim\rank\src\lib\LumenWorks.Framework.IO\Csv\CsvReader.cs,GetOrdinal,The length of the statement  "		throw new ArgumentException (string.Format (CultureInfo.InvariantCulture' ExceptionMessage.FieldHeaderNotFound' name)' "name"); " is 127.
Long Statement,LumenWorks.Framework.IO.Csv,CsvReader,F:\newReposMay17\cental_PatternSim\rank\src\lib\LumenWorks.Framework.IO\Csv\CsvReader.cs,Dispose,The length of the statement  "			// Dispose-time code should also set references of all owned objects to null' after disposing them. This will allow the referenced objects to be garbage collected even if not all references to the "parent" are released. It may be a significant memory consumption win if the referenced objects are large' such as big arrays' collections' etc.  " is 341.
Complex Conditional,LumenWorks.Framework.IO.Csv,CsvReader,F:\newReposMay17\cental_PatternSim\rank\src\lib\LumenWorks.Framework.IO\Csv\CsvReader.cs,ReadField,The conditional expression  "c == _escape && (_escape != _quote || (pos + 1 < _bufferLength && _buffer [pos + 1] == _quote) || (pos + 1 == _bufferLength && _reader.Peek () == _quote))"  is complex.
Complex Conditional,LumenWorks.Framework.IO.Csv,CsvReader,F:\newReposMay17\cental_PatternSim\rank\src\lib\LumenWorks.Framework.IO\Csv\CsvReader.cs,ReadField,The conditional expression  "!_eof && !delimiterSkipped && (initializing || index == _fieldCount - 1)"  is complex.
Complex Conditional,LumenWorks.Framework.IO.Csv,CsvReader,F:\newReposMay17\cental_PatternSim\rank\src\lib\LumenWorks.Framework.IO\Csv\CsvReader.cs,ReadField,The conditional expression  "!delimiterSkipped && !_eof && !(_eol || IsNewLine (_nextFieldStart))"  is complex.
Empty Catch Block,LumenWorks.Framework.IO.Csv,CsvReader,F:\newReposMay17\cental_PatternSim\rank\src\lib\LumenWorks.Framework.IO\Csv\CsvReader.cs,Dispose,The method has an empty catch block.
Magic Number,LumenWorks.Framework.IO.Csv,CsvReader,F:\newReposMay17\cental_PatternSim\rank\src\lib\LumenWorks.Framework.IO\Csv\CsvReader.cs,ReadNextRecord,The following statement contains a magic number: if (!_initialized) {  	_buffer = new char[_bufferSize];  	// will be replaced if and when headers are read  	_fieldHeaders = new string[0];  	if (!ReadBuffer ())  		return false;  	if (!SkipEmptyAndCommentedLines (ref _nextFieldStart))  		return false;  	// Keep growing _fields array until the last field has been found  	// and then resize it to its final correct size  	_fieldCount = 0;  	_fields = new string[16];  	while (ReadField (_fieldCount' true' false) != null) {  		if (_parseErrorFlag) {  			_fieldCount = 0;  			Array.Clear (_fields' 0' _fields.Length);  			_parseErrorFlag = false;  			_nextFieldIndex = 0;  		} else {  			_fieldCount++;  			if (_fieldCount == _fields.Length)  				Array.Resize<string> (ref _fields' (_fieldCount + 1) * 2);  		}  	}  	// _fieldCount contains the last field index' but it must contains the field count'  	// so increment by 1  	_fieldCount++;  	if (_fields.Length != _fieldCount)  		Array.Resize<string> (ref _fields' _fieldCount);  	_initialized = true;  	// If headers are present' call ReadNextRecord again  	if (_hasHeaders) {  		// Don't count first record as it was the headers  		_currentRecordIndex = -1;  		_firstRecordInCache = false;  		_fieldHeaders = new string[_fieldCount];  		_fieldHeaderIndexes = new Dictionary<string' int> (_fieldCount' _fieldHeaderComparer);  		for (int i = 0; i < _fields.Length; i++) {  			string headerName = _fields [i];  			if (string.IsNullOrEmpty (headerName) || headerName.Trim ().Length == 0)  				headerName = this.DefaultHeaderName + i.ToString ();  			_fieldHeaders [i] = headerName;  			_fieldHeaderIndexes.Add (headerName' i);  		}  		// Proceed to first record  		if (!onlyReadHeaders) {  			// Calling again ReadNextRecord() seems to be simpler'   			// but in fact would probably cause many subtle bugs because a derived class does not expect a recursive behavior  			// so simply do what is needed here and no more.  			if (!SkipEmptyAndCommentedLines (ref _nextFieldStart))  				return false;  			Array.Clear (_fields' 0' _fields.Length);  			_nextFieldIndex = 0;  			_eol = false;  			_currentRecordIndex++;  			return true;  		}  	} else {  		if (onlyReadHeaders) {  			_firstRecordInCache = true;  			_currentRecordIndex = -1;  		} else {  			_firstRecordInCache = false;  			_currentRecordIndex = 0;  		}  	}  } else {  	if (skipToNextLine)  		SkipToNextLine (ref _nextFieldStart);  	else if (_currentRecordIndex > -1 && !_missingFieldFlag) {  		// If not already at end of record' move there  		if (!_eol && !_eof) {  			if (!_supportsMultiline)  				SkipToNextLine (ref _nextFieldStart);  			else {  				// a dirty trick to handle the case where extra fields are present  				while (ReadField (_nextFieldIndex' true' true) != null) {  				}  			}  		}  	}  	if (!_firstRecordInCache && !SkipEmptyAndCommentedLines (ref _nextFieldStart))  		return false;  	if (_hasHeaders || !_firstRecordInCache)  		_eol = false;  	// Check to see if the first record is in cache.  	// This can happen when initializing a reader with no headers  	// because one record must be read to get the field count automatically  	if (_firstRecordInCache)  		_firstRecordInCache = false;  	else {  		Array.Clear (_fields' 0' _fields.Length);  		_nextFieldIndex = 0;  	}  	_missingFieldFlag = false;  	_parseErrorFlag = false;  	_currentRecordIndex++;  }  
Magic Number,LumenWorks.Framework.IO.Csv,CsvReader,F:\newReposMay17\cental_PatternSim\rank\src\lib\LumenWorks.Framework.IO\Csv\CsvReader.cs,ReadNextRecord,The following statement contains a magic number: if (!_initialized) {  	_buffer = new char[_bufferSize];  	// will be replaced if and when headers are read  	_fieldHeaders = new string[0];  	if (!ReadBuffer ())  		return false;  	if (!SkipEmptyAndCommentedLines (ref _nextFieldStart))  		return false;  	// Keep growing _fields array until the last field has been found  	// and then resize it to its final correct size  	_fieldCount = 0;  	_fields = new string[16];  	while (ReadField (_fieldCount' true' false) != null) {  		if (_parseErrorFlag) {  			_fieldCount = 0;  			Array.Clear (_fields' 0' _fields.Length);  			_parseErrorFlag = false;  			_nextFieldIndex = 0;  		} else {  			_fieldCount++;  			if (_fieldCount == _fields.Length)  				Array.Resize<string> (ref _fields' (_fieldCount + 1) * 2);  		}  	}  	// _fieldCount contains the last field index' but it must contains the field count'  	// so increment by 1  	_fieldCount++;  	if (_fields.Length != _fieldCount)  		Array.Resize<string> (ref _fields' _fieldCount);  	_initialized = true;  	// If headers are present' call ReadNextRecord again  	if (_hasHeaders) {  		// Don't count first record as it was the headers  		_currentRecordIndex = -1;  		_firstRecordInCache = false;  		_fieldHeaders = new string[_fieldCount];  		_fieldHeaderIndexes = new Dictionary<string' int> (_fieldCount' _fieldHeaderComparer);  		for (int i = 0; i < _fields.Length; i++) {  			string headerName = _fields [i];  			if (string.IsNullOrEmpty (headerName) || headerName.Trim ().Length == 0)  				headerName = this.DefaultHeaderName + i.ToString ();  			_fieldHeaders [i] = headerName;  			_fieldHeaderIndexes.Add (headerName' i);  		}  		// Proceed to first record  		if (!onlyReadHeaders) {  			// Calling again ReadNextRecord() seems to be simpler'   			// but in fact would probably cause many subtle bugs because a derived class does not expect a recursive behavior  			// so simply do what is needed here and no more.  			if (!SkipEmptyAndCommentedLines (ref _nextFieldStart))  				return false;  			Array.Clear (_fields' 0' _fields.Length);  			_nextFieldIndex = 0;  			_eol = false;  			_currentRecordIndex++;  			return true;  		}  	} else {  		if (onlyReadHeaders) {  			_firstRecordInCache = true;  			_currentRecordIndex = -1;  		} else {  			_firstRecordInCache = false;  			_currentRecordIndex = 0;  		}  	}  } else {  	if (skipToNextLine)  		SkipToNextLine (ref _nextFieldStart);  	else if (_currentRecordIndex > -1 && !_missingFieldFlag) {  		// If not already at end of record' move there  		if (!_eol && !_eof) {  			if (!_supportsMultiline)  				SkipToNextLine (ref _nextFieldStart);  			else {  				// a dirty trick to handle the case where extra fields are present  				while (ReadField (_nextFieldIndex' true' true) != null) {  				}  			}  		}  	}  	if (!_firstRecordInCache && !SkipEmptyAndCommentedLines (ref _nextFieldStart))  		return false;  	if (_hasHeaders || !_firstRecordInCache)  		_eol = false;  	// Check to see if the first record is in cache.  	// This can happen when initializing a reader with no headers  	// because one record must be read to get the field count automatically  	if (_firstRecordInCache)  		_firstRecordInCache = false;  	else {  		Array.Clear (_fields' 0' _fields.Length);  		_nextFieldIndex = 0;  	}  	_missingFieldFlag = false;  	_parseErrorFlag = false;  	_currentRecordIndex++;  }  
Magic Number,LumenWorks.Framework.IO.Csv,CsvReader,F:\newReposMay17\cental_PatternSim\rank\src\lib\LumenWorks.Framework.IO\Csv\CsvReader.cs,ReadNextRecord,The following statement contains a magic number: _fields = new string[16];  
Magic Number,LumenWorks.Framework.IO.Csv,CsvReader,F:\newReposMay17\cental_PatternSim\rank\src\lib\LumenWorks.Framework.IO\Csv\CsvReader.cs,ReadNextRecord,The following statement contains a magic number: while (ReadField (_fieldCount' true' false) != null) {  	if (_parseErrorFlag) {  		_fieldCount = 0;  		Array.Clear (_fields' 0' _fields.Length);  		_parseErrorFlag = false;  		_nextFieldIndex = 0;  	} else {  		_fieldCount++;  		if (_fieldCount == _fields.Length)  			Array.Resize<string> (ref _fields' (_fieldCount + 1) * 2);  	}  }  
Magic Number,LumenWorks.Framework.IO.Csv,CsvReader,F:\newReposMay17\cental_PatternSim\rank\src\lib\LumenWorks.Framework.IO\Csv\CsvReader.cs,ReadNextRecord,The following statement contains a magic number: if (_parseErrorFlag) {  	_fieldCount = 0;  	Array.Clear (_fields' 0' _fields.Length);  	_parseErrorFlag = false;  	_nextFieldIndex = 0;  } else {  	_fieldCount++;  	if (_fieldCount == _fields.Length)  		Array.Resize<string> (ref _fields' (_fieldCount + 1) * 2);  }  
Magic Number,LumenWorks.Framework.IO.Csv,CsvReader,F:\newReposMay17\cental_PatternSim\rank\src\lib\LumenWorks.Framework.IO\Csv\CsvReader.cs,ReadNextRecord,The following statement contains a magic number: if (_fieldCount == _fields.Length)  	Array.Resize<string> (ref _fields' (_fieldCount + 1) * 2);  
Magic Number,LumenWorks.Framework.IO.Csv,CsvReader,F:\newReposMay17\cental_PatternSim\rank\src\lib\LumenWorks.Framework.IO\Csv\CsvReader.cs,ReadNextRecord,The following statement contains a magic number: Array.Resize<string> (ref _fields' (_fieldCount + 1) * 2);  
Magic Number,LumenWorks.Framework.IO.Csv,CsvReader,F:\newReposMay17\cental_PatternSim\rank\src\lib\LumenWorks.Framework.IO\Csv\CsvReader.cs,GetSchemaTable,The following statement contains a magic number: for (int i = 0; i < columnNames.Length; i++) {  	schemaRow [1] = columnNames [i];  	// Base column name  	schemaRow [4] = columnNames [i];  	// Column name  	schemaRow [5] = i;  	// Column ordinal  	schema.Rows.Add (schemaRow);  }  
Magic Number,LumenWorks.Framework.IO.Csv,CsvReader,F:\newReposMay17\cental_PatternSim\rank\src\lib\LumenWorks.Framework.IO\Csv\CsvReader.cs,GetSchemaTable,The following statement contains a magic number: for (int i = 0; i < columnNames.Length; i++) {  	schemaRow [1] = columnNames [i];  	// Base column name  	schemaRow [4] = columnNames [i];  	// Column name  	schemaRow [5] = i;  	// Column ordinal  	schema.Rows.Add (schemaRow);  }  
Magic Number,LumenWorks.Framework.IO.Csv,CsvReader,F:\newReposMay17\cental_PatternSim\rank\src\lib\LumenWorks.Framework.IO\Csv\CsvReader.cs,GetSchemaTable,The following statement contains a magic number: schemaRow [4] = columnNames [i];  
Magic Number,LumenWorks.Framework.IO.Csv,CsvReader,F:\newReposMay17\cental_PatternSim\rank\src\lib\LumenWorks.Framework.IO\Csv\CsvReader.cs,GetSchemaTable,The following statement contains a magic number: schemaRow [5] = i;  
