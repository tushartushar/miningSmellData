Implementation smell,Namespace,Class,File,Method,Description
Long Statement,nBayes,Program,C:\repos\joelmartinez_nBayes\nBayes.Sample\Program.cs,TestOptimizer,The length of the statement  "	Console.WriteLine("\nResults! We expect that ({0}) will have the highest success rate' and ({1}) will be in second place"' secondWinner' firstWinner); " is 150.
Magic Number,nBayes,Program,C:\repos\joelmartinez_nBayes\nBayes.Sample\Program.cs,TestOptimizer,The following statement contains a magic number: optimizer.Add(options[2]);
Magic Number,nBayes,Program,C:\repos\joelmartinez_nBayes\nBayes.Sample\Program.cs,TestOptimizer,The following statement contains a magic number: var firstWinner = options[2];
Magic Number,nBayes,Program,C:\repos\joelmartinez_nBayes\nBayes.Sample\Program.cs,TestOptimizer,The following statement contains a magic number: int tries = 100;
Magic Number,nBayes,Program,C:\repos\joelmartinez_nBayes\nBayes.Sample\Program.cs,TestBufferedEnumerable,The following statement contains a magic number: var numbers = new int[] {1'2'3'4'5'6};
Magic Number,nBayes,Program,C:\repos\joelmartinez_nBayes\nBayes.Sample\Program.cs,TestBufferedEnumerable,The following statement contains a magic number: var numbers = new int[] {1'2'3'4'5'6};
Magic Number,nBayes,Program,C:\repos\joelmartinez_nBayes\nBayes.Sample\Program.cs,TestBufferedEnumerable,The following statement contains a magic number: var numbers = new int[] {1'2'3'4'5'6};
Magic Number,nBayes,Program,C:\repos\joelmartinez_nBayes\nBayes.Sample\Program.cs,TestBufferedEnumerable,The following statement contains a magic number: var numbers = new int[] {1'2'3'4'5'6};
Magic Number,nBayes,Program,C:\repos\joelmartinez_nBayes\nBayes.Sample\Program.cs,TestBufferedEnumerable,The following statement contains a magic number: var numbers = new int[] {1'2'3'4'5'6};
Missing Default,nBayes,Program,C:\repos\joelmartinez_nBayes\nBayes.Sample\Program.cs,TestBinaryClassifier,The following switch statement is missing a default case: switch (result)              {                  case CategorizationResult.First:                      Console.WriteLine(firstSearch);                      break;                  case CategorizationResult.Undetermined:                      Console.WriteLine("no clue");                      break;                  case CategorizationResult.Second:                      Console.WriteLine(secondSearch);                      break;              }
