Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,NBehave.Specifications,HooksSpec,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\HooksSpec.cs,,The length of the parameter _backgroundStepWasCalledButNotBeforeScenario is 44.
Long Identifier,NBehave.Specifications,HooksSpec,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\HooksSpec.cs,,The length of the parameter _backgroundStepWasCalledButNotBeforeStep is 40.
Long Identifier,NBehave.Specifications.Features,TestFeatures,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\Features\TestFeatures.cs,,The length of the parameter FeatureWithNewLineInGivenClause is 31.
Long Statement,NBehave.Specifications,ActionStepCodeGeneratorSpec,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\ActionStepCodeGeneratorSpec.cs,GivenTheseConditions,The length of the statement  "            generatedCode = codeGen.GenerateMethodFor(new StringStep(StepText.GetFirstWord()' StepText.RemoveFirstWord()' "a.feature")); " is 124.
Long Statement,NBehave.Specifications,AcceptanceTest,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\EmbeddedRunnerSpec.cs,Running_a_passing_feature,The length of the statement  "                    TestFeatures.FeatureNamedStory.ExecuteFile(typeof(GreetingSystemSteps.GreetingSystem).Assembly' new TextWriterEventListener(new StringWriter()));" is 145.
Long Statement,NBehave.Specifications,AcceptanceTest,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\EmbeddedRunnerSpec.cs,Running_a_failing_feature,The length of the statement  "                    Assert.Throws<StepFailedException>(() => TestFeatures.FeatureWithFailingStep.ExecuteFile(typeof(GreetingSystemSteps.GreetingSystem).Assembly' new TextWriterEventListener(new StringWriter())));" is 192.
Long Statement,NBehave.Specifications,WhenHavingActionStepAttributeWithTokenString,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\ActionStepParserSpec.cs,ShouldMatchParametersInTokenStringToMethodParameters,The length of the statement  "                var action = _actionCatalog.GetAction(new StringStep("Given"' "a method with tokenstring and two parameters' one int value 42 plus text thistext"' "")); " is 152.
Long Statement,NBehave.Specifications,WhenHavingActionStepAttributeWithTokenString,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\ActionStepParserSpec.cs,ShouldFindGivenStepWithGivenAttribute,The length of the statement  "                var actionStepToFind = new StringStep("Given"' "a method with tokenstring and two parameters' one int value 42 plus text thistext"' "file"); " is 140.
Long Statement,NBehave.Specifications,WhenHavingActionStepAttributeWithTokenString,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\ActionStepParserSpec.cs,ShouldFindGivenStepWithGivenAttribute,The length of the statement  "                Assert.That(action.ActionStepMatcher.ToString()' Is.EqualTo(@"^a\s+method\s+with\s+tokenstring\s+and\s+two\s+parameters'\s+one\s+int\s+value\s+(?<intParam>.+)\s+plus\s+text\s+(?<stringParam>.+)\s*$")); " is 201.
Long Statement,NBehave.Specifications,WhenHavingActionStepAttributeWithTokenString,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\ActionStepParserSpec.cs,ShouldFindGivenWithEmbeddedParam,The length of the statement  "                var actionStepToFind = new StringStep("Given"' "a method with \"embedded\" parameter like \"this\" should work"' "file"); " is 121.
Long Statement,NBehave.Specifications,WhenHavingActionStepAttributeOnAbstractClass,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\ActionStepParserSpec.cs,SetUp,The length of the statement  "                _storyRunnerFilter = new StoryRunnerFilter(GetType().Namespace' StoryRunnerFilter.MatchAnything' StoryRunnerFilter.MatchAnything); " is 130.
Long Statement,NBehave.Specifications,WhenFetchingParametersForActionStep,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\ParameterConverterSpec.cs,ShouldGetParameterForActionWithTokenInMiddleOfString,The length of the statement  "                _actionCatalog.Add(new ActionMethodInfo("I have $amount euros on my cash account".AsRegex()' action' action.Method' null)); " is 123.
Long Statement,NBehave.Specifications,WhenFetchingParametersForActionStep,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\ParameterConverterSpec.cs,ShouldGetParameterForActionWithTokenInMiddleOfString,The length of the statement  "                var values = _parameterConverter.GetParametersForStep(new StringStep("Given"' "I have 20 euros on my cash account"' "")); " is 121.
Long Statement,NBehave.Specifications,WhenFetchingParametersForActionStep,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\ParameterConverterSpec.cs,ShouldGetParameterForActionIfTokenHasNewlines,The length of the statement  "                var values = _parameterConverter.GetParametersForStep(new StringStep("Given"' "I have a board like this\nxo \n x \no x"' "")); " is 126.
Long Statement,NBehave.Specifications,WhenFetchingParametersForActionStep,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\ParameterConverterSpec.cs,ShouldGetMultilineValueAsArrayOfStrings,The length of the statement  "                _actionCatalog.Add(new ActionMethodInfo(new Regex(@"a string\s+(?<value>(\w+'?\s*)+)")' actionStep' actionStep.Method' "Given")); " is 129.
Long Statement,NBehave.Specifications,WhenFetchingParametersForActionStep,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\ParameterConverterSpec.cs,ShouldRemoveEmptyEntriesAtEndOfArrayValues,The length of the statement  "                _actionCatalog.Add(new ActionMethodInfo(new Regex(@"a string\s+(?<value>(\w+'?\s*)+)")' action' action.Method' "Given")); " is 121.
Long Statement,NBehave.Specifications,WhenFetchingParametersForActionStep,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\ParameterConverterSpec.cs,ShouldGetMultilineValueAsGenericCollectionOfIntegers,The length of the statement  "                _actionCatalog.Add(new ActionMethodInfo(new Regex(@"a list of integers (?<value>(\d+'?\s*)+)")' actionStep' actionStep.Method' "Given")); " is 137.
Long Statement,NBehave.Specifications,WhenFetchingParametersForActionStep,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\ParameterConverterSpec.cs,Should_get_value_as_complex_type,The length of the statement  "                _actionCatalog.Add(new ActionMethodInfo(new Regex(@"a book named (?<name>\w+) of author (?<author>.*) with isbn (?<isbn>\w+)$")' actionStep' actionStep.Method' "Given")); " is 170.
Long Statement,NBehave.Specifications,WhenFetchingParametersForActionStep,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\ParameterConverterSpec.cs,Should_throw_meaningful_exception_when_property_does_not_exist_on_complex_type,The length of the statement  "                _actionCatalog.Add(new ActionMethodInfo(new Regex(@"a book named (?<name>\w+) of author (?<Foo>.*) with isbn (?<isbn>\w+)$")' actionStep' actionStep.Method' "Given")); " is 167.
Long Statement,NBehave.Specifications,WhenFetchingParametersForActionStep,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\ParameterConverterSpec.cs,Should_throw_meaningful_exception_when_property_does_not_exist_on_complex_type,The length of the statement  "                var ex = Assert.Throws<ArgumentException>(() => _parameterConverter.GetParametersForStep(new StringStep("Given"' actionString' ""))); " is 133.
Long Statement,NBehave.Specifications,WhenFetchingParametersForActionStep,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\ParameterConverterSpec.cs,Should_get_a_list_of_complex_types,The length of the statement  "                var columnNames = new ExampleColumns { new ExampleColumn("name")' new ExampleColumn("author")' new ExampleColumn("isbn") }; " is 123.
Long Statement,NBehave.Specifications,WhenFetchingParametersWithRowValue,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\ParameterConverterSpec.cs,ShouldGetParameterForActionWithTokenInMiddleOfString,The length of the statement  "                var row = new Example(new ExampleColumns(new[] { new ExampleColumn("name") })' new Dictionary<string' string> { { "name"' "Morgan" } }); " is 136.
Long Statement,NBehave.Specifications,WhenRunningPlainTextScenarios,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\StringStepRunnerSpec.cs,Should_get_parameter_value_for_action_with_parameter_of_complex_type,The length of the statement  "                actionCatalog.Add(new ActionMethodInfo(new Regex(@"my name is (?<name>\w+) and I'm (?<age>\d+) years old")' action' action.Method' "Given")); " is 141.
Long Statement,NBehave.Specifications,WhenRunningPlainTextScenarios,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\StringStepRunnerSpec.cs,Should_get_parameter_value_for_action_with_parameter_of_List_of_complex_type,The length of the statement  "                tableStep.AddTableStep(new Example(new ExampleColumns { new ExampleColumn("age")' new ExampleColumn("name") }' new Dictionary<string' string> { { "age"' "42" }' { "name"' "Morgan" } })); " is 186.
Long Statement,NBehave.Specifications,WhenRunningPlainTextScenarios,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\StringStepRunnerSpec.cs,Should_get_parameter_value_for_action_with_parameter_of_List_of_complex_type,The length of the statement  "                tableStep.AddTableStep(new Example(new ExampleColumns { new ExampleColumn("age")' new ExampleColumn("name") }' new Dictionary<string' string> { { "age"' "666" }' { "name"' "Lucifer" } })); " is 188.
Long Statement,NBehave.Specifications,WhenRunningPlainTextScenarios,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\StringStepRunnerSpec.cs,ShouldListAllPendingActionSteps,The length of the statement  "                StringAssert.Contains("No matching Action found for \"Given something that has no ActionStep\""' _results[0].ScenarioResults[0].Message); " is 137.
Long Statement,NBehave.Specifications,WhenRunningPlainTextScenarios,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\StringStepRunnerSpec.cs,ShouldListAllPendingActionSteps,The length of the statement  "                StringAssert.Contains("No matching Action found for \"And something else that has no ActionStep\""' _results[0].ScenarioResults[0].Message); " is 140.
Long Statement,NBehave.Specifications,WhenRunningPlainTextScenarios,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\StringStepRunnerSpec.cs,Should_not_crash_when_feature_file_ends_with_comment,The length of the statement  "                _results = CreateBasicConfiguration().SetScenarioFiles(new[] { TestFeatures.FeatureWithCommentOnLastRow }).Build().Run(); " is 121.
Long Statement,NBehave.Specifications,When_running_with_step_that_has_docstring,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\StringStepRunnerSpec.cs,ShouldInvokeActionGivenATokenString,The length of the statement  "                actionCatalog.Add(new ActionMethodInfo("a value $value followed by docstring".AsRegex()' action' action.Method' "Given")); " is 122.
Long Statement,NBehave.Specifications,ScenarioResultSpec,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\ScenarioResultSpec.cs,ShouldSetMessageWithInnerExceptionInformationWhenFailed,The length of the statement  "            Assert.That(_results.Message' Is.EqualTo("System.Exception : Outer" + Environment.NewLine + "  ----> System.ApplicationException : Inner")); " is 140.
Long Statement,NBehave.Specifications,ScenarioResultSpec,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\ScenarioResultSpec.cs,ShouldSetStackTraceWithInnerExceptionDetailsWhenFailed,The length of the statement  "            var expected = ex.StackTrace + Environment.NewLine +"--ApplicationException" + Environment.NewLine + ex.InnerException.StackTrace; " is 130.
Long Statement,NBehave.Specifications,ScenarioResultSpec,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\ScenarioResultSpec.cs,Should_pend_scenario_with_PendingNotImplemented,The length of the statement  "            _results.AddActionStepResult(new StepResult(new StringStep("Given"' "foo"' "")' new PendingNotImplemented("not implemented"))); " is 127.
Long Statement,NBehave.Specifications,ScenarioStepRunnerSpec,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\ScenarioStepRunnerSpec.cs,Init,The length of the statement  "            NBehaveInitializer.Initialize(ConfigurationNoAppDomain.New.SetEventListener(NBehave.EventListeners.EventListeners.NullEventListener())); " is 136.
Long Statement,NBehave.Specifications,WhenComparingStringSteps,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\StringStepSpec.cs,Should_build_string_step,The length of the statement  "                var example = new Example(new ExampleColumns(new[] { new ExampleColumn("param")' })' new Dictionary<string' string> { { "param"' "12" } }); " is 139.
Long Statement,NBehave.Specifications.Domain,FeatureSpec,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\Domain\FeatureSpec.cs,Should_convert_feature_to_string,The length of the statement  "            var feature = new Feature("Title"' string.Format("  As a x{0}  I want y{0}  So that z"' Environment.NewLine)' "source"' 1); " is 123.
Long Statement,NBehave.Specifications.Domain,FeatureSpec,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\Domain\FeatureSpec.cs,Should_convert_background_to_string,The length of the statement  "            var feature = new Feature("Title"' string.Format("  As a x{0}  I want y{0}  So that z"' Environment.NewLine)' "source"' 1); " is 123.
Long Statement,NBehave.Specifications.Internal,When_running_scenario_with_table_steps_that_fail,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\Internal\FeatureRunnerSpec.cs,CreateScenarioWithTable,The length of the statement  "                givenStep.AddTableStep(new Example(new ExampleColumns(new[] { new ExampleColumn("x") })' new Dictionary<string' string> { { "x"' "Nisse" } })); " is 143.
Long Statement,NBehave.Specifications.Internal,When_running_scenario_with_table_steps_that_fail,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\Internal\FeatureRunnerSpec.cs,CreateScenarioWithTable,The length of the statement  "                givenStep.AddTableStep(new Example(new ExampleColumns(new[] { new ExampleColumn("x") })' new Dictionary<string' string> { { "x"' "Kalle" } })); " is 143.
Long Statement,NBehave.Specifications.Internal,When_running_scenario_with_table_steps_that_fail,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\Internal\FeatureRunnerSpec.cs,CreateScenarioWithTable,The length of the statement  "                thenStep.AddTableStep(new Example(new ExampleColumns(new[] { new ExampleColumn("y")' })' new Dictionary<string' string> { { "y"' "Nisse" } })); " is 143.
Long Statement,NBehave.Specifications.Internal,When_running_scenario_with_table_steps_that_fail,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\Internal\FeatureRunnerSpec.cs,CreateScenarioWithTable,The length of the statement  "                thenStep.AddTableStep(new Example(new ExampleColumns(new[] { new ExampleColumn("y")' })' new Dictionary<string' string> { { "y"' "K�lle" } })); " is 143.
Long Statement,NBehave.Specifications.Internal,When_BeforeStep_throws_exception,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\Internal\FeatureRunnerSpec.cs,SetUp,The length of the statement  "                hooksCatalog.Add(new DelegateHookMetaData(() => { throw new ArgumentException("BeforeStep"); }' new BeforeStepAttribute())); " is 124.
Long Statement,NBehave.Specifications.Internal,When_AfterStep_throws_exception,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\Internal\FeatureRunnerSpec.cs,SetUp,The length of the statement  "                hooksCatalog.Add(new DelegateHookMetaData(() => { throw new ArgumentNullException("AfterStep"); }' new AfterStepAttribute())); " is 126.
Long Statement,NBehave.Specifications.Internal,When_BeforeScenario_throws_exception,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\Internal\FeatureRunnerSpec.cs,SetUp,The length of the statement  "                hooksCatalog.Add(new DelegateHookMetaData(() => { throw new ApplicationException("OnBeforeScenario failed"); }' new BeforeScenarioAttribute())); " is 144.
Long Statement,NBehave.Specifications.Internal,When_AfterScenario_throws_exception,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\Internal\FeatureRunnerSpec.cs,SetUp,The length of the statement  "                hooksCatalog.Add(new DelegateHookMetaData(() => { throw new ApplicationException("After"); }' new AfterScenarioAttribute())); " is 125.
Long Statement,NBehave.Specifications.System.Specs.Backgrounds,WhenRunningAScenarioWithABackgroundSection,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\System.Specs\Backgrounds\WhenRunningAScenarioWithABackgroundSection.cs,AllStepsShouldPass,The length of the statement  "            IEnumerable<StepResult> enumerable = _results.SelectMany(_=>_.ScenarioResults).SelectMany(result => result.StepResults); " is 120.
Long Statement,NBehave.Specifications.System.Specs.Examples,WhenRunningAScenarioWithScenarioOutlinesButNoActionSteps,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\System.Specs\Examples\WhenRunningAScenarioWithExamplesButNoActionSteps.cs,ItShouldMarkAllResultsAsPending,The length of the statement  "            IEnumerable<Result> enumerable = _results.First().ScenarioResults.First().StepResults.Select(result => result.Result).ToList(); " is 127.
Long Statement,NBehave.Specifications.System.Specs.Scenarios,WhenRunningAScenario,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\System.Specs\Scenarios\WhenRunningAScenario.cs,AllStepsShouldPass,The length of the statement  "            IEnumerable<StepResult> enumerable = _results.SelectMany(_=>_.ScenarioResults).SelectMany(result => result.StepResults); " is 120.
Long Statement,NBehave.Specifications.TextParsing,StepBuilderSpec,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\TextParsing\StepBuilderSpec.cs,Should_add_steps_to_Scenario,The length of the statement  "            gherkinEvents.Raise(_ => _.StepEvent += null' this' new EventArgs<StringStep>(new StringStep("Given"' "step 1"' "source"))); " is 124.
Long Statement,NBehave.Specifications.TextParsing,StepBuilderSpec,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\TextParsing\StepBuilderSpec.cs,Should_add_steps_to_Scenario,The length of the statement  "            gherkinEvents.Raise(_ => _.StepEvent += null' this' new EventArgs<StringStep>(new StringStep("Given"' "step 2"' "source"))); " is 124.
Long Statement,NBehave.Specifications.TextParsing,StepBuilderSpec,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\TextParsing\StepBuilderSpec.cs,Should_add_table_steps_to_scenario,The length of the statement  "            gherkinEvents.Raise(_ => _.StepEvent += null' this' new EventArgs<StringStep>(new StringStep("Given"' "step 1"' "source"))); " is 124.
Long Statement,NBehave.Specifications.TextParsing,StepBuilderSpec,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\TextParsing\StepBuilderSpec.cs,Should_add_table_steps_to_scenario,The length of the statement  "            gherkinEvents.Raise(_ => _.StepEvent += null' this' new EventArgs<StringStep>(new StringStep("Given"' "step 2"' "source"))); " is 124.
Long Statement,NBehave.Specifications.TextParsing,StepBuilderSpec,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\TextParsing\StepBuilderSpec.cs,Should_add_docstring_to_previous_step,The length of the statement  "            gherkinEvents.Raise(_ => _.StepEvent += null' this' new EventArgs<StringStep>(new StringStep("Given"' "step 1"' "source"))); " is 124.
Long Statement,NBehave.Specifications.TextParsing,StepBuilderSpec,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\TextParsing\StepBuilderSpec.cs,Should_add_docstring_to_previous_step,The length of the statement  "            gherkinEvents.Raise(_ => _.StepEvent += null' this' new EventArgs<StringStep>(new StringStep("Given"' "step 2"' "source"))); " is 124.
Empty Catch Block,NBehave.Specifications,When_running_failing_scenario,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\EmbeddedRunnerSpec.cs,Run_Feature,The method has an empty catch block.
Magic Number,NBehave.Specifications,HooksSpec,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\HooksSpec.cs,ShouldCallBeforeStepOncePerStep,The following statement contains a magic number: Assert.That(_timesBeforeStepWasCalled' Is.EqualTo(3));
Magic Number,NBehave.Specifications,HooksSpec,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\HooksSpec.cs,ShouldCallAfterStepOncePerStep,The following statement contains a magic number: Assert.That(_timesAfterStepWasCalled' Is.EqualTo(3));
Magic Number,NBehave.Specifications,WhenHavingActionStepAttributeWithTokenString,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\ActionStepParserSpec.cs,ShouldMatchParametersInTokenStringToMethodParameters,The following statement contains a magic number: Assert.That(action.ParameterInfo.GetLength(0)' Is.EqualTo(2));
Magic Number,NBehave.Specifications,WhenFetchingParametersForActionStep,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\ParameterConverterSpec.cs,ShouldGetMultilineValueAsGenericCollectionOfIntegers,The following statement contains a magic number: Assert.AreEqual(2' arr.Skip(1).First());
Magic Number,NBehave.Specifications,WhenFetchingParametersForActionStep,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\ParameterConverterSpec.cs,ShouldGetMultilineValueAsGenericCollectionOfIntegers,The following statement contains a magic number: Assert.AreEqual(5' arr.Last());
Magic Number,NBehave.Specifications,WhenFetchingParametersForActionStep,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\ParameterConverterSpec.cs,Should_get_value_as_complex_type,The following statement contains a magic number: Assert.AreEqual(123' book.ISBN);
Magic Number,NBehave.Specifications,WhenFetchingParametersForActionStep,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\ParameterConverterSpec.cs,Should_get_a_list_of_complex_types,The following statement contains a magic number: Assert.AreEqual(2' books.Count);
Magic Number,NBehave.Specifications,WhenFetchingParametersForActionStep,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\ParameterConverterSpec.cs,Should_get_a_list_of_complex_types,The following statement contains a magic number: Assert.AreEqual(2' books[1].ISBN);
Magic Number,NBehave.Specifications,ScenarioContextSpec,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\ScenarioContextSpec.cs,Should_TryGet_value_when_item_exists_returns_true_and_out_param_has_value,The following statement contains a magic number: ScenarioContext.Current["hasValue"] = 42;
Magic Number,NBehave.Specifications,ScenarioContextSpec,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\ScenarioContextSpec.cs,Should_TryGet_value_when_item_exists_returns_true_and_out_param_has_value,The following statement contains a magic number: Assert.AreEqual(42' value);
Magic Number,NBehave.Specifications,WhenRunningPlainTextScenarios,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\StringStepRunnerSpec.cs,Should_get_parameter_value_for_action_with_parameter_of_complex_type,The following statement contains a magic number: Assert.That(actual.Age' Is.EqualTo(42));
Magic Number,NBehave.Specifications,WhenRunningPlainTextScenarios,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\StringStepRunnerSpec.cs,Should_get_parameter_value_for_action_with_parameter_of_List_of_complex_type,The following statement contains a magic number: Assert.That(actual.Count' Is.EqualTo(2));
Magic Number,NBehave.Specifications,WhenRunningPlainTextScenarios,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\StringStepRunnerSpec.cs,Should_get_parameter_value_for_action_with_parameter_of_List_of_complex_type,The following statement contains a magic number: Assert.That(actual[0].Age' Is.EqualTo(42));
Magic Number,NBehave.Specifications,WhenRunningPlainTextScenarios,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\StringStepRunnerSpec.cs,Should_get_parameter_value_for_action_with_parameter_of_List_of_complex_type,The following statement contains a magic number: Assert.That(actual[1].Age' Is.EqualTo(666));
Magic Number,NBehave.Specifications,WhenRunningPlainTextScenarios,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\StringStepRunnerSpec.cs,ShouldExecuteMoreThanOneScenarioInTextFile,The following statement contains a magic number: Assert.That(_results.NumberOfScenariosFound' Is.EqualTo(2));
Magic Number,NBehave.Specifications,WhenRunningPlainTextScenarios,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\StringStepRunnerSpec.cs,ShouldExecuteMoreThanOneScenarioInTextFile,The following statement contains a magic number: Assert.That(_results.NumberOfPassingScenarios' Is.EqualTo(2));
Magic Number,NBehave.Specifications,WhenRunningPlainTextScenarios,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\StringStepRunnerSpec.cs,ShouldUseWildcardAndRunAllScenariosInAllMatchingTextFiles,The following statement contains a magic number: Assert.That(_results.Count' Is.EqualTo(12));
Magic Number,NBehave.Specifications,WhenRunningPlainTextScenarios,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\StringStepRunnerSpec.cs,ShouldUseWildcardAndRunAllScenariosInAllMatchingTextFiles,The following statement contains a magic number: Assert.That(_results.NumberOfScenariosFound' Is.EqualTo(17));
Magic Number,NBehave.Specifications,WhenRunningPlainTextScenarios,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\StringStepRunnerSpec.cs,ShouldUseWildcardAndRunAllScenariosInAllMatchingTextFiles,The following statement contains a magic number: Assert.That(_results.NumberOfPassingScenarios' Is.EqualTo(8));
Magic Number,NBehave.Specifications,When_running_a_scenario_that_has_a_failing_given_step,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\ScenarioStepRunnerSpec.cs,Should_mark_all_following_steps_as_pending,The following statement contains a magic number: Assert.That(scenarioResult.StepResults.ElementAt(2).Result' Is.InstanceOf<Skipped>());
Magic Number,NBehave.Specifications,WhenRunningWithXmlListener,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\TextRunnerSpec.cs,ShouldFindTwoPassedStep,The following statement contains a magic number: Assert.That(storyNodes.Count' Is.EqualTo(2));
Magic Number,NBehave.Specifications,WhenRunningPlainTextScenariosWithXmlListener,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\TextRunnerSpec.cs,ShouldRunTwoScenarios,The following statement contains a magic number: Assert.That(scenarioNodes.Count' Is.EqualTo(2));
Magic Number,NBehave.Specifications,StoryRunnerFilterSpecs,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\StoryRunnerFilterSpecs.cs,ShouldSetMemberfilterForMethodInfoOfTypeMethod,The following statement contains a magic number: Given(                  () =>                      {                          var stack = new StackFrame(2); //                          member = stack.GetMethod();                      }                  );
Magic Number,NBehave.Specifications,SimpleScenarioWithTitle,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\ScenarioParserSpec.cs,ShouldFind3Steps,The following statement contains a magic number: Assert.That(scenarios.First().Steps.Count()' Is.EqualTo(3));
Magic Number,NBehave.Specifications,TwoScenariosWithTitle,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\ScenarioParserSpec.cs,ShouldFind2Scenarios,The following statement contains a magic number: Assert.That(scenarios.Count()' Is.EqualTo(2));
Magic Number,NBehave.Specifications,FeatureWithScenario,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\ScenarioParserSpec.cs,ShouldFind2Scenarios,The following statement contains a magic number: Assert.That(scenarios.Count()' Is.EqualTo(2));
Magic Number,NBehave.Specifications,FeatureNarrativeIsAllTextUptoNextStepKeyWord,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\ScenarioParserSpec.cs,ShouldFind2Scenarios,The following statement contains a magic number: Assert.That(scenarios.Count()' Is.EqualTo(2));
Magic Number,NBehave.Specifications,ScenarioWithExampleTable,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\ScenarioParserSpec.cs,ScenarioShouldHaveTwoExamples,The following statement contains a magic number: Assert.That(scenarios.First().Examples.Count()' Is.EqualTo(2));
Magic Number,NBehave.Specifications,ScenarioWithExampleTable,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\ScenarioParserSpec.cs,ShouldFind3Steps,The following statement contains a magic number: Assert.That(scenarios.First().Steps.Count()' Is.EqualTo(3));
Magic Number,NBehave.Specifications,ScenarioWithTableOnGiven,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\ScenarioParserSpec.cs,GivenStepShouldHaveThreeTableSteps,The following statement contains a magic number: Assert.That(givenStep.TableSteps.Count()' Is.EqualTo(3));
Magic Number,NBehave.Specifications,ScenarioWithTableOnGiven,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\ScenarioParserSpec.cs,ThenStepShouldHaveTwoTableSteps,The following statement contains a magic number: Assert.That(thenStep.TableSteps.Count()' Is.EqualTo(2));
Magic Number,NBehave.Specifications.Domain,FeatureSpec,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\Domain\FeatureSpec.cs,Should_convert_background_to_string,The following statement contains a magic number: var background = new Scenario("backgroundTitle"' "source"' feature' 4);
Magic Number,NBehave.Specifications.Domain,ScenarioSpec,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\Domain\ScenarioSpec.cs,Should_convert_scenario_to_string,The following statement contains a magic number: var scenario = new Scenario("scenarioTitle"' "source"' feature' 3);
Magic Number,NBehave.Specifications.Domain,ScenarioSpec,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\Domain\ScenarioSpec.cs,Should_include_examples_when_converting_to_string,The following statement contains a magic number: var scenario = new Scenario("scenarioTitle"' "source"' feature' 3);
Magic Number,NBehave.Specifications.EventListeners,WhenRunningWithCodegen,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\EventListeners\CodeGenEventListenerSpec.cs,Should_put_each_pending_step_in_dictionary,The following statement contains a magic number: Assert.Greater(_listener.PendingSteps.Count()' 2);
Magic Number,NBehave.Specifications.EventListeners,WhenRunningWithXmlListener,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\EventListeners\XmlOutputEventListenerSpec.cs,ShouldHaveScenariosInResultsNode,The following statement contains a magic number: Assert.That(int.Parse(outcome)' Is.EqualTo(6));
Magic Number,NBehave.Specifications.EventListeners,WhenRunningWithXmlListener,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\EventListeners\XmlOutputEventListenerSpec.cs,FeatureNodeShouldHaveOneScenarioNodePerScenarioInStory,The following statement contains a magic number: Assert.AreEqual(3' node.Count);
Magic Number,NBehave.Specifications.EventListeners,WhenRunningWithXmlListener,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\EventListeners\XmlOutputEventListenerSpec.cs,ScenarioNodeShouldHaveStepSubnodes,The following statement contains a magic number: Assert.AreEqual(3' nodes.Count);
Magic Number,NBehave.Specifications.EventListeners,WhenCreatingXmlForScenarioWithExamples,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\EventListeners\XmlOutputEventListenerSpec.cs,ScenarioNodeShouldHaveActionStepSubnodes,The following statement contains a magic number: Assert.AreEqual(3' nodes.Count);
Magic Number,NBehave.Specifications.EventListeners,WhenCreatingXmlForScenarioWithExamples,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\EventListeners\XmlOutputEventListenerSpec.cs,ScenarioNodeShouldHaveActionStepSubnodes,The following statement contains a magic number: i < 3
Magic Number,NBehave.Specifications.EventListeners,WhenCreatingXmlForScenarioWithExamples,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\EventListeners\XmlOutputEventListenerSpec.cs,ScenarioNodeShouldHaveExampleNodes,The following statement contains a magic number: Assert.AreEqual(2' nodes.Count);
Magic Number,NBehave.Specifications.Internal,When_running_steps,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\Internal\FeatureRunnerSpec.cs,ShouldHaveResultForEachStep,The following statement contains a magic number: Assert.AreEqual(2' featureResult.ScenarioResults[0].StepResults.Count());
Magic Number,NBehave.Specifications.Internal,When_running_many_scenarios_with_Hooks,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\Internal\FeatureRunnerSpec.cs,ShouldCallBeforeScenarioOncePerScenario,The following statement contains a magic number: Assert.That(timesBeforeScenarioWasCalled' Is.EqualTo(2));
Magic Number,NBehave.Specifications.Internal,When_running_many_scenarios_with_Hooks,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\Internal\FeatureRunnerSpec.cs,ShouldCallAfterScenarioOncePerScenario,The following statement contains a magic number: Assert.That(timesAfterScenarioWasCalled' Is.EqualTo(2));
Magic Number,NBehave.Specifications.Internal,When_running_many_scenarios_with_Hooks,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\Internal\FeatureRunnerSpec.cs,ShouldCallBeforeStepOncePerStep,The following statement contains a magic number: Assert.That(timesBeforeStepWasCalled' Is.EqualTo(3));
Magic Number,NBehave.Specifications.Internal,When_running_many_scenarios_with_Hooks,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\Internal\FeatureRunnerSpec.cs,ShouldCallAfterStepOncePerStep,The following statement contains a magic number: Assert.That(timesAfterStepWasCalled' Is.EqualTo(3));
Magic Number,NBehave.Specifications.System.Specs.Backgrounds,ScenarioStepsForBackground,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\System.Specs\Backgrounds\WhenRunningAScenarioWithABackgroundSection.cs,ThirdGiven,The following statement contains a magic number: Assert.That(callCount' Is.EqualTo(2));
Magic Number,NBehave.Specifications.System.Specs.Backgrounds,ScenarioStepsForBackground,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\System.Specs\Backgrounds\WhenRunningAScenarioWithABackgroundSection.cs,When,The following statement contains a magic number: Assert.That(callCount' Is.EqualTo(3));
Magic Number,NBehave.Specifications.System.Specs.Backgrounds,ScenarioStepsForBackground,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\System.Specs\Backgrounds\WhenRunningAScenarioWithABackgroundSection.cs,AnotherThen,The following statement contains a magic number: Assert.That(callCount' Is.EqualTo(4));
Magic Number,NBehave.Specifications.System.Specs.Scenarios,ScenarioStepsWithFailingStep,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\System.Specs\Scenarios\WhenRunningAScenarioWithAFailingStep.cs,Then,The following statement contains a magic number: 1.ShouldEqual(2);
Magic Number,NBehave.Specifications.TextParsing,GroupEventsByTagSpec,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\TextParsing\GroupEventsByTagSpec.cs,events_with_tag_on_feature_set_tag_on_all_sub_events,The following statement contains a magic number: Assert.AreEqual(4' groupedEvents.Count);
Magic Number,NBehave.Specifications.TextParsing,GroupEventsByTagSpec,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\TextParsing\GroupEventsByTagSpec.cs,events_with_tag_on_feature_set_tag_on_all_sub_events,The following statement contains a magic number: groupedEvents.Take(3)
Magic Number,NBehave.Specifications.TextParsing,StepBuilderSpec,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\TextParsing\StepBuilderSpec.cs,Should_add_steps_to_Scenario,The following statement contains a magic number: Assert.That(scenario.Steps.Count()' Is.EqualTo(2));
Magic Number,NBehave.Specifications.TextParsing,StepBuilderSpec,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\TextParsing\StepBuilderSpec.cs,Should_add_table_steps_to_scenario,The following statement contains a magic number: gherkinEvents.Raise(_ => _.TableEvent += null' this'                                  new EventArgs<IList<IList<Token>>>(new List<IList<Token>>                                                                         {                                                                             new List<Token>                                                                                 {                                                                                     new Token("A"' new LineInFile(1))'                                                                                     new Token("B"' new LineInFile(1))                                                                                 }'                                                                             new List<Token>                                                                                 {                                                                                     new Token("1"' new LineInFile(2))'                                                                                     new Token("2"' new LineInFile(2))                                                                                 }'                                                                           }));
Magic Number,NBehave.Specifications.TextParsing,StepBuilderSpec,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\TextParsing\StepBuilderSpec.cs,Should_add_table_steps_to_scenario,The following statement contains a magic number: gherkinEvents.Raise(_ => _.TableEvent += null' this'                                  new EventArgs<IList<IList<Token>>>(new List<IList<Token>>                                                                         {                                                                             new List<Token>                                                                                 {                                                                                     new Token("A"' new LineInFile(1))'                                                                                     new Token("B"' new LineInFile(1))                                                                                 }'                                                                             new List<Token>                                                                                 {                                                                                     new Token("1"' new LineInFile(2))'                                                                                     new Token("2"' new LineInFile(2))                                                                                 }'                                                                           }));
Magic Number,NBehave.Specifications.TextParsing,StepBuilderSpec,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\TextParsing\StepBuilderSpec.cs,Should_add_table_steps_to_scenario,The following statement contains a magic number: Assert.That(scenario.Steps.Count()' Is.EqualTo(2));
Magic Number,NBehave.Specifications.TextParsing,StepBuilderSpec,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\TextParsing\StepBuilderSpec.cs,Should_add_docstring_to_previous_step,The following statement contains a magic number: Assert.That(scenario.Steps.Count()' Is.EqualTo(2));
Magic Number,NBehave.Specifications.TextParsing,TagFilterBuilderSpec,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\TextParsing\TagFilterBuilderSpec.cs,tags_in_each_item_in_list_is_ORed_together,The following statement contains a magic number: Assert.AreEqual(4' filteredEvents.Count);
Magic Number,NBehave.Specifications.TextParsing,TagFilterSpec,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\TextParsing\TagFilterSpec.cs,Should_filter_events_by_tag_with_or,The following statement contains a magic number: Assert.AreEqual(4' filteredEvents.Count);
Magic Number,NBehave.Specifications.TextParsing,TagFilterSpec,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\TextParsing\TagFilterSpec.cs,Should_filter_events_by_exclude_tag_with_or,The following statement contains a magic number: Assert.AreEqual(4' filteredEvents.Count);
Magic Number,NBehave.Specifications.TextParsing,TagFilterSpec,C:\research\architectureSmells\repos\nbehave_NBehave\src\NBehave.Specifications\TextParsing\TagFilterSpec.cs,Should_be_able_to_AND_two_filters,The following statement contains a magic number: Assert.AreEqual(4' filteredEvents.Count);
