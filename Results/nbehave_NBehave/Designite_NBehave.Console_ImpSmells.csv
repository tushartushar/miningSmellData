Implementation smell,Namespace,Class,File,Method,Description
Complex Method,NBehave.Console,NBehaveConsoleRunner,C:\repos\nbehave_NBehave\src\NBehave.Console\NBehaveConsoleRunner.cs,Main,Cyclomatic complexity of the method is 8
Long Statement,NBehave.Console,CommandLineParser<T>,C:\repos\nbehave_NBehave\src\NBehave.Console\CommandLineParser.cs,FindProperty,The length of the statement  "            p = ps.Where(_ => _.Attribute != null && _.Attribute.Short != null && _.Attribute.Short.Equals(argName' StringComparison.InvariantCultureIgnoreCase)) " is 149.
Complex Conditional,NBehave.Console,CommandLineParser<T>,C:\repos\nbehave_NBehave\src\NBehave.Console\CommandLineParser.cs,AddParameter,The conditional expression  "argValue == null && separator == "--" && property.PropertyType != typeof(bool) && args.Any()"  is complex.
Magic Number,NBehave.Console,CommandLineOptions,C:\repos\nbehave_NBehave\src\NBehave.Console\CommandLineParser.cs,ShowHelp,The following statement contains a magic number: int padNameToLength = longestName.Prop.Name.Length + 7;
Magic Number,NBehave.Console,NBehaveConsoleRunner,C:\repos\nbehave_NBehave\src\NBehave.Console\NBehaveConsoleRunner.cs,WaitForDebuggerToAttach,The following statement contains a magic number: var countdown = 15000;
Magic Number,NBehave.Console,NBehaveConsoleRunner,C:\repos\nbehave_NBehave\src\NBehave.Console\NBehaveConsoleRunner.cs,WaitForDebuggerToAttach,The following statement contains a magic number: const int waitTime = 200;
Magic Number,NBehave.Console,NBehaveConsoleRunner,C:\repos\nbehave_NBehave\src\NBehave.Console\NBehaveConsoleRunner.cs,PrintTimeTaken,The following statement contains a magic number: if (timeTaken >= 60)              {                  int totalMinutes = Convert.ToInt32(Math.Floor(timeTaken / 60));                  int seconds = Convert.ToInt32(timeTaken - totalMinutes * 60.0);                  System.Console.WriteLine("Time Taken {0}m {1:0.#}s"' totalMinutes' seconds);              }              else                  System.Console.WriteLine("Time Taken {0:0.#}s"' timeTaken);
Magic Number,NBehave.Console,NBehaveConsoleRunner,C:\repos\nbehave_NBehave\src\NBehave.Console\NBehaveConsoleRunner.cs,PrintTimeTaken,The following statement contains a magic number: if (timeTaken >= 60)              {                  int totalMinutes = Convert.ToInt32(Math.Floor(timeTaken / 60));                  int seconds = Convert.ToInt32(timeTaken - totalMinutes * 60.0);                  System.Console.WriteLine("Time Taken {0}m {1:0.#}s"' totalMinutes' seconds);              }              else                  System.Console.WriteLine("Time Taken {0:0.#}s"' timeTaken);
Magic Number,NBehave.Console,NBehaveConsoleRunner,C:\repos\nbehave_NBehave\src\NBehave.Console\NBehaveConsoleRunner.cs,PrintTimeTaken,The following statement contains a magic number: if (timeTaken >= 60)              {                  int totalMinutes = Convert.ToInt32(Math.Floor(timeTaken / 60));                  int seconds = Convert.ToInt32(timeTaken - totalMinutes * 60.0);                  System.Console.WriteLine("Time Taken {0}m {1:0.#}s"' totalMinutes' seconds);              }              else                  System.Console.WriteLine("Time Taken {0:0.#}s"' timeTaken);
