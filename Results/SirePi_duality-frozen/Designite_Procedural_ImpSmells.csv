Implementation smell,Namespace,Class,File,Method,Description
Long Method,SnowyPeak.Duality.Plugin.Frozen.Procedural.Noise,SimplexNoise,C:\repos\SirePi_duality-frozen\Procedural\Noise\SimplexNoise.cs,Noise,The method has 143 lines of code.
Long Method,SnowyPeak.Duality.Plugin.Frozen.Procedural.Noise,SimplexNoise,C:\repos\SirePi_duality-frozen\Procedural\Noise\SimplexNoise.cs,Noise,The method has 135 lines of code.
Long Method,SnowyPeak.Duality.Plugin.Frozen.Procedural.Triangulation,Edge,C:\repos\SirePi_duality-frozen\Procedural\Triangulation\Edge.cs,ClipVertices,The method has 100 lines of code.
Long Method,SnowyPeak.Duality.Plugin.Frozen.Procedural.Triangulation,Site,C:\repos\SirePi_duality-frozen\Procedural\Triangulation\Site.cs,Connect,The method has 120 lines of code.
Long Method,SnowyPeak.Duality.Plugin.Frozen.Procedural.Triangulation,Voronoi,C:\repos\SirePi_duality-frozen\Procedural\Triangulation\Voronoi.cs,FortunesAlgorithm,The method has 133 lines of code.
Complex Method,SnowyPeak.Duality.Plugin.Frozen.Procedural.Noise,CellNoise,C:\repos\SirePi_duality-frozen\Procedural\Noise\CellNoise.cs,_Generate,Cyclomatic complexity of the method is 9
Complex Method,SnowyPeak.Duality.Plugin.Frozen.Procedural.Noise,CellNoise,C:\repos\SirePi_duality-frozen\Procedural\Noise\CellNoise.cs,FindNearestInSurrounding,Cyclomatic complexity of the method is 9
Complex Method,SnowyPeak.Duality.Plugin.Frozen.Procedural.Noise,CellNoise,C:\repos\SirePi_duality-frozen\Procedural\Noise\CellNoise.cs,GetBucket,Cyclomatic complexity of the method is 9
Complex Method,SnowyPeak.Duality.Plugin.Frozen.Procedural.Noise,SimplexNoise,C:\repos\SirePi_duality-frozen\Procedural\Noise\SimplexNoise.cs,Noise,Cyclomatic complexity of the method is 10
Complex Method,SnowyPeak.Duality.Plugin.Frozen.Procedural.Noise,SimplexNoise,C:\repos\SirePi_duality-frozen\Procedural\Noise\SimplexNoise.cs,_Generate,Cyclomatic complexity of the method is 8
Complex Method,SnowyPeak.Duality.Plugin.Frozen.Procedural.Triangulation,DelaunayHelpers,C:\repos\SirePi_duality-frozen\Procedural\Triangulation\DelaunayHelpers.cs,Kruskal,Cyclomatic complexity of the method is 12
Complex Method,SnowyPeak.Duality.Plugin.Frozen.Procedural.Triangulation,Edge,C:\repos\SirePi_duality-frozen\Procedural\Triangulation\Edge.cs,ClipVertices,Cyclomatic complexity of the method is 22
Complex Method,SnowyPeak.Duality.Plugin.Frozen.Procedural.Triangulation,EdgeList,C:\repos\SirePi_duality-frozen\Procedural\Triangulation\EdgeList.cs,EdgeListLeftNeighbor,Cyclomatic complexity of the method is 11
Complex Method,SnowyPeak.Duality.Plugin.Frozen.Procedural.Triangulation,EdgeReorderer,C:\repos\SirePi_duality-frozen\Procedural\Triangulation\EdgeReorderer.cs,ReorderEdges,Cyclomatic complexity of the method is 12
Complex Method,SnowyPeak.Duality.Plugin.Frozen.Procedural.Triangulation,Halfedge,C:\repos\SirePi_duality-frozen\Procedural\Triangulation\Halfedge.cs,IsLeftOf,Cyclomatic complexity of the method is 9
Complex Method,SnowyPeak.Duality.Plugin.Frozen.Procedural.Triangulation,Site,C:\repos\SirePi_duality-frozen\Procedural\Triangulation\Site.cs,Connect,Cyclomatic complexity of the method is 27
Complex Method,SnowyPeak.Duality.Plugin.Frozen.Procedural.Triangulation,Voronoi,C:\repos\SirePi_duality-frozen\Procedural\Triangulation\Voronoi.cs,FortunesAlgorithm,Cyclomatic complexity of the method is 13
Long Parameter List,SnowyPeak.Duality.Plugin.Frozen.Procedural.Noise,CellNoise,C:\repos\SirePi_duality-frozen\Procedural\Noise\CellNoise.cs,_Generate,The method has 5 parameters.
Long Parameter List,SnowyPeak.Duality.Plugin.Frozen.Procedural.Noise,SimplexNoise,C:\repos\SirePi_duality-frozen\Procedural\Noise\SimplexNoise.cs,SimplexNoise,The method has 5 parameters.
Long Parameter List,SnowyPeak.Duality.Plugin.Frozen.Procedural.Noise,SimplexNoise,C:\repos\SirePi_duality-frozen\Procedural\Noise\SimplexNoise.cs,SeamlessNoise,The method has 5 parameters.
Long Parameter List,SnowyPeak.Duality.Plugin.Frozen.Procedural.Noise,SimplexNoise,C:\repos\SirePi_duality-frozen\Procedural\Noise\SimplexNoise.cs,dot,The method has 5 parameters.
Long Parameter List,SnowyPeak.Duality.Plugin.Frozen.Procedural.Triangulation,DelaunayHelpers,C:\repos\SirePi_duality-frozen\Procedural\Triangulation\DelaunayHelpers.cs,Kruskal,The method has 6 parameters.
Long Statement,SnowyPeak.Duality.Plugin.Frozen.Procedural,Link,C:\repos\SirePi_duality-frozen\Procedural\Link.cs,Equals,The length of the statement  "		result &= ((this.From == other.From && this.To == other.To) || (this.From == other.To && this.To == other.From && !this.IsDirected)); " is 133.
Long Statement,SnowyPeak.Duality.Plugin.Frozen.Procedural.Noise,CellNoise,C:\repos\SirePi_duality-frozen\Procedural\Noise\CellNoise.cs,SitesToBitmap,The length of the statement  "            BitmapData bitmapData = bmp.LockBits(new Rectangle(0' 0' bmp.Width' bmp.Height)' ImageLockMode.ReadWrite' bmp.PixelFormat);" is 123.
Long Statement,SnowyPeak.Duality.Plugin.Frozen.Procedural.Noise,Noise,C:\repos\SirePi_duality-frozen\Procedural\Noise\Noise.cs,ToPixelData,The length of the statement  "	//BitmapData bitmapData = bmp.LockBits(new Rectangle(0' 0' bmp.Width' bmp.Height)' ImageLockMode.ReadWrite' bmp.PixelFormat); " is 125.
Long Statement,SnowyPeak.Duality.Plugin.Frozen.Procedural.Noise,SimplexNoise,C:\repos\SirePi_duality-frozen\Procedural\Noise\SimplexNoise.cs,Noise,The length of the statement  "	int gi1 = _permutationTable [ii + i1 + _permutationTable [jj + j1 + _permutationTable [kk + k1 + _permutationTable [ll + l1]]]] % 32; " is 133.
Long Statement,SnowyPeak.Duality.Plugin.Frozen.Procedural.Noise,SimplexNoise,C:\repos\SirePi_duality-frozen\Procedural\Noise\SimplexNoise.cs,Noise,The length of the statement  "	int gi2 = _permutationTable [ii + i2 + _permutationTable [jj + j2 + _permutationTable [kk + k2 + _permutationTable [ll + l2]]]] % 32; " is 133.
Long Statement,SnowyPeak.Duality.Plugin.Frozen.Procedural.Noise,SimplexNoise,C:\repos\SirePi_duality-frozen\Procedural\Noise\SimplexNoise.cs,Noise,The length of the statement  "	int gi3 = _permutationTable [ii + i3 + _permutationTable [jj + j3 + _permutationTable [kk + k3 + _permutationTable [ll + l3]]]] % 32; " is 133.
Long Statement,SnowyPeak.Duality.Plugin.Frozen.Procedural.Noise,SimplexNoise,C:\repos\SirePi_duality-frozen\Procedural\Noise\SimplexNoise.cs,Noise,The length of the statement  "	int gi4 = _permutationTable [ii + 1 + _permutationTable [jj + 1 + _permutationTable [kk + 1 + _permutationTable [ll + 1]]]] % 32; " is 129.
Long Statement,SnowyPeak.Duality.Plugin.Frozen.Procedural.Noise,SimplexNoise,C:\repos\SirePi_duality-frozen\Procedural\Noise\SimplexNoise.cs,_Generate,The length of the statement  "				NoiseMap [x] [y] += (((SeamlessNoise ((float)x / inWidth' (float)y / inHeight' frequency' frequency' seed) + 1) * .5f) * amplitude); " is 132.
Long Statement,SnowyPeak.Duality.Plugin.Frozen.Procedural.Triangulation,DelaunayHelpers,C:\repos\SirePi_duality-frozen\Procedural\Triangulation\DelaunayHelpers.cs,SelectEdgesForSitePoint,The length of the statement  "		return ((edge.LeftSite != null && edge.LeftSite.Position == coord) || (edge.RightSite != null && edge.RightSite.Position == coord)); " is 132.
Long Statement,SnowyPeak.Duality.Plugin.Frozen.Procedural.Triangulation,Edge,C:\repos\SirePi_duality-frozen\Procedural\Triangulation\Edge.cs,ToString,The length of the statement  "	return "Edge " + _edgeIndex.ToString () + "; sites " + _sites [Side.Left].ToString () + "' " + _sites [Side.Right].ToString () + "; endVertices " + ((_leftVertex != null) ? _leftVertex.VertexIndex.ToString () : "null") + "' " + ((_rightVertex != null) ? _rightVertex.VertexIndex.ToString () : "null") + "::"; " is 308.
Long Statement,SnowyPeak.Duality.Plugin.Frozen.Procedural.Triangulation,EdgeList,C:\repos\SirePi_duality-frozen\Procedural\Triangulation\EdgeList.cs,EdgeListLeftNeighbor,The length of the statement  "	/* Now search linear list of halfedges for the correct one */if (halfEdge == leftEnd || (halfEdge != rightEnd && halfEdge.IsLeftOf (p))) { " is 138.
Long Statement,SnowyPeak.Duality.Plugin.Frozen.Procedural.Triangulation,HalfedgePriorityQueue,C:\repos\SirePi_duality-frozen\Procedural\Triangulation\HalfedgePriorityQueue.cs,Insert,The length of the statement  "	while ((next = previous.NextInPriorityQueue) != null && (halfEdge.YStar > next.YStar || (halfEdge.YStar == next.YStar && halfEdge.Vertex.Position.X > next.Vertex.Position.X))) { " is 177.
Complex Conditional,SnowyPeak.Duality.Plugin.Frozen.Procedural.Noise,CellNoise,C:\repos\SirePi_duality-frozen\Procedural\Noise\CellNoise.cs,GetBucket,The conditional expression  "!(x < 0 || x >= BUCKETS || y < 0 || y >= BUCKETS) && _buckets [x] [y].Count > 0"  is complex.
Complex Conditional,SnowyPeak.Duality.Plugin.Frozen.Procedural.Triangulation,Edge,C:\repos\SirePi_duality-frozen\Procedural\Triangulation\Edge.cs,ClipVertices,The conditional expression  "(x0 > xmax && x1 > xmax) || (x0 < xmin && x1 < xmin)"  is complex.
Complex Conditional,SnowyPeak.Duality.Plugin.Frozen.Procedural.Triangulation,Edge,C:\repos\SirePi_duality-frozen\Procedural\Triangulation\Edge.cs,ClipVertices,The conditional expression  "(y0 > ymax && y1 > ymax) || (y0 < ymin && y1 < ymin)"  is complex.
Complex Conditional,SnowyPeak.Duality.Plugin.Frozen.Procedural.Triangulation,Halfedge,C:\repos\SirePi_duality-frozen\Procedural\Triangulation\Halfedge.cs,IsLeftOf,The conditional expression  "(!rightOfSite && Edge.B < 0.0) || (rightOfSite && Edge.B >= 0.0)"  is complex.
Complex Conditional,SnowyPeak.Duality.Plugin.Frozen.Procedural.Triangulation,Vertex,C:\repos\SirePi_duality-frozen\Procedural\Triangulation\Vertex.cs,Intersect,The conditional expression  "(rightOfSite && halfedge.LeftRight == Side.Left) || (!rightOfSite && halfedge.LeftRight == Side.Right)"  is complex.
Magic Number,SnowyPeak.Duality.Plugin.Frozen.Procedural,WhiteNoise,C:\repos\SirePi_duality-frozen\Procedural\NoiseColor.cs,WhiteNoise,The following statement contains a magic number: _varianceCoefficient = MathF.Sqrt (12 / _n);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.Procedural,WhiteNoise,C:\repos\SirePi_duality-frozen\Procedural\NoiseColor.cs,GetValue,The following statement contains a magic number: value -= (_n / 2);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.Procedural.Noise,SimplexNoise,C:\repos\SirePi_duality-frozen\Procedural\Noise\SimplexNoise.cs,Noise,The following statement contains a magic number: i1 = simplex [c] [0] >= 3 ? 1 : 0;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.Procedural.Noise,SimplexNoise,C:\repos\SirePi_duality-frozen\Procedural\Noise\SimplexNoise.cs,Noise,The following statement contains a magic number: j1 = simplex [c] [1] >= 3 ? 1 : 0;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.Procedural.Noise,SimplexNoise,C:\repos\SirePi_duality-frozen\Procedural\Noise\SimplexNoise.cs,Noise,The following statement contains a magic number: k1 = simplex [c] [2] >= 3 ? 1 : 0;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.Procedural.Noise,SimplexNoise,C:\repos\SirePi_duality-frozen\Procedural\Noise\SimplexNoise.cs,Noise,The following statement contains a magic number: k1 = simplex [c] [2] >= 3 ? 1 : 0;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.Procedural.Noise,SimplexNoise,C:\repos\SirePi_duality-frozen\Procedural\Noise\SimplexNoise.cs,Noise,The following statement contains a magic number: l1 = simplex [c] [3] >= 3 ? 1 : 0;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.Procedural.Noise,SimplexNoise,C:\repos\SirePi_duality-frozen\Procedural\Noise\SimplexNoise.cs,Noise,The following statement contains a magic number: l1 = simplex [c] [3] >= 3 ? 1 : 0;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.Procedural.Noise,SimplexNoise,C:\repos\SirePi_duality-frozen\Procedural\Noise\SimplexNoise.cs,Noise,The following statement contains a magic number: i2 = simplex [c] [0] >= 2 ? 1 : 0;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.Procedural.Noise,SimplexNoise,C:\repos\SirePi_duality-frozen\Procedural\Noise\SimplexNoise.cs,Noise,The following statement contains a magic number: j2 = simplex [c] [1] >= 2 ? 1 : 0;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.Procedural.Noise,SimplexNoise,C:\repos\SirePi_duality-frozen\Procedural\Noise\SimplexNoise.cs,Noise,The following statement contains a magic number: k2 = simplex [c] [2] >= 2 ? 1 : 0;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.Procedural.Noise,SimplexNoise,C:\repos\SirePi_duality-frozen\Procedural\Noise\SimplexNoise.cs,Noise,The following statement contains a magic number: k2 = simplex [c] [2] >= 2 ? 1 : 0;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.Procedural.Noise,SimplexNoise,C:\repos\SirePi_duality-frozen\Procedural\Noise\SimplexNoise.cs,Noise,The following statement contains a magic number: l2 = simplex [c] [3] >= 2 ? 1 : 0;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.Procedural.Noise,SimplexNoise,C:\repos\SirePi_duality-frozen\Procedural\Noise\SimplexNoise.cs,Noise,The following statement contains a magic number: l2 = simplex [c] [3] >= 2 ? 1 : 0;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.Procedural.Noise,SimplexNoise,C:\repos\SirePi_duality-frozen\Procedural\Noise\SimplexNoise.cs,Noise,The following statement contains a magic number: k3 = simplex [c] [2] >= 1 ? 1 : 0;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.Procedural.Noise,SimplexNoise,C:\repos\SirePi_duality-frozen\Procedural\Noise\SimplexNoise.cs,Noise,The following statement contains a magic number: l3 = simplex [c] [3] >= 1 ? 1 : 0;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.Procedural.Noise,SimplexNoise,C:\repos\SirePi_duality-frozen\Procedural\Noise\SimplexNoise.cs,_Generate,The following statement contains a magic number: for (int i = 0; i < 256; i++) {  	premutationTemp [i] = i;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.Procedural.Noise,SimplexNoise,C:\repos\SirePi_duality-frozen\Procedural\Noise\SimplexNoise.cs,_Generate,The following statement contains a magic number: for (int i = 0; i < 256; i++) {  	int j = _rnd.Next (256);  	int k = premutationTemp [i];  	premutationTemp [i] = premutationTemp [j];  	premutationTemp [j] = k;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.Procedural.Noise,SimplexNoise,C:\repos\SirePi_duality-frozen\Procedural\Noise\SimplexNoise.cs,_Generate,The following statement contains a magic number: for (int i = 0; i < 256; i++) {  	int j = _rnd.Next (256);  	int k = premutationTemp [i];  	premutationTemp [i] = premutationTemp [j];  	premutationTemp [j] = k;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.Procedural.Noise,SimplexNoise,C:\repos\SirePi_duality-frozen\Procedural\Noise\SimplexNoise.cs,_Generate,The following statement contains a magic number: for (int i = 0; i < 512; i++)  	_permutationTable [i] = premutationTemp [i & 255];  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.Procedural.Noise,SimplexNoise,C:\repos\SirePi_duality-frozen\Procedural\Noise\SimplexNoise.cs,_Generate,The following statement contains a magic number: for (int i = 0; i < 512; i++)  	_permutationTable [i] = premutationTemp [i & 255];  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.Procedural.Noise,SimplexNoise,C:\repos\SirePi_duality-frozen\Procedural\Noise\SimplexNoise.cs,_Generate,The following statement contains a magic number: _permutationTable [i] = premutationTemp [i & 255];  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.Procedural.Noise,SimplexNoise,C:\repos\SirePi_duality-frozen\Procedural\Noise\SimplexNoise.cs,_Generate,The following statement contains a magic number: for (int octave = 0; octave < _octaves; octave++) {  	for (int x = 0; x < inWidth; x++) {  		for (int y = 0; y < inHeight; y++) {  			NoiseMap [x] [y] += (((SeamlessNoise ((float)x / inWidth' (float)y / inHeight' frequency' frequency' seed) + 1) * .5f) * amplitude);  		}  	}  	seed = (byte)(seed * 2);  	frequency *= _lacunarity;  	amplitude *= _gain;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.Procedural.Noise,SimplexNoise,C:\repos\SirePi_duality-frozen\Procedural\Noise\SimplexNoise.cs,_Generate,The following statement contains a magic number: seed = (byte)(seed * 2);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.Procedural.Noise,SimplexNoise,C:\repos\SirePi_duality-frozen\Procedural\Noise\SimplexNoise.cs,dot,The following statement contains a magic number: return g [0] * x + g [1] * y + g [2] * z;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.Procedural.Noise,SimplexNoise,C:\repos\SirePi_duality-frozen\Procedural\Noise\SimplexNoise.cs,dot,The following statement contains a magic number: return g [0] * x + g [1] * y + g [2] * z + g [3] * w;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.Procedural.Noise,SimplexNoise,C:\repos\SirePi_duality-frozen\Procedural\Noise\SimplexNoise.cs,dot,The following statement contains a magic number: return g [0] * x + g [1] * y + g [2] * z + g [3] * w;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.Procedural.Triangulation,EdgeList,C:\repos\SirePi_duality-frozen\Procedural\Triangulation\EdgeList.cs,EdgeList,The following statement contains a magic number: _hashsize = 2 * sqrt_nsites;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.Procedural.Triangulation,Halfedge,C:\repos\SirePi_duality-frozen\Procedural\Triangulation\Halfedge.cs,IsLeftOf,The following statement contains a magic number: if (Edge.A == 1.0) {  	dyp = p.Y - topSite.Position.Y;  	dxp = p.X - topSite.Position.X;  	fast = false;  	if ((!rightOfSite && Edge.B < 0.0) || (rightOfSite && Edge.B >= 0.0)) {  		above = dyp >= Edge.B * dxp;  		fast = above;  	}  	else {  		above = p.X + p.Y * Edge.B > Edge.C;  		if (Edge.B < 0.0) {  			above = !above;  		}  		if (!above) {  			fast = true;  		}  	}  	if (!fast) {  		dxs = topSite.Position.X - Edge.LeftSite.Position.X;  		above = Edge.B * (dxp * dxp - dyp * dyp) < dxs * dyp * (1.0 + 2.0 * dxp / dxs + Edge.B * Edge.B);  		if (Edge.B < 0.0) {  			above = !above;  		}  	}  }  else {  	/* edge.b == 1.0 */yl = Edge.C - Edge.A * p.X;  	t1 = p.Y - yl;  	t2 = p.X - topSite.Position.X;  	t3 = yl - topSite.Position.Y;  	above = t1 * t1 > t2 * t2 + t3 * t3;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.Procedural.Triangulation,Halfedge,C:\repos\SirePi_duality-frozen\Procedural\Triangulation\Halfedge.cs,IsLeftOf,The following statement contains a magic number: if (!fast) {  	dxs = topSite.Position.X - Edge.LeftSite.Position.X;  	above = Edge.B * (dxp * dxp - dyp * dyp) < dxs * dyp * (1.0 + 2.0 * dxp / dxs + Edge.B * Edge.B);  	if (Edge.B < 0.0) {  		above = !above;  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.Procedural.Triangulation,Halfedge,C:\repos\SirePi_duality-frozen\Procedural\Triangulation\Halfedge.cs,IsLeftOf,The following statement contains a magic number: above = Edge.B * (dxp * dxp - dyp * dyp) < dxs * dyp * (1.0 + 2.0 * dxp / dxs + Edge.B * Edge.B);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.Procedural.Triangulation,HalfedgePriorityQueue,C:\repos\SirePi_duality-frozen\Procedural\Triangulation\HalfedgePriorityQueue.cs,HalfedgePriorityQueue,The following statement contains a magic number: _hashsize = 4 * sqrt_nsites;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.Procedural.Triangulation,Vertex,C:\repos\SirePi_duality-frozen\Procedural\Triangulation\Vertex.cs,Intersect,The following statement contains a magic number: if (-1.0e-10 < determinant && determinant < 1.0e-10) {  	// the edges are parallel  	return null;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.Procedural.Triangulation,Vertex,C:\repos\SirePi_duality-frozen\Procedural\Triangulation\Vertex.cs,Intersect,The following statement contains a magic number: if (-1.0e-10 < determinant && determinant < 1.0e-10) {  	// the edges are parallel  	return null;  }  
