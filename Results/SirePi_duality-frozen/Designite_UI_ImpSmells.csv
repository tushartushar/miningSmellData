Implementation smell,Namespace,Class,File,Method,Description
Long Method,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The method has 175 lines of code.
Long Method,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Skin,The method has 165 lines of code.
Long Method,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The method has 148 lines of code.
Long Method,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The method has 125 lines of code.
Complex Method,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,Cyclomatic complexity of the method is 16
Complex Method,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Appearance,C:\repos\SirePi_duality-frozen\UI\Resources\Appearance.cs,GetAtlasForStatus,Cyclomatic complexity of the method is 12
Complex Method,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,CheckButton,C:\repos\SirePi_duality-frozen\UI\Widgets\CheckButton.cs,AddGlyph,Cyclomatic complexity of the method is 27
Complex Method,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,ScrollBar,C:\repos\SirePi_duality-frozen\UI\Widgets\ScrollBar.cs,OnUpdate,Cyclomatic complexity of the method is 9
Complex Method,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,TextBox,C:\repos\SirePi_duality-frozen\UI\Widgets\TextBox.cs,ManageKey,Cyclomatic complexity of the method is 19
Complex Method,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Window,C:\repos\SirePi_duality-frozen\UI\Widgets\Window.cs,OnUpdate,Cyclomatic complexity of the method is 10
Complex Method,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,Cyclomatic complexity of the method is 37
Complex Method,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,WidgetController,C:\repos\SirePi_duality-frozen\UI\Widgets\WidgetController.cs,Keyboard_KeyDown,Cyclomatic complexity of the method is 19
Complex Method,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,WidgetController,C:\repos\SirePi_duality-frozen\UI\Widgets\WidgetController.cs,Keyboard_KeyUp,Cyclomatic complexity of the method is 8
Complex Method,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,WidgetController,C:\repos\SirePi_duality-frozen\UI\Widgets\WidgetController.cs,Mouse_Move,Cyclomatic complexity of the method is 11
Long Parameter List,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,PrepareVertices,The method has 5 parameters.
Long Parameter List,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,WidgetController,C:\repos\SirePi_duality-frozen\UI\Widgets\WidgetController.cs,Mouse_Move,The method has 5 parameters.
Long Statement,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,FixVertices,The length of the statement  "	Vector4 deltaColor = (vertices [inVertexComparator].Color.ToVector4 () - vertices [inVertexIndexes [0]].Color.ToVector4 ()) * inK; " is 130.
Long Statement,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,CommandGrid,C:\repos\SirePi_duality-frozen\UI\Widgets\CommandGrid.cs,DrawCanvas,The length of the statement  "					Vector3 topLeft = origin + new Vector3 ((_gridCellSize.X * (itemColumn - firstColumn))' (_gridCellSize.Y * itemRow)' DELTA_Z); " is 126.
Long Statement,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,MultiLineWidget,C:\repos\SirePi_duality-frozen\UI\Widgets\MultiLineWidget.cs,UpdateWidget,The length of the statement  "		_batchInfo = new BatchInfo (DrawTechnique.Mask' Colors.White' new ContentRef<Texture> (new Texture (new ContentRef<Pixmap> (new Pixmap ())) { " is 141.
Long Statement,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,MultiLineWidget,C:\repos\SirePi_duality-frozen\UI\Widgets\MultiLineWidget.cs,UpdateWidget,The length of the statement  "		PixelData textLayer = new PixelData (_fText.MaxWidth' (int)Math.Max (_visibleHeight' _fText.Size.Y)' Colors.Transparent); " is 121.
Long Statement,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,RadioButton,C:\repos\SirePi_duality-frozen\UI\Widgets\RadioButton.cs,OnUpdate,The length of the statement  "			foreach (RadioButton button in this.GameObj.ParentScene.FindComponents<RadioButton> ().Where (rb => rb.RadioGroup == this.RadioGroup && rb != this)) { " is 150.
Long Statement,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,PrepareVertices,The length of the statement  "			 ********************/_skin.Res.PrepareVertices (ref _points' _rect' GameObj.Transform.Scale' GetAppearanceName ()' Status); " is 123.
Long Statement,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,WidgetController,C:\repos\SirePi_duality-frozen\UI\Widgets\WidgetController.cs,Mouse_Move,The length of the statement  "	IEnumerable<Widget> hoveredGUIComponents = activeGUIComponents.Where (gc => gc.ActiveArea != ActiveArea.None && gc.GetAreaOnScreen (_camera).Contains (_currentMousePosition)); " is 175.
Long Statement,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,WidgetController,C:\repos\SirePi_duality-frozen\UI\Widgets\WidgetController.cs,Mouse_Move,The length of the statement  "		foreach (Widget w in hoveredGUIComponents.OrderBy (gc => gc.IsInOverlay ? 0 : 1).ThenBy (gc => gc.GameObj.Transform.Pos.Z + gc.ZOffset)) { " is 138.
Long Statement,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,WidgetController,C:\repos\SirePi_duality-frozen\UI\Widgets\WidgetController.cs,FindFirstGameObject,The length of the statement  "	Widget firstWidget = this.GameObj.ParentScene.FindComponents<Widget> ().FirstOrDefault (w => w.PreviousWidget == null && w.NextWidget != null); " is 143.
Complex Conditional,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Window,C:\repos\SirePi_duality-frozen\UI\Widgets\Window.cs,OnUpdate,The conditional expression  "CanMaximize && _maximizeButton == null && _maximizedSize.X >= Rect.W && _maximizedSize.Y >= Rect.H"  is complex.
Complex Conditional,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Window,C:\repos\SirePi_duality-frozen\UI\Widgets\Window.cs,EnableChildren,The conditional expression  "go != _closeButton && go != _minimizeButton && go != _maximizeButton && go != _restoreButton"  is complex.
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (0' 0' 64' 64));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (0' 0' 64' 64));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (64' 0' 64' 64));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (64' 0' 64' 64));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (64' 0' 64' 64));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (128' 0' 64' 64));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (128' 0' 64' 64));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (128' 0' 64' 64));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (192' 0' 64' 64));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (192' 0' 64' 64));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (192' 0' 64' 64));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (0' 64' 64' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (0' 64' 64' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (0' 64' 64' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (64' 64' 64' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (64' 64' 64' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (64' 64' 64' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (64' 64' 64' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (128' 64' 64' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (128' 64' 64' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (128' 64' 64' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (128' 64' 64' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (192' 64' 64' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (192' 64' 64' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (192' 64' 64' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (192' 64' 64' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (0' 96' 64' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (0' 96' 64' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (0' 96' 64' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (64' 96' 64' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (64' 96' 64' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (64' 96' 64' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (64' 96' 64' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (128' 96' 64' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (128' 96' 64' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (128' 96' 64' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (128' 96' 64' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (192' 96' 64' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (192' 96' 64' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (192' 96' 64' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (192' 96' 64' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (0' 128' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (0' 128' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (0' 128' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (32' 128' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (32' 128' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (32' 128' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (32' 128' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (64' 128' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (64' 128' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (64' 128' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (64' 128' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (96' 128' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (96' 128' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (96' 128' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (96' 128' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (128' 128' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (128' 128' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (128' 128' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (128' 128' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (160' 128' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (160' 128' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (160' 128' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (160' 128' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (192' 128' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (192' 128' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (192' 128' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (192' 128' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (224' 128' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (224' 128' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (224' 128' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (224' 128' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (0' 160' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (0' 160' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (0' 160' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (32' 160' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (32' 160' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (32' 160' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (32' 160' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (64' 160' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (64' 160' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (64' 160' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (64' 160' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (96' 160' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (96' 160' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (96' 160' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (96' 160' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (128' 160' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (128' 160' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (128' 160' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (128' 160' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (160' 160' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (160' 160' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (160' 160' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (160' 160' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (192' 160' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (192' 160' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (192' 160' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (192' 160' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (224' 160' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (224' 160' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (224' 160' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (224' 160' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (0' 192' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (0' 192' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (0' 192' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (32' 192' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (32' 192' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (32' 192' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (32' 192' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (64' 192' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (64' 192' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (64' 192' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (64' 192' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (96' 192' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (96' 192' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (96' 192' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (96' 192' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (128' 192' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (128' 192' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (128' 192' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (128' 192' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (160' 192' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (160' 192' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (160' 192' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (160' 192' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (192' 192' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (192' 192' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (192' 192' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (192' 192' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (224' 192' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (224' 192' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (224' 192' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (224' 192' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (0' 224' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (0' 224' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (0' 224' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (32' 224' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (32' 224' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (32' 224' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (32' 224' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (64' 224' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (64' 224' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (64' 224' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (64' 224' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (96' 224' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (96' 224' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (96' 224' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (96' 224' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (128' 224' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (128' 224' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (128' 224' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (128' 224' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (160' 224' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (160' 224' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (160' 224' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (160' 224' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (192' 224' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (192' 224' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (192' 224' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (192' 224' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (224' 224' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (224' 224' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (224' 224' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,InitPlugin,The following statement contains a magic number: frozenUIPixmap.Atlas.Add (new Rect (224' 224' 32' 32));  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (e.RequestedContent == DEFAULT_SKIN) {  	if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  		ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  		Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  		Skin frozenUISkin = new Skin () {  			Material = frozenUIMaterial'  			WidgetAppearances = new Dictionary<string' Appearance> ()  		};  		frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 18'  			Hover = 18'  			Active = 18'  			Disabled = 18  		});  		frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 16'  			Hover = 16'  			Active = 16'  			Disabled = 16  		});  		frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  			Border = new Vector4 (3' 3' 3' 29)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 8'  			Hover = 9'  			Active = 10'  			Disabled = 11  		});  		frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 19'  			Hover = 19'  			Active = 19'  			Disabled = 19  		});  		frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  			Border = Vector4.Zero'  			Normal = 17'  			Hover = 17'  			Active = 17'  			Disabled = 17  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 36'  			Hover = 37'  			Active = 38'  			Disabled = 39  		});  		frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 40'  			Hover = 41'  			Active = 42'  			Disabled = 43  		});  		frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  			Border = new Vector4 (3' 3' 31' 3)'  			Normal = 4'  			Hover = 5'  			Active = 6'  			Disabled = 7  		});  		frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 12'  			Hover = 13'  			Active = 14'  			Disabled = 15  		});  		frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  			Border = new Vector4 (3' 33' 3' 3)'  			Normal = 0'  			Hover = 1'  			Active = 2'  			Disabled = 3  		});  		frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 20'  			Hover = 21'  			Active = 22'  			Disabled = 23  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 24'  			Hover = 25'  			Active = 26'  			Disabled = 27  		});  		frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 28'  			Hover = 29'  			Active = 30'  			Disabled = 31  		});  		frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  			Border = new Vector4 (3)'  			Normal = 32'  			Hover = 33'  			Active = 34'  			Disabled = 35  		});  		ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  	}  	e.Resolve (ContentProvider.RequestContent<Skin> (DEFAULT_SKIN).Res);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: if (ContentProvider.GetAvailableContent<Skin> ().IndexOfFirst (s => s.Name == DEFAULT_SKIN) == -1) {  	ContentRef<Pixmap> frozenUIPixmap = ContentProvider.RequestContent<Pixmap> (FROZEN_UI_PIXMAP);  	Material frozenUIMaterial = new Material (DrawTechnique.Alpha' ColorRgba.White' new Texture (frozenUIPixmap));  	Skin frozenUISkin = new Skin () {  		Material = frozenUIMaterial'  		WidgetAppearances = new Dictionary<string' Appearance> ()  	};  	frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 18'  		Hover = 18'  		Active = 18'  		Disabled = 18  	});  	frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 16'  		Hover = 16'  		Active = 16'  		Disabled = 16  	});  	frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  		Border = new Vector4 (3' 3' 3' 29)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 8'  		Hover = 9'  		Active = 10'  		Disabled = 11  	});  	frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 19'  		Hover = 19'  		Active = 19'  		Disabled = 19  	});  	frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  		Border = Vector4.Zero'  		Normal = 17'  		Hover = 17'  		Active = 17'  		Disabled = 17  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 36'  		Hover = 37'  		Active = 38'  		Disabled = 39  	});  	frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 40'  		Hover = 41'  		Active = 42'  		Disabled = 43  	});  	frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  		Border = new Vector4 (3' 3' 31' 3)'  		Normal = 4'  		Hover = 5'  		Active = 6'  		Disabled = 7  	});  	frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 12'  		Hover = 13'  		Active = 14'  		Disabled = 15  	});  	frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  		Border = new Vector4 (3' 33' 3' 3)'  		Normal = 0'  		Hover = 1'  		Active = 2'  		Disabled = 3  	});  	frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 20'  		Hover = 21'  		Active = 22'  		Disabled = 23  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 24'  		Hover = 25'  		Active = 26'  		Disabled = 27  	});  	frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 28'  		Hover = 29'  		Active = 30'  		Disabled = 31  	});  	frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  		Border = new Vector4 (3)'  		Normal = 32'  		Hover = 33'  		Active = 34'  		Disabled = 35  	});  	ContentProvider.AddContent (DEFAULT_SKIN' frozenUISkin);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 18'  	Hover = 18'  	Active = 18'  	Disabled = 18  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 18'  	Hover = 18'  	Active = 18'  	Disabled = 18  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 18'  	Hover = 18'  	Active = 18'  	Disabled = 18  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 18'  	Hover = 18'  	Active = 18'  	Disabled = 18  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("Bar"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 18'  	Hover = 18'  	Active = 18'  	Disabled = 18  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 12'  	Hover = 13'  	Active = 14'  	Disabled = 15  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 12'  	Hover = 13'  	Active = 14'  	Disabled = 15  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 12'  	Hover = 13'  	Active = 14'  	Disabled = 15  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 12'  	Hover = 13'  	Active = 14'  	Disabled = 15  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("Button"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 12'  	Hover = 13'  	Active = 14'  	Disabled = 15  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 12'  	Hover = 13'  	Active = 14'  	Disabled = 15  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 12'  	Hover = 13'  	Active = 14'  	Disabled = 15  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 12'  	Hover = 13'  	Active = 14'  	Disabled = 15  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 12'  	Hover = 13'  	Active = 14'  	Disabled = 15  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("CheckButton"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 12'  	Hover = 13'  	Active = 14'  	Disabled = 15  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  	Border = Vector4.Zero'  	Normal = 16'  	Hover = 16'  	Active = 16'  	Disabled = 16  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  	Border = Vector4.Zero'  	Normal = 16'  	Hover = 16'  	Active = 16'  	Disabled = 16  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  	Border = Vector4.Zero'  	Normal = 16'  	Hover = 16'  	Active = 16'  	Disabled = 16  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("CheckButtonGlyph"' new Appearance () {  	Border = Vector4.Zero'  	Normal = 16'  	Hover = 16'  	Active = 16'  	Disabled = 16  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  	Border = new Vector4 (3' 3' 3' 29)'  	Normal = 12'  	Hover = 13'  	Active = 14'  	Disabled = 15  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  	Border = new Vector4 (3' 3' 3' 29)'  	Normal = 12'  	Hover = 13'  	Active = 14'  	Disabled = 15  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  	Border = new Vector4 (3' 3' 3' 29)'  	Normal = 12'  	Hover = 13'  	Active = 14'  	Disabled = 15  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  	Border = new Vector4 (3' 3' 3' 29)'  	Normal = 12'  	Hover = 13'  	Active = 14'  	Disabled = 15  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  	Border = new Vector4 (3' 3' 3' 29)'  	Normal = 12'  	Hover = 13'  	Active = 14'  	Disabled = 15  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  	Border = new Vector4 (3' 3' 3' 29)'  	Normal = 12'  	Hover = 13'  	Active = 14'  	Disabled = 15  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  	Border = new Vector4 (3' 3' 3' 29)'  	Normal = 12'  	Hover = 13'  	Active = 14'  	Disabled = 15  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("CommandGrid"' new Appearance () {  	Border = new Vector4 (3' 3' 3' 29)'  	Normal = 12'  	Hover = 13'  	Active = 14'  	Disabled = 15  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  	Border = new Vector4 (3' 3' 31' 3)'  	Normal = 8'  	Hover = 9'  	Active = 10'  	Disabled = 11  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  	Border = new Vector4 (3' 3' 31' 3)'  	Normal = 8'  	Hover = 9'  	Active = 10'  	Disabled = 11  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  	Border = new Vector4 (3' 3' 31' 3)'  	Normal = 8'  	Hover = 9'  	Active = 10'  	Disabled = 11  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  	Border = new Vector4 (3' 3' 31' 3)'  	Normal = 8'  	Hover = 9'  	Active = 10'  	Disabled = 11  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  	Border = new Vector4 (3' 3' 31' 3)'  	Normal = 8'  	Hover = 9'  	Active = 10'  	Disabled = 11  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  	Border = new Vector4 (3' 3' 31' 3)'  	Normal = 8'  	Hover = 9'  	Active = 10'  	Disabled = 11  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  	Border = new Vector4 (3' 3' 31' 3)'  	Normal = 8'  	Hover = 9'  	Active = 10'  	Disabled = 11  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("DropDownButton"' new Appearance () {  	Border = new Vector4 (3' 3' 31' 3)'  	Normal = 8'  	Hover = 9'  	Active = 10'  	Disabled = 11  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 19'  	Hover = 19'  	Active = 19'  	Disabled = 19  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 19'  	Hover = 19'  	Active = 19'  	Disabled = 19  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 19'  	Hover = 19'  	Active = 19'  	Disabled = 19  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 19'  	Hover = 19'  	Active = 19'  	Disabled = 19  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("Highlight"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 19'  	Hover = 19'  	Active = 19'  	Disabled = 19  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  	Border = new Vector4 (3' 3' 31' 3)'  	Normal = 4'  	Hover = 5'  	Active = 6'  	Disabled = 7  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  	Border = new Vector4 (3' 3' 31' 3)'  	Normal = 4'  	Hover = 5'  	Active = 6'  	Disabled = 7  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  	Border = new Vector4 (3' 3' 31' 3)'  	Normal = 4'  	Hover = 5'  	Active = 6'  	Disabled = 7  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  	Border = new Vector4 (3' 3' 31' 3)'  	Normal = 4'  	Hover = 5'  	Active = 6'  	Disabled = 7  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  	Border = new Vector4 (3' 3' 31' 3)'  	Normal = 4'  	Hover = 5'  	Active = 6'  	Disabled = 7  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  	Border = new Vector4 (3' 3' 31' 3)'  	Normal = 4'  	Hover = 5'  	Active = 6'  	Disabled = 7  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  	Border = new Vector4 (3' 3' 31' 3)'  	Normal = 4'  	Hover = 5'  	Active = 6'  	Disabled = 7  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("ListBox"' new Appearance () {  	Border = new Vector4 (3' 3' 31' 3)'  	Normal = 4'  	Hover = 5'  	Active = 6'  	Disabled = 7  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 12'  	Hover = 13'  	Active = 14'  	Disabled = 15  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 12'  	Hover = 13'  	Active = 14'  	Disabled = 15  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 12'  	Hover = 13'  	Active = 14'  	Disabled = 15  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 12'  	Hover = 13'  	Active = 14'  	Disabled = 15  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("Panel"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 12'  	Hover = 13'  	Active = 14'  	Disabled = 15  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 12'  	Hover = 13'  	Active = 14'  	Disabled = 15  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 12'  	Hover = 13'  	Active = 14'  	Disabled = 15  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 12'  	Hover = 13'  	Active = 14'  	Disabled = 15  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 12'  	Hover = 13'  	Active = 14'  	Disabled = 15  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("ProgressBar"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 12'  	Hover = 13'  	Active = 14'  	Disabled = 15  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 12'  	Hover = 13'  	Active = 14'  	Disabled = 15  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 12'  	Hover = 13'  	Active = 14'  	Disabled = 15  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 12'  	Hover = 13'  	Active = 14'  	Disabled = 15  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 12'  	Hover = 13'  	Active = 14'  	Disabled = 15  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("RadioButton"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 12'  	Hover = 13'  	Active = 14'  	Disabled = 15  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  	Border = Vector4.Zero'  	Normal = 17'  	Hover = 17'  	Active = 17'  	Disabled = 17  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  	Border = Vector4.Zero'  	Normal = 17'  	Hover = 17'  	Active = 17'  	Disabled = 17  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  	Border = Vector4.Zero'  	Normal = 17'  	Hover = 17'  	Active = 17'  	Disabled = 17  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("RadioButtonGlyph"' new Appearance () {  	Border = Vector4.Zero'  	Normal = 17'  	Hover = 17'  	Active = 17'  	Disabled = 17  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 12'  	Hover = 13'  	Active = 14'  	Disabled = 15  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 12'  	Hover = 13'  	Active = 14'  	Disabled = 15  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 12'  	Hover = 13'  	Active = 14'  	Disabled = 15  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 12'  	Hover = 13'  	Active = 14'  	Disabled = 15  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("ScrollBar"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 12'  	Hover = 13'  	Active = 14'  	Disabled = 15  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 12'  	Hover = 13'  	Active = 14'  	Disabled = 15  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 12'  	Hover = 13'  	Active = 14'  	Disabled = 15  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 12'  	Hover = 13'  	Active = 14'  	Disabled = 15  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 12'  	Hover = 13'  	Active = 14'  	Disabled = 15  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("ScrollBarCursor"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 12'  	Hover = 13'  	Active = 14'  	Disabled = 15  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 36'  	Hover = 37'  	Active = 38'  	Disabled = 39  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 36'  	Hover = 37'  	Active = 38'  	Disabled = 39  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 36'  	Hover = 37'  	Active = 38'  	Disabled = 39  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 36'  	Hover = 37'  	Active = 38'  	Disabled = 39  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("ScrollBarDecreaseButton"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 36'  	Hover = 37'  	Active = 38'  	Disabled = 39  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 40'  	Hover = 41'  	Active = 42'  	Disabled = 43  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 40'  	Hover = 41'  	Active = 42'  	Disabled = 43  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 40'  	Hover = 41'  	Active = 42'  	Disabled = 43  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 40'  	Hover = 41'  	Active = 42'  	Disabled = 43  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("ScrollBarIncreaseButton"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 40'  	Hover = 41'  	Active = 42'  	Disabled = 43  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  	Border = new Vector4 (3' 3' 31' 3)'  	Normal = 4'  	Hover = 5'  	Active = 6'  	Disabled = 7  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  	Border = new Vector4 (3' 3' 31' 3)'  	Normal = 4'  	Hover = 5'  	Active = 6'  	Disabled = 7  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  	Border = new Vector4 (3' 3' 31' 3)'  	Normal = 4'  	Hover = 5'  	Active = 6'  	Disabled = 7  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  	Border = new Vector4 (3' 3' 31' 3)'  	Normal = 4'  	Hover = 5'  	Active = 6'  	Disabled = 7  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  	Border = new Vector4 (3' 3' 31' 3)'  	Normal = 4'  	Hover = 5'  	Active = 6'  	Disabled = 7  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  	Border = new Vector4 (3' 3' 31' 3)'  	Normal = 4'  	Hover = 5'  	Active = 6'  	Disabled = 7  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  	Border = new Vector4 (3' 3' 31' 3)'  	Normal = 4'  	Hover = 5'  	Active = 6'  	Disabled = 7  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("TextBlock"' new Appearance () {  	Border = new Vector4 (3' 3' 31' 3)'  	Normal = 4'  	Hover = 5'  	Active = 6'  	Disabled = 7  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 12'  	Hover = 13'  	Active = 14'  	Disabled = 15  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 12'  	Hover = 13'  	Active = 14'  	Disabled = 15  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 12'  	Hover = 13'  	Active = 14'  	Disabled = 15  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 12'  	Hover = 13'  	Active = 14'  	Disabled = 15  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("TextBox"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 12'  	Hover = 13'  	Active = 14'  	Disabled = 15  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  	Border = new Vector4 (3' 33' 3' 3)'  	Normal = 0'  	Hover = 1'  	Active = 2'  	Disabled = 3  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  	Border = new Vector4 (3' 33' 3' 3)'  	Normal = 0'  	Hover = 1'  	Active = 2'  	Disabled = 3  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  	Border = new Vector4 (3' 33' 3' 3)'  	Normal = 0'  	Hover = 1'  	Active = 2'  	Disabled = 3  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  	Border = new Vector4 (3' 33' 3' 3)'  	Normal = 0'  	Hover = 1'  	Active = 2'  	Disabled = 3  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  	Border = new Vector4 (3' 33' 3' 3)'  	Normal = 0'  	Hover = 1'  	Active = 2'  	Disabled = 3  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("Window"' new Appearance () {  	Border = new Vector4 (3' 33' 3' 3)'  	Normal = 0'  	Hover = 1'  	Active = 2'  	Disabled = 3  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 20'  	Hover = 21'  	Active = 22'  	Disabled = 23  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 20'  	Hover = 21'  	Active = 22'  	Disabled = 23  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 20'  	Hover = 21'  	Active = 22'  	Disabled = 23  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 20'  	Hover = 21'  	Active = 22'  	Disabled = 23  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("WindowCloseButton"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 20'  	Hover = 21'  	Active = 22'  	Disabled = 23  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 24'  	Hover = 25'  	Active = 26'  	Disabled = 27  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 24'  	Hover = 25'  	Active = 26'  	Disabled = 27  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 24'  	Hover = 25'  	Active = 26'  	Disabled = 27  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 24'  	Hover = 25'  	Active = 26'  	Disabled = 27  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("WindowMaximizeButton"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 24'  	Hover = 25'  	Active = 26'  	Disabled = 27  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 28'  	Hover = 29'  	Active = 30'  	Disabled = 31  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 28'  	Hover = 29'  	Active = 30'  	Disabled = 31  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 28'  	Hover = 29'  	Active = 30'  	Disabled = 31  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 28'  	Hover = 29'  	Active = 30'  	Disabled = 31  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("WindowMinimizeButton"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 28'  	Hover = 29'  	Active = 30'  	Disabled = 31  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 32'  	Hover = 33'  	Active = 34'  	Disabled = 35  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 32'  	Hover = 33'  	Active = 34'  	Disabled = 35  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 32'  	Hover = 33'  	Active = 34'  	Disabled = 35  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 32'  	Hover = 33'  	Active = 34'  	Disabled = 35  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI,FrozenUIPlugin,C:\repos\SirePi_duality-frozen\UI\CorePlugin.cs,ContentProvider_ResourceResolve,The following statement contains a magic number: frozenUISkin.WidgetAppearances.Add ("WindowRestoreButton"' new Appearance () {  	Border = new Vector4 (3)'  	Normal = 32'  	Hover = 33'  	Active = 34'  	Disabled = 35  });  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,PrepareVertices,The following statement contains a magic number: vertices [2].SceneCoords.X = innerBottomRight.X;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,PrepareVertices,The following statement contains a magic number: vertices [2].SceneCoords.Y = topLeft.Y;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,PrepareVertices,The following statement contains a magic number: vertices [3].SceneCoords.X = bottomRight.X;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,PrepareVertices,The following statement contains a magic number: vertices [3].SceneCoords.Y = topLeft.Y;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,PrepareVertices,The following statement contains a magic number: vertices [4].SceneCoords.X = topLeft.X;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,PrepareVertices,The following statement contains a magic number: vertices [4].SceneCoords.Y = innerTopLeft.Y;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,PrepareVertices,The following statement contains a magic number: vertices [5].SceneCoords.X = innerTopLeft.X;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,PrepareVertices,The following statement contains a magic number: vertices [5].SceneCoords.Y = innerTopLeft.Y;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,PrepareVertices,The following statement contains a magic number: vertices [6].SceneCoords.X = innerBottomRight.X;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,PrepareVertices,The following statement contains a magic number: vertices [6].SceneCoords.Y = innerTopLeft.Y;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,PrepareVertices,The following statement contains a magic number: vertices [7].SceneCoords.X = bottomRight.X;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,PrepareVertices,The following statement contains a magic number: vertices [7].SceneCoords.Y = innerTopLeft.Y;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,PrepareVertices,The following statement contains a magic number: vertices [8].SceneCoords.X = topLeft.X;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,PrepareVertices,The following statement contains a magic number: vertices [8].SceneCoords.Y = innerBottomRight.Y;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,PrepareVertices,The following statement contains a magic number: vertices [9].SceneCoords.X = innerTopLeft.X;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,PrepareVertices,The following statement contains a magic number: vertices [9].SceneCoords.Y = innerBottomRight.Y;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,PrepareVertices,The following statement contains a magic number: vertices [10].SceneCoords.X = innerBottomRight.X;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,PrepareVertices,The following statement contains a magic number: vertices [10].SceneCoords.Y = innerBottomRight.Y;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,PrepareVertices,The following statement contains a magic number: vertices [11].SceneCoords.X = bottomRight.X;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,PrepareVertices,The following statement contains a magic number: vertices [11].SceneCoords.Y = innerBottomRight.Y;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,PrepareVertices,The following statement contains a magic number: vertices [12].SceneCoords.X = topLeft.X;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,PrepareVertices,The following statement contains a magic number: vertices [12].SceneCoords.Y = bottomRight.Y;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,PrepareVertices,The following statement contains a magic number: vertices [13].SceneCoords.X = innerTopLeft.X;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,PrepareVertices,The following statement contains a magic number: vertices [13].SceneCoords.Y = bottomRight.Y;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,PrepareVertices,The following statement contains a magic number: vertices [14].SceneCoords.X = innerBottomRight.X;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,PrepareVertices,The following statement contains a magic number: vertices [14].SceneCoords.Y = bottomRight.Y;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,PrepareVertices,The following statement contains a magic number: vertices [15].SceneCoords.X = bottomRight.X;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,PrepareVertices,The following statement contains a magic number: vertices [15].SceneCoords.Y = bottomRight.Y;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,PrepareVertices,The following statement contains a magic number: vertices [2].UVCoords = txRect.TopLeft + new Vector2 (borderRight' 0);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,PrepareVertices,The following statement contains a magic number: vertices [2].Tint = ColorRgba.White;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,PrepareVertices,The following statement contains a magic number: vertices [3].UVCoords = txRect.TopLeft + (Vector2.UnitX * txRect.Size);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,PrepareVertices,The following statement contains a magic number: vertices [3].Tint = ColorRgba.White;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,PrepareVertices,The following statement contains a magic number: vertices [4].UVCoords = txRect.TopLeft + new Vector2 (0' borderTop);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,PrepareVertices,The following statement contains a magic number: vertices [4].Tint = ColorRgba.White;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,PrepareVertices,The following statement contains a magic number: vertices [5].UVCoords = txRect.TopLeft + new Vector2 (borderLeft' borderTop);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,PrepareVertices,The following statement contains a magic number: vertices [5].Tint = ColorRgba.White;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,PrepareVertices,The following statement contains a magic number: vertices [6].UVCoords = txRect.TopLeft + new Vector2 (borderRight' borderTop);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,PrepareVertices,The following statement contains a magic number: vertices [6].Tint = ColorRgba.White;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,PrepareVertices,The following statement contains a magic number: vertices [7].UVCoords = txRect.TopLeft + new Vector2 (txRect.Size.X' borderTop);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,PrepareVertices,The following statement contains a magic number: vertices [7].Tint = ColorRgba.White;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,PrepareVertices,The following statement contains a magic number: vertices [8].UVCoords = txRect.TopLeft + new Vector2 (0' borderBottom);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,PrepareVertices,The following statement contains a magic number: vertices [8].Tint = ColorRgba.White;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,PrepareVertices,The following statement contains a magic number: vertices [9].UVCoords = txRect.TopLeft + new Vector2 (borderLeft' borderBottom);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,PrepareVertices,The following statement contains a magic number: vertices [9].Tint = ColorRgba.White;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,PrepareVertices,The following statement contains a magic number: vertices [10].UVCoords = txRect.TopLeft + new Vector2 (borderRight' borderBottom);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,PrepareVertices,The following statement contains a magic number: vertices [10].Tint = ColorRgba.White;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,PrepareVertices,The following statement contains a magic number: vertices [11].UVCoords = txRect.TopLeft + new Vector2 (txRect.Size.X' borderBottom);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,PrepareVertices,The following statement contains a magic number: vertices [11].Tint = ColorRgba.White;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,PrepareVertices,The following statement contains a magic number: vertices [12].UVCoords = txRect.TopLeft + (Vector2.UnitY * txRect.Size);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,PrepareVertices,The following statement contains a magic number: vertices [12].Tint = ColorRgba.White;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,PrepareVertices,The following statement contains a magic number: vertices [13].UVCoords = txRect.TopLeft + new Vector2 (borderLeft' txRect.Size.Y);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,PrepareVertices,The following statement contains a magic number: vertices [13].Tint = ColorRgba.White;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,PrepareVertices,The following statement contains a magic number: vertices [14].UVCoords = txRect.TopLeft + new Vector2 (borderRight' txRect.Size.Y);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,PrepareVertices,The following statement contains a magic number: vertices [14].Tint = ColorRgba.White;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,PrepareVertices,The following statement contains a magic number: vertices [15].UVCoords = txRect.TopLeft + (Vector2.One * txRect.Size);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,PrepareVertices,The following statement contains a magic number: vertices [15].Tint = ColorRgba.White;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea != Rect.Empty && clipArea != widgetArea) {  	if (clipArea.LeftX >= innerTopLeft.X) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  	}  	if (clipArea.RightX <= innerBottomRight.X) {  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  	}  	if (clipArea.TopY >= innerTopLeft.Y) {  		vertices [0].Color = Colors.Transparent;  		vertices [1].Color = Colors.Transparent;  		vertices [2].Color = Colors.Transparent;  		vertices [3].Color = Colors.Transparent;  		vertices [4].Color = Colors.Transparent;  		vertices [5].Color = Colors.Transparent;  		vertices [6].Color = Colors.Transparent;  		vertices [7].Color = Colors.Transparent;  		vertices [8].Color = Colors.Transparent;  		vertices [9].Color = Colors.Transparent;  		vertices [10].Color = Colors.Transparent;  		vertices [11].Color = Colors.Transparent;  	}  	if (clipArea.BottomY <= innerBottomRight.Y) {  		vertices [24].Color = Colors.Transparent;  		vertices [25].Color = Colors.Transparent;  		vertices [26].Color = Colors.Transparent;  		vertices [27].Color = Colors.Transparent;  		vertices [28].Color = Colors.Transparent;  		vertices [29].Color = Colors.Transparent;  		vertices [30].Color = Colors.Transparent;  		vertices [31].Color = Colors.Transparent;  		vertices [32].Color = Colors.Transparent;  		vertices [33].Color = Colors.Transparent;  		vertices [34].Color = Colors.Transparent;  		vertices [35].Color = Colors.Transparent;  	}  	if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  		vertices [12].Color = Colors.Transparent;  		vertices [13].Color = Colors.Transparent;  		vertices [14].Color = Colors.Transparent;  		vertices [15].Color = Colors.Transparent;  		vertices [16].Color = Colors.Transparent;  		vertices [17].Color = Colors.Transparent;  		vertices [18].Color = Colors.Transparent;  		vertices [19].Color = Colors.Transparent;  		vertices [20].Color = Colors.Transparent;  		vertices [21].Color = Colors.Transparent;  		vertices [22].Color = Colors.Transparent;  		vertices [23].Color = Colors.Transparent;  	}  	Vector2 centerSize = innerBottomRight - innerTopLeft;  	// Checking Left side  	if (clipArea.TopLeft.X < innerTopLeft.X) {  		float k = clipArea.TopLeft.X / border.X;  		FixVertices (ref vertices' COLUMN_1' 3' k);  	}  	else if (clipArea.TopLeft.X < innerBottomRight.X) {  		float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_3' 7' k);  	}  	else {  		float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_5' 11' k);  	}  	// Checking Right side  	if (clipArea.BottomRight.X > innerBottomRight.X) {  		float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  		FixVertices (ref vertices' COLUMN_6' 8' k);  	}  	else if (clipArea.BottomRight.X > innerTopLeft.X) {  		float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  		FixVertices (ref vertices' COLUMN_4' 4' k);  	}  	else {  		float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  		FixVertices (ref vertices' COLUMN_2' 0' k);  	}  	// Checking Top side  	if (clipArea.TopLeft.Y < innerTopLeft.Y) {  		float k = clipArea.TopLeft.Y / border.Y;  		FixVertices (ref vertices' ROW_1' 1' k);  	}  	else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  		float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_3' 13' k);  	}  	else {  		float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_5' 25' k);  	}  	// Checking Bottom side  	if (clipArea.BottomRight.Y > innerBottomRight.Y) {  		float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  		FixVertices (ref vertices' ROW_6' 24' k);  	}  	else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  		float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  		FixVertices (ref vertices' ROW_4' 12' k);  	}  	else {  		float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  		FixVertices (ref vertices' ROW_2' 0' k);  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea.LeftX >= innerTopLeft.X) {  	vertices [0].Color = Colors.Transparent;  	vertices [1].Color = Colors.Transparent;  	vertices [2].Color = Colors.Transparent;  	vertices [3].Color = Colors.Transparent;  	vertices [12].Color = Colors.Transparent;  	vertices [13].Color = Colors.Transparent;  	vertices [14].Color = Colors.Transparent;  	vertices [15].Color = Colors.Transparent;  	vertices [24].Color = Colors.Transparent;  	vertices [25].Color = Colors.Transparent;  	vertices [26].Color = Colors.Transparent;  	vertices [27].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea.LeftX >= innerTopLeft.X) {  	vertices [0].Color = Colors.Transparent;  	vertices [1].Color = Colors.Transparent;  	vertices [2].Color = Colors.Transparent;  	vertices [3].Color = Colors.Transparent;  	vertices [12].Color = Colors.Transparent;  	vertices [13].Color = Colors.Transparent;  	vertices [14].Color = Colors.Transparent;  	vertices [15].Color = Colors.Transparent;  	vertices [24].Color = Colors.Transparent;  	vertices [25].Color = Colors.Transparent;  	vertices [26].Color = Colors.Transparent;  	vertices [27].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea.LeftX >= innerTopLeft.X) {  	vertices [0].Color = Colors.Transparent;  	vertices [1].Color = Colors.Transparent;  	vertices [2].Color = Colors.Transparent;  	vertices [3].Color = Colors.Transparent;  	vertices [12].Color = Colors.Transparent;  	vertices [13].Color = Colors.Transparent;  	vertices [14].Color = Colors.Transparent;  	vertices [15].Color = Colors.Transparent;  	vertices [24].Color = Colors.Transparent;  	vertices [25].Color = Colors.Transparent;  	vertices [26].Color = Colors.Transparent;  	vertices [27].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea.LeftX >= innerTopLeft.X) {  	vertices [0].Color = Colors.Transparent;  	vertices [1].Color = Colors.Transparent;  	vertices [2].Color = Colors.Transparent;  	vertices [3].Color = Colors.Transparent;  	vertices [12].Color = Colors.Transparent;  	vertices [13].Color = Colors.Transparent;  	vertices [14].Color = Colors.Transparent;  	vertices [15].Color = Colors.Transparent;  	vertices [24].Color = Colors.Transparent;  	vertices [25].Color = Colors.Transparent;  	vertices [26].Color = Colors.Transparent;  	vertices [27].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea.LeftX >= innerTopLeft.X) {  	vertices [0].Color = Colors.Transparent;  	vertices [1].Color = Colors.Transparent;  	vertices [2].Color = Colors.Transparent;  	vertices [3].Color = Colors.Transparent;  	vertices [12].Color = Colors.Transparent;  	vertices [13].Color = Colors.Transparent;  	vertices [14].Color = Colors.Transparent;  	vertices [15].Color = Colors.Transparent;  	vertices [24].Color = Colors.Transparent;  	vertices [25].Color = Colors.Transparent;  	vertices [26].Color = Colors.Transparent;  	vertices [27].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea.LeftX >= innerTopLeft.X) {  	vertices [0].Color = Colors.Transparent;  	vertices [1].Color = Colors.Transparent;  	vertices [2].Color = Colors.Transparent;  	vertices [3].Color = Colors.Transparent;  	vertices [12].Color = Colors.Transparent;  	vertices [13].Color = Colors.Transparent;  	vertices [14].Color = Colors.Transparent;  	vertices [15].Color = Colors.Transparent;  	vertices [24].Color = Colors.Transparent;  	vertices [25].Color = Colors.Transparent;  	vertices [26].Color = Colors.Transparent;  	vertices [27].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea.LeftX >= innerTopLeft.X) {  	vertices [0].Color = Colors.Transparent;  	vertices [1].Color = Colors.Transparent;  	vertices [2].Color = Colors.Transparent;  	vertices [3].Color = Colors.Transparent;  	vertices [12].Color = Colors.Transparent;  	vertices [13].Color = Colors.Transparent;  	vertices [14].Color = Colors.Transparent;  	vertices [15].Color = Colors.Transparent;  	vertices [24].Color = Colors.Transparent;  	vertices [25].Color = Colors.Transparent;  	vertices [26].Color = Colors.Transparent;  	vertices [27].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea.LeftX >= innerTopLeft.X) {  	vertices [0].Color = Colors.Transparent;  	vertices [1].Color = Colors.Transparent;  	vertices [2].Color = Colors.Transparent;  	vertices [3].Color = Colors.Transparent;  	vertices [12].Color = Colors.Transparent;  	vertices [13].Color = Colors.Transparent;  	vertices [14].Color = Colors.Transparent;  	vertices [15].Color = Colors.Transparent;  	vertices [24].Color = Colors.Transparent;  	vertices [25].Color = Colors.Transparent;  	vertices [26].Color = Colors.Transparent;  	vertices [27].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea.LeftX >= innerTopLeft.X) {  	vertices [0].Color = Colors.Transparent;  	vertices [1].Color = Colors.Transparent;  	vertices [2].Color = Colors.Transparent;  	vertices [3].Color = Colors.Transparent;  	vertices [12].Color = Colors.Transparent;  	vertices [13].Color = Colors.Transparent;  	vertices [14].Color = Colors.Transparent;  	vertices [15].Color = Colors.Transparent;  	vertices [24].Color = Colors.Transparent;  	vertices [25].Color = Colors.Transparent;  	vertices [26].Color = Colors.Transparent;  	vertices [27].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea.LeftX >= innerTopLeft.X) {  	vertices [0].Color = Colors.Transparent;  	vertices [1].Color = Colors.Transparent;  	vertices [2].Color = Colors.Transparent;  	vertices [3].Color = Colors.Transparent;  	vertices [12].Color = Colors.Transparent;  	vertices [13].Color = Colors.Transparent;  	vertices [14].Color = Colors.Transparent;  	vertices [15].Color = Colors.Transparent;  	vertices [24].Color = Colors.Transparent;  	vertices [25].Color = Colors.Transparent;  	vertices [26].Color = Colors.Transparent;  	vertices [27].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [2].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [3].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [12].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [13].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [14].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [15].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [24].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [25].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [26].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [27].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea.RightX <= innerBottomRight.X) {  	vertices [8].Color = Colors.Transparent;  	vertices [9].Color = Colors.Transparent;  	vertices [10].Color = Colors.Transparent;  	vertices [11].Color = Colors.Transparent;  	vertices [20].Color = Colors.Transparent;  	vertices [21].Color = Colors.Transparent;  	vertices [22].Color = Colors.Transparent;  	vertices [23].Color = Colors.Transparent;  	vertices [32].Color = Colors.Transparent;  	vertices [33].Color = Colors.Transparent;  	vertices [34].Color = Colors.Transparent;  	vertices [35].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea.RightX <= innerBottomRight.X) {  	vertices [8].Color = Colors.Transparent;  	vertices [9].Color = Colors.Transparent;  	vertices [10].Color = Colors.Transparent;  	vertices [11].Color = Colors.Transparent;  	vertices [20].Color = Colors.Transparent;  	vertices [21].Color = Colors.Transparent;  	vertices [22].Color = Colors.Transparent;  	vertices [23].Color = Colors.Transparent;  	vertices [32].Color = Colors.Transparent;  	vertices [33].Color = Colors.Transparent;  	vertices [34].Color = Colors.Transparent;  	vertices [35].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea.RightX <= innerBottomRight.X) {  	vertices [8].Color = Colors.Transparent;  	vertices [9].Color = Colors.Transparent;  	vertices [10].Color = Colors.Transparent;  	vertices [11].Color = Colors.Transparent;  	vertices [20].Color = Colors.Transparent;  	vertices [21].Color = Colors.Transparent;  	vertices [22].Color = Colors.Transparent;  	vertices [23].Color = Colors.Transparent;  	vertices [32].Color = Colors.Transparent;  	vertices [33].Color = Colors.Transparent;  	vertices [34].Color = Colors.Transparent;  	vertices [35].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea.RightX <= innerBottomRight.X) {  	vertices [8].Color = Colors.Transparent;  	vertices [9].Color = Colors.Transparent;  	vertices [10].Color = Colors.Transparent;  	vertices [11].Color = Colors.Transparent;  	vertices [20].Color = Colors.Transparent;  	vertices [21].Color = Colors.Transparent;  	vertices [22].Color = Colors.Transparent;  	vertices [23].Color = Colors.Transparent;  	vertices [32].Color = Colors.Transparent;  	vertices [33].Color = Colors.Transparent;  	vertices [34].Color = Colors.Transparent;  	vertices [35].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea.RightX <= innerBottomRight.X) {  	vertices [8].Color = Colors.Transparent;  	vertices [9].Color = Colors.Transparent;  	vertices [10].Color = Colors.Transparent;  	vertices [11].Color = Colors.Transparent;  	vertices [20].Color = Colors.Transparent;  	vertices [21].Color = Colors.Transparent;  	vertices [22].Color = Colors.Transparent;  	vertices [23].Color = Colors.Transparent;  	vertices [32].Color = Colors.Transparent;  	vertices [33].Color = Colors.Transparent;  	vertices [34].Color = Colors.Transparent;  	vertices [35].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea.RightX <= innerBottomRight.X) {  	vertices [8].Color = Colors.Transparent;  	vertices [9].Color = Colors.Transparent;  	vertices [10].Color = Colors.Transparent;  	vertices [11].Color = Colors.Transparent;  	vertices [20].Color = Colors.Transparent;  	vertices [21].Color = Colors.Transparent;  	vertices [22].Color = Colors.Transparent;  	vertices [23].Color = Colors.Transparent;  	vertices [32].Color = Colors.Transparent;  	vertices [33].Color = Colors.Transparent;  	vertices [34].Color = Colors.Transparent;  	vertices [35].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea.RightX <= innerBottomRight.X) {  	vertices [8].Color = Colors.Transparent;  	vertices [9].Color = Colors.Transparent;  	vertices [10].Color = Colors.Transparent;  	vertices [11].Color = Colors.Transparent;  	vertices [20].Color = Colors.Transparent;  	vertices [21].Color = Colors.Transparent;  	vertices [22].Color = Colors.Transparent;  	vertices [23].Color = Colors.Transparent;  	vertices [32].Color = Colors.Transparent;  	vertices [33].Color = Colors.Transparent;  	vertices [34].Color = Colors.Transparent;  	vertices [35].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea.RightX <= innerBottomRight.X) {  	vertices [8].Color = Colors.Transparent;  	vertices [9].Color = Colors.Transparent;  	vertices [10].Color = Colors.Transparent;  	vertices [11].Color = Colors.Transparent;  	vertices [20].Color = Colors.Transparent;  	vertices [21].Color = Colors.Transparent;  	vertices [22].Color = Colors.Transparent;  	vertices [23].Color = Colors.Transparent;  	vertices [32].Color = Colors.Transparent;  	vertices [33].Color = Colors.Transparent;  	vertices [34].Color = Colors.Transparent;  	vertices [35].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea.RightX <= innerBottomRight.X) {  	vertices [8].Color = Colors.Transparent;  	vertices [9].Color = Colors.Transparent;  	vertices [10].Color = Colors.Transparent;  	vertices [11].Color = Colors.Transparent;  	vertices [20].Color = Colors.Transparent;  	vertices [21].Color = Colors.Transparent;  	vertices [22].Color = Colors.Transparent;  	vertices [23].Color = Colors.Transparent;  	vertices [32].Color = Colors.Transparent;  	vertices [33].Color = Colors.Transparent;  	vertices [34].Color = Colors.Transparent;  	vertices [35].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea.RightX <= innerBottomRight.X) {  	vertices [8].Color = Colors.Transparent;  	vertices [9].Color = Colors.Transparent;  	vertices [10].Color = Colors.Transparent;  	vertices [11].Color = Colors.Transparent;  	vertices [20].Color = Colors.Transparent;  	vertices [21].Color = Colors.Transparent;  	vertices [22].Color = Colors.Transparent;  	vertices [23].Color = Colors.Transparent;  	vertices [32].Color = Colors.Transparent;  	vertices [33].Color = Colors.Transparent;  	vertices [34].Color = Colors.Transparent;  	vertices [35].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea.RightX <= innerBottomRight.X) {  	vertices [8].Color = Colors.Transparent;  	vertices [9].Color = Colors.Transparent;  	vertices [10].Color = Colors.Transparent;  	vertices [11].Color = Colors.Transparent;  	vertices [20].Color = Colors.Transparent;  	vertices [21].Color = Colors.Transparent;  	vertices [22].Color = Colors.Transparent;  	vertices [23].Color = Colors.Transparent;  	vertices [32].Color = Colors.Transparent;  	vertices [33].Color = Colors.Transparent;  	vertices [34].Color = Colors.Transparent;  	vertices [35].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea.RightX <= innerBottomRight.X) {  	vertices [8].Color = Colors.Transparent;  	vertices [9].Color = Colors.Transparent;  	vertices [10].Color = Colors.Transparent;  	vertices [11].Color = Colors.Transparent;  	vertices [20].Color = Colors.Transparent;  	vertices [21].Color = Colors.Transparent;  	vertices [22].Color = Colors.Transparent;  	vertices [23].Color = Colors.Transparent;  	vertices [32].Color = Colors.Transparent;  	vertices [33].Color = Colors.Transparent;  	vertices [34].Color = Colors.Transparent;  	vertices [35].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [8].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [9].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [10].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [11].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [20].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [21].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [22].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [23].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [32].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [33].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [34].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [35].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  	vertices [4].Color = Colors.Transparent;  	vertices [5].Color = Colors.Transparent;  	vertices [6].Color = Colors.Transparent;  	vertices [7].Color = Colors.Transparent;  	vertices [16].Color = Colors.Transparent;  	vertices [17].Color = Colors.Transparent;  	vertices [18].Color = Colors.Transparent;  	vertices [19].Color = Colors.Transparent;  	vertices [28].Color = Colors.Transparent;  	vertices [29].Color = Colors.Transparent;  	vertices [30].Color = Colors.Transparent;  	vertices [31].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  	vertices [4].Color = Colors.Transparent;  	vertices [5].Color = Colors.Transparent;  	vertices [6].Color = Colors.Transparent;  	vertices [7].Color = Colors.Transparent;  	vertices [16].Color = Colors.Transparent;  	vertices [17].Color = Colors.Transparent;  	vertices [18].Color = Colors.Transparent;  	vertices [19].Color = Colors.Transparent;  	vertices [28].Color = Colors.Transparent;  	vertices [29].Color = Colors.Transparent;  	vertices [30].Color = Colors.Transparent;  	vertices [31].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  	vertices [4].Color = Colors.Transparent;  	vertices [5].Color = Colors.Transparent;  	vertices [6].Color = Colors.Transparent;  	vertices [7].Color = Colors.Transparent;  	vertices [16].Color = Colors.Transparent;  	vertices [17].Color = Colors.Transparent;  	vertices [18].Color = Colors.Transparent;  	vertices [19].Color = Colors.Transparent;  	vertices [28].Color = Colors.Transparent;  	vertices [29].Color = Colors.Transparent;  	vertices [30].Color = Colors.Transparent;  	vertices [31].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  	vertices [4].Color = Colors.Transparent;  	vertices [5].Color = Colors.Transparent;  	vertices [6].Color = Colors.Transparent;  	vertices [7].Color = Colors.Transparent;  	vertices [16].Color = Colors.Transparent;  	vertices [17].Color = Colors.Transparent;  	vertices [18].Color = Colors.Transparent;  	vertices [19].Color = Colors.Transparent;  	vertices [28].Color = Colors.Transparent;  	vertices [29].Color = Colors.Transparent;  	vertices [30].Color = Colors.Transparent;  	vertices [31].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  	vertices [4].Color = Colors.Transparent;  	vertices [5].Color = Colors.Transparent;  	vertices [6].Color = Colors.Transparent;  	vertices [7].Color = Colors.Transparent;  	vertices [16].Color = Colors.Transparent;  	vertices [17].Color = Colors.Transparent;  	vertices [18].Color = Colors.Transparent;  	vertices [19].Color = Colors.Transparent;  	vertices [28].Color = Colors.Transparent;  	vertices [29].Color = Colors.Transparent;  	vertices [30].Color = Colors.Transparent;  	vertices [31].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  	vertices [4].Color = Colors.Transparent;  	vertices [5].Color = Colors.Transparent;  	vertices [6].Color = Colors.Transparent;  	vertices [7].Color = Colors.Transparent;  	vertices [16].Color = Colors.Transparent;  	vertices [17].Color = Colors.Transparent;  	vertices [18].Color = Colors.Transparent;  	vertices [19].Color = Colors.Transparent;  	vertices [28].Color = Colors.Transparent;  	vertices [29].Color = Colors.Transparent;  	vertices [30].Color = Colors.Transparent;  	vertices [31].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  	vertices [4].Color = Colors.Transparent;  	vertices [5].Color = Colors.Transparent;  	vertices [6].Color = Colors.Transparent;  	vertices [7].Color = Colors.Transparent;  	vertices [16].Color = Colors.Transparent;  	vertices [17].Color = Colors.Transparent;  	vertices [18].Color = Colors.Transparent;  	vertices [19].Color = Colors.Transparent;  	vertices [28].Color = Colors.Transparent;  	vertices [29].Color = Colors.Transparent;  	vertices [30].Color = Colors.Transparent;  	vertices [31].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  	vertices [4].Color = Colors.Transparent;  	vertices [5].Color = Colors.Transparent;  	vertices [6].Color = Colors.Transparent;  	vertices [7].Color = Colors.Transparent;  	vertices [16].Color = Colors.Transparent;  	vertices [17].Color = Colors.Transparent;  	vertices [18].Color = Colors.Transparent;  	vertices [19].Color = Colors.Transparent;  	vertices [28].Color = Colors.Transparent;  	vertices [29].Color = Colors.Transparent;  	vertices [30].Color = Colors.Transparent;  	vertices [31].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  	vertices [4].Color = Colors.Transparent;  	vertices [5].Color = Colors.Transparent;  	vertices [6].Color = Colors.Transparent;  	vertices [7].Color = Colors.Transparent;  	vertices [16].Color = Colors.Transparent;  	vertices [17].Color = Colors.Transparent;  	vertices [18].Color = Colors.Transparent;  	vertices [19].Color = Colors.Transparent;  	vertices [28].Color = Colors.Transparent;  	vertices [29].Color = Colors.Transparent;  	vertices [30].Color = Colors.Transparent;  	vertices [31].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  	vertices [4].Color = Colors.Transparent;  	vertices [5].Color = Colors.Transparent;  	vertices [6].Color = Colors.Transparent;  	vertices [7].Color = Colors.Transparent;  	vertices [16].Color = Colors.Transparent;  	vertices [17].Color = Colors.Transparent;  	vertices [18].Color = Colors.Transparent;  	vertices [19].Color = Colors.Transparent;  	vertices [28].Color = Colors.Transparent;  	vertices [29].Color = Colors.Transparent;  	vertices [30].Color = Colors.Transparent;  	vertices [31].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  	vertices [4].Color = Colors.Transparent;  	vertices [5].Color = Colors.Transparent;  	vertices [6].Color = Colors.Transparent;  	vertices [7].Color = Colors.Transparent;  	vertices [16].Color = Colors.Transparent;  	vertices [17].Color = Colors.Transparent;  	vertices [18].Color = Colors.Transparent;  	vertices [19].Color = Colors.Transparent;  	vertices [28].Color = Colors.Transparent;  	vertices [29].Color = Colors.Transparent;  	vertices [30].Color = Colors.Transparent;  	vertices [31].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if ((clipArea.LeftX >= innerBottomRight.X) || (clipArea.RightX <= innerTopLeft.X)) {  	vertices [4].Color = Colors.Transparent;  	vertices [5].Color = Colors.Transparent;  	vertices [6].Color = Colors.Transparent;  	vertices [7].Color = Colors.Transparent;  	vertices [16].Color = Colors.Transparent;  	vertices [17].Color = Colors.Transparent;  	vertices [18].Color = Colors.Transparent;  	vertices [19].Color = Colors.Transparent;  	vertices [28].Color = Colors.Transparent;  	vertices [29].Color = Colors.Transparent;  	vertices [30].Color = Colors.Transparent;  	vertices [31].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [4].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [5].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [6].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [7].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [16].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [17].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [18].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [19].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [28].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [29].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [30].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [31].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea.TopY >= innerTopLeft.Y) {  	vertices [0].Color = Colors.Transparent;  	vertices [1].Color = Colors.Transparent;  	vertices [2].Color = Colors.Transparent;  	vertices [3].Color = Colors.Transparent;  	vertices [4].Color = Colors.Transparent;  	vertices [5].Color = Colors.Transparent;  	vertices [6].Color = Colors.Transparent;  	vertices [7].Color = Colors.Transparent;  	vertices [8].Color = Colors.Transparent;  	vertices [9].Color = Colors.Transparent;  	vertices [10].Color = Colors.Transparent;  	vertices [11].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea.TopY >= innerTopLeft.Y) {  	vertices [0].Color = Colors.Transparent;  	vertices [1].Color = Colors.Transparent;  	vertices [2].Color = Colors.Transparent;  	vertices [3].Color = Colors.Transparent;  	vertices [4].Color = Colors.Transparent;  	vertices [5].Color = Colors.Transparent;  	vertices [6].Color = Colors.Transparent;  	vertices [7].Color = Colors.Transparent;  	vertices [8].Color = Colors.Transparent;  	vertices [9].Color = Colors.Transparent;  	vertices [10].Color = Colors.Transparent;  	vertices [11].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea.TopY >= innerTopLeft.Y) {  	vertices [0].Color = Colors.Transparent;  	vertices [1].Color = Colors.Transparent;  	vertices [2].Color = Colors.Transparent;  	vertices [3].Color = Colors.Transparent;  	vertices [4].Color = Colors.Transparent;  	vertices [5].Color = Colors.Transparent;  	vertices [6].Color = Colors.Transparent;  	vertices [7].Color = Colors.Transparent;  	vertices [8].Color = Colors.Transparent;  	vertices [9].Color = Colors.Transparent;  	vertices [10].Color = Colors.Transparent;  	vertices [11].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea.TopY >= innerTopLeft.Y) {  	vertices [0].Color = Colors.Transparent;  	vertices [1].Color = Colors.Transparent;  	vertices [2].Color = Colors.Transparent;  	vertices [3].Color = Colors.Transparent;  	vertices [4].Color = Colors.Transparent;  	vertices [5].Color = Colors.Transparent;  	vertices [6].Color = Colors.Transparent;  	vertices [7].Color = Colors.Transparent;  	vertices [8].Color = Colors.Transparent;  	vertices [9].Color = Colors.Transparent;  	vertices [10].Color = Colors.Transparent;  	vertices [11].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea.TopY >= innerTopLeft.Y) {  	vertices [0].Color = Colors.Transparent;  	vertices [1].Color = Colors.Transparent;  	vertices [2].Color = Colors.Transparent;  	vertices [3].Color = Colors.Transparent;  	vertices [4].Color = Colors.Transparent;  	vertices [5].Color = Colors.Transparent;  	vertices [6].Color = Colors.Transparent;  	vertices [7].Color = Colors.Transparent;  	vertices [8].Color = Colors.Transparent;  	vertices [9].Color = Colors.Transparent;  	vertices [10].Color = Colors.Transparent;  	vertices [11].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea.TopY >= innerTopLeft.Y) {  	vertices [0].Color = Colors.Transparent;  	vertices [1].Color = Colors.Transparent;  	vertices [2].Color = Colors.Transparent;  	vertices [3].Color = Colors.Transparent;  	vertices [4].Color = Colors.Transparent;  	vertices [5].Color = Colors.Transparent;  	vertices [6].Color = Colors.Transparent;  	vertices [7].Color = Colors.Transparent;  	vertices [8].Color = Colors.Transparent;  	vertices [9].Color = Colors.Transparent;  	vertices [10].Color = Colors.Transparent;  	vertices [11].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea.TopY >= innerTopLeft.Y) {  	vertices [0].Color = Colors.Transparent;  	vertices [1].Color = Colors.Transparent;  	vertices [2].Color = Colors.Transparent;  	vertices [3].Color = Colors.Transparent;  	vertices [4].Color = Colors.Transparent;  	vertices [5].Color = Colors.Transparent;  	vertices [6].Color = Colors.Transparent;  	vertices [7].Color = Colors.Transparent;  	vertices [8].Color = Colors.Transparent;  	vertices [9].Color = Colors.Transparent;  	vertices [10].Color = Colors.Transparent;  	vertices [11].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea.TopY >= innerTopLeft.Y) {  	vertices [0].Color = Colors.Transparent;  	vertices [1].Color = Colors.Transparent;  	vertices [2].Color = Colors.Transparent;  	vertices [3].Color = Colors.Transparent;  	vertices [4].Color = Colors.Transparent;  	vertices [5].Color = Colors.Transparent;  	vertices [6].Color = Colors.Transparent;  	vertices [7].Color = Colors.Transparent;  	vertices [8].Color = Colors.Transparent;  	vertices [9].Color = Colors.Transparent;  	vertices [10].Color = Colors.Transparent;  	vertices [11].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea.TopY >= innerTopLeft.Y) {  	vertices [0].Color = Colors.Transparent;  	vertices [1].Color = Colors.Transparent;  	vertices [2].Color = Colors.Transparent;  	vertices [3].Color = Colors.Transparent;  	vertices [4].Color = Colors.Transparent;  	vertices [5].Color = Colors.Transparent;  	vertices [6].Color = Colors.Transparent;  	vertices [7].Color = Colors.Transparent;  	vertices [8].Color = Colors.Transparent;  	vertices [9].Color = Colors.Transparent;  	vertices [10].Color = Colors.Transparent;  	vertices [11].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea.TopY >= innerTopLeft.Y) {  	vertices [0].Color = Colors.Transparent;  	vertices [1].Color = Colors.Transparent;  	vertices [2].Color = Colors.Transparent;  	vertices [3].Color = Colors.Transparent;  	vertices [4].Color = Colors.Transparent;  	vertices [5].Color = Colors.Transparent;  	vertices [6].Color = Colors.Transparent;  	vertices [7].Color = Colors.Transparent;  	vertices [8].Color = Colors.Transparent;  	vertices [9].Color = Colors.Transparent;  	vertices [10].Color = Colors.Transparent;  	vertices [11].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [2].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [3].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [4].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [5].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [6].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [7].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [8].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [9].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [10].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [11].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea.BottomY <= innerBottomRight.Y) {  	vertices [24].Color = Colors.Transparent;  	vertices [25].Color = Colors.Transparent;  	vertices [26].Color = Colors.Transparent;  	vertices [27].Color = Colors.Transparent;  	vertices [28].Color = Colors.Transparent;  	vertices [29].Color = Colors.Transparent;  	vertices [30].Color = Colors.Transparent;  	vertices [31].Color = Colors.Transparent;  	vertices [32].Color = Colors.Transparent;  	vertices [33].Color = Colors.Transparent;  	vertices [34].Color = Colors.Transparent;  	vertices [35].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea.BottomY <= innerBottomRight.Y) {  	vertices [24].Color = Colors.Transparent;  	vertices [25].Color = Colors.Transparent;  	vertices [26].Color = Colors.Transparent;  	vertices [27].Color = Colors.Transparent;  	vertices [28].Color = Colors.Transparent;  	vertices [29].Color = Colors.Transparent;  	vertices [30].Color = Colors.Transparent;  	vertices [31].Color = Colors.Transparent;  	vertices [32].Color = Colors.Transparent;  	vertices [33].Color = Colors.Transparent;  	vertices [34].Color = Colors.Transparent;  	vertices [35].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea.BottomY <= innerBottomRight.Y) {  	vertices [24].Color = Colors.Transparent;  	vertices [25].Color = Colors.Transparent;  	vertices [26].Color = Colors.Transparent;  	vertices [27].Color = Colors.Transparent;  	vertices [28].Color = Colors.Transparent;  	vertices [29].Color = Colors.Transparent;  	vertices [30].Color = Colors.Transparent;  	vertices [31].Color = Colors.Transparent;  	vertices [32].Color = Colors.Transparent;  	vertices [33].Color = Colors.Transparent;  	vertices [34].Color = Colors.Transparent;  	vertices [35].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea.BottomY <= innerBottomRight.Y) {  	vertices [24].Color = Colors.Transparent;  	vertices [25].Color = Colors.Transparent;  	vertices [26].Color = Colors.Transparent;  	vertices [27].Color = Colors.Transparent;  	vertices [28].Color = Colors.Transparent;  	vertices [29].Color = Colors.Transparent;  	vertices [30].Color = Colors.Transparent;  	vertices [31].Color = Colors.Transparent;  	vertices [32].Color = Colors.Transparent;  	vertices [33].Color = Colors.Transparent;  	vertices [34].Color = Colors.Transparent;  	vertices [35].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea.BottomY <= innerBottomRight.Y) {  	vertices [24].Color = Colors.Transparent;  	vertices [25].Color = Colors.Transparent;  	vertices [26].Color = Colors.Transparent;  	vertices [27].Color = Colors.Transparent;  	vertices [28].Color = Colors.Transparent;  	vertices [29].Color = Colors.Transparent;  	vertices [30].Color = Colors.Transparent;  	vertices [31].Color = Colors.Transparent;  	vertices [32].Color = Colors.Transparent;  	vertices [33].Color = Colors.Transparent;  	vertices [34].Color = Colors.Transparent;  	vertices [35].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea.BottomY <= innerBottomRight.Y) {  	vertices [24].Color = Colors.Transparent;  	vertices [25].Color = Colors.Transparent;  	vertices [26].Color = Colors.Transparent;  	vertices [27].Color = Colors.Transparent;  	vertices [28].Color = Colors.Transparent;  	vertices [29].Color = Colors.Transparent;  	vertices [30].Color = Colors.Transparent;  	vertices [31].Color = Colors.Transparent;  	vertices [32].Color = Colors.Transparent;  	vertices [33].Color = Colors.Transparent;  	vertices [34].Color = Colors.Transparent;  	vertices [35].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea.BottomY <= innerBottomRight.Y) {  	vertices [24].Color = Colors.Transparent;  	vertices [25].Color = Colors.Transparent;  	vertices [26].Color = Colors.Transparent;  	vertices [27].Color = Colors.Transparent;  	vertices [28].Color = Colors.Transparent;  	vertices [29].Color = Colors.Transparent;  	vertices [30].Color = Colors.Transparent;  	vertices [31].Color = Colors.Transparent;  	vertices [32].Color = Colors.Transparent;  	vertices [33].Color = Colors.Transparent;  	vertices [34].Color = Colors.Transparent;  	vertices [35].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea.BottomY <= innerBottomRight.Y) {  	vertices [24].Color = Colors.Transparent;  	vertices [25].Color = Colors.Transparent;  	vertices [26].Color = Colors.Transparent;  	vertices [27].Color = Colors.Transparent;  	vertices [28].Color = Colors.Transparent;  	vertices [29].Color = Colors.Transparent;  	vertices [30].Color = Colors.Transparent;  	vertices [31].Color = Colors.Transparent;  	vertices [32].Color = Colors.Transparent;  	vertices [33].Color = Colors.Transparent;  	vertices [34].Color = Colors.Transparent;  	vertices [35].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea.BottomY <= innerBottomRight.Y) {  	vertices [24].Color = Colors.Transparent;  	vertices [25].Color = Colors.Transparent;  	vertices [26].Color = Colors.Transparent;  	vertices [27].Color = Colors.Transparent;  	vertices [28].Color = Colors.Transparent;  	vertices [29].Color = Colors.Transparent;  	vertices [30].Color = Colors.Transparent;  	vertices [31].Color = Colors.Transparent;  	vertices [32].Color = Colors.Transparent;  	vertices [33].Color = Colors.Transparent;  	vertices [34].Color = Colors.Transparent;  	vertices [35].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea.BottomY <= innerBottomRight.Y) {  	vertices [24].Color = Colors.Transparent;  	vertices [25].Color = Colors.Transparent;  	vertices [26].Color = Colors.Transparent;  	vertices [27].Color = Colors.Transparent;  	vertices [28].Color = Colors.Transparent;  	vertices [29].Color = Colors.Transparent;  	vertices [30].Color = Colors.Transparent;  	vertices [31].Color = Colors.Transparent;  	vertices [32].Color = Colors.Transparent;  	vertices [33].Color = Colors.Transparent;  	vertices [34].Color = Colors.Transparent;  	vertices [35].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea.BottomY <= innerBottomRight.Y) {  	vertices [24].Color = Colors.Transparent;  	vertices [25].Color = Colors.Transparent;  	vertices [26].Color = Colors.Transparent;  	vertices [27].Color = Colors.Transparent;  	vertices [28].Color = Colors.Transparent;  	vertices [29].Color = Colors.Transparent;  	vertices [30].Color = Colors.Transparent;  	vertices [31].Color = Colors.Transparent;  	vertices [32].Color = Colors.Transparent;  	vertices [33].Color = Colors.Transparent;  	vertices [34].Color = Colors.Transparent;  	vertices [35].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea.BottomY <= innerBottomRight.Y) {  	vertices [24].Color = Colors.Transparent;  	vertices [25].Color = Colors.Transparent;  	vertices [26].Color = Colors.Transparent;  	vertices [27].Color = Colors.Transparent;  	vertices [28].Color = Colors.Transparent;  	vertices [29].Color = Colors.Transparent;  	vertices [30].Color = Colors.Transparent;  	vertices [31].Color = Colors.Transparent;  	vertices [32].Color = Colors.Transparent;  	vertices [33].Color = Colors.Transparent;  	vertices [34].Color = Colors.Transparent;  	vertices [35].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [24].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [25].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [26].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [27].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [28].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [29].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [30].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [31].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [32].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [33].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [34].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [35].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  	vertices [12].Color = Colors.Transparent;  	vertices [13].Color = Colors.Transparent;  	vertices [14].Color = Colors.Transparent;  	vertices [15].Color = Colors.Transparent;  	vertices [16].Color = Colors.Transparent;  	vertices [17].Color = Colors.Transparent;  	vertices [18].Color = Colors.Transparent;  	vertices [19].Color = Colors.Transparent;  	vertices [20].Color = Colors.Transparent;  	vertices [21].Color = Colors.Transparent;  	vertices [22].Color = Colors.Transparent;  	vertices [23].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  	vertices [12].Color = Colors.Transparent;  	vertices [13].Color = Colors.Transparent;  	vertices [14].Color = Colors.Transparent;  	vertices [15].Color = Colors.Transparent;  	vertices [16].Color = Colors.Transparent;  	vertices [17].Color = Colors.Transparent;  	vertices [18].Color = Colors.Transparent;  	vertices [19].Color = Colors.Transparent;  	vertices [20].Color = Colors.Transparent;  	vertices [21].Color = Colors.Transparent;  	vertices [22].Color = Colors.Transparent;  	vertices [23].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  	vertices [12].Color = Colors.Transparent;  	vertices [13].Color = Colors.Transparent;  	vertices [14].Color = Colors.Transparent;  	vertices [15].Color = Colors.Transparent;  	vertices [16].Color = Colors.Transparent;  	vertices [17].Color = Colors.Transparent;  	vertices [18].Color = Colors.Transparent;  	vertices [19].Color = Colors.Transparent;  	vertices [20].Color = Colors.Transparent;  	vertices [21].Color = Colors.Transparent;  	vertices [22].Color = Colors.Transparent;  	vertices [23].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  	vertices [12].Color = Colors.Transparent;  	vertices [13].Color = Colors.Transparent;  	vertices [14].Color = Colors.Transparent;  	vertices [15].Color = Colors.Transparent;  	vertices [16].Color = Colors.Transparent;  	vertices [17].Color = Colors.Transparent;  	vertices [18].Color = Colors.Transparent;  	vertices [19].Color = Colors.Transparent;  	vertices [20].Color = Colors.Transparent;  	vertices [21].Color = Colors.Transparent;  	vertices [22].Color = Colors.Transparent;  	vertices [23].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  	vertices [12].Color = Colors.Transparent;  	vertices [13].Color = Colors.Transparent;  	vertices [14].Color = Colors.Transparent;  	vertices [15].Color = Colors.Transparent;  	vertices [16].Color = Colors.Transparent;  	vertices [17].Color = Colors.Transparent;  	vertices [18].Color = Colors.Transparent;  	vertices [19].Color = Colors.Transparent;  	vertices [20].Color = Colors.Transparent;  	vertices [21].Color = Colors.Transparent;  	vertices [22].Color = Colors.Transparent;  	vertices [23].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  	vertices [12].Color = Colors.Transparent;  	vertices [13].Color = Colors.Transparent;  	vertices [14].Color = Colors.Transparent;  	vertices [15].Color = Colors.Transparent;  	vertices [16].Color = Colors.Transparent;  	vertices [17].Color = Colors.Transparent;  	vertices [18].Color = Colors.Transparent;  	vertices [19].Color = Colors.Transparent;  	vertices [20].Color = Colors.Transparent;  	vertices [21].Color = Colors.Transparent;  	vertices [22].Color = Colors.Transparent;  	vertices [23].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  	vertices [12].Color = Colors.Transparent;  	vertices [13].Color = Colors.Transparent;  	vertices [14].Color = Colors.Transparent;  	vertices [15].Color = Colors.Transparent;  	vertices [16].Color = Colors.Transparent;  	vertices [17].Color = Colors.Transparent;  	vertices [18].Color = Colors.Transparent;  	vertices [19].Color = Colors.Transparent;  	vertices [20].Color = Colors.Transparent;  	vertices [21].Color = Colors.Transparent;  	vertices [22].Color = Colors.Transparent;  	vertices [23].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  	vertices [12].Color = Colors.Transparent;  	vertices [13].Color = Colors.Transparent;  	vertices [14].Color = Colors.Transparent;  	vertices [15].Color = Colors.Transparent;  	vertices [16].Color = Colors.Transparent;  	vertices [17].Color = Colors.Transparent;  	vertices [18].Color = Colors.Transparent;  	vertices [19].Color = Colors.Transparent;  	vertices [20].Color = Colors.Transparent;  	vertices [21].Color = Colors.Transparent;  	vertices [22].Color = Colors.Transparent;  	vertices [23].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  	vertices [12].Color = Colors.Transparent;  	vertices [13].Color = Colors.Transparent;  	vertices [14].Color = Colors.Transparent;  	vertices [15].Color = Colors.Transparent;  	vertices [16].Color = Colors.Transparent;  	vertices [17].Color = Colors.Transparent;  	vertices [18].Color = Colors.Transparent;  	vertices [19].Color = Colors.Transparent;  	vertices [20].Color = Colors.Transparent;  	vertices [21].Color = Colors.Transparent;  	vertices [22].Color = Colors.Transparent;  	vertices [23].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  	vertices [12].Color = Colors.Transparent;  	vertices [13].Color = Colors.Transparent;  	vertices [14].Color = Colors.Transparent;  	vertices [15].Color = Colors.Transparent;  	vertices [16].Color = Colors.Transparent;  	vertices [17].Color = Colors.Transparent;  	vertices [18].Color = Colors.Transparent;  	vertices [19].Color = Colors.Transparent;  	vertices [20].Color = Colors.Transparent;  	vertices [21].Color = Colors.Transparent;  	vertices [22].Color = Colors.Transparent;  	vertices [23].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  	vertices [12].Color = Colors.Transparent;  	vertices [13].Color = Colors.Transparent;  	vertices [14].Color = Colors.Transparent;  	vertices [15].Color = Colors.Transparent;  	vertices [16].Color = Colors.Transparent;  	vertices [17].Color = Colors.Transparent;  	vertices [18].Color = Colors.Transparent;  	vertices [19].Color = Colors.Transparent;  	vertices [20].Color = Colors.Transparent;  	vertices [21].Color = Colors.Transparent;  	vertices [22].Color = Colors.Transparent;  	vertices [23].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if ((clipArea.TopY >= innerBottomRight.Y) || (clipArea.BottomY <= innerTopLeft.Y)) {  	vertices [12].Color = Colors.Transparent;  	vertices [13].Color = Colors.Transparent;  	vertices [14].Color = Colors.Transparent;  	vertices [15].Color = Colors.Transparent;  	vertices [16].Color = Colors.Transparent;  	vertices [17].Color = Colors.Transparent;  	vertices [18].Color = Colors.Transparent;  	vertices [19].Color = Colors.Transparent;  	vertices [20].Color = Colors.Transparent;  	vertices [21].Color = Colors.Transparent;  	vertices [22].Color = Colors.Transparent;  	vertices [23].Color = Colors.Transparent;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [12].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [13].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [14].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [15].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [16].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [17].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [18].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [19].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [20].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [21].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [22].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: vertices [23].Color = Colors.Transparent;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea.TopLeft.X < innerTopLeft.X) {  	float k = clipArea.TopLeft.X / border.X;  	FixVertices (ref vertices' COLUMN_1' 3' k);  }  else if (clipArea.TopLeft.X < innerBottomRight.X) {  	float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  	FixVertices (ref vertices' COLUMN_3' 7' k);  }  else {  	float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  	FixVertices (ref vertices' COLUMN_5' 11' k);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea.TopLeft.X < innerTopLeft.X) {  	float k = clipArea.TopLeft.X / border.X;  	FixVertices (ref vertices' COLUMN_1' 3' k);  }  else if (clipArea.TopLeft.X < innerBottomRight.X) {  	float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  	FixVertices (ref vertices' COLUMN_3' 7' k);  }  else {  	float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  	FixVertices (ref vertices' COLUMN_5' 11' k);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea.TopLeft.X < innerTopLeft.X) {  	float k = clipArea.TopLeft.X / border.X;  	FixVertices (ref vertices' COLUMN_1' 3' k);  }  else if (clipArea.TopLeft.X < innerBottomRight.X) {  	float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  	FixVertices (ref vertices' COLUMN_3' 7' k);  }  else {  	float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  	FixVertices (ref vertices' COLUMN_5' 11' k);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: FixVertices (ref vertices' COLUMN_1' 3' k);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea.TopLeft.X < innerBottomRight.X) {  	float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  	FixVertices (ref vertices' COLUMN_3' 7' k);  }  else {  	float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  	FixVertices (ref vertices' COLUMN_5' 11' k);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea.TopLeft.X < innerBottomRight.X) {  	float k = (clipArea.TopLeft.X - innerTopLeft.X) / (centerSize.X);  	FixVertices (ref vertices' COLUMN_3' 7' k);  }  else {  	float k = (clipArea.TopLeft.X - innerBottomRight.X) / border.W;  	FixVertices (ref vertices' COLUMN_5' 11' k);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: FixVertices (ref vertices' COLUMN_3' 7' k);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: FixVertices (ref vertices' COLUMN_5' 11' k);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea.BottomRight.X > innerBottomRight.X) {  	float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  	FixVertices (ref vertices' COLUMN_6' 8' k);  }  else if (clipArea.BottomRight.X > innerTopLeft.X) {  	float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  	FixVertices (ref vertices' COLUMN_4' 4' k);  }  else {  	float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  	FixVertices (ref vertices' COLUMN_2' 0' k);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea.BottomRight.X > innerBottomRight.X) {  	float k = (bottomRight.X - clipArea.BottomRight.X) / border.W;  	FixVertices (ref vertices' COLUMN_6' 8' k);  }  else if (clipArea.BottomRight.X > innerTopLeft.X) {  	float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  	FixVertices (ref vertices' COLUMN_4' 4' k);  }  else {  	float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  	FixVertices (ref vertices' COLUMN_2' 0' k);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: FixVertices (ref vertices' COLUMN_6' 8' k);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea.BottomRight.X > innerTopLeft.X) {  	float k = (innerBottomRight.X - clipArea.BottomRight.X) / (centerSize.X);  	FixVertices (ref vertices' COLUMN_4' 4' k);  }  else {  	float k = (topLeft.X - clipArea.BottomRight.X) / border.X;  	FixVertices (ref vertices' COLUMN_2' 0' k);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: FixVertices (ref vertices' COLUMN_4' 4' k);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea.TopLeft.Y < innerTopLeft.Y) {  	float k = clipArea.TopLeft.Y / border.Y;  	FixVertices (ref vertices' ROW_1' 1' k);  }  else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  	float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  	FixVertices (ref vertices' ROW_3' 13' k);  }  else {  	float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  	FixVertices (ref vertices' ROW_5' 25' k);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea.TopLeft.Y < innerTopLeft.Y) {  	float k = clipArea.TopLeft.Y / border.Y;  	FixVertices (ref vertices' ROW_1' 1' k);  }  else if (clipArea.TopLeft.Y < innerBottomRight.Y) {  	float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  	FixVertices (ref vertices' ROW_3' 13' k);  }  else {  	float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  	FixVertices (ref vertices' ROW_5' 25' k);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea.TopLeft.Y < innerBottomRight.Y) {  	float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  	FixVertices (ref vertices' ROW_3' 13' k);  }  else {  	float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  	FixVertices (ref vertices' ROW_5' 25' k);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea.TopLeft.Y < innerBottomRight.Y) {  	float k = (clipArea.TopLeft.Y - innerTopLeft.Y) / (centerSize.Y);  	FixVertices (ref vertices' ROW_3' 13' k);  }  else {  	float k = (clipArea.TopLeft.Y - innerBottomRight.Y) / border.Z;  	FixVertices (ref vertices' ROW_5' 25' k);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: FixVertices (ref vertices' ROW_3' 13' k);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: FixVertices (ref vertices' ROW_5' 25' k);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea.BottomRight.Y > innerBottomRight.Y) {  	float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  	FixVertices (ref vertices' ROW_6' 24' k);  }  else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  	float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  	FixVertices (ref vertices' ROW_4' 12' k);  }  else {  	float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  	FixVertices (ref vertices' ROW_2' 0' k);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea.BottomRight.Y > innerBottomRight.Y) {  	float k = (bottomRight.Y - clipArea.BottomRight.Y) / border.Z;  	FixVertices (ref vertices' ROW_6' 24' k);  }  else if (clipArea.BottomRight.Y > innerTopLeft.Y) {  	float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  	FixVertices (ref vertices' ROW_4' 12' k);  }  else {  	float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  	FixVertices (ref vertices' ROW_2' 0' k);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: FixVertices (ref vertices' ROW_6' 24' k);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: if (clipArea.BottomRight.Y > innerTopLeft.Y) {  	float k = (innerBottomRight.Y - clipArea.BottomRight.Y) / (centerSize.Y);  	FixVertices (ref vertices' ROW_4' 12' k);  }  else {  	float k = (topLeft.Y - clipArea.BottomRight.Y) / border.Y;  	FixVertices (ref vertices' ROW_2' 0' k);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Skin,C:\repos\SirePi_duality-frozen\UI\Resources\Skin.cs,Clip,The following statement contains a magic number: FixVertices (ref vertices' ROW_4' 12' k);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Button,C:\repos\SirePi_duality-frozen\UI\Widgets\Button.cs,DrawCanvas,The following statement contains a magic number: if (!String.IsNullOrWhiteSpace (_text)) {  	if (_textFont.Res != null && _fText.Fonts [0] != _textFont) {  		_fText.Fonts [0] = _textFont;  	}  	_fText.SourceText = _text;  	Vector3 buttonCenter = (_points [5].WorldCoords + _points [10].WorldCoords) / 2;  	inCanvas.PushState ();  	inCanvas.State.ColorTint = _textColor;  	inCanvas.State.TransformAngle = GameObj.Transform.Angle;  	inCanvas.DrawText (_fText' buttonCenter.X' buttonCenter.Y' buttonCenter.Z + DELTA_Z' null' Alignment.Center);  	inCanvas.PopState ();  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Button,C:\repos\SirePi_duality-frozen\UI\Widgets\Button.cs,DrawCanvas,The following statement contains a magic number: if (!String.IsNullOrWhiteSpace (_text)) {  	if (_textFont.Res != null && _fText.Fonts [0] != _textFont) {  		_fText.Fonts [0] = _textFont;  	}  	_fText.SourceText = _text;  	Vector3 buttonCenter = (_points [5].WorldCoords + _points [10].WorldCoords) / 2;  	inCanvas.PushState ();  	inCanvas.State.ColorTint = _textColor;  	inCanvas.State.TransformAngle = GameObj.Transform.Angle;  	inCanvas.DrawText (_fText' buttonCenter.X' buttonCenter.Y' buttonCenter.Z + DELTA_Z' null' Alignment.Center);  	inCanvas.PopState ();  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Button,C:\repos\SirePi_duality-frozen\UI\Widgets\Button.cs,DrawCanvas,The following statement contains a magic number: if (!String.IsNullOrWhiteSpace (_text)) {  	if (_textFont.Res != null && _fText.Fonts [0] != _textFont) {  		_fText.Fonts [0] = _textFont;  	}  	_fText.SourceText = _text;  	Vector3 buttonCenter = (_points [5].WorldCoords + _points [10].WorldCoords) / 2;  	inCanvas.PushState ();  	inCanvas.State.ColorTint = _textColor;  	inCanvas.State.TransformAngle = GameObj.Transform.Angle;  	inCanvas.DrawText (_fText' buttonCenter.X' buttonCenter.Y' buttonCenter.Z + DELTA_Z' null' Alignment.Center);  	inCanvas.PopState ();  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,CheckButton,C:\repos\SirePi_duality-frozen\UI\Widgets\CheckButton.cs,DrawCanvas,The following statement contains a magic number: if (!String.IsNullOrWhiteSpace (_text)) {  	if (_textFont.Res != null && _fText.Fonts [0] != _textFont) {  		_fText.Fonts [0] = _textFont;  	}  	_fText.SourceText = _text;  	Vector3 buttonCenter = (_points [5].WorldCoords + _points [10].WorldCoords) / 2;  	inCanvas.PushState ();  	inCanvas.State.ColorTint = _textColor;  	inCanvas.State.TransformAngle = GameObj.Transform.Angle;  	inCanvas.DrawText (_fText' buttonCenter.X' buttonCenter.Y' buttonCenter.Z + DELTA_Z' null' Alignment.Center);  	inCanvas.PopState ();  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,CheckButton,C:\repos\SirePi_duality-frozen\UI\Widgets\CheckButton.cs,DrawCanvas,The following statement contains a magic number: if (!String.IsNullOrWhiteSpace (_text)) {  	if (_textFont.Res != null && _fText.Fonts [0] != _textFont) {  		_fText.Fonts [0] = _textFont;  	}  	_fText.SourceText = _text;  	Vector3 buttonCenter = (_points [5].WorldCoords + _points [10].WorldCoords) / 2;  	inCanvas.PushState ();  	inCanvas.State.ColorTint = _textColor;  	inCanvas.State.TransformAngle = GameObj.Transform.Angle;  	inCanvas.DrawText (_fText' buttonCenter.X' buttonCenter.Y' buttonCenter.Z + DELTA_Z' null' Alignment.Center);  	inCanvas.PopState ();  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,CheckButton,C:\repos\SirePi_duality-frozen\UI\Widgets\CheckButton.cs,DrawCanvas,The following statement contains a magic number: if (!String.IsNullOrWhiteSpace (_text)) {  	if (_textFont.Res != null && _fText.Fonts [0] != _textFont) {  		_fText.Fonts [0] = _textFont;  	}  	_fText.SourceText = _text;  	Vector3 buttonCenter = (_points [5].WorldCoords + _points [10].WorldCoords) / 2;  	inCanvas.PushState ();  	inCanvas.State.ColorTint = _textColor;  	inCanvas.State.TransformAngle = GameObj.Transform.Angle;  	inCanvas.DrawText (_fText' buttonCenter.X' buttonCenter.Y' buttonCenter.Z + DELTA_Z' null' Alignment.Center);  	inCanvas.PopState ();  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,CommandGrid,C:\repos\SirePi_duality-frozen\UI\Widgets\CommandGrid.cs,DrawCanvas,The following statement contains a magic number: if (_items != null && _items.Count > 0) {  	inCanvas.PushState ();  	inCanvas.State.ColorTint = _textColor;  	inCanvas.State.TransformAngle = GameObj.Transform.Angle;  	Vector3 origin = _points [5].WorldCoords;  	if (_rows > 0) {  		int lastColumn = 0;  		int itemRow = 0;  		int firstColumn = 0;  		if (_scrollComponent != null) {  			firstColumn = _scrollComponent.Value;  		}  		for (int i = 0; i < _items.Count; i++) {  			ushort itemColumn = (ushort)MathF.Floor (i / _rows);  			if (itemColumn != lastColumn) {  				lastColumn = itemColumn;  				itemRow = 0;  			}  			if (itemColumn >= firstColumn && itemColumn < firstColumn + _visibleColumns) {  				_fText.SourceText = _items [i].ToString ();  				Vector3 topLeft = origin + new Vector3 ((_gridCellSize.X * (itemColumn - firstColumn))' (_gridCellSize.Y * itemRow)' DELTA_Z);  				inCanvas.DrawText (_fText' topLeft.X + _itemPadding.X' topLeft.Y + _itemPadding.Y' topLeft.Z' null' Alignment.TopLeft);  			}  			itemRow++;  		}  	}  	inCanvas.PopState ();  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,CommandGrid,C:\repos\SirePi_duality-frozen\UI\Widgets\CommandGrid.cs,AddHighlight,The following statement contains a magic number: t.RelativePos = new Vector3 (Rect.W / 2' Rect.H / 2' DELTA_Z / 2);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,CommandGrid,C:\repos\SirePi_duality-frozen\UI\Widgets\CommandGrid.cs,AddHighlight,The following statement contains a magic number: t.RelativePos = new Vector3 (Rect.W / 2' Rect.H / 2' DELTA_Z / 2);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,CommandGrid,C:\repos\SirePi_duality-frozen\UI\Widgets\CommandGrid.cs,AddHighlight,The following statement contains a magic number: t.RelativePos = new Vector3 (Rect.W / 2' Rect.H / 2' DELTA_Z / 2);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,DropDownButton,C:\repos\SirePi_duality-frozen\UI\Widgets\DropDownButton.cs,DropDownButton,The following statement contains a magic number: _dropDownHeight = 100;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,DropDownButton,C:\repos\SirePi_duality-frozen\UI\Widgets\DropDownButton.cs,DropDownButton,The following statement contains a magic number: _scrollSpeed = 5;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,DropDownButton,C:\repos\SirePi_duality-frozen\UI\Widgets\DropDownButton.cs,DrawCanvas,The following statement contains a magic number: if (_listBoxComponent != null) {  	Vector3 buttonLeft = (_points [5].WorldCoords + _points [9].WorldCoords) / 2;  	if (_listBoxComponent.SelectedItem != null) {  		if (_textFont.Res != null && _text.Fonts [0] != _textFont) {  			_text.Fonts [0] = _textFont;  		}  		_text.SourceText = _listBoxComponent.SelectedItem.ToString ();  		inCanvas.PushState ();  		inCanvas.State.ColorTint = _textColor;  		inCanvas.State.TransformAngle = GameObj.Transform.Angle;  		inCanvas.DrawText (_text' buttonLeft.X' buttonLeft.Y' buttonLeft.Z + DELTA_Z' null' Alignment.Left);  		inCanvas.PopState ();  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,DropDownButton,C:\repos\SirePi_duality-frozen\UI\Widgets\DropDownButton.cs,DrawCanvas,The following statement contains a magic number: if (_listBoxComponent != null) {  	Vector3 buttonLeft = (_points [5].WorldCoords + _points [9].WorldCoords) / 2;  	if (_listBoxComponent.SelectedItem != null) {  		if (_textFont.Res != null && _text.Fonts [0] != _textFont) {  			_text.Fonts [0] = _textFont;  		}  		_text.SourceText = _listBoxComponent.SelectedItem.ToString ();  		inCanvas.PushState ();  		inCanvas.State.ColorTint = _textColor;  		inCanvas.State.TransformAngle = GameObj.Transform.Angle;  		inCanvas.DrawText (_text' buttonLeft.X' buttonLeft.Y' buttonLeft.Z + DELTA_Z' null' Alignment.Left);  		inCanvas.PopState ();  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,DropDownButton,C:\repos\SirePi_duality-frozen\UI\Widgets\DropDownButton.cs,DrawCanvas,The following statement contains a magic number: if (_listBoxComponent != null) {  	Vector3 buttonLeft = (_points [5].WorldCoords + _points [9].WorldCoords) / 2;  	if (_listBoxComponent.SelectedItem != null) {  		if (_textFont.Res != null && _text.Fonts [0] != _textFont) {  			_text.Fonts [0] = _textFont;  		}  		_text.SourceText = _listBoxComponent.SelectedItem.ToString ();  		inCanvas.PushState ();  		inCanvas.State.ColorTint = _textColor;  		inCanvas.State.TransformAngle = GameObj.Transform.Angle;  		inCanvas.DrawText (_text' buttonLeft.X' buttonLeft.Y' buttonLeft.Z + DELTA_Z' null' Alignment.Left);  		inCanvas.PopState ();  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,ListBox,C:\repos\SirePi_duality-frozen\UI\Widgets\ListBox.cs,ListBox,The following statement contains a magic number: _listArea = new Polygon (4);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,ListBox,C:\repos\SirePi_duality-frozen\UI\Widgets\ListBox.cs,ListBox,The following statement contains a magic number: _testPolygon = new Polygon (4);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,ListBox,C:\repos\SirePi_duality-frozen\UI\Widgets\ListBox.cs,MouseDown,The following statement contains a magic number: if (e.Button == MouseButton.Left) {  	float top = 0;  	float bottom = _visibleHeight;  	Vector2 point = new Vector2 (e.X' e.Y);  	if (_isScrollbarRequired) {  		top = _scrollComponent.Value;  		bottom = _scrollComponent.Value + _visibleHeight;  	}  	float delta = bottom - top;  	Vector2 deltaLeft = (_activeAreaOnScreen [3] - _activeAreaOnScreen [0]) / delta;  	Vector2 deltaRight = (_activeAreaOnScreen [2] - _activeAreaOnScreen [1]) / delta;  	for (int i = 0; i < _fText.TextMetrics.LineBounds.Count; i++) {  		Rect r = _fText.TextMetrics.LineBounds [i];  		if (!(r.BottomY < top || r.TopY > bottom)) {  			float realTop = Math.Max (r.TopY' top) - top;  			float realBottom = Math.Min (r.BottomY' bottom) - top;  			_testPolygon [0] = _activeAreaOnScreen [0] + (deltaLeft * realTop);  			_testPolygon [1] = _activeAreaOnScreen [1] + (deltaRight * realTop);  			_testPolygon [2] = _activeAreaOnScreen [1] + (deltaRight * realBottom);  			_testPolygon [3] = _activeAreaOnScreen [0] + (deltaLeft * realBottom);  			if (_testPolygon.Contains (point)) {  				SelectedItem = _items [i];  				break;  			}  		}  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,ListBox,C:\repos\SirePi_duality-frozen\UI\Widgets\ListBox.cs,MouseDown,The following statement contains a magic number: if (e.Button == MouseButton.Left) {  	float top = 0;  	float bottom = _visibleHeight;  	Vector2 point = new Vector2 (e.X' e.Y);  	if (_isScrollbarRequired) {  		top = _scrollComponent.Value;  		bottom = _scrollComponent.Value + _visibleHeight;  	}  	float delta = bottom - top;  	Vector2 deltaLeft = (_activeAreaOnScreen [3] - _activeAreaOnScreen [0]) / delta;  	Vector2 deltaRight = (_activeAreaOnScreen [2] - _activeAreaOnScreen [1]) / delta;  	for (int i = 0; i < _fText.TextMetrics.LineBounds.Count; i++) {  		Rect r = _fText.TextMetrics.LineBounds [i];  		if (!(r.BottomY < top || r.TopY > bottom)) {  			float realTop = Math.Max (r.TopY' top) - top;  			float realBottom = Math.Min (r.BottomY' bottom) - top;  			_testPolygon [0] = _activeAreaOnScreen [0] + (deltaLeft * realTop);  			_testPolygon [1] = _activeAreaOnScreen [1] + (deltaRight * realTop);  			_testPolygon [2] = _activeAreaOnScreen [1] + (deltaRight * realBottom);  			_testPolygon [3] = _activeAreaOnScreen [0] + (deltaLeft * realBottom);  			if (_testPolygon.Contains (point)) {  				SelectedItem = _items [i];  				break;  			}  		}  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,ListBox,C:\repos\SirePi_duality-frozen\UI\Widgets\ListBox.cs,MouseDown,The following statement contains a magic number: if (e.Button == MouseButton.Left) {  	float top = 0;  	float bottom = _visibleHeight;  	Vector2 point = new Vector2 (e.X' e.Y);  	if (_isScrollbarRequired) {  		top = _scrollComponent.Value;  		bottom = _scrollComponent.Value + _visibleHeight;  	}  	float delta = bottom - top;  	Vector2 deltaLeft = (_activeAreaOnScreen [3] - _activeAreaOnScreen [0]) / delta;  	Vector2 deltaRight = (_activeAreaOnScreen [2] - _activeAreaOnScreen [1]) / delta;  	for (int i = 0; i < _fText.TextMetrics.LineBounds.Count; i++) {  		Rect r = _fText.TextMetrics.LineBounds [i];  		if (!(r.BottomY < top || r.TopY > bottom)) {  			float realTop = Math.Max (r.TopY' top) - top;  			float realBottom = Math.Min (r.BottomY' bottom) - top;  			_testPolygon [0] = _activeAreaOnScreen [0] + (deltaLeft * realTop);  			_testPolygon [1] = _activeAreaOnScreen [1] + (deltaRight * realTop);  			_testPolygon [2] = _activeAreaOnScreen [1] + (deltaRight * realBottom);  			_testPolygon [3] = _activeAreaOnScreen [0] + (deltaLeft * realBottom);  			if (_testPolygon.Contains (point)) {  				SelectedItem = _items [i];  				break;  			}  		}  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,ListBox,C:\repos\SirePi_duality-frozen\UI\Widgets\ListBox.cs,MouseDown,The following statement contains a magic number: if (e.Button == MouseButton.Left) {  	float top = 0;  	float bottom = _visibleHeight;  	Vector2 point = new Vector2 (e.X' e.Y);  	if (_isScrollbarRequired) {  		top = _scrollComponent.Value;  		bottom = _scrollComponent.Value + _visibleHeight;  	}  	float delta = bottom - top;  	Vector2 deltaLeft = (_activeAreaOnScreen [3] - _activeAreaOnScreen [0]) / delta;  	Vector2 deltaRight = (_activeAreaOnScreen [2] - _activeAreaOnScreen [1]) / delta;  	for (int i = 0; i < _fText.TextMetrics.LineBounds.Count; i++) {  		Rect r = _fText.TextMetrics.LineBounds [i];  		if (!(r.BottomY < top || r.TopY > bottom)) {  			float realTop = Math.Max (r.TopY' top) - top;  			float realBottom = Math.Min (r.BottomY' bottom) - top;  			_testPolygon [0] = _activeAreaOnScreen [0] + (deltaLeft * realTop);  			_testPolygon [1] = _activeAreaOnScreen [1] + (deltaRight * realTop);  			_testPolygon [2] = _activeAreaOnScreen [1] + (deltaRight * realBottom);  			_testPolygon [3] = _activeAreaOnScreen [0] + (deltaLeft * realBottom);  			if (_testPolygon.Contains (point)) {  				SelectedItem = _items [i];  				break;  			}  		}  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,ListBox,C:\repos\SirePi_duality-frozen\UI\Widgets\ListBox.cs,MouseDown,The following statement contains a magic number: for (int i = 0; i < _fText.TextMetrics.LineBounds.Count; i++) {  	Rect r = _fText.TextMetrics.LineBounds [i];  	if (!(r.BottomY < top || r.TopY > bottom)) {  		float realTop = Math.Max (r.TopY' top) - top;  		float realBottom = Math.Min (r.BottomY' bottom) - top;  		_testPolygon [0] = _activeAreaOnScreen [0] + (deltaLeft * realTop);  		_testPolygon [1] = _activeAreaOnScreen [1] + (deltaRight * realTop);  		_testPolygon [2] = _activeAreaOnScreen [1] + (deltaRight * realBottom);  		_testPolygon [3] = _activeAreaOnScreen [0] + (deltaLeft * realBottom);  		if (_testPolygon.Contains (point)) {  			SelectedItem = _items [i];  			break;  		}  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,ListBox,C:\repos\SirePi_duality-frozen\UI\Widgets\ListBox.cs,MouseDown,The following statement contains a magic number: for (int i = 0; i < _fText.TextMetrics.LineBounds.Count; i++) {  	Rect r = _fText.TextMetrics.LineBounds [i];  	if (!(r.BottomY < top || r.TopY > bottom)) {  		float realTop = Math.Max (r.TopY' top) - top;  		float realBottom = Math.Min (r.BottomY' bottom) - top;  		_testPolygon [0] = _activeAreaOnScreen [0] + (deltaLeft * realTop);  		_testPolygon [1] = _activeAreaOnScreen [1] + (deltaRight * realTop);  		_testPolygon [2] = _activeAreaOnScreen [1] + (deltaRight * realBottom);  		_testPolygon [3] = _activeAreaOnScreen [0] + (deltaLeft * realBottom);  		if (_testPolygon.Contains (point)) {  			SelectedItem = _items [i];  			break;  		}  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,ListBox,C:\repos\SirePi_duality-frozen\UI\Widgets\ListBox.cs,MouseDown,The following statement contains a magic number: if (!(r.BottomY < top || r.TopY > bottom)) {  	float realTop = Math.Max (r.TopY' top) - top;  	float realBottom = Math.Min (r.BottomY' bottom) - top;  	_testPolygon [0] = _activeAreaOnScreen [0] + (deltaLeft * realTop);  	_testPolygon [1] = _activeAreaOnScreen [1] + (deltaRight * realTop);  	_testPolygon [2] = _activeAreaOnScreen [1] + (deltaRight * realBottom);  	_testPolygon [3] = _activeAreaOnScreen [0] + (deltaLeft * realBottom);  	if (_testPolygon.Contains (point)) {  		SelectedItem = _items [i];  		break;  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,ListBox,C:\repos\SirePi_duality-frozen\UI\Widgets\ListBox.cs,MouseDown,The following statement contains a magic number: if (!(r.BottomY < top || r.TopY > bottom)) {  	float realTop = Math.Max (r.TopY' top) - top;  	float realBottom = Math.Min (r.BottomY' bottom) - top;  	_testPolygon [0] = _activeAreaOnScreen [0] + (deltaLeft * realTop);  	_testPolygon [1] = _activeAreaOnScreen [1] + (deltaRight * realTop);  	_testPolygon [2] = _activeAreaOnScreen [1] + (deltaRight * realBottom);  	_testPolygon [3] = _activeAreaOnScreen [0] + (deltaLeft * realBottom);  	if (_testPolygon.Contains (point)) {  		SelectedItem = _items [i];  		break;  	}  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,ListBox,C:\repos\SirePi_duality-frozen\UI\Widgets\ListBox.cs,MouseDown,The following statement contains a magic number: _testPolygon [2] = _activeAreaOnScreen [1] + (deltaRight * realBottom);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,ListBox,C:\repos\SirePi_duality-frozen\UI\Widgets\ListBox.cs,MouseDown,The following statement contains a magic number: _testPolygon [3] = _activeAreaOnScreen [0] + (deltaLeft * realBottom);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,ListBox,C:\repos\SirePi_duality-frozen\UI\Widgets\ListBox.cs,AddHighlight,The following statement contains a magic number: t.RelativePos = new Vector3 (Rect.W / 2' Rect.H / 2' DELTA_Z / 2);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,ListBox,C:\repos\SirePi_duality-frozen\UI\Widgets\ListBox.cs,AddHighlight,The following statement contains a magic number: t.RelativePos = new Vector3 (Rect.W / 2' Rect.H / 2' DELTA_Z / 2);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,ListBox,C:\repos\SirePi_duality-frozen\UI\Widgets\ListBox.cs,AddHighlight,The following statement contains a magic number: t.RelativePos = new Vector3 (Rect.W / 2' Rect.H / 2' DELTA_Z / 2);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,MultiLineWidget,C:\repos\SirePi_duality-frozen\UI\Widgets\MultiLineWidget.cs,MultiLineWidget,The following statement contains a magic number: _textVertices = new VertexC1P3T2[4];  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,MultiLineWidget,C:\repos\SirePi_duality-frozen\UI\Widgets\MultiLineWidget.cs,MultiLineWidget,The following statement contains a magic number: _scrollSpeed = 5;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,MultiLineWidget,C:\repos\SirePi_duality-frozen\UI\Widgets\MultiLineWidget.cs,DrawCustom,The following statement contains a magic number: if (!String.IsNullOrWhiteSpace (_fText.SourceText) && _batchInfo != null) {  	_textVertices [0].TexCoord.X = 0;  	_textVertices [1].TexCoord.X = _visibleWidth;  	_textVertices [2].TexCoord.X = _visibleWidth;  	_textVertices [3].TexCoord.X = 0;  	//if (_scrollbar == null || !_scrollbar.Active)  	if (!_isScrollbarRequired) {  		_textVertices [0].TexCoord.Y = 0;  		_textVertices [1].TexCoord.Y = 0;  		_textVertices [2].TexCoord.Y = 1;  		_textVertices [3].TexCoord.Y = 1;  	}  	else {  		_textVertices [0].TexCoord.Y = _scrollComponent.Value;  		_textVertices [1].TexCoord.Y = _textVertices [0].TexCoord.Y;  		_textVertices [2].TexCoord.Y = (_scrollComponent.Value + _visibleHeight);  		_textVertices [3].TexCoord.Y = _textVertices [2].TexCoord.Y;  	}  	Vector2 uvRatio = _batchInfo.MainTexture.Res.UVRatio;  	_textVertices [0].TexCoord *= uvRatio * _uvUnit;  	_textVertices [1].TexCoord *= uvRatio * _uvUnit;  	_textVertices [2].TexCoord *= uvRatio * _uvUnit;  	_textVertices [3].TexCoord *= uvRatio * _uvUnit;  	_textVertices [0].Color = _textColor;  	_textVertices [0].Pos = _points [5].SceneCoords;  	_textVertices [0].Pos.Z += DELTA_Z;  	_textVertices [1].Color = _textColor;  	_textVertices [1].Pos = _points [6].SceneCoords;  	_textVertices [1].Pos.Z += DELTA_Z;  	_textVertices [2].Color = _textColor;  	_textVertices [2].Pos = _points [10].SceneCoords;  	_textVertices [2].Pos.Z += DELTA_Z;  	_textVertices [3].Color = _textColor;  	_textVertices [3].Pos = _points [9].SceneCoords;  	_textVertices [3].Pos.Z += DELTA_Z;  	device.AddVertices (_batchInfo' VertexMode.Quads' _textVertices);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,MultiLineWidget,C:\repos\SirePi_duality-frozen\UI\Widgets\MultiLineWidget.cs,DrawCustom,The following statement contains a magic number: if (!String.IsNullOrWhiteSpace (_fText.SourceText) && _batchInfo != null) {  	_textVertices [0].TexCoord.X = 0;  	_textVertices [1].TexCoord.X = _visibleWidth;  	_textVertices [2].TexCoord.X = _visibleWidth;  	_textVertices [3].TexCoord.X = 0;  	//if (_scrollbar == null || !_scrollbar.Active)  	if (!_isScrollbarRequired) {  		_textVertices [0].TexCoord.Y = 0;  		_textVertices [1].TexCoord.Y = 0;  		_textVertices [2].TexCoord.Y = 1;  		_textVertices [3].TexCoord.Y = 1;  	}  	else {  		_textVertices [0].TexCoord.Y = _scrollComponent.Value;  		_textVertices [1].TexCoord.Y = _textVertices [0].TexCoord.Y;  		_textVertices [2].TexCoord.Y = (_scrollComponent.Value + _visibleHeight);  		_textVertices [3].TexCoord.Y = _textVertices [2].TexCoord.Y;  	}  	Vector2 uvRatio = _batchInfo.MainTexture.Res.UVRatio;  	_textVertices [0].TexCoord *= uvRatio * _uvUnit;  	_textVertices [1].TexCoord *= uvRatio * _uvUnit;  	_textVertices [2].TexCoord *= uvRatio * _uvUnit;  	_textVertices [3].TexCoord *= uvRatio * _uvUnit;  	_textVertices [0].Color = _textColor;  	_textVertices [0].Pos = _points [5].SceneCoords;  	_textVertices [0].Pos.Z += DELTA_Z;  	_textVertices [1].Color = _textColor;  	_textVertices [1].Pos = _points [6].SceneCoords;  	_textVertices [1].Pos.Z += DELTA_Z;  	_textVertices [2].Color = _textColor;  	_textVertices [2].Pos = _points [10].SceneCoords;  	_textVertices [2].Pos.Z += DELTA_Z;  	_textVertices [3].Color = _textColor;  	_textVertices [3].Pos = _points [9].SceneCoords;  	_textVertices [3].Pos.Z += DELTA_Z;  	device.AddVertices (_batchInfo' VertexMode.Quads' _textVertices);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,MultiLineWidget,C:\repos\SirePi_duality-frozen\UI\Widgets\MultiLineWidget.cs,DrawCustom,The following statement contains a magic number: if (!String.IsNullOrWhiteSpace (_fText.SourceText) && _batchInfo != null) {  	_textVertices [0].TexCoord.X = 0;  	_textVertices [1].TexCoord.X = _visibleWidth;  	_textVertices [2].TexCoord.X = _visibleWidth;  	_textVertices [3].TexCoord.X = 0;  	//if (_scrollbar == null || !_scrollbar.Active)  	if (!_isScrollbarRequired) {  		_textVertices [0].TexCoord.Y = 0;  		_textVertices [1].TexCoord.Y = 0;  		_textVertices [2].TexCoord.Y = 1;  		_textVertices [3].TexCoord.Y = 1;  	}  	else {  		_textVertices [0].TexCoord.Y = _scrollComponent.Value;  		_textVertices [1].TexCoord.Y = _textVertices [0].TexCoord.Y;  		_textVertices [2].TexCoord.Y = (_scrollComponent.Value + _visibleHeight);  		_textVertices [3].TexCoord.Y = _textVertices [2].TexCoord.Y;  	}  	Vector2 uvRatio = _batchInfo.MainTexture.Res.UVRatio;  	_textVertices [0].TexCoord *= uvRatio * _uvUnit;  	_textVertices [1].TexCoord *= uvRatio * _uvUnit;  	_textVertices [2].TexCoord *= uvRatio * _uvUnit;  	_textVertices [3].TexCoord *= uvRatio * _uvUnit;  	_textVertices [0].Color = _textColor;  	_textVertices [0].Pos = _points [5].SceneCoords;  	_textVertices [0].Pos.Z += DELTA_Z;  	_textVertices [1].Color = _textColor;  	_textVertices [1].Pos = _points [6].SceneCoords;  	_textVertices [1].Pos.Z += DELTA_Z;  	_textVertices [2].Color = _textColor;  	_textVertices [2].Pos = _points [10].SceneCoords;  	_textVertices [2].Pos.Z += DELTA_Z;  	_textVertices [3].Color = _textColor;  	_textVertices [3].Pos = _points [9].SceneCoords;  	_textVertices [3].Pos.Z += DELTA_Z;  	device.AddVertices (_batchInfo' VertexMode.Quads' _textVertices);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,MultiLineWidget,C:\repos\SirePi_duality-frozen\UI\Widgets\MultiLineWidget.cs,DrawCustom,The following statement contains a magic number: if (!String.IsNullOrWhiteSpace (_fText.SourceText) && _batchInfo != null) {  	_textVertices [0].TexCoord.X = 0;  	_textVertices [1].TexCoord.X = _visibleWidth;  	_textVertices [2].TexCoord.X = _visibleWidth;  	_textVertices [3].TexCoord.X = 0;  	//if (_scrollbar == null || !_scrollbar.Active)  	if (!_isScrollbarRequired) {  		_textVertices [0].TexCoord.Y = 0;  		_textVertices [1].TexCoord.Y = 0;  		_textVertices [2].TexCoord.Y = 1;  		_textVertices [3].TexCoord.Y = 1;  	}  	else {  		_textVertices [0].TexCoord.Y = _scrollComponent.Value;  		_textVertices [1].TexCoord.Y = _textVertices [0].TexCoord.Y;  		_textVertices [2].TexCoord.Y = (_scrollComponent.Value + _visibleHeight);  		_textVertices [3].TexCoord.Y = _textVertices [2].TexCoord.Y;  	}  	Vector2 uvRatio = _batchInfo.MainTexture.Res.UVRatio;  	_textVertices [0].TexCoord *= uvRatio * _uvUnit;  	_textVertices [1].TexCoord *= uvRatio * _uvUnit;  	_textVertices [2].TexCoord *= uvRatio * _uvUnit;  	_textVertices [3].TexCoord *= uvRatio * _uvUnit;  	_textVertices [0].Color = _textColor;  	_textVertices [0].Pos = _points [5].SceneCoords;  	_textVertices [0].Pos.Z += DELTA_Z;  	_textVertices [1].Color = _textColor;  	_textVertices [1].Pos = _points [6].SceneCoords;  	_textVertices [1].Pos.Z += DELTA_Z;  	_textVertices [2].Color = _textColor;  	_textVertices [2].Pos = _points [10].SceneCoords;  	_textVertices [2].Pos.Z += DELTA_Z;  	_textVertices [3].Color = _textColor;  	_textVertices [3].Pos = _points [9].SceneCoords;  	_textVertices [3].Pos.Z += DELTA_Z;  	device.AddVertices (_batchInfo' VertexMode.Quads' _textVertices);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,MultiLineWidget,C:\repos\SirePi_duality-frozen\UI\Widgets\MultiLineWidget.cs,DrawCustom,The following statement contains a magic number: if (!String.IsNullOrWhiteSpace (_fText.SourceText) && _batchInfo != null) {  	_textVertices [0].TexCoord.X = 0;  	_textVertices [1].TexCoord.X = _visibleWidth;  	_textVertices [2].TexCoord.X = _visibleWidth;  	_textVertices [3].TexCoord.X = 0;  	//if (_scrollbar == null || !_scrollbar.Active)  	if (!_isScrollbarRequired) {  		_textVertices [0].TexCoord.Y = 0;  		_textVertices [1].TexCoord.Y = 0;  		_textVertices [2].TexCoord.Y = 1;  		_textVertices [3].TexCoord.Y = 1;  	}  	else {  		_textVertices [0].TexCoord.Y = _scrollComponent.Value;  		_textVertices [1].TexCoord.Y = _textVertices [0].TexCoord.Y;  		_textVertices [2].TexCoord.Y = (_scrollComponent.Value + _visibleHeight);  		_textVertices [3].TexCoord.Y = _textVertices [2].TexCoord.Y;  	}  	Vector2 uvRatio = _batchInfo.MainTexture.Res.UVRatio;  	_textVertices [0].TexCoord *= uvRatio * _uvUnit;  	_textVertices [1].TexCoord *= uvRatio * _uvUnit;  	_textVertices [2].TexCoord *= uvRatio * _uvUnit;  	_textVertices [3].TexCoord *= uvRatio * _uvUnit;  	_textVertices [0].Color = _textColor;  	_textVertices [0].Pos = _points [5].SceneCoords;  	_textVertices [0].Pos.Z += DELTA_Z;  	_textVertices [1].Color = _textColor;  	_textVertices [1].Pos = _points [6].SceneCoords;  	_textVertices [1].Pos.Z += DELTA_Z;  	_textVertices [2].Color = _textColor;  	_textVertices [2].Pos = _points [10].SceneCoords;  	_textVertices [2].Pos.Z += DELTA_Z;  	_textVertices [3].Color = _textColor;  	_textVertices [3].Pos = _points [9].SceneCoords;  	_textVertices [3].Pos.Z += DELTA_Z;  	device.AddVertices (_batchInfo' VertexMode.Quads' _textVertices);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,MultiLineWidget,C:\repos\SirePi_duality-frozen\UI\Widgets\MultiLineWidget.cs,DrawCustom,The following statement contains a magic number: if (!String.IsNullOrWhiteSpace (_fText.SourceText) && _batchInfo != null) {  	_textVertices [0].TexCoord.X = 0;  	_textVertices [1].TexCoord.X = _visibleWidth;  	_textVertices [2].TexCoord.X = _visibleWidth;  	_textVertices [3].TexCoord.X = 0;  	//if (_scrollbar == null || !_scrollbar.Active)  	if (!_isScrollbarRequired) {  		_textVertices [0].TexCoord.Y = 0;  		_textVertices [1].TexCoord.Y = 0;  		_textVertices [2].TexCoord.Y = 1;  		_textVertices [3].TexCoord.Y = 1;  	}  	else {  		_textVertices [0].TexCoord.Y = _scrollComponent.Value;  		_textVertices [1].TexCoord.Y = _textVertices [0].TexCoord.Y;  		_textVertices [2].TexCoord.Y = (_scrollComponent.Value + _visibleHeight);  		_textVertices [3].TexCoord.Y = _textVertices [2].TexCoord.Y;  	}  	Vector2 uvRatio = _batchInfo.MainTexture.Res.UVRatio;  	_textVertices [0].TexCoord *= uvRatio * _uvUnit;  	_textVertices [1].TexCoord *= uvRatio * _uvUnit;  	_textVertices [2].TexCoord *= uvRatio * _uvUnit;  	_textVertices [3].TexCoord *= uvRatio * _uvUnit;  	_textVertices [0].Color = _textColor;  	_textVertices [0].Pos = _points [5].SceneCoords;  	_textVertices [0].Pos.Z += DELTA_Z;  	_textVertices [1].Color = _textColor;  	_textVertices [1].Pos = _points [6].SceneCoords;  	_textVertices [1].Pos.Z += DELTA_Z;  	_textVertices [2].Color = _textColor;  	_textVertices [2].Pos = _points [10].SceneCoords;  	_textVertices [2].Pos.Z += DELTA_Z;  	_textVertices [3].Color = _textColor;  	_textVertices [3].Pos = _points [9].SceneCoords;  	_textVertices [3].Pos.Z += DELTA_Z;  	device.AddVertices (_batchInfo' VertexMode.Quads' _textVertices);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,MultiLineWidget,C:\repos\SirePi_duality-frozen\UI\Widgets\MultiLineWidget.cs,DrawCustom,The following statement contains a magic number: if (!String.IsNullOrWhiteSpace (_fText.SourceText) && _batchInfo != null) {  	_textVertices [0].TexCoord.X = 0;  	_textVertices [1].TexCoord.X = _visibleWidth;  	_textVertices [2].TexCoord.X = _visibleWidth;  	_textVertices [3].TexCoord.X = 0;  	//if (_scrollbar == null || !_scrollbar.Active)  	if (!_isScrollbarRequired) {  		_textVertices [0].TexCoord.Y = 0;  		_textVertices [1].TexCoord.Y = 0;  		_textVertices [2].TexCoord.Y = 1;  		_textVertices [3].TexCoord.Y = 1;  	}  	else {  		_textVertices [0].TexCoord.Y = _scrollComponent.Value;  		_textVertices [1].TexCoord.Y = _textVertices [0].TexCoord.Y;  		_textVertices [2].TexCoord.Y = (_scrollComponent.Value + _visibleHeight);  		_textVertices [3].TexCoord.Y = _textVertices [2].TexCoord.Y;  	}  	Vector2 uvRatio = _batchInfo.MainTexture.Res.UVRatio;  	_textVertices [0].TexCoord *= uvRatio * _uvUnit;  	_textVertices [1].TexCoord *= uvRatio * _uvUnit;  	_textVertices [2].TexCoord *= uvRatio * _uvUnit;  	_textVertices [3].TexCoord *= uvRatio * _uvUnit;  	_textVertices [0].Color = _textColor;  	_textVertices [0].Pos = _points [5].SceneCoords;  	_textVertices [0].Pos.Z += DELTA_Z;  	_textVertices [1].Color = _textColor;  	_textVertices [1].Pos = _points [6].SceneCoords;  	_textVertices [1].Pos.Z += DELTA_Z;  	_textVertices [2].Color = _textColor;  	_textVertices [2].Pos = _points [10].SceneCoords;  	_textVertices [2].Pos.Z += DELTA_Z;  	_textVertices [3].Color = _textColor;  	_textVertices [3].Pos = _points [9].SceneCoords;  	_textVertices [3].Pos.Z += DELTA_Z;  	device.AddVertices (_batchInfo' VertexMode.Quads' _textVertices);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,MultiLineWidget,C:\repos\SirePi_duality-frozen\UI\Widgets\MultiLineWidget.cs,DrawCustom,The following statement contains a magic number: if (!String.IsNullOrWhiteSpace (_fText.SourceText) && _batchInfo != null) {  	_textVertices [0].TexCoord.X = 0;  	_textVertices [1].TexCoord.X = _visibleWidth;  	_textVertices [2].TexCoord.X = _visibleWidth;  	_textVertices [3].TexCoord.X = 0;  	//if (_scrollbar == null || !_scrollbar.Active)  	if (!_isScrollbarRequired) {  		_textVertices [0].TexCoord.Y = 0;  		_textVertices [1].TexCoord.Y = 0;  		_textVertices [2].TexCoord.Y = 1;  		_textVertices [3].TexCoord.Y = 1;  	}  	else {  		_textVertices [0].TexCoord.Y = _scrollComponent.Value;  		_textVertices [1].TexCoord.Y = _textVertices [0].TexCoord.Y;  		_textVertices [2].TexCoord.Y = (_scrollComponent.Value + _visibleHeight);  		_textVertices [3].TexCoord.Y = _textVertices [2].TexCoord.Y;  	}  	Vector2 uvRatio = _batchInfo.MainTexture.Res.UVRatio;  	_textVertices [0].TexCoord *= uvRatio * _uvUnit;  	_textVertices [1].TexCoord *= uvRatio * _uvUnit;  	_textVertices [2].TexCoord *= uvRatio * _uvUnit;  	_textVertices [3].TexCoord *= uvRatio * _uvUnit;  	_textVertices [0].Color = _textColor;  	_textVertices [0].Pos = _points [5].SceneCoords;  	_textVertices [0].Pos.Z += DELTA_Z;  	_textVertices [1].Color = _textColor;  	_textVertices [1].Pos = _points [6].SceneCoords;  	_textVertices [1].Pos.Z += DELTA_Z;  	_textVertices [2].Color = _textColor;  	_textVertices [2].Pos = _points [10].SceneCoords;  	_textVertices [2].Pos.Z += DELTA_Z;  	_textVertices [3].Color = _textColor;  	_textVertices [3].Pos = _points [9].SceneCoords;  	_textVertices [3].Pos.Z += DELTA_Z;  	device.AddVertices (_batchInfo' VertexMode.Quads' _textVertices);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,MultiLineWidget,C:\repos\SirePi_duality-frozen\UI\Widgets\MultiLineWidget.cs,DrawCustom,The following statement contains a magic number: if (!String.IsNullOrWhiteSpace (_fText.SourceText) && _batchInfo != null) {  	_textVertices [0].TexCoord.X = 0;  	_textVertices [1].TexCoord.X = _visibleWidth;  	_textVertices [2].TexCoord.X = _visibleWidth;  	_textVertices [3].TexCoord.X = 0;  	//if (_scrollbar == null || !_scrollbar.Active)  	if (!_isScrollbarRequired) {  		_textVertices [0].TexCoord.Y = 0;  		_textVertices [1].TexCoord.Y = 0;  		_textVertices [2].TexCoord.Y = 1;  		_textVertices [3].TexCoord.Y = 1;  	}  	else {  		_textVertices [0].TexCoord.Y = _scrollComponent.Value;  		_textVertices [1].TexCoord.Y = _textVertices [0].TexCoord.Y;  		_textVertices [2].TexCoord.Y = (_scrollComponent.Value + _visibleHeight);  		_textVertices [3].TexCoord.Y = _textVertices [2].TexCoord.Y;  	}  	Vector2 uvRatio = _batchInfo.MainTexture.Res.UVRatio;  	_textVertices [0].TexCoord *= uvRatio * _uvUnit;  	_textVertices [1].TexCoord *= uvRatio * _uvUnit;  	_textVertices [2].TexCoord *= uvRatio * _uvUnit;  	_textVertices [3].TexCoord *= uvRatio * _uvUnit;  	_textVertices [0].Color = _textColor;  	_textVertices [0].Pos = _points [5].SceneCoords;  	_textVertices [0].Pos.Z += DELTA_Z;  	_textVertices [1].Color = _textColor;  	_textVertices [1].Pos = _points [6].SceneCoords;  	_textVertices [1].Pos.Z += DELTA_Z;  	_textVertices [2].Color = _textColor;  	_textVertices [2].Pos = _points [10].SceneCoords;  	_textVertices [2].Pos.Z += DELTA_Z;  	_textVertices [3].Color = _textColor;  	_textVertices [3].Pos = _points [9].SceneCoords;  	_textVertices [3].Pos.Z += DELTA_Z;  	device.AddVertices (_batchInfo' VertexMode.Quads' _textVertices);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,MultiLineWidget,C:\repos\SirePi_duality-frozen\UI\Widgets\MultiLineWidget.cs,DrawCustom,The following statement contains a magic number: if (!String.IsNullOrWhiteSpace (_fText.SourceText) && _batchInfo != null) {  	_textVertices [0].TexCoord.X = 0;  	_textVertices [1].TexCoord.X = _visibleWidth;  	_textVertices [2].TexCoord.X = _visibleWidth;  	_textVertices [3].TexCoord.X = 0;  	//if (_scrollbar == null || !_scrollbar.Active)  	if (!_isScrollbarRequired) {  		_textVertices [0].TexCoord.Y = 0;  		_textVertices [1].TexCoord.Y = 0;  		_textVertices [2].TexCoord.Y = 1;  		_textVertices [3].TexCoord.Y = 1;  	}  	else {  		_textVertices [0].TexCoord.Y = _scrollComponent.Value;  		_textVertices [1].TexCoord.Y = _textVertices [0].TexCoord.Y;  		_textVertices [2].TexCoord.Y = (_scrollComponent.Value + _visibleHeight);  		_textVertices [3].TexCoord.Y = _textVertices [2].TexCoord.Y;  	}  	Vector2 uvRatio = _batchInfo.MainTexture.Res.UVRatio;  	_textVertices [0].TexCoord *= uvRatio * _uvUnit;  	_textVertices [1].TexCoord *= uvRatio * _uvUnit;  	_textVertices [2].TexCoord *= uvRatio * _uvUnit;  	_textVertices [3].TexCoord *= uvRatio * _uvUnit;  	_textVertices [0].Color = _textColor;  	_textVertices [0].Pos = _points [5].SceneCoords;  	_textVertices [0].Pos.Z += DELTA_Z;  	_textVertices [1].Color = _textColor;  	_textVertices [1].Pos = _points [6].SceneCoords;  	_textVertices [1].Pos.Z += DELTA_Z;  	_textVertices [2].Color = _textColor;  	_textVertices [2].Pos = _points [10].SceneCoords;  	_textVertices [2].Pos.Z += DELTA_Z;  	_textVertices [3].Color = _textColor;  	_textVertices [3].Pos = _points [9].SceneCoords;  	_textVertices [3].Pos.Z += DELTA_Z;  	device.AddVertices (_batchInfo' VertexMode.Quads' _textVertices);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,MultiLineWidget,C:\repos\SirePi_duality-frozen\UI\Widgets\MultiLineWidget.cs,DrawCustom,The following statement contains a magic number: if (!String.IsNullOrWhiteSpace (_fText.SourceText) && _batchInfo != null) {  	_textVertices [0].TexCoord.X = 0;  	_textVertices [1].TexCoord.X = _visibleWidth;  	_textVertices [2].TexCoord.X = _visibleWidth;  	_textVertices [3].TexCoord.X = 0;  	//if (_scrollbar == null || !_scrollbar.Active)  	if (!_isScrollbarRequired) {  		_textVertices [0].TexCoord.Y = 0;  		_textVertices [1].TexCoord.Y = 0;  		_textVertices [2].TexCoord.Y = 1;  		_textVertices [3].TexCoord.Y = 1;  	}  	else {  		_textVertices [0].TexCoord.Y = _scrollComponent.Value;  		_textVertices [1].TexCoord.Y = _textVertices [0].TexCoord.Y;  		_textVertices [2].TexCoord.Y = (_scrollComponent.Value + _visibleHeight);  		_textVertices [3].TexCoord.Y = _textVertices [2].TexCoord.Y;  	}  	Vector2 uvRatio = _batchInfo.MainTexture.Res.UVRatio;  	_textVertices [0].TexCoord *= uvRatio * _uvUnit;  	_textVertices [1].TexCoord *= uvRatio * _uvUnit;  	_textVertices [2].TexCoord *= uvRatio * _uvUnit;  	_textVertices [3].TexCoord *= uvRatio * _uvUnit;  	_textVertices [0].Color = _textColor;  	_textVertices [0].Pos = _points [5].SceneCoords;  	_textVertices [0].Pos.Z += DELTA_Z;  	_textVertices [1].Color = _textColor;  	_textVertices [1].Pos = _points [6].SceneCoords;  	_textVertices [1].Pos.Z += DELTA_Z;  	_textVertices [2].Color = _textColor;  	_textVertices [2].Pos = _points [10].SceneCoords;  	_textVertices [2].Pos.Z += DELTA_Z;  	_textVertices [3].Color = _textColor;  	_textVertices [3].Pos = _points [9].SceneCoords;  	_textVertices [3].Pos.Z += DELTA_Z;  	device.AddVertices (_batchInfo' VertexMode.Quads' _textVertices);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,MultiLineWidget,C:\repos\SirePi_duality-frozen\UI\Widgets\MultiLineWidget.cs,DrawCustom,The following statement contains a magic number: if (!String.IsNullOrWhiteSpace (_fText.SourceText) && _batchInfo != null) {  	_textVertices [0].TexCoord.X = 0;  	_textVertices [1].TexCoord.X = _visibleWidth;  	_textVertices [2].TexCoord.X = _visibleWidth;  	_textVertices [3].TexCoord.X = 0;  	//if (_scrollbar == null || !_scrollbar.Active)  	if (!_isScrollbarRequired) {  		_textVertices [0].TexCoord.Y = 0;  		_textVertices [1].TexCoord.Y = 0;  		_textVertices [2].TexCoord.Y = 1;  		_textVertices [3].TexCoord.Y = 1;  	}  	else {  		_textVertices [0].TexCoord.Y = _scrollComponent.Value;  		_textVertices [1].TexCoord.Y = _textVertices [0].TexCoord.Y;  		_textVertices [2].TexCoord.Y = (_scrollComponent.Value + _visibleHeight);  		_textVertices [3].TexCoord.Y = _textVertices [2].TexCoord.Y;  	}  	Vector2 uvRatio = _batchInfo.MainTexture.Res.UVRatio;  	_textVertices [0].TexCoord *= uvRatio * _uvUnit;  	_textVertices [1].TexCoord *= uvRatio * _uvUnit;  	_textVertices [2].TexCoord *= uvRatio * _uvUnit;  	_textVertices [3].TexCoord *= uvRatio * _uvUnit;  	_textVertices [0].Color = _textColor;  	_textVertices [0].Pos = _points [5].SceneCoords;  	_textVertices [0].Pos.Z += DELTA_Z;  	_textVertices [1].Color = _textColor;  	_textVertices [1].Pos = _points [6].SceneCoords;  	_textVertices [1].Pos.Z += DELTA_Z;  	_textVertices [2].Color = _textColor;  	_textVertices [2].Pos = _points [10].SceneCoords;  	_textVertices [2].Pos.Z += DELTA_Z;  	_textVertices [3].Color = _textColor;  	_textVertices [3].Pos = _points [9].SceneCoords;  	_textVertices [3].Pos.Z += DELTA_Z;  	device.AddVertices (_batchInfo' VertexMode.Quads' _textVertices);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,MultiLineWidget,C:\repos\SirePi_duality-frozen\UI\Widgets\MultiLineWidget.cs,DrawCustom,The following statement contains a magic number: if (!String.IsNullOrWhiteSpace (_fText.SourceText) && _batchInfo != null) {  	_textVertices [0].TexCoord.X = 0;  	_textVertices [1].TexCoord.X = _visibleWidth;  	_textVertices [2].TexCoord.X = _visibleWidth;  	_textVertices [3].TexCoord.X = 0;  	//if (_scrollbar == null || !_scrollbar.Active)  	if (!_isScrollbarRequired) {  		_textVertices [0].TexCoord.Y = 0;  		_textVertices [1].TexCoord.Y = 0;  		_textVertices [2].TexCoord.Y = 1;  		_textVertices [3].TexCoord.Y = 1;  	}  	else {  		_textVertices [0].TexCoord.Y = _scrollComponent.Value;  		_textVertices [1].TexCoord.Y = _textVertices [0].TexCoord.Y;  		_textVertices [2].TexCoord.Y = (_scrollComponent.Value + _visibleHeight);  		_textVertices [3].TexCoord.Y = _textVertices [2].TexCoord.Y;  	}  	Vector2 uvRatio = _batchInfo.MainTexture.Res.UVRatio;  	_textVertices [0].TexCoord *= uvRatio * _uvUnit;  	_textVertices [1].TexCoord *= uvRatio * _uvUnit;  	_textVertices [2].TexCoord *= uvRatio * _uvUnit;  	_textVertices [3].TexCoord *= uvRatio * _uvUnit;  	_textVertices [0].Color = _textColor;  	_textVertices [0].Pos = _points [5].SceneCoords;  	_textVertices [0].Pos.Z += DELTA_Z;  	_textVertices [1].Color = _textColor;  	_textVertices [1].Pos = _points [6].SceneCoords;  	_textVertices [1].Pos.Z += DELTA_Z;  	_textVertices [2].Color = _textColor;  	_textVertices [2].Pos = _points [10].SceneCoords;  	_textVertices [2].Pos.Z += DELTA_Z;  	_textVertices [3].Color = _textColor;  	_textVertices [3].Pos = _points [9].SceneCoords;  	_textVertices [3].Pos.Z += DELTA_Z;  	device.AddVertices (_batchInfo' VertexMode.Quads' _textVertices);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,MultiLineWidget,C:\repos\SirePi_duality-frozen\UI\Widgets\MultiLineWidget.cs,DrawCustom,The following statement contains a magic number: if (!String.IsNullOrWhiteSpace (_fText.SourceText) && _batchInfo != null) {  	_textVertices [0].TexCoord.X = 0;  	_textVertices [1].TexCoord.X = _visibleWidth;  	_textVertices [2].TexCoord.X = _visibleWidth;  	_textVertices [3].TexCoord.X = 0;  	//if (_scrollbar == null || !_scrollbar.Active)  	if (!_isScrollbarRequired) {  		_textVertices [0].TexCoord.Y = 0;  		_textVertices [1].TexCoord.Y = 0;  		_textVertices [2].TexCoord.Y = 1;  		_textVertices [3].TexCoord.Y = 1;  	}  	else {  		_textVertices [0].TexCoord.Y = _scrollComponent.Value;  		_textVertices [1].TexCoord.Y = _textVertices [0].TexCoord.Y;  		_textVertices [2].TexCoord.Y = (_scrollComponent.Value + _visibleHeight);  		_textVertices [3].TexCoord.Y = _textVertices [2].TexCoord.Y;  	}  	Vector2 uvRatio = _batchInfo.MainTexture.Res.UVRatio;  	_textVertices [0].TexCoord *= uvRatio * _uvUnit;  	_textVertices [1].TexCoord *= uvRatio * _uvUnit;  	_textVertices [2].TexCoord *= uvRatio * _uvUnit;  	_textVertices [3].TexCoord *= uvRatio * _uvUnit;  	_textVertices [0].Color = _textColor;  	_textVertices [0].Pos = _points [5].SceneCoords;  	_textVertices [0].Pos.Z += DELTA_Z;  	_textVertices [1].Color = _textColor;  	_textVertices [1].Pos = _points [6].SceneCoords;  	_textVertices [1].Pos.Z += DELTA_Z;  	_textVertices [2].Color = _textColor;  	_textVertices [2].Pos = _points [10].SceneCoords;  	_textVertices [2].Pos.Z += DELTA_Z;  	_textVertices [3].Color = _textColor;  	_textVertices [3].Pos = _points [9].SceneCoords;  	_textVertices [3].Pos.Z += DELTA_Z;  	device.AddVertices (_batchInfo' VertexMode.Quads' _textVertices);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,MultiLineWidget,C:\repos\SirePi_duality-frozen\UI\Widgets\MultiLineWidget.cs,DrawCustom,The following statement contains a magic number: if (!String.IsNullOrWhiteSpace (_fText.SourceText) && _batchInfo != null) {  	_textVertices [0].TexCoord.X = 0;  	_textVertices [1].TexCoord.X = _visibleWidth;  	_textVertices [2].TexCoord.X = _visibleWidth;  	_textVertices [3].TexCoord.X = 0;  	//if (_scrollbar == null || !_scrollbar.Active)  	if (!_isScrollbarRequired) {  		_textVertices [0].TexCoord.Y = 0;  		_textVertices [1].TexCoord.Y = 0;  		_textVertices [2].TexCoord.Y = 1;  		_textVertices [3].TexCoord.Y = 1;  	}  	else {  		_textVertices [0].TexCoord.Y = _scrollComponent.Value;  		_textVertices [1].TexCoord.Y = _textVertices [0].TexCoord.Y;  		_textVertices [2].TexCoord.Y = (_scrollComponent.Value + _visibleHeight);  		_textVertices [3].TexCoord.Y = _textVertices [2].TexCoord.Y;  	}  	Vector2 uvRatio = _batchInfo.MainTexture.Res.UVRatio;  	_textVertices [0].TexCoord *= uvRatio * _uvUnit;  	_textVertices [1].TexCoord *= uvRatio * _uvUnit;  	_textVertices [2].TexCoord *= uvRatio * _uvUnit;  	_textVertices [3].TexCoord *= uvRatio * _uvUnit;  	_textVertices [0].Color = _textColor;  	_textVertices [0].Pos = _points [5].SceneCoords;  	_textVertices [0].Pos.Z += DELTA_Z;  	_textVertices [1].Color = _textColor;  	_textVertices [1].Pos = _points [6].SceneCoords;  	_textVertices [1].Pos.Z += DELTA_Z;  	_textVertices [2].Color = _textColor;  	_textVertices [2].Pos = _points [10].SceneCoords;  	_textVertices [2].Pos.Z += DELTA_Z;  	_textVertices [3].Color = _textColor;  	_textVertices [3].Pos = _points [9].SceneCoords;  	_textVertices [3].Pos.Z += DELTA_Z;  	device.AddVertices (_batchInfo' VertexMode.Quads' _textVertices);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,MultiLineWidget,C:\repos\SirePi_duality-frozen\UI\Widgets\MultiLineWidget.cs,DrawCustom,The following statement contains a magic number: if (!String.IsNullOrWhiteSpace (_fText.SourceText) && _batchInfo != null) {  	_textVertices [0].TexCoord.X = 0;  	_textVertices [1].TexCoord.X = _visibleWidth;  	_textVertices [2].TexCoord.X = _visibleWidth;  	_textVertices [3].TexCoord.X = 0;  	//if (_scrollbar == null || !_scrollbar.Active)  	if (!_isScrollbarRequired) {  		_textVertices [0].TexCoord.Y = 0;  		_textVertices [1].TexCoord.Y = 0;  		_textVertices [2].TexCoord.Y = 1;  		_textVertices [3].TexCoord.Y = 1;  	}  	else {  		_textVertices [0].TexCoord.Y = _scrollComponent.Value;  		_textVertices [1].TexCoord.Y = _textVertices [0].TexCoord.Y;  		_textVertices [2].TexCoord.Y = (_scrollComponent.Value + _visibleHeight);  		_textVertices [3].TexCoord.Y = _textVertices [2].TexCoord.Y;  	}  	Vector2 uvRatio = _batchInfo.MainTexture.Res.UVRatio;  	_textVertices [0].TexCoord *= uvRatio * _uvUnit;  	_textVertices [1].TexCoord *= uvRatio * _uvUnit;  	_textVertices [2].TexCoord *= uvRatio * _uvUnit;  	_textVertices [3].TexCoord *= uvRatio * _uvUnit;  	_textVertices [0].Color = _textColor;  	_textVertices [0].Pos = _points [5].SceneCoords;  	_textVertices [0].Pos.Z += DELTA_Z;  	_textVertices [1].Color = _textColor;  	_textVertices [1].Pos = _points [6].SceneCoords;  	_textVertices [1].Pos.Z += DELTA_Z;  	_textVertices [2].Color = _textColor;  	_textVertices [2].Pos = _points [10].SceneCoords;  	_textVertices [2].Pos.Z += DELTA_Z;  	_textVertices [3].Color = _textColor;  	_textVertices [3].Pos = _points [9].SceneCoords;  	_textVertices [3].Pos.Z += DELTA_Z;  	device.AddVertices (_batchInfo' VertexMode.Quads' _textVertices);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,MultiLineWidget,C:\repos\SirePi_duality-frozen\UI\Widgets\MultiLineWidget.cs,DrawCustom,The following statement contains a magic number: if (!String.IsNullOrWhiteSpace (_fText.SourceText) && _batchInfo != null) {  	_textVertices [0].TexCoord.X = 0;  	_textVertices [1].TexCoord.X = _visibleWidth;  	_textVertices [2].TexCoord.X = _visibleWidth;  	_textVertices [3].TexCoord.X = 0;  	//if (_scrollbar == null || !_scrollbar.Active)  	if (!_isScrollbarRequired) {  		_textVertices [0].TexCoord.Y = 0;  		_textVertices [1].TexCoord.Y = 0;  		_textVertices [2].TexCoord.Y = 1;  		_textVertices [3].TexCoord.Y = 1;  	}  	else {  		_textVertices [0].TexCoord.Y = _scrollComponent.Value;  		_textVertices [1].TexCoord.Y = _textVertices [0].TexCoord.Y;  		_textVertices [2].TexCoord.Y = (_scrollComponent.Value + _visibleHeight);  		_textVertices [3].TexCoord.Y = _textVertices [2].TexCoord.Y;  	}  	Vector2 uvRatio = _batchInfo.MainTexture.Res.UVRatio;  	_textVertices [0].TexCoord *= uvRatio * _uvUnit;  	_textVertices [1].TexCoord *= uvRatio * _uvUnit;  	_textVertices [2].TexCoord *= uvRatio * _uvUnit;  	_textVertices [3].TexCoord *= uvRatio * _uvUnit;  	_textVertices [0].Color = _textColor;  	_textVertices [0].Pos = _points [5].SceneCoords;  	_textVertices [0].Pos.Z += DELTA_Z;  	_textVertices [1].Color = _textColor;  	_textVertices [1].Pos = _points [6].SceneCoords;  	_textVertices [1].Pos.Z += DELTA_Z;  	_textVertices [2].Color = _textColor;  	_textVertices [2].Pos = _points [10].SceneCoords;  	_textVertices [2].Pos.Z += DELTA_Z;  	_textVertices [3].Color = _textColor;  	_textVertices [3].Pos = _points [9].SceneCoords;  	_textVertices [3].Pos.Z += DELTA_Z;  	device.AddVertices (_batchInfo' VertexMode.Quads' _textVertices);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,MultiLineWidget,C:\repos\SirePi_duality-frozen\UI\Widgets\MultiLineWidget.cs,DrawCustom,The following statement contains a magic number: if (!String.IsNullOrWhiteSpace (_fText.SourceText) && _batchInfo != null) {  	_textVertices [0].TexCoord.X = 0;  	_textVertices [1].TexCoord.X = _visibleWidth;  	_textVertices [2].TexCoord.X = _visibleWidth;  	_textVertices [3].TexCoord.X = 0;  	//if (_scrollbar == null || !_scrollbar.Active)  	if (!_isScrollbarRequired) {  		_textVertices [0].TexCoord.Y = 0;  		_textVertices [1].TexCoord.Y = 0;  		_textVertices [2].TexCoord.Y = 1;  		_textVertices [3].TexCoord.Y = 1;  	}  	else {  		_textVertices [0].TexCoord.Y = _scrollComponent.Value;  		_textVertices [1].TexCoord.Y = _textVertices [0].TexCoord.Y;  		_textVertices [2].TexCoord.Y = (_scrollComponent.Value + _visibleHeight);  		_textVertices [3].TexCoord.Y = _textVertices [2].TexCoord.Y;  	}  	Vector2 uvRatio = _batchInfo.MainTexture.Res.UVRatio;  	_textVertices [0].TexCoord *= uvRatio * _uvUnit;  	_textVertices [1].TexCoord *= uvRatio * _uvUnit;  	_textVertices [2].TexCoord *= uvRatio * _uvUnit;  	_textVertices [3].TexCoord *= uvRatio * _uvUnit;  	_textVertices [0].Color = _textColor;  	_textVertices [0].Pos = _points [5].SceneCoords;  	_textVertices [0].Pos.Z += DELTA_Z;  	_textVertices [1].Color = _textColor;  	_textVertices [1].Pos = _points [6].SceneCoords;  	_textVertices [1].Pos.Z += DELTA_Z;  	_textVertices [2].Color = _textColor;  	_textVertices [2].Pos = _points [10].SceneCoords;  	_textVertices [2].Pos.Z += DELTA_Z;  	_textVertices [3].Color = _textColor;  	_textVertices [3].Pos = _points [9].SceneCoords;  	_textVertices [3].Pos.Z += DELTA_Z;  	device.AddVertices (_batchInfo' VertexMode.Quads' _textVertices);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,MultiLineWidget,C:\repos\SirePi_duality-frozen\UI\Widgets\MultiLineWidget.cs,DrawCustom,The following statement contains a magic number: if (!String.IsNullOrWhiteSpace (_fText.SourceText) && _batchInfo != null) {  	_textVertices [0].TexCoord.X = 0;  	_textVertices [1].TexCoord.X = _visibleWidth;  	_textVertices [2].TexCoord.X = _visibleWidth;  	_textVertices [3].TexCoord.X = 0;  	//if (_scrollbar == null || !_scrollbar.Active)  	if (!_isScrollbarRequired) {  		_textVertices [0].TexCoord.Y = 0;  		_textVertices [1].TexCoord.Y = 0;  		_textVertices [2].TexCoord.Y = 1;  		_textVertices [3].TexCoord.Y = 1;  	}  	else {  		_textVertices [0].TexCoord.Y = _scrollComponent.Value;  		_textVertices [1].TexCoord.Y = _textVertices [0].TexCoord.Y;  		_textVertices [2].TexCoord.Y = (_scrollComponent.Value + _visibleHeight);  		_textVertices [3].TexCoord.Y = _textVertices [2].TexCoord.Y;  	}  	Vector2 uvRatio = _batchInfo.MainTexture.Res.UVRatio;  	_textVertices [0].TexCoord *= uvRatio * _uvUnit;  	_textVertices [1].TexCoord *= uvRatio * _uvUnit;  	_textVertices [2].TexCoord *= uvRatio * _uvUnit;  	_textVertices [3].TexCoord *= uvRatio * _uvUnit;  	_textVertices [0].Color = _textColor;  	_textVertices [0].Pos = _points [5].SceneCoords;  	_textVertices [0].Pos.Z += DELTA_Z;  	_textVertices [1].Color = _textColor;  	_textVertices [1].Pos = _points [6].SceneCoords;  	_textVertices [1].Pos.Z += DELTA_Z;  	_textVertices [2].Color = _textColor;  	_textVertices [2].Pos = _points [10].SceneCoords;  	_textVertices [2].Pos.Z += DELTA_Z;  	_textVertices [3].Color = _textColor;  	_textVertices [3].Pos = _points [9].SceneCoords;  	_textVertices [3].Pos.Z += DELTA_Z;  	device.AddVertices (_batchInfo' VertexMode.Quads' _textVertices);  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,MultiLineWidget,C:\repos\SirePi_duality-frozen\UI\Widgets\MultiLineWidget.cs,DrawCustom,The following statement contains a magic number: _textVertices [2].TexCoord.X = _visibleWidth;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,MultiLineWidget,C:\repos\SirePi_duality-frozen\UI\Widgets\MultiLineWidget.cs,DrawCustom,The following statement contains a magic number: _textVertices [3].TexCoord.X = 0;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,MultiLineWidget,C:\repos\SirePi_duality-frozen\UI\Widgets\MultiLineWidget.cs,DrawCustom,The following statement contains a magic number: if (!_isScrollbarRequired) {  	_textVertices [0].TexCoord.Y = 0;  	_textVertices [1].TexCoord.Y = 0;  	_textVertices [2].TexCoord.Y = 1;  	_textVertices [3].TexCoord.Y = 1;  }  else {  	_textVertices [0].TexCoord.Y = _scrollComponent.Value;  	_textVertices [1].TexCoord.Y = _textVertices [0].TexCoord.Y;  	_textVertices [2].TexCoord.Y = (_scrollComponent.Value + _visibleHeight);  	_textVertices [3].TexCoord.Y = _textVertices [2].TexCoord.Y;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,MultiLineWidget,C:\repos\SirePi_duality-frozen\UI\Widgets\MultiLineWidget.cs,DrawCustom,The following statement contains a magic number: if (!_isScrollbarRequired) {  	_textVertices [0].TexCoord.Y = 0;  	_textVertices [1].TexCoord.Y = 0;  	_textVertices [2].TexCoord.Y = 1;  	_textVertices [3].TexCoord.Y = 1;  }  else {  	_textVertices [0].TexCoord.Y = _scrollComponent.Value;  	_textVertices [1].TexCoord.Y = _textVertices [0].TexCoord.Y;  	_textVertices [2].TexCoord.Y = (_scrollComponent.Value + _visibleHeight);  	_textVertices [3].TexCoord.Y = _textVertices [2].TexCoord.Y;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,MultiLineWidget,C:\repos\SirePi_duality-frozen\UI\Widgets\MultiLineWidget.cs,DrawCustom,The following statement contains a magic number: if (!_isScrollbarRequired) {  	_textVertices [0].TexCoord.Y = 0;  	_textVertices [1].TexCoord.Y = 0;  	_textVertices [2].TexCoord.Y = 1;  	_textVertices [3].TexCoord.Y = 1;  }  else {  	_textVertices [0].TexCoord.Y = _scrollComponent.Value;  	_textVertices [1].TexCoord.Y = _textVertices [0].TexCoord.Y;  	_textVertices [2].TexCoord.Y = (_scrollComponent.Value + _visibleHeight);  	_textVertices [3].TexCoord.Y = _textVertices [2].TexCoord.Y;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,MultiLineWidget,C:\repos\SirePi_duality-frozen\UI\Widgets\MultiLineWidget.cs,DrawCustom,The following statement contains a magic number: if (!_isScrollbarRequired) {  	_textVertices [0].TexCoord.Y = 0;  	_textVertices [1].TexCoord.Y = 0;  	_textVertices [2].TexCoord.Y = 1;  	_textVertices [3].TexCoord.Y = 1;  }  else {  	_textVertices [0].TexCoord.Y = _scrollComponent.Value;  	_textVertices [1].TexCoord.Y = _textVertices [0].TexCoord.Y;  	_textVertices [2].TexCoord.Y = (_scrollComponent.Value + _visibleHeight);  	_textVertices [3].TexCoord.Y = _textVertices [2].TexCoord.Y;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,MultiLineWidget,C:\repos\SirePi_duality-frozen\UI\Widgets\MultiLineWidget.cs,DrawCustom,The following statement contains a magic number: if (!_isScrollbarRequired) {  	_textVertices [0].TexCoord.Y = 0;  	_textVertices [1].TexCoord.Y = 0;  	_textVertices [2].TexCoord.Y = 1;  	_textVertices [3].TexCoord.Y = 1;  }  else {  	_textVertices [0].TexCoord.Y = _scrollComponent.Value;  	_textVertices [1].TexCoord.Y = _textVertices [0].TexCoord.Y;  	_textVertices [2].TexCoord.Y = (_scrollComponent.Value + _visibleHeight);  	_textVertices [3].TexCoord.Y = _textVertices [2].TexCoord.Y;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,MultiLineWidget,C:\repos\SirePi_duality-frozen\UI\Widgets\MultiLineWidget.cs,DrawCustom,The following statement contains a magic number: _textVertices [2].TexCoord.Y = 1;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,MultiLineWidget,C:\repos\SirePi_duality-frozen\UI\Widgets\MultiLineWidget.cs,DrawCustom,The following statement contains a magic number: _textVertices [3].TexCoord.Y = 1;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,MultiLineWidget,C:\repos\SirePi_duality-frozen\UI\Widgets\MultiLineWidget.cs,DrawCustom,The following statement contains a magic number: _textVertices [2].TexCoord.Y = (_scrollComponent.Value + _visibleHeight);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,MultiLineWidget,C:\repos\SirePi_duality-frozen\UI\Widgets\MultiLineWidget.cs,DrawCustom,The following statement contains a magic number: _textVertices [3].TexCoord.Y = _textVertices [2].TexCoord.Y;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,MultiLineWidget,C:\repos\SirePi_duality-frozen\UI\Widgets\MultiLineWidget.cs,DrawCustom,The following statement contains a magic number: _textVertices [3].TexCoord.Y = _textVertices [2].TexCoord.Y;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,MultiLineWidget,C:\repos\SirePi_duality-frozen\UI\Widgets\MultiLineWidget.cs,DrawCustom,The following statement contains a magic number: _textVertices [2].TexCoord *= uvRatio * _uvUnit;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,MultiLineWidget,C:\repos\SirePi_duality-frozen\UI\Widgets\MultiLineWidget.cs,DrawCustom,The following statement contains a magic number: _textVertices [3].TexCoord *= uvRatio * _uvUnit;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,MultiLineWidget,C:\repos\SirePi_duality-frozen\UI\Widgets\MultiLineWidget.cs,DrawCustom,The following statement contains a magic number: _textVertices [0].Pos = _points [5].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,MultiLineWidget,C:\repos\SirePi_duality-frozen\UI\Widgets\MultiLineWidget.cs,DrawCustom,The following statement contains a magic number: _textVertices [1].Pos = _points [6].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,MultiLineWidget,C:\repos\SirePi_duality-frozen\UI\Widgets\MultiLineWidget.cs,DrawCustom,The following statement contains a magic number: _textVertices [2].Color = _textColor;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,MultiLineWidget,C:\repos\SirePi_duality-frozen\UI\Widgets\MultiLineWidget.cs,DrawCustom,The following statement contains a magic number: _textVertices [2].Pos = _points [10].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,MultiLineWidget,C:\repos\SirePi_duality-frozen\UI\Widgets\MultiLineWidget.cs,DrawCustom,The following statement contains a magic number: _textVertices [2].Pos = _points [10].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,MultiLineWidget,C:\repos\SirePi_duality-frozen\UI\Widgets\MultiLineWidget.cs,DrawCustom,The following statement contains a magic number: _textVertices [2].Pos.Z += DELTA_Z;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,MultiLineWidget,C:\repos\SirePi_duality-frozen\UI\Widgets\MultiLineWidget.cs,DrawCustom,The following statement contains a magic number: _textVertices [3].Color = _textColor;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,MultiLineWidget,C:\repos\SirePi_duality-frozen\UI\Widgets\MultiLineWidget.cs,DrawCustom,The following statement contains a magic number: _textVertices [3].Pos = _points [9].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,MultiLineWidget,C:\repos\SirePi_duality-frozen\UI\Widgets\MultiLineWidget.cs,DrawCustom,The following statement contains a magic number: _textVertices [3].Pos = _points [9].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,MultiLineWidget,C:\repos\SirePi_duality-frozen\UI\Widgets\MultiLineWidget.cs,DrawCustom,The following statement contains a magic number: _textVertices [3].Pos.Z += DELTA_Z;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,MultiLineWidget,C:\repos\SirePi_duality-frozen\UI\Widgets\MultiLineWidget.cs,UpdateWidget,The following statement contains a magic number: if (!String.IsNullOrWhiteSpace (_fText.SourceText)) {  	if (_textFont.Res != null && _fText.Fonts [0] != _textFont) {  		_fText.Fonts [0] = _textFont;  	}  	int textWidth = _visibleWidth;  	if (!inLimitTextWidth) {  		_fText.MaxWidth = ushort.MaxValue;  		textWidth = (int)Math.Ceiling (_fText.Size.X) + 10;  	}  	_fText.MaxWidth = textWidth;  	_isScrollbarRequired = _fText.Size.Y > _visibleHeight;  	_uvUnit.X = 1f / textWidth;  	_uvUnit.Y = 1;  	if (_scrollbar != null) {  		_scrollbar.Active = _isScrollbarRequired;  		if (_isScrollbarRequired) {  			_scrollComponent.Maximum = (int)Math.Ceiling (_fText.Size.Y - _visibleHeight);  			_uvUnit.X = 1f / textWidth;  			_uvUnit.Y = 1f / _fText.Size.Y;  		}  	}  	PixelData textLayer = new PixelData (_fText.MaxWidth' (int)Math.Max (_visibleHeight' _fText.Size.Y)' Colors.Transparent);  	_fText.RenderToBitmap (_fText.SourceText' textLayer);  	Texture tx = _batchInfo.MainTexture.Res;  	tx.BasePixmap.Res.MainLayer = textLayer;  	tx.ReloadData ();  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,MultiLineWidget,C:\repos\SirePi_duality-frozen\UI\Widgets\MultiLineWidget.cs,UpdateWidget,The following statement contains a magic number: if (!inLimitTextWidth) {  	_fText.MaxWidth = ushort.MaxValue;  	textWidth = (int)Math.Ceiling (_fText.Size.X) + 10;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,MultiLineWidget,C:\repos\SirePi_duality-frozen\UI\Widgets\MultiLineWidget.cs,UpdateWidget,The following statement contains a magic number: textWidth = (int)Math.Ceiling (_fText.Size.X) + 10;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,ProgressBar,C:\repos\SirePi_duality-frozen\UI\Widgets\ProgressBar.cs,DrawCanvas,The following statement contains a magic number: if (!String.IsNullOrWhiteSpace (_text)) {  	Vector3 barCenter = (_points [5].WorldCoords + _points [10].WorldCoords) / 2;  	if (_textFont.Res != null && _fText.Fonts [0] != _textFont) {  		_fText.Fonts [0] = _textFont;  	}  	_fText.SourceText = _text;  	inCanvas.PushState ();  	inCanvas.State.ColorTint = _textColor;  	inCanvas.State.TransformAngle = GameObj.Transform.Angle;  	inCanvas.DrawText (_fText' barCenter.X' barCenter.Y' barCenter.Z + DELTA_Z' null' Alignment.Center);  	inCanvas.PopState ();  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,ProgressBar,C:\repos\SirePi_duality-frozen\UI\Widgets\ProgressBar.cs,DrawCanvas,The following statement contains a magic number: if (!String.IsNullOrWhiteSpace (_text)) {  	Vector3 barCenter = (_points [5].WorldCoords + _points [10].WorldCoords) / 2;  	if (_textFont.Res != null && _fText.Fonts [0] != _textFont) {  		_fText.Fonts [0] = _textFont;  	}  	_fText.SourceText = _text;  	inCanvas.PushState ();  	inCanvas.State.ColorTint = _textColor;  	inCanvas.State.TransformAngle = GameObj.Transform.Angle;  	inCanvas.DrawText (_fText' barCenter.X' barCenter.Y' barCenter.Z + DELTA_Z' null' Alignment.Center);  	inCanvas.PopState ();  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,ProgressBar,C:\repos\SirePi_duality-frozen\UI\Widgets\ProgressBar.cs,DrawCanvas,The following statement contains a magic number: if (!String.IsNullOrWhiteSpace (_text)) {  	Vector3 barCenter = (_points [5].WorldCoords + _points [10].WorldCoords) / 2;  	if (_textFont.Res != null && _fText.Fonts [0] != _textFont) {  		_fText.Fonts [0] = _textFont;  	}  	_fText.SourceText = _text;  	inCanvas.PushState ();  	inCanvas.State.ColorTint = _textColor;  	inCanvas.State.TransformAngle = GameObj.Transform.Angle;  	inCanvas.DrawText (_fText' barCenter.X' barCenter.Y' barCenter.Z + DELTA_Z' null' Alignment.Center);  	inCanvas.PopState ();  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,ProgressBar,C:\repos\SirePi_duality-frozen\UI\Widgets\ProgressBar.cs,AddBar,The following statement contains a magic number: t.RelativePos = new Vector3 (Rect.W / 2' Rect.H / 2' 0);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,ProgressBar,C:\repos\SirePi_duality-frozen\UI\Widgets\ProgressBar.cs,AddBar,The following statement contains a magic number: t.RelativePos = new Vector3 (Rect.W / 2' Rect.H / 2' 0);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,ProgressBar,C:\repos\SirePi_duality-frozen\UI\Widgets\ProgressBar.cs,AddBar,The following statement contains a magic number: p.Rect = Rect.Align (Alignment.Left' -Rect.W / 2 + border.X' 0' 0' Rect.H - border.Y - border.W);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,ProgressBar,C:\repos\SirePi_duality-frozen\UI\Widgets\ProgressBar.cs,UpdateBar,The following statement contains a magic number: _value = Math.Min (Value' 100);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,ProgressBar,C:\repos\SirePi_duality-frozen\UI\Widgets\ProgressBar.cs,UpdateBar,The following statement contains a magic number: if (_bar != null) {  	Panel sw = _bar.GetComponent<Panel> ();  	Rect rect = sw.Rect;  	rect.W = (_vertices [6].Pos - _vertices [5].Pos).X * _value / 100;  	sw.Rect = rect;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,ProgressBar,C:\repos\SirePi_duality-frozen\UI\Widgets\ProgressBar.cs,UpdateBar,The following statement contains a magic number: if (_bar != null) {  	Panel sw = _bar.GetComponent<Panel> ();  	Rect rect = sw.Rect;  	rect.W = (_vertices [6].Pos - _vertices [5].Pos).X * _value / 100;  	sw.Rect = rect;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,ProgressBar,C:\repos\SirePi_duality-frozen\UI\Widgets\ProgressBar.cs,UpdateBar,The following statement contains a magic number: if (_bar != null) {  	Panel sw = _bar.GetComponent<Panel> ();  	Rect rect = sw.Rect;  	rect.W = (_vertices [6].Pos - _vertices [5].Pos).X * _value / 100;  	sw.Rect = rect;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,ProgressBar,C:\repos\SirePi_duality-frozen\UI\Widgets\ProgressBar.cs,UpdateBar,The following statement contains a magic number: rect.W = (_vertices [6].Pos - _vertices [5].Pos).X * _value / 100;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,ProgressBar,C:\repos\SirePi_duality-frozen\UI\Widgets\ProgressBar.cs,UpdateBar,The following statement contains a magic number: rect.W = (_vertices [6].Pos - _vertices [5].Pos).X * _value / 100;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,ProgressBar,C:\repos\SirePi_duality-frozen\UI\Widgets\ProgressBar.cs,UpdateBar,The following statement contains a magic number: rect.W = (_vertices [6].Pos - _vertices [5].Pos).X * _value / 100;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,ScrollBar,C:\repos\SirePi_duality-frozen\UI\Widgets\ScrollBar.cs,ScrollBar,The following statement contains a magic number: _max = 10;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,ScrollBar,C:\repos\SirePi_duality-frozen\UI\Widgets\ScrollBar.cs,ScrollBar,The following statement contains a magic number: _buttonSize = new Vector2 (32);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,ScrollBar,C:\repos\SirePi_duality-frozen\UI\Widgets\ScrollBar.cs,ScrollBar,The following statement contains a magic number: _cursorSize = new Vector2 (32);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,ScrollBar,C:\repos\SirePi_duality-frozen\UI\Widgets\ScrollBar.cs,AddScrollCursor,The following statement contains a magic number: t.RelativePos = new Vector3 (Rect.W / 2' Rect.H / 2' 0);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,ScrollBar,C:\repos\SirePi_duality-frozen\UI\Widgets\ScrollBar.cs,AddScrollCursor,The following statement contains a magic number: t.RelativePos = new Vector3 (Rect.W / 2' Rect.H / 2' 0);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,ScrollBar,C:\repos\SirePi_duality-frozen\UI\Widgets\ScrollBar.cs,AddScrollDecreaseButton,The following statement contains a magic number: t.RelativePos = new Vector3 (Rect.W / 2' _buttonSize.Y / 2' 0);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,ScrollBar,C:\repos\SirePi_duality-frozen\UI\Widgets\ScrollBar.cs,AddScrollDecreaseButton,The following statement contains a magic number: t.RelativePos = new Vector3 (Rect.W / 2' _buttonSize.Y / 2' 0);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,ScrollBar,C:\repos\SirePi_duality-frozen\UI\Widgets\ScrollBar.cs,AddScrollIncreaseButton,The following statement contains a magic number: t.RelativePos = new Vector3 (Rect.W / 2' Rect.H - _buttonSize.Y / 2' 0);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,ScrollBar,C:\repos\SirePi_duality-frozen\UI\Widgets\ScrollBar.cs,AddScrollIncreaseButton,The following statement contains a magic number: t.RelativePos = new Vector3 (Rect.W / 2' Rect.H - _buttonSize.Y / 2' 0);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,ScrollBar,C:\repos\SirePi_duality-frozen\UI\Widgets\ScrollBar.cs,UpdateCursor,The following statement contains a magic number: if (_cursor != null) {  	_value = Math.Min (Value' _max);  	_value = Math.Max (Value' _min);  	float length = Rect.H - (_buttonSize.Y * 2) - (_cursorSize.Y);  	Vector3 direction = _increaseButton.Transform.Pos - _decreaseButton.Transform.Pos;  	Vector3 origin = _decreaseButton.Transform.Pos + (direction / 2) - (direction.Normalized * length / 2);  	_cursor.Transform.Pos = origin + (direction.Normalized * (Value - Minimum) * length / (Maximum - Minimum));  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,ScrollBar,C:\repos\SirePi_duality-frozen\UI\Widgets\ScrollBar.cs,UpdateCursor,The following statement contains a magic number: if (_cursor != null) {  	_value = Math.Min (Value' _max);  	_value = Math.Max (Value' _min);  	float length = Rect.H - (_buttonSize.Y * 2) - (_cursorSize.Y);  	Vector3 direction = _increaseButton.Transform.Pos - _decreaseButton.Transform.Pos;  	Vector3 origin = _decreaseButton.Transform.Pos + (direction / 2) - (direction.Normalized * length / 2);  	_cursor.Transform.Pos = origin + (direction.Normalized * (Value - Minimum) * length / (Maximum - Minimum));  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,ScrollBar,C:\repos\SirePi_duality-frozen\UI\Widgets\ScrollBar.cs,UpdateCursor,The following statement contains a magic number: if (_cursor != null) {  	_value = Math.Min (Value' _max);  	_value = Math.Max (Value' _min);  	float length = Rect.H - (_buttonSize.Y * 2) - (_cursorSize.Y);  	Vector3 direction = _increaseButton.Transform.Pos - _decreaseButton.Transform.Pos;  	Vector3 origin = _decreaseButton.Transform.Pos + (direction / 2) - (direction.Normalized * length / 2);  	_cursor.Transform.Pos = origin + (direction.Normalized * (Value - Minimum) * length / (Maximum - Minimum));  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,TextBox,C:\repos\SirePi_duality-frozen\UI\Widgets\TextBox.cs,DrawCanvas,The following statement contains a magic number: if (!String.IsNullOrWhiteSpace (_text)) {  	Vector3 textLeft = (_points [5].WorldCoords + _points [9].WorldCoords) / 2;  	if (_textFont.Res != null && _fText.Fonts [0] != _textFont) {  		_fText.Fonts [0] = _textFont;  	}  	_fText.SourceText = _text;  	inCanvas.PushState ();  	inCanvas.State.ColorTint = _textColor;  	inCanvas.State.TransformAngle = GameObj.Transform.Angle;  	inCanvas.DrawText (_fText' textLeft.X' textLeft.Y' textLeft.Z + DELTA_Z' null' Alignment.Left);  	inCanvas.PopState ();  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,TextBox,C:\repos\SirePi_duality-frozen\UI\Widgets\TextBox.cs,DrawCanvas,The following statement contains a magic number: if (!String.IsNullOrWhiteSpace (_text)) {  	Vector3 textLeft = (_points [5].WorldCoords + _points [9].WorldCoords) / 2;  	if (_textFont.Res != null && _fText.Fonts [0] != _textFont) {  		_fText.Fonts [0] = _textFont;  	}  	_fText.SourceText = _text;  	inCanvas.PushState ();  	inCanvas.State.ColorTint = _textColor;  	inCanvas.State.TransformAngle = GameObj.Transform.Angle;  	inCanvas.DrawText (_fText' textLeft.X' textLeft.Y' textLeft.Z + DELTA_Z' null' Alignment.Left);  	inCanvas.PopState ();  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,TextBox,C:\repos\SirePi_duality-frozen\UI\Widgets\TextBox.cs,DrawCanvas,The following statement contains a magic number: if (!String.IsNullOrWhiteSpace (_text)) {  	Vector3 textLeft = (_points [5].WorldCoords + _points [9].WorldCoords) / 2;  	if (_textFont.Res != null && _fText.Fonts [0] != _textFont) {  		_fText.Fonts [0] = _textFont;  	}  	_fText.SourceText = _text;  	inCanvas.PushState ();  	inCanvas.State.ColorTint = _textColor;  	inCanvas.State.TransformAngle = GameObj.Transform.Angle;  	inCanvas.DrawText (_fText' textLeft.X' textLeft.Y' textLeft.Z + DELTA_Z' null' Alignment.Left);  	inCanvas.PopState ();  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,TextBox,C:\repos\SirePi_duality-frozen\UI\Widgets\TextBox.cs,AddCaret,The following statement contains a magic number: t.RelativePos = new Vector3 (Rect.W / 2' Rect.H / 2' DELTA_Z);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,TextBox,C:\repos\SirePi_duality-frozen\UI\Widgets\TextBox.cs,AddCaret,The following statement contains a magic number: t.RelativePos = new Vector3 (Rect.W / 2' Rect.H / 2' DELTA_Z);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,TextBox,C:\repos\SirePi_duality-frozen\UI\Widgets\TextBox.cs,AddCaret,The following statement contains a magic number: sr.Rect = Rect.Align (Alignment.Center' 0' 0' 2' _fText.TextMetrics.Size.Y);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,TextBox,C:\repos\SirePi_duality-frozen\UI\Widgets\TextBox.cs,UpdateCaret,The following statement contains a magic number: if (_caret != null) {  	Vector3 textLeft = (_points [5].WorldCoords + _points [9].WorldCoords) / 2;  	Vector3 caretPosition = _caret.Transform.RelativePos;  	caretPosition.X = textLeft.X + _fText.Size.X;  	_caret.Transform.RelativePos = caretPosition;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,TextBox,C:\repos\SirePi_duality-frozen\UI\Widgets\TextBox.cs,UpdateCaret,The following statement contains a magic number: if (_caret != null) {  	Vector3 textLeft = (_points [5].WorldCoords + _points [9].WorldCoords) / 2;  	Vector3 caretPosition = _caret.Transform.RelativePos;  	caretPosition.X = textLeft.X + _fText.Size.X;  	_caret.Transform.RelativePos = caretPosition;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,TextBox,C:\repos\SirePi_duality-frozen\UI\Widgets\TextBox.cs,UpdateCaret,The following statement contains a magic number: if (_caret != null) {  	Vector3 textLeft = (_points [5].WorldCoords + _points [9].WorldCoords) / 2;  	Vector3 caretPosition = _caret.Transform.RelativePos;  	caretPosition.X = textLeft.X + _fText.Size.X;  	_caret.Transform.RelativePos = caretPosition;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Window,C:\repos\SirePi_duality-frozen\UI\Widgets\Window.cs,Window,The following statement contains a magic number: _buttonSize = new Vector2 (32);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Window,C:\repos\SirePi_duality-frozen\UI\Widgets\Window.cs,DrawCanvas,The following statement contains a magic number: if (!String.IsNullOrWhiteSpace (_title)) {  	Vector3 titleLeft = (_points [1].WorldCoords + _points [5].WorldCoords) / 2;  	if (_titleFont.Res != null && _fText.Fonts [0] != _titleFont) {  		_fText.Fonts [0] = _titleFont;  	}  	_fText.SourceText = _title;  	inCanvas.PushState ();  	inCanvas.State.ColorTint = _titleColor;  	inCanvas.State.TransformAngle = GameObj.Transform.Angle;  	inCanvas.DrawText (_fText' titleLeft.X' titleLeft.Y' titleLeft.Z + DELTA_Z' null' Alignment.Left);  	inCanvas.PopState ();  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Window,C:\repos\SirePi_duality-frozen\UI\Widgets\Window.cs,DrawCanvas,The following statement contains a magic number: if (!String.IsNullOrWhiteSpace (_title)) {  	Vector3 titleLeft = (_points [1].WorldCoords + _points [5].WorldCoords) / 2;  	if (_titleFont.Res != null && _fText.Fonts [0] != _titleFont) {  		_fText.Fonts [0] = _titleFont;  	}  	_fText.SourceText = _title;  	inCanvas.PushState ();  	inCanvas.State.ColorTint = _titleColor;  	inCanvas.State.TransformAngle = GameObj.Transform.Angle;  	inCanvas.DrawText (_fText' titleLeft.X' titleLeft.Y' titleLeft.Z + DELTA_Z' null' Alignment.Left);  	inCanvas.PopState ();  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Window,C:\repos\SirePi_duality-frozen\UI\Widgets\Window.cs,AddMaximizeButton,The following statement contains a magic number: t.RelativePos = new Vector3 (Rect.W - (_buttonSize.X * 2)' 0' DELTA_Z);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Window,C:\repos\SirePi_duality-frozen\UI\Widgets\Window.cs,AddMinimizeButton,The following statement contains a magic number: t.RelativePos = new Vector3 (Rect.W - (_buttonSize.X * 3)' 0' DELTA_Z);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Window,C:\repos\SirePi_duality-frozen\UI\Widgets\Window.cs,AddRestoreButton,The following statement contains a magic number: t.RelativePos = new Vector3 (Rect.W - (_buttonSize.X * 4)' 0' DELTA_Z);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,Widget,The following statement contains a magic number: _areaOnScreen = new Polygon (4);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,Widget,The following statement contains a magic number: _activeAreaOnScreen = new Polygon (4);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,Widget,The following statement contains a magic number: _tempActiveAreaOnScreen = new Vector3[4];  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,Widget,The following statement contains a magic number: _rect = new Rect (0' 0' 50' 50);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,Widget,The following statement contains a magic number: _rect = new Rect (0' 0' 50' 50);  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,Widget,The following statement contains a magic number: _vertices = new VertexC1P3T2[36];  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,Widget,The following statement contains a magic number: _points = new MultiSpacePoint[16];  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetAreaOnScreen,The following statement contains a magic number: if (_isInOverlay) {  	_areaOnScreen [0] = _points [0].WorldCoords.Xy;  	_areaOnScreen [1] = _points [3].WorldCoords.Xy;  	_areaOnScreen [2] = _points [15].WorldCoords.Xy;  	_areaOnScreen [3] = _points [12].WorldCoords.Xy;  }  else {  	_areaOnScreen [0] = inCamera.GetScreenCoord (_points [0].WorldCoords).Xy;  	_areaOnScreen [1] = inCamera.GetScreenCoord (_points [3].WorldCoords).Xy;  	_areaOnScreen [2] = inCamera.GetScreenCoord (_points [15].WorldCoords).Xy;  	_areaOnScreen [3] = inCamera.GetScreenCoord (_points [12].WorldCoords).Xy;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetAreaOnScreen,The following statement contains a magic number: if (_isInOverlay) {  	_areaOnScreen [0] = _points [0].WorldCoords.Xy;  	_areaOnScreen [1] = _points [3].WorldCoords.Xy;  	_areaOnScreen [2] = _points [15].WorldCoords.Xy;  	_areaOnScreen [3] = _points [12].WorldCoords.Xy;  }  else {  	_areaOnScreen [0] = inCamera.GetScreenCoord (_points [0].WorldCoords).Xy;  	_areaOnScreen [1] = inCamera.GetScreenCoord (_points [3].WorldCoords).Xy;  	_areaOnScreen [2] = inCamera.GetScreenCoord (_points [15].WorldCoords).Xy;  	_areaOnScreen [3] = inCamera.GetScreenCoord (_points [12].WorldCoords).Xy;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetAreaOnScreen,The following statement contains a magic number: if (_isInOverlay) {  	_areaOnScreen [0] = _points [0].WorldCoords.Xy;  	_areaOnScreen [1] = _points [3].WorldCoords.Xy;  	_areaOnScreen [2] = _points [15].WorldCoords.Xy;  	_areaOnScreen [3] = _points [12].WorldCoords.Xy;  }  else {  	_areaOnScreen [0] = inCamera.GetScreenCoord (_points [0].WorldCoords).Xy;  	_areaOnScreen [1] = inCamera.GetScreenCoord (_points [3].WorldCoords).Xy;  	_areaOnScreen [2] = inCamera.GetScreenCoord (_points [15].WorldCoords).Xy;  	_areaOnScreen [3] = inCamera.GetScreenCoord (_points [12].WorldCoords).Xy;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetAreaOnScreen,The following statement contains a magic number: if (_isInOverlay) {  	_areaOnScreen [0] = _points [0].WorldCoords.Xy;  	_areaOnScreen [1] = _points [3].WorldCoords.Xy;  	_areaOnScreen [2] = _points [15].WorldCoords.Xy;  	_areaOnScreen [3] = _points [12].WorldCoords.Xy;  }  else {  	_areaOnScreen [0] = inCamera.GetScreenCoord (_points [0].WorldCoords).Xy;  	_areaOnScreen [1] = inCamera.GetScreenCoord (_points [3].WorldCoords).Xy;  	_areaOnScreen [2] = inCamera.GetScreenCoord (_points [15].WorldCoords).Xy;  	_areaOnScreen [3] = inCamera.GetScreenCoord (_points [12].WorldCoords).Xy;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetAreaOnScreen,The following statement contains a magic number: if (_isInOverlay) {  	_areaOnScreen [0] = _points [0].WorldCoords.Xy;  	_areaOnScreen [1] = _points [3].WorldCoords.Xy;  	_areaOnScreen [2] = _points [15].WorldCoords.Xy;  	_areaOnScreen [3] = _points [12].WorldCoords.Xy;  }  else {  	_areaOnScreen [0] = inCamera.GetScreenCoord (_points [0].WorldCoords).Xy;  	_areaOnScreen [1] = inCamera.GetScreenCoord (_points [3].WorldCoords).Xy;  	_areaOnScreen [2] = inCamera.GetScreenCoord (_points [15].WorldCoords).Xy;  	_areaOnScreen [3] = inCamera.GetScreenCoord (_points [12].WorldCoords).Xy;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetAreaOnScreen,The following statement contains a magic number: if (_isInOverlay) {  	_areaOnScreen [0] = _points [0].WorldCoords.Xy;  	_areaOnScreen [1] = _points [3].WorldCoords.Xy;  	_areaOnScreen [2] = _points [15].WorldCoords.Xy;  	_areaOnScreen [3] = _points [12].WorldCoords.Xy;  }  else {  	_areaOnScreen [0] = inCamera.GetScreenCoord (_points [0].WorldCoords).Xy;  	_areaOnScreen [1] = inCamera.GetScreenCoord (_points [3].WorldCoords).Xy;  	_areaOnScreen [2] = inCamera.GetScreenCoord (_points [15].WorldCoords).Xy;  	_areaOnScreen [3] = inCamera.GetScreenCoord (_points [12].WorldCoords).Xy;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetAreaOnScreen,The following statement contains a magic number: if (_isInOverlay) {  	_areaOnScreen [0] = _points [0].WorldCoords.Xy;  	_areaOnScreen [1] = _points [3].WorldCoords.Xy;  	_areaOnScreen [2] = _points [15].WorldCoords.Xy;  	_areaOnScreen [3] = _points [12].WorldCoords.Xy;  }  else {  	_areaOnScreen [0] = inCamera.GetScreenCoord (_points [0].WorldCoords).Xy;  	_areaOnScreen [1] = inCamera.GetScreenCoord (_points [3].WorldCoords).Xy;  	_areaOnScreen [2] = inCamera.GetScreenCoord (_points [15].WorldCoords).Xy;  	_areaOnScreen [3] = inCamera.GetScreenCoord (_points [12].WorldCoords).Xy;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetAreaOnScreen,The following statement contains a magic number: if (_isInOverlay) {  	_areaOnScreen [0] = _points [0].WorldCoords.Xy;  	_areaOnScreen [1] = _points [3].WorldCoords.Xy;  	_areaOnScreen [2] = _points [15].WorldCoords.Xy;  	_areaOnScreen [3] = _points [12].WorldCoords.Xy;  }  else {  	_areaOnScreen [0] = inCamera.GetScreenCoord (_points [0].WorldCoords).Xy;  	_areaOnScreen [1] = inCamera.GetScreenCoord (_points [3].WorldCoords).Xy;  	_areaOnScreen [2] = inCamera.GetScreenCoord (_points [15].WorldCoords).Xy;  	_areaOnScreen [3] = inCamera.GetScreenCoord (_points [12].WorldCoords).Xy;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetAreaOnScreen,The following statement contains a magic number: if (_isInOverlay) {  	_areaOnScreen [0] = _points [0].WorldCoords.Xy;  	_areaOnScreen [1] = _points [3].WorldCoords.Xy;  	_areaOnScreen [2] = _points [15].WorldCoords.Xy;  	_areaOnScreen [3] = _points [12].WorldCoords.Xy;  }  else {  	_areaOnScreen [0] = inCamera.GetScreenCoord (_points [0].WorldCoords).Xy;  	_areaOnScreen [1] = inCamera.GetScreenCoord (_points [3].WorldCoords).Xy;  	_areaOnScreen [2] = inCamera.GetScreenCoord (_points [15].WorldCoords).Xy;  	_areaOnScreen [3] = inCamera.GetScreenCoord (_points [12].WorldCoords).Xy;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetAreaOnScreen,The following statement contains a magic number: if (_isInOverlay) {  	_areaOnScreen [0] = _points [0].WorldCoords.Xy;  	_areaOnScreen [1] = _points [3].WorldCoords.Xy;  	_areaOnScreen [2] = _points [15].WorldCoords.Xy;  	_areaOnScreen [3] = _points [12].WorldCoords.Xy;  }  else {  	_areaOnScreen [0] = inCamera.GetScreenCoord (_points [0].WorldCoords).Xy;  	_areaOnScreen [1] = inCamera.GetScreenCoord (_points [3].WorldCoords).Xy;  	_areaOnScreen [2] = inCamera.GetScreenCoord (_points [15].WorldCoords).Xy;  	_areaOnScreen [3] = inCamera.GetScreenCoord (_points [12].WorldCoords).Xy;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetAreaOnScreen,The following statement contains a magic number: _areaOnScreen [1] = _points [3].WorldCoords.Xy;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetAreaOnScreen,The following statement contains a magic number: _areaOnScreen [2] = _points [15].WorldCoords.Xy;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetAreaOnScreen,The following statement contains a magic number: _areaOnScreen [2] = _points [15].WorldCoords.Xy;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetAreaOnScreen,The following statement contains a magic number: _areaOnScreen [3] = _points [12].WorldCoords.Xy;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetAreaOnScreen,The following statement contains a magic number: _areaOnScreen [3] = _points [12].WorldCoords.Xy;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetAreaOnScreen,The following statement contains a magic number: _areaOnScreen [1] = inCamera.GetScreenCoord (_points [3].WorldCoords).Xy;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetAreaOnScreen,The following statement contains a magic number: _areaOnScreen [2] = inCamera.GetScreenCoord (_points [15].WorldCoords).Xy;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetAreaOnScreen,The following statement contains a magic number: _areaOnScreen [2] = inCamera.GetScreenCoord (_points [15].WorldCoords).Xy;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetAreaOnScreen,The following statement contains a magic number: _areaOnScreen [3] = inCamera.GetScreenCoord (_points [12].WorldCoords).Xy;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetAreaOnScreen,The following statement contains a magic number: _areaOnScreen [3] = inCamera.GetScreenCoord (_points [12].WorldCoords).Xy;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [1].Pos = _points [4].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [1].TexCoord = _points [4].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [1].Color = _points [4].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [2].Pos = _points [5].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [2].Pos = _points [5].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [2].TexCoord = _points [5].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [2].TexCoord = _points [5].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [2].Color = _points [5].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [2].Color = _points [5].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [3].Pos = _points [1].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [3].TexCoord = _points [1].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [3].Color = _points [1].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [4].Pos = _points [1].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [4].TexCoord = _points [1].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [4].Color = _points [1].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [5].Pos = _points [5].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [5].Pos = _points [5].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [5].TexCoord = _points [5].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [5].TexCoord = _points [5].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [5].Color = _points [5].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [5].Color = _points [5].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [6].Pos = _points [6].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [6].Pos = _points [6].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [6].TexCoord = _points [6].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [6].TexCoord = _points [6].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [6].Color = _points [6].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [6].Color = _points [6].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [7].Pos = _points [2].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [7].Pos = _points [2].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [7].TexCoord = _points [2].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [7].TexCoord = _points [2].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [7].Color = _points [2].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [7].Color = _points [2].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [8].Pos = _points [2].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [8].Pos = _points [2].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [8].TexCoord = _points [2].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [8].TexCoord = _points [2].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [8].Color = _points [2].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [8].Color = _points [2].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [9].Pos = _points [6].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [9].Pos = _points [6].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [9].TexCoord = _points [6].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [9].TexCoord = _points [6].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [9].Color = _points [6].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [9].Color = _points [6].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [10].Pos = _points [7].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [10].Pos = _points [7].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [10].TexCoord = _points [7].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [10].TexCoord = _points [7].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [10].Color = _points [7].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [10].Color = _points [7].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [11].Pos = _points [3].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [11].Pos = _points [3].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [11].TexCoord = _points [3].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [11].TexCoord = _points [3].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [11].Color = _points [3].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [11].Color = _points [3].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [12].Pos = _points [4].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [12].Pos = _points [4].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [12].TexCoord = _points [4].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [12].TexCoord = _points [4].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [12].Color = _points [4].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [12].Color = _points [4].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [13].Pos = _points [8].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [13].Pos = _points [8].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [13].TexCoord = _points [8].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [13].TexCoord = _points [8].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [13].Color = _points [8].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [13].Color = _points [8].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [14].Pos = _points [9].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [14].Pos = _points [9].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [14].TexCoord = _points [9].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [14].TexCoord = _points [9].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [14].Color = _points [9].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [14].Color = _points [9].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [15].Pos = _points [5].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [15].Pos = _points [5].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [15].TexCoord = _points [5].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [15].TexCoord = _points [5].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [15].Color = _points [5].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [15].Color = _points [5].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [16].Pos = _points [5].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [16].Pos = _points [5].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [16].TexCoord = _points [5].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [16].TexCoord = _points [5].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [16].Color = _points [5].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [16].Color = _points [5].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [17].Pos = _points [9].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [17].Pos = _points [9].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [17].TexCoord = _points [9].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [17].TexCoord = _points [9].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [17].Color = _points [9].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [17].Color = _points [9].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [18].Pos = _points [10].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [18].Pos = _points [10].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [18].TexCoord = _points [10].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [18].TexCoord = _points [10].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [18].Color = _points [10].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [18].Color = _points [10].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [19].Pos = _points [6].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [19].Pos = _points [6].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [19].TexCoord = _points [6].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [19].TexCoord = _points [6].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [19].Color = _points [6].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [19].Color = _points [6].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [20].Pos = _points [6].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [20].Pos = _points [6].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [20].TexCoord = _points [6].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [20].TexCoord = _points [6].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [20].Color = _points [6].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [20].Color = _points [6].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [21].Pos = _points [10].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [21].Pos = _points [10].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [21].TexCoord = _points [10].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [21].TexCoord = _points [10].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [21].Color = _points [10].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [21].Color = _points [10].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [22].Pos = _points [11].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [22].Pos = _points [11].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [22].TexCoord = _points [11].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [22].TexCoord = _points [11].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [22].Color = _points [11].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [22].Color = _points [11].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [23].Pos = _points [7].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [23].Pos = _points [7].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [23].TexCoord = _points [7].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [23].TexCoord = _points [7].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [23].Color = _points [7].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [23].Color = _points [7].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [24].Pos = _points [8].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [24].Pos = _points [8].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [24].TexCoord = _points [8].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [24].TexCoord = _points [8].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [24].Color = _points [8].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [24].Color = _points [8].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [25].Pos = _points [12].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [25].Pos = _points [12].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [25].TexCoord = _points [12].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [25].TexCoord = _points [12].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [25].Color = _points [12].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [25].Color = _points [12].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [26].Pos = _points [13].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [26].Pos = _points [13].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [26].TexCoord = _points [13].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [26].TexCoord = _points [13].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [26].Color = _points [13].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [26].Color = _points [13].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [27].Pos = _points [9].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [27].Pos = _points [9].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [27].TexCoord = _points [9].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [27].TexCoord = _points [9].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [27].Color = _points [9].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [27].Color = _points [9].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [28].Pos = _points [9].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [28].Pos = _points [9].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [28].TexCoord = _points [9].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [28].TexCoord = _points [9].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [28].Color = _points [9].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [28].Color = _points [9].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [29].Pos = _points [13].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [29].Pos = _points [13].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [29].TexCoord = _points [13].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [29].TexCoord = _points [13].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [29].Color = _points [13].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [29].Color = _points [13].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [30].Pos = _points [14].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [30].Pos = _points [14].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [30].TexCoord = _points [14].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [30].TexCoord = _points [14].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [30].Color = _points [14].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [30].Color = _points [14].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [31].Pos = _points [10].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [31].Pos = _points [10].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [31].TexCoord = _points [10].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [31].TexCoord = _points [10].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [31].Color = _points [10].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [31].Color = _points [10].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [32].Pos = _points [10].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [32].Pos = _points [10].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [32].TexCoord = _points [10].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [32].TexCoord = _points [10].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [32].Color = _points [10].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [32].Color = _points [10].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [33].Pos = _points [14].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [33].Pos = _points [14].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [33].TexCoord = _points [14].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [33].TexCoord = _points [14].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [33].Color = _points [14].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [33].Color = _points [14].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [34].Pos = _points [15].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [34].Pos = _points [15].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [34].TexCoord = _points [15].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [34].TexCoord = _points [15].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [34].Color = _points [15].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [34].Color = _points [15].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [35].Pos = _points [11].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [35].Pos = _points [11].SceneCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [35].TexCoord = _points [11].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [35].TexCoord = _points [11].UVCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [35].Color = _points [11].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,DrawVertices,The following statement contains a magic number: _vertices [35].Color = _points [11].Tint;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: switch (_activeArea) {  case ActiveArea.LeftBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [1].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [13].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.TopBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [7].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [4].WorldCoords;  	break;  case ActiveArea.RightBorder:  	_tempActiveAreaOnScreen [0] = _points [2].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [14].WorldCoords;  	break;  case ActiveArea.BottomBorder:  	_tempActiveAreaOnScreen [0] = _points [8].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [11].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.Center:  	_tempActiveAreaOnScreen [0] = _points [5].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [6].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [10].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [9].WorldCoords;  	break;  default:  	//All or others.. but it should never happen  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: switch (_activeArea) {  case ActiveArea.LeftBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [1].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [13].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.TopBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [7].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [4].WorldCoords;  	break;  case ActiveArea.RightBorder:  	_tempActiveAreaOnScreen [0] = _points [2].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [14].WorldCoords;  	break;  case ActiveArea.BottomBorder:  	_tempActiveAreaOnScreen [0] = _points [8].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [11].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.Center:  	_tempActiveAreaOnScreen [0] = _points [5].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [6].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [10].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [9].WorldCoords;  	break;  default:  	//All or others.. but it should never happen  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: switch (_activeArea) {  case ActiveArea.LeftBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [1].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [13].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.TopBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [7].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [4].WorldCoords;  	break;  case ActiveArea.RightBorder:  	_tempActiveAreaOnScreen [0] = _points [2].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [14].WorldCoords;  	break;  case ActiveArea.BottomBorder:  	_tempActiveAreaOnScreen [0] = _points [8].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [11].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.Center:  	_tempActiveAreaOnScreen [0] = _points [5].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [6].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [10].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [9].WorldCoords;  	break;  default:  	//All or others.. but it should never happen  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: switch (_activeArea) {  case ActiveArea.LeftBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [1].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [13].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.TopBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [7].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [4].WorldCoords;  	break;  case ActiveArea.RightBorder:  	_tempActiveAreaOnScreen [0] = _points [2].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [14].WorldCoords;  	break;  case ActiveArea.BottomBorder:  	_tempActiveAreaOnScreen [0] = _points [8].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [11].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.Center:  	_tempActiveAreaOnScreen [0] = _points [5].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [6].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [10].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [9].WorldCoords;  	break;  default:  	//All or others.. but it should never happen  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: switch (_activeArea) {  case ActiveArea.LeftBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [1].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [13].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.TopBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [7].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [4].WorldCoords;  	break;  case ActiveArea.RightBorder:  	_tempActiveAreaOnScreen [0] = _points [2].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [14].WorldCoords;  	break;  case ActiveArea.BottomBorder:  	_tempActiveAreaOnScreen [0] = _points [8].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [11].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.Center:  	_tempActiveAreaOnScreen [0] = _points [5].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [6].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [10].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [9].WorldCoords;  	break;  default:  	//All or others.. but it should never happen  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: switch (_activeArea) {  case ActiveArea.LeftBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [1].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [13].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.TopBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [7].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [4].WorldCoords;  	break;  case ActiveArea.RightBorder:  	_tempActiveAreaOnScreen [0] = _points [2].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [14].WorldCoords;  	break;  case ActiveArea.BottomBorder:  	_tempActiveAreaOnScreen [0] = _points [8].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [11].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.Center:  	_tempActiveAreaOnScreen [0] = _points [5].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [6].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [10].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [9].WorldCoords;  	break;  default:  	//All or others.. but it should never happen  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: switch (_activeArea) {  case ActiveArea.LeftBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [1].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [13].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.TopBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [7].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [4].WorldCoords;  	break;  case ActiveArea.RightBorder:  	_tempActiveAreaOnScreen [0] = _points [2].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [14].WorldCoords;  	break;  case ActiveArea.BottomBorder:  	_tempActiveAreaOnScreen [0] = _points [8].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [11].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.Center:  	_tempActiveAreaOnScreen [0] = _points [5].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [6].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [10].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [9].WorldCoords;  	break;  default:  	//All or others.. but it should never happen  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: switch (_activeArea) {  case ActiveArea.LeftBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [1].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [13].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.TopBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [7].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [4].WorldCoords;  	break;  case ActiveArea.RightBorder:  	_tempActiveAreaOnScreen [0] = _points [2].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [14].WorldCoords;  	break;  case ActiveArea.BottomBorder:  	_tempActiveAreaOnScreen [0] = _points [8].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [11].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.Center:  	_tempActiveAreaOnScreen [0] = _points [5].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [6].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [10].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [9].WorldCoords;  	break;  default:  	//All or others.. but it should never happen  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: switch (_activeArea) {  case ActiveArea.LeftBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [1].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [13].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.TopBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [7].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [4].WorldCoords;  	break;  case ActiveArea.RightBorder:  	_tempActiveAreaOnScreen [0] = _points [2].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [14].WorldCoords;  	break;  case ActiveArea.BottomBorder:  	_tempActiveAreaOnScreen [0] = _points [8].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [11].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.Center:  	_tempActiveAreaOnScreen [0] = _points [5].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [6].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [10].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [9].WorldCoords;  	break;  default:  	//All or others.. but it should never happen  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: switch (_activeArea) {  case ActiveArea.LeftBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [1].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [13].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.TopBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [7].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [4].WorldCoords;  	break;  case ActiveArea.RightBorder:  	_tempActiveAreaOnScreen [0] = _points [2].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [14].WorldCoords;  	break;  case ActiveArea.BottomBorder:  	_tempActiveAreaOnScreen [0] = _points [8].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [11].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.Center:  	_tempActiveAreaOnScreen [0] = _points [5].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [6].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [10].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [9].WorldCoords;  	break;  default:  	//All or others.. but it should never happen  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: switch (_activeArea) {  case ActiveArea.LeftBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [1].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [13].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.TopBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [7].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [4].WorldCoords;  	break;  case ActiveArea.RightBorder:  	_tempActiveAreaOnScreen [0] = _points [2].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [14].WorldCoords;  	break;  case ActiveArea.BottomBorder:  	_tempActiveAreaOnScreen [0] = _points [8].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [11].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.Center:  	_tempActiveAreaOnScreen [0] = _points [5].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [6].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [10].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [9].WorldCoords;  	break;  default:  	//All or others.. but it should never happen  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: switch (_activeArea) {  case ActiveArea.LeftBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [1].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [13].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.TopBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [7].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [4].WorldCoords;  	break;  case ActiveArea.RightBorder:  	_tempActiveAreaOnScreen [0] = _points [2].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [14].WorldCoords;  	break;  case ActiveArea.BottomBorder:  	_tempActiveAreaOnScreen [0] = _points [8].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [11].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.Center:  	_tempActiveAreaOnScreen [0] = _points [5].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [6].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [10].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [9].WorldCoords;  	break;  default:  	//All or others.. but it should never happen  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: switch (_activeArea) {  case ActiveArea.LeftBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [1].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [13].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.TopBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [7].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [4].WorldCoords;  	break;  case ActiveArea.RightBorder:  	_tempActiveAreaOnScreen [0] = _points [2].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [14].WorldCoords;  	break;  case ActiveArea.BottomBorder:  	_tempActiveAreaOnScreen [0] = _points [8].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [11].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.Center:  	_tempActiveAreaOnScreen [0] = _points [5].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [6].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [10].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [9].WorldCoords;  	break;  default:  	//All or others.. but it should never happen  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: switch (_activeArea) {  case ActiveArea.LeftBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [1].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [13].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.TopBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [7].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [4].WorldCoords;  	break;  case ActiveArea.RightBorder:  	_tempActiveAreaOnScreen [0] = _points [2].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [14].WorldCoords;  	break;  case ActiveArea.BottomBorder:  	_tempActiveAreaOnScreen [0] = _points [8].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [11].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.Center:  	_tempActiveAreaOnScreen [0] = _points [5].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [6].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [10].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [9].WorldCoords;  	break;  default:  	//All or others.. but it should never happen  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: switch (_activeArea) {  case ActiveArea.LeftBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [1].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [13].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.TopBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [7].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [4].WorldCoords;  	break;  case ActiveArea.RightBorder:  	_tempActiveAreaOnScreen [0] = _points [2].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [14].WorldCoords;  	break;  case ActiveArea.BottomBorder:  	_tempActiveAreaOnScreen [0] = _points [8].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [11].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.Center:  	_tempActiveAreaOnScreen [0] = _points [5].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [6].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [10].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [9].WorldCoords;  	break;  default:  	//All or others.. but it should never happen  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: switch (_activeArea) {  case ActiveArea.LeftBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [1].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [13].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.TopBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [7].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [4].WorldCoords;  	break;  case ActiveArea.RightBorder:  	_tempActiveAreaOnScreen [0] = _points [2].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [14].WorldCoords;  	break;  case ActiveArea.BottomBorder:  	_tempActiveAreaOnScreen [0] = _points [8].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [11].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.Center:  	_tempActiveAreaOnScreen [0] = _points [5].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [6].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [10].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [9].WorldCoords;  	break;  default:  	//All or others.. but it should never happen  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: switch (_activeArea) {  case ActiveArea.LeftBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [1].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [13].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.TopBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [7].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [4].WorldCoords;  	break;  case ActiveArea.RightBorder:  	_tempActiveAreaOnScreen [0] = _points [2].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [14].WorldCoords;  	break;  case ActiveArea.BottomBorder:  	_tempActiveAreaOnScreen [0] = _points [8].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [11].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.Center:  	_tempActiveAreaOnScreen [0] = _points [5].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [6].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [10].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [9].WorldCoords;  	break;  default:  	//All or others.. but it should never happen  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: switch (_activeArea) {  case ActiveArea.LeftBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [1].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [13].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.TopBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [7].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [4].WorldCoords;  	break;  case ActiveArea.RightBorder:  	_tempActiveAreaOnScreen [0] = _points [2].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [14].WorldCoords;  	break;  case ActiveArea.BottomBorder:  	_tempActiveAreaOnScreen [0] = _points [8].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [11].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.Center:  	_tempActiveAreaOnScreen [0] = _points [5].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [6].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [10].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [9].WorldCoords;  	break;  default:  	//All or others.. but it should never happen  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: switch (_activeArea) {  case ActiveArea.LeftBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [1].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [13].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.TopBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [7].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [4].WorldCoords;  	break;  case ActiveArea.RightBorder:  	_tempActiveAreaOnScreen [0] = _points [2].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [14].WorldCoords;  	break;  case ActiveArea.BottomBorder:  	_tempActiveAreaOnScreen [0] = _points [8].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [11].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.Center:  	_tempActiveAreaOnScreen [0] = _points [5].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [6].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [10].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [9].WorldCoords;  	break;  default:  	//All or others.. but it should never happen  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: switch (_activeArea) {  case ActiveArea.LeftBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [1].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [13].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.TopBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [7].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [4].WorldCoords;  	break;  case ActiveArea.RightBorder:  	_tempActiveAreaOnScreen [0] = _points [2].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [14].WorldCoords;  	break;  case ActiveArea.BottomBorder:  	_tempActiveAreaOnScreen [0] = _points [8].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [11].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.Center:  	_tempActiveAreaOnScreen [0] = _points [5].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [6].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [10].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [9].WorldCoords;  	break;  default:  	//All or others.. but it should never happen  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: switch (_activeArea) {  case ActiveArea.LeftBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [1].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [13].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.TopBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [7].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [4].WorldCoords;  	break;  case ActiveArea.RightBorder:  	_tempActiveAreaOnScreen [0] = _points [2].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [14].WorldCoords;  	break;  case ActiveArea.BottomBorder:  	_tempActiveAreaOnScreen [0] = _points [8].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [11].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.Center:  	_tempActiveAreaOnScreen [0] = _points [5].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [6].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [10].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [9].WorldCoords;  	break;  default:  	//All or others.. but it should never happen  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: switch (_activeArea) {  case ActiveArea.LeftBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [1].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [13].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.TopBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [7].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [4].WorldCoords;  	break;  case ActiveArea.RightBorder:  	_tempActiveAreaOnScreen [0] = _points [2].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [14].WorldCoords;  	break;  case ActiveArea.BottomBorder:  	_tempActiveAreaOnScreen [0] = _points [8].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [11].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.Center:  	_tempActiveAreaOnScreen [0] = _points [5].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [6].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [10].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [9].WorldCoords;  	break;  default:  	//All or others.. but it should never happen  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: switch (_activeArea) {  case ActiveArea.LeftBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [1].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [13].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.TopBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [7].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [4].WorldCoords;  	break;  case ActiveArea.RightBorder:  	_tempActiveAreaOnScreen [0] = _points [2].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [14].WorldCoords;  	break;  case ActiveArea.BottomBorder:  	_tempActiveAreaOnScreen [0] = _points [8].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [11].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.Center:  	_tempActiveAreaOnScreen [0] = _points [5].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [6].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [10].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [9].WorldCoords;  	break;  default:  	//All or others.. but it should never happen  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: switch (_activeArea) {  case ActiveArea.LeftBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [1].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [13].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.TopBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [7].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [4].WorldCoords;  	break;  case ActiveArea.RightBorder:  	_tempActiveAreaOnScreen [0] = _points [2].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [14].WorldCoords;  	break;  case ActiveArea.BottomBorder:  	_tempActiveAreaOnScreen [0] = _points [8].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [11].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.Center:  	_tempActiveAreaOnScreen [0] = _points [5].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [6].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [10].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [9].WorldCoords;  	break;  default:  	//All or others.. but it should never happen  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: switch (_activeArea) {  case ActiveArea.LeftBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [1].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [13].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.TopBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [7].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [4].WorldCoords;  	break;  case ActiveArea.RightBorder:  	_tempActiveAreaOnScreen [0] = _points [2].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [14].WorldCoords;  	break;  case ActiveArea.BottomBorder:  	_tempActiveAreaOnScreen [0] = _points [8].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [11].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.Center:  	_tempActiveAreaOnScreen [0] = _points [5].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [6].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [10].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [9].WorldCoords;  	break;  default:  	//All or others.. but it should never happen  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: switch (_activeArea) {  case ActiveArea.LeftBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [1].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [13].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.TopBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [7].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [4].WorldCoords;  	break;  case ActiveArea.RightBorder:  	_tempActiveAreaOnScreen [0] = _points [2].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [14].WorldCoords;  	break;  case ActiveArea.BottomBorder:  	_tempActiveAreaOnScreen [0] = _points [8].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [11].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.Center:  	_tempActiveAreaOnScreen [0] = _points [5].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [6].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [10].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [9].WorldCoords;  	break;  default:  	//All or others.. but it should never happen  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: switch (_activeArea) {  case ActiveArea.LeftBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [1].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [13].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.TopBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [7].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [4].WorldCoords;  	break;  case ActiveArea.RightBorder:  	_tempActiveAreaOnScreen [0] = _points [2].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [14].WorldCoords;  	break;  case ActiveArea.BottomBorder:  	_tempActiveAreaOnScreen [0] = _points [8].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [11].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.Center:  	_tempActiveAreaOnScreen [0] = _points [5].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [6].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [10].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [9].WorldCoords;  	break;  default:  	//All or others.. but it should never happen  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: switch (_activeArea) {  case ActiveArea.LeftBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [1].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [13].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.TopBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [7].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [4].WorldCoords;  	break;  case ActiveArea.RightBorder:  	_tempActiveAreaOnScreen [0] = _points [2].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [14].WorldCoords;  	break;  case ActiveArea.BottomBorder:  	_tempActiveAreaOnScreen [0] = _points [8].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [11].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.Center:  	_tempActiveAreaOnScreen [0] = _points [5].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [6].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [10].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [9].WorldCoords;  	break;  default:  	//All or others.. but it should never happen  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: switch (_activeArea) {  case ActiveArea.LeftBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [1].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [13].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.TopBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [7].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [4].WorldCoords;  	break;  case ActiveArea.RightBorder:  	_tempActiveAreaOnScreen [0] = _points [2].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [14].WorldCoords;  	break;  case ActiveArea.BottomBorder:  	_tempActiveAreaOnScreen [0] = _points [8].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [11].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.Center:  	_tempActiveAreaOnScreen [0] = _points [5].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [6].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [10].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [9].WorldCoords;  	break;  default:  	//All or others.. but it should never happen  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: switch (_activeArea) {  case ActiveArea.LeftBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [1].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [13].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.TopBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [7].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [4].WorldCoords;  	break;  case ActiveArea.RightBorder:  	_tempActiveAreaOnScreen [0] = _points [2].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [14].WorldCoords;  	break;  case ActiveArea.BottomBorder:  	_tempActiveAreaOnScreen [0] = _points [8].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [11].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.Center:  	_tempActiveAreaOnScreen [0] = _points [5].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [6].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [10].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [9].WorldCoords;  	break;  default:  	//All or others.. but it should never happen  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: switch (_activeArea) {  case ActiveArea.LeftBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [1].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [13].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.TopBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [7].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [4].WorldCoords;  	break;  case ActiveArea.RightBorder:  	_tempActiveAreaOnScreen [0] = _points [2].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [14].WorldCoords;  	break;  case ActiveArea.BottomBorder:  	_tempActiveAreaOnScreen [0] = _points [8].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [11].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.Center:  	_tempActiveAreaOnScreen [0] = _points [5].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [6].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [10].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [9].WorldCoords;  	break;  default:  	//All or others.. but it should never happen  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: switch (_activeArea) {  case ActiveArea.LeftBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [1].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [13].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.TopBorder:  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [7].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [4].WorldCoords;  	break;  case ActiveArea.RightBorder:  	_tempActiveAreaOnScreen [0] = _points [2].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [14].WorldCoords;  	break;  case ActiveArea.BottomBorder:  	_tempActiveAreaOnScreen [0] = _points [8].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [11].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  case ActiveArea.Center:  	_tempActiveAreaOnScreen [0] = _points [5].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [6].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [10].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [9].WorldCoords;  	break;  default:  	//All or others.. but it should never happen  	_tempActiveAreaOnScreen [0] = _points [0].WorldCoords;  	_tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  	_tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  	_tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  	break;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: _tempActiveAreaOnScreen [2] = _points [13].WorldCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: _tempActiveAreaOnScreen [2] = _points [13].WorldCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: _tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: _tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: _tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: _tempActiveAreaOnScreen [2] = _points [7].WorldCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: _tempActiveAreaOnScreen [2] = _points [7].WorldCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: _tempActiveAreaOnScreen [3] = _points [4].WorldCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: _tempActiveAreaOnScreen [3] = _points [4].WorldCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: _tempActiveAreaOnScreen [0] = _points [2].WorldCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: _tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: _tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: _tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: _tempActiveAreaOnScreen [3] = _points [14].WorldCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: _tempActiveAreaOnScreen [3] = _points [14].WorldCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: _tempActiveAreaOnScreen [0] = _points [8].WorldCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: _tempActiveAreaOnScreen [1] = _points [11].WorldCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: _tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: _tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: _tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: _tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: _tempActiveAreaOnScreen [0] = _points [5].WorldCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: _tempActiveAreaOnScreen [1] = _points [6].WorldCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: _tempActiveAreaOnScreen [2] = _points [10].WorldCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: _tempActiveAreaOnScreen [2] = _points [10].WorldCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: _tempActiveAreaOnScreen [3] = _points [9].WorldCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: _tempActiveAreaOnScreen [3] = _points [9].WorldCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: _tempActiveAreaOnScreen [1] = _points [3].WorldCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: _tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: _tempActiveAreaOnScreen [2] = _points [15].WorldCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: _tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: _tempActiveAreaOnScreen [3] = _points [12].WorldCoords;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: if (_isInOverlay) {  	_activeAreaOnScreen [0] = _tempActiveAreaOnScreen [0].Xy;  	_activeAreaOnScreen [1] = _tempActiveAreaOnScreen [1].Xy;  	_activeAreaOnScreen [2] = _tempActiveAreaOnScreen [2].Xy;  	_activeAreaOnScreen [3] = _tempActiveAreaOnScreen [3].Xy;  }  else {  	_activeAreaOnScreen [0] = inCamera.GetScreenCoord (_tempActiveAreaOnScreen [0]).Xy;  	_activeAreaOnScreen [1] = inCamera.GetScreenCoord (_tempActiveAreaOnScreen [1]).Xy;  	_activeAreaOnScreen [2] = inCamera.GetScreenCoord (_tempActiveAreaOnScreen [2]).Xy;  	_activeAreaOnScreen [3] = inCamera.GetScreenCoord (_tempActiveAreaOnScreen [3]).Xy;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: if (_isInOverlay) {  	_activeAreaOnScreen [0] = _tempActiveAreaOnScreen [0].Xy;  	_activeAreaOnScreen [1] = _tempActiveAreaOnScreen [1].Xy;  	_activeAreaOnScreen [2] = _tempActiveAreaOnScreen [2].Xy;  	_activeAreaOnScreen [3] = _tempActiveAreaOnScreen [3].Xy;  }  else {  	_activeAreaOnScreen [0] = inCamera.GetScreenCoord (_tempActiveAreaOnScreen [0]).Xy;  	_activeAreaOnScreen [1] = inCamera.GetScreenCoord (_tempActiveAreaOnScreen [1]).Xy;  	_activeAreaOnScreen [2] = inCamera.GetScreenCoord (_tempActiveAreaOnScreen [2]).Xy;  	_activeAreaOnScreen [3] = inCamera.GetScreenCoord (_tempActiveAreaOnScreen [3]).Xy;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: if (_isInOverlay) {  	_activeAreaOnScreen [0] = _tempActiveAreaOnScreen [0].Xy;  	_activeAreaOnScreen [1] = _tempActiveAreaOnScreen [1].Xy;  	_activeAreaOnScreen [2] = _tempActiveAreaOnScreen [2].Xy;  	_activeAreaOnScreen [3] = _tempActiveAreaOnScreen [3].Xy;  }  else {  	_activeAreaOnScreen [0] = inCamera.GetScreenCoord (_tempActiveAreaOnScreen [0]).Xy;  	_activeAreaOnScreen [1] = inCamera.GetScreenCoord (_tempActiveAreaOnScreen [1]).Xy;  	_activeAreaOnScreen [2] = inCamera.GetScreenCoord (_tempActiveAreaOnScreen [2]).Xy;  	_activeAreaOnScreen [3] = inCamera.GetScreenCoord (_tempActiveAreaOnScreen [3]).Xy;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: if (_isInOverlay) {  	_activeAreaOnScreen [0] = _tempActiveAreaOnScreen [0].Xy;  	_activeAreaOnScreen [1] = _tempActiveAreaOnScreen [1].Xy;  	_activeAreaOnScreen [2] = _tempActiveAreaOnScreen [2].Xy;  	_activeAreaOnScreen [3] = _tempActiveAreaOnScreen [3].Xy;  }  else {  	_activeAreaOnScreen [0] = inCamera.GetScreenCoord (_tempActiveAreaOnScreen [0]).Xy;  	_activeAreaOnScreen [1] = inCamera.GetScreenCoord (_tempActiveAreaOnScreen [1]).Xy;  	_activeAreaOnScreen [2] = inCamera.GetScreenCoord (_tempActiveAreaOnScreen [2]).Xy;  	_activeAreaOnScreen [3] = inCamera.GetScreenCoord (_tempActiveAreaOnScreen [3]).Xy;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: if (_isInOverlay) {  	_activeAreaOnScreen [0] = _tempActiveAreaOnScreen [0].Xy;  	_activeAreaOnScreen [1] = _tempActiveAreaOnScreen [1].Xy;  	_activeAreaOnScreen [2] = _tempActiveAreaOnScreen [2].Xy;  	_activeAreaOnScreen [3] = _tempActiveAreaOnScreen [3].Xy;  }  else {  	_activeAreaOnScreen [0] = inCamera.GetScreenCoord (_tempActiveAreaOnScreen [0]).Xy;  	_activeAreaOnScreen [1] = inCamera.GetScreenCoord (_tempActiveAreaOnScreen [1]).Xy;  	_activeAreaOnScreen [2] = inCamera.GetScreenCoord (_tempActiveAreaOnScreen [2]).Xy;  	_activeAreaOnScreen [3] = inCamera.GetScreenCoord (_tempActiveAreaOnScreen [3]).Xy;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: if (_isInOverlay) {  	_activeAreaOnScreen [0] = _tempActiveAreaOnScreen [0].Xy;  	_activeAreaOnScreen [1] = _tempActiveAreaOnScreen [1].Xy;  	_activeAreaOnScreen [2] = _tempActiveAreaOnScreen [2].Xy;  	_activeAreaOnScreen [3] = _tempActiveAreaOnScreen [3].Xy;  }  else {  	_activeAreaOnScreen [0] = inCamera.GetScreenCoord (_tempActiveAreaOnScreen [0]).Xy;  	_activeAreaOnScreen [1] = inCamera.GetScreenCoord (_tempActiveAreaOnScreen [1]).Xy;  	_activeAreaOnScreen [2] = inCamera.GetScreenCoord (_tempActiveAreaOnScreen [2]).Xy;  	_activeAreaOnScreen [3] = inCamera.GetScreenCoord (_tempActiveAreaOnScreen [3]).Xy;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: if (_isInOverlay) {  	_activeAreaOnScreen [0] = _tempActiveAreaOnScreen [0].Xy;  	_activeAreaOnScreen [1] = _tempActiveAreaOnScreen [1].Xy;  	_activeAreaOnScreen [2] = _tempActiveAreaOnScreen [2].Xy;  	_activeAreaOnScreen [3] = _tempActiveAreaOnScreen [3].Xy;  }  else {  	_activeAreaOnScreen [0] = inCamera.GetScreenCoord (_tempActiveAreaOnScreen [0]).Xy;  	_activeAreaOnScreen [1] = inCamera.GetScreenCoord (_tempActiveAreaOnScreen [1]).Xy;  	_activeAreaOnScreen [2] = inCamera.GetScreenCoord (_tempActiveAreaOnScreen [2]).Xy;  	_activeAreaOnScreen [3] = inCamera.GetScreenCoord (_tempActiveAreaOnScreen [3]).Xy;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: if (_isInOverlay) {  	_activeAreaOnScreen [0] = _tempActiveAreaOnScreen [0].Xy;  	_activeAreaOnScreen [1] = _tempActiveAreaOnScreen [1].Xy;  	_activeAreaOnScreen [2] = _tempActiveAreaOnScreen [2].Xy;  	_activeAreaOnScreen [3] = _tempActiveAreaOnScreen [3].Xy;  }  else {  	_activeAreaOnScreen [0] = inCamera.GetScreenCoord (_tempActiveAreaOnScreen [0]).Xy;  	_activeAreaOnScreen [1] = inCamera.GetScreenCoord (_tempActiveAreaOnScreen [1]).Xy;  	_activeAreaOnScreen [2] = inCamera.GetScreenCoord (_tempActiveAreaOnScreen [2]).Xy;  	_activeAreaOnScreen [3] = inCamera.GetScreenCoord (_tempActiveAreaOnScreen [3]).Xy;  }  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: _activeAreaOnScreen [2] = _tempActiveAreaOnScreen [2].Xy;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: _activeAreaOnScreen [2] = _tempActiveAreaOnScreen [2].Xy;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: _activeAreaOnScreen [3] = _tempActiveAreaOnScreen [3].Xy;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: _activeAreaOnScreen [3] = _tempActiveAreaOnScreen [3].Xy;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: _activeAreaOnScreen [2] = inCamera.GetScreenCoord (_tempActiveAreaOnScreen [2]).Xy;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: _activeAreaOnScreen [2] = inCamera.GetScreenCoord (_tempActiveAreaOnScreen [2]).Xy;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: _activeAreaOnScreen [3] = inCamera.GetScreenCoord (_tempActiveAreaOnScreen [3]).Xy;  
Magic Number,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,Widget,C:\repos\SirePi_duality-frozen\UI\Widgets\Widget.cs,GetDefaultActiveAreaOnScreen,The following statement contains a magic number: _activeAreaOnScreen [3] = inCamera.GetScreenCoord (_tempActiveAreaOnScreen [3]).Xy;  
Missing Default,SnowyPeak.Duality.Plugin.Frozen.UI.Resources,Appearance,C:\repos\SirePi_duality-frozen\UI\Resources\Appearance.cs,GetAtlasForStatus,The following switch statement is missing a default case: switch (status) {  case Widget.WidgetStatus.Normal:  	result = Normal;  	break;  case Widget.WidgetStatus.Hover:  	result = Hover;  	break;  case Widget.WidgetStatus.Active:  	result = Active;  	break;  case Widget.WidgetStatus.Disabled:  	result = Disabled;  	break;  }  
Missing Default,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,CheckButton,C:\repos\SirePi_duality-frozen\UI\Widgets\CheckButton.cs,AddGlyph,The following switch statement is missing a default case: switch (GlyphLocation) {  case Alignment.TopLeft:  	t.RelativePos = new Vector3 (0' 0' 0);  	break;  case Alignment.Top:  	t.RelativePos = new Vector3 (Rect.CenterX' 0' 0);  	break;  case Alignment.TopRight:  	t.RelativePos = new Vector3 (Rect.W' 0' 0);  	break;  case Alignment.Left:  	t.RelativePos = new Vector3 (0' Rect.CenterY' 0);  	break;  case Alignment.Center:  	t.RelativePos = new Vector3 (Rect.CenterX' Rect.CenterY' 0);  	break;  case Alignment.Right:  	t.RelativePos = new Vector3 (Rect.W' Rect.CenterY' 0);  	break;  case Alignment.BottomLeft:  	t.RelativePos = new Vector3 (0' Rect.H' 0);  	break;  case Alignment.Bottom:  	t.RelativePos = new Vector3 (Rect.CenterX' Rect.H' 0);  	break;  case Alignment.BottomRight:  	t.RelativePos = new Vector3 (Rect.W' Rect.H' 0);  	break;  }  
Missing Default,SnowyPeak.Duality.Plugin.Frozen.UI.Widgets,TextBox,C:\repos\SirePi_duality-frozen\UI\Widgets\TextBox.cs,ManageKey,The following switch statement is missing a default case: switch (key) {  case Key.BackSpace:  	if (_text.Length > 0) {  		_text = _text.Substring (0' _text.Length - 1);  	}  	break;  case Key.Space:  	_text += " ";  	break;  case Key.Comma:  	_text += "'";  	break;  case Key.Period:  case Key.KeypadDecimal:  	_text += ".";  	break;  }  
