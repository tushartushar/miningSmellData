Implementation smell,Namespace,Class,File,Method,Description
Long Method,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The method has 1369 lines of code.
Complex Method,ACT.TPMonitor,AutoUpdater,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AutoUpdater.cs,CheckNewAvailable,Cyclomatic complexity of the method is 8
Complex Method,ACT.TPMonitor,TPMonitorController,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\TPMonitorController.cs,CheckProcess,Cyclomatic complexity of the method is 10
Complex Method,ACT.TPMonitor,TPMonitorController,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\TPMonitorController.cs,GetMemberTP,Cyclomatic complexity of the method is 10
Long Statement,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The length of the statement  "            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(ACTTabpageControl)); " is 137.
Long Statement,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The length of the statement  "            this.textBoxCharacterFolder.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left)  " is 155.
Long Statement,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The length of the statement  "            this.buttonOpenFolder.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 152.
Long Statement,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The length of the statement  "            this.tableLayoutPanelStatus.ColumnStyles.Add(new System.Windows.Forms.ColumnStyle(System.Windows.Forms.SizeType.Absolute' 120F)); " is 129.
Long Statement,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The length of the statement  "            this.tableLayoutPanelStatus.ColumnStyles.Add(new System.Windows.Forms.ColumnStyle(System.Windows.Forms.SizeType.Percent' 100F)); " is 128.
Long Statement,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The length of the statement  "            this.tableLayoutPanelStatus.RowStyles.Add(new System.Windows.Forms.RowStyle(System.Windows.Forms.SizeType.Percent' 25F)); " is 121.
Long Statement,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The length of the statement  "            this.tableLayoutPanelStatus.RowStyles.Add(new System.Windows.Forms.RowStyle(System.Windows.Forms.SizeType.Percent' 25F)); " is 121.
Long Statement,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The length of the statement  "            this.tableLayoutPanelStatus.RowStyles.Add(new System.Windows.Forms.RowStyle(System.Windows.Forms.SizeType.Percent' 25F)); " is 121.
Long Statement,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The length of the statement  "            this.tableLayoutPanelStatus.RowStyles.Add(new System.Windows.Forms.RowStyle(System.Windows.Forms.SizeType.Percent' 25F)); " is 121.
Long Statement,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The length of the statement  "            this.textBoxRecommend.Text = "/e TP 2:<2>\r\n/e TP 3:<3>\r\n/e TP 4:<4>\r\n/e TP 5:<5>\r\n/e TP 6:<6>\r\n/e TP 7:<7>\r\n/e " + " is 126.
Long Statement,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The length of the statement  "            this.dataGridViewColor.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize; " is 123.
Long Statement,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The length of the statement  "            dataGridViewCellStyle4.Font = new System.Drawing.Font("MS UI Gothic"' 9F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(128))); " is 158.
Long Statement,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The length of the statement  "            this.dataGridViewColor.CellContentClick += new System.Windows.Forms.DataGridViewCellEventHandler(this.dataGridViewColor_CellContentClick); " is 138.
Long Statement,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The length of the statement  "            this.imageListJob.ImageStream = ((System.Windows.Forms.ImageListStreamer)(resources.GetObject("imageListJob.ImageStream"))); " is 124.
Long Statement,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The length of the statement  "            this.imageListJobOff.ImageStream = ((System.Windows.Forms.ImageListStreamer)(resources.GetObject("imageListJobOff.ImageStream"))); " is 130.
Long Statement,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitPlugin,The length of the statement  "            if (ActGlobals.oFormActMain.GetAutomaticUpdatesAllowed())   // If ACT is set to automatically check for updates' check for updates to the plugin " is 144.
Long Statement,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitPlugin,The length of the statement  "                new Thread(new ThreadStart(CheckForUpdate)).Start();    // If we don't put this on a separate thread' web latency will delay the plugin init phase " is 146.
Long Statement,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,ChangedStatus,The length of the statement  "                    //upgradeLabel.Text = string.Format("FFXIV_ACT_Plugin.dll version {0} is not supported version. Please upgrade to {1} or higher. \n\n {2}"' " is 139.
Long Statement,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,OnPaint,The length of the statement  "                            DrawBar(g' i' _controller.PartyMemberInfo[i].CurrentTP' _controller.IsUserScale ? _controller.UserScale : _controller.PartyListUI.Scale); " is 137.
Long Statement,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,DrawImg,The length of the statement  "            Rectangle rect = new Rectangle((int)(((78 * (idx % 4)) + 8) * scale)' (int)(((32 * (idx / 4)) + 7) * scale)' (int)(24 * scale)' (int)(24 * scale)); " is 147.
Long Statement,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,DrawBar,The length of the statement  "            Rectangle rect = new Rectangle((int)(((78 * (idx % 4)) + 37) * scale)' (int)(((32 * (idx / 4)) + 11) * scale)' (int)(40 * scale)' (int)(18 * scale)); " is 149.
Long Statement,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,InitializeComponent,The length of the statement  "            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(AllianceStyleViewer)); " is 139.
Long Statement,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,InitializeComponent,The length of the statement  "            this.imageListJob.ImageStream = ((System.Windows.Forms.ImageListStreamer)(resources.GetObject("imageListJob.ImageStream"))); " is 124.
Long Statement,ACT.TPMonitor,AutoUpdater,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AutoUpdater.cs,CheckNewAvailable,The length of the statement  "                if (!(r.assets[0].content_type.Equals("application/x-zip-compressed") && r.assets[0].state.Equals("uploaded"))) continue; " is 121.
Long Statement,ACT.TPMonitor,FFXIVPluginHelper,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\FFXIVPluginHelper.cs,GetScanCombatants,The length of the statement  "            FieldInfo fi = _plugin.pluginObj.GetType().GetField("_Memory"' BindingFlags.GetField | BindingFlags.NonPublic | BindingFlags.Instance); " is 135.
Long Statement,ACT.TPMonitor,FFXIVPluginHelper,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\FFXIVPluginHelper.cs,GetScanCombatants,The length of the statement  "            fi = config.GetType().GetField("ScanCombatants"' BindingFlags.GetField | BindingFlags.NonPublic | BindingFlags.Instance); " is 121.
Long Statement,ACT.TPMonitor,FFXIVPluginHelper,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\FFXIVPluginHelper.cs,GetPlayerData,The length of the statement  "                var item = scanCombatants.GetType().InvokeMember("GetPlayerData"' BindingFlags.Public | BindingFlags.Instance | BindingFlags.InvokeMethod' null' scanCombatants' null); " is 167.
Long Statement,ACT.TPMonitor,FFXIVPluginHelper,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\FFXIVPluginHelper.cs,GetCombatantList,The length of the statement  "                var item = scanCombatants.GetType().InvokeMember("GetCombatantList"' BindingFlags.Public | BindingFlags.Instance | BindingFlags.InvokeMethod' null' scanCombatants' null); " is 170.
Long Statement,ACT.TPMonitor,FFXIVPluginHelper,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\FFXIVPluginHelper.cs,GetCombatantList,The length of the statement  "                FieldInfo fi = item.GetType().GetField("_items"' BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.GetField); " is 121.
Long Statement,ACT.TPMonitor,FFXIVPluginHelper,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\FFXIVPluginHelper.cs,GetCombatantList,The length of the statement  "                Type[] nestedType = item.GetType().GetNestedTypes(BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.Public); " is 120.
Long Statement,ACT.TPMonitor,TPMonitorController,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\TPMonitorController.cs,CheckProcess,The length of the statement  "                                        regexDissolve = new Regex(@"(You (dissolve the|leave .+'s) party|The party has been disbanded)\."' RegexOptions.Compiled | RegexOptions.IgnoreCase); " is 148.
Long Statement,ACT.TPMonitor,TPMonitorController,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\TPMonitorController.cs,CheckProcess,The length of the statement  "                                        regexDissolve = new Regex(@"((Deine|Die) Gruppe wurde aufgelöst|Du bist aus der Gruppe von .+ ausgetreten)\."' RegexOptions.Compiled | RegexOptions.IgnoreCase); " is 160.
Long Statement,ACT.TPMonitor,TPMonitorController,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\TPMonitorController.cs,CheckProcess,The length of the statement  "                                        regexDissolve = new Regex(@"(L'équipe (est|a été) dissoute|Vous quittez l'équipe de .+)\."' RegexOptions.Compiled | RegexOptions.IgnoreCase); " is 141.
Long Statement,ACT.TPMonitor,TPViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\TPViewer.cs,OnPaint,The length of the statement  "                        this.SetBounds(this.Location.X' this.Location.Y' (int)(this.widget.Rect.Size.Width * _controller.UserScale)' (int)(this.widget.Rect.Height * _controller.UserScale)); " is 165.
Long Statement,ACT.TPMonitor,TPViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\TPViewer.cs,OnPaint,The length of the statement  "                            DrawBar(g' i' _controller.PartyMemberInfo[i].CurrentTP' _controller.IsUserScale ? _controller.UserScale : _controller.PartyListUI.Scale); " is 137.
Long Statement,ACT.TPMonitor,TPViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\TPViewer.cs,OnPaint,The length of the statement  "                            DrawValue(g' i' _controller.PartyMemberInfo[i].CurrentTP' _controller.IsUserScale ? _controller.UserScale : _controller.PartyListUI.Scale); " is 139.
Long Statement,ACT.TPMonitor,TPViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\TPViewer.cs,DrawBar,The length of the statement  "            Rectangle rect = new Rectangle((int)(258 * scale)' (int)(((40 * idx) + 60) * scale)' (int)(87 * scale)' (int)(6 * scale)); " is 122.
Long Statement,ACT.TPMonitor,TPViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\TPViewer.cs,DrawValue,The length of the statement  "            Rectangle rect = new Rectangle((int)(247 * scale)' (int)(((40 * idx) + 60 + 8) * scale)' (int)(100 * scale)' (int)(8 * scale)); " is 127.
Complex Conditional,ACT.TPMonitor,TPMonitorController,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\TPMonitorController.cs,CheckProcess,The conditional expression  "oldACTVisible != IsACTVisible ||                           oldFFXIVPlugin != IsFFXIVPluginStarted ||                          oldFFXIVProcess != IsFFXIVProcessStarted ||                          oldLoggedIn != IsLoggedIn ||                          oldViewLocation != ViewLocation"  is complex.
Complex Conditional,ACT.TPMonitor,TPMonitorController,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\TPMonitorController.cs,act_OnLogLineRead,The conditional expression  "(this.HideWhenDissolve && regexDissolve.IsMatch(logInfo.logLine)) ||                      (this.HideWhenEnded && regexEnded.IsMatch(logInfo.logLine))"  is complex.
Empty Catch Block,ACT.TPMonitor,FFXIVPluginHelper,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\FFXIVPluginHelper.cs,GetPlayerData,The method has an empty catch block.
Empty Catch Block,ACT.TPMonitor,FFXIVPluginHelper,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\FFXIVPluginHelper.cs,GetCombatantList,The method has an empty catch block.
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.textBoxCharacterFolder.Location = new System.Drawing.Point(6' 20);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.textBoxCharacterFolder.Location = new System.Drawing.Point(6' 20);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.textBoxCharacterFolder.Size = new System.Drawing.Size(651' 19);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.textBoxCharacterFolder.Size = new System.Drawing.Size(651' 19);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonOpenFolder.Location = new System.Drawing.Point(663' 18);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonOpenFolder.Location = new System.Drawing.Point(663' 18);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonOpenFolder.Size = new System.Drawing.Size(75' 23);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonOpenFolder.Size = new System.Drawing.Size(75' 23);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxCharacterFolder.Location = new System.Drawing.Point(13' 12);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxCharacterFolder.Location = new System.Drawing.Point(13' 12);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxCharacterFolder.Size = new System.Drawing.Size(744' 54);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxCharacterFolder.Size = new System.Drawing.Size(744' 54);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxStatus.Location = new System.Drawing.Point(13' 72);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxStatus.Location = new System.Drawing.Point(13' 72);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxStatus.Size = new System.Drawing.Size(292' 96);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxStatus.Size = new System.Drawing.Size(292' 96);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanelStatus.ColumnCount = 2;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanelStatus.Controls.Add(this.labelLoggedInStatus' 1' 3);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanelStatus.Controls.Add(this.labelFFXIVProcessStatus' 1' 2);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanelStatus.Controls.Add(this.labelFFXIVProcess' 0' 2);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanelStatus.Controls.Add(this.labelLogin' 0' 3);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanelStatus.Location = new System.Drawing.Point(6' 18);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanelStatus.Location = new System.Drawing.Point(6' 18);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanelStatus.RowCount = 4;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanelStatus.Size = new System.Drawing.Size(280' 72);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanelStatus.Size = new System.Drawing.Size(280' 72);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelACT.Location = new System.Drawing.Point(3' 3);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelACT.Location = new System.Drawing.Point(3' 3);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelACT.Size = new System.Drawing.Size(30' 12);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelACT.Size = new System.Drawing.Size(30' 12);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelLoggedInStatus.Location = new System.Drawing.Point(123' 57);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelLoggedInStatus.Location = new System.Drawing.Point(123' 57);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelLoggedInStatus.Size = new System.Drawing.Size(66' 12);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelLoggedInStatus.Size = new System.Drawing.Size(66' 12);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelLoggedInStatus.TabIndex = 7;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelFFXIVPlugin.Location = new System.Drawing.Point(3' 21);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelFFXIVPlugin.Location = new System.Drawing.Point(3' 21);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelFFXIVPlugin.Size = new System.Drawing.Size(101' 12);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelFFXIVPlugin.Size = new System.Drawing.Size(101' 12);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelFFXIVPlugin.TabIndex = 2;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelFFXIVProcessStatus.Location = new System.Drawing.Point(123' 39);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelFFXIVProcessStatus.Location = new System.Drawing.Point(123' 39);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelFFXIVProcessStatus.Size = new System.Drawing.Size(66' 12);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelFFXIVProcessStatus.Size = new System.Drawing.Size(66' 12);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelFFXIVProcessStatus.TabIndex = 5;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelFFXIVProcess.Location = new System.Drawing.Point(3' 39);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelFFXIVProcess.Location = new System.Drawing.Point(3' 39);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelFFXIVProcess.Size = new System.Drawing.Size(81' 12);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelFFXIVProcess.Size = new System.Drawing.Size(81' 12);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelFFXIVProcess.TabIndex = 4;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelFFXIVPluginStatus.Location = new System.Drawing.Point(123' 21);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelFFXIVPluginStatus.Location = new System.Drawing.Point(123' 21);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelFFXIVPluginStatus.Size = new System.Drawing.Size(66' 12);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelFFXIVPluginStatus.Size = new System.Drawing.Size(66' 12);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelFFXIVPluginStatus.TabIndex = 3;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelLogin.Location = new System.Drawing.Point(3' 57);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelLogin.Location = new System.Drawing.Point(3' 57);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelLogin.Size = new System.Drawing.Size(34' 12);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelLogin.Size = new System.Drawing.Size(34' 12);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelLogin.TabIndex = 6;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelACTStatus.Location = new System.Drawing.Point(123' 3);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelACTStatus.Location = new System.Drawing.Point(123' 3);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelACTStatus.Size = new System.Drawing.Size(66' 12);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelACTStatus.Size = new System.Drawing.Size(66' 12);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxFont.Location = new System.Drawing.Point(763' 72);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxFont.Location = new System.Drawing.Point(763' 72);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxFont.Size = new System.Drawing.Size(148' 70);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxFont.Size = new System.Drawing.Size(148' 70);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxFont.TabIndex = 3;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownFontSize.Location = new System.Drawing.Point(17' 44);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownFontSize.Location = new System.Drawing.Point(17' 44);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownFontSize.Maximum = new decimal(new int[] {              24'              0'              0'              0});
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownFontSize.Minimum = new decimal(new int[] {              4'              0'              0'              0});
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownFontSize.Size = new System.Drawing.Size(51' 19);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownFontSize.Size = new System.Drawing.Size(51' 19);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownFontSize.Value = new decimal(new int[] {              8'              0'              0'              0});
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxTPFont.Location = new System.Drawing.Point(17' 18);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxTPFont.Location = new System.Drawing.Point(17' 18);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxTPFont.Size = new System.Drawing.Size(113' 20);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxTPFont.Size = new System.Drawing.Size(113' 20);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxRecommend.Location = new System.Drawing.Point(609' 72);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxRecommend.Location = new System.Drawing.Point(609' 72);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxRecommend.Size = new System.Drawing.Size(148' 172);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxRecommend.Size = new System.Drawing.Size(148' 172);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxRecommend.TabIndex = 6;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonCopy.Location = new System.Drawing.Point(15' 139);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonCopy.Location = new System.Drawing.Point(15' 139);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonCopy.Size = new System.Drawing.Size(119' 23);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonCopy.Size = new System.Drawing.Size(119' 23);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.textBoxRecommend.Location = new System.Drawing.Point(6' 18);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.textBoxRecommend.Location = new System.Drawing.Point(6' 18);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.textBoxRecommend.Size = new System.Drawing.Size(136' 115);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.textBoxRecommend.Size = new System.Drawing.Size(136' 115);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxOption.Location = new System.Drawing.Point(311' 72);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxOption.Location = new System.Drawing.Point(311' 72);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxOption.Size = new System.Drawing.Size(292' 118);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxOption.Size = new System.Drawing.Size(292' 118);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxOption.TabIndex = 2;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxDisappears.Location = new System.Drawing.Point(15' 88);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxDisappears.Location = new System.Drawing.Point(15' 88);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxDisappears.Size = new System.Drawing.Size(260' 16);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxDisappears.Size = new System.Drawing.Size(260' 16);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxDisappears.TabIndex = 2;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxShowMyTP.Location = new System.Drawing.Point(15' 66);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxShowMyTP.Location = new System.Drawing.Point(15' 66);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxShowMyTP.Size = new System.Drawing.Size(184' 16);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxShowMyTP.Size = new System.Drawing.Size(184' 16);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxShowMyTP.TabIndex = 2;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxHideWhenEnded.Location = new System.Drawing.Point(15' 44);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxHideWhenEnded.Location = new System.Drawing.Point(15' 44);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxHideWhenEnded.Size = new System.Drawing.Size(128' 16);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxHideWhenEnded.Size = new System.Drawing.Size(128' 16);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxHideWhenDissolve.Location = new System.Drawing.Point(15' 22);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxHideWhenDissolve.Location = new System.Drawing.Point(15' 22);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxHideWhenDissolve.Size = new System.Drawing.Size(181' 16);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxHideWhenDissolve.Size = new System.Drawing.Size(181' 16);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxSettings.Location = new System.Drawing.Point(13' 352);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxSettings.Location = new System.Drawing.Point(13' 352);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxSettings.Size = new System.Drawing.Size(744' 217);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxSettings.Size = new System.Drawing.Size(744' 217);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxSettings.TabIndex = 5;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.tabControlStyle.Location = new System.Drawing.Point(6' 18);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.tabControlStyle.Location = new System.Drawing.Point(6' 18);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.tabControlStyle.Size = new System.Drawing.Size(286' 126);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.tabControlStyle.Size = new System.Drawing.Size(286' 126);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.tabControlStyle.TabIndex = 10;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPagePartyList.Location = new System.Drawing.Point(4' 22);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPagePartyList.Location = new System.Drawing.Point(4' 22);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPagePartyList.Padding = new System.Windows.Forms.Padding(3);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPagePartyList.Size = new System.Drawing.Size(278' 100);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPagePartyList.Size = new System.Drawing.Size(278' 100);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonOffset.Location = new System.Drawing.Point(5' 6);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonOffset.Location = new System.Drawing.Point(5' 6);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonOffset.Size = new System.Drawing.Size(55' 16);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonOffset.Size = new System.Drawing.Size(55' 16);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonFixed.Location = new System.Drawing.Point(5' 53);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonFixed.Location = new System.Drawing.Point(5' 53);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonFixed.Size = new System.Drawing.Size(82' 16);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonFixed.Size = new System.Drawing.Size(82' 16);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.radioButtonFixed.TabIndex = 5;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownOffsetX.Location = new System.Drawing.Point(53' 28);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownOffsetX.Location = new System.Drawing.Point(53' 28);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownOffsetX.Maximum = new decimal(new int[] {              10000'              0'              0'              0});
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownOffsetX.Minimum = new decimal(new int[] {              10000'              0'              0'              -2147483648});
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownOffsetX.Minimum = new decimal(new int[] {              10000'              0'              0'              -2147483648});
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownOffsetX.Size = new System.Drawing.Size(71' 19);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownOffsetX.Size = new System.Drawing.Size(71' 19);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownOffsetX.TabIndex = 2;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownOffsetY.Location = new System.Drawing.Point(195' 28);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownOffsetY.Location = new System.Drawing.Point(195' 28);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownOffsetY.Maximum = new decimal(new int[] {              10000'              0'              0'              0});
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownOffsetY.Minimum = new decimal(new int[] {              10000'              0'              0'              -2147483648});
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownOffsetY.Minimum = new decimal(new int[] {              10000'              0'              0'              -2147483648});
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownOffsetY.Size = new System.Drawing.Size(71' 19);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownOffsetY.Size = new System.Drawing.Size(71' 19);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownOffsetY.TabIndex = 4;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownFixedX.Location = new System.Drawing.Point(53' 75);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownFixedX.Location = new System.Drawing.Point(53' 75);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownFixedX.Maximum = new decimal(new int[] {              10000'              0'              0'              0});
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownFixedX.Minimum = new decimal(new int[] {              10000'              0'              0'              -2147483648});
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownFixedX.Minimum = new decimal(new int[] {              10000'              0'              0'              -2147483648});
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownFixedX.Size = new System.Drawing.Size(71' 19);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownFixedX.Size = new System.Drawing.Size(71' 19);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownFixedX.TabIndex = 7;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownFixedY.Location = new System.Drawing.Point(195' 75);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownFixedY.Location = new System.Drawing.Point(195' 75);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownFixedY.Maximum = new decimal(new int[] {              10000'              0'              0'              0});
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownFixedY.Minimum = new decimal(new int[] {              10000'              0'              0'              -2147483648});
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownFixedY.Minimum = new decimal(new int[] {              10000'              0'              0'              -2147483648});
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownFixedY.Size = new System.Drawing.Size(71' 19);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownFixedY.Size = new System.Drawing.Size(71' 19);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownFixedY.TabIndex = 9;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelOffsetX.Location = new System.Drawing.Point(33' 30);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelOffsetX.Location = new System.Drawing.Point(33' 30);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelOffsetX.Size = new System.Drawing.Size(14' 12);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelOffsetX.Size = new System.Drawing.Size(14' 12);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelFixedX.Location = new System.Drawing.Point(33' 77);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelFixedX.Location = new System.Drawing.Point(33' 77);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelFixedX.Size = new System.Drawing.Size(14' 12);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelFixedX.Size = new System.Drawing.Size(14' 12);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelFixedX.TabIndex = 6;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelOffsetY.Location = new System.Drawing.Point(175' 30);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelOffsetY.Location = new System.Drawing.Point(175' 30);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelOffsetY.Size = new System.Drawing.Size(14' 12);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelOffsetY.Size = new System.Drawing.Size(14' 12);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelOffsetY.TabIndex = 3;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelFixedY.Location = new System.Drawing.Point(175' 77);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelFixedY.Location = new System.Drawing.Point(175' 77);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelFixedY.Size = new System.Drawing.Size(14' 12);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelFixedY.Size = new System.Drawing.Size(14' 12);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelFixedY.TabIndex = 8;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageAlliance.Location = new System.Drawing.Point(4' 22);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageAlliance.Location = new System.Drawing.Point(4' 22);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageAlliance.Padding = new System.Windows.Forms.Padding(3);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageAlliance.Size = new System.Drawing.Size(278' 100);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.tabPageAlliance.Size = new System.Drawing.Size(278' 100);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownAllianceX.Location = new System.Drawing.Point(53' 28);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownAllianceX.Location = new System.Drawing.Point(53' 28);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownAllianceX.Maximum = new decimal(new int[] {              10000'              0'              0'              0});
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownAllianceX.Minimum = new decimal(new int[] {              10000'              0'              0'              -2147483648});
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownAllianceX.Minimum = new decimal(new int[] {              10000'              0'              0'              -2147483648});
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownAllianceX.Size = new System.Drawing.Size(71' 19);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownAllianceX.Size = new System.Drawing.Size(71' 19);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownAllianceX.TabIndex = 6;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownAllianceY.Location = new System.Drawing.Point(195' 28);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownAllianceY.Location = new System.Drawing.Point(195' 28);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownAllianceY.Maximum = new decimal(new int[] {              10000'              0'              0'              0});
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownAllianceY.Minimum = new decimal(new int[] {              10000'              0'              0'              -2147483648});
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownAllianceY.Minimum = new decimal(new int[] {              10000'              0'              0'              -2147483648});
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownAllianceY.Size = new System.Drawing.Size(71' 19);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownAllianceY.Size = new System.Drawing.Size(71' 19);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownAllianceY.TabIndex = 8;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelAllianceX.Location = new System.Drawing.Point(33' 30);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelAllianceX.Location = new System.Drawing.Point(33' 30);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelAllianceX.Size = new System.Drawing.Size(14' 12);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelAllianceX.Size = new System.Drawing.Size(14' 12);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelAllianceX.TabIndex = 5;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelAllianceY.Location = new System.Drawing.Point(175' 30);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelAllianceY.Location = new System.Drawing.Point(175' 30);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelAllianceY.Size = new System.Drawing.Size(14' 12);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelAllianceY.Size = new System.Drawing.Size(14' 12);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelAllianceY.TabIndex = 7;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonCancel.Location = new System.Drawing.Point(663' 188);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonCancel.Location = new System.Drawing.Point(663' 188);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonCancel.Size = new System.Drawing.Size(75' 23);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonCancel.Size = new System.Drawing.Size(75' 23);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonCancel.TabIndex = 15;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonApply.Location = new System.Drawing.Point(582' 188);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonApply.Location = new System.Drawing.Point(582' 188);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonApply.Size = new System.Drawing.Size(75' 23);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonApply.Size = new System.Drawing.Size(75' 23);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonApply.TabIndex = 14;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonDefault.Location = new System.Drawing.Point(316' 188);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonDefault.Location = new System.Drawing.Point(316' 188);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonDefault.Size = new System.Drawing.Size(75' 23);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonDefault.Size = new System.Drawing.Size(75' 23);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonDefault.TabIndex = 13;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxScale.Location = new System.Drawing.Point(6' 163);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxScale.Location = new System.Drawing.Point(6' 163);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxScale.Size = new System.Drawing.Size(152' 48);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxScale.Size = new System.Drawing.Size(152' 48);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxScale.TabIndex = 11;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxUserScale.Location = new System.Drawing.Point(6' -1);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxUserScale.Size = new System.Drawing.Size(52' 16);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxUserScale.Size = new System.Drawing.Size(52' 16);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownUserScale.Location = new System.Drawing.Point(48' 18);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownUserScale.Location = new System.Drawing.Point(48' 18);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownUserScale.Maximum = new decimal(new int[] {              200'              0'              0'              0});
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownUserScale.Minimum = new decimal(new int[] {              60'              0'              0'              0});
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownUserScale.Size = new System.Drawing.Size(71' 19);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownUserScale.Size = new System.Drawing.Size(71' 19);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.numericUpDownUserScale.Value = new decimal(new int[] {              100'              0'              0'              0});
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewColor.Location = new System.Drawing.Point(316' 18);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewColor.Location = new System.Drawing.Point(316' 18);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: dataGridViewCellStyle4.Font = new System.Drawing.Font("MS UI Gothic"' 9F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(128)));
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewColor.RowTemplate.Height = 21;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewColor.Size = new System.Drawing.Size(422' 164);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewColor.Size = new System.Drawing.Size(422' 164);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.dataGridViewColor.TabIndex = 12;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.ColumnStartTP.Width = 80;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.ColumnEndTP.Width = 80;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxWhereNow.Location = new System.Drawing.Point(164' 163);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxWhereNow.Location = new System.Drawing.Point(164' 163);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxWhereNow.Size = new System.Drawing.Size(128' 48);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxWhereNow.Size = new System.Drawing.Size(128' 48);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxWhereNow.TabIndex = 10;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelHereNowX.Location = new System.Drawing.Point(17' 20);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelHereNowX.Location = new System.Drawing.Point(17' 20);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelHereNowX.Size = new System.Drawing.Size(14' 12);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelHereNowX.Size = new System.Drawing.Size(14' 12);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelHereNowY.Location = new System.Drawing.Point(70' 20);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelHereNowY.Location = new System.Drawing.Point(70' 20);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelHereNowY.Size = new System.Drawing.Size(14' 12);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.labelHereNowY.Size = new System.Drawing.Size(14' 12);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonSave.Location = new System.Drawing.Point(682' 257);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonSave.Location = new System.Drawing.Point(682' 257);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonSave.Size = new System.Drawing.Size(75' 23);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonSave.Size = new System.Drawing.Size(75' 23);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonSave.TabIndex = 7;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxDisplayJob.Location = new System.Drawing.Point(13' 196);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxDisplayJob.Location = new System.Drawing.Point(13' 196);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxDisplayJob.Size = new System.Drawing.Size(590' 150);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxDisplayJob.Size = new System.Drawing.Size(590' 150);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxDisplayJob.TabIndex = 4;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxAST.ImageIndex = 22;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxAST.Location = new System.Drawing.Point(96' 106);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxAST.Location = new System.Drawing.Point(96' 106);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxAST.Size = new System.Drawing.Size(38' 38);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxAST.Size = new System.Drawing.Size(38' 38);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxAST.TabIndex = 21;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.imageListJob.Images.SetKeyName(2' "Pugilist.png");
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.imageListJob.Images.SetKeyName(3' "Marauder.png");
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.imageListJob.Images.SetKeyName(4' "Lancer.png");
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.imageListJob.Images.SetKeyName(5' "Archer.png");
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.imageListJob.Images.SetKeyName(6' "Conjurer.png");
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.imageListJob.Images.SetKeyName(7' "Thaumaturge.png");
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.imageListJob.Images.SetKeyName(8' "Paladin.png");
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.imageListJob.Images.SetKeyName(9' "Monk.png");
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.imageListJob.Images.SetKeyName(10' "Warrior.png");
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.imageListJob.Images.SetKeyName(11' "Dragoon.png");
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.imageListJob.Images.SetKeyName(12' "Bard.png");
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.imageListJob.Images.SetKeyName(13' "WhiteMage.png");
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.imageListJob.Images.SetKeyName(14' "BlackMage.png");
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.imageListJob.Images.SetKeyName(15' "Arcanist.png");
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.imageListJob.Images.SetKeyName(16' "Summoner.png");
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.imageListJob.Images.SetKeyName(17' "Scholar.png");
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.imageListJob.Images.SetKeyName(18' "Rogue.png");
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.imageListJob.Images.SetKeyName(19' "Ninja.png");
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.imageListJob.Images.SetKeyName(20' "Machinist.png");
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.imageListJob.Images.SetKeyName(21' "DarkKnight.png");
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.imageListJob.Images.SetKeyName(22' "Astrologian.png");
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxMCH.ImageIndex = 20;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxMCH.Location = new System.Drawing.Point(50' 106);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxMCH.Location = new System.Drawing.Point(50' 106);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxMCH.Size = new System.Drawing.Size(38' 38);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxMCH.Size = new System.Drawing.Size(38' 38);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxMCH.TabIndex = 20;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxDRK.ImageIndex = 21;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxDRK.Location = new System.Drawing.Point(6' 106);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxDRK.Location = new System.Drawing.Point(6' 106);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxDRK.Size = new System.Drawing.Size(38' 38);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxDRK.Size = new System.Drawing.Size(38' 38);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxDRK.TabIndex = 19;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxNIN.ImageIndex = 19;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxNIN.Location = new System.Drawing.Point(226' 62);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxNIN.Location = new System.Drawing.Point(226' 62);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxNIN.Size = new System.Drawing.Size(38' 38);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxNIN.Size = new System.Drawing.Size(38' 38);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxNIN.TabIndex = 11;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxROG.ImageIndex = 18;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxROG.Location = new System.Drawing.Point(226' 18);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxROG.Location = new System.Drawing.Point(226' 18);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxROG.Size = new System.Drawing.Size(38' 38);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxROG.Size = new System.Drawing.Size(38' 38);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxROG.TabIndex = 10;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxSCH.ImageIndex = 17;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxSCH.Location = new System.Drawing.Point(402' 62);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxSCH.Location = new System.Drawing.Point(402' 62);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxSCH.Size = new System.Drawing.Size(38' 38);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxSCH.Size = new System.Drawing.Size(38' 38);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxSCH.TabIndex = 18;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxSMN.ImageIndex = 16;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxSMN.Location = new System.Drawing.Point(358' 62);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxSMN.Location = new System.Drawing.Point(358' 62);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxSMN.Size = new System.Drawing.Size(38' 38);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxSMN.Size = new System.Drawing.Size(38' 38);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxSMN.TabIndex = 17;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxACN.ImageIndex = 15;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxACN.Location = new System.Drawing.Point(358' 18);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxACN.Location = new System.Drawing.Point(358' 18);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxACN.Size = new System.Drawing.Size(38' 38);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxACN.Size = new System.Drawing.Size(38' 38);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxACN.TabIndex = 16;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxBLM.ImageIndex = 14;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxBLM.Location = new System.Drawing.Point(314' 62);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxBLM.Location = new System.Drawing.Point(314' 62);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxBLM.Size = new System.Drawing.Size(38' 38);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxBLM.Size = new System.Drawing.Size(38' 38);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxBLM.TabIndex = 15;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxTHM.ImageIndex = 7;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxTHM.Location = new System.Drawing.Point(314' 18);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxTHM.Location = new System.Drawing.Point(314' 18);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxTHM.Size = new System.Drawing.Size(38' 38);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxTHM.Size = new System.Drawing.Size(38' 38);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxTHM.TabIndex = 14;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxWHM.ImageIndex = 13;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxWHM.Location = new System.Drawing.Point(270' 62);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxWHM.Location = new System.Drawing.Point(270' 62);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxWHM.Size = new System.Drawing.Size(38' 38);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxWHM.Size = new System.Drawing.Size(38' 38);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxWHM.TabIndex = 13;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxCNJ.ImageIndex = 6;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxCNJ.Location = new System.Drawing.Point(270' 18);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxCNJ.Location = new System.Drawing.Point(270' 18);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxCNJ.Size = new System.Drawing.Size(38' 38);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxCNJ.Size = new System.Drawing.Size(38' 38);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxCNJ.TabIndex = 12;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxBRD.ImageIndex = 12;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxBRD.Location = new System.Drawing.Point(182' 62);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxBRD.Location = new System.Drawing.Point(182' 62);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxBRD.Size = new System.Drawing.Size(38' 38);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxBRD.Size = new System.Drawing.Size(38' 38);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxBRD.TabIndex = 9;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxARC.ImageIndex = 5;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxARC.Location = new System.Drawing.Point(182' 18);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxARC.Location = new System.Drawing.Point(182' 18);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxARC.Size = new System.Drawing.Size(38' 38);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxARC.Size = new System.Drawing.Size(38' 38);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxARC.TabIndex = 8;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxDRG.ImageIndex = 11;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxDRG.Location = new System.Drawing.Point(138' 62);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxDRG.Location = new System.Drawing.Point(138' 62);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxDRG.Size = new System.Drawing.Size(38' 38);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxDRG.Size = new System.Drawing.Size(38' 38);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxDRG.TabIndex = 7;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxLNC.ImageIndex = 4;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxLNC.Location = new System.Drawing.Point(138' 18);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxLNC.Location = new System.Drawing.Point(138' 18);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxLNC.Size = new System.Drawing.Size(38' 38);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxLNC.Size = new System.Drawing.Size(38' 38);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxLNC.TabIndex = 6;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxWAR.ImageIndex = 10;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxWAR.Location = new System.Drawing.Point(50' 62);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxWAR.Location = new System.Drawing.Point(50' 62);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxWAR.Size = new System.Drawing.Size(38' 38);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxWAR.Size = new System.Drawing.Size(38' 38);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxWAR.TabIndex = 3;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxMRD.ImageIndex = 3;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxMRD.Location = new System.Drawing.Point(50' 18);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxMRD.Location = new System.Drawing.Point(50' 18);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxMRD.Size = new System.Drawing.Size(38' 38);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxMRD.Size = new System.Drawing.Size(38' 38);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxMRD.TabIndex = 2;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxMNK.ImageIndex = 9;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxMNK.Location = new System.Drawing.Point(94' 62);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxMNK.Location = new System.Drawing.Point(94' 62);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxMNK.Size = new System.Drawing.Size(38' 38);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxMNK.Size = new System.Drawing.Size(38' 38);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxMNK.TabIndex = 5;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxPGL.ImageIndex = 2;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxPGL.Location = new System.Drawing.Point(94' 18);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxPGL.Location = new System.Drawing.Point(94' 18);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxPGL.Size = new System.Drawing.Size(38' 38);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxPGL.Size = new System.Drawing.Size(38' 38);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxPGL.TabIndex = 4;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxPLD.ImageIndex = 8;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxPLD.Location = new System.Drawing.Point(6' 62);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxPLD.Location = new System.Drawing.Point(6' 62);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxPLD.Size = new System.Drawing.Size(38' 38);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxPLD.Size = new System.Drawing.Size(38' 38);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxGLD.Location = new System.Drawing.Point(6' 18);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxGLD.Location = new System.Drawing.Point(6' 18);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxGLD.Size = new System.Drawing.Size(38' 38);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxGLD.Size = new System.Drawing.Size(38' 38);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.imageListJobOff.Images.SetKeyName(2' "Pugilist_off.png");
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.imageListJobOff.Images.SetKeyName(3' "Marauder_off.png");
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.imageListJobOff.Images.SetKeyName(4' "Lancer_off.png");
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.imageListJobOff.Images.SetKeyName(5' "Archer_off.png");
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.imageListJobOff.Images.SetKeyName(6' "Conjurer_off.png");
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.imageListJobOff.Images.SetKeyName(7' "Thaumaturge_off.png");
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.imageListJobOff.Images.SetKeyName(8' "Paladin_off.png");
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.imageListJobOff.Images.SetKeyName(9' "Monk_off.png");
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.imageListJobOff.Images.SetKeyName(10' "Warrior_off.png");
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.imageListJobOff.Images.SetKeyName(11' "Dragoon_off.png");
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.imageListJobOff.Images.SetKeyName(12' "Bard_off.png");
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.imageListJobOff.Images.SetKeyName(13' "WhiteMage_off.png");
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.imageListJobOff.Images.SetKeyName(14' "BlackMage_off.png");
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.imageListJobOff.Images.SetKeyName(15' "Arcanist_off.png");
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.imageListJobOff.Images.SetKeyName(16' "Summoner_off.png");
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.imageListJobOff.Images.SetKeyName(17' "Scholar_off.png");
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.imageListJobOff.Images.SetKeyName(18' "Rogue_off.png");
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.imageListJobOff.Images.SetKeyName(19' "Ninja_off.png");
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.imageListJobOff.Images.SetKeyName(20' "Machinist_off.png");
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.imageListJobOff.Images.SetKeyName(21' "DarkKnight_off.png");
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.imageListJobOff.Images.SetKeyName(22' "Astrologian_off.png");
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.textBoxColors.Location = new System.Drawing.Point(763' 380);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.textBoxColors.Location = new System.Drawing.Point(763' 380);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.textBoxColors.Size = new System.Drawing.Size(100' 19);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.textBoxColors.Size = new System.Drawing.Size(100' 19);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.textBoxColors.TabIndex = 8;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxAllianceStyle.Location = new System.Drawing.Point(763' 405);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxAllianceStyle.Location = new System.Drawing.Point(763' 405);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxAllianceStyle.Size = new System.Drawing.Size(91' 16);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxAllianceStyle.Size = new System.Drawing.Size(91' 16);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxAllianceStyle.TabIndex = 10;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxUpdateCheck.Location = new System.Drawing.Point(763' 12);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxUpdateCheck.Location = new System.Drawing.Point(763' 12);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxUpdateCheck.Size = new System.Drawing.Size(148' 54);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxUpdateCheck.Size = new System.Drawing.Size(148' 54);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.groupBoxUpdateCheck.TabIndex = 11;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonCheck.Location = new System.Drawing.Point(37' 18);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonCheck.Location = new System.Drawing.Point(37' 18);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonCheck.Size = new System.Drawing.Size(75' 23);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.buttonCheck.Size = new System.Drawing.Size(75' 23);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.panelPlugin.Size = new System.Drawing.Size(950' 580);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.panelPlugin.Size = new System.Drawing.Size(950' 580);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.panelPlugin.TabIndex = 12;
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(950' 580);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(950' 580);
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,buttonApply_Click,The following statement contains a magic number: for (int i = 0; i < dataGridViewColor.Rows.Count - 1; i++)              {                  sb.Append(dataGridViewColor[0' i].Value + ":");     //StartTP                  sb.Append(dataGridViewColor[1' i].Value + ":");     //EndTP                  sb.Append(dataGridViewColor[2' i].Value + "|");     //Color              }
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,CheckInput,The following statement contains a magic number: foreach (DataGridViewRow row in dgv.Rows)              {                  if (row.IsNewRow) continue;                    foreach (DataGridViewCell cell in dgv.Rows[row.Index].Cells)                  {                      switch (cell.ColumnIndex)                      {                          case 0:                          case 1:                              if (cell.Value == null || cell.Value.ToString() == "")                              {                                  dgv.Rows[row.Index].ErrorText = "Eter a value in all cells.";                                  return false;                              }                              else if (!int.TryParse(cell.Value.ToString()' out checkValue))                              {                                  dgv.Rows[row.Index].ErrorText = "Valid only numbers.";                                  return false;                              }                                if (cell.ColumnIndex == 0)                              {                                  if (row.Index > 0 &&                                      int.Parse(dgv[0' row.Index].Value.ToString()) < int.Parse(dgv[1' row.Index - 1].Value.ToString()))                                  {                                      dgv.Rows[row.Index].ErrorText = "Intersects the EndTP of another row.";                                      return false;                                  }                              }                              else                              {                                  if (cell.ColumnIndex == 1 &&                                      int.Parse(dgv[0' row.Index].Value.ToString()) >= int.Parse(dgv[1' row.Index].Value.ToString()))                                  {                                      dgv.Rows[row.Index].ErrorText = "Must have StartTP < EndTP.";                                      return false;                                  }                              }                              break;                          case 2:                              break;                          default:                              break;                      }                  }                  dgv.Rows[row.Index].ErrorText = null;              }
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,dataGridViewColor_CellContentClick,The following statement contains a magic number: if (dgv.Columns[e.ColumnIndex].Name == "ColumnDialog")              {                  ColorDialog diag = new ColorDialog();                  if (dgv[2' e.RowIndex].Value == null || dgv[2' e.RowIndex].Value.ToString() == "")                      diag.Color = Color.White;                  else                      diag.Color = Color.FromName(dgv[2' e.RowIndex].Value.ToString());                    if (diag.ShowDialog(this) == DialogResult.OK)                  {                      if (diag.Color.IsNamedColor)                          dgv[2' e.RowIndex].Value = diag.Color.Name;                      else                          dgv[2' e.RowIndex].Value = string.Format("{0}' {1}' {2}"' diag.Color.R' diag.Color.G' diag.Color.B);                  }                              }
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,dataGridViewColor_CellContentClick,The following statement contains a magic number: if (dgv.Columns[e.ColumnIndex].Name == "ColumnDialog")              {                  ColorDialog diag = new ColorDialog();                  if (dgv[2' e.RowIndex].Value == null || dgv[2' e.RowIndex].Value.ToString() == "")                      diag.Color = Color.White;                  else                      diag.Color = Color.FromName(dgv[2' e.RowIndex].Value.ToString());                    if (diag.ShowDialog(this) == DialogResult.OK)                  {                      if (diag.Color.IsNamedColor)                          dgv[2' e.RowIndex].Value = diag.Color.Name;                      else                          dgv[2' e.RowIndex].Value = string.Format("{0}' {1}' {2}"' diag.Color.R' diag.Color.G' diag.Color.B);                  }                              }
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,dataGridViewColor_CellContentClick,The following statement contains a magic number: if (dgv.Columns[e.ColumnIndex].Name == "ColumnDialog")              {                  ColorDialog diag = new ColorDialog();                  if (dgv[2' e.RowIndex].Value == null || dgv[2' e.RowIndex].Value.ToString() == "")                      diag.Color = Color.White;                  else                      diag.Color = Color.FromName(dgv[2' e.RowIndex].Value.ToString());                    if (diag.ShowDialog(this) == DialogResult.OK)                  {                      if (diag.Color.IsNamedColor)                          dgv[2' e.RowIndex].Value = diag.Color.Name;                      else                          dgv[2' e.RowIndex].Value = string.Format("{0}' {1}' {2}"' diag.Color.R' diag.Color.G' diag.Color.B);                  }                              }
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,dataGridViewColor_CellContentClick,The following statement contains a magic number: if (dgv.Columns[e.ColumnIndex].Name == "ColumnDialog")              {                  ColorDialog diag = new ColorDialog();                  if (dgv[2' e.RowIndex].Value == null || dgv[2' e.RowIndex].Value.ToString() == "")                      diag.Color = Color.White;                  else                      diag.Color = Color.FromName(dgv[2' e.RowIndex].Value.ToString());                    if (diag.ShowDialog(this) == DialogResult.OK)                  {                      if (diag.Color.IsNamedColor)                          dgv[2' e.RowIndex].Value = diag.Color.Name;                      else                          dgv[2' e.RowIndex].Value = string.Format("{0}' {1}' {2}"' diag.Color.R' diag.Color.G' diag.Color.B);                  }                              }
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,dataGridViewColor_CellContentClick,The following statement contains a magic number: if (dgv.Columns[e.ColumnIndex].Name == "ColumnDialog")              {                  ColorDialog diag = new ColorDialog();                  if (dgv[2' e.RowIndex].Value == null || dgv[2' e.RowIndex].Value.ToString() == "")                      diag.Color = Color.White;                  else                      diag.Color = Color.FromName(dgv[2' e.RowIndex].Value.ToString());                    if (diag.ShowDialog(this) == DialogResult.OK)                  {                      if (diag.Color.IsNamedColor)                          dgv[2' e.RowIndex].Value = diag.Color.Name;                      else                          dgv[2' e.RowIndex].Value = string.Format("{0}' {1}' {2}"' diag.Color.R' diag.Color.G' diag.Color.B);                  }                              }
Magic Number,ACT.TPMonitor,ACTTabpageControl,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\ACTTabpageControl.cs,OnChangeScale,The following statement contains a magic number: float scale = (float)numericUpDownUserScale.Value / 100;
Magic Number,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,Adjust,The following statement contains a magic number: this.Size = new Size((int)(320 * scale)' (int)(72 * scale));
Magic Number,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,Adjust,The following statement contains a magic number: this.Size = new Size((int)(320 * scale)' (int)(72 * scale));
Magic Number,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,DrawImg,The following statement contains a magic number: Rectangle rect = new Rectangle((int)(((78 * (idx % 4)) + 8) * scale)' (int)(((32 * (idx / 4)) + 7) * scale)' (int)(24 * scale)' (int)(24 * scale));
Magic Number,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,DrawImg,The following statement contains a magic number: Rectangle rect = new Rectangle((int)(((78 * (idx % 4)) + 8) * scale)' (int)(((32 * (idx / 4)) + 7) * scale)' (int)(24 * scale)' (int)(24 * scale));
Magic Number,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,DrawImg,The following statement contains a magic number: Rectangle rect = new Rectangle((int)(((78 * (idx % 4)) + 8) * scale)' (int)(((32 * (idx / 4)) + 7) * scale)' (int)(24 * scale)' (int)(24 * scale));
Magic Number,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,DrawImg,The following statement contains a magic number: Rectangle rect = new Rectangle((int)(((78 * (idx % 4)) + 8) * scale)' (int)(((32 * (idx / 4)) + 7) * scale)' (int)(24 * scale)' (int)(24 * scale));
Magic Number,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,DrawImg,The following statement contains a magic number: Rectangle rect = new Rectangle((int)(((78 * (idx % 4)) + 8) * scale)' (int)(((32 * (idx / 4)) + 7) * scale)' (int)(24 * scale)' (int)(24 * scale));
Magic Number,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,DrawImg,The following statement contains a magic number: Rectangle rect = new Rectangle((int)(((78 * (idx % 4)) + 8) * scale)' (int)(((32 * (idx / 4)) + 7) * scale)' (int)(24 * scale)' (int)(24 * scale));
Magic Number,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,DrawImg,The following statement contains a magic number: Rectangle rect = new Rectangle((int)(((78 * (idx % 4)) + 8) * scale)' (int)(((32 * (idx / 4)) + 7) * scale)' (int)(24 * scale)' (int)(24 * scale));
Magic Number,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,DrawImg,The following statement contains a magic number: Rectangle rect = new Rectangle((int)(((78 * (idx % 4)) + 8) * scale)' (int)(((32 * (idx / 4)) + 7) * scale)' (int)(24 * scale)' (int)(24 * scale));
Magic Number,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,DrawBar,The following statement contains a magic number: Rectangle rect = new Rectangle((int)(((78 * (idx % 4)) + 37) * scale)' (int)(((32 * (idx / 4)) + 11) * scale)' (int)(40 * scale)' (int)(18 * scale));
Magic Number,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,DrawBar,The following statement contains a magic number: Rectangle rect = new Rectangle((int)(((78 * (idx % 4)) + 37) * scale)' (int)(((32 * (idx / 4)) + 11) * scale)' (int)(40 * scale)' (int)(18 * scale));
Magic Number,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,DrawBar,The following statement contains a magic number: Rectangle rect = new Rectangle((int)(((78 * (idx % 4)) + 37) * scale)' (int)(((32 * (idx / 4)) + 11) * scale)' (int)(40 * scale)' (int)(18 * scale));
Magic Number,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,DrawBar,The following statement contains a magic number: Rectangle rect = new Rectangle((int)(((78 * (idx % 4)) + 37) * scale)' (int)(((32 * (idx / 4)) + 11) * scale)' (int)(40 * scale)' (int)(18 * scale));
Magic Number,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,DrawBar,The following statement contains a magic number: Rectangle rect = new Rectangle((int)(((78 * (idx % 4)) + 37) * scale)' (int)(((32 * (idx / 4)) + 11) * scale)' (int)(40 * scale)' (int)(18 * scale));
Magic Number,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,DrawBar,The following statement contains a magic number: Rectangle rect = new Rectangle((int)(((78 * (idx % 4)) + 37) * scale)' (int)(((32 * (idx / 4)) + 11) * scale)' (int)(40 * scale)' (int)(18 * scale));
Magic Number,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,DrawBar,The following statement contains a magic number: Rectangle rect = new Rectangle((int)(((78 * (idx % 4)) + 37) * scale)' (int)(((32 * (idx / 4)) + 11) * scale)' (int)(40 * scale)' (int)(18 * scale));
Magic Number,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,DrawBar,The following statement contains a magic number: Rectangle rect = new Rectangle((int)(((78 * (idx % 4)) + 37) * scale)' (int)(((32 * (idx / 4)) + 11) * scale)' (int)(40 * scale)' (int)(18 * scale));
Magic Number,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,DrawBar,The following statement contains a magic number: g.FillRectangle(valueBrush' rect.X' rect.Y' value * rect.Width / 1000' rect.Height);
Magic Number,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,GetColor,The following statement contains a magic number: foreach (DataRow r in _controller.dtColor.Rows)              {                  if (int.Parse(r[0].ToString()) <= value && value <= int.Parse(r[1].ToString()))                  {                      string[] rgb = r[2].ToString().Split(''');                      if (rgb.Length == 3)                      {                          brush = new SolidBrush(Color.FromArgb(255' int.Parse(rgb[0])' int.Parse(rgb[1])' int.Parse(rgb[2])));                      }                      else                      {                          brush = new SolidBrush(Color.FromName(r[2].ToString()));                      }                      break;                  }              }
Magic Number,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,GetColor,The following statement contains a magic number: foreach (DataRow r in _controller.dtColor.Rows)              {                  if (int.Parse(r[0].ToString()) <= value && value <= int.Parse(r[1].ToString()))                  {                      string[] rgb = r[2].ToString().Split(''');                      if (rgb.Length == 3)                      {                          brush = new SolidBrush(Color.FromArgb(255' int.Parse(rgb[0])' int.Parse(rgb[1])' int.Parse(rgb[2])));                      }                      else                      {                          brush = new SolidBrush(Color.FromName(r[2].ToString()));                      }                      break;                  }              }
Magic Number,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,GetColor,The following statement contains a magic number: foreach (DataRow r in _controller.dtColor.Rows)              {                  if (int.Parse(r[0].ToString()) <= value && value <= int.Parse(r[1].ToString()))                  {                      string[] rgb = r[2].ToString().Split(''');                      if (rgb.Length == 3)                      {                          brush = new SolidBrush(Color.FromArgb(255' int.Parse(rgb[0])' int.Parse(rgb[1])' int.Parse(rgb[2])));                      }                      else                      {                          brush = new SolidBrush(Color.FromName(r[2].ToString()));                      }                      break;                  }              }
Magic Number,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,GetColor,The following statement contains a magic number: foreach (DataRow r in _controller.dtColor.Rows)              {                  if (int.Parse(r[0].ToString()) <= value && value <= int.Parse(r[1].ToString()))                  {                      string[] rgb = r[2].ToString().Split(''');                      if (rgb.Length == 3)                      {                          brush = new SolidBrush(Color.FromArgb(255' int.Parse(rgb[0])' int.Parse(rgb[1])' int.Parse(rgb[2])));                      }                      else                      {                          brush = new SolidBrush(Color.FromName(r[2].ToString()));                      }                      break;                  }              }
Magic Number,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,GetColor,The following statement contains a magic number: foreach (DataRow r in _controller.dtColor.Rows)              {                  if (int.Parse(r[0].ToString()) <= value && value <= int.Parse(r[1].ToString()))                  {                      string[] rgb = r[2].ToString().Split(''');                      if (rgb.Length == 3)                      {                          brush = new SolidBrush(Color.FromArgb(255' int.Parse(rgb[0])' int.Parse(rgb[1])' int.Parse(rgb[2])));                      }                      else                      {                          brush = new SolidBrush(Color.FromName(r[2].ToString()));                      }                      break;                  }              }
Magic Number,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,InitializeComponent,The following statement contains a magic number: this.imageListJob.Images.SetKeyName(2' "Pugilist.png");
Magic Number,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,InitializeComponent,The following statement contains a magic number: this.imageListJob.Images.SetKeyName(3' "Marauder.png");
Magic Number,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,InitializeComponent,The following statement contains a magic number: this.imageListJob.Images.SetKeyName(4' "Lancer.png");
Magic Number,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,InitializeComponent,The following statement contains a magic number: this.imageListJob.Images.SetKeyName(5' "Archer.png");
Magic Number,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,InitializeComponent,The following statement contains a magic number: this.imageListJob.Images.SetKeyName(6' "Conjurer.png");
Magic Number,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,InitializeComponent,The following statement contains a magic number: this.imageListJob.Images.SetKeyName(7' "Thaumaturge.png");
Magic Number,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,InitializeComponent,The following statement contains a magic number: this.imageListJob.Images.SetKeyName(8' "Carpenter.png");
Magic Number,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,InitializeComponent,The following statement contains a magic number: this.imageListJob.Images.SetKeyName(9' "Blacksmith.png");
Magic Number,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,InitializeComponent,The following statement contains a magic number: this.imageListJob.Images.SetKeyName(10' "Armorer.png");
Magic Number,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,InitializeComponent,The following statement contains a magic number: this.imageListJob.Images.SetKeyName(11' "Goldsmith.png");
Magic Number,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,InitializeComponent,The following statement contains a magic number: this.imageListJob.Images.SetKeyName(12' "Leatherworker.png");
Magic Number,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,InitializeComponent,The following statement contains a magic number: this.imageListJob.Images.SetKeyName(13' "Weaver.png");
Magic Number,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,InitializeComponent,The following statement contains a magic number: this.imageListJob.Images.SetKeyName(14' "Alchemist.png");
Magic Number,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,InitializeComponent,The following statement contains a magic number: this.imageListJob.Images.SetKeyName(15' "Culinarian.png");
Magic Number,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,InitializeComponent,The following statement contains a magic number: this.imageListJob.Images.SetKeyName(16' "Miner.png");
Magic Number,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,InitializeComponent,The following statement contains a magic number: this.imageListJob.Images.SetKeyName(17' "Botanist.png");
Magic Number,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,InitializeComponent,The following statement contains a magic number: this.imageListJob.Images.SetKeyName(18' "Fisher.png");
Magic Number,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,InitializeComponent,The following statement contains a magic number: this.imageListJob.Images.SetKeyName(19' "Paladin.png");
Magic Number,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,InitializeComponent,The following statement contains a magic number: this.imageListJob.Images.SetKeyName(20' "Monk.png");
Magic Number,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,InitializeComponent,The following statement contains a magic number: this.imageListJob.Images.SetKeyName(21' "Warrior.png");
Magic Number,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,InitializeComponent,The following statement contains a magic number: this.imageListJob.Images.SetKeyName(22' "Dragoon.png");
Magic Number,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,InitializeComponent,The following statement contains a magic number: this.imageListJob.Images.SetKeyName(23' "Bard.png");
Magic Number,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,InitializeComponent,The following statement contains a magic number: this.imageListJob.Images.SetKeyName(24' "WhiteMage.png");
Magic Number,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,InitializeComponent,The following statement contains a magic number: this.imageListJob.Images.SetKeyName(25' "BlackMage.png");
Magic Number,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,InitializeComponent,The following statement contains a magic number: this.imageListJob.Images.SetKeyName(26' "Arcanist.png");
Magic Number,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,InitializeComponent,The following statement contains a magic number: this.imageListJob.Images.SetKeyName(27' "Summoner.png");
Magic Number,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,InitializeComponent,The following statement contains a magic number: this.imageListJob.Images.SetKeyName(28' "Scholar.png");
Magic Number,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,InitializeComponent,The following statement contains a magic number: this.imageListJob.Images.SetKeyName(29' "Rogue.png");
Magic Number,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,InitializeComponent,The following statement contains a magic number: this.imageListJob.Images.SetKeyName(30' "Ninja.png");
Magic Number,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(320' 72);
Magic Number,ACT.TPMonitor,AllianceStyleViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AllianceStyleViewer.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(320' 72);
Magic Number,ACT.TPMonitor,AutoUpdater,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AutoUpdater.cs,ResponseCallback,The following statement contains a magic number: bufferData = new byte[1024];
Magic Number,ACT.TPMonitor,AutoUpdater,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AutoUpdater.cs,CheckNewAvailable,The following statement contains a magic number: localFileUpdateTime = localFileUpdateTime.AddDays(-10);
Magic Number,ACT.TPMonitor,AutoUpdater,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\AutoUpdater.cs,CheckNewAvailable,The following statement contains a magic number: localFileUpdateTime = localFileUpdateTime.AddMinutes(30);
Magic Number,ACT.TPMonitor,TPMonitorController,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\TPMonitorController.cs,TPMonitorController,The following statement contains a magic number: for (int i = 0; i < 8; i++)              {                  PartyMemberInfo.Add(new Combatant());              }
Magic Number,ACT.TPMonitor,TPMonitorController,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\TPMonitorController.cs,CheckProcess,The following statement contains a magic number: while (true)              {                  if (isExited) break;                    bool oldACTVisible = IsACTVisible;                  bool oldFFXIVPlugin = IsFFXIVPluginStarted;                  bool oldFFXIVProcess = IsFFXIVProcessStarted;                  bool oldLoggedIn = IsLoggedIn;                  Point oldViewLocation = ViewLocation;                  try                  {                        IsACTVisible = ActGlobals.oFormActMain.Visible;                      IsFFXIVPluginStarted = false;                      if (ActGlobals.oFormActMain.Visible)                      {                          IsFFXIVPluginStarted = FFXIVPluginHelper.Instance == null ? false : true;                      }                      if (!oldFFXIVPlugin && IsFFXIVPluginStarted)                      {                          if (FFXIVPluginHelper.GetVersion.CompareTo(SUPPORTED_VERSION) == -1)                              IsUnSupportedVerion = true;                          else                              IsUnSupportedVerion = false;                      }                        ffxivProcess = FFXIVPluginHelper.GetFFXIVProcess;                        if (ffxivProcess != null)                      {                          IsFFXIVProcessStarted = true;                          Util.FFXIVProcessId = ffxivProcess.MainWindowHandle;                            Combatant player = FFXIVPluginHelper.GetPlayerData();                          if (player.Job != 0)                          {                              IsLoggedIn = true;                                if (oldLoggedIn == false)                              {                                  Util.InitializedAtLogin();                                    switch (Util.GameLanguage)                                  {                                      case Language.English:                                          regexDissolve = new Regex(@"(You (dissolve the|leave .+'s) party|The party has been disbanded)\."' RegexOptions.Compiled | RegexOptions.IgnoreCase);                                          regexEnded = new Regex(@".+ has ended\.$"' RegexOptions.Compiled | RegexOptions.IgnoreCase);                                          break;                                      case Language.German:                                          regexDissolve = new Regex(@"((Deine|Die) Gruppe wurde aufgelöst|Du bist aus der Gruppe von .+ ausgetreten)\."' RegexOptions.Compiled | RegexOptions.IgnoreCase);                                          regexEnded = new Regex(@"„.+“ wurde beendet\.$"' RegexOptions.Compiled | RegexOptions.IgnoreCase);                                          break;                                      case Language.French:                                          regexDissolve = new Regex(@"(L'équipe (est|a été) dissoute|Vous quittez l'équipe de .+)\."' RegexOptions.Compiled | RegexOptions.IgnoreCase);                                          regexEnded = new Regex(@"La mission “.+” commence\.$"' RegexOptions.Compiled | RegexOptions.IgnoreCase);                                          break;                                      case Language.Japanese:                                      default:                                          regexDissolve = new Regex(@"(パーティ(を解散しま|が解散されま)した|のパーティから離脱しました)。"' RegexOptions.Compiled | RegexOptions.IgnoreCase);                                          regexEnded = new Regex(@"「.+?」の攻略を終了した。$"' RegexOptions.Compiled | RegexOptions.IgnoreCase);                                          break;                                  }                              }                          }                          else                          {                              IsLoggedIn = false;                          }                      }                      else                      {                          IsFFXIVProcessStarted = false;                          IsLoggedIn = false;                            // clear                          for (int i = 0; i < 8; i++)                          {                              PartyMemberInfo[i].Job = (int)JOB.Unknown;                              PartyMemberInfo[i].Name = string.Empty;                              PartyMemberInfo[i].CurrentTP = 0;                          }                          // hide at dissolution.                          viewer.Hide();                      }                        ViewLocation = viewer.Location;                        Thread.Sleep(500);                  }                  catch                  {                      Thread.Sleep(500);                  }                  finally                  {                      if (oldACTVisible != IsACTVisible ||                           oldFFXIVPlugin != IsFFXIVPluginStarted ||                          oldFFXIVProcess != IsFFXIVProcessStarted ||                          oldLoggedIn != IsLoggedIn ||                          oldViewLocation != ViewLocation)                      {                          ChangedStatus(this' new EventArgs());                      }                  }              }
Magic Number,ACT.TPMonitor,TPMonitorController,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\TPMonitorController.cs,CheckProcess,The following statement contains a magic number: while (true)              {                  if (isExited) break;                    bool oldACTVisible = IsACTVisible;                  bool oldFFXIVPlugin = IsFFXIVPluginStarted;                  bool oldFFXIVProcess = IsFFXIVProcessStarted;                  bool oldLoggedIn = IsLoggedIn;                  Point oldViewLocation = ViewLocation;                  try                  {                        IsACTVisible = ActGlobals.oFormActMain.Visible;                      IsFFXIVPluginStarted = false;                      if (ActGlobals.oFormActMain.Visible)                      {                          IsFFXIVPluginStarted = FFXIVPluginHelper.Instance == null ? false : true;                      }                      if (!oldFFXIVPlugin && IsFFXIVPluginStarted)                      {                          if (FFXIVPluginHelper.GetVersion.CompareTo(SUPPORTED_VERSION) == -1)                              IsUnSupportedVerion = true;                          else                              IsUnSupportedVerion = false;                      }                        ffxivProcess = FFXIVPluginHelper.GetFFXIVProcess;                        if (ffxivProcess != null)                      {                          IsFFXIVProcessStarted = true;                          Util.FFXIVProcessId = ffxivProcess.MainWindowHandle;                            Combatant player = FFXIVPluginHelper.GetPlayerData();                          if (player.Job != 0)                          {                              IsLoggedIn = true;                                if (oldLoggedIn == false)                              {                                  Util.InitializedAtLogin();                                    switch (Util.GameLanguage)                                  {                                      case Language.English:                                          regexDissolve = new Regex(@"(You (dissolve the|leave .+'s) party|The party has been disbanded)\."' RegexOptions.Compiled | RegexOptions.IgnoreCase);                                          regexEnded = new Regex(@".+ has ended\.$"' RegexOptions.Compiled | RegexOptions.IgnoreCase);                                          break;                                      case Language.German:                                          regexDissolve = new Regex(@"((Deine|Die) Gruppe wurde aufgelöst|Du bist aus der Gruppe von .+ ausgetreten)\."' RegexOptions.Compiled | RegexOptions.IgnoreCase);                                          regexEnded = new Regex(@"„.+“ wurde beendet\.$"' RegexOptions.Compiled | RegexOptions.IgnoreCase);                                          break;                                      case Language.French:                                          regexDissolve = new Regex(@"(L'équipe (est|a été) dissoute|Vous quittez l'équipe de .+)\."' RegexOptions.Compiled | RegexOptions.IgnoreCase);                                          regexEnded = new Regex(@"La mission “.+” commence\.$"' RegexOptions.Compiled | RegexOptions.IgnoreCase);                                          break;                                      case Language.Japanese:                                      default:                                          regexDissolve = new Regex(@"(パーティ(を解散しま|が解散されま)した|のパーティから離脱しました)。"' RegexOptions.Compiled | RegexOptions.IgnoreCase);                                          regexEnded = new Regex(@"「.+?」の攻略を終了した。$"' RegexOptions.Compiled | RegexOptions.IgnoreCase);                                          break;                                  }                              }                          }                          else                          {                              IsLoggedIn = false;                          }                      }                      else                      {                          IsFFXIVProcessStarted = false;                          IsLoggedIn = false;                            // clear                          for (int i = 0; i < 8; i++)                          {                              PartyMemberInfo[i].Job = (int)JOB.Unknown;                              PartyMemberInfo[i].Name = string.Empty;                              PartyMemberInfo[i].CurrentTP = 0;                          }                          // hide at dissolution.                          viewer.Hide();                      }                        ViewLocation = viewer.Location;                        Thread.Sleep(500);                  }                  catch                  {                      Thread.Sleep(500);                  }                  finally                  {                      if (oldACTVisible != IsACTVisible ||                           oldFFXIVPlugin != IsFFXIVPluginStarted ||                          oldFFXIVProcess != IsFFXIVProcessStarted ||                          oldLoggedIn != IsLoggedIn ||                          oldViewLocation != ViewLocation)                      {                          ChangedStatus(this' new EventArgs());                      }                  }              }
Magic Number,ACT.TPMonitor,TPMonitorController,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\TPMonitorController.cs,CheckProcess,The following statement contains a magic number: while (true)              {                  if (isExited) break;                    bool oldACTVisible = IsACTVisible;                  bool oldFFXIVPlugin = IsFFXIVPluginStarted;                  bool oldFFXIVProcess = IsFFXIVProcessStarted;                  bool oldLoggedIn = IsLoggedIn;                  Point oldViewLocation = ViewLocation;                  try                  {                        IsACTVisible = ActGlobals.oFormActMain.Visible;                      IsFFXIVPluginStarted = false;                      if (ActGlobals.oFormActMain.Visible)                      {                          IsFFXIVPluginStarted = FFXIVPluginHelper.Instance == null ? false : true;                      }                      if (!oldFFXIVPlugin && IsFFXIVPluginStarted)                      {                          if (FFXIVPluginHelper.GetVersion.CompareTo(SUPPORTED_VERSION) == -1)                              IsUnSupportedVerion = true;                          else                              IsUnSupportedVerion = false;                      }                        ffxivProcess = FFXIVPluginHelper.GetFFXIVProcess;                        if (ffxivProcess != null)                      {                          IsFFXIVProcessStarted = true;                          Util.FFXIVProcessId = ffxivProcess.MainWindowHandle;                            Combatant player = FFXIVPluginHelper.GetPlayerData();                          if (player.Job != 0)                          {                              IsLoggedIn = true;                                if (oldLoggedIn == false)                              {                                  Util.InitializedAtLogin();                                    switch (Util.GameLanguage)                                  {                                      case Language.English:                                          regexDissolve = new Regex(@"(You (dissolve the|leave .+'s) party|The party has been disbanded)\."' RegexOptions.Compiled | RegexOptions.IgnoreCase);                                          regexEnded = new Regex(@".+ has ended\.$"' RegexOptions.Compiled | RegexOptions.IgnoreCase);                                          break;                                      case Language.German:                                          regexDissolve = new Regex(@"((Deine|Die) Gruppe wurde aufgelöst|Du bist aus der Gruppe von .+ ausgetreten)\."' RegexOptions.Compiled | RegexOptions.IgnoreCase);                                          regexEnded = new Regex(@"„.+“ wurde beendet\.$"' RegexOptions.Compiled | RegexOptions.IgnoreCase);                                          break;                                      case Language.French:                                          regexDissolve = new Regex(@"(L'équipe (est|a été) dissoute|Vous quittez l'équipe de .+)\."' RegexOptions.Compiled | RegexOptions.IgnoreCase);                                          regexEnded = new Regex(@"La mission “.+” commence\.$"' RegexOptions.Compiled | RegexOptions.IgnoreCase);                                          break;                                      case Language.Japanese:                                      default:                                          regexDissolve = new Regex(@"(パーティ(を解散しま|が解散されま)した|のパーティから離脱しました)。"' RegexOptions.Compiled | RegexOptions.IgnoreCase);                                          regexEnded = new Regex(@"「.+?」の攻略を終了した。$"' RegexOptions.Compiled | RegexOptions.IgnoreCase);                                          break;                                  }                              }                          }                          else                          {                              IsLoggedIn = false;                          }                      }                      else                      {                          IsFFXIVProcessStarted = false;                          IsLoggedIn = false;                            // clear                          for (int i = 0; i < 8; i++)                          {                              PartyMemberInfo[i].Job = (int)JOB.Unknown;                              PartyMemberInfo[i].Name = string.Empty;                              PartyMemberInfo[i].CurrentTP = 0;                          }                          // hide at dissolution.                          viewer.Hide();                      }                        ViewLocation = viewer.Location;                        Thread.Sleep(500);                  }                  catch                  {                      Thread.Sleep(500);                  }                  finally                  {                      if (oldACTVisible != IsACTVisible ||                           oldFFXIVPlugin != IsFFXIVPluginStarted ||                          oldFFXIVProcess != IsFFXIVProcessStarted ||                          oldLoggedIn != IsLoggedIn ||                          oldViewLocation != ViewLocation)                      {                          ChangedStatus(this' new EventArgs());                      }                  }              }
Magic Number,ACT.TPMonitor,TPMonitorController,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\TPMonitorController.cs,act_OnLogLineRead,The following statement contains a magic number: if (!isImport)              {                  if ((this.HideWhenDissolve && regexDissolve.IsMatch(logInfo.logLine)) ||                      (this.HideWhenEnded && regexEnded.IsMatch(logInfo.logLine)))                  {                      // clear                      for (int i = 0; i < 8; i++)                      {                          PartyMemberInfo[i].Job = (int)JOB.Unknown;                          PartyMemberInfo[i].Name = string.Empty;                          PartyMemberInfo[i].CurrentTP = 0;                      }                      // hide at dissolution.                      viewer.Hide();                      return;                  }                    Match match = regexCmd.Match(logInfo.logLine);                  if (match.Success)                  {                      string command = match.Groups["Command"].ToString().ToLower();                      if (string.IsNullOrEmpty(command))                      {                          switch (match.Groups["Num"].ToString())                          {                              case "2":                              case "3":                              case "4":                              case "5":                              case "6":                              case "7":                              case "8":                                  int idx = int.Parse(match.Groups["Num"].Value.ToString()) - 1;                                  PartyMemberInfo[idx].Name = match.Groups["Name"].Value.ToString();                                  break;                              default:                                  break;                          }                      }                      else                      {                          switch (command)                          {                              case "adjust":                                  this.PartyListUI = Util.GetPartyListLocation(this.CharFolder);                                  if (this.IsAllianceStyle)                                      allianceStyle.Adjust();                                  else                                      normalStyle.Adjust();                                  break;                              case "clear":                                  for (int i = 0; i < 8; i++)                                  {                                      PartyMemberInfo[i].Job = (int)JOB.Unknown;                                      PartyMemberInfo[i].Name = string.Empty;                                      PartyMemberInfo[i].CurrentTP = 0;                                  }                                  break;                              case "hide":                                  viewer.Hide();                                  break;                              case "show":                                  if (this.IsAllianceStyle)                                      viewer = allianceStyle;                                  else                                      viewer = normalStyle;                                    if (!viewer.Visible)                                  {                                      this.PartyListUI = Util.GetPartyListLocation(this.CharFolder);                                  }                                  if (this.IsAllianceStyle)                                      allianceStyle.Adjust();                                  else                                      normalStyle.Adjust();                                  viewer.TopMost = true;                                  viewer.Show();                                  break;                              default:                                  break;                          }                      }                  }              }
Magic Number,ACT.TPMonitor,TPMonitorController,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\TPMonitorController.cs,act_OnLogLineRead,The following statement contains a magic number: if (!isImport)              {                  if ((this.HideWhenDissolve && regexDissolve.IsMatch(logInfo.logLine)) ||                      (this.HideWhenEnded && regexEnded.IsMatch(logInfo.logLine)))                  {                      // clear                      for (int i = 0; i < 8; i++)                      {                          PartyMemberInfo[i].Job = (int)JOB.Unknown;                          PartyMemberInfo[i].Name = string.Empty;                          PartyMemberInfo[i].CurrentTP = 0;                      }                      // hide at dissolution.                      viewer.Hide();                      return;                  }                    Match match = regexCmd.Match(logInfo.logLine);                  if (match.Success)                  {                      string command = match.Groups["Command"].ToString().ToLower();                      if (string.IsNullOrEmpty(command))                      {                          switch (match.Groups["Num"].ToString())                          {                              case "2":                              case "3":                              case "4":                              case "5":                              case "6":                              case "7":                              case "8":                                  int idx = int.Parse(match.Groups["Num"].Value.ToString()) - 1;                                  PartyMemberInfo[idx].Name = match.Groups["Name"].Value.ToString();                                  break;                              default:                                  break;                          }                      }                      else                      {                          switch (command)                          {                              case "adjust":                                  this.PartyListUI = Util.GetPartyListLocation(this.CharFolder);                                  if (this.IsAllianceStyle)                                      allianceStyle.Adjust();                                  else                                      normalStyle.Adjust();                                  break;                              case "clear":                                  for (int i = 0; i < 8; i++)                                  {                                      PartyMemberInfo[i].Job = (int)JOB.Unknown;                                      PartyMemberInfo[i].Name = string.Empty;                                      PartyMemberInfo[i].CurrentTP = 0;                                  }                                  break;                              case "hide":                                  viewer.Hide();                                  break;                              case "show":                                  if (this.IsAllianceStyle)                                      viewer = allianceStyle;                                  else                                      viewer = normalStyle;                                    if (!viewer.Visible)                                  {                                      this.PartyListUI = Util.GetPartyListLocation(this.CharFolder);                                  }                                  if (this.IsAllianceStyle)                                      allianceStyle.Adjust();                                  else                                      normalStyle.Adjust();                                  viewer.TopMost = true;                                  viewer.Show();                                  break;                              default:                                  break;                          }                      }                  }              }
Magic Number,ACT.TPMonitor,TPMonitorController,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\TPMonitorController.cs,GetMemberTP,The following statement contains a magic number: while (true)              {                  if (isExited) break;                    if (ffxivProcess == null)                  {                      Thread.Sleep(3000);                      continue;                  }                    if (!viewer.Visible || PartyMemberInfo.Count == 0)                  {                      Thread.Sleep(100);                      continue;                  }                    try                  {                      List<Combatant> combatantList = FFXIVPluginHelper.GetCombatantList();                      if (combatantList == null) continue;                        for (int i = 0; i < PartyMemberInfo.Count; i++)                      {                          if (combatantList.Count == 0)                          {                              break;                          }                            PartyMemberInfo[0].Name = combatantList[0].Name;                          PartyMemberInfo[0].CurrentTP = combatantList[0].CurrentTP;                            foreach (Combatant c in combatantList)                          {                              if (PartyMemberInfo[i].Name.Equals(c.Name))                              {                                  PartyMemberInfo[i].Job = c.Job;                                  PartyMemberInfo[i].Name = c.Name;                                  PartyMemberInfo[i].CurrentHP = c.CurrentHP;                                  PartyMemberInfo[i].MaxHP = c.MaxHP;                                  PartyMemberInfo[i].CurrentMP = c.CurrentMP;                                  PartyMemberInfo[i].MaxMP = c.MaxMP;                                  PartyMemberInfo[i].CurrentTP = c.CurrentTP;                                  break;                              }                          }                      }                        OnCurrentTPUpdate();                  }                  finally                  {                      Thread.Sleep(200);                  }              }
Magic Number,ACT.TPMonitor,TPMonitorController,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\TPMonitorController.cs,GetMemberTP,The following statement contains a magic number: while (true)              {                  if (isExited) break;                    if (ffxivProcess == null)                  {                      Thread.Sleep(3000);                      continue;                  }                    if (!viewer.Visible || PartyMemberInfo.Count == 0)                  {                      Thread.Sleep(100);                      continue;                  }                    try                  {                      List<Combatant> combatantList = FFXIVPluginHelper.GetCombatantList();                      if (combatantList == null) continue;                        for (int i = 0; i < PartyMemberInfo.Count; i++)                      {                          if (combatantList.Count == 0)                          {                              break;                          }                            PartyMemberInfo[0].Name = combatantList[0].Name;                          PartyMemberInfo[0].CurrentTP = combatantList[0].CurrentTP;                            foreach (Combatant c in combatantList)                          {                              if (PartyMemberInfo[i].Name.Equals(c.Name))                              {                                  PartyMemberInfo[i].Job = c.Job;                                  PartyMemberInfo[i].Name = c.Name;                                  PartyMemberInfo[i].CurrentHP = c.CurrentHP;                                  PartyMemberInfo[i].MaxHP = c.MaxHP;                                  PartyMemberInfo[i].CurrentMP = c.CurrentMP;                                  PartyMemberInfo[i].MaxMP = c.MaxMP;                                  PartyMemberInfo[i].CurrentTP = c.CurrentTP;                                  break;                              }                          }                      }                        OnCurrentTPUpdate();                  }                  finally                  {                      Thread.Sleep(200);                  }              }
Magic Number,ACT.TPMonitor,TPMonitorController,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\TPMonitorController.cs,GetMemberTP,The following statement contains a magic number: while (true)              {                  if (isExited) break;                    if (ffxivProcess == null)                  {                      Thread.Sleep(3000);                      continue;                  }                    if (!viewer.Visible || PartyMemberInfo.Count == 0)                  {                      Thread.Sleep(100);                      continue;                  }                    try                  {                      List<Combatant> combatantList = FFXIVPluginHelper.GetCombatantList();                      if (combatantList == null) continue;                        for (int i = 0; i < PartyMemberInfo.Count; i++)                      {                          if (combatantList.Count == 0)                          {                              break;                          }                            PartyMemberInfo[0].Name = combatantList[0].Name;                          PartyMemberInfo[0].CurrentTP = combatantList[0].CurrentTP;                            foreach (Combatant c in combatantList)                          {                              if (PartyMemberInfo[i].Name.Equals(c.Name))                              {                                  PartyMemberInfo[i].Job = c.Job;                                  PartyMemberInfo[i].Name = c.Name;                                  PartyMemberInfo[i].CurrentHP = c.CurrentHP;                                  PartyMemberInfo[i].MaxHP = c.MaxHP;                                  PartyMemberInfo[i].CurrentMP = c.CurrentMP;                                  PartyMemberInfo[i].MaxMP = c.MaxMP;                                  PartyMemberInfo[i].CurrentTP = c.CurrentTP;                                  break;                              }                          }                      }                        OnCurrentTPUpdate();                  }                  finally                  {                      Thread.Sleep(200);                  }              }
Magic Number,ACT.TPMonitor,TPViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\TPViewer.cs,DrawBar,The following statement contains a magic number: Rectangle rect = new Rectangle((int)(258 * scale)' (int)(((40 * idx) + 60) * scale)' (int)(87 * scale)' (int)(6 * scale));
Magic Number,ACT.TPMonitor,TPViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\TPViewer.cs,DrawBar,The following statement contains a magic number: Rectangle rect = new Rectangle((int)(258 * scale)' (int)(((40 * idx) + 60) * scale)' (int)(87 * scale)' (int)(6 * scale));
Magic Number,ACT.TPMonitor,TPViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\TPViewer.cs,DrawBar,The following statement contains a magic number: Rectangle rect = new Rectangle((int)(258 * scale)' (int)(((40 * idx) + 60) * scale)' (int)(87 * scale)' (int)(6 * scale));
Magic Number,ACT.TPMonitor,TPViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\TPViewer.cs,DrawBar,The following statement contains a magic number: Rectangle rect = new Rectangle((int)(258 * scale)' (int)(((40 * idx) + 60) * scale)' (int)(87 * scale)' (int)(6 * scale));
Magic Number,ACT.TPMonitor,TPViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\TPViewer.cs,DrawBar,The following statement contains a magic number: Rectangle rect = new Rectangle((int)(258 * scale)' (int)(((40 * idx) + 60) * scale)' (int)(87 * scale)' (int)(6 * scale));
Magic Number,ACT.TPMonitor,TPViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\TPViewer.cs,DrawBar,The following statement contains a magic number: g.FillRectangle(valueBrush' rect.X + width' rect.Y + width' (value * rect.Width / 1000) - width' rect.Height - width);
Magic Number,ACT.TPMonitor,TPViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\TPViewer.cs,GetColor,The following statement contains a magic number: foreach (DataRow r in _controller.dtColor.Rows)              {                  if (int.Parse(r[0].ToString()) <= value && value <= int.Parse(r[1].ToString()))                  {                      string[] rgb = r[2].ToString().Split(''');                      if (rgb.Length == 3)                      {                          brush = new SolidBrush(Color.FromArgb(255' int.Parse(rgb[0])' int.Parse(rgb[1])' int.Parse(rgb[2])));                      }                      else                      {                          brush = new SolidBrush(Color.FromName(r[2].ToString()));                      }                      break;                  }              }
Magic Number,ACT.TPMonitor,TPViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\TPViewer.cs,GetColor,The following statement contains a magic number: foreach (DataRow r in _controller.dtColor.Rows)              {                  if (int.Parse(r[0].ToString()) <= value && value <= int.Parse(r[1].ToString()))                  {                      string[] rgb = r[2].ToString().Split(''');                      if (rgb.Length == 3)                      {                          brush = new SolidBrush(Color.FromArgb(255' int.Parse(rgb[0])' int.Parse(rgb[1])' int.Parse(rgb[2])));                      }                      else                      {                          brush = new SolidBrush(Color.FromName(r[2].ToString()));                      }                      break;                  }              }
Magic Number,ACT.TPMonitor,TPViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\TPViewer.cs,GetColor,The following statement contains a magic number: foreach (DataRow r in _controller.dtColor.Rows)              {                  if (int.Parse(r[0].ToString()) <= value && value <= int.Parse(r[1].ToString()))                  {                      string[] rgb = r[2].ToString().Split(''');                      if (rgb.Length == 3)                      {                          brush = new SolidBrush(Color.FromArgb(255' int.Parse(rgb[0])' int.Parse(rgb[1])' int.Parse(rgb[2])));                      }                      else                      {                          brush = new SolidBrush(Color.FromName(r[2].ToString()));                      }                      break;                  }              }
Magic Number,ACT.TPMonitor,TPViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\TPViewer.cs,GetColor,The following statement contains a magic number: foreach (DataRow r in _controller.dtColor.Rows)              {                  if (int.Parse(r[0].ToString()) <= value && value <= int.Parse(r[1].ToString()))                  {                      string[] rgb = r[2].ToString().Split(''');                      if (rgb.Length == 3)                      {                          brush = new SolidBrush(Color.FromArgb(255' int.Parse(rgb[0])' int.Parse(rgb[1])' int.Parse(rgb[2])));                      }                      else                      {                          brush = new SolidBrush(Color.FromName(r[2].ToString()));                      }                      break;                  }              }
Magic Number,ACT.TPMonitor,TPViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\TPViewer.cs,GetColor,The following statement contains a magic number: foreach (DataRow r in _controller.dtColor.Rows)              {                  if (int.Parse(r[0].ToString()) <= value && value <= int.Parse(r[1].ToString()))                  {                      string[] rgb = r[2].ToString().Split(''');                      if (rgb.Length == 3)                      {                          brush = new SolidBrush(Color.FromArgb(255' int.Parse(rgb[0])' int.Parse(rgb[1])' int.Parse(rgb[2])));                      }                      else                      {                          brush = new SolidBrush(Color.FromName(r[2].ToString()));                      }                      break;                  }              }
Magic Number,ACT.TPMonitor,TPViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\TPViewer.cs,DrawValue,The following statement contains a magic number: Rectangle rect = new Rectangle((int)(247 * scale)' (int)(((40 * idx) + 60 + 8) * scale)' (int)(100 * scale)' (int)(8 * scale));
Magic Number,ACT.TPMonitor,TPViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\TPViewer.cs,DrawValue,The following statement contains a magic number: Rectangle rect = new Rectangle((int)(247 * scale)' (int)(((40 * idx) + 60 + 8) * scale)' (int)(100 * scale)' (int)(8 * scale));
Magic Number,ACT.TPMonitor,TPViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\TPViewer.cs,DrawValue,The following statement contains a magic number: Rectangle rect = new Rectangle((int)(247 * scale)' (int)(((40 * idx) + 60 + 8) * scale)' (int)(100 * scale)' (int)(8 * scale));
Magic Number,ACT.TPMonitor,TPViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\TPViewer.cs,DrawValue,The following statement contains a magic number: Rectangle rect = new Rectangle((int)(247 * scale)' (int)(((40 * idx) + 60 + 8) * scale)' (int)(100 * scale)' (int)(8 * scale));
Magic Number,ACT.TPMonitor,TPViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\TPViewer.cs,DrawValue,The following statement contains a magic number: Rectangle rect = new Rectangle((int)(247 * scale)' (int)(((40 * idx) + 60 + 8) * scale)' (int)(100 * scale)' (int)(8 * scale));
Magic Number,ACT.TPMonitor,TPViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\TPViewer.cs,DrawValue,The following statement contains a magic number: Rectangle rect = new Rectangle((int)(247 * scale)' (int)(((40 * idx) + 60 + 8) * scale)' (int)(100 * scale)' (int)(8 * scale));
Magic Number,ACT.TPMonitor,TPViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\TPViewer.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(284' 262);
Magic Number,ACT.TPMonitor,TPViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\TPViewer.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(284' 262);
Magic Number,ACT.TPMonitor,TPViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\TPViewer.cs,InitializeComponent,The following statement contains a magic number: this.Location = new System.Drawing.Point(100' 200);
Magic Number,ACT.TPMonitor,TPViewer,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\TPViewer.cs,InitializeComponent,The following statement contains a magic number: this.Location = new System.Drawing.Point(100' 200);
Magic Number,ACT.TPMonitor,Util,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\Util.cs,GetWindowSize,The following statement contains a magic number: using (StreamReader sr = new StreamReader(_cfgFile' System.Text.Encoding.GetEncoding("shift_jis")))              {                  string line;                  while ((line = sr.ReadLine()) != null)                  {                      if (line.Equals("<Display Settings>"))                      {                          // read skip                          sr.ReadLine();  //MainAdapter                            // Location' ScreenSize                          int left = (int)uint.Parse(sr.ReadLine().Split('\t')[1].ToString());    //ScreenLeft                          int top = (int)uint.Parse(sr.ReadLine().Split('\t')[1].ToString());     //ScreenTop                          int width = int.Parse(sr.ReadLine().Split('\t')[1].ToString());         //ScreenWidth                          int height = int.Parse(sr.ReadLine().Split('\t')[1].ToString());        //ScreenHeight                            //ScreenMode (0:Window' 1:FullScreen' 2:Virtual)                          int mode = int.Parse(sr.ReadLine().Split('\t')[1].ToString());                            switch (mode)                          {                              case 0:                                  // Window                                  if (FFXIVProcessId != IntPtr.Zero)                                  {                                      RECT windowRect = new RECT();                                      GetWindowRect(FFXIVProcessId' ref windowRect);                                                                            RECT clientRect = new RECT();                                      GetClientRect(FFXIVProcessId' ref clientRect);                                        left = windowRect.left + SystemInformation.FrameBorderSize.Width;                                      top = windowRect.bottom - clientRect.bottom - SystemInformation.FrameBorderSize.Height;                                      width = clientRect.right;                                      height = clientRect.bottom;                                  }                                  break;                              case 1:                                  // FullScreen                                  left = 0;                                  top = 0;                                  width = int.Parse(sr.ReadLine().Split('\t')[1].ToString());     //FullScreenWidth                                  height = int.Parse(sr.ReadLine().Split('\t')[1].ToString());    //FullScreenHeight                                  break;                              case 2:                                  // Virtual                                  left = 0;                                  top = 0;                                  width = Screen.PrimaryScreen.Bounds.Width;                                  height = Screen.PrimaryScreen.Bounds.Height;                                  break;                              default:                                  break;                          }                            screenRect = new Rectangle(new Point(left' top)' new Size(width' height));                          break;                      }                  }              }
Magic Number,ACT.TPMonitor,Util,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\Util.cs,GetPartyListLocation,The following statement contains a magic number: if (_lastWriteTime != File.GetLastWriteTime(textFile))              {                  _screenRect = GetWindowSize(path);                  Widget widget = new Widget();                  widget.Rect = new Rectangle(new Point(0' 0)' new Size(380' 408));                  widget.Scale = 1.0f;                    _partyListUI = widget;                  _lastWriteTime = File.GetLastWriteTime(textFile);                  return _partyListUI;                    using (System.IO.StreamReader sr = new System.IO.StreamReader(textFile' System.Text.Encoding.GetEncoding("shift_jis")))                  {                      string s = sr.ReadToEnd();                      string[] textLine = s.Split('\n');                      for (int i = 0; i < textLine.Length; i++)                      {                          if (textLine[i].Equals("n:_PartyList_a"))                          {                              float widthPercent = GetFloat(textLine[i + 2].Substring(2));                              float heightPercent = GetFloat(textLine[i + 3].Substring(2));                              int width = int.Parse(textLine[i + 4].Substring(2));                              int height = int.Parse(textLine[i + 5].Substring(2));                              float widgetScale = scale == 0f ? GetFloat(textLine[i + 7].Substring(2)) : scale;                                width = (int)(width * widgetScale);                              height = (int)(height * widgetScale);                                int x;                              if (widthPercent < 30)                              {                                  x = (int)((_screenRect.Width * widthPercent / 100));                              }                              else if (widthPercent < 70)                              {                                  x = (int)((_screenRect.Width * (widthPercent / 100)) - (width / 2));                              }                              else                              {                                  x = (int)((_screenRect.Width * (widthPercent / 100)) - width);                              }                              x += _screenRect.Left;                                int y;                              if (heightPercent < 30)                              {                                  y = (int)((_screenRect.Height * heightPercent / 100));                              }                              else if (heightPercent < 80)                              {                                  y = (int)((_screenRect.Height * (heightPercent / 100)) - (height / 2));                              }                              else                              {                                  y = (int)((_screenRect.Height * (heightPercent / 100)) - height);                              }                              y += _screenRect.Top;                                  widget.Rect = new Rectangle(new Point(x' y)' new Size(width' height));                              widget.Scale = widgetScale;                              break;                          }                      }                  }                  _partyListUI = widget;                  _lastWriteTime = File.GetLastWriteTime(textFile);              }
Magic Number,ACT.TPMonitor,Util,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\Util.cs,GetPartyListLocation,The following statement contains a magic number: if (_lastWriteTime != File.GetLastWriteTime(textFile))              {                  _screenRect = GetWindowSize(path);                  Widget widget = new Widget();                  widget.Rect = new Rectangle(new Point(0' 0)' new Size(380' 408));                  widget.Scale = 1.0f;                    _partyListUI = widget;                  _lastWriteTime = File.GetLastWriteTime(textFile);                  return _partyListUI;                    using (System.IO.StreamReader sr = new System.IO.StreamReader(textFile' System.Text.Encoding.GetEncoding("shift_jis")))                  {                      string s = sr.ReadToEnd();                      string[] textLine = s.Split('\n');                      for (int i = 0; i < textLine.Length; i++)                      {                          if (textLine[i].Equals("n:_PartyList_a"))                          {                              float widthPercent = GetFloat(textLine[i + 2].Substring(2));                              float heightPercent = GetFloat(textLine[i + 3].Substring(2));                              int width = int.Parse(textLine[i + 4].Substring(2));                              int height = int.Parse(textLine[i + 5].Substring(2));                              float widgetScale = scale == 0f ? GetFloat(textLine[i + 7].Substring(2)) : scale;                                width = (int)(width * widgetScale);                              height = (int)(height * widgetScale);                                int x;                              if (widthPercent < 30)                              {                                  x = (int)((_screenRect.Width * widthPercent / 100));                              }                              else if (widthPercent < 70)                              {                                  x = (int)((_screenRect.Width * (widthPercent / 100)) - (width / 2));                              }                              else                              {                                  x = (int)((_screenRect.Width * (widthPercent / 100)) - width);                              }                              x += _screenRect.Left;                                int y;                              if (heightPercent < 30)                              {                                  y = (int)((_screenRect.Height * heightPercent / 100));                              }                              else if (heightPercent < 80)                              {                                  y = (int)((_screenRect.Height * (heightPercent / 100)) - (height / 2));                              }                              else                              {                                  y = (int)((_screenRect.Height * (heightPercent / 100)) - height);                              }                              y += _screenRect.Top;                                  widget.Rect = new Rectangle(new Point(x' y)' new Size(width' height));                              widget.Scale = widgetScale;                              break;                          }                      }                  }                  _partyListUI = widget;                  _lastWriteTime = File.GetLastWriteTime(textFile);              }
Magic Number,ACT.TPMonitor,Util,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\Util.cs,GetPartyListLocation,The following statement contains a magic number: if (_lastWriteTime != File.GetLastWriteTime(textFile))              {                  _screenRect = GetWindowSize(path);                  Widget widget = new Widget();                  widget.Rect = new Rectangle(new Point(0' 0)' new Size(380' 408));                  widget.Scale = 1.0f;                    _partyListUI = widget;                  _lastWriteTime = File.GetLastWriteTime(textFile);                  return _partyListUI;                    using (System.IO.StreamReader sr = new System.IO.StreamReader(textFile' System.Text.Encoding.GetEncoding("shift_jis")))                  {                      string s = sr.ReadToEnd();                      string[] textLine = s.Split('\n');                      for (int i = 0; i < textLine.Length; i++)                      {                          if (textLine[i].Equals("n:_PartyList_a"))                          {                              float widthPercent = GetFloat(textLine[i + 2].Substring(2));                              float heightPercent = GetFloat(textLine[i + 3].Substring(2));                              int width = int.Parse(textLine[i + 4].Substring(2));                              int height = int.Parse(textLine[i + 5].Substring(2));                              float widgetScale = scale == 0f ? GetFloat(textLine[i + 7].Substring(2)) : scale;                                width = (int)(width * widgetScale);                              height = (int)(height * widgetScale);                                int x;                              if (widthPercent < 30)                              {                                  x = (int)((_screenRect.Width * widthPercent / 100));                              }                              else if (widthPercent < 70)                              {                                  x = (int)((_screenRect.Width * (widthPercent / 100)) - (width / 2));                              }                              else                              {                                  x = (int)((_screenRect.Width * (widthPercent / 100)) - width);                              }                              x += _screenRect.Left;                                int y;                              if (heightPercent < 30)                              {                                  y = (int)((_screenRect.Height * heightPercent / 100));                              }                              else if (heightPercent < 80)                              {                                  y = (int)((_screenRect.Height * (heightPercent / 100)) - (height / 2));                              }                              else                              {                                  y = (int)((_screenRect.Height * (heightPercent / 100)) - height);                              }                              y += _screenRect.Top;                                  widget.Rect = new Rectangle(new Point(x' y)' new Size(width' height));                              widget.Scale = widgetScale;                              break;                          }                      }                  }                  _partyListUI = widget;                  _lastWriteTime = File.GetLastWriteTime(textFile);              }
Magic Number,ACT.TPMonitor,Util,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\Util.cs,GetPartyListLocation,The following statement contains a magic number: if (_lastWriteTime != File.GetLastWriteTime(textFile))              {                  _screenRect = GetWindowSize(path);                  Widget widget = new Widget();                  widget.Rect = new Rectangle(new Point(0' 0)' new Size(380' 408));                  widget.Scale = 1.0f;                    _partyListUI = widget;                  _lastWriteTime = File.GetLastWriteTime(textFile);                  return _partyListUI;                    using (System.IO.StreamReader sr = new System.IO.StreamReader(textFile' System.Text.Encoding.GetEncoding("shift_jis")))                  {                      string s = sr.ReadToEnd();                      string[] textLine = s.Split('\n');                      for (int i = 0; i < textLine.Length; i++)                      {                          if (textLine[i].Equals("n:_PartyList_a"))                          {                              float widthPercent = GetFloat(textLine[i + 2].Substring(2));                              float heightPercent = GetFloat(textLine[i + 3].Substring(2));                              int width = int.Parse(textLine[i + 4].Substring(2));                              int height = int.Parse(textLine[i + 5].Substring(2));                              float widgetScale = scale == 0f ? GetFloat(textLine[i + 7].Substring(2)) : scale;                                width = (int)(width * widgetScale);                              height = (int)(height * widgetScale);                                int x;                              if (widthPercent < 30)                              {                                  x = (int)((_screenRect.Width * widthPercent / 100));                              }                              else if (widthPercent < 70)                              {                                  x = (int)((_screenRect.Width * (widthPercent / 100)) - (width / 2));                              }                              else                              {                                  x = (int)((_screenRect.Width * (widthPercent / 100)) - width);                              }                              x += _screenRect.Left;                                int y;                              if (heightPercent < 30)                              {                                  y = (int)((_screenRect.Height * heightPercent / 100));                              }                              else if (heightPercent < 80)                              {                                  y = (int)((_screenRect.Height * (heightPercent / 100)) - (height / 2));                              }                              else                              {                                  y = (int)((_screenRect.Height * (heightPercent / 100)) - height);                              }                              y += _screenRect.Top;                                  widget.Rect = new Rectangle(new Point(x' y)' new Size(width' height));                              widget.Scale = widgetScale;                              break;                          }                      }                  }                  _partyListUI = widget;                  _lastWriteTime = File.GetLastWriteTime(textFile);              }
Magic Number,ACT.TPMonitor,Util,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\Util.cs,GetPartyListLocation,The following statement contains a magic number: if (_lastWriteTime != File.GetLastWriteTime(textFile))              {                  _screenRect = GetWindowSize(path);                  Widget widget = new Widget();                  widget.Rect = new Rectangle(new Point(0' 0)' new Size(380' 408));                  widget.Scale = 1.0f;                    _partyListUI = widget;                  _lastWriteTime = File.GetLastWriteTime(textFile);                  return _partyListUI;                    using (System.IO.StreamReader sr = new System.IO.StreamReader(textFile' System.Text.Encoding.GetEncoding("shift_jis")))                  {                      string s = sr.ReadToEnd();                      string[] textLine = s.Split('\n');                      for (int i = 0; i < textLine.Length; i++)                      {                          if (textLine[i].Equals("n:_PartyList_a"))                          {                              float widthPercent = GetFloat(textLine[i + 2].Substring(2));                              float heightPercent = GetFloat(textLine[i + 3].Substring(2));                              int width = int.Parse(textLine[i + 4].Substring(2));                              int height = int.Parse(textLine[i + 5].Substring(2));                              float widgetScale = scale == 0f ? GetFloat(textLine[i + 7].Substring(2)) : scale;                                width = (int)(width * widgetScale);                              height = (int)(height * widgetScale);                                int x;                              if (widthPercent < 30)                              {                                  x = (int)((_screenRect.Width * widthPercent / 100));                              }                              else if (widthPercent < 70)                              {                                  x = (int)((_screenRect.Width * (widthPercent / 100)) - (width / 2));                              }                              else                              {                                  x = (int)((_screenRect.Width * (widthPercent / 100)) - width);                              }                              x += _screenRect.Left;                                int y;                              if (heightPercent < 30)                              {                                  y = (int)((_screenRect.Height * heightPercent / 100));                              }                              else if (heightPercent < 80)                              {                                  y = (int)((_screenRect.Height * (heightPercent / 100)) - (height / 2));                              }                              else                              {                                  y = (int)((_screenRect.Height * (heightPercent / 100)) - height);                              }                              y += _screenRect.Top;                                  widget.Rect = new Rectangle(new Point(x' y)' new Size(width' height));                              widget.Scale = widgetScale;                              break;                          }                      }                  }                  _partyListUI = widget;                  _lastWriteTime = File.GetLastWriteTime(textFile);              }
Magic Number,ACT.TPMonitor,Util,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\Util.cs,GetPartyListLocation,The following statement contains a magic number: if (_lastWriteTime != File.GetLastWriteTime(textFile))              {                  _screenRect = GetWindowSize(path);                  Widget widget = new Widget();                  widget.Rect = new Rectangle(new Point(0' 0)' new Size(380' 408));                  widget.Scale = 1.0f;                    _partyListUI = widget;                  _lastWriteTime = File.GetLastWriteTime(textFile);                  return _partyListUI;                    using (System.IO.StreamReader sr = new System.IO.StreamReader(textFile' System.Text.Encoding.GetEncoding("shift_jis")))                  {                      string s = sr.ReadToEnd();                      string[] textLine = s.Split('\n');                      for (int i = 0; i < textLine.Length; i++)                      {                          if (textLine[i].Equals("n:_PartyList_a"))                          {                              float widthPercent = GetFloat(textLine[i + 2].Substring(2));                              float heightPercent = GetFloat(textLine[i + 3].Substring(2));                              int width = int.Parse(textLine[i + 4].Substring(2));                              int height = int.Parse(textLine[i + 5].Substring(2));                              float widgetScale = scale == 0f ? GetFloat(textLine[i + 7].Substring(2)) : scale;                                width = (int)(width * widgetScale);                              height = (int)(height * widgetScale);                                int x;                              if (widthPercent < 30)                              {                                  x = (int)((_screenRect.Width * widthPercent / 100));                              }                              else if (widthPercent < 70)                              {                                  x = (int)((_screenRect.Width * (widthPercent / 100)) - (width / 2));                              }                              else                              {                                  x = (int)((_screenRect.Width * (widthPercent / 100)) - width);                              }                              x += _screenRect.Left;                                int y;                              if (heightPercent < 30)                              {                                  y = (int)((_screenRect.Height * heightPercent / 100));                              }                              else if (heightPercent < 80)                              {                                  y = (int)((_screenRect.Height * (heightPercent / 100)) - (height / 2));                              }                              else                              {                                  y = (int)((_screenRect.Height * (heightPercent / 100)) - height);                              }                              y += _screenRect.Top;                                  widget.Rect = new Rectangle(new Point(x' y)' new Size(width' height));                              widget.Scale = widgetScale;                              break;                          }                      }                  }                  _partyListUI = widget;                  _lastWriteTime = File.GetLastWriteTime(textFile);              }
Magic Number,ACT.TPMonitor,Util,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\Util.cs,GetPartyListLocation,The following statement contains a magic number: if (_lastWriteTime != File.GetLastWriteTime(textFile))              {                  _screenRect = GetWindowSize(path);                  Widget widget = new Widget();                  widget.Rect = new Rectangle(new Point(0' 0)' new Size(380' 408));                  widget.Scale = 1.0f;                    _partyListUI = widget;                  _lastWriteTime = File.GetLastWriteTime(textFile);                  return _partyListUI;                    using (System.IO.StreamReader sr = new System.IO.StreamReader(textFile' System.Text.Encoding.GetEncoding("shift_jis")))                  {                      string s = sr.ReadToEnd();                      string[] textLine = s.Split('\n');                      for (int i = 0; i < textLine.Length; i++)                      {                          if (textLine[i].Equals("n:_PartyList_a"))                          {                              float widthPercent = GetFloat(textLine[i + 2].Substring(2));                              float heightPercent = GetFloat(textLine[i + 3].Substring(2));                              int width = int.Parse(textLine[i + 4].Substring(2));                              int height = int.Parse(textLine[i + 5].Substring(2));                              float widgetScale = scale == 0f ? GetFloat(textLine[i + 7].Substring(2)) : scale;                                width = (int)(width * widgetScale);                              height = (int)(height * widgetScale);                                int x;                              if (widthPercent < 30)                              {                                  x = (int)((_screenRect.Width * widthPercent / 100));                              }                              else if (widthPercent < 70)                              {                                  x = (int)((_screenRect.Width * (widthPercent / 100)) - (width / 2));                              }                              else                              {                                  x = (int)((_screenRect.Width * (widthPercent / 100)) - width);                              }                              x += _screenRect.Left;                                int y;                              if (heightPercent < 30)                              {                                  y = (int)((_screenRect.Height * heightPercent / 100));                              }                              else if (heightPercent < 80)                              {                                  y = (int)((_screenRect.Height * (heightPercent / 100)) - (height / 2));                              }                              else                              {                                  y = (int)((_screenRect.Height * (heightPercent / 100)) - height);                              }                              y += _screenRect.Top;                                  widget.Rect = new Rectangle(new Point(x' y)' new Size(width' height));                              widget.Scale = widgetScale;                              break;                          }                      }                  }                  _partyListUI = widget;                  _lastWriteTime = File.GetLastWriteTime(textFile);              }
Magic Number,ACT.TPMonitor,Util,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\Util.cs,GetPartyListLocation,The following statement contains a magic number: if (_lastWriteTime != File.GetLastWriteTime(textFile))              {                  _screenRect = GetWindowSize(path);                  Widget widget = new Widget();                  widget.Rect = new Rectangle(new Point(0' 0)' new Size(380' 408));                  widget.Scale = 1.0f;                    _partyListUI = widget;                  _lastWriteTime = File.GetLastWriteTime(textFile);                  return _partyListUI;                    using (System.IO.StreamReader sr = new System.IO.StreamReader(textFile' System.Text.Encoding.GetEncoding("shift_jis")))                  {                      string s = sr.ReadToEnd();                      string[] textLine = s.Split('\n');                      for (int i = 0; i < textLine.Length; i++)                      {                          if (textLine[i].Equals("n:_PartyList_a"))                          {                              float widthPercent = GetFloat(textLine[i + 2].Substring(2));                              float heightPercent = GetFloat(textLine[i + 3].Substring(2));                              int width = int.Parse(textLine[i + 4].Substring(2));                              int height = int.Parse(textLine[i + 5].Substring(2));                              float widgetScale = scale == 0f ? GetFloat(textLine[i + 7].Substring(2)) : scale;                                width = (int)(width * widgetScale);                              height = (int)(height * widgetScale);                                int x;                              if (widthPercent < 30)                              {                                  x = (int)((_screenRect.Width * widthPercent / 100));                              }                              else if (widthPercent < 70)                              {                                  x = (int)((_screenRect.Width * (widthPercent / 100)) - (width / 2));                              }                              else                              {                                  x = (int)((_screenRect.Width * (widthPercent / 100)) - width);                              }                              x += _screenRect.Left;                                int y;                              if (heightPercent < 30)                              {                                  y = (int)((_screenRect.Height * heightPercent / 100));                              }                              else if (heightPercent < 80)                              {                                  y = (int)((_screenRect.Height * (heightPercent / 100)) - (height / 2));                              }                              else                              {                                  y = (int)((_screenRect.Height * (heightPercent / 100)) - height);                              }                              y += _screenRect.Top;                                  widget.Rect = new Rectangle(new Point(x' y)' new Size(width' height));                              widget.Scale = widgetScale;                              break;                          }                      }                  }                  _partyListUI = widget;                  _lastWriteTime = File.GetLastWriteTime(textFile);              }
Magic Number,ACT.TPMonitor,Util,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\Util.cs,GetPartyListLocation,The following statement contains a magic number: if (_lastWriteTime != File.GetLastWriteTime(textFile))              {                  _screenRect = GetWindowSize(path);                  Widget widget = new Widget();                  widget.Rect = new Rectangle(new Point(0' 0)' new Size(380' 408));                  widget.Scale = 1.0f;                    _partyListUI = widget;                  _lastWriteTime = File.GetLastWriteTime(textFile);                  return _partyListUI;                    using (System.IO.StreamReader sr = new System.IO.StreamReader(textFile' System.Text.Encoding.GetEncoding("shift_jis")))                  {                      string s = sr.ReadToEnd();                      string[] textLine = s.Split('\n');                      for (int i = 0; i < textLine.Length; i++)                      {                          if (textLine[i].Equals("n:_PartyList_a"))                          {                              float widthPercent = GetFloat(textLine[i + 2].Substring(2));                              float heightPercent = GetFloat(textLine[i + 3].Substring(2));                              int width = int.Parse(textLine[i + 4].Substring(2));                              int height = int.Parse(textLine[i + 5].Substring(2));                              float widgetScale = scale == 0f ? GetFloat(textLine[i + 7].Substring(2)) : scale;                                width = (int)(width * widgetScale);                              height = (int)(height * widgetScale);                                int x;                              if (widthPercent < 30)                              {                                  x = (int)((_screenRect.Width * widthPercent / 100));                              }                              else if (widthPercent < 70)                              {                                  x = (int)((_screenRect.Width * (widthPercent / 100)) - (width / 2));                              }                              else                              {                                  x = (int)((_screenRect.Width * (widthPercent / 100)) - width);                              }                              x += _screenRect.Left;                                int y;                              if (heightPercent < 30)                              {                                  y = (int)((_screenRect.Height * heightPercent / 100));                              }                              else if (heightPercent < 80)                              {                                  y = (int)((_screenRect.Height * (heightPercent / 100)) - (height / 2));                              }                              else                              {                                  y = (int)((_screenRect.Height * (heightPercent / 100)) - height);                              }                              y += _screenRect.Top;                                  widget.Rect = new Rectangle(new Point(x' y)' new Size(width' height));                              widget.Scale = widgetScale;                              break;                          }                      }                  }                  _partyListUI = widget;                  _lastWriteTime = File.GetLastWriteTime(textFile);              }
Magic Number,ACT.TPMonitor,Util,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\Util.cs,GetPartyListLocation,The following statement contains a magic number: if (_lastWriteTime != File.GetLastWriteTime(textFile))              {                  _screenRect = GetWindowSize(path);                  Widget widget = new Widget();                  widget.Rect = new Rectangle(new Point(0' 0)' new Size(380' 408));                  widget.Scale = 1.0f;                    _partyListUI = widget;                  _lastWriteTime = File.GetLastWriteTime(textFile);                  return _partyListUI;                    using (System.IO.StreamReader sr = new System.IO.StreamReader(textFile' System.Text.Encoding.GetEncoding("shift_jis")))                  {                      string s = sr.ReadToEnd();                      string[] textLine = s.Split('\n');                      for (int i = 0; i < textLine.Length; i++)                      {                          if (textLine[i].Equals("n:_PartyList_a"))                          {                              float widthPercent = GetFloat(textLine[i + 2].Substring(2));                              float heightPercent = GetFloat(textLine[i + 3].Substring(2));                              int width = int.Parse(textLine[i + 4].Substring(2));                              int height = int.Parse(textLine[i + 5].Substring(2));                              float widgetScale = scale == 0f ? GetFloat(textLine[i + 7].Substring(2)) : scale;                                width = (int)(width * widgetScale);                              height = (int)(height * widgetScale);                                int x;                              if (widthPercent < 30)                              {                                  x = (int)((_screenRect.Width * widthPercent / 100));                              }                              else if (widthPercent < 70)                              {                                  x = (int)((_screenRect.Width * (widthPercent / 100)) - (width / 2));                              }                              else                              {                                  x = (int)((_screenRect.Width * (widthPercent / 100)) - width);                              }                              x += _screenRect.Left;                                int y;                              if (heightPercent < 30)                              {                                  y = (int)((_screenRect.Height * heightPercent / 100));                              }                              else if (heightPercent < 80)                              {                                  y = (int)((_screenRect.Height * (heightPercent / 100)) - (height / 2));                              }                              else                              {                                  y = (int)((_screenRect.Height * (heightPercent / 100)) - height);                              }                              y += _screenRect.Top;                                  widget.Rect = new Rectangle(new Point(x' y)' new Size(width' height));                              widget.Scale = widgetScale;                              break;                          }                      }                  }                  _partyListUI = widget;                  _lastWriteTime = File.GetLastWriteTime(textFile);              }
Magic Number,ACT.TPMonitor,Util,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\Util.cs,GetPartyListLocation,The following statement contains a magic number: if (_lastWriteTime != File.GetLastWriteTime(textFile))              {                  _screenRect = GetWindowSize(path);                  Widget widget = new Widget();                  widget.Rect = new Rectangle(new Point(0' 0)' new Size(380' 408));                  widget.Scale = 1.0f;                    _partyListUI = widget;                  _lastWriteTime = File.GetLastWriteTime(textFile);                  return _partyListUI;                    using (System.IO.StreamReader sr = new System.IO.StreamReader(textFile' System.Text.Encoding.GetEncoding("shift_jis")))                  {                      string s = sr.ReadToEnd();                      string[] textLine = s.Split('\n');                      for (int i = 0; i < textLine.Length; i++)                      {                          if (textLine[i].Equals("n:_PartyList_a"))                          {                              float widthPercent = GetFloat(textLine[i + 2].Substring(2));                              float heightPercent = GetFloat(textLine[i + 3].Substring(2));                              int width = int.Parse(textLine[i + 4].Substring(2));                              int height = int.Parse(textLine[i + 5].Substring(2));                              float widgetScale = scale == 0f ? GetFloat(textLine[i + 7].Substring(2)) : scale;                                width = (int)(width * widgetScale);                              height = (int)(height * widgetScale);                                int x;                              if (widthPercent < 30)                              {                                  x = (int)((_screenRect.Width * widthPercent / 100));                              }                              else if (widthPercent < 70)                              {                                  x = (int)((_screenRect.Width * (widthPercent / 100)) - (width / 2));                              }                              else                              {                                  x = (int)((_screenRect.Width * (widthPercent / 100)) - width);                              }                              x += _screenRect.Left;                                int y;                              if (heightPercent < 30)                              {                                  y = (int)((_screenRect.Height * heightPercent / 100));                              }                              else if (heightPercent < 80)                              {                                  y = (int)((_screenRect.Height * (heightPercent / 100)) - (height / 2));                              }                              else                              {                                  y = (int)((_screenRect.Height * (heightPercent / 100)) - height);                              }                              y += _screenRect.Top;                                  widget.Rect = new Rectangle(new Point(x' y)' new Size(width' height));                              widget.Scale = widgetScale;                              break;                          }                      }                  }                  _partyListUI = widget;                  _lastWriteTime = File.GetLastWriteTime(textFile);              }
Magic Number,ACT.TPMonitor,Util,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\Util.cs,GetPartyListLocation,The following statement contains a magic number: if (_lastWriteTime != File.GetLastWriteTime(textFile))              {                  _screenRect = GetWindowSize(path);                  Widget widget = new Widget();                  widget.Rect = new Rectangle(new Point(0' 0)' new Size(380' 408));                  widget.Scale = 1.0f;                    _partyListUI = widget;                  _lastWriteTime = File.GetLastWriteTime(textFile);                  return _partyListUI;                    using (System.IO.StreamReader sr = new System.IO.StreamReader(textFile' System.Text.Encoding.GetEncoding("shift_jis")))                  {                      string s = sr.ReadToEnd();                      string[] textLine = s.Split('\n');                      for (int i = 0; i < textLine.Length; i++)                      {                          if (textLine[i].Equals("n:_PartyList_a"))                          {                              float widthPercent = GetFloat(textLine[i + 2].Substring(2));                              float heightPercent = GetFloat(textLine[i + 3].Substring(2));                              int width = int.Parse(textLine[i + 4].Substring(2));                              int height = int.Parse(textLine[i + 5].Substring(2));                              float widgetScale = scale == 0f ? GetFloat(textLine[i + 7].Substring(2)) : scale;                                width = (int)(width * widgetScale);                              height = (int)(height * widgetScale);                                int x;                              if (widthPercent < 30)                              {                                  x = (int)((_screenRect.Width * widthPercent / 100));                              }                              else if (widthPercent < 70)                              {                                  x = (int)((_screenRect.Width * (widthPercent / 100)) - (width / 2));                              }                              else                              {                                  x = (int)((_screenRect.Width * (widthPercent / 100)) - width);                              }                              x += _screenRect.Left;                                int y;                              if (heightPercent < 30)                              {                                  y = (int)((_screenRect.Height * heightPercent / 100));                              }                              else if (heightPercent < 80)                              {                                  y = (int)((_screenRect.Height * (heightPercent / 100)) - (height / 2));                              }                              else                              {                                  y = (int)((_screenRect.Height * (heightPercent / 100)) - height);                              }                              y += _screenRect.Top;                                  widget.Rect = new Rectangle(new Point(x' y)' new Size(width' height));                              widget.Scale = widgetScale;                              break;                          }                      }                  }                  _partyListUI = widget;                  _lastWriteTime = File.GetLastWriteTime(textFile);              }
Magic Number,ACT.TPMonitor,Util,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\Util.cs,GetPartyListLocation,The following statement contains a magic number: if (_lastWriteTime != File.GetLastWriteTime(textFile))              {                  _screenRect = GetWindowSize(path);                  Widget widget = new Widget();                  widget.Rect = new Rectangle(new Point(0' 0)' new Size(380' 408));                  widget.Scale = 1.0f;                    _partyListUI = widget;                  _lastWriteTime = File.GetLastWriteTime(textFile);                  return _partyListUI;                    using (System.IO.StreamReader sr = new System.IO.StreamReader(textFile' System.Text.Encoding.GetEncoding("shift_jis")))                  {                      string s = sr.ReadToEnd();                      string[] textLine = s.Split('\n');                      for (int i = 0; i < textLine.Length; i++)                      {                          if (textLine[i].Equals("n:_PartyList_a"))                          {                              float widthPercent = GetFloat(textLine[i + 2].Substring(2));                              float heightPercent = GetFloat(textLine[i + 3].Substring(2));                              int width = int.Parse(textLine[i + 4].Substring(2));                              int height = int.Parse(textLine[i + 5].Substring(2));                              float widgetScale = scale == 0f ? GetFloat(textLine[i + 7].Substring(2)) : scale;                                width = (int)(width * widgetScale);                              height = (int)(height * widgetScale);                                int x;                              if (widthPercent < 30)                              {                                  x = (int)((_screenRect.Width * widthPercent / 100));                              }                              else if (widthPercent < 70)                              {                                  x = (int)((_screenRect.Width * (widthPercent / 100)) - (width / 2));                              }                              else                              {                                  x = (int)((_screenRect.Width * (widthPercent / 100)) - width);                              }                              x += _screenRect.Left;                                int y;                              if (heightPercent < 30)                              {                                  y = (int)((_screenRect.Height * heightPercent / 100));                              }                              else if (heightPercent < 80)                              {                                  y = (int)((_screenRect.Height * (heightPercent / 100)) - (height / 2));                              }                              else                              {                                  y = (int)((_screenRect.Height * (heightPercent / 100)) - height);                              }                              y += _screenRect.Top;                                  widget.Rect = new Rectangle(new Point(x' y)' new Size(width' height));                              widget.Scale = widgetScale;                              break;                          }                      }                  }                  _partyListUI = widget;                  _lastWriteTime = File.GetLastWriteTime(textFile);              }
Magic Number,ACT.TPMonitor,Util,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\Util.cs,GetPartyListLocation,The following statement contains a magic number: if (_lastWriteTime != File.GetLastWriteTime(textFile))              {                  _screenRect = GetWindowSize(path);                  Widget widget = new Widget();                  widget.Rect = new Rectangle(new Point(0' 0)' new Size(380' 408));                  widget.Scale = 1.0f;                    _partyListUI = widget;                  _lastWriteTime = File.GetLastWriteTime(textFile);                  return _partyListUI;                    using (System.IO.StreamReader sr = new System.IO.StreamReader(textFile' System.Text.Encoding.GetEncoding("shift_jis")))                  {                      string s = sr.ReadToEnd();                      string[] textLine = s.Split('\n');                      for (int i = 0; i < textLine.Length; i++)                      {                          if (textLine[i].Equals("n:_PartyList_a"))                          {                              float widthPercent = GetFloat(textLine[i + 2].Substring(2));                              float heightPercent = GetFloat(textLine[i + 3].Substring(2));                              int width = int.Parse(textLine[i + 4].Substring(2));                              int height = int.Parse(textLine[i + 5].Substring(2));                              float widgetScale = scale == 0f ? GetFloat(textLine[i + 7].Substring(2)) : scale;                                width = (int)(width * widgetScale);                              height = (int)(height * widgetScale);                                int x;                              if (widthPercent < 30)                              {                                  x = (int)((_screenRect.Width * widthPercent / 100));                              }                              else if (widthPercent < 70)                              {                                  x = (int)((_screenRect.Width * (widthPercent / 100)) - (width / 2));                              }                              else                              {                                  x = (int)((_screenRect.Width * (widthPercent / 100)) - width);                              }                              x += _screenRect.Left;                                int y;                              if (heightPercent < 30)                              {                                  y = (int)((_screenRect.Height * heightPercent / 100));                              }                              else if (heightPercent < 80)                              {                                  y = (int)((_screenRect.Height * (heightPercent / 100)) - (height / 2));                              }                              else                              {                                  y = (int)((_screenRect.Height * (heightPercent / 100)) - height);                              }                              y += _screenRect.Top;                                  widget.Rect = new Rectangle(new Point(x' y)' new Size(width' height));                              widget.Scale = widgetScale;                              break;                          }                      }                  }                  _partyListUI = widget;                  _lastWriteTime = File.GetLastWriteTime(textFile);              }
Magic Number,ACT.TPMonitor,Util,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\Util.cs,GetPartyListLocation,The following statement contains a magic number: if (_lastWriteTime != File.GetLastWriteTime(textFile))              {                  _screenRect = GetWindowSize(path);                  Widget widget = new Widget();                  widget.Rect = new Rectangle(new Point(0' 0)' new Size(380' 408));                  widget.Scale = 1.0f;                    _partyListUI = widget;                  _lastWriteTime = File.GetLastWriteTime(textFile);                  return _partyListUI;                    using (System.IO.StreamReader sr = new System.IO.StreamReader(textFile' System.Text.Encoding.GetEncoding("shift_jis")))                  {                      string s = sr.ReadToEnd();                      string[] textLine = s.Split('\n');                      for (int i = 0; i < textLine.Length; i++)                      {                          if (textLine[i].Equals("n:_PartyList_a"))                          {                              float widthPercent = GetFloat(textLine[i + 2].Substring(2));                              float heightPercent = GetFloat(textLine[i + 3].Substring(2));                              int width = int.Parse(textLine[i + 4].Substring(2));                              int height = int.Parse(textLine[i + 5].Substring(2));                              float widgetScale = scale == 0f ? GetFloat(textLine[i + 7].Substring(2)) : scale;                                width = (int)(width * widgetScale);                              height = (int)(height * widgetScale);                                int x;                              if (widthPercent < 30)                              {                                  x = (int)((_screenRect.Width * widthPercent / 100));                              }                              else if (widthPercent < 70)                              {                                  x = (int)((_screenRect.Width * (widthPercent / 100)) - (width / 2));                              }                              else                              {                                  x = (int)((_screenRect.Width * (widthPercent / 100)) - width);                              }                              x += _screenRect.Left;                                int y;                              if (heightPercent < 30)                              {                                  y = (int)((_screenRect.Height * heightPercent / 100));                              }                              else if (heightPercent < 80)                              {                                  y = (int)((_screenRect.Height * (heightPercent / 100)) - (height / 2));                              }                              else                              {                                  y = (int)((_screenRect.Height * (heightPercent / 100)) - height);                              }                              y += _screenRect.Top;                                  widget.Rect = new Rectangle(new Point(x' y)' new Size(width' height));                              widget.Scale = widgetScale;                              break;                          }                      }                  }                  _partyListUI = widget;                  _lastWriteTime = File.GetLastWriteTime(textFile);              }
Magic Number,ACT.TPMonitor,Util,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\Util.cs,GetPartyListLocation,The following statement contains a magic number: if (_lastWriteTime != File.GetLastWriteTime(textFile))              {                  _screenRect = GetWindowSize(path);                  Widget widget = new Widget();                  widget.Rect = new Rectangle(new Point(0' 0)' new Size(380' 408));                  widget.Scale = 1.0f;                    _partyListUI = widget;                  _lastWriteTime = File.GetLastWriteTime(textFile);                  return _partyListUI;                    using (System.IO.StreamReader sr = new System.IO.StreamReader(textFile' System.Text.Encoding.GetEncoding("shift_jis")))                  {                      string s = sr.ReadToEnd();                      string[] textLine = s.Split('\n');                      for (int i = 0; i < textLine.Length; i++)                      {                          if (textLine[i].Equals("n:_PartyList_a"))                          {                              float widthPercent = GetFloat(textLine[i + 2].Substring(2));                              float heightPercent = GetFloat(textLine[i + 3].Substring(2));                              int width = int.Parse(textLine[i + 4].Substring(2));                              int height = int.Parse(textLine[i + 5].Substring(2));                              float widgetScale = scale == 0f ? GetFloat(textLine[i + 7].Substring(2)) : scale;                                width = (int)(width * widgetScale);                              height = (int)(height * widgetScale);                                int x;                              if (widthPercent < 30)                              {                                  x = (int)((_screenRect.Width * widthPercent / 100));                              }                              else if (widthPercent < 70)                              {                                  x = (int)((_screenRect.Width * (widthPercent / 100)) - (width / 2));                              }                              else                              {                                  x = (int)((_screenRect.Width * (widthPercent / 100)) - width);                              }                              x += _screenRect.Left;                                int y;                              if (heightPercent < 30)                              {                                  y = (int)((_screenRect.Height * heightPercent / 100));                              }                              else if (heightPercent < 80)                              {                                  y = (int)((_screenRect.Height * (heightPercent / 100)) - (height / 2));                              }                              else                              {                                  y = (int)((_screenRect.Height * (heightPercent / 100)) - height);                              }                              y += _screenRect.Top;                                  widget.Rect = new Rectangle(new Point(x' y)' new Size(width' height));                              widget.Scale = widgetScale;                              break;                          }                      }                  }                  _partyListUI = widget;                  _lastWriteTime = File.GetLastWriteTime(textFile);              }
Magic Number,ACT.TPMonitor,Util,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\Util.cs,GetPartyListLocation,The following statement contains a magic number: if (_lastWriteTime != File.GetLastWriteTime(textFile))              {                  _screenRect = GetWindowSize(path);                  Widget widget = new Widget();                  widget.Rect = new Rectangle(new Point(0' 0)' new Size(380' 408));                  widget.Scale = 1.0f;                    _partyListUI = widget;                  _lastWriteTime = File.GetLastWriteTime(textFile);                  return _partyListUI;                    using (System.IO.StreamReader sr = new System.IO.StreamReader(textFile' System.Text.Encoding.GetEncoding("shift_jis")))                  {                      string s = sr.ReadToEnd();                      string[] textLine = s.Split('\n');                      for (int i = 0; i < textLine.Length; i++)                      {                          if (textLine[i].Equals("n:_PartyList_a"))                          {                              float widthPercent = GetFloat(textLine[i + 2].Substring(2));                              float heightPercent = GetFloat(textLine[i + 3].Substring(2));                              int width = int.Parse(textLine[i + 4].Substring(2));                              int height = int.Parse(textLine[i + 5].Substring(2));                              float widgetScale = scale == 0f ? GetFloat(textLine[i + 7].Substring(2)) : scale;                                width = (int)(width * widgetScale);                              height = (int)(height * widgetScale);                                int x;                              if (widthPercent < 30)                              {                                  x = (int)((_screenRect.Width * widthPercent / 100));                              }                              else if (widthPercent < 70)                              {                                  x = (int)((_screenRect.Width * (widthPercent / 100)) - (width / 2));                              }                              else                              {                                  x = (int)((_screenRect.Width * (widthPercent / 100)) - width);                              }                              x += _screenRect.Left;                                int y;                              if (heightPercent < 30)                              {                                  y = (int)((_screenRect.Height * heightPercent / 100));                              }                              else if (heightPercent < 80)                              {                                  y = (int)((_screenRect.Height * (heightPercent / 100)) - (height / 2));                              }                              else                              {                                  y = (int)((_screenRect.Height * (heightPercent / 100)) - height);                              }                              y += _screenRect.Top;                                  widget.Rect = new Rectangle(new Point(x' y)' new Size(width' height));                              widget.Scale = widgetScale;                              break;                          }                      }                  }                  _partyListUI = widget;                  _lastWriteTime = File.GetLastWriteTime(textFile);              }
Magic Number,ACT.TPMonitor,Util,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\Util.cs,GetPartyListLocation,The following statement contains a magic number: if (_lastWriteTime != File.GetLastWriteTime(textFile))              {                  _screenRect = GetWindowSize(path);                  Widget widget = new Widget();                  widget.Rect = new Rectangle(new Point(0' 0)' new Size(380' 408));                  widget.Scale = 1.0f;                    _partyListUI = widget;                  _lastWriteTime = File.GetLastWriteTime(textFile);                  return _partyListUI;                    using (System.IO.StreamReader sr = new System.IO.StreamReader(textFile' System.Text.Encoding.GetEncoding("shift_jis")))                  {                      string s = sr.ReadToEnd();                      string[] textLine = s.Split('\n');                      for (int i = 0; i < textLine.Length; i++)                      {                          if (textLine[i].Equals("n:_PartyList_a"))                          {                              float widthPercent = GetFloat(textLine[i + 2].Substring(2));                              float heightPercent = GetFloat(textLine[i + 3].Substring(2));                              int width = int.Parse(textLine[i + 4].Substring(2));                              int height = int.Parse(textLine[i + 5].Substring(2));                              float widgetScale = scale == 0f ? GetFloat(textLine[i + 7].Substring(2)) : scale;                                width = (int)(width * widgetScale);                              height = (int)(height * widgetScale);                                int x;                              if (widthPercent < 30)                              {                                  x = (int)((_screenRect.Width * widthPercent / 100));                              }                              else if (widthPercent < 70)                              {                                  x = (int)((_screenRect.Width * (widthPercent / 100)) - (width / 2));                              }                              else                              {                                  x = (int)((_screenRect.Width * (widthPercent / 100)) - width);                              }                              x += _screenRect.Left;                                int y;                              if (heightPercent < 30)                              {                                  y = (int)((_screenRect.Height * heightPercent / 100));                              }                              else if (heightPercent < 80)                              {                                  y = (int)((_screenRect.Height * (heightPercent / 100)) - (height / 2));                              }                              else                              {                                  y = (int)((_screenRect.Height * (heightPercent / 100)) - height);                              }                              y += _screenRect.Top;                                  widget.Rect = new Rectangle(new Point(x' y)' new Size(width' height));                              widget.Scale = widgetScale;                              break;                          }                      }                  }                  _partyListUI = widget;                  _lastWriteTime = File.GetLastWriteTime(textFile);              }
Magic Number,ACT.TPMonitor,Util,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\Util.cs,GetPartyListLocation,The following statement contains a magic number: if (_lastWriteTime != File.GetLastWriteTime(textFile))              {                  _screenRect = GetWindowSize(path);                  Widget widget = new Widget();                  widget.Rect = new Rectangle(new Point(0' 0)' new Size(380' 408));                  widget.Scale = 1.0f;                    _partyListUI = widget;                  _lastWriteTime = File.GetLastWriteTime(textFile);                  return _partyListUI;                    using (System.IO.StreamReader sr = new System.IO.StreamReader(textFile' System.Text.Encoding.GetEncoding("shift_jis")))                  {                      string s = sr.ReadToEnd();                      string[] textLine = s.Split('\n');                      for (int i = 0; i < textLine.Length; i++)                      {                          if (textLine[i].Equals("n:_PartyList_a"))                          {                              float widthPercent = GetFloat(textLine[i + 2].Substring(2));                              float heightPercent = GetFloat(textLine[i + 3].Substring(2));                              int width = int.Parse(textLine[i + 4].Substring(2));                              int height = int.Parse(textLine[i + 5].Substring(2));                              float widgetScale = scale == 0f ? GetFloat(textLine[i + 7].Substring(2)) : scale;                                width = (int)(width * widgetScale);                              height = (int)(height * widgetScale);                                int x;                              if (widthPercent < 30)                              {                                  x = (int)((_screenRect.Width * widthPercent / 100));                              }                              else if (widthPercent < 70)                              {                                  x = (int)((_screenRect.Width * (widthPercent / 100)) - (width / 2));                              }                              else                              {                                  x = (int)((_screenRect.Width * (widthPercent / 100)) - width);                              }                              x += _screenRect.Left;                                int y;                              if (heightPercent < 30)                              {                                  y = (int)((_screenRect.Height * heightPercent / 100));                              }                              else if (heightPercent < 80)                              {                                  y = (int)((_screenRect.Height * (heightPercent / 100)) - (height / 2));                              }                              else                              {                                  y = (int)((_screenRect.Height * (heightPercent / 100)) - height);                              }                              y += _screenRect.Top;                                  widget.Rect = new Rectangle(new Point(x' y)' new Size(width' height));                              widget.Scale = widgetScale;                              break;                          }                      }                  }                  _partyListUI = widget;                  _lastWriteTime = File.GetLastWriteTime(textFile);              }
Magic Number,ACT.TPMonitor,Util,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\Util.cs,GetPartyListLocation,The following statement contains a magic number: if (_lastWriteTime != File.GetLastWriteTime(textFile))              {                  _screenRect = GetWindowSize(path);                  Widget widget = new Widget();                  widget.Rect = new Rectangle(new Point(0' 0)' new Size(380' 408));                  widget.Scale = 1.0f;                    _partyListUI = widget;                  _lastWriteTime = File.GetLastWriteTime(textFile);                  return _partyListUI;                    using (System.IO.StreamReader sr = new System.IO.StreamReader(textFile' System.Text.Encoding.GetEncoding("shift_jis")))                  {                      string s = sr.ReadToEnd();                      string[] textLine = s.Split('\n');                      for (int i = 0; i < textLine.Length; i++)                      {                          if (textLine[i].Equals("n:_PartyList_a"))                          {                              float widthPercent = GetFloat(textLine[i + 2].Substring(2));                              float heightPercent = GetFloat(textLine[i + 3].Substring(2));                              int width = int.Parse(textLine[i + 4].Substring(2));                              int height = int.Parse(textLine[i + 5].Substring(2));                              float widgetScale = scale == 0f ? GetFloat(textLine[i + 7].Substring(2)) : scale;                                width = (int)(width * widgetScale);                              height = (int)(height * widgetScale);                                int x;                              if (widthPercent < 30)                              {                                  x = (int)((_screenRect.Width * widthPercent / 100));                              }                              else if (widthPercent < 70)                              {                                  x = (int)((_screenRect.Width * (widthPercent / 100)) - (width / 2));                              }                              else                              {                                  x = (int)((_screenRect.Width * (widthPercent / 100)) - width);                              }                              x += _screenRect.Left;                                int y;                              if (heightPercent < 30)                              {                                  y = (int)((_screenRect.Height * heightPercent / 100));                              }                              else if (heightPercent < 80)                              {                                  y = (int)((_screenRect.Height * (heightPercent / 100)) - (height / 2));                              }                              else                              {                                  y = (int)((_screenRect.Height * (heightPercent / 100)) - height);                              }                              y += _screenRect.Top;                                  widget.Rect = new Rectangle(new Point(x' y)' new Size(width' height));                              widget.Scale = widgetScale;                              break;                          }                      }                  }                  _partyListUI = widget;                  _lastWriteTime = File.GetLastWriteTime(textFile);              }
Magic Number,ACT.TPMonitor,Util,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\Util.cs,GetPartyListLocation,The following statement contains a magic number: if (_lastWriteTime != File.GetLastWriteTime(textFile))              {                  _screenRect = GetWindowSize(path);                  Widget widget = new Widget();                  widget.Rect = new Rectangle(new Point(0' 0)' new Size(380' 408));                  widget.Scale = 1.0f;                    _partyListUI = widget;                  _lastWriteTime = File.GetLastWriteTime(textFile);                  return _partyListUI;                    using (System.IO.StreamReader sr = new System.IO.StreamReader(textFile' System.Text.Encoding.GetEncoding("shift_jis")))                  {                      string s = sr.ReadToEnd();                      string[] textLine = s.Split('\n');                      for (int i = 0; i < textLine.Length; i++)                      {                          if (textLine[i].Equals("n:_PartyList_a"))                          {                              float widthPercent = GetFloat(textLine[i + 2].Substring(2));                              float heightPercent = GetFloat(textLine[i + 3].Substring(2));                              int width = int.Parse(textLine[i + 4].Substring(2));                              int height = int.Parse(textLine[i + 5].Substring(2));                              float widgetScale = scale == 0f ? GetFloat(textLine[i + 7].Substring(2)) : scale;                                width = (int)(width * widgetScale);                              height = (int)(height * widgetScale);                                int x;                              if (widthPercent < 30)                              {                                  x = (int)((_screenRect.Width * widthPercent / 100));                              }                              else if (widthPercent < 70)                              {                                  x = (int)((_screenRect.Width * (widthPercent / 100)) - (width / 2));                              }                              else                              {                                  x = (int)((_screenRect.Width * (widthPercent / 100)) - width);                              }                              x += _screenRect.Left;                                int y;                              if (heightPercent < 30)                              {                                  y = (int)((_screenRect.Height * heightPercent / 100));                              }                              else if (heightPercent < 80)                              {                                  y = (int)((_screenRect.Height * (heightPercent / 100)) - (height / 2));                              }                              else                              {                                  y = (int)((_screenRect.Height * (heightPercent / 100)) - height);                              }                              y += _screenRect.Top;                                  widget.Rect = new Rectangle(new Point(x' y)' new Size(width' height));                              widget.Scale = widgetScale;                              break;                          }                      }                  }                  _partyListUI = widget;                  _lastWriteTime = File.GetLastWriteTime(textFile);              }
Magic Number,ACT.TPMonitor,Util,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\Util.cs,GetPartyListLocation,The following statement contains a magic number: if (_lastWriteTime != File.GetLastWriteTime(textFile))              {                  _screenRect = GetWindowSize(path);                  Widget widget = new Widget();                  widget.Rect = new Rectangle(new Point(0' 0)' new Size(380' 408));                  widget.Scale = 1.0f;                    _partyListUI = widget;                  _lastWriteTime = File.GetLastWriteTime(textFile);                  return _partyListUI;                    using (System.IO.StreamReader sr = new System.IO.StreamReader(textFile' System.Text.Encoding.GetEncoding("shift_jis")))                  {                      string s = sr.ReadToEnd();                      string[] textLine = s.Split('\n');                      for (int i = 0; i < textLine.Length; i++)                      {                          if (textLine[i].Equals("n:_PartyList_a"))                          {                              float widthPercent = GetFloat(textLine[i + 2].Substring(2));                              float heightPercent = GetFloat(textLine[i + 3].Substring(2));                              int width = int.Parse(textLine[i + 4].Substring(2));                              int height = int.Parse(textLine[i + 5].Substring(2));                              float widgetScale = scale == 0f ? GetFloat(textLine[i + 7].Substring(2)) : scale;                                width = (int)(width * widgetScale);                              height = (int)(height * widgetScale);                                int x;                              if (widthPercent < 30)                              {                                  x = (int)((_screenRect.Width * widthPercent / 100));                              }                              else if (widthPercent < 70)                              {                                  x = (int)((_screenRect.Width * (widthPercent / 100)) - (width / 2));                              }                              else                              {                                  x = (int)((_screenRect.Width * (widthPercent / 100)) - width);                              }                              x += _screenRect.Left;                                int y;                              if (heightPercent < 30)                              {                                  y = (int)((_screenRect.Height * heightPercent / 100));                              }                              else if (heightPercent < 80)                              {                                  y = (int)((_screenRect.Height * (heightPercent / 100)) - (height / 2));                              }                              else                              {                                  y = (int)((_screenRect.Height * (heightPercent / 100)) - height);                              }                              y += _screenRect.Top;                                  widget.Rect = new Rectangle(new Point(x' y)' new Size(width' height));                              widget.Scale = widgetScale;                              break;                          }                      }                  }                  _partyListUI = widget;                  _lastWriteTime = File.GetLastWriteTime(textFile);              }
Magic Number,ACT.TPMonitor,Util,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\Util.cs,GetPartyListLocation,The following statement contains a magic number: if (_lastWriteTime != File.GetLastWriteTime(textFile))              {                  _screenRect = GetWindowSize(path);                  Widget widget = new Widget();                  widget.Rect = new Rectangle(new Point(0' 0)' new Size(380' 408));                  widget.Scale = 1.0f;                    _partyListUI = widget;                  _lastWriteTime = File.GetLastWriteTime(textFile);                  return _partyListUI;                    using (System.IO.StreamReader sr = new System.IO.StreamReader(textFile' System.Text.Encoding.GetEncoding("shift_jis")))                  {                      string s = sr.ReadToEnd();                      string[] textLine = s.Split('\n');                      for (int i = 0; i < textLine.Length; i++)                      {                          if (textLine[i].Equals("n:_PartyList_a"))                          {                              float widthPercent = GetFloat(textLine[i + 2].Substring(2));                              float heightPercent = GetFloat(textLine[i + 3].Substring(2));                              int width = int.Parse(textLine[i + 4].Substring(2));                              int height = int.Parse(textLine[i + 5].Substring(2));                              float widgetScale = scale == 0f ? GetFloat(textLine[i + 7].Substring(2)) : scale;                                width = (int)(width * widgetScale);                              height = (int)(height * widgetScale);                                int x;                              if (widthPercent < 30)                              {                                  x = (int)((_screenRect.Width * widthPercent / 100));                              }                              else if (widthPercent < 70)                              {                                  x = (int)((_screenRect.Width * (widthPercent / 100)) - (width / 2));                              }                              else                              {                                  x = (int)((_screenRect.Width * (widthPercent / 100)) - width);                              }                              x += _screenRect.Left;                                int y;                              if (heightPercent < 30)                              {                                  y = (int)((_screenRect.Height * heightPercent / 100));                              }                              else if (heightPercent < 80)                              {                                  y = (int)((_screenRect.Height * (heightPercent / 100)) - (height / 2));                              }                              else                              {                                  y = (int)((_screenRect.Height * (heightPercent / 100)) - height);                              }                              y += _screenRect.Top;                                  widget.Rect = new Rectangle(new Point(x' y)' new Size(width' height));                              widget.Scale = widgetScale;                              break;                          }                      }                  }                  _partyListUI = widget;                  _lastWriteTime = File.GetLastWriteTime(textFile);              }
Magic Number,ACT.TPMonitor,Util,C:\repos\GB19xx_ACT.TPMonitor\src\ACT.TPMonitor\Util.cs,GetPartyListLocation,The following statement contains a magic number: if (_lastWriteTime != File.GetLastWriteTime(textFile))              {                  _screenRect = GetWindowSize(path);                  Widget widget = new Widget();                  widget.Rect = new Rectangle(new Point(0' 0)' new Size(380' 408));                  widget.Scale = 1.0f;                    _partyListUI = widget;                  _lastWriteTime = File.GetLastWriteTime(textFile);                  return _partyListUI;                    using (System.IO.StreamReader sr = new System.IO.StreamReader(textFile' System.Text.Encoding.GetEncoding("shift_jis")))                  {                      string s = sr.ReadToEnd();                      string[] textLine = s.Split('\n');                      for (int i = 0; i < textLine.Length; i++)                      {                          if (textLine[i].Equals("n:_PartyList_a"))                          {                              float widthPercent = GetFloat(textLine[i + 2].Substring(2));                              float heightPercent = GetFloat(textLine[i + 3].Substring(2));                              int width = int.Parse(textLine[i + 4].Substring(2));                              int height = int.Parse(textLine[i + 5].Substring(2));                              float widgetScale = scale == 0f ? GetFloat(textLine[i + 7].Substring(2)) : scale;                                width = (int)(width * widgetScale);                              height = (int)(height * widgetScale);                                int x;                              if (widthPercent < 30)                              {                                  x = (int)((_screenRect.Width * widthPercent / 100));                              }                              else if (widthPercent < 70)                              {                                  x = (int)((_screenRect.Width * (widthPercent / 100)) - (width / 2));                              }                              else                              {                                  x = (int)((_screenRect.Width * (widthPercent / 100)) - width);                              }                              x += _screenRect.Left;                                int y;                              if (heightPercent < 30)                              {                                  y = (int)((_screenRect.Height * heightPercent / 100));                              }                              else if (heightPercent < 80)                              {                                  y = (int)((_screenRect.Height * (heightPercent / 100)) - (height / 2));                              }                              else                              {                                  y = (int)((_screenRect.Height * (heightPercent / 100)) - height);                              }                              y += _screenRect.Top;                                  widget.Rect = new Rectangle(new Point(x' y)' new Size(width' height));                              widget.Scale = widgetScale;                              break;                          }                      }                  }                  _partyListUI = widget;                  _lastWriteTime = File.GetLastWriteTime(textFile);              }
