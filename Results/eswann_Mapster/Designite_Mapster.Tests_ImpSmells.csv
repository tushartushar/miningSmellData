Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Mapster.Tests,WhenHandlingUnmappedMembers,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenHandlingUnmappedMembers.cs,No_Errors_Thrown_With_Default_Configuration_On_Unmapped_Child_Collection,The length of the statement  "            var source = new ParentPoco { Id = Guid.NewGuid()' Name = "TestName"' Children = new List<ChildPoco> { new ChildPoco { Id = Guid.NewGuid()' Name = "TestName" } } }; " is 164.
Long Statement,Mapster.Tests,WhenHandlingUnmappedMembers,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenHandlingUnmappedMembers.cs,Error_Thrown_With_Explicit_Configuration_On_Unmapped_Child_Collection,The length of the statement  "                var source = new ParentPoco {Id = Guid.NewGuid()' Name = "TestName"' Children = new List<ChildPoco> {new ChildPoco {Id = Guid.NewGuid()' Name = "TestName"}}}; " is 158.
Long Statement,Mapster.Tests,WhenMappingCollections,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingCollections.cs,MapCollectionProperty,The length of the statement  "            Assert.IsTrue(dto.ReadOnlyCountries.Count == 2 && dto.ReadOnlyCountries.First() == "Turkey" && dto.ReadOnlyCountries.Last() == "Germany"); " is 138.
Long Statement,Mapster.Tests,WhenMappingCollections,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingCollections.cs,MapCollectionProperty,The length of the statement  "            Assert.IsTrue(dto.RelatedDepartments.Length == 2 && dto.RelatedDepartments[0] == Departments.IT && dto.RelatedDepartments[1] == Departments.Finance);            " is 149.
Long Statement,Mapster.Tests,WhenMappingEnums,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingEnums.cs,Int_Is_Mapped_To_Enum,The length of the statement  "            var employee = new Employee { Id = Guid.NewGuid()' Name = "Timuçin"' Surname = "KIVANÇ"' Department = (int)Departments.IT  }; " is 125.
Long Statement,Mapster.Tests,WhenMappingEnums,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingEnums.cs,String_Is_Mapped_To_Enum,The length of the statement  "            var employee = new EmployeeWithStringEnum { Id = Guid.NewGuid()' Name = "Timuçin"' Department = Departments.IT.ToString() }; " is 124.
Long Statement,Mapster.Tests,WhenMappingNullablePrimitives,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingNullablePrimitives.cs,Can_Map_From_Nullable_Source_With_Values_To_Explicitly_Mapped_Non_Nullable_Target,The length of the statement  "            var poco = new NullablePrimitivesPoco { Id = Guid.NewGuid()' Name = "TestName"' Fee = 20' IsImport = true' Amount = 10}; " is 120.
Long Statement,Mapster.Tests,WhenMappingPrimitives,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingPrimitives.cs,Byte_Array_Is_Mapped_Correctly,The length of the statement  "            string testString = "this is a string that will later be converted to a byte array and other text blah blah blah I'm not sure what else to put here..."; " is 152.
Long Statement,Mapster.Tests,WhenMappingPrimitives,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingPrimitives.cs,Byte_Array_In_Test_Class_Is_Mapped_Correctly,The length of the statement  "            string testString = "this is a string that will later be converted to a byte array and other text blah blah blah I'm not sure what else to put here..."; " is 152.
Long Statement,Mapster.Tests,WhenProjecting,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenProjecting.cs,TestPocoTypeMapping,The length of the statement  "                new Product {Id = Guid.NewGuid()' Title = "ProductA"' CreatedUser = new User {Name = "UserA"}' OrderLines = new List<OrderLine>()}' " is 131.
Long Statement,Mapster.Tests,WhenProjecting,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenProjecting.cs,TestPocoTypeMapping,The length of the statement  "                                    ModifiedUser = Param_0.ModifiedUser == null ? null : new UserDTO { Id = Param_0.ModifiedUser.Id' Email = Param_0.ModifiedUser.Email }' " is 134.
Magic Number,Mapster.Tests,WhenConfiguringMapping,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenConfiguringMapping.cs,Initializer,The following statement contains a magic number: nest.AddChild(new Source(2));
Magic Number,Mapster.Tests,WhenConfiguringMapping,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenConfiguringMapping.cs,Initializer,The following statement contains a magic number: nest.Children[0].AddChild(new Source(3));
Magic Number,Mapster.Tests,WhenConfiguringMapping,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenConfiguringMapping.cs,Initializer,The following statement contains a magic number: nest.Children[0].AddChild(new Source(3));
Magic Number,Mapster.Tests,WhenConfiguringMapping,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenConfiguringMapping.cs,Initializer,The following statement contains a magic number: nest.Children[0].Children[1].AddChild(new Source(4));
Magic Number,Mapster.Tests,WhenConfiguringMapping,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenConfiguringMapping.cs,Initializer,The following statement contains a magic number: nest.Children[0].Children[1].AddChild(new Source(4));
Magic Number,Mapster.Tests,WhenConfiguringMapping,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenConfiguringMapping.cs,Initializer,The following statement contains a magic number: nest.Children[0].Children[1].AddChild(new Source(4));
Magic Number,Mapster.Tests,WhenConfiguringMapping,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenConfiguringMapping.cs,Initializer,The following statement contains a magic number: nest.AddChild(new Source(2));
Magic Number,Mapster.Tests,WhenConfiguringMapping,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenConfiguringMapping.cs,Initializer,The following statement contains a magic number: nest.Children[1].AddChild(new Source(3));
Magic Number,Mapster.Tests,WhenConfiguringMapping,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenConfiguringMapping.cs,Initializer,The following statement contains a magic number: nest.AddChild(new Source(2));
Magic Number,Mapster.Tests,WhenConfiguringMapping,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenConfiguringMapping.cs,Initializer,The following statement contains a magic number: nest.Children[2].AddChild(new Source(3));
Magic Number,Mapster.Tests,WhenConfiguringMapping,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenConfiguringMapping.cs,Initializer,The following statement contains a magic number: nest.Children[2].AddChild(new Source(3));
Magic Number,Mapster.Tests,WhenConvertingFromObjects,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenConvertingFromObjects.cs,Int32_In_Object_Is_Converted_To_Int64,The following statement contains a magic number: var dictionaryData = new Dictionary<string' object>                  {                      { "Int32"' 32 }'                      { "Int64"' 64 }                  };
Magic Number,Mapster.Tests,WhenConvertingFromObjects,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenConvertingFromObjects.cs,Int32_In_Object_Is_Converted_To_Int64,The following statement contains a magic number: var dictionaryData = new Dictionary<string' object>                  {                      { "Int32"' 32 }'                      { "Int64"' 64 }                  };
Magic Number,Mapster.Tests,WhenConvertingFromObjects,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenConvertingFromObjects.cs,Int32_In_Object_Is_Converted_To_Int64,The following statement contains a magic number: poco.Int32.ShouldBe(32);
Magic Number,Mapster.Tests,WhenConvertingFromObjects,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenConvertingFromObjects.cs,Int32_In_Object_Is_Converted_To_Int64,The following statement contains a magic number: poco.Int64.ShouldBe(64L);
Magic Number,Mapster.Tests,WhenCreatingConfigInstances,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenCreatingConfigInstance.cs,Basic_Poco_Is_Mapped_With_New_Config,The following statement contains a magic number: var customer = new Customer              {                  Id = 12345'                  Name = "TestName"'                  Surname = "TestSurname"              };
Magic Number,Mapster.Tests,WhenCreatingConfigInstances,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenCreatingConfigInstance.cs,Basic_Poco_Is_Mapped_With_New_Config,The following statement contains a magic number: customerDto.Id.ShouldBe(12345);
Magic Number,Mapster.Tests,WhenCreatingConfigInstances,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenCreatingConfigInstance.cs,ForType_Enhances_Config,The following statement contains a magic number: var customer = new Customer              {                  Id = 12345'                  Name = "TestName"'                  Surname = "TestSurname"              };
Magic Number,Mapster.Tests,WhenCreatingConfigInstances,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenCreatingConfigInstance.cs,ForType_Enhances_Config,The following statement contains a magic number: customerDto.Id.ShouldBe(12345);
Magic Number,Mapster.Tests,WhenCreatingConfigInstances,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenCreatingConfigInstance.cs,NewConfig_Overwrites_Config,The following statement contains a magic number: var customer = new Customer              {                  Id = 12345'                  Name = "TestName"'                  Surname = "TestSurname"              };
Magic Number,Mapster.Tests,WhenCreatingConfigInstances,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenCreatingConfigInstance.cs,NewConfig_Overwrites_Config,The following statement contains a magic number: customerDto.Id.ShouldBe(12345);
Magic Number,Mapster.Tests,WhenExplicitMappingRequired,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenExplicitMappingRequired.cs,Mapped_Classes_Succeed_When_List_To_IList_Is_Mapped,The following statement contains a magic number: results.Count.ShouldBe(2);
Magic Number,Mapster.Tests,WhenFlattening,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenFlattening.cs,GetMethodTest,The following statement contains a magic number: var b = TypeAdapter.Adapt<A' B>(new A { X = 100' Y = 50 });
Magic Number,Mapster.Tests,WhenFlattening,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenFlattening.cs,GetMethodTest,The following statement contains a magic number: var b = TypeAdapter.Adapt<A' B>(new A { X = 100' Y = 50 });
Magic Number,Mapster.Tests,WhenFlattening,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenFlattening.cs,GetMethodTest,The following statement contains a magic number: Assert.IsTrue(b.Total == 150);
Magic Number,Mapster.Tests,WhenFlattening,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenFlattening.cs,PropertyTest,The following statement contains a magic number: var d = TypeAdapter.Adapt<C' D>(new C { BClass = new B { Total = 250 } });
Magic Number,Mapster.Tests,WhenFlattening,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenFlattening.cs,PropertyTest,The following statement contains a magic number: Assert.IsTrue(d.BClassTotal == 250);
Magic Number,Mapster.Tests,WhenFlattening,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenFlattening.cs,PropertyTest_NameWithUnderscore,The following statement contains a magic number: var e = TypeAdapter.Adapt<C' E>(new C { BClass = new B { Total = 250 } });
Magic Number,Mapster.Tests,WhenFlattening,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenFlattening.cs,PropertyTest_NameWithUnderscore,The following statement contains a magic number: Assert.IsTrue(e.BClass_Total == 250);
Magic Number,Mapster.Tests,WhenFlattening,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenFlattening.cs,ShouldUseNestedObjectPropertyMembers,The following statement contains a magic number: var src = new ModelObject              {                  BaseDate = new DateTime(2007' 4' 5)'                  Sub = new ModelSubObject                  {                      ProperName = "Some name"'                      SubSub = new ModelSubSubObject                      {                          CoolProperty = "Cool daddy-o"                      }                  }'                  Sub2 = new ModelSubObject                  {                      ProperName = "Sub 2 name"                  }'                  SubWithExtraName = new ModelSubObject                  {                      ProperName = "Some other name"                  }'              };
Magic Number,Mapster.Tests,WhenFlattening,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenFlattening.cs,ShouldUseNestedObjectPropertyMembers,The following statement contains a magic number: var src = new ModelObject              {                  BaseDate = new DateTime(2007' 4' 5)'                  Sub = new ModelSubObject                  {                      ProperName = "Some name"'                      SubSub = new ModelSubSubObject                      {                          CoolProperty = "Cool daddy-o"                      }                  }'                  Sub2 = new ModelSubObject                  {                      ProperName = "Sub 2 name"                  }'                  SubWithExtraName = new ModelSubObject                  {                      ProperName = "Some other name"                  }'              };
Magic Number,Mapster.Tests,WhenFlattening,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenFlattening.cs,ShouldUseNestedObjectPropertyMembers,The following statement contains a magic number: var src = new ModelObject              {                  BaseDate = new DateTime(2007' 4' 5)'                  Sub = new ModelSubObject                  {                      ProperName = "Some name"'                      SubSub = new ModelSubSubObject                      {                          CoolProperty = "Cool daddy-o"                      }                  }'                  Sub2 = new ModelSubObject                  {                      ProperName = "Sub 2 name"                  }'                  SubWithExtraName = new ModelSubObject                  {                      ProperName = "Some other name"                  }'              };
Magic Number,Mapster.Tests,WhenIgnoringConditionally,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenIgnoringConditionally.cs,True_Constant_Ignores_Map_To_Target,The following statement contains a magic number: var dto = new SimpleDto { Id = 999' Name = "DtoName" };
Magic Number,Mapster.Tests,WhenIgnoringConditionally,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenIgnoringConditionally.cs,True_Condition_Ignores_Map_To_Target,The following statement contains a magic number: var dto = new SimpleDto { Id = 999' Name = "DtoName" };
Magic Number,Mapster.Tests,WhenIgnoringConditionally,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenIgnoringConditionally.cs,Null_Condition_Ignores_Map_To_Target,The following statement contains a magic number: var dto = new SimpleDto { Id = 999' Name = "DtoName" };
Magic Number,Mapster.Tests,WhenIgnoringConditionally,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenIgnoringConditionally.cs,True_Condition_On_Target_Ignores_Map_To_Target,The following statement contains a magic number: var dto = new SimpleDto { Id = 999' Name = "DtoName" };
Magic Number,Mapster.Tests,WhenIgnoringConditionally,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenIgnoringConditionally.cs,False_Condition_Does_Not_Ignore,The following statement contains a magic number: var dto = new SimpleDto { Id = 999' Name = "DtoName" };
Magic Number,Mapster.Tests,WhenIgnoringConditionally,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenIgnoringConditionally.cs,IgnoreIf_Can_Be_Combined,The following statement contains a magic number: var dto = new SimpleDto { Id = 999' Name = "DtoName" };
Magic Number,Mapster.Tests,WhenIncludeDerivedClasses,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenIncludeDerivedClasses.cs,Map_Including_Derived_Class_With_List,The following statement contains a magic number: var vehicles = new List<Vehicle>              {                  new Car {Id = 1' Name = "Car"' Make = "Toyota"' ChassiNumber = "XXX"}'                  new Bike {Id = 2' Name = "Bike"' Brand = "BMX"}'              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Single_Dimensional_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArray { Ints = new int[] { 1' 2' 3' 4' 5 } };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Single_Dimensional_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArray { Ints = new int[] { 1' 2' 3' 4' 5 } };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Single_Dimensional_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArray { Ints = new int[] { 1' 2' 3' 4' 5 } };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Single_Dimensional_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArray { Ints = new int[] { 1' 2' 3' 4' 5 } };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,MapToTarget_With_Null_Value,The following statement contains a magic number: var target = new BarArray { Ints = new int[] { 1' 2' 3' 4' 5 } };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,MapToTarget_With_Null_Value,The following statement contains a magic number: var target = new BarArray { Ints = new int[] { 1' 2' 3' 4' 5 } };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,MapToTarget_With_Null_Value,The following statement contains a magic number: var target = new BarArray { Ints = new int[] { 1' 2' 3' 4' 5 } };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,MapToTarget_With_Null_Value,The following statement contains a magic number: var target = new BarArray { Ints = new int[] { 1' 2' 3' 4' 5 } };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Multi_Dimensional_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayMultiDimensional              {                  IntsRank2 = new int[3' 2] {                      { 10' 20 }'                      { 100' 200 }'                      { 1000' 2000 }                  }'                  IntsRank3 = new int[3' 2' 5] {                      { {10' 20' 30' 40 ' 50}' { 60' 70' 80' 90' 100 } }'                      { {100' 200' 300' 400 ' 500}' { 600' 700' 800' 900' 1000 } }'                      { {1000' 2000' 3000' 4000 ' 5000}' { 6000' 7000' 8000' 9000' 10000 } }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Multi_Dimensional_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayMultiDimensional              {                  IntsRank2 = new int[3' 2] {                      { 10' 20 }'                      { 100' 200 }'                      { 1000' 2000 }                  }'                  IntsRank3 = new int[3' 2' 5] {                      { {10' 20' 30' 40 ' 50}' { 60' 70' 80' 90' 100 } }'                      { {100' 200' 300' 400 ' 500}' { 600' 700' 800' 900' 1000 } }'                      { {1000' 2000' 3000' 4000 ' 5000}' { 6000' 7000' 8000' 9000' 10000 } }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Multi_Dimensional_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayMultiDimensional              {                  IntsRank2 = new int[3' 2] {                      { 10' 20 }'                      { 100' 200 }'                      { 1000' 2000 }                  }'                  IntsRank3 = new int[3' 2' 5] {                      { {10' 20' 30' 40 ' 50}' { 60' 70' 80' 90' 100 } }'                      { {100' 200' 300' 400 ' 500}' { 600' 700' 800' 900' 1000 } }'                      { {1000' 2000' 3000' 4000 ' 5000}' { 6000' 7000' 8000' 9000' 10000 } }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Multi_Dimensional_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayMultiDimensional              {                  IntsRank2 = new int[3' 2] {                      { 10' 20 }'                      { 100' 200 }'                      { 1000' 2000 }                  }'                  IntsRank3 = new int[3' 2' 5] {                      { {10' 20' 30' 40 ' 50}' { 60' 70' 80' 90' 100 } }'                      { {100' 200' 300' 400 ' 500}' { 600' 700' 800' 900' 1000 } }'                      { {1000' 2000' 3000' 4000 ' 5000}' { 6000' 7000' 8000' 9000' 10000 } }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Multi_Dimensional_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayMultiDimensional              {                  IntsRank2 = new int[3' 2] {                      { 10' 20 }'                      { 100' 200 }'                      { 1000' 2000 }                  }'                  IntsRank3 = new int[3' 2' 5] {                      { {10' 20' 30' 40 ' 50}' { 60' 70' 80' 90' 100 } }'                      { {100' 200' 300' 400 ' 500}' { 600' 700' 800' 900' 1000 } }'                      { {1000' 2000' 3000' 4000 ' 5000}' { 6000' 7000' 8000' 9000' 10000 } }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Multi_Dimensional_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayMultiDimensional              {                  IntsRank2 = new int[3' 2] {                      { 10' 20 }'                      { 100' 200 }'                      { 1000' 2000 }                  }'                  IntsRank3 = new int[3' 2' 5] {                      { {10' 20' 30' 40 ' 50}' { 60' 70' 80' 90' 100 } }'                      { {100' 200' 300' 400 ' 500}' { 600' 700' 800' 900' 1000 } }'                      { {1000' 2000' 3000' 4000 ' 5000}' { 6000' 7000' 8000' 9000' 10000 } }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Multi_Dimensional_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayMultiDimensional              {                  IntsRank2 = new int[3' 2] {                      { 10' 20 }'                      { 100' 200 }'                      { 1000' 2000 }                  }'                  IntsRank3 = new int[3' 2' 5] {                      { {10' 20' 30' 40 ' 50}' { 60' 70' 80' 90' 100 } }'                      { {100' 200' 300' 400 ' 500}' { 600' 700' 800' 900' 1000 } }'                      { {1000' 2000' 3000' 4000 ' 5000}' { 6000' 7000' 8000' 9000' 10000 } }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Multi_Dimensional_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayMultiDimensional              {                  IntsRank2 = new int[3' 2] {                      { 10' 20 }'                      { 100' 200 }'                      { 1000' 2000 }                  }'                  IntsRank3 = new int[3' 2' 5] {                      { {10' 20' 30' 40 ' 50}' { 60' 70' 80' 90' 100 } }'                      { {100' 200' 300' 400 ' 500}' { 600' 700' 800' 900' 1000 } }'                      { {1000' 2000' 3000' 4000 ' 5000}' { 6000' 7000' 8000' 9000' 10000 } }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Multi_Dimensional_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayMultiDimensional              {                  IntsRank2 = new int[3' 2] {                      { 10' 20 }'                      { 100' 200 }'                      { 1000' 2000 }                  }'                  IntsRank3 = new int[3' 2' 5] {                      { {10' 20' 30' 40 ' 50}' { 60' 70' 80' 90' 100 } }'                      { {100' 200' 300' 400 ' 500}' { 600' 700' 800' 900' 1000 } }'                      { {1000' 2000' 3000' 4000 ' 5000}' { 6000' 7000' 8000' 9000' 10000 } }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Multi_Dimensional_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayMultiDimensional              {                  IntsRank2 = new int[3' 2] {                      { 10' 20 }'                      { 100' 200 }'                      { 1000' 2000 }                  }'                  IntsRank3 = new int[3' 2' 5] {                      { {10' 20' 30' 40 ' 50}' { 60' 70' 80' 90' 100 } }'                      { {100' 200' 300' 400 ' 500}' { 600' 700' 800' 900' 1000 } }'                      { {1000' 2000' 3000' 4000 ' 5000}' { 6000' 7000' 8000' 9000' 10000 } }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Multi_Dimensional_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayMultiDimensional              {                  IntsRank2 = new int[3' 2] {                      { 10' 20 }'                      { 100' 200 }'                      { 1000' 2000 }                  }'                  IntsRank3 = new int[3' 2' 5] {                      { {10' 20' 30' 40 ' 50}' { 60' 70' 80' 90' 100 } }'                      { {100' 200' 300' 400 ' 500}' { 600' 700' 800' 900' 1000 } }'                      { {1000' 2000' 3000' 4000 ' 5000}' { 6000' 7000' 8000' 9000' 10000 } }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Multi_Dimensional_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayMultiDimensional              {                  IntsRank2 = new int[3' 2] {                      { 10' 20 }'                      { 100' 200 }'                      { 1000' 2000 }                  }'                  IntsRank3 = new int[3' 2' 5] {                      { {10' 20' 30' 40 ' 50}' { 60' 70' 80' 90' 100 } }'                      { {100' 200' 300' 400 ' 500}' { 600' 700' 800' 900' 1000 } }'                      { {1000' 2000' 3000' 4000 ' 5000}' { 6000' 7000' 8000' 9000' 10000 } }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Multi_Dimensional_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayMultiDimensional              {                  IntsRank2 = new int[3' 2] {                      { 10' 20 }'                      { 100' 200 }'                      { 1000' 2000 }                  }'                  IntsRank3 = new int[3' 2' 5] {                      { {10' 20' 30' 40 ' 50}' { 60' 70' 80' 90' 100 } }'                      { {100' 200' 300' 400 ' 500}' { 600' 700' 800' 900' 1000 } }'                      { {1000' 2000' 3000' 4000 ' 5000}' { 6000' 7000' 8000' 9000' 10000 } }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Multi_Dimensional_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayMultiDimensional              {                  IntsRank2 = new int[3' 2] {                      { 10' 20 }'                      { 100' 200 }'                      { 1000' 2000 }                  }'                  IntsRank3 = new int[3' 2' 5] {                      { {10' 20' 30' 40 ' 50}' { 60' 70' 80' 90' 100 } }'                      { {100' 200' 300' 400 ' 500}' { 600' 700' 800' 900' 1000 } }'                      { {1000' 2000' 3000' 4000 ' 5000}' { 6000' 7000' 8000' 9000' 10000 } }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Multi_Dimensional_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayMultiDimensional              {                  IntsRank2 = new int[3' 2] {                      { 10' 20 }'                      { 100' 200 }'                      { 1000' 2000 }                  }'                  IntsRank3 = new int[3' 2' 5] {                      { {10' 20' 30' 40 ' 50}' { 60' 70' 80' 90' 100 } }'                      { {100' 200' 300' 400 ' 500}' { 600' 700' 800' 900' 1000 } }'                      { {1000' 2000' 3000' 4000 ' 5000}' { 6000' 7000' 8000' 9000' 10000 } }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Multi_Dimensional_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayMultiDimensional              {                  IntsRank2 = new int[3' 2] {                      { 10' 20 }'                      { 100' 200 }'                      { 1000' 2000 }                  }'                  IntsRank3 = new int[3' 2' 5] {                      { {10' 20' 30' 40 ' 50}' { 60' 70' 80' 90' 100 } }'                      { {100' 200' 300' 400 ' 500}' { 600' 700' 800' 900' 1000 } }'                      { {1000' 2000' 3000' 4000 ' 5000}' { 6000' 7000' 8000' 9000' 10000 } }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Multi_Dimensional_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayMultiDimensional              {                  IntsRank2 = new int[3' 2] {                      { 10' 20 }'                      { 100' 200 }'                      { 1000' 2000 }                  }'                  IntsRank3 = new int[3' 2' 5] {                      { {10' 20' 30' 40 ' 50}' { 60' 70' 80' 90' 100 } }'                      { {100' 200' 300' 400 ' 500}' { 600' 700' 800' 900' 1000 } }'                      { {1000' 2000' 3000' 4000 ' 5000}' { 6000' 7000' 8000' 9000' 10000 } }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Multi_Dimensional_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayMultiDimensional              {                  IntsRank2 = new int[3' 2] {                      { 10' 20 }'                      { 100' 200 }'                      { 1000' 2000 }                  }'                  IntsRank3 = new int[3' 2' 5] {                      { {10' 20' 30' 40 ' 50}' { 60' 70' 80' 90' 100 } }'                      { {100' 200' 300' 400 ' 500}' { 600' 700' 800' 900' 1000 } }'                      { {1000' 2000' 3000' 4000 ' 5000}' { 6000' 7000' 8000' 9000' 10000 } }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Multi_Dimensional_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayMultiDimensional              {                  IntsRank2 = new int[3' 2] {                      { 10' 20 }'                      { 100' 200 }'                      { 1000' 2000 }                  }'                  IntsRank3 = new int[3' 2' 5] {                      { {10' 20' 30' 40 ' 50}' { 60' 70' 80' 90' 100 } }'                      { {100' 200' 300' 400 ' 500}' { 600' 700' 800' 900' 1000 } }'                      { {1000' 2000' 3000' 4000 ' 5000}' { 6000' 7000' 8000' 9000' 10000 } }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Multi_Dimensional_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayMultiDimensional              {                  IntsRank2 = new int[3' 2] {                      { 10' 20 }'                      { 100' 200 }'                      { 1000' 2000 }                  }'                  IntsRank3 = new int[3' 2' 5] {                      { {10' 20' 30' 40 ' 50}' { 60' 70' 80' 90' 100 } }'                      { {100' 200' 300' 400 ' 500}' { 600' 700' 800' 900' 1000 } }'                      { {1000' 2000' 3000' 4000 ' 5000}' { 6000' 7000' 8000' 9000' 10000 } }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Multi_Dimensional_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayMultiDimensional              {                  IntsRank2 = new int[3' 2] {                      { 10' 20 }'                      { 100' 200 }'                      { 1000' 2000 }                  }'                  IntsRank3 = new int[3' 2' 5] {                      { {10' 20' 30' 40 ' 50}' { 60' 70' 80' 90' 100 } }'                      { {100' 200' 300' 400 ' 500}' { 600' 700' 800' 900' 1000 } }'                      { {1000' 2000' 3000' 4000 ' 5000}' { 6000' 7000' 8000' 9000' 10000 } }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Multi_Dimensional_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayMultiDimensional              {                  IntsRank2 = new int[3' 2] {                      { 10' 20 }'                      { 100' 200 }'                      { 1000' 2000 }                  }'                  IntsRank3 = new int[3' 2' 5] {                      { {10' 20' 30' 40 ' 50}' { 60' 70' 80' 90' 100 } }'                      { {100' 200' 300' 400 ' 500}' { 600' 700' 800' 900' 1000 } }'                      { {1000' 2000' 3000' 4000 ' 5000}' { 6000' 7000' 8000' 9000' 10000 } }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Multi_Dimensional_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayMultiDimensional              {                  IntsRank2 = new int[3' 2] {                      { 10' 20 }'                      { 100' 200 }'                      { 1000' 2000 }                  }'                  IntsRank3 = new int[3' 2' 5] {                      { {10' 20' 30' 40 ' 50}' { 60' 70' 80' 90' 100 } }'                      { {100' 200' 300' 400 ' 500}' { 600' 700' 800' 900' 1000 } }'                      { {1000' 2000' 3000' 4000 ' 5000}' { 6000' 7000' 8000' 9000' 10000 } }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Multi_Dimensional_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayMultiDimensional              {                  IntsRank2 = new int[3' 2] {                      { 10' 20 }'                      { 100' 200 }'                      { 1000' 2000 }                  }'                  IntsRank3 = new int[3' 2' 5] {                      { {10' 20' 30' 40 ' 50}' { 60' 70' 80' 90' 100 } }'                      { {100' 200' 300' 400 ' 500}' { 600' 700' 800' 900' 1000 } }'                      { {1000' 2000' 3000' 4000 ' 5000}' { 6000' 7000' 8000' 9000' 10000 } }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Multi_Dimensional_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayMultiDimensional              {                  IntsRank2 = new int[3' 2] {                      { 10' 20 }'                      { 100' 200 }'                      { 1000' 2000 }                  }'                  IntsRank3 = new int[3' 2' 5] {                      { {10' 20' 30' 40 ' 50}' { 60' 70' 80' 90' 100 } }'                      { {100' 200' 300' 400 ' 500}' { 600' 700' 800' 900' 1000 } }'                      { {1000' 2000' 3000' 4000 ' 5000}' { 6000' 7000' 8000' 9000' 10000 } }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Multi_Dimensional_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayMultiDimensional              {                  IntsRank2 = new int[3' 2] {                      { 10' 20 }'                      { 100' 200 }'                      { 1000' 2000 }                  }'                  IntsRank3 = new int[3' 2' 5] {                      { {10' 20' 30' 40 ' 50}' { 60' 70' 80' 90' 100 } }'                      { {100' 200' 300' 400 ' 500}' { 600' 700' 800' 900' 1000 } }'                      { {1000' 2000' 3000' 4000 ' 5000}' { 6000' 7000' 8000' 9000' 10000 } }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Multi_Dimensional_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayMultiDimensional              {                  IntsRank2 = new int[3' 2] {                      { 10' 20 }'                      { 100' 200 }'                      { 1000' 2000 }                  }'                  IntsRank3 = new int[3' 2' 5] {                      { {10' 20' 30' 40 ' 50}' { 60' 70' 80' 90' 100 } }'                      { {100' 200' 300' 400 ' 500}' { 600' 700' 800' 900' 1000 } }'                      { {1000' 2000' 3000' 4000 ' 5000}' { 6000' 7000' 8000' 9000' 10000 } }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Multi_Dimensional_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayMultiDimensional              {                  IntsRank2 = new int[3' 2] {                      { 10' 20 }'                      { 100' 200 }'                      { 1000' 2000 }                  }'                  IntsRank3 = new int[3' 2' 5] {                      { {10' 20' 30' 40 ' 50}' { 60' 70' 80' 90' 100 } }'                      { {100' 200' 300' 400 ' 500}' { 600' 700' 800' 900' 1000 } }'                      { {1000' 2000' 3000' 4000 ' 5000}' { 6000' 7000' 8000' 9000' 10000 } }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Multi_Dimensional_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayMultiDimensional              {                  IntsRank2 = new int[3' 2] {                      { 10' 20 }'                      { 100' 200 }'                      { 1000' 2000 }                  }'                  IntsRank3 = new int[3' 2' 5] {                      { {10' 20' 30' 40 ' 50}' { 60' 70' 80' 90' 100 } }'                      { {100' 200' 300' 400 ' 500}' { 600' 700' 800' 900' 1000 } }'                      { {1000' 2000' 3000' 4000 ' 5000}' { 6000' 7000' 8000' 9000' 10000 } }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Multi_Dimensional_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayMultiDimensional              {                  IntsRank2 = new int[3' 2] {                      { 10' 20 }'                      { 100' 200 }'                      { 1000' 2000 }                  }'                  IntsRank3 = new int[3' 2' 5] {                      { {10' 20' 30' 40 ' 50}' { 60' 70' 80' 90' 100 } }'                      { {100' 200' 300' 400 ' 500}' { 600' 700' 800' 900' 1000 } }'                      { {1000' 2000' 3000' 4000 ' 5000}' { 6000' 7000' 8000' 9000' 10000 } }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Multi_Dimensional_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayMultiDimensional              {                  IntsRank2 = new int[3' 2] {                      { 10' 20 }'                      { 100' 200 }'                      { 1000' 2000 }                  }'                  IntsRank3 = new int[3' 2' 5] {                      { {10' 20' 30' 40 ' 50}' { 60' 70' 80' 90' 100 } }'                      { {100' 200' 300' 400 ' 500}' { 600' 700' 800' 900' 1000 } }'                      { {1000' 2000' 3000' 4000 ' 5000}' { 6000' 7000' 8000' 9000' 10000 } }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Multi_Dimensional_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayMultiDimensional              {                  IntsRank2 = new int[3' 2] {                      { 10' 20 }'                      { 100' 200 }'                      { 1000' 2000 }                  }'                  IntsRank3 = new int[3' 2' 5] {                      { {10' 20' 30' 40 ' 50}' { 60' 70' 80' 90' 100 } }'                      { {100' 200' 300' 400 ' 500}' { 600' 700' 800' 900' 1000 } }'                      { {1000' 2000' 3000' 4000 ' 5000}' { 6000' 7000' 8000' 9000' 10000 } }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Multi_Dimensional_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayMultiDimensional              {                  IntsRank2 = new int[3' 2] {                      { 10' 20 }'                      { 100' 200 }'                      { 1000' 2000 }                  }'                  IntsRank3 = new int[3' 2' 5] {                      { {10' 20' 30' 40 ' 50}' { 60' 70' 80' 90' 100 } }'                      { {100' 200' 300' 400 ' 500}' { 600' 700' 800' 900' 1000 } }'                      { {1000' 2000' 3000' 4000 ' 5000}' { 6000' 7000' 8000' 9000' 10000 } }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Multi_Dimensional_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayMultiDimensional              {                  IntsRank2 = new int[3' 2] {                      { 10' 20 }'                      { 100' 200 }'                      { 1000' 2000 }                  }'                  IntsRank3 = new int[3' 2' 5] {                      { {10' 20' 30' 40 ' 50}' { 60' 70' 80' 90' 100 } }'                      { {100' 200' 300' 400 ' 500}' { 600' 700' 800' 900' 1000 } }'                      { {1000' 2000' 3000' 4000 ' 5000}' { 6000' 7000' 8000' 9000' 10000 } }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Multi_Dimensional_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayMultiDimensional              {                  IntsRank2 = new int[3' 2] {                      { 10' 20 }'                      { 100' 200 }'                      { 1000' 2000 }                  }'                  IntsRank3 = new int[3' 2' 5] {                      { {10' 20' 30' 40 ' 50}' { 60' 70' 80' 90' 100 } }'                      { {100' 200' 300' 400 ' 500}' { 600' 700' 800' 900' 1000 } }'                      { {1000' 2000' 3000' 4000 ' 5000}' { 6000' 7000' 8000' 9000' 10000 } }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Multi_Dimensional_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayMultiDimensional              {                  IntsRank2 = new int[3' 2] {                      { 10' 20 }'                      { 100' 200 }'                      { 1000' 2000 }                  }'                  IntsRank3 = new int[3' 2' 5] {                      { {10' 20' 30' 40 ' 50}' { 60' 70' 80' 90' 100 } }'                      { {100' 200' 300' 400 ' 500}' { 600' 700' 800' 900' 1000 } }'                      { {1000' 2000' 3000' 4000 ' 5000}' { 6000' 7000' 8000' 9000' 10000 } }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Multi_Dimensional_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayMultiDimensional              {                  IntsRank2 = new int[3' 2] {                      { 10' 20 }'                      { 100' 200 }'                      { 1000' 2000 }                  }'                  IntsRank3 = new int[3' 2' 5] {                      { {10' 20' 30' 40 ' 50}' { 60' 70' 80' 90' 100 } }'                      { {100' 200' 300' 400 ' 500}' { 600' 700' 800' 900' 1000 } }'                      { {1000' 2000' 3000' 4000 ' 5000}' { 6000' 7000' 8000' 9000' 10000 } }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Multi_Dimensional_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayMultiDimensional              {                  IntsRank2 = new int[3' 2] {                      { 10' 20 }'                      { 100' 200 }'                      { 1000' 2000 }                  }'                  IntsRank3 = new int[3' 2' 5] {                      { {10' 20' 30' 40 ' 50}' { 60' 70' 80' 90' 100 } }'                      { {100' 200' 300' 400 ' 500}' { 600' 700' 800' 900' 1000 } }'                      { {1000' 2000' 3000' 4000 ' 5000}' { 6000' 7000' 8000' 9000' 10000 } }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Multi_Dimensional_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayMultiDimensional              {                  IntsRank2 = new int[3' 2] {                      { 10' 20 }'                      { 100' 200 }'                      { 1000' 2000 }                  }'                  IntsRank3 = new int[3' 2' 5] {                      { {10' 20' 30' 40 ' 50}' { 60' 70' 80' 90' 100 } }'                      { {100' 200' 300' 400 ' 500}' { 600' 700' 800' 900' 1000 } }'                      { {1000' 2000' 3000' 4000 ' 5000}' { 6000' 7000' 8000' 9000' 10000 } }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Multi_Dimensional_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayMultiDimensional              {                  IntsRank2 = new int[3' 2] {                      { 10' 20 }'                      { 100' 200 }'                      { 1000' 2000 }                  }'                  IntsRank3 = new int[3' 2' 5] {                      { {10' 20' 30' 40 ' 50}' { 60' 70' 80' 90' 100 } }'                      { {100' 200' 300' 400 ' 500}' { 600' 700' 800' 900' 1000 } }'                      { {1000' 2000' 3000' 4000 ' 5000}' { 6000' 7000' 8000' 9000' 10000 } }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Multi_Dimensional_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayMultiDimensional              {                  IntsRank2 = new int[3' 2] {                      { 10' 20 }'                      { 100' 200 }'                      { 1000' 2000 }                  }'                  IntsRank3 = new int[3' 2' 5] {                      { {10' 20' 30' 40 ' 50}' { 60' 70' 80' 90' 100 } }'                      { {100' 200' 300' 400 ' 500}' { 600' 700' 800' 900' 1000 } }'                      { {1000' 2000' 3000' 4000 ' 5000}' { 6000' 7000' 8000' 9000' 10000 } }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Jagged_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayJagged              {                  IntsRank2 = new int[][] {                      new int[] { 10' 20 }'                      new int[] { 100' 200 ' 300' 400' 500 }'                      new int[] { 1000' 2000' 3000 }                  }'                  IntsRank3 = new int[][][] {                      new int[][] {                          new int[]{ 10' 20' 30' 40' 50 }'                          new int[]{ 60' 70 }                      }'                      new int[][] {                          new int[]{ 100' 200' 300 }'                          new int[]{ 400 }'                          new int[]{ 500' 600' 700' 800 }'                      }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Jagged_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayJagged              {                  IntsRank2 = new int[][] {                      new int[] { 10' 20 }'                      new int[] { 100' 200 ' 300' 400' 500 }'                      new int[] { 1000' 2000' 3000 }                  }'                  IntsRank3 = new int[][][] {                      new int[][] {                          new int[]{ 10' 20' 30' 40' 50 }'                          new int[]{ 60' 70 }                      }'                      new int[][] {                          new int[]{ 100' 200' 300 }'                          new int[]{ 400 }'                          new int[]{ 500' 600' 700' 800 }'                      }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Jagged_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayJagged              {                  IntsRank2 = new int[][] {                      new int[] { 10' 20 }'                      new int[] { 100' 200 ' 300' 400' 500 }'                      new int[] { 1000' 2000' 3000 }                  }'                  IntsRank3 = new int[][][] {                      new int[][] {                          new int[]{ 10' 20' 30' 40' 50 }'                          new int[]{ 60' 70 }                      }'                      new int[][] {                          new int[]{ 100' 200' 300 }'                          new int[]{ 400 }'                          new int[]{ 500' 600' 700' 800 }'                      }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Jagged_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayJagged              {                  IntsRank2 = new int[][] {                      new int[] { 10' 20 }'                      new int[] { 100' 200 ' 300' 400' 500 }'                      new int[] { 1000' 2000' 3000 }                  }'                  IntsRank3 = new int[][][] {                      new int[][] {                          new int[]{ 10' 20' 30' 40' 50 }'                          new int[]{ 60' 70 }                      }'                      new int[][] {                          new int[]{ 100' 200' 300 }'                          new int[]{ 400 }'                          new int[]{ 500' 600' 700' 800 }'                      }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Jagged_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayJagged              {                  IntsRank2 = new int[][] {                      new int[] { 10' 20 }'                      new int[] { 100' 200 ' 300' 400' 500 }'                      new int[] { 1000' 2000' 3000 }                  }'                  IntsRank3 = new int[][][] {                      new int[][] {                          new int[]{ 10' 20' 30' 40' 50 }'                          new int[]{ 60' 70 }                      }'                      new int[][] {                          new int[]{ 100' 200' 300 }'                          new int[]{ 400 }'                          new int[]{ 500' 600' 700' 800 }'                      }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Jagged_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayJagged              {                  IntsRank2 = new int[][] {                      new int[] { 10' 20 }'                      new int[] { 100' 200 ' 300' 400' 500 }'                      new int[] { 1000' 2000' 3000 }                  }'                  IntsRank3 = new int[][][] {                      new int[][] {                          new int[]{ 10' 20' 30' 40' 50 }'                          new int[]{ 60' 70 }                      }'                      new int[][] {                          new int[]{ 100' 200' 300 }'                          new int[]{ 400 }'                          new int[]{ 500' 600' 700' 800 }'                      }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Jagged_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayJagged              {                  IntsRank2 = new int[][] {                      new int[] { 10' 20 }'                      new int[] { 100' 200 ' 300' 400' 500 }'                      new int[] { 1000' 2000' 3000 }                  }'                  IntsRank3 = new int[][][] {                      new int[][] {                          new int[]{ 10' 20' 30' 40' 50 }'                          new int[]{ 60' 70 }                      }'                      new int[][] {                          new int[]{ 100' 200' 300 }'                          new int[]{ 400 }'                          new int[]{ 500' 600' 700' 800 }'                      }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Jagged_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayJagged              {                  IntsRank2 = new int[][] {                      new int[] { 10' 20 }'                      new int[] { 100' 200 ' 300' 400' 500 }'                      new int[] { 1000' 2000' 3000 }                  }'                  IntsRank3 = new int[][][] {                      new int[][] {                          new int[]{ 10' 20' 30' 40' 50 }'                          new int[]{ 60' 70 }                      }'                      new int[][] {                          new int[]{ 100' 200' 300 }'                          new int[]{ 400 }'                          new int[]{ 500' 600' 700' 800 }'                      }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Jagged_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayJagged              {                  IntsRank2 = new int[][] {                      new int[] { 10' 20 }'                      new int[] { 100' 200 ' 300' 400' 500 }'                      new int[] { 1000' 2000' 3000 }                  }'                  IntsRank3 = new int[][][] {                      new int[][] {                          new int[]{ 10' 20' 30' 40' 50 }'                          new int[]{ 60' 70 }                      }'                      new int[][] {                          new int[]{ 100' 200' 300 }'                          new int[]{ 400 }'                          new int[]{ 500' 600' 700' 800 }'                      }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Jagged_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayJagged              {                  IntsRank2 = new int[][] {                      new int[] { 10' 20 }'                      new int[] { 100' 200 ' 300' 400' 500 }'                      new int[] { 1000' 2000' 3000 }                  }'                  IntsRank3 = new int[][][] {                      new int[][] {                          new int[]{ 10' 20' 30' 40' 50 }'                          new int[]{ 60' 70 }                      }'                      new int[][] {                          new int[]{ 100' 200' 300 }'                          new int[]{ 400 }'                          new int[]{ 500' 600' 700' 800 }'                      }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Jagged_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayJagged              {                  IntsRank2 = new int[][] {                      new int[] { 10' 20 }'                      new int[] { 100' 200 ' 300' 400' 500 }'                      new int[] { 1000' 2000' 3000 }                  }'                  IntsRank3 = new int[][][] {                      new int[][] {                          new int[]{ 10' 20' 30' 40' 50 }'                          new int[]{ 60' 70 }                      }'                      new int[][] {                          new int[]{ 100' 200' 300 }'                          new int[]{ 400 }'                          new int[]{ 500' 600' 700' 800 }'                      }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Jagged_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayJagged              {                  IntsRank2 = new int[][] {                      new int[] { 10' 20 }'                      new int[] { 100' 200 ' 300' 400' 500 }'                      new int[] { 1000' 2000' 3000 }                  }'                  IntsRank3 = new int[][][] {                      new int[][] {                          new int[]{ 10' 20' 30' 40' 50 }'                          new int[]{ 60' 70 }                      }'                      new int[][] {                          new int[]{ 100' 200' 300 }'                          new int[]{ 400 }'                          new int[]{ 500' 600' 700' 800 }'                      }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Jagged_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayJagged              {                  IntsRank2 = new int[][] {                      new int[] { 10' 20 }'                      new int[] { 100' 200 ' 300' 400' 500 }'                      new int[] { 1000' 2000' 3000 }                  }'                  IntsRank3 = new int[][][] {                      new int[][] {                          new int[]{ 10' 20' 30' 40' 50 }'                          new int[]{ 60' 70 }                      }'                      new int[][] {                          new int[]{ 100' 200' 300 }'                          new int[]{ 400 }'                          new int[]{ 500' 600' 700' 800 }'                      }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Jagged_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayJagged              {                  IntsRank2 = new int[][] {                      new int[] { 10' 20 }'                      new int[] { 100' 200 ' 300' 400' 500 }'                      new int[] { 1000' 2000' 3000 }                  }'                  IntsRank3 = new int[][][] {                      new int[][] {                          new int[]{ 10' 20' 30' 40' 50 }'                          new int[]{ 60' 70 }                      }'                      new int[][] {                          new int[]{ 100' 200' 300 }'                          new int[]{ 400 }'                          new int[]{ 500' 600' 700' 800 }'                      }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Jagged_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayJagged              {                  IntsRank2 = new int[][] {                      new int[] { 10' 20 }'                      new int[] { 100' 200 ' 300' 400' 500 }'                      new int[] { 1000' 2000' 3000 }                  }'                  IntsRank3 = new int[][][] {                      new int[][] {                          new int[]{ 10' 20' 30' 40' 50 }'                          new int[]{ 60' 70 }                      }'                      new int[][] {                          new int[]{ 100' 200' 300 }'                          new int[]{ 400 }'                          new int[]{ 500' 600' 700' 800 }'                      }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Jagged_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayJagged              {                  IntsRank2 = new int[][] {                      new int[] { 10' 20 }'                      new int[] { 100' 200 ' 300' 400' 500 }'                      new int[] { 1000' 2000' 3000 }                  }'                  IntsRank3 = new int[][][] {                      new int[][] {                          new int[]{ 10' 20' 30' 40' 50 }'                          new int[]{ 60' 70 }                      }'                      new int[][] {                          new int[]{ 100' 200' 300 }'                          new int[]{ 400 }'                          new int[]{ 500' 600' 700' 800 }'                      }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Jagged_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayJagged              {                  IntsRank2 = new int[][] {                      new int[] { 10' 20 }'                      new int[] { 100' 200 ' 300' 400' 500 }'                      new int[] { 1000' 2000' 3000 }                  }'                  IntsRank3 = new int[][][] {                      new int[][] {                          new int[]{ 10' 20' 30' 40' 50 }'                          new int[]{ 60' 70 }                      }'                      new int[][] {                          new int[]{ 100' 200' 300 }'                          new int[]{ 400 }'                          new int[]{ 500' 600' 700' 800 }'                      }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Jagged_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayJagged              {                  IntsRank2 = new int[][] {                      new int[] { 10' 20 }'                      new int[] { 100' 200 ' 300' 400' 500 }'                      new int[] { 1000' 2000' 3000 }                  }'                  IntsRank3 = new int[][][] {                      new int[][] {                          new int[]{ 10' 20' 30' 40' 50 }'                          new int[]{ 60' 70 }                      }'                      new int[][] {                          new int[]{ 100' 200' 300 }'                          new int[]{ 400 }'                          new int[]{ 500' 600' 700' 800 }'                      }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Jagged_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayJagged              {                  IntsRank2 = new int[][] {                      new int[] { 10' 20 }'                      new int[] { 100' 200 ' 300' 400' 500 }'                      new int[] { 1000' 2000' 3000 }                  }'                  IntsRank3 = new int[][][] {                      new int[][] {                          new int[]{ 10' 20' 30' 40' 50 }'                          new int[]{ 60' 70 }                      }'                      new int[][] {                          new int[]{ 100' 200' 300 }'                          new int[]{ 400 }'                          new int[]{ 500' 600' 700' 800 }'                      }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Jagged_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayJagged              {                  IntsRank2 = new int[][] {                      new int[] { 10' 20 }'                      new int[] { 100' 200 ' 300' 400' 500 }'                      new int[] { 1000' 2000' 3000 }                  }'                  IntsRank3 = new int[][][] {                      new int[][] {                          new int[]{ 10' 20' 30' 40' 50 }'                          new int[]{ 60' 70 }                      }'                      new int[][] {                          new int[]{ 100' 200' 300 }'                          new int[]{ 400 }'                          new int[]{ 500' 600' 700' 800 }'                      }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Jagged_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayJagged              {                  IntsRank2 = new int[][] {                      new int[] { 10' 20 }'                      new int[] { 100' 200 ' 300' 400' 500 }'                      new int[] { 1000' 2000' 3000 }                  }'                  IntsRank3 = new int[][][] {                      new int[][] {                          new int[]{ 10' 20' 30' 40' 50 }'                          new int[]{ 60' 70 }                      }'                      new int[][] {                          new int[]{ 100' 200' 300 }'                          new int[]{ 400 }'                          new int[]{ 500' 600' 700' 800 }'                      }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Jagged_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayJagged              {                  IntsRank2 = new int[][] {                      new int[] { 10' 20 }'                      new int[] { 100' 200 ' 300' 400' 500 }'                      new int[] { 1000' 2000' 3000 }                  }'                  IntsRank3 = new int[][][] {                      new int[][] {                          new int[]{ 10' 20' 30' 40' 50 }'                          new int[]{ 60' 70 }                      }'                      new int[][] {                          new int[]{ 100' 200' 300 }'                          new int[]{ 400 }'                          new int[]{ 500' 600' 700' 800 }'                      }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Jagged_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayJagged              {                  IntsRank2 = new int[][] {                      new int[] { 10' 20 }'                      new int[] { 100' 200 ' 300' 400' 500 }'                      new int[] { 1000' 2000' 3000 }                  }'                  IntsRank3 = new int[][][] {                      new int[][] {                          new int[]{ 10' 20' 30' 40' 50 }'                          new int[]{ 60' 70 }                      }'                      new int[][] {                          new int[]{ 100' 200' 300 }'                          new int[]{ 400 }'                          new int[]{ 500' 600' 700' 800 }'                      }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Jagged_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayJagged              {                  IntsRank2 = new int[][] {                      new int[] { 10' 20 }'                      new int[] { 100' 200 ' 300' 400' 500 }'                      new int[] { 1000' 2000' 3000 }                  }'                  IntsRank3 = new int[][][] {                      new int[][] {                          new int[]{ 10' 20' 30' 40' 50 }'                          new int[]{ 60' 70 }                      }'                      new int[][] {                          new int[]{ 100' 200' 300 }'                          new int[]{ 400 }'                          new int[]{ 500' 600' 700' 800 }'                      }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Jagged_Array_Is_Mapped,The following statement contains a magic number: var source = new FooArrayJagged              {                  IntsRank2 = new int[][] {                      new int[] { 10' 20 }'                      new int[] { 100' 200 ' 300' 400' 500 }'                      new int[] { 1000' 2000' 3000 }                  }'                  IntsRank3 = new int[][][] {                      new int[][] {                          new int[]{ 10' 20' 30' 40' 50 }'                          new int[]{ 60' 70 }                      }'                      new int[][] {                          new int[]{ 100' 200' 300 }'                          new int[]{ 400 }'                          new int[]{ 500' 600' 700' 800 }'                      }                  }              };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,List_To_Array_Is_Mapped,The following statement contains a magic number: var source = new FooList { Ints = new List<int>(new int[] { 1' 2' 3' 4' 5 }) };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,List_To_Array_Is_Mapped,The following statement contains a magic number: var source = new FooList { Ints = new List<int>(new int[] { 1' 2' 3' 4' 5 }) };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,List_To_Array_Is_Mapped,The following statement contains a magic number: var source = new FooList { Ints = new List<int>(new int[] { 1' 2' 3' 4' 5 }) };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,List_To_Array_Is_Mapped,The following statement contains a magic number: var source = new FooList { Ints = new List<int>(new int[] { 1' 2' 3' 4' 5 }) };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,List_To_Multi_Dimensional_Array_Is_Mapped,The following statement contains a magic number: var source = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,List_To_Multi_Dimensional_Array_Is_Mapped,The following statement contains a magic number: var source = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,List_To_Multi_Dimensional_Array_Is_Mapped,The following statement contains a magic number: var source = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,List_To_Multi_Dimensional_Array_Is_Mapped,The following statement contains a magic number: var source = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,List_To_Multi_Dimensional_Array_Is_Mapped,The following statement contains a magic number: target.GetLength(2).ShouldBe(5);
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,List_To_Multi_Dimensional_Array_Is_Mapped,The following statement contains a magic number: target.GetLength(2).ShouldBe(5);
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Multi_Dimensional_Array_To_List_Is_Mapped,The following statement contains a magic number: var source = new ['] {{1' 2}' {3' 4}};
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Multi_Dimensional_Array_To_List_Is_Mapped,The following statement contains a magic number: var source = new ['] {{1' 2}' {3' 4}};
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Multi_Dimensional_Array_To_List_Is_Mapped,The following statement contains a magic number: var source = new ['] {{1' 2}' {3' 4}};
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Multi_Dimensional_Array_To_List_Is_Mapped,The following statement contains a magic number: target[1].ShouldBe(2);
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Multi_Dimensional_Array_To_List_Is_Mapped,The following statement contains a magic number: target[2].ShouldBe(3);
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Multi_Dimensional_Array_To_List_Is_Mapped,The following statement contains a magic number: target[2].ShouldBe(3);
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Multi_Dimensional_Array_To_List_Is_Mapped,The following statement contains a magic number: target[3].ShouldBe(4);
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Multi_Dimensional_Array_To_List_Is_Mapped,The following statement contains a magic number: target[3].ShouldBe(4);
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Unmatch_Rank_Is_Mapped,The following statement contains a magic number: var source = new[] {1' 2' 3' 4' 5};
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Unmatch_Rank_Is_Mapped,The following statement contains a magic number: var source = new[] {1' 2' 3' 4' 5};
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Unmatch_Rank_Is_Mapped,The following statement contains a magic number: var source = new[] {1' 2' 3' 4' 5};
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Unmatch_Rank_Is_Mapped,The following statement contains a magic number: var source = new[] {1' 2' 3' 4' 5};
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Unmatch_Rank_Is_Mapped,The following statement contains a magic number: target.GetLength(1).ShouldBe(5);
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Array_To_List_Is_Mapped,The following statement contains a magic number: var source = new FooArray { Ints = new int[] { 1' 2' 3' 4' 5 } };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Array_To_List_Is_Mapped,The following statement contains a magic number: var source = new FooArray { Ints = new int[] { 1' 2' 3' 4' 5 } };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Array_To_List_Is_Mapped,The following statement contains a magic number: var source = new FooArray { Ints = new int[] { 1' 2' 3' 4' 5 } };
Magic Number,Mapster.Tests,WhenMappingArrays,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingArrays.cs,Array_To_List_Is_Mapped,The following statement contains a magic number: var source = new FooArray { Ints = new int[] { 1' 2' 3' 4' 5 } };
Magic Number,Mapster.Tests,WhenMappingCollections,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingCollections.cs,MapCollectionProperty,The following statement contains a magic number: var person = new Person()              {                  Id = Guid.NewGuid()'                  Name = "Timuçin"'                  Surname = "KIVANÇ"'                  Project = Projects.A'                  X = new int[] { 1' 2' 3' 4 }'                  Y = new List<int>() { 5' 6' 7 }'                  Z = new ArrayList((ICollection)(new List<Guid>() { Guid.NewGuid()' Guid.NewGuid() }))'                  Ids = new List<Guid>() { Guid.Empty' Guid.NewGuid() }'                  CityId = Guid.NewGuid()'                  Picture = new byte[] { 0' 1' 2 }'                  Countries = new List<string> { "Turkey"' "Germany" }'                  XX = new List<string> { "Nederland"' "USA" }'                  YY = new List<int> { 22' 33 }'                  ZZ = new List<int> { 44' 55 }'                  ReadOnlyCountries = new List<string> { "Turkey"' "Germany" }'                  RelatedDepartments = new Departments[] { Departments.IT' Departments.Finance }              };
Magic Number,Mapster.Tests,WhenMappingCollections,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingCollections.cs,MapCollectionProperty,The following statement contains a magic number: var person = new Person()              {                  Id = Guid.NewGuid()'                  Name = "Timuçin"'                  Surname = "KIVANÇ"'                  Project = Projects.A'                  X = new int[] { 1' 2' 3' 4 }'                  Y = new List<int>() { 5' 6' 7 }'                  Z = new ArrayList((ICollection)(new List<Guid>() { Guid.NewGuid()' Guid.NewGuid() }))'                  Ids = new List<Guid>() { Guid.Empty' Guid.NewGuid() }'                  CityId = Guid.NewGuid()'                  Picture = new byte[] { 0' 1' 2 }'                  Countries = new List<string> { "Turkey"' "Germany" }'                  XX = new List<string> { "Nederland"' "USA" }'                  YY = new List<int> { 22' 33 }'                  ZZ = new List<int> { 44' 55 }'                  ReadOnlyCountries = new List<string> { "Turkey"' "Germany" }'                  RelatedDepartments = new Departments[] { Departments.IT' Departments.Finance }              };
Magic Number,Mapster.Tests,WhenMappingCollections,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingCollections.cs,MapCollectionProperty,The following statement contains a magic number: var person = new Person()              {                  Id = Guid.NewGuid()'                  Name = "Timuçin"'                  Surname = "KIVANÇ"'                  Project = Projects.A'                  X = new int[] { 1' 2' 3' 4 }'                  Y = new List<int>() { 5' 6' 7 }'                  Z = new ArrayList((ICollection)(new List<Guid>() { Guid.NewGuid()' Guid.NewGuid() }))'                  Ids = new List<Guid>() { Guid.Empty' Guid.NewGuid() }'                  CityId = Guid.NewGuid()'                  Picture = new byte[] { 0' 1' 2 }'                  Countries = new List<string> { "Turkey"' "Germany" }'                  XX = new List<string> { "Nederland"' "USA" }'                  YY = new List<int> { 22' 33 }'                  ZZ = new List<int> { 44' 55 }'                  ReadOnlyCountries = new List<string> { "Turkey"' "Germany" }'                  RelatedDepartments = new Departments[] { Departments.IT' Departments.Finance }              };
Magic Number,Mapster.Tests,WhenMappingCollections,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingCollections.cs,MapCollectionProperty,The following statement contains a magic number: var person = new Person()              {                  Id = Guid.NewGuid()'                  Name = "Timuçin"'                  Surname = "KIVANÇ"'                  Project = Projects.A'                  X = new int[] { 1' 2' 3' 4 }'                  Y = new List<int>() { 5' 6' 7 }'                  Z = new ArrayList((ICollection)(new List<Guid>() { Guid.NewGuid()' Guid.NewGuid() }))'                  Ids = new List<Guid>() { Guid.Empty' Guid.NewGuid() }'                  CityId = Guid.NewGuid()'                  Picture = new byte[] { 0' 1' 2 }'                  Countries = new List<string> { "Turkey"' "Germany" }'                  XX = new List<string> { "Nederland"' "USA" }'                  YY = new List<int> { 22' 33 }'                  ZZ = new List<int> { 44' 55 }'                  ReadOnlyCountries = new List<string> { "Turkey"' "Germany" }'                  RelatedDepartments = new Departments[] { Departments.IT' Departments.Finance }              };
Magic Number,Mapster.Tests,WhenMappingCollections,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingCollections.cs,MapCollectionProperty,The following statement contains a magic number: var person = new Person()              {                  Id = Guid.NewGuid()'                  Name = "Timuçin"'                  Surname = "KIVANÇ"'                  Project = Projects.A'                  X = new int[] { 1' 2' 3' 4 }'                  Y = new List<int>() { 5' 6' 7 }'                  Z = new ArrayList((ICollection)(new List<Guid>() { Guid.NewGuid()' Guid.NewGuid() }))'                  Ids = new List<Guid>() { Guid.Empty' Guid.NewGuid() }'                  CityId = Guid.NewGuid()'                  Picture = new byte[] { 0' 1' 2 }'                  Countries = new List<string> { "Turkey"' "Germany" }'                  XX = new List<string> { "Nederland"' "USA" }'                  YY = new List<int> { 22' 33 }'                  ZZ = new List<int> { 44' 55 }'                  ReadOnlyCountries = new List<string> { "Turkey"' "Germany" }'                  RelatedDepartments = new Departments[] { Departments.IT' Departments.Finance }              };
Magic Number,Mapster.Tests,WhenMappingCollections,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingCollections.cs,MapCollectionProperty,The following statement contains a magic number: var person = new Person()              {                  Id = Guid.NewGuid()'                  Name = "Timuçin"'                  Surname = "KIVANÇ"'                  Project = Projects.A'                  X = new int[] { 1' 2' 3' 4 }'                  Y = new List<int>() { 5' 6' 7 }'                  Z = new ArrayList((ICollection)(new List<Guid>() { Guid.NewGuid()' Guid.NewGuid() }))'                  Ids = new List<Guid>() { Guid.Empty' Guid.NewGuid() }'                  CityId = Guid.NewGuid()'                  Picture = new byte[] { 0' 1' 2 }'                  Countries = new List<string> { "Turkey"' "Germany" }'                  XX = new List<string> { "Nederland"' "USA" }'                  YY = new List<int> { 22' 33 }'                  ZZ = new List<int> { 44' 55 }'                  ReadOnlyCountries = new List<string> { "Turkey"' "Germany" }'                  RelatedDepartments = new Departments[] { Departments.IT' Departments.Finance }              };
Magic Number,Mapster.Tests,WhenMappingCollections,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingCollections.cs,MapCollectionProperty,The following statement contains a magic number: var person = new Person()              {                  Id = Guid.NewGuid()'                  Name = "Timuçin"'                  Surname = "KIVANÇ"'                  Project = Projects.A'                  X = new int[] { 1' 2' 3' 4 }'                  Y = new List<int>() { 5' 6' 7 }'                  Z = new ArrayList((ICollection)(new List<Guid>() { Guid.NewGuid()' Guid.NewGuid() }))'                  Ids = new List<Guid>() { Guid.Empty' Guid.NewGuid() }'                  CityId = Guid.NewGuid()'                  Picture = new byte[] { 0' 1' 2 }'                  Countries = new List<string> { "Turkey"' "Germany" }'                  XX = new List<string> { "Nederland"' "USA" }'                  YY = new List<int> { 22' 33 }'                  ZZ = new List<int> { 44' 55 }'                  ReadOnlyCountries = new List<string> { "Turkey"' "Germany" }'                  RelatedDepartments = new Departments[] { Departments.IT' Departments.Finance }              };
Magic Number,Mapster.Tests,WhenMappingCollections,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingCollections.cs,MapCollectionProperty,The following statement contains a magic number: var person = new Person()              {                  Id = Guid.NewGuid()'                  Name = "Timuçin"'                  Surname = "KIVANÇ"'                  Project = Projects.A'                  X = new int[] { 1' 2' 3' 4 }'                  Y = new List<int>() { 5' 6' 7 }'                  Z = new ArrayList((ICollection)(new List<Guid>() { Guid.NewGuid()' Guid.NewGuid() }))'                  Ids = new List<Guid>() { Guid.Empty' Guid.NewGuid() }'                  CityId = Guid.NewGuid()'                  Picture = new byte[] { 0' 1' 2 }'                  Countries = new List<string> { "Turkey"' "Germany" }'                  XX = new List<string> { "Nederland"' "USA" }'                  YY = new List<int> { 22' 33 }'                  ZZ = new List<int> { 44' 55 }'                  ReadOnlyCountries = new List<string> { "Turkey"' "Germany" }'                  RelatedDepartments = new Departments[] { Departments.IT' Departments.Finance }              };
Magic Number,Mapster.Tests,WhenMappingCollections,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingCollections.cs,MapCollectionProperty,The following statement contains a magic number: var person = new Person()              {                  Id = Guid.NewGuid()'                  Name = "Timuçin"'                  Surname = "KIVANÇ"'                  Project = Projects.A'                  X = new int[] { 1' 2' 3' 4 }'                  Y = new List<int>() { 5' 6' 7 }'                  Z = new ArrayList((ICollection)(new List<Guid>() { Guid.NewGuid()' Guid.NewGuid() }))'                  Ids = new List<Guid>() { Guid.Empty' Guid.NewGuid() }'                  CityId = Guid.NewGuid()'                  Picture = new byte[] { 0' 1' 2 }'                  Countries = new List<string> { "Turkey"' "Germany" }'                  XX = new List<string> { "Nederland"' "USA" }'                  YY = new List<int> { 22' 33 }'                  ZZ = new List<int> { 44' 55 }'                  ReadOnlyCountries = new List<string> { "Turkey"' "Germany" }'                  RelatedDepartments = new Departments[] { Departments.IT' Departments.Finance }              };
Magic Number,Mapster.Tests,WhenMappingCollections,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingCollections.cs,MapCollectionProperty,The following statement contains a magic number: var person = new Person()              {                  Id = Guid.NewGuid()'                  Name = "Timuçin"'                  Surname = "KIVANÇ"'                  Project = Projects.A'                  X = new int[] { 1' 2' 3' 4 }'                  Y = new List<int>() { 5' 6' 7 }'                  Z = new ArrayList((ICollection)(new List<Guid>() { Guid.NewGuid()' Guid.NewGuid() }))'                  Ids = new List<Guid>() { Guid.Empty' Guid.NewGuid() }'                  CityId = Guid.NewGuid()'                  Picture = new byte[] { 0' 1' 2 }'                  Countries = new List<string> { "Turkey"' "Germany" }'                  XX = new List<string> { "Nederland"' "USA" }'                  YY = new List<int> { 22' 33 }'                  ZZ = new List<int> { 44' 55 }'                  ReadOnlyCountries = new List<string> { "Turkey"' "Germany" }'                  RelatedDepartments = new Departments[] { Departments.IT' Departments.Finance }              };
Magic Number,Mapster.Tests,WhenMappingCollections,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingCollections.cs,MapCollectionProperty,The following statement contains a magic number: var person = new Person()              {                  Id = Guid.NewGuid()'                  Name = "Timuçin"'                  Surname = "KIVANÇ"'                  Project = Projects.A'                  X = new int[] { 1' 2' 3' 4 }'                  Y = new List<int>() { 5' 6' 7 }'                  Z = new ArrayList((ICollection)(new List<Guid>() { Guid.NewGuid()' Guid.NewGuid() }))'                  Ids = new List<Guid>() { Guid.Empty' Guid.NewGuid() }'                  CityId = Guid.NewGuid()'                  Picture = new byte[] { 0' 1' 2 }'                  Countries = new List<string> { "Turkey"' "Germany" }'                  XX = new List<string> { "Nederland"' "USA" }'                  YY = new List<int> { 22' 33 }'                  ZZ = new List<int> { 44' 55 }'                  ReadOnlyCountries = new List<string> { "Turkey"' "Germany" }'                  RelatedDepartments = new Departments[] { Departments.IT' Departments.Finance }              };
Magic Number,Mapster.Tests,WhenMappingCollections,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingCollections.cs,MapCollectionProperty,The following statement contains a magic number: Assert.IsTrue(dto.X.Count == 4 && dto.X.Contains(1) && dto.X.Contains(2) && dto.X.Contains(3) && dto.X.Contains(4));
Magic Number,Mapster.Tests,WhenMappingCollections,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingCollections.cs,MapCollectionProperty,The following statement contains a magic number: Assert.IsTrue(dto.X.Count == 4 && dto.X.Contains(1) && dto.X.Contains(2) && dto.X.Contains(3) && dto.X.Contains(4));
Magic Number,Mapster.Tests,WhenMappingCollections,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingCollections.cs,MapCollectionProperty,The following statement contains a magic number: Assert.IsTrue(dto.X.Count == 4 && dto.X.Contains(1) && dto.X.Contains(2) && dto.X.Contains(3) && dto.X.Contains(4));
Magic Number,Mapster.Tests,WhenMappingCollections,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingCollections.cs,MapCollectionProperty,The following statement contains a magic number: Assert.IsTrue(dto.X.Count == 4 && dto.X.Contains(1) && dto.X.Contains(2) && dto.X.Contains(3) && dto.X.Contains(4));
Magic Number,Mapster.Tests,WhenMappingCollections,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingCollections.cs,MapCollectionProperty,The following statement contains a magic number: Assert.IsTrue(dto.Y.Length == 3 && dto.Y[0] == 5 && dto.Y[1] == 6 && dto.Y[2] == 7);
Magic Number,Mapster.Tests,WhenMappingCollections,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingCollections.cs,MapCollectionProperty,The following statement contains a magic number: Assert.IsTrue(dto.Y.Length == 3 && dto.Y[0] == 5 && dto.Y[1] == 6 && dto.Y[2] == 7);
Magic Number,Mapster.Tests,WhenMappingCollections,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingCollections.cs,MapCollectionProperty,The following statement contains a magic number: Assert.IsTrue(dto.Y.Length == 3 && dto.Y[0] == 5 && dto.Y[1] == 6 && dto.Y[2] == 7);
Magic Number,Mapster.Tests,WhenMappingCollections,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingCollections.cs,MapCollectionProperty,The following statement contains a magic number: Assert.IsTrue(dto.Y.Length == 3 && dto.Y[0] == 5 && dto.Y[1] == 6 && dto.Y[2] == 7);
Magic Number,Mapster.Tests,WhenMappingCollections,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingCollections.cs,MapCollectionProperty,The following statement contains a magic number: Assert.IsTrue(dto.Y.Length == 3 && dto.Y[0] == 5 && dto.Y[1] == 6 && dto.Y[2] == 7);
Magic Number,Mapster.Tests,WhenMappingCollections,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingCollections.cs,MapCollectionProperty,The following statement contains a magic number: Assert.IsTrue(dto.Z.Count == 2 && dto.Z.Contains((Guid)person.Z[0]) && dto.Z.Contains((Guid)person.Z[1]));
Magic Number,Mapster.Tests,WhenMappingCollections,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingCollections.cs,MapCollectionProperty,The following statement contains a magic number: Assert.IsTrue(dto.Ids.Count == 2);
Magic Number,Mapster.Tests,WhenMappingCollections,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingCollections.cs,MapCollectionProperty,The following statement contains a magic number: Assert.IsTrue(dto.Picture.Length == 3 && dto.Picture[0] == 0 && dto.Picture[1] == 1 && dto.Picture[2] == 2);
Magic Number,Mapster.Tests,WhenMappingCollections,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingCollections.cs,MapCollectionProperty,The following statement contains a magic number: Assert.IsTrue(dto.Picture.Length == 3 && dto.Picture[0] == 0 && dto.Picture[1] == 1 && dto.Picture[2] == 2);
Magic Number,Mapster.Tests,WhenMappingCollections,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingCollections.cs,MapCollectionProperty,The following statement contains a magic number: Assert.IsTrue(dto.Picture.Length == 3 && dto.Picture[0] == 0 && dto.Picture[1] == 1 && dto.Picture[2] == 2);
Magic Number,Mapster.Tests,WhenMappingCollections,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingCollections.cs,MapCollectionProperty,The following statement contains a magic number: Assert.IsTrue(dto.Countries.Count == 2 && dto.Countries.First() == "Turkey" && dto.Countries.Last() == "Germany");
Magic Number,Mapster.Tests,WhenMappingCollections,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingCollections.cs,MapCollectionProperty,The following statement contains a magic number: Assert.IsTrue(dto.ReadOnlyCountries.Count == 2 && dto.ReadOnlyCountries.First() == "Turkey" && dto.ReadOnlyCountries.Last() == "Germany");
Magic Number,Mapster.Tests,WhenMappingCollections,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingCollections.cs,MapCollectionProperty,The following statement contains a magic number: Assert.IsTrue(dto.XX.Count() == 2 && dto.XX.First() == "Nederland" && dto.XX.Last() == "USA");
Magic Number,Mapster.Tests,WhenMappingCollections,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingCollections.cs,MapCollectionProperty,The following statement contains a magic number: Assert.IsTrue(dto.YY.Count == 2 && dto.YY.First() == 22 && dto.YY.Last() == 33);
Magic Number,Mapster.Tests,WhenMappingCollections,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingCollections.cs,MapCollectionProperty,The following statement contains a magic number: Assert.IsTrue(dto.YY.Count == 2 && dto.YY.First() == 22 && dto.YY.Last() == 33);
Magic Number,Mapster.Tests,WhenMappingCollections,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingCollections.cs,MapCollectionProperty,The following statement contains a magic number: Assert.IsTrue(dto.YY.Count == 2 && dto.YY.First() == 22 && dto.YY.Last() == 33);
Magic Number,Mapster.Tests,WhenMappingCollections,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingCollections.cs,MapCollectionProperty,The following statement contains a magic number: Assert.IsTrue(dto.ZZ.Count == 2 && dto.ZZ.First() == 44 && dto.ZZ.Last() == 55);
Magic Number,Mapster.Tests,WhenMappingCollections,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingCollections.cs,MapCollectionProperty,The following statement contains a magic number: Assert.IsTrue(dto.ZZ.Count == 2 && dto.ZZ.First() == 44 && dto.ZZ.Last() == 55);
Magic Number,Mapster.Tests,WhenMappingCollections,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingCollections.cs,MapCollectionProperty,The following statement contains a magic number: Assert.IsTrue(dto.ZZ.Count == 2 && dto.ZZ.First() == 44 && dto.ZZ.Last() == 55);
Magic Number,Mapster.Tests,WhenMappingCollections,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingCollections.cs,MapCollectionProperty,The following statement contains a magic number: Assert.IsTrue(dto.RelatedDepartments.Length == 2 && dto.RelatedDepartments[0] == Departments.IT && dto.RelatedDepartments[1] == Departments.Finance);
Magic Number,Mapster.Tests,WhenMappingCollections,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingCollections.cs,MapCollection,The following statement contains a magic number: var person = new Person()              {                  Id = Guid.NewGuid()'                  Name = "Timuçin"'                  Surname = "KIVANÇ"'                  Project = Projects.A'                  X = new int[] { 1' 2' 3' 4 }'                  Y = new List<int>() { 5' 6' 7 }'                  Z = new ArrayList((ICollection)(new List<Guid>() { Guid.NewGuid()' Guid.NewGuid() }))'                  Ids = new List<Guid>() { Guid.Empty' Guid.NewGuid() }'                  CityId = Guid.NewGuid()'                  Picture = new byte[] { 0' 1' 2 }'                  Countries = new List<string> { "Turkey"' "Germany" }'                  ReadOnlyCountries = new List<string> { "Turkey"' "Germany" }'                  XX = new List<string> { "Nederland"' "USA" }'                  YY = new List<int> { 22' 33 }'                  ZZ = new List<int> { 44' 55 }'                  RelatedDepartments = new Departments[] { Departments.IT' Departments.Finance }'                  Projects = new List<XProject>() { new XProject { Id = 1' Name = "Project X" } }              };
Magic Number,Mapster.Tests,WhenMappingCollections,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingCollections.cs,MapCollection,The following statement contains a magic number: var person = new Person()              {                  Id = Guid.NewGuid()'                  Name = "Timuçin"'                  Surname = "KIVANÇ"'                  Project = Projects.A'                  X = new int[] { 1' 2' 3' 4 }'                  Y = new List<int>() { 5' 6' 7 }'                  Z = new ArrayList((ICollection)(new List<Guid>() { Guid.NewGuid()' Guid.NewGuid() }))'                  Ids = new List<Guid>() { Guid.Empty' Guid.NewGuid() }'                  CityId = Guid.NewGuid()'                  Picture = new byte[] { 0' 1' 2 }'                  Countries = new List<string> { "Turkey"' "Germany" }'                  ReadOnlyCountries = new List<string> { "Turkey"' "Germany" }'                  XX = new List<string> { "Nederland"' "USA" }'                  YY = new List<int> { 22' 33 }'                  ZZ = new List<int> { 44' 55 }'                  RelatedDepartments = new Departments[] { Departments.IT' Departments.Finance }'                  Projects = new List<XProject>() { new XProject { Id = 1' Name = "Project X" } }              };
Magic Number,Mapster.Tests,WhenMappingCollections,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingCollections.cs,MapCollection,The following statement contains a magic number: var person = new Person()              {                  Id = Guid.NewGuid()'                  Name = "Timuçin"'                  Surname = "KIVANÇ"'                  Project = Projects.A'                  X = new int[] { 1' 2' 3' 4 }'                  Y = new List<int>() { 5' 6' 7 }'                  Z = new ArrayList((ICollection)(new List<Guid>() { Guid.NewGuid()' Guid.NewGuid() }))'                  Ids = new List<Guid>() { Guid.Empty' Guid.NewGuid() }'                  CityId = Guid.NewGuid()'                  Picture = new byte[] { 0' 1' 2 }'                  Countries = new List<string> { "Turkey"' "Germany" }'                  ReadOnlyCountries = new List<string> { "Turkey"' "Germany" }'                  XX = new List<string> { "Nederland"' "USA" }'                  YY = new List<int> { 22' 33 }'                  ZZ = new List<int> { 44' 55 }'                  RelatedDepartments = new Departments[] { Departments.IT' Departments.Finance }'                  Projects = new List<XProject>() { new XProject { Id = 1' Name = "Project X" } }              };
Magic Number,Mapster.Tests,WhenMappingCollections,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingCollections.cs,MapCollection,The following statement contains a magic number: var person = new Person()              {                  Id = Guid.NewGuid()'                  Name = "Timuçin"'                  Surname = "KIVANÇ"'                  Project = Projects.A'                  X = new int[] { 1' 2' 3' 4 }'                  Y = new List<int>() { 5' 6' 7 }'                  Z = new ArrayList((ICollection)(new List<Guid>() { Guid.NewGuid()' Guid.NewGuid() }))'                  Ids = new List<Guid>() { Guid.Empty' Guid.NewGuid() }'                  CityId = Guid.NewGuid()'                  Picture = new byte[] { 0' 1' 2 }'                  Countries = new List<string> { "Turkey"' "Germany" }'                  ReadOnlyCountries = new List<string> { "Turkey"' "Germany" }'                  XX = new List<string> { "Nederland"' "USA" }'                  YY = new List<int> { 22' 33 }'                  ZZ = new List<int> { 44' 55 }'                  RelatedDepartments = new Departments[] { Departments.IT' Departments.Finance }'                  Projects = new List<XProject>() { new XProject { Id = 1' Name = "Project X" } }              };
Magic Number,Mapster.Tests,WhenMappingCollections,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingCollections.cs,MapCollection,The following statement contains a magic number: var person = new Person()              {                  Id = Guid.NewGuid()'                  Name = "Timuçin"'                  Surname = "KIVANÇ"'                  Project = Projects.A'                  X = new int[] { 1' 2' 3' 4 }'                  Y = new List<int>() { 5' 6' 7 }'                  Z = new ArrayList((ICollection)(new List<Guid>() { Guid.NewGuid()' Guid.NewGuid() }))'                  Ids = new List<Guid>() { Guid.Empty' Guid.NewGuid() }'                  CityId = Guid.NewGuid()'                  Picture = new byte[] { 0' 1' 2 }'                  Countries = new List<string> { "Turkey"' "Germany" }'                  ReadOnlyCountries = new List<string> { "Turkey"' "Germany" }'                  XX = new List<string> { "Nederland"' "USA" }'                  YY = new List<int> { 22' 33 }'                  ZZ = new List<int> { 44' 55 }'                  RelatedDepartments = new Departments[] { Departments.IT' Departments.Finance }'                  Projects = new List<XProject>() { new XProject { Id = 1' Name = "Project X" } }              };
Magic Number,Mapster.Tests,WhenMappingCollections,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingCollections.cs,MapCollection,The following statement contains a magic number: var person = new Person()              {                  Id = Guid.NewGuid()'                  Name = "Timuçin"'                  Surname = "KIVANÇ"'                  Project = Projects.A'                  X = new int[] { 1' 2' 3' 4 }'                  Y = new List<int>() { 5' 6' 7 }'                  Z = new ArrayList((ICollection)(new List<Guid>() { Guid.NewGuid()' Guid.NewGuid() }))'                  Ids = new List<Guid>() { Guid.Empty' Guid.NewGuid() }'                  CityId = Guid.NewGuid()'                  Picture = new byte[] { 0' 1' 2 }'                  Countries = new List<string> { "Turkey"' "Germany" }'                  ReadOnlyCountries = new List<string> { "Turkey"' "Germany" }'                  XX = new List<string> { "Nederland"' "USA" }'                  YY = new List<int> { 22' 33 }'                  ZZ = new List<int> { 44' 55 }'                  RelatedDepartments = new Departments[] { Departments.IT' Departments.Finance }'                  Projects = new List<XProject>() { new XProject { Id = 1' Name = "Project X" } }              };
Magic Number,Mapster.Tests,WhenMappingCollections,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingCollections.cs,MapCollection,The following statement contains a magic number: var person = new Person()              {                  Id = Guid.NewGuid()'                  Name = "Timuçin"'                  Surname = "KIVANÇ"'                  Project = Projects.A'                  X = new int[] { 1' 2' 3' 4 }'                  Y = new List<int>() { 5' 6' 7 }'                  Z = new ArrayList((ICollection)(new List<Guid>() { Guid.NewGuid()' Guid.NewGuid() }))'                  Ids = new List<Guid>() { Guid.Empty' Guid.NewGuid() }'                  CityId = Guid.NewGuid()'                  Picture = new byte[] { 0' 1' 2 }'                  Countries = new List<string> { "Turkey"' "Germany" }'                  ReadOnlyCountries = new List<string> { "Turkey"' "Germany" }'                  XX = new List<string> { "Nederland"' "USA" }'                  YY = new List<int> { 22' 33 }'                  ZZ = new List<int> { 44' 55 }'                  RelatedDepartments = new Departments[] { Departments.IT' Departments.Finance }'                  Projects = new List<XProject>() { new XProject { Id = 1' Name = "Project X" } }              };
Magic Number,Mapster.Tests,WhenMappingCollections,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingCollections.cs,MapCollection,The following statement contains a magic number: var person = new Person()              {                  Id = Guid.NewGuid()'                  Name = "Timuçin"'                  Surname = "KIVANÇ"'                  Project = Projects.A'                  X = new int[] { 1' 2' 3' 4 }'                  Y = new List<int>() { 5' 6' 7 }'                  Z = new ArrayList((ICollection)(new List<Guid>() { Guid.NewGuid()' Guid.NewGuid() }))'                  Ids = new List<Guid>() { Guid.Empty' Guid.NewGuid() }'                  CityId = Guid.NewGuid()'                  Picture = new byte[] { 0' 1' 2 }'                  Countries = new List<string> { "Turkey"' "Germany" }'                  ReadOnlyCountries = new List<string> { "Turkey"' "Germany" }'                  XX = new List<string> { "Nederland"' "USA" }'                  YY = new List<int> { 22' 33 }'                  ZZ = new List<int> { 44' 55 }'                  RelatedDepartments = new Departments[] { Departments.IT' Departments.Finance }'                  Projects = new List<XProject>() { new XProject { Id = 1' Name = "Project X" } }              };
Magic Number,Mapster.Tests,WhenMappingCollections,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingCollections.cs,MapCollection,The following statement contains a magic number: var person = new Person()              {                  Id = Guid.NewGuid()'                  Name = "Timuçin"'                  Surname = "KIVANÇ"'                  Project = Projects.A'                  X = new int[] { 1' 2' 3' 4 }'                  Y = new List<int>() { 5' 6' 7 }'                  Z = new ArrayList((ICollection)(new List<Guid>() { Guid.NewGuid()' Guid.NewGuid() }))'                  Ids = new List<Guid>() { Guid.Empty' Guid.NewGuid() }'                  CityId = Guid.NewGuid()'                  Picture = new byte[] { 0' 1' 2 }'                  Countries = new List<string> { "Turkey"' "Germany" }'                  ReadOnlyCountries = new List<string> { "Turkey"' "Germany" }'                  XX = new List<string> { "Nederland"' "USA" }'                  YY = new List<int> { 22' 33 }'                  ZZ = new List<int> { 44' 55 }'                  RelatedDepartments = new Departments[] { Departments.IT' Departments.Finance }'                  Projects = new List<XProject>() { new XProject { Id = 1' Name = "Project X" } }              };
Magic Number,Mapster.Tests,WhenMappingCollections,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingCollections.cs,MapCollection,The following statement contains a magic number: var person = new Person()              {                  Id = Guid.NewGuid()'                  Name = "Timuçin"'                  Surname = "KIVANÇ"'                  Project = Projects.A'                  X = new int[] { 1' 2' 3' 4 }'                  Y = new List<int>() { 5' 6' 7 }'                  Z = new ArrayList((ICollection)(new List<Guid>() { Guid.NewGuid()' Guid.NewGuid() }))'                  Ids = new List<Guid>() { Guid.Empty' Guid.NewGuid() }'                  CityId = Guid.NewGuid()'                  Picture = new byte[] { 0' 1' 2 }'                  Countries = new List<string> { "Turkey"' "Germany" }'                  ReadOnlyCountries = new List<string> { "Turkey"' "Germany" }'                  XX = new List<string> { "Nederland"' "USA" }'                  YY = new List<int> { 22' 33 }'                  ZZ = new List<int> { 44' 55 }'                  RelatedDepartments = new Departments[] { Departments.IT' Departments.Finance }'                  Projects = new List<XProject>() { new XProject { Id = 1' Name = "Project X" } }              };
Magic Number,Mapster.Tests,WhenMappingCollections,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingCollections.cs,MapCollection,The following statement contains a magic number: var person = new Person()              {                  Id = Guid.NewGuid()'                  Name = "Timuçin"'                  Surname = "KIVANÇ"'                  Project = Projects.A'                  X = new int[] { 1' 2' 3' 4 }'                  Y = new List<int>() { 5' 6' 7 }'                  Z = new ArrayList((ICollection)(new List<Guid>() { Guid.NewGuid()' Guid.NewGuid() }))'                  Ids = new List<Guid>() { Guid.Empty' Guid.NewGuid() }'                  CityId = Guid.NewGuid()'                  Picture = new byte[] { 0' 1' 2 }'                  Countries = new List<string> { "Turkey"' "Germany" }'                  ReadOnlyCountries = new List<string> { "Turkey"' "Germany" }'                  XX = new List<string> { "Nederland"' "USA" }'                  YY = new List<int> { 22' 33 }'                  ZZ = new List<int> { 44' 55 }'                  RelatedDepartments = new Departments[] { Departments.IT' Departments.Finance }'                  Projects = new List<XProject>() { new XProject { Id = 1' Name = "Project X" } }              };
Magic Number,Mapster.Tests,WhenMappingCollections,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingCollections.cs,ShouldNotUsingTheSameEnumerable,The following statement contains a magic number: var src = new Foo              {                  Foos = new List<Foo> { new Foo() }'                  FooArray = new[] { new Foo() }'                  Ints = new[] { 1' 2' 3 }'                  IntArray = new[] { 4' 5' 6 }'              };
Magic Number,Mapster.Tests,WhenMappingCollections,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingCollections.cs,ShouldNotUsingTheSameEnumerable,The following statement contains a magic number: var src = new Foo              {                  Foos = new List<Foo> { new Foo() }'                  FooArray = new[] { new Foo() }'                  Ints = new[] { 1' 2' 3 }'                  IntArray = new[] { 4' 5' 6 }'              };
Magic Number,Mapster.Tests,WhenMappingCollections,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingCollections.cs,ShouldNotUsingTheSameEnumerable,The following statement contains a magic number: var src = new Foo              {                  Foos = new List<Foo> { new Foo() }'                  FooArray = new[] { new Foo() }'                  Ints = new[] { 1' 2' 3 }'                  IntArray = new[] { 4' 5' 6 }'              };
Magic Number,Mapster.Tests,WhenMappingCollections,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingCollections.cs,ShouldNotUsingTheSameEnumerable,The following statement contains a magic number: var src = new Foo              {                  Foos = new List<Foo> { new Foo() }'                  FooArray = new[] { new Foo() }'                  Ints = new[] { 1' 2' 3 }'                  IntArray = new[] { 4' 5' 6 }'              };
Magic Number,Mapster.Tests,WhenMappingCollections,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingCollections.cs,ShouldNotUsingTheSameEnumerable,The following statement contains a magic number: var src = new Foo              {                  Foos = new List<Foo> { new Foo() }'                  FooArray = new[] { new Foo() }'                  Ints = new[] { 1' 2' 3 }'                  IntArray = new[] { 4' 5' 6 }'              };
Magic Number,Mapster.Tests,WhenMappingConditionally,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingConditionally.cs,Map_Multiple_Condition,The following statement contains a magic number: var list = Enumerable.Range(0' 6).Select(i => new SimplePoco {Name = i.ToString()}).ToList();
Magic Number,Mapster.Tests,WhenMappingDerived,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingDerived.cs,WhenMappingDerivedWithoutMembers,The following statement contains a magic number: var inputEntity = new Entity {Id = 2L};
Magic Number,Mapster.Tests,WhenMappingEntityWithOnlyPrimitives,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingEntityWithOnlyPrimitives.cs,GetCustomer,The following statement contains a magic number: return new Customer()              {                  City = "istanbul"'                  Country = "turkey"'                  Credit = 1542'                  DriverLicenceType = 'B''                  Id = 1'                  Debit = 100'                  IsActive = true'                  Name = "Timuçin"              };
Magic Number,Mapster.Tests,WhenMappingEntityWithOnlyPrimitives,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingEntityWithOnlyPrimitives.cs,GetCustomer,The following statement contains a magic number: return new Customer()              {                  City = "istanbul"'                  Country = "turkey"'                  Credit = 1542'                  DriverLicenceType = 'B''                  Id = 1'                  Debit = 100'                  IsActive = true'                  Name = "Timuçin"              };
Magic Number,Mapster.Tests,WhenMappingEntityWithOnlyPrimitives,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingEntityWithOnlyPrimitives.cs,ConvertPrimitiveEntityToDto,The following statement contains a magic number: Assert.IsTrue(dto.Id == 1 &&                   dto.Name == "Timuçin" &&                   dto.Credit == 1542 &&                  dto.IsActive &&                  dto.DriverLicenceType == 'B' &&                  dto.Debit == 100                  );
Magic Number,Mapster.Tests,WhenMappingEntityWithOnlyPrimitives,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingEntityWithOnlyPrimitives.cs,ConvertPrimitiveEntityToDto,The following statement contains a magic number: Assert.IsTrue(dto.Id == 1 &&                   dto.Name == "Timuçin" &&                   dto.Credit == 1542 &&                  dto.IsActive &&                  dto.DriverLicenceType == 'B' &&                  dto.Debit == 100                  );
Magic Number,Mapster.Tests,WhenMappingEnums,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingEnums.cs,Flag_Enum_Is_Supported,The following statement contains a magic number: Assert_Flag_Enum(2' "Two");
Magic Number,Mapster.Tests,WhenMappingEnums,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingEnums.cs,Flag_Enum_Is_Supported,The following statement contains a magic number: Assert_Flag_Enum(3' "3");
Magic Number,Mapster.Tests,WhenMappingEnums,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingEnums.cs,Flag_Enum_Is_Supported,The following statement contains a magic number: Assert_Flag_Enum(4' "Four");
Magic Number,Mapster.Tests,WhenMappingEnums,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingEnums.cs,Flag_Enum_Is_Supported,The following statement contains a magic number: Assert_Flag_Enum(5' "5");
Magic Number,Mapster.Tests,WhenMappingEnums,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingEnums.cs,Flag_Enum_Is_Supported,The following statement contains a magic number: Assert_Flag_Enum(6' "Six");
Magic Number,Mapster.Tests,WhenMappingEnums,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingEnums.cs,Flag_Enum_Is_Supported,The following statement contains a magic number: Assert_Flag_Enum(7' "7");
Magic Number,Mapster.Tests,WhenMappingEnums,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingEnums.cs,Flag_Enum_Is_Supported,The following statement contains a magic number: Assert_Flag_Enum(8' "Eight");
Magic Number,Mapster.Tests,WhenMappingEnums,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingEnums.cs,Flag_Enum_Is_Supported,The following statement contains a magic number: Assert_Flag_Enum(9' "9");
Magic Number,Mapster.Tests,WhenMappingEnums,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingEnums.cs,Flag_Enum_Is_Supported,The following statement contains a magic number: Assert_Flag_Enum(10' "Two' Eight");
Magic Number,Mapster.Tests,WhenMappingEnums,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingEnums.cs,MapEnumToStringSpeedTest,The following statement contains a magic number: i < 100000
Magic Number,Mapster.Tests,WhenMappingErrorThrown,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingErrorThrown.cs,When_Source_Expression_Throws_Exception_Bubbles_Up,The following statement contains a magic number: var poco = new SimplePoco              {                  Id = new Guid()'                  Name = "TestName"'                  Amount = 100'                  Count = 0              };
Magic Number,Mapster.Tests,WhenMappingErrorThrown,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingErrorThrown.cs,When_Condition_Throws_Exception_Bubbles_Up,The following statement contains a magic number: var poco = new SimplePoco              {                  Id = new Guid()'                  Name = "TestName"'                  Amount = 100'                  Count = 0              };
Magic Number,Mapster.Tests,WhenMappingIEnumerableClasses,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingIEnumerableClass.cs,Map_To_IEnumerable_Class_Should_Pass,The following statement contains a magic number: ClassA classA = new ClassA()              {                  Id = 123              };
Magic Number,Mapster.Tests,WhenMappingNullablePrimitives,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingNullablePrimitives.cs,Can_Map_From_Nullable_Source_With_Values_To_Non_Nullable_Target,The following statement contains a magic number: var poco = new NullablePrimitivesPoco { Id = Guid.NewGuid()' Name = "TestName"' IsImport = true' Amount = 10};
Magic Number,Mapster.Tests,WhenMappingNullablePrimitives,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingNullablePrimitives.cs,Can_Map_From_Nullable_Source_With_Values_To_Non_Nullable_Target,The following statement contains a magic number: dto.Amount.ShouldBe(10);
Magic Number,Mapster.Tests,WhenMappingNullablePrimitives,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingNullablePrimitives.cs,Can_Map_From_Nullable_Source_With_Values_To_Explicitly_Mapped_Non_Nullable_Target,The following statement contains a magic number: var poco = new NullablePrimitivesPoco { Id = Guid.NewGuid()' Name = "TestName"' Fee = 20' IsImport = true' Amount = 10};
Magic Number,Mapster.Tests,WhenMappingNullablePrimitives,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingNullablePrimitives.cs,Can_Map_From_Nullable_Source_With_Values_To_Explicitly_Mapped_Non_Nullable_Target,The following statement contains a magic number: var poco = new NullablePrimitivesPoco { Id = Guid.NewGuid()' Name = "TestName"' Fee = 20' IsImport = true' Amount = 10};
Magic Number,Mapster.Tests,WhenMappingNullablePrimitives,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingNullablePrimitives.cs,Can_Map_From_Nullable_Source_With_Values_To_Explicitly_Mapped_Non_Nullable_Target,The following statement contains a magic number: dto.Amount.ShouldBe(10);
Magic Number,Mapster.Tests,WhenMappingNullablePrimitives,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingNullablePrimitives.cs,Can_Map_From_Nullable_Source_With_Values_To_Explicitly_Mapped_Non_Nullable_Target,The following statement contains a magic number: dto.MyFee.ShouldBe(20);
Magic Number,Mapster.Tests,WhenMappingPrimitives,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingPrimitives.cs,Integer_Is_Mapped_To_Byte,The following statement contains a magic number: byte b = TypeAdapter.Adapt<int' byte>(5);
Magic Number,Mapster.Tests,WhenMappingPrimitives,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingPrimitives.cs,Integer_Is_Mapped_To_Byte,The following statement contains a magic number: Assert.IsTrue(b == 5);
Magic Number,Mapster.Tests,WhenMappingPrimitives,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingPrimitives.cs,ValueType_String_Object_Is_Always_Primitive,The following statement contains a magic number: var sourceDto = new PrimitivePoco              {                  Id = "test"'                  Time = TimeSpan.FromHours(7)'                  Obj = new object()'              };
Magic Number,Mapster.Tests,WhenMappingPrimitives,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingPrimitives.cs,String_Parse,The following statement contains a magic number: i.ShouldBe(123);
Magic Number,Mapster.Tests,WhenMappingRecordTypes,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingRecordTypes.cs,Map_RecordType,The following statement contains a magic number: dest.Age.ShouldBe(10);
Magic Number,Mapster.Tests,WhenMappingToTarget,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingToTarget.cs,MappingToTarget_With_SameList,The following statement contains a magic number: var a = new Foo { A = 1' List = new List<int> {1'2'3} };
Magic Number,Mapster.Tests,WhenMappingToTarget,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingToTarget.cs,MappingToTarget_With_SameList,The following statement contains a magic number: var a = new Foo { A = 1' List = new List<int> {1'2'3} };
Magic Number,Mapster.Tests,WhenMappingToTarget,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingToTarget.cs,MappingToTarget_With_SameList,The following statement contains a magic number: var b = new Bar { A = 2' List = a.List};
Magic Number,Mapster.Tests,WhenMappingToTarget,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingToTarget.cs,MappingToTarget_With_SameList,The following statement contains a magic number: b.List.ShouldBe(new List<int>{1'2'3});
Magic Number,Mapster.Tests,WhenMappingToTarget,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingToTarget.cs,MappingToTarget_With_SameList,The following statement contains a magic number: b.List.ShouldBe(new List<int>{1'2'3});
Magic Number,Mapster.Tests,WhenMappingWithDictionary,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingWithDictionary.cs,Object_To_Dictionary,The following statement contains a magic number: dict.Count.ShouldBe(2);
Magic Number,Mapster.Tests,WhenMappingWithDictionary,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingWithDictionary.cs,Object_To_Dictionary_Map,The following statement contains a magic number: dict.Count.ShouldBe(2);
Magic Number,Mapster.Tests,WhenMappingWithDictionary,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingWithDictionary.cs,Object_To_Dictionary_CamelCase,The following statement contains a magic number: dict.Count.ShouldBe(2);
Magic Number,Mapster.Tests,WhenMappingWithDictionary,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingWithDictionary.cs,Object_To_Dictionary_Flexible,The following statement contains a magic number: dict.Count.ShouldBe(2);
Magic Number,Mapster.Tests,WhenMappingWithDictionary,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingWithDictionary.cs,Dictionary_Of_Int,The following statement contains a magic number: var result = TypeAdapter.Adapt<A' A>(new A { Prop = new Dictionary<int' decimal> { { 1' 2m } } });
Magic Number,Mapster.Tests,WhenMappingWithDictionary,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingWithDictionary.cs,Dictionary_Of_Int,The following statement contains a magic number: result.Prop[1].ShouldBe(2m);
Magic Number,Mapster.Tests,WhenMappingWithDictionary,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingWithDictionary.cs,Dictionary_Of_String_Mix,The following statement contains a magic number: TypeAdapterConfig<Dictionary<string' int?>' Dictionary<string' int>>.NewConfig()                  .Map("A"' "a")                  .Ignore("c")                  .IgnoreIf((src' dest) => src.Count > 3' "d")                  .IgnoreNullValues(true)                  .NameMatchingStrategy(NameMatchingStrategy.ConvertSourceMemberName(s => "_" + s));
Magic Number,Mapster.Tests,WhenMappingWithDictionary,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingWithDictionary.cs,Dictionary_Of_String_Mix,The following statement contains a magic number: var dict = new Dictionary<string' int?>              {                  ["a"] = 1'                  ["b"] = 2'                  ["c"] = 3'                  ["d"] = 4'                  ["e"] = null'              };
Magic Number,Mapster.Tests,WhenMappingWithDictionary,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingWithDictionary.cs,Dictionary_Of_String_Mix,The following statement contains a magic number: var dict = new Dictionary<string' int?>              {                  ["a"] = 1'                  ["b"] = 2'                  ["c"] = 3'                  ["d"] = 4'                  ["e"] = null'              };
Magic Number,Mapster.Tests,WhenMappingWithDictionary,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingWithDictionary.cs,Dictionary_Of_String_Mix,The following statement contains a magic number: var dict = new Dictionary<string' int?>              {                  ["a"] = 1'                  ["b"] = 2'                  ["c"] = 3'                  ["d"] = 4'                  ["e"] = null'              };
Magic Number,Mapster.Tests,WhenMappingWithDictionary,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingWithDictionary.cs,Dictionary_Of_String_Mix,The following statement contains a magic number: result.Count.ShouldBe(2);
Magic Number,Mapster.Tests,WhenMappingWithDictionary,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingWithDictionary.cs,Dictionary_Of_String_Mix,The following statement contains a magic number: result["_b"].ShouldBe(2);
Magic Number,Mapster.Tests,WhenMappingWithDictionary,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingWithDictionary.cs,AdaptClassWithIntegerKeyDictionary,The following statement contains a magic number: instanceWithDictionary.Dict = new Dictionary<int' SimplePoco>              {                  { 1 ' new SimplePoco { Id =  Guid.NewGuid()' Name = "one"} }'                  { 100 ' new SimplePoco { Id =  Guid.NewGuid()' Name = "one hundred"} }'              };
Magic Number,Mapster.Tests,WhenMappingWithDictionary,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingWithDictionary.cs,AdaptClassWithIntegerKeyDictionary,The following statement contains a magic number: result.Dict.ShouldContainKey(100);
Magic Number,Mapster.Tests,WhenMappingWithDictionary,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingWithDictionary.cs,AdaptClassWithIntegerKeyDictionary,The following statement contains a magic number: result.Dict[100].Name.ShouldBe("one hundred");
Magic Number,Mapster.Tests,WhenMappingWithDictionary,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingWithDictionary.cs,AdaptClassWithIntegerKeyDictionaryInterface,The following statement contains a magic number: instanceWithDictionary.Dict = new Dictionary<int' SimplePoco>              {                  { 1 ' new SimplePoco { Id =  Guid.NewGuid()' Name = "one"} }'                  { 100 ' new SimplePoco { Id =  Guid.NewGuid()' Name = "one hundred"} }'              };
Magic Number,Mapster.Tests,WhenMappingWithDictionary,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingWithDictionary.cs,AdaptClassWithIntegerKeyDictionaryInterface,The following statement contains a magic number: result.Dict.ShouldContainKey(100);
Magic Number,Mapster.Tests,WhenMappingWithDictionary,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingWithDictionary.cs,AdaptClassWithIntegerKeyDictionaryInterface,The following statement contains a magic number: result.Dict[100].Name.ShouldBe("one hundred");
Magic Number,Mapster.Tests,WhenMappingWithDictionary,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingWithDictionary.cs,AdaptClassWithObjectKeyDictionary,The following statement contains a magic number: instanceWithDictionary.Dict = new Dictionary<SimplePoco' int>              {                  { new SimplePoco { Id =  Guid.NewGuid()' Name = "one"}' 1 }'                  { new SimplePoco { Id =  Guid.NewGuid()' Name = "one hundred"}' 100 }'              };
Magic Number,Mapster.Tests,WhenMappingWithOpenGenerics,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenMappingWithOpenGenerics.cs,Map_With_Open_Generics,The following statement contains a magic number: var poco = new GenericPoco<int> { Value = 123 };
Magic Number,Mapster.Tests,WhenProjecting,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenProjecting.cs,TestTypeConversion,The following statement contains a magic number: testA.A = 5;
Magic Number,Mapster.Tests,WhenProjecting,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenProjecting.cs,TestTypeConversion,The following statement contains a magic number: testA.B = 2;
Magic Number,Mapster.Tests,WhenProjecting,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenProjecting.cs,TestTypeConversion,The following statement contains a magic number: testA.C = 4.5;
Magic Number,Mapster.Tests,WhenProjecting,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenProjecting.cs,TestTypeConversion,The following statement contains a magic number: Assert.IsTrue(bList[0].A == 5);
Magic Number,Mapster.Tests,WhenProjecting,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenProjecting.cs,TestTypeConversion,The following statement contains a magic number: Assert.IsTrue(bList[0].B == 2);
Magic Number,Mapster.Tests,WhenProjecting,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenProjecting.cs,TestTypeConversion,The following statement contains a magic number: Assert.IsTrue(bList[0].C == 4.5m);
Magic Number,Mapster.Tests,WhenProjecting,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenProjecting.cs,TestProjectionConfiguration,The following statement contains a magic number: testA.A = 5;
Magic Number,Mapster.Tests,WhenProjecting,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenProjecting.cs,TestProjectionConfiguration,The following statement contains a magic number: testA.C = 4.5;
Magic Number,Mapster.Tests,WhenRegisteringAndMappingRace,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenRegisteringAndMappingRace.cs,Race_Condition_Produces_Error,The following statement contains a magic number: var exception = Should.Throw<AggregateException>(() =>              {                  for (int i = 0; i < 100; i++)                  {                      Parallel.Invoke(                          () =>                          {                              TypeAdapterConfig<WhenAddingCustomMappings.SimplePoco' WeirdPoco>.NewConfig()                                  .Map(dest => dest.IHaveADifferentId' src => src.Id)                                  .Map(dest => dest.MyNamePropertyIsDifferent' src => src.Name)                                  .Ignore(dest => dest.Children);                          }'                          () => { TypeAdapter.Adapt<WeirdPoco>(simplePoco); }                          );                  }              });
Magic Number,Mapster.Tests,WhenRegisteringAndMappingRace,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenRegisteringAndMappingRace.cs,Explicit_Mapping_Requirement_Throws_Before_Mapping_Attempted,The following statement contains a magic number: Should.Throw<AggregateException>(() =>              {                  for (int i = 0; i < 100; i++)                  {                     Parallel.Invoke(                          () =>                          {                              TypeAdapterConfig<WhenAddingCustomMappings.SimplePoco' WeirdPoco>.NewConfig()                                  .Map(dest => dest.IHaveADifferentId' src => src.Id)                                  .Map(dest => dest.MyNamePropertyIsDifferent' src => src.Name)                                  .Ignore(dest => dest.Children);                          }'                          () => { TypeAdapter.Adapt<WeirdPoco>(simplePoco); }                          );                  }              });
Magic Number,Mapster.Tests,WhenRunningOnMultipleThreads,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenRunningOnMultipleThreads.cs,Can_Set_Up_Mapping_On_Multiple_Threads,The following statement contains a magic number: Parallel.For(1' 5' x => TypeAdapterConfig<Customer' CustomerDTO>.NewConfig());
Magic Number,Mapster.Tests,WhenRunningOnMultipleThreads,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenRunningOnMultipleThreads.cs,Can_Set_Up_Adapt_On_Multiple_Threads,The following statement contains a magic number: Parallel.For(1' 5' x => TypeAdapter.Adapt<Customer' CustomerDTO>(GetCustomer()));
Magic Number,Mapster.Tests,WhenRunningOnMultipleThreads,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenRunningOnMultipleThreads.cs,GetCustomer,The following statement contains a magic number: Customer c = new Customer()              {                  Address = new Address() { City = "istanbul"' Country = "turkey"' Id = 1' Street = "istiklal cad." }'                  HomeAddress = new Address() { City = "istanbul"' Country = "turkey"' Id = 2' Street = "istiklal cad." }'                  Id = 1'                  Name = "Kıvanç"'                  Credit = 234.7m'                  WorkAddresses = new List<Address>() {                       new Address() { City = "istanbul"' Country = "turkey"' Id = 5' Street = "istiklal cad." }'                      new Address() { City = "izmir"' Country = "turkey"' Id = 6' Street = "konak" }                  }'                  Addresses = new List<Address>() {                       new Address() { City = "istanbul"' Country = "turkey"' Id = 3' Street = "istiklal cad." }'                      new Address() { City = "izmir"' Country = "turkey"' Id = 4' Street = "konak" }                  }.ToArray()              };
Magic Number,Mapster.Tests,WhenRunningOnMultipleThreads,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenRunningOnMultipleThreads.cs,GetCustomer,The following statement contains a magic number: Customer c = new Customer()              {                  Address = new Address() { City = "istanbul"' Country = "turkey"' Id = 1' Street = "istiklal cad." }'                  HomeAddress = new Address() { City = "istanbul"' Country = "turkey"' Id = 2' Street = "istiklal cad." }'                  Id = 1'                  Name = "Kıvanç"'                  Credit = 234.7m'                  WorkAddresses = new List<Address>() {                       new Address() { City = "istanbul"' Country = "turkey"' Id = 5' Street = "istiklal cad." }'                      new Address() { City = "izmir"' Country = "turkey"' Id = 6' Street = "konak" }                  }'                  Addresses = new List<Address>() {                       new Address() { City = "istanbul"' Country = "turkey"' Id = 3' Street = "istiklal cad." }'                      new Address() { City = "izmir"' Country = "turkey"' Id = 4' Street = "konak" }                  }.ToArray()              };
Magic Number,Mapster.Tests,WhenRunningOnMultipleThreads,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenRunningOnMultipleThreads.cs,GetCustomer,The following statement contains a magic number: Customer c = new Customer()              {                  Address = new Address() { City = "istanbul"' Country = "turkey"' Id = 1' Street = "istiklal cad." }'                  HomeAddress = new Address() { City = "istanbul"' Country = "turkey"' Id = 2' Street = "istiklal cad." }'                  Id = 1'                  Name = "Kıvanç"'                  Credit = 234.7m'                  WorkAddresses = new List<Address>() {                       new Address() { City = "istanbul"' Country = "turkey"' Id = 5' Street = "istiklal cad." }'                      new Address() { City = "izmir"' Country = "turkey"' Id = 6' Street = "konak" }                  }'                  Addresses = new List<Address>() {                       new Address() { City = "istanbul"' Country = "turkey"' Id = 3' Street = "istiklal cad." }'                      new Address() { City = "izmir"' Country = "turkey"' Id = 4' Street = "konak" }                  }.ToArray()              };
Magic Number,Mapster.Tests,WhenRunningOnMultipleThreads,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenRunningOnMultipleThreads.cs,GetCustomer,The following statement contains a magic number: Customer c = new Customer()              {                  Address = new Address() { City = "istanbul"' Country = "turkey"' Id = 1' Street = "istiklal cad." }'                  HomeAddress = new Address() { City = "istanbul"' Country = "turkey"' Id = 2' Street = "istiklal cad." }'                  Id = 1'                  Name = "Kıvanç"'                  Credit = 234.7m'                  WorkAddresses = new List<Address>() {                       new Address() { City = "istanbul"' Country = "turkey"' Id = 5' Street = "istiklal cad." }'                      new Address() { City = "izmir"' Country = "turkey"' Id = 6' Street = "konak" }                  }'                  Addresses = new List<Address>() {                       new Address() { City = "istanbul"' Country = "turkey"' Id = 3' Street = "istiklal cad." }'                      new Address() { City = "izmir"' Country = "turkey"' Id = 4' Street = "konak" }                  }.ToArray()              };
Magic Number,Mapster.Tests,WhenRunningOnMultipleThreads,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenRunningOnMultipleThreads.cs,GetCustomer,The following statement contains a magic number: Customer c = new Customer()              {                  Address = new Address() { City = "istanbul"' Country = "turkey"' Id = 1' Street = "istiklal cad." }'                  HomeAddress = new Address() { City = "istanbul"' Country = "turkey"' Id = 2' Street = "istiklal cad." }'                  Id = 1'                  Name = "Kıvanç"'                  Credit = 234.7m'                  WorkAddresses = new List<Address>() {                       new Address() { City = "istanbul"' Country = "turkey"' Id = 5' Street = "istiklal cad." }'                      new Address() { City = "izmir"' Country = "turkey"' Id = 6' Street = "konak" }                  }'                  Addresses = new List<Address>() {                       new Address() { City = "istanbul"' Country = "turkey"' Id = 3' Street = "istiklal cad." }'                      new Address() { City = "izmir"' Country = "turkey"' Id = 4' Street = "konak" }                  }.ToArray()              };
Magic Number,Mapster.Tests,WhenRunningOnMultipleThreads,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenRunningOnMultipleThreads.cs,GetCustomer,The following statement contains a magic number: Customer c = new Customer()              {                  Address = new Address() { City = "istanbul"' Country = "turkey"' Id = 1' Street = "istiklal cad." }'                  HomeAddress = new Address() { City = "istanbul"' Country = "turkey"' Id = 2' Street = "istiklal cad." }'                  Id = 1'                  Name = "Kıvanç"'                  Credit = 234.7m'                  WorkAddresses = new List<Address>() {                       new Address() { City = "istanbul"' Country = "turkey"' Id = 5' Street = "istiklal cad." }'                      new Address() { City = "izmir"' Country = "turkey"' Id = 6' Street = "konak" }                  }'                  Addresses = new List<Address>() {                       new Address() { City = "istanbul"' Country = "turkey"' Id = 3' Street = "istiklal cad." }'                      new Address() { City = "izmir"' Country = "turkey"' Id = 4' Street = "konak" }                  }.ToArray()              };
Magic Number,Mapster.Tests,WhenScanningForRegisters,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenScanningForRegisters.cs,Registers_Are_Found,The following statement contains a magic number: registers.Count.ShouldBe(2);
Magic Number,Mapster.Tests,WhenSettingMapToTargetWith,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenSettingMapToTargetWith.cs,MapToTargetWith_Should_Work_With_Adapt_To_Target,The following statement contains a magic number: var b = new Bar { A = 2 };
Magic Number,Mapster.Tests,WhenSettingMapToTargetWith,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenSettingMapToTargetWith.cs,MapToTargetWith_Should_Work_With_Adapt_To_Target,The following statement contains a magic number: config.NewConfig<double' double>().MapToTargetWith((x' y) => 5);
Magic Number,Mapster.Tests,WhenSettingMapToTargetWith,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenSettingMapToTargetWith.cs,MapToTargetWith_Should_Work_With_Adapt_To_Target,The following statement contains a magic number: b.A.ShouldBe(5);
Magic Number,Mapster.Tests,WhenUnflattening,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenUnflattening.cs,ShouldUnflattening,The following statement contains a magic number: var src = new ModelDto              {                  BaseDate = new DateTime(2007' 4' 5)'                  SubProperName = "Some name"'                  SubSubSubCoolProperty = "Cool daddy-o"'                  Sub2ProperName = "Sub 2 name"'                  SubWithExtraNameProperName = "Some other name"'              };
Magic Number,Mapster.Tests,WhenUnflattening,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenUnflattening.cs,ShouldUnflattening,The following statement contains a magic number: var src = new ModelDto              {                  BaseDate = new DateTime(2007' 4' 5)'                  SubProperName = "Some name"'                  SubSubSubCoolProperty = "Cool daddy-o"'                  Sub2ProperName = "Sub 2 name"'                  SubWithExtraNameProperName = "Some other name"'              };
Magic Number,Mapster.Tests,WhenUnflattening,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenUnflattening.cs,ShouldUnflattening,The following statement contains a magic number: var src = new ModelDto              {                  BaseDate = new DateTime(2007' 4' 5)'                  SubProperName = "Some name"'                  SubSubSubCoolProperty = "Cool daddy-o"'                  Sub2ProperName = "Sub 2 name"'                  SubWithExtraNameProperName = "Some other name"'              };
Magic Number,Mapster.Tests,WhenUnflattening,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenUnflattening.cs,ShouldUnflattening_When2WaysMapping,The following statement contains a magic number: var src = new ModelDto              {                  BaseDate = new DateTime(2007' 4' 5)'                  SubProperName = "Some name"'                  SubSubSubCoolProperty = "Cool daddy-o"'                  Sub2ProperName = "Sub 2 name"'                  SubWithExtraNameProperName = "Some other name"'              };
Magic Number,Mapster.Tests,WhenUnflattening,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenUnflattening.cs,ShouldUnflattening_When2WaysMapping,The following statement contains a magic number: var src = new ModelDto              {                  BaseDate = new DateTime(2007' 4' 5)'                  SubProperName = "Some name"'                  SubSubSubCoolProperty = "Cool daddy-o"'                  Sub2ProperName = "Sub 2 name"'                  SubWithExtraNameProperName = "Some other name"'              };
Magic Number,Mapster.Tests,WhenUnflattening,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenUnflattening.cs,ShouldUnflattening_When2WaysMapping,The following statement contains a magic number: var src = new ModelDto              {                  BaseDate = new DateTime(2007' 4' 5)'                  SubProperName = "Some name"'                  SubSubSubCoolProperty = "Cool daddy-o"'                  Sub2ProperName = "Sub 2 name"'                  SubWithExtraNameProperName = "Some other name"'              };
Magic Number,Mapster.Tests,WhenUsingConverterFactory,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenUsingConverterFactory.cs,Custom_Mapping_From_String_To_Char_Array,The following statement contains a magic number: chars.Length.ShouldBe(5);
Magic Number,Mapster.Tests,WhenUsingConverterFactory,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenUsingConverterFactory.cs,Custom_Mapping_From_String_To_Char_Array,The following statement contains a magic number: chars[2].ShouldBe('l');
Magic Number,Mapster.Tests,WhenUsingConverterFactory,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenUsingConverterFactory.cs,Custom_Mapping_From_String_To_Char_Array,The following statement contains a magic number: chars[3].ShouldBe('l');
Magic Number,Mapster.Tests,WhenUsingConverterFactory,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenUsingConverterFactory.cs,Custom_Mapping_From_String_To_Char_Array,The following statement contains a magic number: chars[4].ShouldBe('o');
Magic Number,Mapster.Tests,WhenUsingMaxDepth,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenUsingMaxDepth.cs,TestMaxDepth,The following statement contains a magic number: TypeAdapterConfig<Poco' Dto>.NewConfig()                  .MaxDepth(3);
Magic Number,Mapster.Tests,WhenUsingMaxDepth,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenUsingMaxDepth.cs,TestMaxDepth,The following statement contains a magic number: AssertModel(result' poco' 1' 3);
Magic Number,Mapster.Tests,WhenUsingMaxDepth,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenUsingMaxDepth.cs,TestMaxDepth_Projection,The following statement contains a magic number: TypeAdapterConfig<Poco' Dto>.NewConfig()                  .MaxDepth(3);
Magic Number,Mapster.Tests,WhenUsingMaxDepth,D:\research\architectureSmells\repos\eswann_Mapster\src\Mapster.Tests\WhenUsingMaxDepth.cs,TestMaxDepth_Projection,The following statement contains a magic number: AssertModel(result.First()' poco' 1' 3);
