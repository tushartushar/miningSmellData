Implementation smell,Namespace,Class,File,Method,Description
Complex Method,statsd.net.shared.Messages,Calendargram,D:\research\architectureSmells\repos\lukevenediger_statsd.net\statsd.net.shared\Messages\Calendargram.cs,Calendargram,Cyclomatic complexity of the method is 9
Complex Method,statsd.net.shared.Messages,StatsdMessageFactory,D:\research\architectureSmells\repos\lukevenediger_statsd.net\statsd.net.shared\Messages\StatsdMessageFactory.cs,ParseMessage,Cyclomatic complexity of the method is 11
Complex Method,statsd.net.shared.Structures,TimeWindow,D:\research\architectureSmells\repos\lukevenediger_statsd.net\statsd.net.shared\Structures\TimeWindow.cs,GetTimePeriod,Cyclomatic complexity of the method is 8
Complex Method,statsd.net.shared.Structures,TimeWindow,D:\research\architectureSmells\repos\lukevenediger_statsd.net\statsd.net.shared\Structures\TimeWindow.cs,GetDifferences,Cyclomatic complexity of the method is 8
Long Parameter List,statsd.net.shared.Listeners,MSSQLRelayListener,D:\research\architectureSmells\repos\lukevenediger_statsd.net\statsd.net.shared\Listeners\MSSQLRelayListener.cs,MSSQLRelayListener,The method has 6 parameters. Parameters: connectionString' pollInterval' cancellationToken' batchSize' deleteAfterSend' metrics
Long Parameter List,statsd.net.shared.Structures,PercentileBucket,D:\research\architectureSmells\repos\lukevenediger_statsd.net\statsd.net.shared\Structures\PercentileBucket.cs,PercentileBucket,The method has 5 parameters. Parameters: timings' epoch' rootNamespace' percentileName' percentile
Long Identifier,statsd.net.shared,BetterExpando,D:\research\architectureSmells\repos\lukevenediger_statsd.net\statsd.net.shared\BetterExpando.cs,BetterExpando,The length of the parameter returnEmptyStringForMissingProperties is 37.
Long Identifier,statsd.net.shared,BetterExpando,D:\research\architectureSmells\repos\lukevenediger_statsd.net\statsd.net.shared\BetterExpando.cs,,The length of the parameter _returnEmptyStringForMissingProperties is 38.
Long Statement,statsd.net.shared.Listeners,RequestDelegate,D:\research\architectureSmells\repos\lukevenediger_statsd.net\statsd.net.shared\Listeners\HttpStatsListener.cs,ProcessPOSTRequest,The length of the statement  "              // Further split by ''' to match the GET while keeping backward compatibility and allowing you to use the join for both methods. " is 128.
Empty Catch Block,statsd.net.shared.Listeners,UdpStatsListener,D:\research\architectureSmells\repos\lukevenediger_statsd.net\statsd.net.shared\Listeners\UdpStatsListener.cs,LinkTo,The method has an empty catch block.
Magic Number,statsd.net.shared.Listeners,MSSQLRelayListener,D:\research\architectureSmells\repos\lukevenediger_statsd.net\statsd.net.shared\Listeners\MSSQLRelayListener.cs,ReadAndFeed,The following statement contains a magic number: _target.Post(parts[0] + ":" + parts[1] + "|r|" + parts[2]);
Magic Number,statsd.net.shared.Listeners,StatsdnetTcpListener,D:\research\architectureSmells\repos\lukevenediger_statsd.net\statsd.net.shared\Listeners\StatsdnetTcpListener.cs,DecodePacketAndForward,The following statement contains a magic number: _target.Post(parts[0] + ":" + parts[1] + "|r|" + parts[2]);
Magic Number,statsd.net.shared.Listeners,TcpStatsListener,D:\research\architectureSmells\repos\lukevenediger_statsd.net\statsd.net.shared\Listeners\TcpStatsListener.cs,ProcessIncomingConnection,The following statement contains a magic number: networkStream.ReadTimeout = 1000;
Magic Number,statsd.net.shared.Listeners,TcpStatsListener,D:\research\architectureSmells\repos\lukevenediger_statsd.net\statsd.net.shared\Listeners\TcpStatsListener.cs,ProcessIncomingConnection,The following statement contains a magic number: var buffer = new byte[4096];
Magic Number,statsd.net.shared.Listeners,TcpStatsListener,D:\research\architectureSmells\repos\lukevenediger_statsd.net\statsd.net.shared\Listeners\TcpStatsListener.cs,ProcessIncomingConnection,The following statement contains a magic number: lines.Length >= 2 && lines[lines.Length - 2] == "" && lines[lines.Length - 1] == ""
Magic Number,statsd.net.shared.Listeners,TcpStatsListener,D:\research\architectureSmells\repos\lukevenediger_statsd.net\statsd.net.shared\Listeners\TcpStatsListener.cs,ProcessIncomingConnection,The following statement contains a magic number: lines.Length >= 2 && lines[lines.Length - 2] == "" && lines[lines.Length - 1] == ""
Magic Number,statsd.net.shared.Messages,StatsdMessageFactory,D:\research\architectureSmells\repos\lukevenediger_statsd.net\statsd.net.shared\Messages\StatsdMessageFactory.cs,ParseMessage,The following statement contains a magic number: statProperties.Length < 2
Magic Number,statsd.net.shared.Messages,StatsdMessageFactory,D:\research\architectureSmells\repos\lukevenediger_statsd.net\statsd.net.shared\Messages\StatsdMessageFactory.cs,ParseMessage,The following statement contains a magic number: switch (statProperties[1])          {            case "c":              if (statProperties.Length == 2)              {                // gorets:1|c                return new Counter(nameAndValue[0]' Double.Parse(statProperties[0]));              }              else              {                // gorets:1|c|@0.1                return new Counter(nameAndValue[0]' Double.Parse(statProperties[0])' float.Parse(statProperties[2].Remove(0' 1)));              }            case "ms":              // glork:320|ms              return new Timing(nameAndValue[0]' Double.Parse(statProperties[0]));            case "g":              // gaugor:333|g              return new Gauge(nameAndValue[0]' Double.Parse(statProperties[0]));            case "s":              // uniques:765|s              // uniques:ABSA434As1|s              return new Set(nameAndValue[0]' statProperties[0]);            case "r":              // some.other.value:12312|r              // some.other.value:12312|r|99988883333              if (statProperties.Length == 2)              {                return new Raw(nameAndValue[0]' Double.Parse(statProperties[0]));              }              else              {                return new Raw(nameAndValue[0]' Double.Parse(statProperties[0])' long.Parse(statProperties[2]));              }            case "cg":              // calendargram.key:value|cg|{h'd'w'm'dow}              return new Calendargram(nameAndValue[0]' statProperties[0]' statProperties[2]);            default:              return new InvalidMessage("Unknown message type: " + statProperties[1]);          }
Magic Number,statsd.net.shared.Messages,StatsdMessageFactory,D:\research\architectureSmells\repos\lukevenediger_statsd.net\statsd.net.shared\Messages\StatsdMessageFactory.cs,ParseMessage,The following statement contains a magic number: switch (statProperties[1])          {            case "c":              if (statProperties.Length == 2)              {                // gorets:1|c                return new Counter(nameAndValue[0]' Double.Parse(statProperties[0]));              }              else              {                // gorets:1|c|@0.1                return new Counter(nameAndValue[0]' Double.Parse(statProperties[0])' float.Parse(statProperties[2].Remove(0' 1)));              }            case "ms":              // glork:320|ms              return new Timing(nameAndValue[0]' Double.Parse(statProperties[0]));            case "g":              // gaugor:333|g              return new Gauge(nameAndValue[0]' Double.Parse(statProperties[0]));            case "s":              // uniques:765|s              // uniques:ABSA434As1|s              return new Set(nameAndValue[0]' statProperties[0]);            case "r":              // some.other.value:12312|r              // some.other.value:12312|r|99988883333              if (statProperties.Length == 2)              {                return new Raw(nameAndValue[0]' Double.Parse(statProperties[0]));              }              else              {                return new Raw(nameAndValue[0]' Double.Parse(statProperties[0])' long.Parse(statProperties[2]));              }            case "cg":              // calendargram.key:value|cg|{h'd'w'm'dow}              return new Calendargram(nameAndValue[0]' statProperties[0]' statProperties[2]);            default:              return new InvalidMessage("Unknown message type: " + statProperties[1]);          }
Magic Number,statsd.net.shared.Messages,StatsdMessageFactory,D:\research\architectureSmells\repos\lukevenediger_statsd.net\statsd.net.shared\Messages\StatsdMessageFactory.cs,ParseMessage,The following statement contains a magic number: switch (statProperties[1])          {            case "c":              if (statProperties.Length == 2)              {                // gorets:1|c                return new Counter(nameAndValue[0]' Double.Parse(statProperties[0]));              }              else              {                // gorets:1|c|@0.1                return new Counter(nameAndValue[0]' Double.Parse(statProperties[0])' float.Parse(statProperties[2].Remove(0' 1)));              }            case "ms":              // glork:320|ms              return new Timing(nameAndValue[0]' Double.Parse(statProperties[0]));            case "g":              // gaugor:333|g              return new Gauge(nameAndValue[0]' Double.Parse(statProperties[0]));            case "s":              // uniques:765|s              // uniques:ABSA434As1|s              return new Set(nameAndValue[0]' statProperties[0]);            case "r":              // some.other.value:12312|r              // some.other.value:12312|r|99988883333              if (statProperties.Length == 2)              {                return new Raw(nameAndValue[0]' Double.Parse(statProperties[0]));              }              else              {                return new Raw(nameAndValue[0]' Double.Parse(statProperties[0])' long.Parse(statProperties[2]));              }            case "cg":              // calendargram.key:value|cg|{h'd'w'm'dow}              return new Calendargram(nameAndValue[0]' statProperties[0]' statProperties[2]);            default:              return new InvalidMessage("Unknown message type: " + statProperties[1]);          }
Magic Number,statsd.net.shared.Messages,StatsdMessageFactory,D:\research\architectureSmells\repos\lukevenediger_statsd.net\statsd.net.shared\Messages\StatsdMessageFactory.cs,ParseMessage,The following statement contains a magic number: switch (statProperties[1])          {            case "c":              if (statProperties.Length == 2)              {                // gorets:1|c                return new Counter(nameAndValue[0]' Double.Parse(statProperties[0]));              }              else              {                // gorets:1|c|@0.1                return new Counter(nameAndValue[0]' Double.Parse(statProperties[0])' float.Parse(statProperties[2].Remove(0' 1)));              }            case "ms":              // glork:320|ms              return new Timing(nameAndValue[0]' Double.Parse(statProperties[0]));            case "g":              // gaugor:333|g              return new Gauge(nameAndValue[0]' Double.Parse(statProperties[0]));            case "s":              // uniques:765|s              // uniques:ABSA434As1|s              return new Set(nameAndValue[0]' statProperties[0]);            case "r":              // some.other.value:12312|r              // some.other.value:12312|r|99988883333              if (statProperties.Length == 2)              {                return new Raw(nameAndValue[0]' Double.Parse(statProperties[0]));              }              else              {                return new Raw(nameAndValue[0]' Double.Parse(statProperties[0])' long.Parse(statProperties[2]));              }            case "cg":              // calendargram.key:value|cg|{h'd'w'm'dow}              return new Calendargram(nameAndValue[0]' statProperties[0]' statProperties[2]);            default:              return new InvalidMessage("Unknown message type: " + statProperties[1]);          }
Magic Number,statsd.net.shared.Messages,StatsdMessageFactory,D:\research\architectureSmells\repos\lukevenediger_statsd.net\statsd.net.shared\Messages\StatsdMessageFactory.cs,ParseMessage,The following statement contains a magic number: switch (statProperties[1])          {            case "c":              if (statProperties.Length == 2)              {                // gorets:1|c                return new Counter(nameAndValue[0]' Double.Parse(statProperties[0]));              }              else              {                // gorets:1|c|@0.1                return new Counter(nameAndValue[0]' Double.Parse(statProperties[0])' float.Parse(statProperties[2].Remove(0' 1)));              }            case "ms":              // glork:320|ms              return new Timing(nameAndValue[0]' Double.Parse(statProperties[0]));            case "g":              // gaugor:333|g              return new Gauge(nameAndValue[0]' Double.Parse(statProperties[0]));            case "s":              // uniques:765|s              // uniques:ABSA434As1|s              return new Set(nameAndValue[0]' statProperties[0]);            case "r":              // some.other.value:12312|r              // some.other.value:12312|r|99988883333              if (statProperties.Length == 2)              {                return new Raw(nameAndValue[0]' Double.Parse(statProperties[0]));              }              else              {                return new Raw(nameAndValue[0]' Double.Parse(statProperties[0])' long.Parse(statProperties[2]));              }            case "cg":              // calendargram.key:value|cg|{h'd'w'm'dow}              return new Calendargram(nameAndValue[0]' statProperties[0]' statProperties[2]);            default:              return new InvalidMessage("Unknown message type: " + statProperties[1]);          }
Magic Number,statsd.net.shared.Services,IntervalService,D:\research\architectureSmells\repos\lukevenediger_statsd.net\statsd.net.shared\Services\IntervalService.cs,Cancel,The following statement contains a magic number: _callbackComplete.WaitOne(new TimeSpan(0' 0' 30));
Magic Number,statsd.net.shared.Services,PercentileCalculator,D:\research\architectureSmells\repos\lukevenediger_statsd.net\statsd.net.shared\Services\PercentileCalculator.cs,TryCompute,The following statement contains a magic number: percentile < 0 || percentile > 100
Magic Number,statsd.net.shared.Services,PercentileCalculator,D:\research\architectureSmells\repos\lukevenediger_statsd.net\statsd.net.shared\Services\PercentileCalculator.cs,TryCompute,The following statement contains a magic number: data.Count < 3
Magic Number,statsd.net.shared.Services,PercentileCalculator,D:\research\architectureSmells\repos\lukevenediger_statsd.net\statsd.net.shared\Services\PercentileCalculator.cs,TryCompute,The following statement contains a magic number: percentile == 100
Magic Number,statsd.net.shared.Services,PercentileCalculator,D:\research\architectureSmells\repos\lukevenediger_statsd.net\statsd.net.shared\Services\PercentileCalculator.cs,TryCompute,The following statement contains a magic number: var n = (int)Math.Round((data.Count * (percentile / 100.0)) + 0.5' 0);
Magic Number,statsd.net.shared.Services,PercentileCalculator,D:\research\architectureSmells\repos\lukevenediger_statsd.net\statsd.net.shared\Services\PercentileCalculator.cs,TryCompute,The following statement contains a magic number: var n = (int)Math.Round((data.Count * (percentile / 100.0)) + 0.5' 0);
Magic Number,statsd.net.shared.Services,SystemMetricsService,D:\research\architectureSmells\repos\lukevenediger_statsd.net\statsd.net.shared\Services\SystemMetricsService.cs,SystemMetricsService,The following statement contains a magic number: intervalService = new IntervalService(10);
Magic Number,statsd.net.shared.Structures,TimeWindow,D:\research\architectureSmells\repos\lukevenediger_statsd.net\statsd.net.shared\Structures\TimeWindow.cs,TimeWindow,The following statement contains a magic number: FiveMinute = FIVE_MINUTE + "_" + (now.Minute / 5);
Missing Default,statsd.net.shared,Utility,D:\research\architectureSmells\repos\lukevenediger_statsd.net\statsd.net.shared\Utility.cs,ConvertToTimespan,The following switch statement is missing a default case: switch (character)                      {                          case 's':                              return new TimeSpan(0' 0' value);                          case 'm':                              return new TimeSpan(0' value' 0);                          case 'h':                              return new TimeSpan(value' 0' 0);                          case 'd':                              return new TimeSpan(value' 0' 0' 0);                      }
