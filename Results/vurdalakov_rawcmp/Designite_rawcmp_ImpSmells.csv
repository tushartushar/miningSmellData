Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,Vurdalakov.RawCompare,ZipFile,C:\repos\vurdalakov_rawcmp\src\rawcmp\RawFiles\ZipFile.cs,FindEndOfCentralDirectoryRecordOffset,The length of the parameter endOfCentralDirectoryRecordOffset is 33.
Long Identifier,Vurdalakov.RawCompare,ZipFile,C:\repos\vurdalakov_rawcmp\src\rawcmp\RawFiles\ZipFile.cs,Read,The length of the parameter endOfCentralDirectoryRecordOffset is 33.
Long Statement,Vurdalakov.RawCompare,Application,C:\repos\vurdalakov_rawcmp\src\rawcmp\Application.cs,Help,The length of the statement  "	Console.WriteLine ("Compares raw content of two files' ignoring insignificant data and metadata\n(archive comments' MP3 tags' image thumbnails' etc.)\n"); " is 154.
Long Statement,Vurdalakov.RawCompare,Application,C:\repos\vurdalakov_rawcmp\src\rawcmp\Application.cs,Help,The length of the statement  "	Console.WriteLine ("Exit codes:\n\t0 - files are equal\n\t1 - files are different\n\tN - an error occurred; visit homepage for a list\n\t-1 - invalid command line syntax\n"); " is 174.
Long Statement,Vurdalakov.RawCompare,ZipFileRecord,C:\repos\vurdalakov_rawcmp\src\rawcmp\RawFiles\ZipFile.cs,IsEqualTo,The length of the statement  "	return FileName.ToLower ().Equals (record.FileName.ToLower ()) && (FileSize == record.FileSize) && (FileCrc == record.FileCrc); " is 127.
Long Statement,Vurdalakov.RawCompare,ZipFile,C:\repos\vurdalakov_rawcmp\src\rawcmp\RawFiles\ZipFile.cs,FindEndOfCentralDirectoryRecordOffset,The length of the statement  "				return (binaryReader.GetPosition () + commentSize) == binaryReader.GetLength () ? length - size + endOfCentralDirectoryRecordOffset : -1; " is 137.
Virtual Method Call from Constructor,Vurdalakov,DosToolsApplication,C:\repos\vurdalakov_rawcmp\src\rawcmp\Vurdalakov\DosToolsApplication.cs,DosToolsApplication,The constructor "DosToolsApplication" calls a virtual method "Help".
Magic Number,Vurdalakov.RawCompare,Application,C:\repos\vurdalakov_rawcmp\src\rawcmp\Application.cs,Application,The following statement contains a magic number: if (_commandLineParser.FileNames.Length != 2) {  	Help ();  }  
Magic Number,Vurdalakov.RawCompare,Application,C:\repos\vurdalakov_rawcmp\src\rawcmp\Application.cs,Execute,The following statement contains a magic number: try {  	var fileName1 = _commandLineParser.FileNames [0];  	var fileName2 = _commandLineParser.FileNames [1];  	Print ("Comparing files {0} and {1}"' fileName1' fileName2);  	var rawCompare = new RawCompare ();  	var filesAreEqual = rawCompare.AreEqual (fileName1' fileName2);  	Print (filesAreEqual ? "No differences encountered" : "Files are different");  	return filesAreEqual ? 0 : 1;  }  catch (RawCompareException ex) {  	Print ("Error comparing files: {0}"' ex.Message);  	return ex.ExitCode;  }  catch (Exception ex) {  	Print ("Error comparing files: {0}"' ex.Message);  	return 9;  }  
Magic Number,Vurdalakov.RawCompare,Application,C:\repos\vurdalakov_rawcmp\src\rawcmp\Application.cs,Execute,The following statement contains a magic number: return 9;  
Magic Number,Vurdalakov.RawCompare,RawCompare,C:\repos\vurdalakov_rawcmp\src\rawcmp\RawCompare.cs,AreEqual,The following statement contains a magic number: if (rawFile1.GetType () != rawFile2.GetType ()) {  	throw new RawCompareException (4' "File formats are different");  }  
Magic Number,Vurdalakov.RawCompare,RawCompare,C:\repos\vurdalakov_rawcmp\src\rawcmp\RawCompare.cs,AreEqual,The following statement contains a magic number: throw new RawCompareException (4' "File formats are different");  
Magic Number,Vurdalakov.RawCompare,RawCompare,C:\repos\vurdalakov_rawcmp\src\rawcmp\RawCompare.cs,GetFile,The following statement contains a magic number: throw new RawCompareException (3' "Unsupported file format: {0}"' fileName);  
Magic Number,Vurdalakov.RawCompare,ZipFile,C:\repos\vurdalakov_rawcmp\src\rawcmp\RawFiles\ZipFile.cs,FindEndOfCentralDirectoryRecordOffset,The following statement contains a magic number: if (length < 22) {  	return -1;  	// ZIP file can't be smaller than 22 bytes  }  
Magic Number,Vurdalakov.RawCompare,ZipFile,C:\repos\vurdalakov_rawcmp\src\rawcmp\RawFiles\ZipFile.cs,FindEndOfCentralDirectoryRecordOffset,The following statement contains a magic number: try {  	binaryReader.Seek (-17' SeekOrigin.End);  	do {  		var endOfCentralDirectoryRecordOffset = binaryReader.Seek (-5' SeekOrigin.Current);  		if (_signature == binaryReader.ReadUInt32 ()) {  			binaryReader.Skip (16);  			var commentSize = binaryReader.ReadUInt16 ();  			return (binaryReader.GetPosition () + commentSize) == binaryReader.GetLength () ? length - size + endOfCentralDirectoryRecordOffset : -1;  		}  	}  	while (binaryReader.GetPosition () > 4);  }  catch (Exception ex) {  	Console.WriteLine ("{0}"' ex.Message);  }  
Magic Number,Vurdalakov.RawCompare,ZipFile,C:\repos\vurdalakov_rawcmp\src\rawcmp\RawFiles\ZipFile.cs,FindEndOfCentralDirectoryRecordOffset,The following statement contains a magic number: try {  	binaryReader.Seek (-17' SeekOrigin.End);  	do {  		var endOfCentralDirectoryRecordOffset = binaryReader.Seek (-5' SeekOrigin.Current);  		if (_signature == binaryReader.ReadUInt32 ()) {  			binaryReader.Skip (16);  			var commentSize = binaryReader.ReadUInt16 ();  			return (binaryReader.GetPosition () + commentSize) == binaryReader.GetLength () ? length - size + endOfCentralDirectoryRecordOffset : -1;  		}  	}  	while (binaryReader.GetPosition () > 4);  }  catch (Exception ex) {  	Console.WriteLine ("{0}"' ex.Message);  }  
Magic Number,Vurdalakov.RawCompare,ZipFile,C:\repos\vurdalakov_rawcmp\src\rawcmp\RawFiles\ZipFile.cs,FindEndOfCentralDirectoryRecordOffset,The following statement contains a magic number: try {  	binaryReader.Seek (-17' SeekOrigin.End);  	do {  		var endOfCentralDirectoryRecordOffset = binaryReader.Seek (-5' SeekOrigin.Current);  		if (_signature == binaryReader.ReadUInt32 ()) {  			binaryReader.Skip (16);  			var commentSize = binaryReader.ReadUInt16 ();  			return (binaryReader.GetPosition () + commentSize) == binaryReader.GetLength () ? length - size + endOfCentralDirectoryRecordOffset : -1;  		}  	}  	while (binaryReader.GetPosition () > 4);  }  catch (Exception ex) {  	Console.WriteLine ("{0}"' ex.Message);  }  
Magic Number,Vurdalakov.RawCompare,ZipFile,C:\repos\vurdalakov_rawcmp\src\rawcmp\RawFiles\ZipFile.cs,FindEndOfCentralDirectoryRecordOffset,The following statement contains a magic number: try {  	binaryReader.Seek (-17' SeekOrigin.End);  	do {  		var endOfCentralDirectoryRecordOffset = binaryReader.Seek (-5' SeekOrigin.Current);  		if (_signature == binaryReader.ReadUInt32 ()) {  			binaryReader.Skip (16);  			var commentSize = binaryReader.ReadUInt16 ();  			return (binaryReader.GetPosition () + commentSize) == binaryReader.GetLength () ? length - size + endOfCentralDirectoryRecordOffset : -1;  		}  	}  	while (binaryReader.GetPosition () > 4);  }  catch (Exception ex) {  	Console.WriteLine ("{0}"' ex.Message);  }  
Magic Number,Vurdalakov.RawCompare,ZipFile,C:\repos\vurdalakov_rawcmp\src\rawcmp\RawFiles\ZipFile.cs,FindEndOfCentralDirectoryRecordOffset,The following statement contains a magic number: binaryReader.Seek (-17' SeekOrigin.End);  
Magic Number,Vurdalakov.RawCompare,ZipFile,C:\repos\vurdalakov_rawcmp\src\rawcmp\RawFiles\ZipFile.cs,FindEndOfCentralDirectoryRecordOffset,The following statement contains a magic number: do {  	var endOfCentralDirectoryRecordOffset = binaryReader.Seek (-5' SeekOrigin.Current);  	if (_signature == binaryReader.ReadUInt32 ()) {  		binaryReader.Skip (16);  		var commentSize = binaryReader.ReadUInt16 ();  		return (binaryReader.GetPosition () + commentSize) == binaryReader.GetLength () ? length - size + endOfCentralDirectoryRecordOffset : -1;  	}  }  while (binaryReader.GetPosition () > 4);  
Magic Number,Vurdalakov.RawCompare,ZipFile,C:\repos\vurdalakov_rawcmp\src\rawcmp\RawFiles\ZipFile.cs,FindEndOfCentralDirectoryRecordOffset,The following statement contains a magic number: do {  	var endOfCentralDirectoryRecordOffset = binaryReader.Seek (-5' SeekOrigin.Current);  	if (_signature == binaryReader.ReadUInt32 ()) {  		binaryReader.Skip (16);  		var commentSize = binaryReader.ReadUInt16 ();  		return (binaryReader.GetPosition () + commentSize) == binaryReader.GetLength () ? length - size + endOfCentralDirectoryRecordOffset : -1;  	}  }  while (binaryReader.GetPosition () > 4);  
Magic Number,Vurdalakov.RawCompare,ZipFile,C:\repos\vurdalakov_rawcmp\src\rawcmp\RawFiles\ZipFile.cs,FindEndOfCentralDirectoryRecordOffset,The following statement contains a magic number: do {  	var endOfCentralDirectoryRecordOffset = binaryReader.Seek (-5' SeekOrigin.Current);  	if (_signature == binaryReader.ReadUInt32 ()) {  		binaryReader.Skip (16);  		var commentSize = binaryReader.ReadUInt16 ();  		return (binaryReader.GetPosition () + commentSize) == binaryReader.GetLength () ? length - size + endOfCentralDirectoryRecordOffset : -1;  	}  }  while (binaryReader.GetPosition () > 4);  
Magic Number,Vurdalakov.RawCompare,ZipFile,C:\repos\vurdalakov_rawcmp\src\rawcmp\RawFiles\ZipFile.cs,FindEndOfCentralDirectoryRecordOffset,The following statement contains a magic number: if (_signature == binaryReader.ReadUInt32 ()) {  	binaryReader.Skip (16);  	var commentSize = binaryReader.ReadUInt16 ();  	return (binaryReader.GetPosition () + commentSize) == binaryReader.GetLength () ? length - size + endOfCentralDirectoryRecordOffset : -1;  }  
Magic Number,Vurdalakov.RawCompare,ZipFile,C:\repos\vurdalakov_rawcmp\src\rawcmp\RawFiles\ZipFile.cs,FindEndOfCentralDirectoryRecordOffset,The following statement contains a magic number: binaryReader.Skip (16);  
Magic Number,Vurdalakov.RawCompare,ZipFile,C:\repos\vurdalakov_rawcmp\src\rawcmp\RawFiles\ZipFile.cs,Read,The following statement contains a magic number: binaryReader.Skip (10);  
Magic Number,Vurdalakov.RawCompare,ZipFile,C:\repos\vurdalakov_rawcmp\src\rawcmp\RawFiles\ZipFile.cs,Read,The following statement contains a magic number: binaryReader.Skip (4);  
Magic Number,Vurdalakov.RawCompare,ZipFile,C:\repos\vurdalakov_rawcmp\src\rawcmp\RawFiles\ZipFile.cs,ReadEntry,The following statement contains a magic number: binaryReader.Skip (4);  
Magic Number,Vurdalakov.RawCompare,ZipFile,C:\repos\vurdalakov_rawcmp\src\rawcmp\RawFiles\ZipFile.cs,ReadEntry,The following statement contains a magic number: binaryReader.Skip (6);  
Magic Number,Vurdalakov.RawCompare,ZipFile,C:\repos\vurdalakov_rawcmp\src\rawcmp\RawFiles\ZipFile.cs,ReadEntry,The following statement contains a magic number: binaryReader.Skip (4);  
Magic Number,Vurdalakov.RawCompare,ZipFile,C:\repos\vurdalakov_rawcmp\src\rawcmp\RawFiles\ZipFile.cs,ReadEntry,The following statement contains a magic number: binaryReader.Skip (12);  
Magic Number,Vurdalakov,CommandLineParser,C:\repos\vurdalakov_rawcmp\src\rawcmp\Vurdalakov\CommandLineParser.cs,CommandLineParser,The following statement contains a magic number: foreach (var arg in args) {  	var optionParameterExpected = !String.IsNullOrEmpty (optionName);  	if (arg.StartsWith ("/") || arg.StartsWith ("-")) {  		if (optionParameterExpected) {  			throw new ArgumentException ("Expected option parameter");  		}  		if (arg.EndsWith ("=")) {  			optionName = arg.Substring (1' arg.Length - 2);  		}  		else {  			_options.Add (arg.Substring (1' arg.Length - 1)' "");  		}  	}  	else if (optionParameterExpected) {  		_options.Add (optionName' arg);  		optionName = "";  	}  	else {  		fileNames.Add (arg);  	}  }  
Magic Number,Vurdalakov,CommandLineParser,C:\repos\vurdalakov_rawcmp\src\rawcmp\Vurdalakov\CommandLineParser.cs,CommandLineParser,The following statement contains a magic number: if (arg.StartsWith ("/") || arg.StartsWith ("-")) {  	if (optionParameterExpected) {  		throw new ArgumentException ("Expected option parameter");  	}  	if (arg.EndsWith ("=")) {  		optionName = arg.Substring (1' arg.Length - 2);  	}  	else {  		_options.Add (arg.Substring (1' arg.Length - 1)' "");  	}  }  else if (optionParameterExpected) {  	_options.Add (optionName' arg);  	optionName = "";  }  else {  	fileNames.Add (arg);  }  
Magic Number,Vurdalakov,CommandLineParser,C:\repos\vurdalakov_rawcmp\src\rawcmp\Vurdalakov\CommandLineParser.cs,CommandLineParser,The following statement contains a magic number: if (arg.EndsWith ("=")) {  	optionName = arg.Substring (1' arg.Length - 2);  }  else {  	_options.Add (arg.Substring (1' arg.Length - 1)' "");  }  
Magic Number,Vurdalakov,CommandLineParser,C:\repos\vurdalakov_rawcmp\src\rawcmp\Vurdalakov\CommandLineParser.cs,CommandLineParser,The following statement contains a magic number: optionName = arg.Substring (1' arg.Length - 2);  
Magic Number,Vurdalakov,BinaryReaderExtensions,C:\repos\vurdalakov_rawcmp\src\rawcmp\Vurdalakov\BinaryReaderExtensions.cs,ReadInt32BigEndian,The following statement contains a magic number: SwapBytes (array' 0' 3);  
Magic Number,Vurdalakov,BinaryReaderExtensions,C:\repos\vurdalakov_rawcmp\src\rawcmp\Vurdalakov\BinaryReaderExtensions.cs,ReadInt32BigEndian,The following statement contains a magic number: SwapBytes (array' 1' 2);  
Magic Number,Vurdalakov,BinaryReaderExtensions,C:\repos\vurdalakov_rawcmp\src\rawcmp\Vurdalakov\BinaryReaderExtensions.cs,ReadUInt32BigEndian,The following statement contains a magic number: SwapBytes (array' 0' 3);  
Magic Number,Vurdalakov,BinaryReaderExtensions,C:\repos\vurdalakov_rawcmp\src\rawcmp\Vurdalakov\BinaryReaderExtensions.cs,ReadUInt32BigEndian,The following statement contains a magic number: SwapBytes (array' 1' 2);  
