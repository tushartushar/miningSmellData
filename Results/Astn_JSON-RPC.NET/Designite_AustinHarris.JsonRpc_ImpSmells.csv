Implementation smell,Namespace,Class,File,Method,Description
Long Method,AustinHarris.JsonRpc,Handler,D:\research\architectureSmells\repos\Astn_JSON-RPC.NET\Json-Rpc\Handler.cs,Handle,The method has 178 lines of code.
Long Method,AustinHarris.JsonRpc,JsonRpcProcessor,D:\research\architectureSmells\repos\Astn_JSON-RPC.NET\Json-Rpc\JsonRpcProcessor.cs,ProcessInternal,The method has 113 lines of code.
Complex Method,AustinHarris.JsonRpc,Handler,D:\research\architectureSmells\repos\Astn_JSON-RPC.NET\Json-Rpc\Handler.cs,Handle,Cyclomatic complexity of the method is 17
Complex Method,AustinHarris.JsonRpc,Handler,D:\research\architectureSmells\repos\Astn_JSON-RPC.NET\Json-Rpc\Handler.cs,CleanUpParameter,Cyclomatic complexity of the method is 10
Complex Method,AustinHarris.JsonRpc,JsonRpcProcessor,D:\research\architectureSmells\repos\Astn_JSON-RPC.NET\Json-Rpc\JsonRpcProcessor.cs,ProcessInternal,Cyclomatic complexity of the method is 15
Complex Method,AustinHarris.JsonRpc,SMDAdditionalParameters,D:\research\architectureSmells\repos\Astn_JSON-RPC.NET\Json-Rpc\SMDService.cs,GetTypeRecursive,Cyclomatic complexity of the method is 11
Long Parameter List,AustinHarris.JsonRpc,SMDService,D:\research\architectureSmells\repos\Astn_JSON-RPC.NET\Json-Rpc\SMDService.cs,SMDService,The method has 5 parameters. Parameters: transport' envelope' parameters' defaultValues' dele
Long Identifier,AustinHarris.JsonRpc,Handler,D:\research\architectureSmells\repos\Astn_JSON-RPC.NET\Json-Rpc\Handler.cs,RegisterFuction,The length of the parameter parameterNameDefaultValueMapping is 32.
Long Statement,AustinHarris.JsonRpc,Handler,D:\research\architectureSmells\repos\Astn_JSON-RPC.NET\Json-Rpc\Handler.cs,Handle,The length of the statement  "            if (paramCount == metaDataParamCount - 1 && metadata.parameters[metaDataParamCount - 1].ObjectType.Name.Equals(Name_of_JSONRPCEXCEPTION)) " is 137.
Long Statement,AustinHarris.JsonRpc,Handler,D:\research\architectureSmells\repos\Astn_JSON-RPC.NET\Json-Rpc\Handler.cs,Handle,The length of the statement  "            if (parameters.Length < metaDataParamCount && metadata.defaultValues.Length > 0) // rpc call didn't set values for all optional parameters' so we need to assign the default values for them. " is 189.
Long Statement,AustinHarris.JsonRpc,Handler,D:\research\architectureSmells\repos\Astn_JSON-RPC.NET\Json-Rpc\Handler.cs,Handle,The length of the statement  "                var suppliedParamsCount = parameters.Length; // the index we should start storing default values of optional parameters. " is 120.
Long Statement,AustinHarris.JsonRpc,Handler,D:\research\architectureSmells\repos\Astn_JSON-RPC.NET\Json-Rpc\Handler.cs,Handle,The length of the statement  "                var missingParamsCount = metaDataParamCount - parameters.Length; // the amount of optional parameters without a value set by rpc-call. " is 134.
Long Statement,AustinHarris.JsonRpc,Handler,D:\research\architectureSmells\repos\Astn_JSON-RPC.NET\Json-Rpc\Handler.cs,Handle,The length of the statement  "                Array.Resize(ref parameters' parameters.Length + missingParamsCount); // resize the array to include all optional parameters. " is 125.
Long Statement,AustinHarris.JsonRpc,Handler,D:\research\architectureSmells\repos\Astn_JSON-RPC.NET\Json-Rpc\Handler.cs,Handle,The length of the statement  "                for (int paramIndex = parameters.Length - 1' defaultIndex = metadata.defaultValues.Length - 1;     // fill missing parameters from the back  " is 139.
Long Statement,AustinHarris.JsonRpc,Handler,D:\research\architectureSmells\repos\Astn_JSON-RPC.NET\Json-Rpc\Handler.cs,Handle,The length of the statement  "                    paramIndex >= suppliedParamsCount && defaultIndex >= 0;                                        // to don't overwrite supplied ones. " is 131.
Long Statement,AustinHarris.JsonRpc,Handler,D:\research\architectureSmells\repos\Astn_JSON-RPC.NET\Json-Rpc\Handler.cs,Handle,The length of the statement  "                    response = new JsonResponse() { Error = ProcessException(Rpc' new JsonRpcException(-32603' "Internal Error"' ex.InnerException)) }; " is 131.
Long Statement,AustinHarris.JsonRpc,Handler,D:\research\architectureSmells\repos\Astn_JSON-RPC.NET\Json-Rpc\Handler.cs,PostProcess,The length of the statement  "                    response = new JsonResponse() { Error = ProcessException(request' new JsonRpcException(-32603' "Internal Error"' ex)) }; " is 120.
Long Statement,AustinHarris.JsonRpc,ServiceBinder,D:\research\architectureSmells\repos\Astn_JSON-RPC.NET\Json-Rpc\ServiceBinder.cs,BindService,The length of the statement  "            var methods = item.GetMethods(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance).Where(m => m.GetCustomAttributes(typeof(JsonRpcMethodAttribute)' false).Length > 0); " is 184.
Long Statement,AustinHarris.JsonRpc,ServiceBinder,D:\research\architectureSmells\repos\Astn_JSON-RPC.NET\Json-Rpc\ServiceBinder.cs,BindService,The length of the statement  "                Dictionary<string' object> defaultValues = new Dictionary<string' object>(); // dictionary that holds default values for optional params. " is 137.
Long Statement,AustinHarris.JsonRpc,ServiceBinder,D:\research\architectureSmells\repos\Astn_JSON-RPC.NET\Json-Rpc\ServiceBinder.cs,BindService,The length of the statement  "                    var newDel = Delegate.CreateDelegate(System.Linq.Expressions.Expression.GetDelegateType(paras.Values.ToArray())' instance /*Need to add support for other methods outside of this instance*/' meth); " is 196.
Complex Conditional,AustinHarris.JsonRpc,SMDAdditionalParameters,D:\research\architectureSmells\repos\Astn_JSON-RPC.NET\Json-Rpc\SMDService.cs,isSimpleType,The conditional expression  "name.Contains("newtonsoft")                  || name == "system.sbyte"                  || name == "system.byte"                  || name == "system.int16"                  || name == "system.uint16"                  || name == "system.int32"                  || name == "system.uint32"                  || name == "system.int64"                  || name == "system.uint64"                  || name == "system.char"                  || name == "system.single"                  || name == "system.double"                  || name == "system.boolean"                  || name == "system.decimal"                  || name == "system.float"                  || name == "system.numeric"                  || name == "system.money"                  || name == "system.string"                  || name == "system.object"                  || name == "system.type"                 // || name == "system.datetime"                  || name == "system.reflection.membertypes""  is complex.
Empty Catch Block,AustinHarris.JsonRpc,Handler,D:\research\architectureSmells\repos\Astn_JSON-RPC.NET\Json-Rpc\Handler.cs,CleanUpParameter,The method has an empty catch block.
Empty Catch Block,AustinHarris.JsonRpc,Handler,D:\research\architectureSmells\repos\Astn_JSON-RPC.NET\Json-Rpc\Handler.cs,CleanUpParameter,The method has an empty catch block.
Magic Number,AustinHarris.JsonRpc,Handler,D:\research\architectureSmells\repos\Astn_JSON-RPC.NET\Json-Rpc\Handler.cs,Handle,The following statement contains a magic number: JsonResponse response = new JsonResponse                      {                          Error = ProcessException(Rpc'                              new JsonRpcException(-32602'                                  "Invalid params"'                                  string.Format(                                      "Number of default parameters {0} not sufficient to fill all missing parameters {1}"'                                      metadata.defaultValues.Length' missingParamsCount)                                  ))'                          Id = Rpc.Id                      };
Magic Number,AustinHarris.JsonRpc,Handler,D:\research\architectureSmells\repos\Astn_JSON-RPC.NET\Json-Rpc\Handler.cs,Handle,The following statement contains a magic number: JsonResponse response = new JsonResponse()                  {                      Error = ProcessException(Rpc'                      new JsonRpcException(-32602'                          "Invalid params"'                          string.Format("Expecting {0} parameters' and received {1}"'                                          metadata.parameters.Length'                                          parameters.Length)                          ))'                      Id = Rpc.Id                  };
Magic Number,AustinHarris.JsonRpc,JsonRpcProcessor,D:\research\architectureSmells\repos\Astn_JSON-RPC.NET\Json-Rpc\JsonRpcProcessor.cs,ProcessInternal,The following statement contains a magic number: return Newtonsoft.Json.JsonConvert.SerializeObject(new JsonResponse                  {                      Error = handler.ProcessParseException(jsonRpc'                          new JsonRpcException(3200' "Invalid Request"' "Batch of calls was empty."))                  });
Magic Number,AustinHarris.JsonRpc,JsonRpcProcessor,D:\research\architectureSmells\repos\Astn_JSON-RPC.NET\Json-Rpc\JsonRpcProcessor.cs,ProcessInternal,The following statement contains a magic number: jsonResponse.Error = handler.ProcessParseException(jsonRpc'                          new JsonRpcException(-32700' "Parse error"'                              "Invalid JSON was received by the server. An error occurred on the server while parsing the JSON text."));
