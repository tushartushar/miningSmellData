Implementation smell,Namespace,Class,File,Method,Description
Long Method,MonoBerry.Tool,Package,C:\research\architectureSmells\repos\roblillack_monoberry\tooling\Package.cs,CreateAppDescriptor,The method has 171 lines of code.
Complex Method,MonoBerry.Tool,Package,C:\research\architectureSmells\repos\roblillack_monoberry\tooling\Package.cs,CreateAppDescriptor,Cyclomatic complexity of the method is 17
Long Statement,MonoBerry.Tool,Package,C:\research\architectureSmells\repos\roblillack_monoberry\tooling\Package.cs,CreateAppDescriptor,The length of the statement  "				throw new ArgumentException (String.Format ("Target Framework {0} not compatible with MonoBerry! Please compile for v4.5"'" is 122.
Long Statement,MonoBerry.Tool,Package,C:\research\architectureSmells\repos\roblillack_monoberry\tooling\Package.cs,CreateAppDescriptor,The length of the statement  "				xml.WriteElementString ("versionNumber"' String.Format("{0}.{1}.{2}"' assembly.GetName ().Version.Major' assembly.GetName ().Version.Minor' assembly.GetName ().Version.Build));" is 176.
Long Statement,MonoBerry.Tool,Package,C:\research\architectureSmells\repos\roblillack_monoberry\tooling\Package.cs,CreateAppDescriptor,The length of the statement  "				xml.WriteAttributeString ("path"' Path.Combine (Application.Configuration.Location' "target"' arch.Name' "bin"' "mono"));" is 121.
Long Statement,MonoBerry.Tool,Package,C:\research\architectureSmells\repos\roblillack_monoberry\tooling\Package.cs,CreateAppDescriptor,The length of the statement  "				//xml.WriteElementString ("arg"' "--trace=N:OpenTK'N:OpenTK.Graphics.ES10'OpenTK.Graphics.ES11'OpenTK.Graphics.ES20'N:OpenTK.Platform.Egl'N:OpenTK.Platform.BlackBerry'N:OpenTK.Platform'N:OpenTK.Graphics'program");" is 213.
Empty Catch Block,MonoBerry.Tool,Shell,C:\research\architectureSmells\repos\roblillack_monoberry\tooling\Shell.cs,SetupDaemon,The method has an empty catch block.
Magic Number,MonoBerry.Tool,Configuration,C:\research\architectureSmells\repos\roblillack_monoberry\tooling\Configuration.cs,Get,The following statement contains a magic number: string[] secKey = absoluteKey.Split (new[] { 				'.' 			}' 2);
Magic Number,MonoBerry.Tool,Configuration,C:\research\architectureSmells\repos\roblillack_monoberry\tooling\Configuration.cs,Get,The following statement contains a magic number: return Get (secKey.Length < 2 ? DEFAULT_SECTION : secKey [0]' secKey [secKey.Length < 2 ? 0 : 1]);
Magic Number,MonoBerry.Tool,Configuration,C:\research\architectureSmells\repos\roblillack_monoberry\tooling\Configuration.cs,Get,The following statement contains a magic number: return Get (secKey.Length < 2 ? DEFAULT_SECTION : secKey [0]' secKey [secKey.Length < 2 ? 0 : 1]);
Magic Number,MonoBerry.Tool,Extensions,C:\research\architectureSmells\repos\roblillack_monoberry\tooling\Extensions.cs,Unescape,The following statement contains a magic number: me.Substring(i' 2).Equals (@"\n")
Magic Number,MonoBerry.Tool,Complete,C:\research\architectureSmells\repos\roblillack_monoberry\tooling\Complete.cs,Execute,The following statement contains a magic number: string current = parameters.Count > 2 ? parameters [1] : "";
Magic Number,MonoBerry.Tool,Package,C:\research\architectureSmells\repos\roblillack_monoberry\tooling\Package.cs,ResolveDependency,The following statement contains a magic number: return assembly.CodeBase.StartsWith ("file://") ? assembly.CodeBase.Substring (7) : assembly.CodeBase;
Magic Number,MonoBerry.Tool,Package,C:\research\architectureSmells\repos\roblillack_monoberry\tooling\Package.cs,CreateAppDescriptor,The following statement contains a magic number: id == null || id.Length < 10
Magic Number,MonoBerry.Tool,Package,C:\research\architectureSmells\repos\roblillack_monoberry\tooling\Package.cs,CreateAppDescriptor,The following statement contains a magic number: name == null || name.Title.Length < 3
Magic Number,MonoBerry.Tool,Package,C:\research\architectureSmells\repos\roblillack_monoberry\tooling\Package.cs,CreateAppDescriptor,The following statement contains a magic number: monopath = UpPath (path' 4);
Magic Number,MonoBerry.Tool,Shell,C:\research\architectureSmells\repos\roblillack_monoberry\tooling\Shell.cs,Execute,The following statement contains a magic number: Thread.Sleep (100);
Magic Number,MonoBerry.Tool,Shell,C:\research\architectureSmells\repos\roblillack_monoberry\tooling\Shell.cs,Execute,The following statement contains a magic number: Thread.Sleep (1000);
Magic Number,MonoBerry.Tool,Deploy,C:\research\architectureSmells\repos\roblillack_monoberry\tooling\Deploy.cs,GetDevice,The following statement contains a magic number: parameters.Count == 2
Missing Default,MonoBerry.Tool,Configuration,C:\research\architectureSmells\repos\roblillack_monoberry\tooling\Configuration.cs,Get,The following switch statement is missing a default case: switch (key) { 				case "location": return FindLocation (); 				case "ndk_tools_dir": return FindNDKToolsDir (); 				case "debug_token": return Path.Combine (DefaultConfigDir' "debugtoken.bar"); 				case "private_key": return Path.Combine (DefaultConfigDir' "id_rsa"); 				case "public_key": return Path.Combine (DefaultConfigDir' "id_rsa.pub"); 				}
Missing Default,MonoBerry.Tool,Extensions,C:\research\architectureSmells\repos\roblillack_monoberry\tooling\Extensions.cs,ReadPassword,The following switch statement is missing a default case: switch (key.Key) { 				case ConsoleKey.Backspace: 					if (stack.Count > 0) { 						stack.Pop (); 					} 					continue; 				case ConsoleKey.Enter: 					Console.WriteLine (); 					return stack.Reverse ().Join (); 				}
Missing Default,MonoBerry.Tool,Package,C:\research\architectureSmells\repos\roblillack_monoberry\tooling\Package.cs,GetTargetFramework,The following switch statement is missing a default case: switch (attr != null ? attr.FrameworkName : null) { 			case ".NETFramework'Version=v4.5": 				return TargetFramework.NET_4_5; 			case ".NETFramework'Version=v4.0": 				return TargetFramework.NET_4_0; 			}
Missing Default,MonoBerry.Tool,Architecture,C:\research\architectureSmells\repos\roblillack_monoberry\tooling\Architecture.cs,FromName,The following switch statement is missing a default case: switch (name.Trim ().ToLower ()) { 			case "armle-v7": 				return ARM; 			case "x86": 				return X86; 			}
