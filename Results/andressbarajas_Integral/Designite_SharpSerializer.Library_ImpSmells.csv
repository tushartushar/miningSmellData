Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Polenter.Serialization.Advanced,BinaryPropertyDeserializer,C:\repos\andressbarajas_Integral\SharpSerializer.Library\Advanced\BinaryPropertyDeserializer.cs,deserialize,Cyclomatic complexity of the method is 13
Complex Method,Polenter.Serialization.Advanced,BinaryPropertyDeserializer,C:\repos\andressbarajas_Integral\SharpSerializer.Library\Advanced\BinaryPropertyDeserializer.cs,createProperty,Cyclomatic complexity of the method is 13
Complex Method,Polenter.Serialization.Advanced,XmlPropertyDeserializer,C:\repos\andressbarajas_Integral\SharpSerializer.Library\Advanced\XmlPropertyDeserializer.cs,deserialize,Cyclomatic complexity of the method is 11
Complex Method,Polenter.Serialization.Core,Tools,C:\repos\andressbarajas_Integral\SharpSerializer.Library\Core\Tools.cs,IsSimple,Cyclomatic complexity of the method is 9
Complex Method,Polenter.Serialization.Core,Property,C:\repos\andressbarajas_Integral\SharpSerializer.Library\Core\Property.cs,CreateInstance,Cyclomatic complexity of the method is 10
Complex Method,Polenter.Serialization.Core.Binary,BinaryWriterTools,C:\repos\andressbarajas_Integral\SharpSerializer.Library\Core\Binary\BinaryWriterTools.cs,WriteNumber,Cyclomatic complexity of the method is 10
Complex Method,Polenter.Serialization.Core.Binary,BinaryWriterTools,C:\repos\andressbarajas_Integral\SharpSerializer.Library\Core\Binary\BinaryWriterTools.cs,writeValueCore,Cyclomatic complexity of the method is 22
Complex Method,Polenter.Serialization.Serializing,TypeInfo,C:\repos\andressbarajas_Integral\SharpSerializer.Library\Serializing\TypeInfo.cs,GetTypeInfo,Cyclomatic complexity of the method is 9
Long Identifier,Polenter.Serialization.Advanced,BinaryPropertyDeserializer,C:\repos\andressbarajas_Integral\SharpSerializer.Library\Advanced\BinaryPropertyDeserializer.cs,deserialize,The length of the parameter singleDimensionalArrayProperty is 30.
Long Identifier,Polenter.Serialization.Advanced,XmlPropertyDeserializer,C:\repos\andressbarajas_Integral\SharpSerializer.Library\Advanced\XmlPropertyDeserializer.cs,deserialize,The length of the parameter singleDimensionalArrayProperty is 30.
Long Identifier,Polenter.Serialization.Advanced.Serializing,PropertySerializer,C:\repos\andressbarajas_Integral\SharpSerializer.Library\Advanced\Serializing\PropertySerializer.cs,serializeReferenceTarget,The length of the parameter singleDimensionalArrayProperty is 30.
Long Identifier,Polenter.Serialization.Deserializing,ObjectFactory,C:\repos\andressbarajas_Integral\SharpSerializer.Library\Deserializing\ObjectFactory.cs,createObjectCore,The length of the parameter singleDimensionalArrayProperty is 30.
Long Statement,Polenter.Serialization.Advanced,BinaryPropertySerializer,C:\repos\andressbarajas_Integral\SharpSerializer.Library\Advanced\BinaryPropertySerializer.cs,SerializeMultiDimensionalArrayProperty,The length of the statement  "	if (!writePropertyHeaderWithReferenceId (Elements.MultiArrayWithId' property.Property.Reference' property.Name' property.ValueType)) { " is 134.
Long Statement,Polenter.Serialization.Advanced,BinaryPropertySerializer,C:\repos\andressbarajas_Integral\SharpSerializer.Library\Advanced\BinaryPropertySerializer.cs,SerializeSingleDimensionalArrayProperty,The length of the statement  "	if (!writePropertyHeaderWithReferenceId (Elements.SingleArrayWithId' property.Property.Reference' property.Name' property.ValueType)) { " is 135.
Long Statement,Polenter.Serialization.Advanced,BinaryPropertySerializer,C:\repos\andressbarajas_Integral\SharpSerializer.Library\Advanced\BinaryPropertySerializer.cs,SerializeDictionaryProperty,The length of the statement  "	if (!writePropertyHeaderWithReferenceId (Elements.DictionaryWithId' property.Property.Reference' property.Name' property.ValueType)) { " is 134.
Long Statement,Polenter.Serialization.Advanced,BinaryPropertySerializer,C:\repos\andressbarajas_Integral\SharpSerializer.Library\Advanced\BinaryPropertySerializer.cs,SerializeCollectionProperty,The length of the statement  "	if (!writePropertyHeaderWithReferenceId (Elements.CollectionWithId' property.Property.Reference' property.Name' property.ValueType)) { " is 134.
Long Statement,Polenter.Serialization.Advanced,BinaryPropertySerializer,C:\repos\andressbarajas_Integral\SharpSerializer.Library\Advanced\BinaryPropertySerializer.cs,SerializeComplexProperty,The length of the statement  "	if (!writePropertyHeaderWithReferenceId (Elements.ComplexObjectWithId' property.Property.Reference' property.Name' property.ValueType)) { " is 137.
Long Statement,Polenter.Serialization.Advanced,DefaultXmlReader,C:\repos\andressbarajas_Integral\SharpSerializer.Library\Advanced\DefaultXmlReader.cs,ReadSubElements,The length of the statement  "	// http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&l=EN-US&k=k%28SYSTEM.XML.XMLREADER.READSUBTREE%29;k%28TargetFrameworkMoniker-%22.NETFRAMEWORK%2cVERSION%3dV2.0%22%29;k%28DevLang-CSHARP%29&rd=true " is 210.
Long Statement,Polenter.Serialization.Advanced,XmlPropertyDeserializer,C:\repos\andressbarajas_Integral\SharpSerializer.Library\Advanced\XmlPropertyDeserializer.cs,parseCollectionProperty,The length of the statement  "	property.ElementType = property.Type != null ? Polenter.Serialization.Serializing.TypeInfo.GetTypeInfo (property.Type' _simpleTypes).ElementType : null; " is 152.
Long Statement,Polenter.Serialization.Advanced,XmlPropertyDeserializer,C:\repos\andressbarajas_Integral\SharpSerializer.Library\Advanced\XmlPropertyDeserializer.cs,parseMultiDimensionalArrayProperty,The length of the statement  "	property.ElementType = property.Type != null ? Polenter.Serialization.Serializing.TypeInfo.GetTypeInfo (property.Type' _simpleTypes).ElementType : null; " is 152.
Long Statement,Polenter.Serialization.Advanced,XmlPropertyDeserializer,C:\repos\andressbarajas_Integral\SharpSerializer.Library\Advanced\XmlPropertyDeserializer.cs,parseSingleDimensionalArrayProperty,The length of the statement  "	property.ElementType = property.Type != null ? Polenter.Serialization.Serializing.TypeInfo.GetTypeInfo (property.Type' _simpleTypes).ElementType : null; " is 152.
Long Statement,Polenter.Serialization.Advanced,SimpleValueConverter,C:\repos\andressbarajas_Integral\SharpSerializer.Library\Advanced\SimpleValueConverter.cs,ConvertFromString,The length of the statement  "		throw new SimpleValueParsingException (string.Format ("Invalid value: {0}. See details in the inner exception."' text)' ex); " is 124.
Long Statement,Polenter.Serialization.Core,Tools,C:\repos\andressbarajas_Integral\SharpSerializer.Library\Core\Tools.cs,CreateInstance,The length of the statement  "		throw new CreatingInstanceException (string.Format ("Error during creating an object. Please check if the type \"{0}\" has public parameterless constructor' or if the settings IncludeAssemblyVersionInTypeName' IncludeCultureInTypeName' IncludePublicKeyTokenInTypeName are set to true. Details are in the inner exception."' type.AssemblyQualifiedName)' ex); " is 356.
Long Statement,Polenter.Serialization.Core,ComplexProperty,C:\repos\andressbarajas_Integral\SharpSerializer.Library\Core\Property.cs,MakeFlatCopyFrom,The length of the statement  "		throw new InvalidCastException (string.Format ("Invalid property type to make a flat copy. Expected {0}' current {1}"' typeof(ComplexProperty)' source.GetType ())); " is 164.
Long Statement,Polenter.Serialization.Core,CollectionProperty,C:\repos\andressbarajas_Integral\SharpSerializer.Library\Core\Property.cs,MakeFlatCopyFrom,The length of the statement  "		throw new InvalidCastException (string.Format ("Invalid property type to make a flat copy. Expected {0}' current {1}"' typeof(CollectionProperty)' source.GetType ())); " is 167.
Long Statement,Polenter.Serialization.Core,DictionaryProperty,C:\repos\andressbarajas_Integral\SharpSerializer.Library\Core\Property.cs,MakeFlatCopyFrom,The length of the statement  "		throw new InvalidCastException (string.Format ("Invalid property type to make a flat copy. Expected {0}' current {1}"' typeof(DictionaryProperty)' source.GetType ())); " is 167.
Long Statement,Polenter.Serialization.Core,SingleDimensionalArrayProperty,C:\repos\andressbarajas_Integral\SharpSerializer.Library\Core\Property.cs,MakeFlatCopyFrom,The length of the statement  "		throw new InvalidCastException (string.Format ("Invalid property type to make a flat copy. Expected {0}' current {1}"' typeof(SingleDimensionalArrayProperty)' source.GetType ())); " is 179.
Long Statement,Polenter.Serialization.Core,MultiDimensionalArrayProperty,C:\repos\andressbarajas_Integral\SharpSerializer.Library\Core\Property.cs,MakeFlatCopyFrom,The length of the statement  "		throw new InvalidCastException (string.Format ("Invalid property type to make a flat copy. Expected {0}' current {1}"' typeof(SingleDimensionalArrayProperty)' source.GetType ())); " is 179.
Long Statement,Polenter.Serialization,SharpSerializer,C:\repos\andressbarajas_Integral\SharpSerializer.Library\SharpSerializer.cs,initialize,The length of the statement  "	ITypeNameConverter typeNameConverter = settings.AdvancedSettings.TypeNameConverter ?? DefaultInitializer.GetTypeNameConverter (settings.IncludeAssemblyVersionInTypeName' settings.IncludeCultureInTypeName' settings.IncludePublicKeyTokenInTypeName); " is 247.
Long Statement,Polenter.Serialization,SharpSerializer,C:\repos\andressbarajas_Integral\SharpSerializer.Library\SharpSerializer.cs,initialize,The length of the statement  "	ISimpleValueConverter simpleValueConverter = settings.AdvancedSettings.SimpleValueConverter ?? DefaultInitializer.GetSimpleValueConverter (settings.Culture' typeNameConverter); " is 176.
Long Statement,Polenter.Serialization,SharpSerializer,C:\repos\andressbarajas_Integral\SharpSerializer.Library\SharpSerializer.cs,initialize,The length of the statement  "	ITypeNameConverter typeNameConverter = settings.AdvancedSettings.TypeNameConverter ?? DefaultInitializer.GetTypeNameConverter (settings.IncludeAssemblyVersionInTypeName' settings.IncludeCultureInTypeName' settings.IncludePublicKeyTokenInTypeName); " is 247.
Long Statement,Polenter.Serialization.Core.Binary,BinaryReaderTools,C:\repos\andressbarajas_Integral\SharpSerializer.Library\Core\Binary\BinaryReaderTools.cs,readValueCore,The length of the statement  "		throw new SimpleValueParsingException (string.Format ("Invalid type: {0}. See details in the inner exception."' type)' ex); " is 123.
Long Statement,Polenter.Serialization.Serializing,PropertyFactory,C:\repos\andressbarajas_Integral\SharpSerializer.Library\Serializing\PropertyFactory.cs,CreateProperty,The length of the statement  "	handled = handled || fillMultiDimensionalArrayProperty (referenceTarget as MultiDimensionalArrayProperty' typeInfo' value); " is 123.
Long Statement,Polenter.Serialization.Advanced.Serializing,PropertySerializer,C:\repos\andressbarajas_Integral\SharpSerializer.Library\Advanced\Serializing\PropertySerializer.cs,SerializeCore,The length of the statement  "		SerializeNullProperty (new PropertyTypeInfo<NullProperty> (nullProperty' property.ExpectedPropertyType' property.ValueType)); " is 125.
Long Statement,Polenter.Serialization.Advanced.Serializing,PropertySerializer,C:\repos\andressbarajas_Integral\SharpSerializer.Library\Advanced\Serializing\PropertySerializer.cs,SerializeCore,The length of the statement  "		SerializeSimpleProperty (new PropertyTypeInfo<SimpleProperty> (simpleProperty' property.ExpectedPropertyType' property.ValueType)); " is 131.
Long Statement,Polenter.Serialization.Advanced.Serializing,PropertySerializer,C:\repos\andressbarajas_Integral\SharpSerializer.Library\Advanced\Serializing\PropertySerializer.cs,SerializeCore,The length of the statement  "		if (serializeReferenceTarget (new PropertyTypeInfo<ReferenceTargetProperty> (referenceTarget' property.ExpectedPropertyType' property.ValueType))) { " is 148.
Long Statement,Polenter.Serialization.Advanced.Serializing,PropertySerializer,C:\repos\andressbarajas_Integral\SharpSerializer.Library\Advanced\Serializing\PropertySerializer.cs,serializeReferenceTarget,The length of the statement  "		SerializeMultiDimensionalArrayProperty (new PropertyTypeInfo<MultiDimensionalArrayProperty> (multiDimensionalArrayProperty' property.ExpectedPropertyType' property.ValueType)); " is 176.
Long Statement,Polenter.Serialization.Advanced.Serializing,PropertySerializer,C:\repos\andressbarajas_Integral\SharpSerializer.Library\Advanced\Serializing\PropertySerializer.cs,serializeReferenceTarget,The length of the statement  "		SerializeSingleDimensionalArrayProperty (new PropertyTypeInfo<SingleDimensionalArrayProperty> (singleDimensionalArrayProperty' property.ExpectedPropertyType' property.ValueType)); " is 179.
Long Statement,Polenter.Serialization.Advanced.Serializing,PropertySerializer,C:\repos\andressbarajas_Integral\SharpSerializer.Library\Advanced\Serializing\PropertySerializer.cs,serializeReferenceTarget,The length of the statement  "		SerializeDictionaryProperty (new PropertyTypeInfo<DictionaryProperty> (dictionaryProperty' property.ExpectedPropertyType' property.ValueType)); " is 143.
Long Statement,Polenter.Serialization.Advanced.Serializing,PropertySerializer,C:\repos\andressbarajas_Integral\SharpSerializer.Library\Advanced\Serializing\PropertySerializer.cs,serializeReferenceTarget,The length of the statement  "		SerializeCollectionProperty (new PropertyTypeInfo<CollectionProperty> (collectionProperty' property.ExpectedPropertyType' property.ValueType)); " is 143.
Long Statement,Polenter.Serialization.Advanced.Serializing,PropertySerializer,C:\repos\andressbarajas_Integral\SharpSerializer.Library\Advanced\Serializing\PropertySerializer.cs,serializeReferenceTarget,The length of the statement  "		SerializeComplexProperty (new PropertyTypeInfo<ComplexProperty> (complexProperty' property.ExpectedPropertyType' property.ValueType)); " is 134.
Empty Catch Block,Polenter.Serialization.Advanced,XmlPropertyDeserializer,C:\repos\andressbarajas_Integral\SharpSerializer.Library\Advanced\XmlPropertyDeserializer.cs,addAttributes,The method has an empty catch block.
Magic Number,Polenter.Serialization.Advanced,BinaryPropertySerializer,C:\repos\andressbarajas_Integral\SharpSerializer.Library\Advanced\BinaryPropertySerializer.cs,writePropertyHeaderWithReferenceId,The following statement contains a magic number: if (info.Count < 2)  	// no need to write id  	return false;  
Magic Number,Polenter.Serialization.Core,ArrayAnalyzer,C:\repos\andressbarajas_Integral\SharpSerializer.Library\Core\ArrayAnalyzer.cs,ForEach,The following statement contains a magic number: for (int index = dimensionInfo.LowerBound; index < dimensionInfo.LowerBound + dimensionInfo.Length; index++) {  	var result = new List<int> ();  	// Adding the first coordinate  	result.Add (index);  	if (_arrayInfo.DimensionInfos.Count < 2) {  		// only one dimension  		action.Invoke (result.ToArray ());  		continue;  	}  	// further dimensions  	forEach (_arrayInfo.DimensionInfos' 1' result' action);  }  
Magic Number,Polenter.Serialization.Core,ArrayAnalyzer,C:\repos\andressbarajas_Integral\SharpSerializer.Library\Core\ArrayAnalyzer.cs,ForEach,The following statement contains a magic number: if (_arrayInfo.DimensionInfos.Count < 2) {  	// only one dimension  	action.Invoke (result.ToArray ());  	continue;  }  
Magic Number,Polenter.Serialization.Core.Binary,BinaryReaderTools,C:\repos\andressbarajas_Integral\SharpSerializer.Library\Core\Binary\BinaryReaderTools.cs,readValueCore,The following statement contains a magic number: try {  	if (type == typeof(byte[]))  		return readArrayOfByte (reader);  	if (type == typeof(string))  		return reader.ReadString ();  	if (type == typeof(Boolean))  		return reader.ReadBoolean ();  	if (type == typeof(Byte))  		return reader.ReadByte ();  	if (type == typeof(Char))  		return reader.ReadChar ();  	if (type == typeof(DateTime))  		return new DateTime (reader.ReadInt64 ());  	if (type == typeof(Guid))  		return new Guid (reader.ReadBytes (16));  	#if DEBUG || Smartphone || SILVERLIGHT  	if (type == typeof(decimal))  		return readDecimal (reader);  	#else  	                if (type == typeof (Decimal)) return reader.ReadDecimal(); #endif  	if (type == typeof(Double))  		return reader.ReadDouble ();  	if (type == typeof(Int16))  		return reader.ReadInt16 ();  	if (type == typeof(Int32))  		return reader.ReadInt32 ();  	if (type == typeof(Int64))  		return reader.ReadInt64 ();  	if (type == typeof(SByte))  		return reader.ReadSByte ();  	if (type == typeof(Single))  		return reader.ReadSingle ();  	if (type == typeof(UInt16))  		return reader.ReadUInt16 ();  	if (type == typeof(UInt32))  		return reader.ReadUInt32 ();  	if (type == typeof(UInt64))  		return reader.ReadUInt64 ();  	if (type == typeof(TimeSpan))  		return new TimeSpan (reader.ReadInt64 ());  	// Enumeration  	if (type.IsEnum)  		return readEnumeration (type' reader);  	// Type  	if (isType (type)) {  		var typeName = reader.ReadString ();  		return Type.GetType (typeName' true);  	}  	throw new InvalidOperationException (string.Format ("Unknown simple type: {0}"' type.FullName));  }  catch (Exception ex) {  	throw new SimpleValueParsingException (string.Format ("Invalid type: {0}. See details in the inner exception."' type)' ex);  }  
Magic Number,Polenter.Serialization.Core.Binary,BinaryReaderTools,C:\repos\andressbarajas_Integral\SharpSerializer.Library\Core\Binary\BinaryReaderTools.cs,readValueCore,The following statement contains a magic number: if (type == typeof(Guid))  	return new Guid (reader.ReadBytes (16));  
Magic Number,Polenter.Serialization.Core.Binary,BinaryReaderTools,C:\repos\andressbarajas_Integral\SharpSerializer.Library\Core\Binary\BinaryReaderTools.cs,readValueCore,The following statement contains a magic number: return new Guid (reader.ReadBytes (16));  
Magic Number,Polenter.Serialization.Core.Binary,BinaryReaderTools,C:\repos\andressbarajas_Integral\SharpSerializer.Library\Core\Binary\BinaryReaderTools.cs,readDecimal,The following statement contains a magic number: bits [2] = reader.ReadInt32 ();  
Magic Number,Polenter.Serialization.Core.Binary,BinaryReaderTools,C:\repos\andressbarajas_Integral\SharpSerializer.Library\Core\Binary\BinaryReaderTools.cs,readDecimal,The following statement contains a magic number: bits [3] = reader.ReadInt32 ();  
Magic Number,Polenter.Serialization.Core.Binary,BinaryWriterTools,C:\repos\andressbarajas_Integral\SharpSerializer.Library\Core\Binary\BinaryWriterTools.cs,writeDecimal,The following statement contains a magic number: writer.Write (bits [2]);  
Magic Number,Polenter.Serialization.Core.Binary,BinaryWriterTools,C:\repos\andressbarajas_Integral\SharpSerializer.Library\Core\Binary\BinaryWriterTools.cs,writeDecimal,The following statement contains a magic number: writer.Write (bits [3]);  
Magic Number,Polenter.Serialization.Serializing,PropertyFactory,C:\repos\andressbarajas_Integral\SharpSerializer.Library\Serializing\PropertyFactory.cs,createReferenceTargetInstance,The following statement contains a magic number: if (typeInfo.IsArray) {  	if (typeInfo.ArrayDimensionCount < 2) {  		// 1D-Array  		return new SingleDimensionalArrayProperty (name' typeInfo.Type);  	}  	// MultiD-Array  	return new MultiDimensionalArrayProperty (name' typeInfo.Type);  }  
Magic Number,Polenter.Serialization.Serializing,PropertyFactory,C:\repos\andressbarajas_Integral\SharpSerializer.Library\Serializing\PropertyFactory.cs,createReferenceTargetInstance,The following statement contains a magic number: if (typeInfo.ArrayDimensionCount < 2) {  	// 1D-Array  	return new SingleDimensionalArrayProperty (name' typeInfo.Type);  }  
Magic Number,Polenter.Serialization.Deserializing,ObjectFactory,C:\repos\andressbarajas_Integral\SharpSerializer.Library\Deserializing\ObjectFactory.cs,createObjectFromDictionaryProperty,The following statement contains a magic number: if (methodInfo != null) {  	ParameterInfo[] parameters = methodInfo.GetParameters ();  	if (parameters.Length == 2) {  		foreach (KeyValueItem item in property.Items) {  			object keyValue = CreateObject (item.Key);  			object valueValue = CreateObject (item.Value);  			methodInfo.Invoke (dictionary' new[] {  				keyValue'  				valueValue  			});  		}  	}  }  
Magic Number,Polenter.Serialization.Deserializing,ObjectFactory,C:\repos\andressbarajas_Integral\SharpSerializer.Library\Deserializing\ObjectFactory.cs,createObjectFromDictionaryProperty,The following statement contains a magic number: if (parameters.Length == 2) {  	foreach (KeyValueItem item in property.Items) {  		object keyValue = CreateObject (item.Key);  		object valueValue = CreateObject (item.Value);  		methodInfo.Invoke (dictionary' new[] {  			keyValue'  			valueValue  		});  	}  }  
