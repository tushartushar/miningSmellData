Implementation smell,Namespace,Class,File,Method,Description
Long Method,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileListsNEW,The method has 100 lines of code.
Complex Method,RetroShareSSHClient,MainForm,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\MainForm.cs,UpdateSystemStatus,Cyclomatic complexity of the method is 29
Complex Method,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileLists,Cyclomatic complexity of the method is 12
Complex Method,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileListsNEW,Cyclomatic complexity of the method is 22
Complex Method,RetroShareSSHClient,PeerProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\PeerProcessor.cs,UpdatePeerList,Cyclomatic complexity of the method is 9
Complex Method,RetroShareSSHClient,PeerProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\PeerProcessor.cs,FriendsSelectedIndexChanged,Cyclomatic complexity of the method is 16
Complex Method,RetroShareSSHClient,Processor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\Processor.cs,BuildSizeString,Cyclomatic complexity of the method is 22
Complex Method,RetroShareSSHClient,Processor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\Processor.cs,ProcessChat,Cyclomatic complexity of the method is 20
Complex Method,RetroShareSSHClient,Processor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\Processor.cs,ProcessChatMsg,Cyclomatic complexity of the method is 12
Complex Method,RetroShareSSHClient,Processor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\Processor.cs,ProcessFiles,Cyclomatic complexity of the method is 12
Complex Method,RetroShareSSHClient,Processor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\Processor.cs,ProcessSearch,Cyclomatic complexity of the method is 9
Complex Method,RetroShareSSHClient,Processor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\Processor.cs,ProcessStream,Cyclomatic complexity of the method is 9
Complex Method,RetroShareSSHClient,Processor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\Processor.cs,ProcessSystem,Cyclomatic complexity of the method is 9
Complex Method,RetroShareSSHClient,SearchProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\SearchProcessor.cs,ProcessSearchResults,Cyclomatic complexity of the method is 8
Complex Method,RetroShareSSHClient,RsCollection,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Tools\RsCollection.cs,ReadCollection,Cyclomatic complexity of the method is 24
Long Parameter List,RetroShareSSHClient,AutoResponseItem,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Tools\AutoResponse.cs,AutoResponseItem,The method has 8 parameters.
Long Statement,RetroShareSSHClient,ChatProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\ChatProcessor.cs,ProcessLobby,The length of the statement  "	nameToShow = "[" + (lobby.no_peers <= 9 ? "0" : "") + lobby.no_peers + "] " + lobby.lobby_name + // when there is no topic don't add "-" " is 136.
Long Statement,RetroShareSSHClient,ChatProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\ChatProcessor.cs,ProcessLobby,The length of the statement  "		System.Diagnostics.Debug.WriteLineIf (DEBUG' "user: " + lobby.no_peers + " - names: " + lobby.nicknames.Count + " - friends: " + lobby.participating_friends.Count); " is 164.
Long Statement,RetroShareSSHClient,ChatProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\ChatProcessor.cs,ProcessLobby,The length of the statement  "		System.Diagnostics.Debug.WriteLineIf (DEBUG' "user: " + lobby.no_peers + " - names: " + lobby.nicknames.Count + " - friends: " + lobby.participating_friends.Count); " is 164.
Long Statement,RetroShareSSHClient,ChatProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\ChatProcessor.cs,CheckChatRegistration,The length of the statement  "             * If we don't get any lobby after 2 minutes ( +5 secs for answer) then we don't reach any other lobby -> we can register" is 120.
Long Statement,RetroShareSSHClient,ChatProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\ChatProcessor.cs,AddMsgToLobby,The length of the statement  "	cl.ChatText += Processor.conv_Timestamp2Date (response.send_time).ToLocalTime ().ToLongTimeString () + " - " + response.peer_nickname + " > " + msg + "\n"; " is 155.
Long Statement,RetroShareSSHClient,ChatProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\ChatProcessor.cs,Tick,The length of the statement  "	// update lobbies every 30 seconds OR every 5 seconds if the connection was just established ( this will speed up getting available lobbies)  " is 140.
Long Statement,RetroShareSSHClient,ChatProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\ChatProcessor.cs,NotifyAndSetCheckState,The length of the statement  "			_b.GUI.clb_chatLobbies.SetItemCheckState (lobby.Index' (state == CheckState.Indeterminate) ? CheckState.Unchecked : CheckState.Indeterminate); " is 142.
Long Statement,RetroShareSSHClient,MainForm,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\MainForm.cs,clb_chatLobbies_MouseDoubleClick,The length of the statement  "		clb_chatLobbies.SetItemCheckState (index' _b.ChatProcessor.JoinLeaveChatLobby (JoinLeaveAction.toggle' clb_chatLobbies.SelectedIndex)); " is 135.
Long Statement,RetroShareSSHClient,MainForm,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\MainForm.cs,bt_joinChatLobby_Click,The length of the statement  "		clb_chatLobbies.SetItemCheckState (index' _b.ChatProcessor.JoinLeaveChatLobby (JoinLeaveAction.join' clb_chatLobbies.SelectedIndex)); " is 133.
Long Statement,RetroShareSSHClient,MainForm,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\MainForm.cs,bt_leaveChatLobby_Click,The length of the statement  "		clb_chatLobbies.SetItemCheckState (index' _b.ChatProcessor.JoinLeaveChatLobby (JoinLeaveAction.leave' clb_chatLobbies.SelectedIndex)); " is 134.
Long Statement,RetroShareSSHClient,MainForm,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\MainForm.cs,bt_searchAddToDL_Click,The length of the statement  "		_b.RPC.FilesControllDownload (RequestControlDownload.Action.ACTION_START' gs.Results [lb_searchResults.SelectedIndex].file); " is 124.
Long Statement,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,BuildFileTransferString,The length of the statement  "	return /* ft.state.ToString() + " - " + */String.Format ("{0:0'0.00}"' ft.rate_kBs) + "KiB/s - " + ((ft.direction == Direction.DIRECTION_DOWNLOAD) ? (String.Format ("{0:0'0.00}"' ft.fraction * 100) + "% - ") : "") + Processor.BuildSizeString (ft.file.size) + " - " + ft.file.name; " is 280.
Long Statement,RetroShareSSHClient,Processor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\Processor.cs,ProcessMsg,The length of the statement  "	System.Diagnostics.Debug.WriteLineIf (DEBUG' "ext: " + extension + " - service: " + service + " - submsg: " + RSProtoBuf.GetRpcMsgIdSubMsg (msg.MsgID)); " is 152.
Long Statement,RetroShareSSHClient,Processor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\Processor.cs,ProcessMsg,The length of the statement  "	//System.Diagnostics.Debug.WriteLineIf(true' "ext: " + extension + " - service: " + service + " - submsg: " + RSProtoBuf.GetRpcMsgIdSubMsg(msg.MsgID)); " is 151.
Long Statement,RetroShareSSHClient,SearchProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\SearchProcessor.cs,ProcessSearchResults,The length of the statement  "		System.Diagnostics.Debug.WriteLineIf (DEBUG' "Search: Processing ID" + ss.search_id + " with " + ss.hits.Count + " hits"); " is 122.
Long Statement,RetroShareSSHClient,SearchProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\SearchProcessor.cs,ProcessSearchResults,The length of the statement  "						gs.Results [i].file.name = (gs.Results [i].file.name.Length > sh.file.name.Length) ? gs.Results [i].file.name : sh.file.name; " is 125.
Long Statement,RetroShareSSHClient,SearchProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\SearchProcessor.cs,UpdateSearchResults,The length of the statement  "		_b.GUI.lb_searchResults.Items.Add (sh.no_hits + " hits - " + Processor.BuildSizeString (sh.file.size) + " - " + sh.file.name); " is 126.
Long Statement,RetroShareSSHClient,AutoResponse,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Tools\AutoResponse.cs,SetupBasicItems,The length of the statement  "		//s += "German: <a href=\"retroshare://file?name=RetroShare_Manual_German_2012_12_12.pdf&size=221437&hash=271cc46798434ffbc6163daae86cce475621c952\">RetroShare_Manual_German_2012_12_12.pdf</a> \r"; " is 197.
Long Statement,RetroShareSSHClient,AutoResponse,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Tools\AutoResponse.cs,SetupBasicItems,The length of the statement  "		s += "English: <a href=\"retroshare://file?name=RetroShare_Manual_English_2012_12_12_UNFINISHED.pdf&size=183421&hash=b7196b802271946e979279f56e4dea4c1cdac9d0\">RetroShare_Manual_English_2012_12_12_UNFINISHED.pdf</a>"; " is 217.
Long Statement,RetroShareSSHClient,AutoResponse,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Tools\AutoResponse.cs,SetupBasicItems,The length of the statement  "		s += "German: <a href=\"retroshare://file?name=RetroShare_Manual_German_2012_12_12.pdf&size=221437&hash=271cc46798434ffbc6163daae86cce475621c952\">RetroShare_Manual_German_2012_12_12.pdf</a> \r"; " is 195.
Long Statement,RetroShareSSHClient,AutoResponse,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Tools\AutoResponse.cs,SetupBasicItems,The length of the statement  "		//s += "English: <a href=\"retroshare://file?name=RetroShare_Manual_English_2012_12_12_UNFINISHED.pdf&size=183421&hash=b7196b802271946e979279f56e4dea4c1cdac9d0\">RetroShare_Manual_English_2012_12_12_UNFINISHED.pdf</a>"; " is 219.
Long Statement,RetroShareSSHClient,AutoResponse,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Tools\AutoResponse.cs,Process,The length of the statement  "	System.Diagnostics.Debug.WriteLineIf (DEBUG' "rec msg: " + msgIN.send_time + " - now: " + Processor.conv_Date2Timestam (DateTime.UtcNow)); " is 138.
Long Statement,RetroShareSSHClient,Log,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Tools\Log.cs,NewSession,The length of the statement  "		sw.WriteLine ("+++++++++++++++++++++++++++++++++++ " + System.DateTime.Now.ToShortDateString () + " +++++++++++++++++++++++++++++++++++"); " is 138.
Long Statement,RetroShareSSHClient,Log,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Tools\Log.cs,AddError,The length of the statement  "		sw.WriteLine ("----------------------------------- " + System.DateTime.Now.ToShortTimeString () + " -----------------------------------"); " is 138.
Empty Catch Block,RetroShareSSHClient,MainForm,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\MainForm.cs,ProcessMsgFromThread,The method has an empty catch block.
Magic Number,RetroShareSSHClient,ChatProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\ChatProcessor.cs,ProcessLobby,The following statement contains a magic number: nameToShow = "[" + (lobby.no_peers <= 9 ? "0" : "") + lobby.no_peers + "] " + lobby.lobby_name + // when there is no topic don't add "-"  (lobby.lobby_topic != "" ? " - " + lobby.lobby_topic : "");  
Magic Number,RetroShareSSHClient,ChatProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\ChatProcessor.cs,CheckChatRegistration,The following statement contains a magic number: if (_chatLobbies.Count <= 1 && _b.GUI.TickCounter < 125)  	return;  
Magic Number,RetroShareSSHClient,ChatProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\ChatProcessor.cs,Tick,The following statement contains a magic number: if (counter % 30 == 0 || (counter < 30 && counter % 5 == 0)) {  	//_bridge.RPC.ChatGetLobbies(rsctrl.chat.RequestChatLobbies.LobbySet.LOBBYSET_JOINED);  	//_bridge.RPC.ChatGetLobbies(rsctrl.chat.RequestChatLobbies.LobbySet.LOBBYSET_INVITED);  	//_bridge.RPC.ChatGetLobbies(rsctrl.chat.RequestChatLobbies.LobbySet.LOBBYSET_PUBLIC);  	_b.RPC.ChatGetLobbies (rsctrl.chat.RequestChatLobbies.LobbySet.LOBBYSET_ALL);  }  
Magic Number,RetroShareSSHClient,ChatProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\ChatProcessor.cs,Tick,The following statement contains a magic number: if (counter % 30 == 0 || (counter < 30 && counter % 5 == 0)) {  	//_bridge.RPC.ChatGetLobbies(rsctrl.chat.RequestChatLobbies.LobbySet.LOBBYSET_JOINED);  	//_bridge.RPC.ChatGetLobbies(rsctrl.chat.RequestChatLobbies.LobbySet.LOBBYSET_INVITED);  	//_bridge.RPC.ChatGetLobbies(rsctrl.chat.RequestChatLobbies.LobbySet.LOBBYSET_PUBLIC);  	_b.RPC.ChatGetLobbies (rsctrl.chat.RequestChatLobbies.LobbySet.LOBBYSET_ALL);  }  
Magic Number,RetroShareSSHClient,ChatProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\ChatProcessor.cs,Tick,The following statement contains a magic number: if (counter % 30 == 0 || (counter < 30 && counter % 5 == 0)) {  	//_bridge.RPC.ChatGetLobbies(rsctrl.chat.RequestChatLobbies.LobbySet.LOBBYSET_JOINED);  	//_bridge.RPC.ChatGetLobbies(rsctrl.chat.RequestChatLobbies.LobbySet.LOBBYSET_INVITED);  	//_bridge.RPC.ChatGetLobbies(rsctrl.chat.RequestChatLobbies.LobbySet.LOBBYSET_PUBLIC);  	_b.RPC.ChatGetLobbies (rsctrl.chat.RequestChatLobbies.LobbySet.LOBBYSET_ALL);  }  
Magic Number,RetroShareSSHClient,MainForm,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\MainForm.cs,AddSpeedOptions,The following statement contains a magic number: cb_settingsReadSpeed.Items.Add (10);  
Magic Number,RetroShareSSHClient,MainForm,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\MainForm.cs,AddSpeedOptions,The following statement contains a magic number: cb_settingsReadSpeed.Items.Add (20);  
Magic Number,RetroShareSSHClient,MainForm,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\MainForm.cs,AddSpeedOptions,The following statement contains a magic number: cb_settingsReadSpeed.Items.Add (50);  
Magic Number,RetroShareSSHClient,MainForm,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\MainForm.cs,AddSpeedOptions,The following statement contains a magic number: cb_settingsReadSpeed.Items.Add (100);  
Magic Number,RetroShareSSHClient,MainForm,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\MainForm.cs,AddSpeedOptions,The following statement contains a magic number: cb_settingsReadSpeed.Items.Add (500);  
Magic Number,RetroShareSSHClient,MainForm,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\MainForm.cs,Tick,The following statement contains a magic number: if (_b.RPC.IsConnected) {  	// update system status (every tick/second)  	if (_tickCounter % 30 == 0 || tc_main.SelectedTab == tp_setup) {  		_b.RPC.SystemGetStatus ();  	}  	// DL/UL (every second tick)  	if (_tickCounter % 30 == 0 || (tc_main.SelectedTab == tp_files && _tickCounter % 2 == 0)) {  		_b.FileProcessor.RequestFileLists ();  	}  	// get search results ( every 10 seconds )  	if (_tickCounter % 10 == 0) {  		_b.SearchProcessor.GetSearchResults ();  	}  	// update friends (every second tick)  	if (_tickCounter % 30 == 0 || (tc_main.SelectedTab == tp_friends && _tickCounter % 2 == 0)) {  		_b.RPC.PeersGetFriendList (RequestPeers.SetOption.FRIENDS);  	}  	//chat lobbies  	_b.ChatProcessor.Tick (_tickCounter);  	if (_tickCounter == uint.MaxValue)  		_tickCounter = 0;  	else  		_tickCounter++;  }  
Magic Number,RetroShareSSHClient,MainForm,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\MainForm.cs,Tick,The following statement contains a magic number: if (_b.RPC.IsConnected) {  	// update system status (every tick/second)  	if (_tickCounter % 30 == 0 || tc_main.SelectedTab == tp_setup) {  		_b.RPC.SystemGetStatus ();  	}  	// DL/UL (every second tick)  	if (_tickCounter % 30 == 0 || (tc_main.SelectedTab == tp_files && _tickCounter % 2 == 0)) {  		_b.FileProcessor.RequestFileLists ();  	}  	// get search results ( every 10 seconds )  	if (_tickCounter % 10 == 0) {  		_b.SearchProcessor.GetSearchResults ();  	}  	// update friends (every second tick)  	if (_tickCounter % 30 == 0 || (tc_main.SelectedTab == tp_friends && _tickCounter % 2 == 0)) {  		_b.RPC.PeersGetFriendList (RequestPeers.SetOption.FRIENDS);  	}  	//chat lobbies  	_b.ChatProcessor.Tick (_tickCounter);  	if (_tickCounter == uint.MaxValue)  		_tickCounter = 0;  	else  		_tickCounter++;  }  
Magic Number,RetroShareSSHClient,MainForm,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\MainForm.cs,Tick,The following statement contains a magic number: if (_b.RPC.IsConnected) {  	// update system status (every tick/second)  	if (_tickCounter % 30 == 0 || tc_main.SelectedTab == tp_setup) {  		_b.RPC.SystemGetStatus ();  	}  	// DL/UL (every second tick)  	if (_tickCounter % 30 == 0 || (tc_main.SelectedTab == tp_files && _tickCounter % 2 == 0)) {  		_b.FileProcessor.RequestFileLists ();  	}  	// get search results ( every 10 seconds )  	if (_tickCounter % 10 == 0) {  		_b.SearchProcessor.GetSearchResults ();  	}  	// update friends (every second tick)  	if (_tickCounter % 30 == 0 || (tc_main.SelectedTab == tp_friends && _tickCounter % 2 == 0)) {  		_b.RPC.PeersGetFriendList (RequestPeers.SetOption.FRIENDS);  	}  	//chat lobbies  	_b.ChatProcessor.Tick (_tickCounter);  	if (_tickCounter == uint.MaxValue)  		_tickCounter = 0;  	else  		_tickCounter++;  }  
Magic Number,RetroShareSSHClient,MainForm,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\MainForm.cs,Tick,The following statement contains a magic number: if (_b.RPC.IsConnected) {  	// update system status (every tick/second)  	if (_tickCounter % 30 == 0 || tc_main.SelectedTab == tp_setup) {  		_b.RPC.SystemGetStatus ();  	}  	// DL/UL (every second tick)  	if (_tickCounter % 30 == 0 || (tc_main.SelectedTab == tp_files && _tickCounter % 2 == 0)) {  		_b.FileProcessor.RequestFileLists ();  	}  	// get search results ( every 10 seconds )  	if (_tickCounter % 10 == 0) {  		_b.SearchProcessor.GetSearchResults ();  	}  	// update friends (every second tick)  	if (_tickCounter % 30 == 0 || (tc_main.SelectedTab == tp_friends && _tickCounter % 2 == 0)) {  		_b.RPC.PeersGetFriendList (RequestPeers.SetOption.FRIENDS);  	}  	//chat lobbies  	_b.ChatProcessor.Tick (_tickCounter);  	if (_tickCounter == uint.MaxValue)  		_tickCounter = 0;  	else  		_tickCounter++;  }  
Magic Number,RetroShareSSHClient,MainForm,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\MainForm.cs,Tick,The following statement contains a magic number: if (_b.RPC.IsConnected) {  	// update system status (every tick/second)  	if (_tickCounter % 30 == 0 || tc_main.SelectedTab == tp_setup) {  		_b.RPC.SystemGetStatus ();  	}  	// DL/UL (every second tick)  	if (_tickCounter % 30 == 0 || (tc_main.SelectedTab == tp_files && _tickCounter % 2 == 0)) {  		_b.FileProcessor.RequestFileLists ();  	}  	// get search results ( every 10 seconds )  	if (_tickCounter % 10 == 0) {  		_b.SearchProcessor.GetSearchResults ();  	}  	// update friends (every second tick)  	if (_tickCounter % 30 == 0 || (tc_main.SelectedTab == tp_friends && _tickCounter % 2 == 0)) {  		_b.RPC.PeersGetFriendList (RequestPeers.SetOption.FRIENDS);  	}  	//chat lobbies  	_b.ChatProcessor.Tick (_tickCounter);  	if (_tickCounter == uint.MaxValue)  		_tickCounter = 0;  	else  		_tickCounter++;  }  
Magic Number,RetroShareSSHClient,MainForm,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\MainForm.cs,Tick,The following statement contains a magic number: if (_b.RPC.IsConnected) {  	// update system status (every tick/second)  	if (_tickCounter % 30 == 0 || tc_main.SelectedTab == tp_setup) {  		_b.RPC.SystemGetStatus ();  	}  	// DL/UL (every second tick)  	if (_tickCounter % 30 == 0 || (tc_main.SelectedTab == tp_files && _tickCounter % 2 == 0)) {  		_b.FileProcessor.RequestFileLists ();  	}  	// get search results ( every 10 seconds )  	if (_tickCounter % 10 == 0) {  		_b.SearchProcessor.GetSearchResults ();  	}  	// update friends (every second tick)  	if (_tickCounter % 30 == 0 || (tc_main.SelectedTab == tp_friends && _tickCounter % 2 == 0)) {  		_b.RPC.PeersGetFriendList (RequestPeers.SetOption.FRIENDS);  	}  	//chat lobbies  	_b.ChatProcessor.Tick (_tickCounter);  	if (_tickCounter == uint.MaxValue)  		_tickCounter = 0;  	else  		_tickCounter++;  }  
Magic Number,RetroShareSSHClient,MainForm,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\MainForm.cs,Tick,The following statement contains a magic number: if (_tickCounter % 30 == 0 || tc_main.SelectedTab == tp_setup) {  	_b.RPC.SystemGetStatus ();  }  
Magic Number,RetroShareSSHClient,MainForm,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\MainForm.cs,Tick,The following statement contains a magic number: if (_tickCounter % 30 == 0 || (tc_main.SelectedTab == tp_files && _tickCounter % 2 == 0)) {  	_b.FileProcessor.RequestFileLists ();  }  
Magic Number,RetroShareSSHClient,MainForm,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\MainForm.cs,Tick,The following statement contains a magic number: if (_tickCounter % 30 == 0 || (tc_main.SelectedTab == tp_files && _tickCounter % 2 == 0)) {  	_b.FileProcessor.RequestFileLists ();  }  
Magic Number,RetroShareSSHClient,MainForm,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\MainForm.cs,Tick,The following statement contains a magic number: if (_tickCounter % 10 == 0) {  	_b.SearchProcessor.GetSearchResults ();  }  
Magic Number,RetroShareSSHClient,MainForm,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\MainForm.cs,Tick,The following statement contains a magic number: if (_tickCounter % 30 == 0 || (tc_main.SelectedTab == tp_friends && _tickCounter % 2 == 0)) {  	_b.RPC.PeersGetFriendList (RequestPeers.SetOption.FRIENDS);  }  
Magic Number,RetroShareSSHClient,MainForm,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\MainForm.cs,Tick,The following statement contains a magic number: if (_tickCounter % 30 == 0 || (tc_main.SelectedTab == tp_friends && _tickCounter % 2 == 0)) {  	_b.RPC.PeersGetFriendList (RequestPeers.SetOption.FRIENDS);  }  
Magic Number,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileTransfersNEW,The following statement contains a magic number: for (int i = 0; i < 50; i++) {  	ft = new FileTransfer ();  	ft.file = new File ();  	ft.direction = Direction.DIRECTION_DOWNLOAD;  	ft.file.name = i.ToString ();  	ft.rate_kBs = i;  	ft.fraction = i / 100;  	ft.file.size = (ulong)i;  	ft.file.hash = i.ToString ();  	_fileTransfersNEW.Add (ft.file.hash' ft);  }  
Magic Number,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileTransfersNEW,The following statement contains a magic number: for (int i = 0; i < 50; i++) {  	ft = new FileTransfer ();  	ft.file = new File ();  	ft.direction = Direction.DIRECTION_DOWNLOAD;  	ft.file.name = i.ToString ();  	ft.rate_kBs = i;  	ft.fraction = i / 100;  	ft.file.size = (ulong)i;  	ft.file.hash = i.ToString ();  	_fileTransfersNEW.Add (ft.file.hash' ft);  }  
Magic Number,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileTransfersNEW,The following statement contains a magic number: ft.fraction = i / 100;  
Magic Number,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileListsNEW,The following statement contains a magic number: if (dir == Direction.DIRECTION_DOWNLOAD) {  	hashIndex = 5;  	dgvRowCollection = _b.GUI.dgv_filesDownloads.Rows;  	row = new object[6];  	foreach (DataGridViewRow dgvRow in dgvRowCollection) {  		row [0] = (bool)dgvRow.Cells [0].Value;  		row [1] = (string)dgvRow.Cells [1].Value;  		row [2] = (string)dgvRow.Cells [2].Value;  		row [3] = (string)dgvRow.Cells [3].Value;  		row [4] = (string)dgvRow.Cells [4].Value;  		row [5] = (string)dgvRow.Cells [5].Value;  		rows.Add (row [hashIndex].ToString ()' row);  		if (dgvRow.Selected)  			selectedHash = (string)row [5];  	}  }  else {  	hashIndex = 3;  	dgvRowCollection = _b.GUI.dgv_filesUploads.Rows;  	row = new object[4];  	foreach (DataGridViewRow dgvRow in dgvRowCollection) {  		row [0] = (string)dgvRow.Cells [0].Value;  		row [1] = (string)dgvRow.Cells [1].Value;  		row [2] = (string)dgvRow.Cells [2].Value;  		row [3] = (string)dgvRow.Cells [3].Value;  		rows.Add (row [hashIndex].ToString ()' row);  		if (dgvRow.Selected)  			selectedHash = (string)row [3];  	}  }  
Magic Number,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileListsNEW,The following statement contains a magic number: if (dir == Direction.DIRECTION_DOWNLOAD) {  	hashIndex = 5;  	dgvRowCollection = _b.GUI.dgv_filesDownloads.Rows;  	row = new object[6];  	foreach (DataGridViewRow dgvRow in dgvRowCollection) {  		row [0] = (bool)dgvRow.Cells [0].Value;  		row [1] = (string)dgvRow.Cells [1].Value;  		row [2] = (string)dgvRow.Cells [2].Value;  		row [3] = (string)dgvRow.Cells [3].Value;  		row [4] = (string)dgvRow.Cells [4].Value;  		row [5] = (string)dgvRow.Cells [5].Value;  		rows.Add (row [hashIndex].ToString ()' row);  		if (dgvRow.Selected)  			selectedHash = (string)row [5];  	}  }  else {  	hashIndex = 3;  	dgvRowCollection = _b.GUI.dgv_filesUploads.Rows;  	row = new object[4];  	foreach (DataGridViewRow dgvRow in dgvRowCollection) {  		row [0] = (string)dgvRow.Cells [0].Value;  		row [1] = (string)dgvRow.Cells [1].Value;  		row [2] = (string)dgvRow.Cells [2].Value;  		row [3] = (string)dgvRow.Cells [3].Value;  		rows.Add (row [hashIndex].ToString ()' row);  		if (dgvRow.Selected)  			selectedHash = (string)row [3];  	}  }  
Magic Number,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileListsNEW,The following statement contains a magic number: if (dir == Direction.DIRECTION_DOWNLOAD) {  	hashIndex = 5;  	dgvRowCollection = _b.GUI.dgv_filesDownloads.Rows;  	row = new object[6];  	foreach (DataGridViewRow dgvRow in dgvRowCollection) {  		row [0] = (bool)dgvRow.Cells [0].Value;  		row [1] = (string)dgvRow.Cells [1].Value;  		row [2] = (string)dgvRow.Cells [2].Value;  		row [3] = (string)dgvRow.Cells [3].Value;  		row [4] = (string)dgvRow.Cells [4].Value;  		row [5] = (string)dgvRow.Cells [5].Value;  		rows.Add (row [hashIndex].ToString ()' row);  		if (dgvRow.Selected)  			selectedHash = (string)row [5];  	}  }  else {  	hashIndex = 3;  	dgvRowCollection = _b.GUI.dgv_filesUploads.Rows;  	row = new object[4];  	foreach (DataGridViewRow dgvRow in dgvRowCollection) {  		row [0] = (string)dgvRow.Cells [0].Value;  		row [1] = (string)dgvRow.Cells [1].Value;  		row [2] = (string)dgvRow.Cells [2].Value;  		row [3] = (string)dgvRow.Cells [3].Value;  		rows.Add (row [hashIndex].ToString ()' row);  		if (dgvRow.Selected)  			selectedHash = (string)row [3];  	}  }  
Magic Number,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileListsNEW,The following statement contains a magic number: if (dir == Direction.DIRECTION_DOWNLOAD) {  	hashIndex = 5;  	dgvRowCollection = _b.GUI.dgv_filesDownloads.Rows;  	row = new object[6];  	foreach (DataGridViewRow dgvRow in dgvRowCollection) {  		row [0] = (bool)dgvRow.Cells [0].Value;  		row [1] = (string)dgvRow.Cells [1].Value;  		row [2] = (string)dgvRow.Cells [2].Value;  		row [3] = (string)dgvRow.Cells [3].Value;  		row [4] = (string)dgvRow.Cells [4].Value;  		row [5] = (string)dgvRow.Cells [5].Value;  		rows.Add (row [hashIndex].ToString ()' row);  		if (dgvRow.Selected)  			selectedHash = (string)row [5];  	}  }  else {  	hashIndex = 3;  	dgvRowCollection = _b.GUI.dgv_filesUploads.Rows;  	row = new object[4];  	foreach (DataGridViewRow dgvRow in dgvRowCollection) {  		row [0] = (string)dgvRow.Cells [0].Value;  		row [1] = (string)dgvRow.Cells [1].Value;  		row [2] = (string)dgvRow.Cells [2].Value;  		row [3] = (string)dgvRow.Cells [3].Value;  		rows.Add (row [hashIndex].ToString ()' row);  		if (dgvRow.Selected)  			selectedHash = (string)row [3];  	}  }  
Magic Number,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileListsNEW,The following statement contains a magic number: if (dir == Direction.DIRECTION_DOWNLOAD) {  	hashIndex = 5;  	dgvRowCollection = _b.GUI.dgv_filesDownloads.Rows;  	row = new object[6];  	foreach (DataGridViewRow dgvRow in dgvRowCollection) {  		row [0] = (bool)dgvRow.Cells [0].Value;  		row [1] = (string)dgvRow.Cells [1].Value;  		row [2] = (string)dgvRow.Cells [2].Value;  		row [3] = (string)dgvRow.Cells [3].Value;  		row [4] = (string)dgvRow.Cells [4].Value;  		row [5] = (string)dgvRow.Cells [5].Value;  		rows.Add (row [hashIndex].ToString ()' row);  		if (dgvRow.Selected)  			selectedHash = (string)row [5];  	}  }  else {  	hashIndex = 3;  	dgvRowCollection = _b.GUI.dgv_filesUploads.Rows;  	row = new object[4];  	foreach (DataGridViewRow dgvRow in dgvRowCollection) {  		row [0] = (string)dgvRow.Cells [0].Value;  		row [1] = (string)dgvRow.Cells [1].Value;  		row [2] = (string)dgvRow.Cells [2].Value;  		row [3] = (string)dgvRow.Cells [3].Value;  		rows.Add (row [hashIndex].ToString ()' row);  		if (dgvRow.Selected)  			selectedHash = (string)row [3];  	}  }  
Magic Number,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileListsNEW,The following statement contains a magic number: if (dir == Direction.DIRECTION_DOWNLOAD) {  	hashIndex = 5;  	dgvRowCollection = _b.GUI.dgv_filesDownloads.Rows;  	row = new object[6];  	foreach (DataGridViewRow dgvRow in dgvRowCollection) {  		row [0] = (bool)dgvRow.Cells [0].Value;  		row [1] = (string)dgvRow.Cells [1].Value;  		row [2] = (string)dgvRow.Cells [2].Value;  		row [3] = (string)dgvRow.Cells [3].Value;  		row [4] = (string)dgvRow.Cells [4].Value;  		row [5] = (string)dgvRow.Cells [5].Value;  		rows.Add (row [hashIndex].ToString ()' row);  		if (dgvRow.Selected)  			selectedHash = (string)row [5];  	}  }  else {  	hashIndex = 3;  	dgvRowCollection = _b.GUI.dgv_filesUploads.Rows;  	row = new object[4];  	foreach (DataGridViewRow dgvRow in dgvRowCollection) {  		row [0] = (string)dgvRow.Cells [0].Value;  		row [1] = (string)dgvRow.Cells [1].Value;  		row [2] = (string)dgvRow.Cells [2].Value;  		row [3] = (string)dgvRow.Cells [3].Value;  		rows.Add (row [hashIndex].ToString ()' row);  		if (dgvRow.Selected)  			selectedHash = (string)row [3];  	}  }  
Magic Number,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileListsNEW,The following statement contains a magic number: if (dir == Direction.DIRECTION_DOWNLOAD) {  	hashIndex = 5;  	dgvRowCollection = _b.GUI.dgv_filesDownloads.Rows;  	row = new object[6];  	foreach (DataGridViewRow dgvRow in dgvRowCollection) {  		row [0] = (bool)dgvRow.Cells [0].Value;  		row [1] = (string)dgvRow.Cells [1].Value;  		row [2] = (string)dgvRow.Cells [2].Value;  		row [3] = (string)dgvRow.Cells [3].Value;  		row [4] = (string)dgvRow.Cells [4].Value;  		row [5] = (string)dgvRow.Cells [5].Value;  		rows.Add (row [hashIndex].ToString ()' row);  		if (dgvRow.Selected)  			selectedHash = (string)row [5];  	}  }  else {  	hashIndex = 3;  	dgvRowCollection = _b.GUI.dgv_filesUploads.Rows;  	row = new object[4];  	foreach (DataGridViewRow dgvRow in dgvRowCollection) {  		row [0] = (string)dgvRow.Cells [0].Value;  		row [1] = (string)dgvRow.Cells [1].Value;  		row [2] = (string)dgvRow.Cells [2].Value;  		row [3] = (string)dgvRow.Cells [3].Value;  		rows.Add (row [hashIndex].ToString ()' row);  		if (dgvRow.Selected)  			selectedHash = (string)row [3];  	}  }  
Magic Number,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileListsNEW,The following statement contains a magic number: if (dir == Direction.DIRECTION_DOWNLOAD) {  	hashIndex = 5;  	dgvRowCollection = _b.GUI.dgv_filesDownloads.Rows;  	row = new object[6];  	foreach (DataGridViewRow dgvRow in dgvRowCollection) {  		row [0] = (bool)dgvRow.Cells [0].Value;  		row [1] = (string)dgvRow.Cells [1].Value;  		row [2] = (string)dgvRow.Cells [2].Value;  		row [3] = (string)dgvRow.Cells [3].Value;  		row [4] = (string)dgvRow.Cells [4].Value;  		row [5] = (string)dgvRow.Cells [5].Value;  		rows.Add (row [hashIndex].ToString ()' row);  		if (dgvRow.Selected)  			selectedHash = (string)row [5];  	}  }  else {  	hashIndex = 3;  	dgvRowCollection = _b.GUI.dgv_filesUploads.Rows;  	row = new object[4];  	foreach (DataGridViewRow dgvRow in dgvRowCollection) {  		row [0] = (string)dgvRow.Cells [0].Value;  		row [1] = (string)dgvRow.Cells [1].Value;  		row [2] = (string)dgvRow.Cells [2].Value;  		row [3] = (string)dgvRow.Cells [3].Value;  		rows.Add (row [hashIndex].ToString ()' row);  		if (dgvRow.Selected)  			selectedHash = (string)row [3];  	}  }  
Magic Number,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileListsNEW,The following statement contains a magic number: if (dir == Direction.DIRECTION_DOWNLOAD) {  	hashIndex = 5;  	dgvRowCollection = _b.GUI.dgv_filesDownloads.Rows;  	row = new object[6];  	foreach (DataGridViewRow dgvRow in dgvRowCollection) {  		row [0] = (bool)dgvRow.Cells [0].Value;  		row [1] = (string)dgvRow.Cells [1].Value;  		row [2] = (string)dgvRow.Cells [2].Value;  		row [3] = (string)dgvRow.Cells [3].Value;  		row [4] = (string)dgvRow.Cells [4].Value;  		row [5] = (string)dgvRow.Cells [5].Value;  		rows.Add (row [hashIndex].ToString ()' row);  		if (dgvRow.Selected)  			selectedHash = (string)row [5];  	}  }  else {  	hashIndex = 3;  	dgvRowCollection = _b.GUI.dgv_filesUploads.Rows;  	row = new object[4];  	foreach (DataGridViewRow dgvRow in dgvRowCollection) {  		row [0] = (string)dgvRow.Cells [0].Value;  		row [1] = (string)dgvRow.Cells [1].Value;  		row [2] = (string)dgvRow.Cells [2].Value;  		row [3] = (string)dgvRow.Cells [3].Value;  		rows.Add (row [hashIndex].ToString ()' row);  		if (dgvRow.Selected)  			selectedHash = (string)row [3];  	}  }  
Magic Number,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileListsNEW,The following statement contains a magic number: if (dir == Direction.DIRECTION_DOWNLOAD) {  	hashIndex = 5;  	dgvRowCollection = _b.GUI.dgv_filesDownloads.Rows;  	row = new object[6];  	foreach (DataGridViewRow dgvRow in dgvRowCollection) {  		row [0] = (bool)dgvRow.Cells [0].Value;  		row [1] = (string)dgvRow.Cells [1].Value;  		row [2] = (string)dgvRow.Cells [2].Value;  		row [3] = (string)dgvRow.Cells [3].Value;  		row [4] = (string)dgvRow.Cells [4].Value;  		row [5] = (string)dgvRow.Cells [5].Value;  		rows.Add (row [hashIndex].ToString ()' row);  		if (dgvRow.Selected)  			selectedHash = (string)row [5];  	}  }  else {  	hashIndex = 3;  	dgvRowCollection = _b.GUI.dgv_filesUploads.Rows;  	row = new object[4];  	foreach (DataGridViewRow dgvRow in dgvRowCollection) {  		row [0] = (string)dgvRow.Cells [0].Value;  		row [1] = (string)dgvRow.Cells [1].Value;  		row [2] = (string)dgvRow.Cells [2].Value;  		row [3] = (string)dgvRow.Cells [3].Value;  		rows.Add (row [hashIndex].ToString ()' row);  		if (dgvRow.Selected)  			selectedHash = (string)row [3];  	}  }  
Magic Number,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileListsNEW,The following statement contains a magic number: if (dir == Direction.DIRECTION_DOWNLOAD) {  	hashIndex = 5;  	dgvRowCollection = _b.GUI.dgv_filesDownloads.Rows;  	row = new object[6];  	foreach (DataGridViewRow dgvRow in dgvRowCollection) {  		row [0] = (bool)dgvRow.Cells [0].Value;  		row [1] = (string)dgvRow.Cells [1].Value;  		row [2] = (string)dgvRow.Cells [2].Value;  		row [3] = (string)dgvRow.Cells [3].Value;  		row [4] = (string)dgvRow.Cells [4].Value;  		row [5] = (string)dgvRow.Cells [5].Value;  		rows.Add (row [hashIndex].ToString ()' row);  		if (dgvRow.Selected)  			selectedHash = (string)row [5];  	}  }  else {  	hashIndex = 3;  	dgvRowCollection = _b.GUI.dgv_filesUploads.Rows;  	row = new object[4];  	foreach (DataGridViewRow dgvRow in dgvRowCollection) {  		row [0] = (string)dgvRow.Cells [0].Value;  		row [1] = (string)dgvRow.Cells [1].Value;  		row [2] = (string)dgvRow.Cells [2].Value;  		row [3] = (string)dgvRow.Cells [3].Value;  		rows.Add (row [hashIndex].ToString ()' row);  		if (dgvRow.Selected)  			selectedHash = (string)row [3];  	}  }  
Magic Number,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileListsNEW,The following statement contains a magic number: if (dir == Direction.DIRECTION_DOWNLOAD) {  	hashIndex = 5;  	dgvRowCollection = _b.GUI.dgv_filesDownloads.Rows;  	row = new object[6];  	foreach (DataGridViewRow dgvRow in dgvRowCollection) {  		row [0] = (bool)dgvRow.Cells [0].Value;  		row [1] = (string)dgvRow.Cells [1].Value;  		row [2] = (string)dgvRow.Cells [2].Value;  		row [3] = (string)dgvRow.Cells [3].Value;  		row [4] = (string)dgvRow.Cells [4].Value;  		row [5] = (string)dgvRow.Cells [5].Value;  		rows.Add (row [hashIndex].ToString ()' row);  		if (dgvRow.Selected)  			selectedHash = (string)row [5];  	}  }  else {  	hashIndex = 3;  	dgvRowCollection = _b.GUI.dgv_filesUploads.Rows;  	row = new object[4];  	foreach (DataGridViewRow dgvRow in dgvRowCollection) {  		row [0] = (string)dgvRow.Cells [0].Value;  		row [1] = (string)dgvRow.Cells [1].Value;  		row [2] = (string)dgvRow.Cells [2].Value;  		row [3] = (string)dgvRow.Cells [3].Value;  		rows.Add (row [hashIndex].ToString ()' row);  		if (dgvRow.Selected)  			selectedHash = (string)row [3];  	}  }  
Magic Number,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileListsNEW,The following statement contains a magic number: if (dir == Direction.DIRECTION_DOWNLOAD) {  	hashIndex = 5;  	dgvRowCollection = _b.GUI.dgv_filesDownloads.Rows;  	row = new object[6];  	foreach (DataGridViewRow dgvRow in dgvRowCollection) {  		row [0] = (bool)dgvRow.Cells [0].Value;  		row [1] = (string)dgvRow.Cells [1].Value;  		row [2] = (string)dgvRow.Cells [2].Value;  		row [3] = (string)dgvRow.Cells [3].Value;  		row [4] = (string)dgvRow.Cells [4].Value;  		row [5] = (string)dgvRow.Cells [5].Value;  		rows.Add (row [hashIndex].ToString ()' row);  		if (dgvRow.Selected)  			selectedHash = (string)row [5];  	}  }  else {  	hashIndex = 3;  	dgvRowCollection = _b.GUI.dgv_filesUploads.Rows;  	row = new object[4];  	foreach (DataGridViewRow dgvRow in dgvRowCollection) {  		row [0] = (string)dgvRow.Cells [0].Value;  		row [1] = (string)dgvRow.Cells [1].Value;  		row [2] = (string)dgvRow.Cells [2].Value;  		row [3] = (string)dgvRow.Cells [3].Value;  		rows.Add (row [hashIndex].ToString ()' row);  		if (dgvRow.Selected)  			selectedHash = (string)row [3];  	}  }  
Magic Number,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileListsNEW,The following statement contains a magic number: if (dir == Direction.DIRECTION_DOWNLOAD) {  	hashIndex = 5;  	dgvRowCollection = _b.GUI.dgv_filesDownloads.Rows;  	row = new object[6];  	foreach (DataGridViewRow dgvRow in dgvRowCollection) {  		row [0] = (bool)dgvRow.Cells [0].Value;  		row [1] = (string)dgvRow.Cells [1].Value;  		row [2] = (string)dgvRow.Cells [2].Value;  		row [3] = (string)dgvRow.Cells [3].Value;  		row [4] = (string)dgvRow.Cells [4].Value;  		row [5] = (string)dgvRow.Cells [5].Value;  		rows.Add (row [hashIndex].ToString ()' row);  		if (dgvRow.Selected)  			selectedHash = (string)row [5];  	}  }  else {  	hashIndex = 3;  	dgvRowCollection = _b.GUI.dgv_filesUploads.Rows;  	row = new object[4];  	foreach (DataGridViewRow dgvRow in dgvRowCollection) {  		row [0] = (string)dgvRow.Cells [0].Value;  		row [1] = (string)dgvRow.Cells [1].Value;  		row [2] = (string)dgvRow.Cells [2].Value;  		row [3] = (string)dgvRow.Cells [3].Value;  		rows.Add (row [hashIndex].ToString ()' row);  		if (dgvRow.Selected)  			selectedHash = (string)row [3];  	}  }  
Magic Number,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileListsNEW,The following statement contains a magic number: if (dir == Direction.DIRECTION_DOWNLOAD) {  	hashIndex = 5;  	dgvRowCollection = _b.GUI.dgv_filesDownloads.Rows;  	row = new object[6];  	foreach (DataGridViewRow dgvRow in dgvRowCollection) {  		row [0] = (bool)dgvRow.Cells [0].Value;  		row [1] = (string)dgvRow.Cells [1].Value;  		row [2] = (string)dgvRow.Cells [2].Value;  		row [3] = (string)dgvRow.Cells [3].Value;  		row [4] = (string)dgvRow.Cells [4].Value;  		row [5] = (string)dgvRow.Cells [5].Value;  		rows.Add (row [hashIndex].ToString ()' row);  		if (dgvRow.Selected)  			selectedHash = (string)row [5];  	}  }  else {  	hashIndex = 3;  	dgvRowCollection = _b.GUI.dgv_filesUploads.Rows;  	row = new object[4];  	foreach (DataGridViewRow dgvRow in dgvRowCollection) {  		row [0] = (string)dgvRow.Cells [0].Value;  		row [1] = (string)dgvRow.Cells [1].Value;  		row [2] = (string)dgvRow.Cells [2].Value;  		row [3] = (string)dgvRow.Cells [3].Value;  		rows.Add (row [hashIndex].ToString ()' row);  		if (dgvRow.Selected)  			selectedHash = (string)row [3];  	}  }  
Magic Number,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileListsNEW,The following statement contains a magic number: if (dir == Direction.DIRECTION_DOWNLOAD) {  	hashIndex = 5;  	dgvRowCollection = _b.GUI.dgv_filesDownloads.Rows;  	row = new object[6];  	foreach (DataGridViewRow dgvRow in dgvRowCollection) {  		row [0] = (bool)dgvRow.Cells [0].Value;  		row [1] = (string)dgvRow.Cells [1].Value;  		row [2] = (string)dgvRow.Cells [2].Value;  		row [3] = (string)dgvRow.Cells [3].Value;  		row [4] = (string)dgvRow.Cells [4].Value;  		row [5] = (string)dgvRow.Cells [5].Value;  		rows.Add (row [hashIndex].ToString ()' row);  		if (dgvRow.Selected)  			selectedHash = (string)row [5];  	}  }  else {  	hashIndex = 3;  	dgvRowCollection = _b.GUI.dgv_filesUploads.Rows;  	row = new object[4];  	foreach (DataGridViewRow dgvRow in dgvRowCollection) {  		row [0] = (string)dgvRow.Cells [0].Value;  		row [1] = (string)dgvRow.Cells [1].Value;  		row [2] = (string)dgvRow.Cells [2].Value;  		row [3] = (string)dgvRow.Cells [3].Value;  		rows.Add (row [hashIndex].ToString ()' row);  		if (dgvRow.Selected)  			selectedHash = (string)row [3];  	}  }  
Magic Number,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileListsNEW,The following statement contains a magic number: if (dir == Direction.DIRECTION_DOWNLOAD) {  	hashIndex = 5;  	dgvRowCollection = _b.GUI.dgv_filesDownloads.Rows;  	row = new object[6];  	foreach (DataGridViewRow dgvRow in dgvRowCollection) {  		row [0] = (bool)dgvRow.Cells [0].Value;  		row [1] = (string)dgvRow.Cells [1].Value;  		row [2] = (string)dgvRow.Cells [2].Value;  		row [3] = (string)dgvRow.Cells [3].Value;  		row [4] = (string)dgvRow.Cells [4].Value;  		row [5] = (string)dgvRow.Cells [5].Value;  		rows.Add (row [hashIndex].ToString ()' row);  		if (dgvRow.Selected)  			selectedHash = (string)row [5];  	}  }  else {  	hashIndex = 3;  	dgvRowCollection = _b.GUI.dgv_filesUploads.Rows;  	row = new object[4];  	foreach (DataGridViewRow dgvRow in dgvRowCollection) {  		row [0] = (string)dgvRow.Cells [0].Value;  		row [1] = (string)dgvRow.Cells [1].Value;  		row [2] = (string)dgvRow.Cells [2].Value;  		row [3] = (string)dgvRow.Cells [3].Value;  		rows.Add (row [hashIndex].ToString ()' row);  		if (dgvRow.Selected)  			selectedHash = (string)row [3];  	}  }  
Magic Number,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileListsNEW,The following statement contains a magic number: if (dir == Direction.DIRECTION_DOWNLOAD) {  	hashIndex = 5;  	dgvRowCollection = _b.GUI.dgv_filesDownloads.Rows;  	row = new object[6];  	foreach (DataGridViewRow dgvRow in dgvRowCollection) {  		row [0] = (bool)dgvRow.Cells [0].Value;  		row [1] = (string)dgvRow.Cells [1].Value;  		row [2] = (string)dgvRow.Cells [2].Value;  		row [3] = (string)dgvRow.Cells [3].Value;  		row [4] = (string)dgvRow.Cells [4].Value;  		row [5] = (string)dgvRow.Cells [5].Value;  		rows.Add (row [hashIndex].ToString ()' row);  		if (dgvRow.Selected)  			selectedHash = (string)row [5];  	}  }  else {  	hashIndex = 3;  	dgvRowCollection = _b.GUI.dgv_filesUploads.Rows;  	row = new object[4];  	foreach (DataGridViewRow dgvRow in dgvRowCollection) {  		row [0] = (string)dgvRow.Cells [0].Value;  		row [1] = (string)dgvRow.Cells [1].Value;  		row [2] = (string)dgvRow.Cells [2].Value;  		row [3] = (string)dgvRow.Cells [3].Value;  		rows.Add (row [hashIndex].ToString ()' row);  		if (dgvRow.Selected)  			selectedHash = (string)row [3];  	}  }  
Magic Number,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileListsNEW,The following statement contains a magic number: hashIndex = 5;  
Magic Number,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileListsNEW,The following statement contains a magic number: row = new object[6];  
Magic Number,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileListsNEW,The following statement contains a magic number: foreach (DataGridViewRow dgvRow in dgvRowCollection) {  	row [0] = (bool)dgvRow.Cells [0].Value;  	row [1] = (string)dgvRow.Cells [1].Value;  	row [2] = (string)dgvRow.Cells [2].Value;  	row [3] = (string)dgvRow.Cells [3].Value;  	row [4] = (string)dgvRow.Cells [4].Value;  	row [5] = (string)dgvRow.Cells [5].Value;  	rows.Add (row [hashIndex].ToString ()' row);  	if (dgvRow.Selected)  		selectedHash = (string)row [5];  }  
Magic Number,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileListsNEW,The following statement contains a magic number: foreach (DataGridViewRow dgvRow in dgvRowCollection) {  	row [0] = (bool)dgvRow.Cells [0].Value;  	row [1] = (string)dgvRow.Cells [1].Value;  	row [2] = (string)dgvRow.Cells [2].Value;  	row [3] = (string)dgvRow.Cells [3].Value;  	row [4] = (string)dgvRow.Cells [4].Value;  	row [5] = (string)dgvRow.Cells [5].Value;  	rows.Add (row [hashIndex].ToString ()' row);  	if (dgvRow.Selected)  		selectedHash = (string)row [5];  }  
Magic Number,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileListsNEW,The following statement contains a magic number: foreach (DataGridViewRow dgvRow in dgvRowCollection) {  	row [0] = (bool)dgvRow.Cells [0].Value;  	row [1] = (string)dgvRow.Cells [1].Value;  	row [2] = (string)dgvRow.Cells [2].Value;  	row [3] = (string)dgvRow.Cells [3].Value;  	row [4] = (string)dgvRow.Cells [4].Value;  	row [5] = (string)dgvRow.Cells [5].Value;  	rows.Add (row [hashIndex].ToString ()' row);  	if (dgvRow.Selected)  		selectedHash = (string)row [5];  }  
Magic Number,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileListsNEW,The following statement contains a magic number: foreach (DataGridViewRow dgvRow in dgvRowCollection) {  	row [0] = (bool)dgvRow.Cells [0].Value;  	row [1] = (string)dgvRow.Cells [1].Value;  	row [2] = (string)dgvRow.Cells [2].Value;  	row [3] = (string)dgvRow.Cells [3].Value;  	row [4] = (string)dgvRow.Cells [4].Value;  	row [5] = (string)dgvRow.Cells [5].Value;  	rows.Add (row [hashIndex].ToString ()' row);  	if (dgvRow.Selected)  		selectedHash = (string)row [5];  }  
Magic Number,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileListsNEW,The following statement contains a magic number: foreach (DataGridViewRow dgvRow in dgvRowCollection) {  	row [0] = (bool)dgvRow.Cells [0].Value;  	row [1] = (string)dgvRow.Cells [1].Value;  	row [2] = (string)dgvRow.Cells [2].Value;  	row [3] = (string)dgvRow.Cells [3].Value;  	row [4] = (string)dgvRow.Cells [4].Value;  	row [5] = (string)dgvRow.Cells [5].Value;  	rows.Add (row [hashIndex].ToString ()' row);  	if (dgvRow.Selected)  		selectedHash = (string)row [5];  }  
Magic Number,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileListsNEW,The following statement contains a magic number: foreach (DataGridViewRow dgvRow in dgvRowCollection) {  	row [0] = (bool)dgvRow.Cells [0].Value;  	row [1] = (string)dgvRow.Cells [1].Value;  	row [2] = (string)dgvRow.Cells [2].Value;  	row [3] = (string)dgvRow.Cells [3].Value;  	row [4] = (string)dgvRow.Cells [4].Value;  	row [5] = (string)dgvRow.Cells [5].Value;  	rows.Add (row [hashIndex].ToString ()' row);  	if (dgvRow.Selected)  		selectedHash = (string)row [5];  }  
Magic Number,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileListsNEW,The following statement contains a magic number: foreach (DataGridViewRow dgvRow in dgvRowCollection) {  	row [0] = (bool)dgvRow.Cells [0].Value;  	row [1] = (string)dgvRow.Cells [1].Value;  	row [2] = (string)dgvRow.Cells [2].Value;  	row [3] = (string)dgvRow.Cells [3].Value;  	row [4] = (string)dgvRow.Cells [4].Value;  	row [5] = (string)dgvRow.Cells [5].Value;  	rows.Add (row [hashIndex].ToString ()' row);  	if (dgvRow.Selected)  		selectedHash = (string)row [5];  }  
Magic Number,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileListsNEW,The following statement contains a magic number: foreach (DataGridViewRow dgvRow in dgvRowCollection) {  	row [0] = (bool)dgvRow.Cells [0].Value;  	row [1] = (string)dgvRow.Cells [1].Value;  	row [2] = (string)dgvRow.Cells [2].Value;  	row [3] = (string)dgvRow.Cells [3].Value;  	row [4] = (string)dgvRow.Cells [4].Value;  	row [5] = (string)dgvRow.Cells [5].Value;  	rows.Add (row [hashIndex].ToString ()' row);  	if (dgvRow.Selected)  		selectedHash = (string)row [5];  }  
Magic Number,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileListsNEW,The following statement contains a magic number: foreach (DataGridViewRow dgvRow in dgvRowCollection) {  	row [0] = (bool)dgvRow.Cells [0].Value;  	row [1] = (string)dgvRow.Cells [1].Value;  	row [2] = (string)dgvRow.Cells [2].Value;  	row [3] = (string)dgvRow.Cells [3].Value;  	row [4] = (string)dgvRow.Cells [4].Value;  	row [5] = (string)dgvRow.Cells [5].Value;  	rows.Add (row [hashIndex].ToString ()' row);  	if (dgvRow.Selected)  		selectedHash = (string)row [5];  }  
Magic Number,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileListsNEW,The following statement contains a magic number: row [2] = (string)dgvRow.Cells [2].Value;  
Magic Number,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileListsNEW,The following statement contains a magic number: row [2] = (string)dgvRow.Cells [2].Value;  
Magic Number,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileListsNEW,The following statement contains a magic number: row [3] = (string)dgvRow.Cells [3].Value;  
Magic Number,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileListsNEW,The following statement contains a magic number: row [3] = (string)dgvRow.Cells [3].Value;  
Magic Number,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileListsNEW,The following statement contains a magic number: row [4] = (string)dgvRow.Cells [4].Value;  
Magic Number,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileListsNEW,The following statement contains a magic number: row [4] = (string)dgvRow.Cells [4].Value;  
Magic Number,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileListsNEW,The following statement contains a magic number: row [5] = (string)dgvRow.Cells [5].Value;  
Magic Number,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileListsNEW,The following statement contains a magic number: row [5] = (string)dgvRow.Cells [5].Value;  
Magic Number,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileListsNEW,The following statement contains a magic number: if (dgvRow.Selected)  	selectedHash = (string)row [5];  
Magic Number,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileListsNEW,The following statement contains a magic number: selectedHash = (string)row [5];  
Magic Number,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileListsNEW,The following statement contains a magic number: hashIndex = 3;  
Magic Number,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileListsNEW,The following statement contains a magic number: row = new object[4];  
Magic Number,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileListsNEW,The following statement contains a magic number: foreach (DataGridViewRow dgvRow in dgvRowCollection) {  	row [0] = (string)dgvRow.Cells [0].Value;  	row [1] = (string)dgvRow.Cells [1].Value;  	row [2] = (string)dgvRow.Cells [2].Value;  	row [3] = (string)dgvRow.Cells [3].Value;  	rows.Add (row [hashIndex].ToString ()' row);  	if (dgvRow.Selected)  		selectedHash = (string)row [3];  }  
Magic Number,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileListsNEW,The following statement contains a magic number: foreach (DataGridViewRow dgvRow in dgvRowCollection) {  	row [0] = (string)dgvRow.Cells [0].Value;  	row [1] = (string)dgvRow.Cells [1].Value;  	row [2] = (string)dgvRow.Cells [2].Value;  	row [3] = (string)dgvRow.Cells [3].Value;  	rows.Add (row [hashIndex].ToString ()' row);  	if (dgvRow.Selected)  		selectedHash = (string)row [3];  }  
Magic Number,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileListsNEW,The following statement contains a magic number: foreach (DataGridViewRow dgvRow in dgvRowCollection) {  	row [0] = (string)dgvRow.Cells [0].Value;  	row [1] = (string)dgvRow.Cells [1].Value;  	row [2] = (string)dgvRow.Cells [2].Value;  	row [3] = (string)dgvRow.Cells [3].Value;  	rows.Add (row [hashIndex].ToString ()' row);  	if (dgvRow.Selected)  		selectedHash = (string)row [3];  }  
Magic Number,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileListsNEW,The following statement contains a magic number: foreach (DataGridViewRow dgvRow in dgvRowCollection) {  	row [0] = (string)dgvRow.Cells [0].Value;  	row [1] = (string)dgvRow.Cells [1].Value;  	row [2] = (string)dgvRow.Cells [2].Value;  	row [3] = (string)dgvRow.Cells [3].Value;  	rows.Add (row [hashIndex].ToString ()' row);  	if (dgvRow.Selected)  		selectedHash = (string)row [3];  }  
Magic Number,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileListsNEW,The following statement contains a magic number: foreach (DataGridViewRow dgvRow in dgvRowCollection) {  	row [0] = (string)dgvRow.Cells [0].Value;  	row [1] = (string)dgvRow.Cells [1].Value;  	row [2] = (string)dgvRow.Cells [2].Value;  	row [3] = (string)dgvRow.Cells [3].Value;  	rows.Add (row [hashIndex].ToString ()' row);  	if (dgvRow.Selected)  		selectedHash = (string)row [3];  }  
Magic Number,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileListsNEW,The following statement contains a magic number: row [2] = (string)dgvRow.Cells [2].Value;  
Magic Number,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileListsNEW,The following statement contains a magic number: row [2] = (string)dgvRow.Cells [2].Value;  
Magic Number,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileListsNEW,The following statement contains a magic number: row [3] = (string)dgvRow.Cells [3].Value;  
Magic Number,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileListsNEW,The following statement contains a magic number: row [3] = (string)dgvRow.Cells [3].Value;  
Magic Number,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileListsNEW,The following statement contains a magic number: if (dgvRow.Selected)  	selectedHash = (string)row [3];  
Magic Number,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileListsNEW,The following statement contains a magic number: selectedHash = (string)row [3];  
Magic Number,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileListsNEW,The following statement contains a magic number: foreach (FileTransfer ft in list.Values) {  	hash = ft.file.hash;  	if (dir == Direction.DIRECTION_DOWNLOAD) {  		row = new object[] {  			false'  			String.Format ("{0:0'0.00}"' ft.fraction * 100) + "%"'  			String.Format ("{0:0'0.00}"' ft.rate_kBs)'  			ft.file.name'  			Processor.BuildSizeString (ft.file.size)'  			hash  		};  	}  	else {  		row = new object[] {  			String.Format ("{0:0'0.00}"' ft.rate_kBs)'  			ft.file.name'  			Processor.BuildSizeString (ft.file.size)'  			hash  		};  	}  	if (rows.ContainsKey (hash))  		// update                      		rows [hash] = row;  	else  		//add new  		rows.Add (hash' row);  }  
Magic Number,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileListsNEW,The following statement contains a magic number: if (dir == Direction.DIRECTION_DOWNLOAD) {  	row = new object[] {  		false'  		String.Format ("{0:0'0.00}"' ft.fraction * 100) + "%"'  		String.Format ("{0:0'0.00}"' ft.rate_kBs)'  		ft.file.name'  		Processor.BuildSizeString (ft.file.size)'  		hash  	};  }  else {  	row = new object[] {  		String.Format ("{0:0'0.00}"' ft.rate_kBs)'  		ft.file.name'  		Processor.BuildSizeString (ft.file.size)'  		hash  	};  }  
Magic Number,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,UpdateFileListsNEW,The following statement contains a magic number: row = new object[] {  	false'  	String.Format ("{0:0'0.00}"' ft.fraction * 100) + "%"'  	String.Format ("{0:0'0.00}"' ft.rate_kBs)'  	ft.file.name'  	Processor.BuildSizeString (ft.file.size)'  	hash  };  
Magic Number,RetroShareSSHClient,FileProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\FileProcessor.cs,BuildFileTransferString,The following statement contains a magic number: return /* ft.state.ToString() + " - " + */String.Format ("{0:0'0.00}"' ft.rate_kBs) + "KiB/s - " + ((ft.direction == Direction.DIRECTION_DOWNLOAD) ? (String.Format ("{0:0'0.00}"' ft.fraction * 100) + "% - ") : "") + Processor.BuildSizeString (ft.file.size) + " - " + ft.file.name;  
Magic Number,RetroShareSSHClient,PeerProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\PeerProcessor.cs,PortInRange,The following statement contains a magic number: return (port >= 1024 && port <= UInt16.MaxValue);  
Magic Number,RetroShareSSHClient,Processor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\Processor.cs,BuildSizeString,The following statement contains a magic number: while (sizef > 1024) {  	counter++;  	sizef /= 1024;  }  
Magic Number,RetroShareSSHClient,Processor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\Processor.cs,BuildSizeString,The following statement contains a magic number: while (sizef > 1024) {  	counter++;  	sizef /= 1024;  }  
Magic Number,RetroShareSSHClient,Processor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\Processor.cs,BuildSizeString,The following statement contains a magic number: sizef /= 1024;  
Magic Number,RetroShareSSHClient,Processor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\Processor.cs,BuildSizeString,The following statement contains a magic number: switch (counter) {  case 0:  	s = "B";  	break;  case 1:  	s = "KiB";  	break;  case 2:  	s = "MiB";  	break;  case 3:  	s = "GiB";  	break;  case 4:  	s = "TiB";  	break;  case 5:  	s = "PiB";  	break;  default:  	s = "too damn high";  	break;  }  
Magic Number,RetroShareSSHClient,Processor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\Processor.cs,BuildSizeString,The following statement contains a magic number: switch (counter) {  case 0:  	s = "B";  	break;  case 1:  	s = "KiB";  	break;  case 2:  	s = "MiB";  	break;  case 3:  	s = "GiB";  	break;  case 4:  	s = "TiB";  	break;  case 5:  	s = "PiB";  	break;  default:  	s = "too damn high";  	break;  }  
Magic Number,RetroShareSSHClient,Processor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\Processor.cs,BuildSizeString,The following statement contains a magic number: switch (counter) {  case 0:  	s = "B";  	break;  case 1:  	s = "KiB";  	break;  case 2:  	s = "MiB";  	break;  case 3:  	s = "GiB";  	break;  case 4:  	s = "TiB";  	break;  case 5:  	s = "PiB";  	break;  default:  	s = "too damn high";  	break;  }  
Magic Number,RetroShareSSHClient,Processor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\Processor.cs,BuildSizeString,The following statement contains a magic number: switch (counter) {  case 0:  	s = "B";  	break;  case 1:  	s = "KiB";  	break;  case 2:  	s = "MiB";  	break;  case 3:  	s = "GiB";  	break;  case 4:  	s = "TiB";  	break;  case 5:  	s = "PiB";  	break;  default:  	s = "too damn high";  	break;  }  
Magic Number,RetroShareSSHClient,SearchProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\SearchProcessor.cs,GetSearchResults,The following statement contains a magic number: foreach (GuiSearch gs in values) {  	if (gs.Age > 10 && gs.Age < 60) {  		System.Diagnostics.Debug.WriteLineIf (DEBUG' "Search: requesting results for " + gs.ID);  		searchIDs.Add (gs.ID);  	}  }  
Magic Number,RetroShareSSHClient,SearchProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\SearchProcessor.cs,GetSearchResults,The following statement contains a magic number: foreach (GuiSearch gs in values) {  	if (gs.Age > 10 && gs.Age < 60) {  		System.Diagnostics.Debug.WriteLineIf (DEBUG' "Search: requesting results for " + gs.ID);  		searchIDs.Add (gs.ID);  	}  }  
Magic Number,RetroShareSSHClient,SearchProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\SearchProcessor.cs,GetSearchResults,The following statement contains a magic number: if (gs.Age > 10 && gs.Age < 60) {  	System.Diagnostics.Debug.WriteLineIf (DEBUG' "Search: requesting results for " + gs.ID);  	searchIDs.Add (gs.ID);  }  
Magic Number,RetroShareSSHClient,SearchProcessor,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Processor\SearchProcessor.cs,GetSearchResults,The following statement contains a magic number: if (gs.Age > 10 && gs.Age < 60) {  	System.Diagnostics.Debug.WriteLineIf (DEBUG' "Search: requesting results for " + gs.ID);  	searchIDs.Add (gs.ID);  }  
Magic Number,RetroShareSSHClient,AutoResponse,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Tools\AutoResponse.cs,Process,The following statement contains a magic number: if (msgIN.send_time < Processor.conv_Date2Timestam (DateTime.UtcNow) - 60)  	return null;  
Magic Number,RetroShareSSHClient,RsCollection,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Tools\RsCollection.cs,ReadCollection,The following statement contains a magic number: while (tr.Read ()) {  	if (tr.Name == "")  		continue;  	System.Diagnostics.Debug.WriteLineIf (DEBUG' "ReadCollection: node name " + tr.Name);  	System.Diagnostics.Debug.WriteLineIf (DEBUG' "ReadCollection: att count " + tr.AttributeCount);  	switch (tr.Name) {  	case "RsCollection":  		foundCollectionTag = true;  		break;  	case "Directory":  		// save path   		try {  			System.Diagnostics.Debug.WriteLineIf (DEBUG' "ReadCollection: getting file path");  			currentPath = tr.GetAttribute ("name");  		}  		catch (Exception e) {  			System.Diagnostics.Debug.WriteLineIf (DEBUG' "ReadCollection: error reading file path");  			System.Diagnostics.Debug.WriteLineIf (DEBUG' "ReadCollection: " + e.Message);  		}  		break;  	case "File":  		// create a tmp file to add it to the list  		tmpFile = new File ();  		// we need 3 attributes (name' size' hash)  		if (tr.AttributeCount != 3) {  			System.Diagnostics.Debug.WriteLineIf (DEBUG' "ReadCollection: file att != 3");  			break;  		}  		// try to add all 3 attributes  		try {  			System.Diagnostics.Debug.WriteLineIf (DEBUG' "ReadCollection: adding file");  			//tmpFile.size = System.Convert.ToUInt32(tr.GetAttribute(0));  			//tmpFile.hash = tr.GetAttribute(1);  			//tmpFile.name = tr.GetAttribute(2);  			tmpFile.hash = tr.GetAttribute ("sha1");  			tmpFile.name = tr.GetAttribute ("name");  			tmpFile.size = System.Convert.ToUInt32 (tr.GetAttribute ("size"));  			// TODO add file path  		}  		catch (Exception e) {  			System.Diagnostics.Debug.WriteLineIf (DEBUG' "ReadCollection: error adding file");  			System.Diagnostics.Debug.WriteLineIf (DEBUG' "ReadCollection: " + e.Message);  			break;  		}  		// the hash is the only thing we can ckeck  		System.Diagnostics.Debug.WriteLineIf (DEBUG' "ReadCollection: checking file hash");  		if (tmpFile.hash.Length != 40) {  			System.Diagnostics.Debug.WriteLineIf (DEBUG' "ReadCollection: error hash.length != 40");  			break;  		}  		// add file to list  		fileList.Add (tmpFile);  		break;  	default:  		System.Diagnostics.Debug.WriteLineIf (DEBUG' "ReadCollection: unknown name " + tr.Name);  		break;  	}  	// swicth  }  
Magic Number,RetroShareSSHClient,RsCollection,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Tools\RsCollection.cs,ReadCollection,The following statement contains a magic number: while (tr.Read ()) {  	if (tr.Name == "")  		continue;  	System.Diagnostics.Debug.WriteLineIf (DEBUG' "ReadCollection: node name " + tr.Name);  	System.Diagnostics.Debug.WriteLineIf (DEBUG' "ReadCollection: att count " + tr.AttributeCount);  	switch (tr.Name) {  	case "RsCollection":  		foundCollectionTag = true;  		break;  	case "Directory":  		// save path   		try {  			System.Diagnostics.Debug.WriteLineIf (DEBUG' "ReadCollection: getting file path");  			currentPath = tr.GetAttribute ("name");  		}  		catch (Exception e) {  			System.Diagnostics.Debug.WriteLineIf (DEBUG' "ReadCollection: error reading file path");  			System.Diagnostics.Debug.WriteLineIf (DEBUG' "ReadCollection: " + e.Message);  		}  		break;  	case "File":  		// create a tmp file to add it to the list  		tmpFile = new File ();  		// we need 3 attributes (name' size' hash)  		if (tr.AttributeCount != 3) {  			System.Diagnostics.Debug.WriteLineIf (DEBUG' "ReadCollection: file att != 3");  			break;  		}  		// try to add all 3 attributes  		try {  			System.Diagnostics.Debug.WriteLineIf (DEBUG' "ReadCollection: adding file");  			//tmpFile.size = System.Convert.ToUInt32(tr.GetAttribute(0));  			//tmpFile.hash = tr.GetAttribute(1);  			//tmpFile.name = tr.GetAttribute(2);  			tmpFile.hash = tr.GetAttribute ("sha1");  			tmpFile.name = tr.GetAttribute ("name");  			tmpFile.size = System.Convert.ToUInt32 (tr.GetAttribute ("size"));  			// TODO add file path  		}  		catch (Exception e) {  			System.Diagnostics.Debug.WriteLineIf (DEBUG' "ReadCollection: error adding file");  			System.Diagnostics.Debug.WriteLineIf (DEBUG' "ReadCollection: " + e.Message);  			break;  		}  		// the hash is the only thing we can ckeck  		System.Diagnostics.Debug.WriteLineIf (DEBUG' "ReadCollection: checking file hash");  		if (tmpFile.hash.Length != 40) {  			System.Diagnostics.Debug.WriteLineIf (DEBUG' "ReadCollection: error hash.length != 40");  			break;  		}  		// add file to list  		fileList.Add (tmpFile);  		break;  	default:  		System.Diagnostics.Debug.WriteLineIf (DEBUG' "ReadCollection: unknown name " + tr.Name);  		break;  	}  	// swicth  }  
Magic Number,RetroShareSSHClient,RsCollection,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Tools\RsCollection.cs,ReadCollection,The following statement contains a magic number: switch (tr.Name) {  case "RsCollection":  	foundCollectionTag = true;  	break;  case "Directory":  	// save path   	try {  		System.Diagnostics.Debug.WriteLineIf (DEBUG' "ReadCollection: getting file path");  		currentPath = tr.GetAttribute ("name");  	}  	catch (Exception e) {  		System.Diagnostics.Debug.WriteLineIf (DEBUG' "ReadCollection: error reading file path");  		System.Diagnostics.Debug.WriteLineIf (DEBUG' "ReadCollection: " + e.Message);  	}  	break;  case "File":  	// create a tmp file to add it to the list  	tmpFile = new File ();  	// we need 3 attributes (name' size' hash)  	if (tr.AttributeCount != 3) {  		System.Diagnostics.Debug.WriteLineIf (DEBUG' "ReadCollection: file att != 3");  		break;  	}  	// try to add all 3 attributes  	try {  		System.Diagnostics.Debug.WriteLineIf (DEBUG' "ReadCollection: adding file");  		//tmpFile.size = System.Convert.ToUInt32(tr.GetAttribute(0));  		//tmpFile.hash = tr.GetAttribute(1);  		//tmpFile.name = tr.GetAttribute(2);  		tmpFile.hash = tr.GetAttribute ("sha1");  		tmpFile.name = tr.GetAttribute ("name");  		tmpFile.size = System.Convert.ToUInt32 (tr.GetAttribute ("size"));  		// TODO add file path  	}  	catch (Exception e) {  		System.Diagnostics.Debug.WriteLineIf (DEBUG' "ReadCollection: error adding file");  		System.Diagnostics.Debug.WriteLineIf (DEBUG' "ReadCollection: " + e.Message);  		break;  	}  	// the hash is the only thing we can ckeck  	System.Diagnostics.Debug.WriteLineIf (DEBUG' "ReadCollection: checking file hash");  	if (tmpFile.hash.Length != 40) {  		System.Diagnostics.Debug.WriteLineIf (DEBUG' "ReadCollection: error hash.length != 40");  		break;  	}  	// add file to list  	fileList.Add (tmpFile);  	break;  default:  	System.Diagnostics.Debug.WriteLineIf (DEBUG' "ReadCollection: unknown name " + tr.Name);  	break;  }  
Magic Number,RetroShareSSHClient,RsCollection,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Tools\RsCollection.cs,ReadCollection,The following statement contains a magic number: switch (tr.Name) {  case "RsCollection":  	foundCollectionTag = true;  	break;  case "Directory":  	// save path   	try {  		System.Diagnostics.Debug.WriteLineIf (DEBUG' "ReadCollection: getting file path");  		currentPath = tr.GetAttribute ("name");  	}  	catch (Exception e) {  		System.Diagnostics.Debug.WriteLineIf (DEBUG' "ReadCollection: error reading file path");  		System.Diagnostics.Debug.WriteLineIf (DEBUG' "ReadCollection: " + e.Message);  	}  	break;  case "File":  	// create a tmp file to add it to the list  	tmpFile = new File ();  	// we need 3 attributes (name' size' hash)  	if (tr.AttributeCount != 3) {  		System.Diagnostics.Debug.WriteLineIf (DEBUG' "ReadCollection: file att != 3");  		break;  	}  	// try to add all 3 attributes  	try {  		System.Diagnostics.Debug.WriteLineIf (DEBUG' "ReadCollection: adding file");  		//tmpFile.size = System.Convert.ToUInt32(tr.GetAttribute(0));  		//tmpFile.hash = tr.GetAttribute(1);  		//tmpFile.name = tr.GetAttribute(2);  		tmpFile.hash = tr.GetAttribute ("sha1");  		tmpFile.name = tr.GetAttribute ("name");  		tmpFile.size = System.Convert.ToUInt32 (tr.GetAttribute ("size"));  		// TODO add file path  	}  	catch (Exception e) {  		System.Diagnostics.Debug.WriteLineIf (DEBUG' "ReadCollection: error adding file");  		System.Diagnostics.Debug.WriteLineIf (DEBUG' "ReadCollection: " + e.Message);  		break;  	}  	// the hash is the only thing we can ckeck  	System.Diagnostics.Debug.WriteLineIf (DEBUG' "ReadCollection: checking file hash");  	if (tmpFile.hash.Length != 40) {  		System.Diagnostics.Debug.WriteLineIf (DEBUG' "ReadCollection: error hash.length != 40");  		break;  	}  	// add file to list  	fileList.Add (tmpFile);  	break;  default:  	System.Diagnostics.Debug.WriteLineIf (DEBUG' "ReadCollection: unknown name " + tr.Name);  	break;  }  
Magic Number,RetroShareSSHClient,RsCollection,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Tools\RsCollection.cs,ReadCollection,The following statement contains a magic number: if (tr.AttributeCount != 3) {  	System.Diagnostics.Debug.WriteLineIf (DEBUG' "ReadCollection: file att != 3");  	break;  }  
Magic Number,RetroShareSSHClient,RsCollection,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\Tools\RsCollection.cs,ReadCollection,The following statement contains a magic number: if (tmpFile.hash.Length != 40) {  	System.Diagnostics.Debug.WriteLineIf (DEBUG' "ReadCollection: error hash.length != 40");  	break;  }  
Missing Default,RetroShareSSHClient,MainForm,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\MainForm.cs,EventFromThread,The following switch statement is missing a default case: switch (type) {  case RSRPC.EventType.Error:  	Exception e = (Exception)obj;  	this.Invoke ((MethodInvoker)delegate {  		Error (e);  	});  	break;  case RSRPC.EventType.Reconnect:  	this.Invoke ((MethodInvoker)delegate {  		ReconnectOccurred ();  	});  	break;  }  
Missing Default,RetroShareSSHClient,MainForm,C:\repos\RetroShare_RSSSHClient\RetroShareSSHClient\RetroShareSSHClient\MainForm.cs,UpdateSystemStatus,The following switch statement is missing a default case: switch (msg.net_status) {  case ResponseSystemStatus.NetCode.BAD_NATSYM:  	l_network.Text = "BAD: symmetric NAT";  	break;  case ResponseSystemStatus.NetCode.BAD_NODHT_NAT:  	l_network.Text = "BAD: natted/no DHT";  	break;  case ResponseSystemStatus.NetCode.BAD_OFFLINE:  	l_network.Text = "BAD: offline";  	break;  case ResponseSystemStatus.NetCode.BAD_UNKNOWN:  	l_network.Text = "BAD: unknown";  	break;  case ResponseSystemStatus.NetCode.WARNING_NATTED:  	l_network.Text = "Warning: natted";  	break;  case ResponseSystemStatus.NetCode.WARNING_NODHT:  	l_network.Text = "Warning: no DHT";  	break;  case ResponseSystemStatus.NetCode.WARNING_RESTART:  	l_network.Text = "Warning: restarting";  	break;  case ResponseSystemStatus.NetCode.ADV_FORWARD:  	l_network.Text = "GOD: adv. forward";  	break;  case ResponseSystemStatus.NetCode.GOOD:  	l_network.Text = "GOD :)";  	break;  }  
