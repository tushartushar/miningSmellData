Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Sehraf.RSRPC,RSProtoBuf,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSProtoBuf.cs,mainLoop,Cyclomatic complexity of the method is 9
Long Parameter List,Sehraf.RSRPC,RSProtoBuf,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSProtoBuf.cs,RSProtoBuf,The method has 6 parameters.
Long Parameter List,Sehraf.RSRPC,RSSSHConnector,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSSSHConnector.cs,RSSSHConnector,The method has 5 parameters.
Long Statement,Sehraf.RSRPC,RSProtoBuf,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSProtoBuf.cs,Send,The length of the statement  "	System.Diagnostics.Debug.WriteLineIf (DEBUG' "send: sending packet " + msg.ReqID + " MsgID: " + msg.MsgID + " body size: " + msg.BodySize); " is 139.
Long Statement,Sehraf.RSRPC,RSProtoBuf,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSProtoBuf.cs,ReadMsgFromStream,The length of the statement  "		System.Diagnostics.Debug.WriteLineIf (DEBUG' "rec: ReqID: " + msg.ReqID + " - MsgID: " + msg.MsgID + " - body size: " + msg.BodySize + " byte"); " is 144.
Long Statement,Sehraf.RSRPC,RSProtoBuf,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSProtoBuf.cs,ReadMsgFromStream,The length of the statement  "		System.Diagnostics.Debug.WriteLineIf (DEBUG' "rec: ReqID: " + msg.ReqID + " - MsgID: " + msg.MsgID + " - body size: " + msg.BodySize + " byte"); " is 144.
Long Statement,Sehraf.RSRPC,RSProtoBuf,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSProtoBuf.cs,mainLoop,The length of the statement  "			//        System.Diagnostics.Debug.WriteLineIf(DEBUG' "rec: ReqID: " + msg.ReqID + " - MsgID: " + msg.MsgID + " - body size: " + msg.BodySize + " byte"); " is 153.
Long Statement,Sehraf.RSRPC,RSRPC,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSRPC.cs,ChatGetLobbies,The length of the statement  "	uint msgID = RSProtoBuf.ConstructMsgId ((byte)ExtensionId.CORE' (ushort)PackageId.CHAT' (byte)rsctrl.chat.RequestMsgIds.MsgId_RequestChatLobbies' false); " is 153.
Long Statement,Sehraf.RSRPC,RSRPC,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSRPC.cs,ChatCreateLobby,The length of the statement  "	uint msgID = RSProtoBuf.ConstructMsgId ((byte)ExtensionId.CORE' (ushort)PackageId.CHAT' (byte)rsctrl.chat.RequestMsgIds.MsgId_RequestCreateLobby' false); " is 153.
Long Statement,Sehraf.RSRPC,RSRPC,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSRPC.cs,ChatJoinLeaveLobby,The length of the statement  "	uint msgID = RSProtoBuf.ConstructMsgId ((byte)ExtensionId.CORE' (ushort)PackageId.CHAT' (byte)rsctrl.chat.RequestMsgIds.MsgId_RequestJoinOrLeaveLobby' false); " is 158.
Long Statement,Sehraf.RSRPC,RSRPC,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSRPC.cs,ChatRegisterEvent,The length of the statement  "	uint msgID = RSProtoBuf.ConstructMsgId ((byte)ExtensionId.CORE' (ushort)PackageId.CHAT' (byte)rsctrl.chat.RequestMsgIds.MsgId_RequestRegisterEvents' false); " is 156.
Long Statement,Sehraf.RSRPC,RSRPC,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSRPC.cs,ChatSendMsg,The length of the statement  "	uint msgID = RSProtoBuf.ConstructMsgId ((byte)ExtensionId.CORE' (ushort)PackageId.CHAT' (byte)rsctrl.chat.RequestMsgIds.MsgId_RequestSendMessage' false); " is 153.
Long Statement,Sehraf.RSRPC,RSRPC,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSRPC.cs,ChatSetLobbyNickname,The length of the statement  "	uint msgID = RSProtoBuf.ConstructMsgId ((byte)ExtensionId.CORE' (ushort)PackageId.CHAT' (byte)rsctrl.chat.RequestMsgIds.MsgId_RequestSetLobbyNickname' false); " is 158.
Long Statement,Sehraf.RSRPC,RSRPC,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSRPC.cs,ChatRequestChatHistory,The length of the statement  "	uint msgID = RSProtoBuf.ConstructMsgId ((byte)ExtensionId.CORE' (ushort)PackageId.CHAT' (byte)rsctrl.chat.RequestMsgIds.MsgId_RequestChatHistory' false); " is 153.
Long Statement,Sehraf.RSRPC,RSRPC,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSRPC.cs,FilesControllDownload,The length of the statement  "	uint msgID = RSProtoBuf.ConstructMsgId ((byte)ExtensionId.CORE' (ushort)PackageId.FILES' (byte)rsctrl.files.RequestMsgIds.MsgId_RequestControlDownload' false); " is 159.
Long Statement,Sehraf.RSRPC,RSRPC,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSRPC.cs,FilesGetTransferList,The length of the statement  "	uint msgID = RSProtoBuf.ConstructMsgId ((byte)ExtensionId.CORE' (ushort)PackageId.FILES' (byte)rsctrl.files.RequestMsgIds.MsgId_RequestTransferList' false); " is 156.
Long Statement,Sehraf.RSRPC,RSRPC,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSRPC.cs,FilesRequestShareDirList,The length of the statement  "	uint msgID = RSProtoBuf.ConstructMsgId ((byte)ExtensionId.CORE' (ushort)PackageId.FILES' (byte)rsctrl.files.RequestMsgIds.MsgId_RequestShareDirList' false); " is 156.
Long Statement,Sehraf.RSRPC,RSRPC,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSRPC.cs,PeersAddPeer,The length of the statement  "	uint msgID = RSProtoBuf.ConstructMsgId ((byte)ExtensionId.CORE' (ushort)PackageId.PEERS' (byte)rsctrl.peers.RequestMsgIds.MsgId_RequestAddPeer' false); " is 151.
Long Statement,Sehraf.RSRPC,RSRPC,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSRPC.cs,PeersExaminePeer,The length of the statement  "	uint msgID = RSProtoBuf.ConstructMsgId ((byte)ExtensionId.CORE' (ushort)PackageId.PEERS' (byte)rsctrl.peers.RequestMsgIds.MsgId_RequestExaminePeer' false); " is 155.
Long Statement,Sehraf.RSRPC,RSRPC,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSRPC.cs,PeersModifyPeer,The length of the statement  "	uint msgID = RSProtoBuf.ConstructMsgId ((byte)ExtensionId.CORE' (ushort)PackageId.PEERS' (byte)rsctrl.peers.RequestMsgIds.MsgId_RequestModifyPeer' false); " is 154.
Long Statement,Sehraf.RSRPC,RSRPC,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSRPC.cs,PeersGetFriendList,The length of the statement  "	uint msgID = RSProtoBuf.ConstructMsgId ((byte)ExtensionId.CORE' (ushort)PackageId.PEERS' (byte)rsctrl.peers.RequestMsgIds.MsgId_RequestPeers' false); " is 149.
Long Statement,Sehraf.RSRPC,RSRPC,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSRPC.cs,SearchBasic,The length of the statement  "	uint msgID = RSProtoBuf.ConstructMsgId ((byte)ExtensionId.CORE' (ushort)PackageId.SEARCH' (byte)rsctrl.search.RequestMsgIds.MsgId_RequestBasicSearch' false); " is 157.
Long Statement,Sehraf.RSRPC,RSRPC,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSRPC.cs,SearchClose,The length of the statement  "	uint msgID = RSProtoBuf.ConstructMsgId ((byte)ExtensionId.CORE' (ushort)PackageId.SEARCH' (byte)rsctrl.search.RequestMsgIds.MsgId_RequestCloseSearch' false); " is 157.
Long Statement,Sehraf.RSRPC,RSRPC,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSRPC.cs,SearchList,The length of the statement  "	uint msgID = RSProtoBuf.ConstructMsgId ((byte)ExtensionId.CORE' (ushort)PackageId.SEARCH' (byte)rsctrl.search.RequestMsgIds.MsgId_RequestListSearches' false); " is 158.
Long Statement,Sehraf.RSRPC,RSRPC,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSRPC.cs,SearchResult,The length of the statement  "	uint msgID = RSProtoBuf.ConstructMsgId ((byte)ExtensionId.CORE' (ushort)PackageId.SEARCH' (byte)rsctrl.search.RequestMsgIds.MsgId_RequestSearchResults' false); " is 159.
Long Statement,Sehraf.RSRPC,RSRPC,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSRPC.cs,StreamRequestControlStream,The length of the statement  "	uint msgID = RSProtoBuf.ConstructMsgId ((byte)ExtensionId.CORE' (ushort)PackageId.STREAM' (byte)rsctrl.stream.RequestMsgIds.MsgId_RequestControlStream' false); " is 159.
Long Statement,Sehraf.RSRPC,RSRPC,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSRPC.cs,StreamRequestListStream,The length of the statement  "	uint msgID = RSProtoBuf.ConstructMsgId ((byte)ExtensionId.CORE' (ushort)PackageId.STREAM' (byte)rsctrl.stream.RequestMsgIds.MsgId_RequestListStreams' false); " is 157.
Long Statement,Sehraf.RSRPC,RSRPC,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSRPC.cs,StreamRequestStartFileStream,The length of the statement  "	uint msgID = RSProtoBuf.ConstructMsgId ((byte)ExtensionId.CORE' (ushort)PackageId.STREAM' (byte)rsctrl.stream.RequestMsgIds.MsgId_RequestStartFileStream' false); " is 161.
Long Statement,Sehraf.RSRPC,RSRPC,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSRPC.cs,SystemGetStatus,The length of the statement  "	uint msgID = RSProtoBuf.ConstructMsgId ((byte)ExtensionId.CORE' (ushort)PackageId.SYSTEM' (byte)rsctrl.system.RequestMsgIds.MsgId_RequestSystemStatus' false); " is 158.
Long Statement,Sehraf.RSRPC,RSRPC,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSRPC.cs,SystemRequestSystemAccount,The length of the statement  "	uint msgID = RSProtoBuf.ConstructMsgId ((byte)ExtensionId.CORE' (ushort)PackageId.SYSTEM' (byte)rsctrl.system.RequestMsgIds.MsgId_RequestSystemAccount' false); " is 159.
Long Statement,Sehraf.RSRPC,RSRPC,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSRPC.cs,SystemRequestExternalAccess,The length of the statement  "	uint msgID = RSProtoBuf.ConstructMsgId ((byte)ExtensionId.CORE' (ushort)PackageId.SYSTEM' (byte)rsctrl.system.RequestMsgIds.MsgId_RequestSystemExternalAccess' false); " is 166.
Complex Conditional,Sehraf.RSRPC,RSProtoBuf,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSProtoBuf.cs,mainLoop,The conditional expression  "_stream.DataAvailable && _run && !_finishQueue && !_findMagicCode"  is complex.
Magic Number,Sehraf.RSRPC,RSProtoBuf,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSProtoBuf.cs,Send,The following statement contains a magic number: if (_stream.CanWrite) {  	try {  		_stream.Write (CreatePacketFromMsg (msg)' 0' 16 + (int)msg.BodySize);  		_stream.Flush ();  	}  	catch (Exception e) {  		_parent.Error (e' RSRPC.ErrorFrom.ProtoBuf);  	}  }  else {  	System.Diagnostics.Debug.WriteLine ("send: can't write stream");  	_parent.Error (new IOException ("send: can't write stream")' RSRPC.ErrorFrom.ProtoBuf);  }  
Magic Number,Sehraf.RSRPC,RSProtoBuf,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSProtoBuf.cs,Send,The following statement contains a magic number: try {  	_stream.Write (CreatePacketFromMsg (msg)' 0' 16 + (int)msg.BodySize);  	_stream.Flush ();  }  catch (Exception e) {  	_parent.Error (e' RSRPC.ErrorFrom.ProtoBuf);  }  
Magic Number,Sehraf.RSRPC,RSProtoBuf,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSProtoBuf.cs,Send,The following statement contains a magic number: _stream.Write (CreatePacketFromMsg (msg)' 0' 16 + (int)msg.BodySize);  
Magic Number,Sehraf.RSRPC,RSProtoBuf,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSProtoBuf.cs,ReadMsgFromStream,The following statement contains a magic number: if (GetHeader) {  	// get Header  	if (!ReadFromStream (timeOut' 16' out buffer))  		return false;  	buffer.CopyTo (input' 0);  	// read header  	Array.Reverse (input);  	msg.BodySize = BitConverter.ToUInt32 (input' 0);  	msg.ReqID = BitConverter.ToUInt32 (input' 4);  	msg.MsgID = BitConverter.ToUInt32 (input' 8);  	magicCode = BitConverter.ToUInt32 (input' 12);  	System.Diagnostics.Debug.WriteLineIf (DEBUG' "rec: ReqID: " + msg.ReqID + " - MsgID: " + msg.MsgID + " - body size: " + msg.BodySize + " byte");  	if (magicCode != msg.MagicCode) {  		System.Diagnostics.Debug.WriteLineIf (DEBUG' "rec: MagicCode mismatch");  		_findMagicCode = true;  		_lastSize = msg.BodySize;  		_parent.Error (new Exception ("MagicCode mismatch")' RSRPC.ErrorFrom.ProtoBuf);  		return false;  	}  	if (!IsRpcMsgIdResponse (msg.MsgID))  		System.Diagnostics.Debug.WriteLineIf (DEBUG' "rec: msg is no response");  }  else  	System.Diagnostics.Debug.WriteLineIf (DEBUG' "rec: ReqID: " + msg.ReqID + " - MsgID: " + msg.MsgID + " - body size: " + msg.BodySize + " byte");  
Magic Number,Sehraf.RSRPC,RSProtoBuf,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSProtoBuf.cs,ReadMsgFromStream,The following statement contains a magic number: if (GetHeader) {  	// get Header  	if (!ReadFromStream (timeOut' 16' out buffer))  		return false;  	buffer.CopyTo (input' 0);  	// read header  	Array.Reverse (input);  	msg.BodySize = BitConverter.ToUInt32 (input' 0);  	msg.ReqID = BitConverter.ToUInt32 (input' 4);  	msg.MsgID = BitConverter.ToUInt32 (input' 8);  	magicCode = BitConverter.ToUInt32 (input' 12);  	System.Diagnostics.Debug.WriteLineIf (DEBUG' "rec: ReqID: " + msg.ReqID + " - MsgID: " + msg.MsgID + " - body size: " + msg.BodySize + " byte");  	if (magicCode != msg.MagicCode) {  		System.Diagnostics.Debug.WriteLineIf (DEBUG' "rec: MagicCode mismatch");  		_findMagicCode = true;  		_lastSize = msg.BodySize;  		_parent.Error (new Exception ("MagicCode mismatch")' RSRPC.ErrorFrom.ProtoBuf);  		return false;  	}  	if (!IsRpcMsgIdResponse (msg.MsgID))  		System.Diagnostics.Debug.WriteLineIf (DEBUG' "rec: msg is no response");  }  else  	System.Diagnostics.Debug.WriteLineIf (DEBUG' "rec: ReqID: " + msg.ReqID + " - MsgID: " + msg.MsgID + " - body size: " + msg.BodySize + " byte");  
Magic Number,Sehraf.RSRPC,RSProtoBuf,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSProtoBuf.cs,ReadMsgFromStream,The following statement contains a magic number: if (GetHeader) {  	// get Header  	if (!ReadFromStream (timeOut' 16' out buffer))  		return false;  	buffer.CopyTo (input' 0);  	// read header  	Array.Reverse (input);  	msg.BodySize = BitConverter.ToUInt32 (input' 0);  	msg.ReqID = BitConverter.ToUInt32 (input' 4);  	msg.MsgID = BitConverter.ToUInt32 (input' 8);  	magicCode = BitConverter.ToUInt32 (input' 12);  	System.Diagnostics.Debug.WriteLineIf (DEBUG' "rec: ReqID: " + msg.ReqID + " - MsgID: " + msg.MsgID + " - body size: " + msg.BodySize + " byte");  	if (magicCode != msg.MagicCode) {  		System.Diagnostics.Debug.WriteLineIf (DEBUG' "rec: MagicCode mismatch");  		_findMagicCode = true;  		_lastSize = msg.BodySize;  		_parent.Error (new Exception ("MagicCode mismatch")' RSRPC.ErrorFrom.ProtoBuf);  		return false;  	}  	if (!IsRpcMsgIdResponse (msg.MsgID))  		System.Diagnostics.Debug.WriteLineIf (DEBUG' "rec: msg is no response");  }  else  	System.Diagnostics.Debug.WriteLineIf (DEBUG' "rec: ReqID: " + msg.ReqID + " - MsgID: " + msg.MsgID + " - body size: " + msg.BodySize + " byte");  
Magic Number,Sehraf.RSRPC,RSProtoBuf,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSProtoBuf.cs,ReadMsgFromStream,The following statement contains a magic number: if (GetHeader) {  	// get Header  	if (!ReadFromStream (timeOut' 16' out buffer))  		return false;  	buffer.CopyTo (input' 0);  	// read header  	Array.Reverse (input);  	msg.BodySize = BitConverter.ToUInt32 (input' 0);  	msg.ReqID = BitConverter.ToUInt32 (input' 4);  	msg.MsgID = BitConverter.ToUInt32 (input' 8);  	magicCode = BitConverter.ToUInt32 (input' 12);  	System.Diagnostics.Debug.WriteLineIf (DEBUG' "rec: ReqID: " + msg.ReqID + " - MsgID: " + msg.MsgID + " - body size: " + msg.BodySize + " byte");  	if (magicCode != msg.MagicCode) {  		System.Diagnostics.Debug.WriteLineIf (DEBUG' "rec: MagicCode mismatch");  		_findMagicCode = true;  		_lastSize = msg.BodySize;  		_parent.Error (new Exception ("MagicCode mismatch")' RSRPC.ErrorFrom.ProtoBuf);  		return false;  	}  	if (!IsRpcMsgIdResponse (msg.MsgID))  		System.Diagnostics.Debug.WriteLineIf (DEBUG' "rec: msg is no response");  }  else  	System.Diagnostics.Debug.WriteLineIf (DEBUG' "rec: ReqID: " + msg.ReqID + " - MsgID: " + msg.MsgID + " - body size: " + msg.BodySize + " byte");  
Magic Number,Sehraf.RSRPC,RSProtoBuf,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSProtoBuf.cs,ReadMsgFromStream,The following statement contains a magic number: if (!ReadFromStream (timeOut' 16' out buffer))  	return false;  
Magic Number,Sehraf.RSRPC,RSProtoBuf,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSProtoBuf.cs,ReadMsgFromStream,The following statement contains a magic number: msg.ReqID = BitConverter.ToUInt32 (input' 4);  
Magic Number,Sehraf.RSRPC,RSProtoBuf,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSProtoBuf.cs,ReadMsgFromStream,The following statement contains a magic number: msg.MsgID = BitConverter.ToUInt32 (input' 8);  
Magic Number,Sehraf.RSRPC,RSProtoBuf,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSProtoBuf.cs,ReadMsgFromStream,The following statement contains a magic number: magicCode = BitConverter.ToUInt32 (input' 12);  
Magic Number,Sehraf.RSRPC,RSProtoBuf,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSProtoBuf.cs,CreatePacketFromMsg,The following statement contains a magic number: Array.Copy (a' 0' output' 0' 4);  
Magic Number,Sehraf.RSRPC,RSProtoBuf,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSProtoBuf.cs,CreatePacketFromMsg,The following statement contains a magic number: Array.Copy (a' 0' output' 4' 4);  
Magic Number,Sehraf.RSRPC,RSProtoBuf,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSProtoBuf.cs,CreatePacketFromMsg,The following statement contains a magic number: Array.Copy (a' 0' output' 4' 4);  
Magic Number,Sehraf.RSRPC,RSProtoBuf,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSProtoBuf.cs,CreatePacketFromMsg,The following statement contains a magic number: Array.Copy (a' 0' output' 8' 4);  
Magic Number,Sehraf.RSRPC,RSProtoBuf,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSProtoBuf.cs,CreatePacketFromMsg,The following statement contains a magic number: Array.Copy (a' 0' output' 8' 4);  
Magic Number,Sehraf.RSRPC,RSProtoBuf,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSProtoBuf.cs,CreatePacketFromMsg,The following statement contains a magic number: Array.Copy (a' 0' output' 12' 4);  
Magic Number,Sehraf.RSRPC,RSProtoBuf,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSProtoBuf.cs,CreatePacketFromMsg,The following statement contains a magic number: Array.Copy (a' 0' output' 12' 4);  
Magic Number,Sehraf.RSRPC,RSProtoBuf,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSProtoBuf.cs,CreatePacketFromMsg,The following statement contains a magic number: Array.Copy (pbMsg' 0' output' 16' (int)msg.BodySize);  
Magic Number,Sehraf.RSRPC,RSProtoBuf,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSProtoBuf.cs,mainLoop,The following statement contains a magic number: while (_run) {  	foundWork = false;  	if (_stream.DataAvailable && _run && !_finishQueue && !_findMagicCode) {  		System.Diagnostics.Debug.WriteLineIf (DEBUG' "#######################################");  		System.Diagnostics.Debug.WriteLineIf (DEBUG' "loop: receiving");  		if (Receive (out newMsg))  			lock (_receiveQueue)  				_receiveQueue.Enqueue (newMsg);  		foundWork = true;  	}  	if (_stream.DataAvailable && _findMagicCode) {  		if (!_parent.Reconnect (out _stream)) {  			_parent.Error (new Exception ("Error while reconnecting")' RSRPC.ErrorFrom.ProtoBuf);  			_run = false;  		}  		else  			_findMagicCode = false;  		/*                      * this doesn't work yet                       * the idea is to search for the next MagicCode assuming it's the begin of a new msg                      * but this produce some strange behavior' is very slow and unreliable                      *///System.Diagnostics.Debug.WriteLineIf(DEBUG' "#######################################");  		//System.Diagnostics.Debug.WriteLineIf(DEBUG' "loop: trying to find Magic Code ...");  		//for (short i = 0; i < 1024 * 25 / 4; i++) // 25k too much?   		//{  		//    if (!_stream.DataAvailable)  		//        break;  		//    if (!ReadFromStream(_timeOut' 4' out header1))  		//        break;  		//    //buffer.CopyTo(header1' 0);  		//    Array.Reverse(header1);  		//    if (BitConverter.ToUInt32(header1' 0) == msg.MagicCode)  		//    {  		//        System.Diagnostics.Debug.WriteLineIf(DEBUG' "loop: found Magic Code");  		//        // found magic code -> try to receive whole msg  		//        if (!ReadFromStream(_timeOut' 12' out header234))  		//            break;  		//        //buffer.CopyTo(header234' 0);  		//        Array.Reverse(header234);  		//        newMsg.BodySize = BitConverter.ToUInt32(header234' 0);  		//        newMsg.ReqID = BitConverter.ToUInt32(header234' 4);  		//        newMsg.MsgID = BitConverter.ToUInt32(header234' 8);  		//        System.Diagnostics.Debug.WriteLineIf(DEBUG' "rec: ReqID: " + msg.ReqID + " - MsgID: " + msg.MsgID + " - body size: " + msg.BodySize + " byte");  		//        if (!IsRpcMsgIdResponse(msg.MsgID))  		//        {  		//            // is no response ( the magic code was a wrong one - or the response was somehow broken )  		//            System.Diagnostics.Debug.WriteLineIf(DEBUG' "loop: no response");  		//            continue;  		//        }  		//        if (ReadMsgFromStream(msg: ref newMsg' GetHeader: false))  		//        {  		//            // there is nothing more we can do here ... just put the msg in the queue and hope the best :D  		//            System.Diagnostics.Debug.WriteLineIf(DEBUG' "loop: received msg");  		//            lock (_receiveQueue)  		//                _receiveQueue.Enqueue(newMsg);  		//            _findMagicCode = false;  		//            break;  		//        }  		//        else  		//            System.Diagnostics.Debug.WriteLineIf(DEBUG' "loop: couldn't get msg");  		//    }  		//} // for  		//foundWork = true;  	}  	if (_sendQueue.Count > 0) {  		System.Diagnostics.Debug.WriteLineIf (DEBUG' "#######################################");  		System.Diagnostics.Debug.WriteLineIf (DEBUG' "loop: sending req");  		lock (_sendQueue)  			msg = _sendQueue.Dequeue ();  		Send (msg);  		foundWork = true;  	}  	if (!foundWork && _run && !_finishQueue)  		System.Threading.Thread.Sleep (250);  	if (_finishQueue && _sendQueue.Count == 0)  		_run = false;  }  
Magic Number,Sehraf.RSRPC,RSProtoBuf,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSProtoBuf.cs,mainLoop,The following statement contains a magic number: if (!foundWork && _run && !_finishQueue)  	System.Threading.Thread.Sleep (250);  
Magic Number,Sehraf.RSRPC,RSProtoBuf,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSProtoBuf.cs,mainLoop,The following statement contains a magic number: System.Threading.Thread.Sleep (250);  
Magic Number,Sehraf.RSRPC,RSProtoBuf,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSProtoBuf.cs,GetRpcMsgIdExtension,The following statement contains a magic number: return (byte)(BitConverter.GetBytes (msgID) [3] & 0xFE);  
Magic Number,Sehraf.RSRPC,RSProtoBuf,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSProtoBuf.cs,IsRpcMsgIdResponse,The following statement contains a magic number: return ((BitConverter.GetBytes (msgID) [3] & 0x01) > 0 ? true : false);  
Magic Number,Sehraf.RSRPC,RSProtoBuf,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSProtoBuf.cs,GetHex,The following statement contains a magic number: return Convert.ToString (msgID' 16);  
Magic Number,Sehraf.RSRPC,RSProtoBuf,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSProtoBuf.cs,GetHex,The following statement contains a magic number: return Convert.ToString (msgID' 16);  
Magic Number,Sehraf.RSRPC,RSRPC,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSRPC.cs,Reconnect,The following statement contains a magic number: Thread.Sleep (500);  
Magic Number,Sehraf.RSRPC,RSRPC,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSRPC.cs,ProcessNewMsgLoop,The following statement contains a magic number: while (_run) {  	if (_receiveQueue.Count > 0 && _connected) {  		lock (_receiveQueue)  			msg = _receiveQueue.Dequeue ();  		if (RSProtoBuf.IsRpcMsgIdResponse (msg.MsgID))  			_receivedMsg (msg);  	}  	Thread.Sleep (125);  }  
Magic Number,Sehraf.RSRPC,RSRPC,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSRPC.cs,ProcessNewMsgLoop,The following statement contains a magic number: Thread.Sleep (125);  
Magic Number,Sehraf.RSRPC,RSRPC,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSRPC.cs,ShutDownThread,The following statement contains a magic number: while (_rsProtoBuf.ThreadRunning && counter < 10 * 2) {  	System.Diagnostics.Debug.WriteLineIf (DEBUG' "waiting to send remaining items - " + counter);  	Thread.Sleep (500);  	counter++;  }  
Magic Number,Sehraf.RSRPC,RSRPC,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSRPC.cs,ShutDownThread,The following statement contains a magic number: while (_rsProtoBuf.ThreadRunning && counter < 10 * 2) {  	System.Diagnostics.Debug.WriteLineIf (DEBUG' "waiting to send remaining items - " + counter);  	Thread.Sleep (500);  	counter++;  }  
Magic Number,Sehraf.RSRPC,RSRPC,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSRPC.cs,ShutDownThread,The following statement contains a magic number: while (_rsProtoBuf.ThreadRunning && counter < 10 * 2) {  	System.Diagnostics.Debug.WriteLineIf (DEBUG' "waiting to send remaining items - " + counter);  	Thread.Sleep (500);  	counter++;  }  
Magic Number,Sehraf.RSRPC,RSRPC,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSRPC.cs,ShutDownThread,The following statement contains a magic number: Thread.Sleep (500);  
Magic Number,Sehraf.RSRPC,RSRPC,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSRPC.cs,ShutDownThread,The following statement contains a magic number: Thread.Sleep (100);  
Magic Number,Sehraf.RSRPC,RSSSHConnector,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSSSHConnector.cs,Connect,The following statement contains a magic number: try {  	ConnectionInfo info = new PasswordConnectionInfo (_host' _port' _user' _pw);  	_client = new SshClient (info);  	_client.ErrorOccurred += SSHError;  	_client.Connect ();  	_stream = _client.CreateShellStream ("xterm"' 80' 24' 800' 600' 1024);  	System.Diagnostics.Debug.WriteLineIf (DEBUG' "ssh: connected");  	return true;  }  catch (System.Exception e) {  	System.Diagnostics.Debug.WriteLineIf (DEBUG' "ssh: error while connecting:");  	System.Diagnostics.Debug.WriteLine (e.Message);  	System.Diagnostics.Debug.WriteLine (e.InnerException);  	return false;  }  
Magic Number,Sehraf.RSRPC,RSSSHConnector,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSSSHConnector.cs,Connect,The following statement contains a magic number: try {  	ConnectionInfo info = new PasswordConnectionInfo (_host' _port' _user' _pw);  	_client = new SshClient (info);  	_client.ErrorOccurred += SSHError;  	_client.Connect ();  	_stream = _client.CreateShellStream ("xterm"' 80' 24' 800' 600' 1024);  	System.Diagnostics.Debug.WriteLineIf (DEBUG' "ssh: connected");  	return true;  }  catch (System.Exception e) {  	System.Diagnostics.Debug.WriteLineIf (DEBUG' "ssh: error while connecting:");  	System.Diagnostics.Debug.WriteLine (e.Message);  	System.Diagnostics.Debug.WriteLine (e.InnerException);  	return false;  }  
Magic Number,Sehraf.RSRPC,RSSSHConnector,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSSSHConnector.cs,Connect,The following statement contains a magic number: try {  	ConnectionInfo info = new PasswordConnectionInfo (_host' _port' _user' _pw);  	_client = new SshClient (info);  	_client.ErrorOccurred += SSHError;  	_client.Connect ();  	_stream = _client.CreateShellStream ("xterm"' 80' 24' 800' 600' 1024);  	System.Diagnostics.Debug.WriteLineIf (DEBUG' "ssh: connected");  	return true;  }  catch (System.Exception e) {  	System.Diagnostics.Debug.WriteLineIf (DEBUG' "ssh: error while connecting:");  	System.Diagnostics.Debug.WriteLine (e.Message);  	System.Diagnostics.Debug.WriteLine (e.InnerException);  	return false;  }  
Magic Number,Sehraf.RSRPC,RSSSHConnector,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSSSHConnector.cs,Connect,The following statement contains a magic number: try {  	ConnectionInfo info = new PasswordConnectionInfo (_host' _port' _user' _pw);  	_client = new SshClient (info);  	_client.ErrorOccurred += SSHError;  	_client.Connect ();  	_stream = _client.CreateShellStream ("xterm"' 80' 24' 800' 600' 1024);  	System.Diagnostics.Debug.WriteLineIf (DEBUG' "ssh: connected");  	return true;  }  catch (System.Exception e) {  	System.Diagnostics.Debug.WriteLineIf (DEBUG' "ssh: error while connecting:");  	System.Diagnostics.Debug.WriteLine (e.Message);  	System.Diagnostics.Debug.WriteLine (e.InnerException);  	return false;  }  
Magic Number,Sehraf.RSRPC,RSSSHConnector,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSSSHConnector.cs,Connect,The following statement contains a magic number: try {  	ConnectionInfo info = new PasswordConnectionInfo (_host' _port' _user' _pw);  	_client = new SshClient (info);  	_client.ErrorOccurred += SSHError;  	_client.Connect ();  	_stream = _client.CreateShellStream ("xterm"' 80' 24' 800' 600' 1024);  	System.Diagnostics.Debug.WriteLineIf (DEBUG' "ssh: connected");  	return true;  }  catch (System.Exception e) {  	System.Diagnostics.Debug.WriteLineIf (DEBUG' "ssh: error while connecting:");  	System.Diagnostics.Debug.WriteLine (e.Message);  	System.Diagnostics.Debug.WriteLine (e.InnerException);  	return false;  }  
Magic Number,Sehraf.RSRPC,RSSSHConnector,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSSSHConnector.cs,Connect,The following statement contains a magic number: _stream = _client.CreateShellStream ("xterm"' 80' 24' 800' 600' 1024);  
Magic Number,Sehraf.RSRPC,RSSSHConnector,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSSSHConnector.cs,Connect,The following statement contains a magic number: _stream = _client.CreateShellStream ("xterm"' 80' 24' 800' 600' 1024);  
Magic Number,Sehraf.RSRPC,RSSSHConnector,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSSSHConnector.cs,Connect,The following statement contains a magic number: _stream = _client.CreateShellStream ("xterm"' 80' 24' 800' 600' 1024);  
Magic Number,Sehraf.RSRPC,RSSSHConnector,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSSSHConnector.cs,Connect,The following statement contains a magic number: _stream = _client.CreateShellStream ("xterm"' 80' 24' 800' 600' 1024);  
Magic Number,Sehraf.RSRPC,RSSSHConnector,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSSSHConnector.cs,Connect,The following statement contains a magic number: _stream = _client.CreateShellStream ("xterm"' 80' 24' 800' 600' 1024);  
Magic Number,Sehraf.RSRPC,RSSSHConnector,C:\repos\RetroShare_RSSSHClient\RSRPC\RSRPC\RSSSHConnector.cs,Reconnect,The following statement contains a magic number: System.Threading.Thread.Sleep (500);  
