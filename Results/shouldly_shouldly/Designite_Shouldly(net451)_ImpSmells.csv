Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ExpressionToString,ExpressionStringBuilder,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\App_Packages\ExpressionStringBuilder.0.10.0\ExpressionStringBuilder.cs,ToString,Cyclomatic complexity of the method is 20
Complex Method,Shouldly,EqualityComparer<T>,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\Internals\EqualityComparer.cs,Equals,Cyclomatic complexity of the method is 13
Complex Method,Shouldly,StringHelpers,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\Internals\StringHelpers.cs,ToStringAwesomely,Cyclomatic complexity of the method is 18
Complex Method,Shouldly,StringHelpers,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\Internals\StringHelpers.cs,ToSafeString,Cyclomatic complexity of the method is 9
Complex Method,Shouldly,ShouldMatchApprovedTestExtensions,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldlyExtensionMethods\ShouldMatchApprovedTestExtensions.cs,ShouldMatchApproved,Cyclomatic complexity of the method is 8
Complex Method,NUnit.Framework.Constraints,Numerics,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\Internals\Numerics.cs,IsFixedPointNumeric,Cyclomatic complexity of the method is 11
Complex Method,NUnit.Framework.Constraints,Numerics,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\Internals\Numerics.cs,AreEqual,Cyclomatic complexity of the method is 8
Complex Method,NUnit.Framework.Constraints,Numerics,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\Internals\Numerics.cs,AreEqual,Cyclomatic complexity of the method is 9
Complex Method,NUnit.Framework.Constraints,Numerics,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\Internals\Numerics.cs,AreEqual,Cyclomatic complexity of the method is 9
Long Parameter List,Shouldly,ShouldlyCoreExtensions,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\Internals\ShouldlyCoreExtensions.cs,AssertAwesomely,The method has 6 parameters. Parameters: actual' specifiedConstraint' originalActual' originalExpected' customMessage' shouldlyMethod
Long Parameter List,Shouldly,ShouldlyCoreExtensions,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\Internals\ShouldlyCoreExtensions.cs,AssertAwesomelyWithCaseSensitivity,The method has 7 parameters. Parameters: actual' specifiedConstraint' originalActual' originalExpected' caseSensitivity' customMessage' shouldlyMethod
Long Parameter List,Shouldly,ShouldlyCoreExtensions,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\Internals\ShouldlyCoreExtensions.cs,AssertAwesomelyIgnoringOrder,The method has 6 parameters. Parameters: actual' specifiedConstraint' originalActual' originalExpected' customMessage' shouldlyMethod
Long Parameter List,Shouldly,ShouldlyCoreExtensions,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\Internals\ShouldlyCoreExtensions.cs,AssertAwesomely,The method has 7 parameters. Parameters: actual' specifiedConstraint' originalActual' originalExpected' tolerance' customMessage' shouldlyMethod
Long Parameter List,Shouldly,ShouldlyCoreExtensions,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\Internals\ShouldlyCoreExtensions.cs,AssertAwesomely,The method has 7 parameters. Parameters: actual' specifiedConstraint' originalActual' originalExpected' caseSensitivity' customMessage' shouldlyMethod
Long Parameter List,Shouldly,ShouldThrowAssertionContext,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\Internals\ShouldThrowAssertionContext.cs,ShouldThrowAssertionContext,The method has 6 parameters. Parameters: expected' actual' exceptionMessage' isAsync' stackTrace' shouldlyMethod
Long Parameter List,Shouldly,ObjectGraphTestExtensions,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldlyExtensionMethods\ShouldBe\ObjectGraphTestExtensions.cs,CompareObjects,The method has 6 parameters. Parameters: actual' expected' path' previousComparisons' customMessage' shouldlyMethod
Long Parameter List,Shouldly,ObjectGraphTestExtensions,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldlyExtensionMethods\ShouldBe\ObjectGraphTestExtensions.cs,BothValuesAreNull,The method has 5 parameters. Parameters: actual' expected' path' customMessage' shouldlyMethod
Long Parameter List,Shouldly,ObjectGraphTestExtensions,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldlyExtensionMethods\ShouldBe\ObjectGraphTestExtensions.cs,GetTypeToCompare,The method has 5 parameters. Parameters: actual' expected' path' customMessage' shouldlyMethod
Long Parameter List,Shouldly,ObjectGraphTestExtensions,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldlyExtensionMethods\ShouldBe\ObjectGraphTestExtensions.cs,CompareValueTypes,The method has 5 parameters. Parameters: actual' expected' path' customMessage' shouldlyMethod
Long Parameter List,Shouldly,ObjectGraphTestExtensions,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldlyExtensionMethods\ShouldBe\ObjectGraphTestExtensions.cs,CompareReferenceTypes,The method has 7 parameters. Parameters: actual' expected' type' path' previousComparisons' customMessage' shouldlyMethod
Long Parameter List,Shouldly,ObjectGraphTestExtensions,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldlyExtensionMethods\ShouldBe\ObjectGraphTestExtensions.cs,CompareStrings,The method has 5 parameters. Parameters: actual' expected' path' customMessage' shouldlyMethod
Long Parameter List,Shouldly,ObjectGraphTestExtensions,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldlyExtensionMethods\ShouldBe\ObjectGraphTestExtensions.cs,CompareEnumerables,The method has 6 parameters. Parameters: actual' expected' path' previousComparisons' customMessage' shouldlyMethod
Long Parameter List,Shouldly,ObjectGraphTestExtensions,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldlyExtensionMethods\ShouldBe\ObjectGraphTestExtensions.cs,CompareProperties,The method has 7 parameters. Parameters: actual' expected' properties' path' previousComparisons' customMessage' shouldlyMethod
Long Parameter List,Shouldly,ObjectGraphTestExtensions,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldlyExtensionMethods\ShouldBe\ObjectGraphTestExtensions.cs,ThrowException,The method has 5 parameters. Parameters: actual' expected' path' customMessage' shouldlyMethod
Long Parameter List,Shouldly,ActualFilteredWithPredicateShouldlyMessage,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldlyMessage.cs,ActualFilteredWithPredicateShouldlyMessage,The method has 5 parameters. Parameters: filter' result' actual' customMessage' shouldlyMethod
Long Parameter List,Shouldly,ExpectedActualWithCaseSensitivityShouldlyMessage,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldlyMessage.cs,ExpectedActualWithCaseSensitivityShouldlyMessage,The method has 5 parameters. Parameters: expected' actual' caseSensitivity' customMessage' shouldlyMethod
Long Parameter List,Shouldly,ExpectedActualToleranceShouldlyMessage,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldlyMessage.cs,ExpectedActualToleranceShouldlyMessage,The method has 5 parameters. Parameters: expected' actual' tolerance' customMessage' shouldlyMethod
Long Parameter List,Shouldly,ExpectedActualKeyShouldlyMessage,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldlyMessage.cs,ExpectedActualKeyShouldlyMessage,The method has 5 parameters. Parameters: expected' actual' key' customMessage' shouldlyMethod
Long Parameter List,Shouldly,ExpectedOrderShouldlyMessage,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldlyMessage.cs,ExpectedOrderShouldlyMessage,The method has 6 parameters. Parameters: actual' expectedDirection' outOfOrderIndex' outOfOrderObject' customMessage' shouldlyMethod
Long Parameter List,Shouldly,ExpectedEquvalenceShouldlyMessage,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldlyMessage.cs,ExpectedEquvalenceShouldlyMessage,The method has 5 parameters. Parameters: expected' actual' path' customMessage' shouldlyMethod
Long Parameter List,Shouldly,ShouldContainWithCountShouldlyMessage,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldlyMessage.cs,ShouldContainWithCountShouldlyMessage,The method has 5 parameters. Parameters: expected' actual' matchCount' customMessage' shouldlyMethod
Long Parameter List,Shouldly,Should,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldStaticClasses\ShouldCompleteInExtensions.cs,ThrowInternal,The method has 5 parameters. Parameters: actual' timeoutAfter' customMessage' exceptionType' shouldlyMethod
Long Parameter List,Shouldly.DifferenceHighlighting,FormattedDetailedDifferenceString,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\DifferenceHighlighting\FormattedDetailedDifferenceString.cs,FormattedDetailedDifferenceString,The method has 6 parameters. Parameters: actualValue' expectedValue' caseSensitivity' indexOffset' prefixWithDots' suffixWithDots
Long Parameter List,Shouldly.Internals.Assertions,StringShouldBeAssertion,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\Internals\Assertions\StringShouldBeAssertion.cs,StringShouldBeAssertion,The method has 7 parameters. Parameters: expected' actual' compare' codeTextGetter' diffHighlighter' options' shouldlyMethod
Long Identifier,Shouldly.Configuration,DiffToolConfiguration,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\Configuration\DiffToolConfiguration.cs,,The length of the parameter _knownShouldNotLaunchDiffToolReasons is 36.
Long Identifier,Shouldly.DifferenceHighlighting,DifferenceIndexConsolidator,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\DifferenceHighlighting\DifferenceIndexConsolidator.cs,GetConsolidatedIndices,The length of the parameter diffIndicesWithDistanceToNextDiffIndex is 38.
Long Identifier,Shouldly.DifferenceHighlighting,DifferenceIndexConsolidator,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\DifferenceHighlighting\DifferenceIndexConsolidator.cs,CenterDiffIndices,The length of the parameter requiredAdjustmentToCenterDiff is 30.
Long Identifier,Shouldly.DifferenceHighlighting,FormattedDetailedDifferenceString,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\DifferenceHighlighting\FormattedDetailedDifferenceString.cs,,The length of the parameter differenceStringLineOneBuilder is 30.
Long Identifier,Shouldly.DifferenceHighlighting,FormattedDetailedDifferenceString,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\DifferenceHighlighting\FormattedDetailedDifferenceString.cs,,The length of the parameter differenceStringLineTwoBuilder is 30.
Long Identifier,Shouldly.MessageGenerators,ShouldBeIgnoringOrderMessageGenerator,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\MessageGenerators\ShouldBeIgnoringOrderMessageGenerator.cs,GenerateErrorMessage,The length of the parameter hasBothActualAndExpectedMissingItems is 36.
Long Statement,Shouldly,Is,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\Internals\Is.cs,EqualIgnoreOrder,The length of the statement  "            if (actual is ICollection actualCollection && expected is ICollection && actualCollection.Count != ((ICollection)expected).Count) " is 129.
Long Statement,Shouldly,ShouldlyCoreExtensions,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\Internals\ShouldlyCoreExtensions.cs,IsShouldlyMethod,The length of the statement  "               || (method.DeclaringType.DeclaringType != null && method.DeclaringType.DeclaringType.GetCustomAttributes(typeof(ShouldlyMethodsAttribute)' true).Any()); " is 152.
Long Statement,Shouldly,ShouldlyCoreExtensions,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\Internals\ShouldlyCoreExtensions.cs,AssertAwesomely,The length of the statement  "            throw new ShouldAssertException(new ExpectedActualShouldlyMessage(originalExpected' originalActual' customMessage' shouldlyMethod).ToString()); " is 143.
Long Statement,Shouldly,ShouldlyCoreExtensions,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\Internals\ShouldlyCoreExtensions.cs,AssertAwesomelyWithCaseSensitivity,The length of the statement  "            var message = new ExpectedActualWithCaseSensitivityShouldlyMessage(originalExpected' originalActual' caseSensitivity' customMessage' shouldlyMethod); " is 149.
Long Statement,Shouldly,ShouldlyCoreExtensions,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\Internals\ShouldlyCoreExtensions.cs,AssertAwesomelyIgnoringOrder,The length of the statement  "            throw new ShouldAssertException(new ExpectedActualIgnoreOrderShouldlyMessage(originalExpected' originalActual' customMessage' shouldlyMethod).ToString()); " is 154.
Long Statement,Shouldly,ShouldlyCoreExtensions,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\Internals\ShouldlyCoreExtensions.cs,AssertAwesomely,The length of the statement  "            throw new ShouldAssertException(new ExpectedActualToleranceShouldlyMessage(originalExpected' originalActual' tolerance' customMessage' shouldlyMethod).ToString()); " is 163.
Long Statement,Shouldly,ShouldlyCoreExtensions,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\Internals\ShouldlyCoreExtensions.cs,AssertAwesomely,The length of the statement  "            throw new ShouldAssertException(new ExpectedActualWithCaseSensitivityShouldlyMessage(originalExpected' originalActual' caseSensitivity' customMessage' shouldlyMethod).ToString()); " is 179.
Long Statement,Shouldly,ShouldBeEnumerableTestExtensions,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldlyExtensionMethods\ShouldBeEnumerableTestExtensions.cs,ShouldContain,The length of the statement  "                throw new ShouldAssertException(new ShouldContainWithCountShouldlyMessage(elementPredicate.Body' actual' expectedCount' customMessage).ToString()); " is 147.
Long Statement,Shouldly,ShouldBeEnumerableTestExtensions,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldlyExtensionMethods\ShouldBeEnumerableTestExtensions.cs,ShouldContain,The length of the statement  "                throw new ShouldAssertException(new ExpectedActualShouldlyMessage(elementPredicate.Body' actual' customMessage).ToString()); " is 124.
Long Statement,Shouldly,ShouldBeEnumerableTestExtensions,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldlyExtensionMethods\ShouldBeEnumerableTestExtensions.cs,ShouldNotContain,The length of the statement  "                throw new ShouldAssertException(new ExpectedActualShouldlyMessage(elementPredicate.Body' actual' customMessage).ToString()); " is 124.
Long Statement,Shouldly,ShouldBeEnumerableTestExtensions,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldlyExtensionMethods\ShouldBeEnumerableTestExtensions.cs,ShouldAllBe,The length of the statement  "                throw new ShouldAssertException(new ActualFilteredWithPredicateShouldlyMessage(elementPredicate.Body' actualResults' actual' customMessage).ToString()); " is 152.
Long Statement,Shouldly,ShouldBeEnumerableTestExtensions,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldlyExtensionMethods\ShouldBeEnumerableTestExtensions.cs,ShouldContain,The length of the statement  "                throw new ShouldAssertException(new ExpectedActualToleranceShouldlyMessage(expected' actual' tolerance' customMessage).ToString()); " is 131.
Long Statement,Shouldly,ShouldBeEnumerableTestExtensions,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldlyExtensionMethods\ShouldBeEnumerableTestExtensions.cs,ShouldContain,The length of the statement  "                throw new ShouldAssertException(new ExpectedActualToleranceShouldlyMessage(expected' actual' tolerance' customMessage).ToString()); " is 131.
Long Statement,Shouldly,ShouldBeTestExtensions,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldlyExtensionMethods\ShouldBeGtLtTestExtensions.cs,ShouldBe,The length of the statement  "                actual.AssertAwesomely(v => Is.Equal(v' expected' new ObjectEqualityComparer<IEnumerable<T>>())' actual' expected' customMessage); " is 130.
Long Statement,Shouldly,ObjectGraphTestExtensions,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldlyExtensionMethods\ShouldBe\ObjectGraphTestExtensions.cs,CompareReferenceTypes,The length of the statement  "                CompareEnumerables((IEnumerable)actual' (IEnumerable)expected' path' previousComparisons' customMessage' shouldlyMethod); " is 121.
Long Statement,Shouldly,ShouldBeStringTestExtensions,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldlyExtensionMethods\ShouldBe\StringContainsTestExtensions.cs,ShouldContain,The length of the statement  "                v => (caseSensitivity == Case.Sensitive) ? Is.StringContainingUsingCaseSensitivity(v' expected) : Is.StringContainingIgnoreCase(v' expected)'  " is 141.
Long Statement,Shouldly,ShouldBeStringTestExtensions,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldlyExtensionMethods\ShouldBe\StringContainsTestExtensions.cs,ShouldNotContain,The length of the statement  "                var b = (caseSensitivity == Case.Sensitive) ? !Is.StringContainingUsingCaseSensitivity(v' expected) : !Is.StringContainingIgnoreCase(v' expected); " is 146.
Long Statement,Shouldly,ShouldBeStringTestExtensions,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldlyExtensionMethods\ShouldBe\StringContainsTestExtensions.cs,ShouldStartWith,The length of the statement  "            actual.AssertAwesomely(v => Is.StringStartingWithUsingCaseSensitivity(v' expected' caseSensitivity)' actual' expected' customMessage); " is 134.
Long Statement,Shouldly,ShouldBeStringTestExtensions,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldlyExtensionMethods\ShouldBe\StringContainsTestExtensions.cs,ShouldEndWith,The length of the statement  "            actual.AssertAwesomely(v => Is.EndsWithUsingCaseSensitivity(v' expected' caseSensitivity)' actual' expected' customMessage); " is 124.
Long Statement,Shouldly,ShouldBeStringTestExtensions,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldlyExtensionMethods\ShouldBe\StringContainsTestExtensions.cs,ShouldNotStartWith,The length of the statement  "            actual.AssertAwesomely(v => !Is.StringStartingWithUsingCaseSensitivity(v' expected' caseSensitivity)' actual' expected' customMessage); " is 135.
Long Statement,Shouldly,ShouldBeStringTestExtensions,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldlyExtensionMethods\ShouldBe\StringContainsTestExtensions.cs,ShouldNotEndWith,The length of the statement  "            actual.AssertAwesomely(v => !Is.EndsWithUsingCaseSensitivity(v' expected' caseSensitivity)' actual' expected' customMessage); " is 125.
Long Statement,Shouldly,ShouldMatchApprovedTestExtensions,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldlyExtensionMethods\ShouldMatchApprovedTestExtensions.cs,ShouldMatchApproved,The length of the statement  "            var configurationBuilder = new ShouldMatchConfigurationBuilder(ShouldlyConfiguration.ShouldMatchApprovedDefaults.Build()); " is 122.
Long Statement,Shouldly,ShouldMatchApprovedTestExtensions,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldlyExtensionMethods\ShouldMatchApprovedTestExtensions.cs,ShouldMatchApproved,The length of the statement  "                throw new Exception($"Source information not available' make sure you are compiling with full debug information. Frame: {testMethodInfo.DeclaringTypeName}.{testMethodInfo.MethodName}"); " is 185.
Long Statement,Shouldly,ShouldMatchApprovedTestExtensions,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldlyExtensionMethods\ShouldMatchApprovedTestExtensions.cs,ShouldMatchApproved,The length of the statement  "            var approvedFile = Path.Combine(outputFolder' config.FilenameGenerator(testMethodInfo' descriminator' "approved"' config.FileExtension)); " is 137.
Long Statement,Shouldly,ShouldMatchApprovedTestExtensions,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldlyExtensionMethods\ShouldMatchApprovedTestExtensions.cs,ShouldMatchApproved,The length of the statement  "            var receivedFile = Path.Combine(outputFolder' config.FilenameGenerator(testMethodInfo' descriminator' "received"' config.FileExtension)); " is 137.
Long Statement,Shouldly,ShouldSatisfyAllConditionsTestExtensions,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldlyExtensionMethods\ShouldSatisfyAllConditionsTestExtensions.cs,ShouldSatisfyAllConditions,The length of the statement  "                throw new ShouldAssertException(new ExpectedActualShouldlyMessage(errorMessageString' actual' customMessage).ToString()); " is 121.
Long Statement,Shouldly,Should,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldStaticClasses\ShouldCompleteInExtensions.cs,ThrowInternal,The length of the statement  "                throw new ShouldAssertException(new ShouldlyThrowMessage(typeof(TException)' e.GetType()' customMessage' shouldlyMethod).ToString()' e); " is 136.
Long Statement,Shouldly,Should,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldStaticClasses\ShouldCompleteInExtensions.cs,ThrowInternal,The length of the statement  "            throw new ShouldAssertException(new ShouldlyThrowMessage(typeof(TException)' customMessage' shouldlyMethod).ToString()); " is 120.
Long Statement,Shouldly,Should,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldStaticClasses\ShouldCompleteInExtensions.cs,ThrowInternal,The length of the statement  "                throw new ShouldAssertException(new ShouldlyThrowMessage(exceptionType' e.GetType()' customMessage' shouldlyMethod).ToString()' e); " is 131.
Long Statement,Shouldly,Should,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldStaticClasses\ShouldCompleteInExtensions.cs,ThrowInternal,The length of the statement  "                throw new ShouldAssertException(new ShouldlyThrowMessage(typeof(TException)' e.GetType()' customMessage' shouldlyMethod).ToString()' e); " is 136.
Long Statement,Shouldly,Should,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldStaticClasses\ShouldCompleteInExtensions.cs,ThrowInternal,The length of the statement  "            throw new ShouldAssertException(new ShouldlyThrowMessage(typeof(TException)' customMessage' shouldlyMethod).ToString()); " is 120.
Long Statement,Shouldly,Should,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldStaticClasses\ShouldCompleteInExtensions.cs,ThrowInternal,The length of the statement  "                throw new ShouldAssertException(new ShouldlyThrowMessage(exceptionType' e.GetType()' customMessage' shouldlyMethod).ToString()' e); " is 131.
Long Statement,Shouldly,Should,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldStaticClasses\ShouldCompleteInExtensions.cs,NotThrowInternal,The length of the statement  "                throw new ShouldAssertException(new ShouldlyThrowMessage(ex.GetType()' ex.Message' customMessage' shouldlyMethod).ToString()); " is 126.
Long Statement,Shouldly,Should,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldStaticClasses\ShouldCompleteInExtensions.cs,NotThrowInternal,The length of the statement  "                throw new ShouldAssertException(new ShouldlyThrowMessage(ex.GetType()' ex.Message' customMessage' shouldlyMethod).ToString()); " is 126.
Long Statement,Shouldly,Should,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldStaticClasses\ShouldCompleteInExtensions.cs,ThrowInternal,The length of the statement  "                throw new ShouldAssertException(new TaskShouldlyThrowMessage(typeof(TException)' e.GetType()' customMessage' shouldlyMethod).ToString()); " is 137.
Long Statement,Shouldly,Should,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldStaticClasses\ShouldCompleteInExtensions.cs,ThrowInternal,The length of the statement  "            throw new ShouldAssertException(new TaskShouldlyThrowMessage(typeof(TException)' customMessage' shouldlyMethod).ToString()); " is 124.
Long Statement,Shouldly,Should,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldStaticClasses\ShouldCompleteInExtensions.cs,ThrowInternal,The length of the statement  "                throw new ShouldAssertException(new TaskShouldlyThrowMessage(exceptionType' e.GetType()' customMessage' shouldlyMethod).ToString()); " is 132.
Long Statement,Shouldly,Should,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldStaticClasses\ShouldCompleteInExtensions.cs,NotThrowInternal,The length of the statement  "                throw new ShouldAssertException(new TaskShouldlyThrowMessage(ex.InnerException.GetType()' ex.InnerException.Message' customMessage' shouldlyMethod).ToString()); " is 160.
Long Statement,Shouldly,Should,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldStaticClasses\ShouldCompleteInExtensions.cs,NotThrowInternal,The length of the statement  "                throw new ShouldAssertException(new TaskShouldlyThrowMessage(ex.GetType()' ex.Message' customMessage' shouldlyMethod).ToString()); " is 130.
Long Statement,Shouldly,Should,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldStaticClasses\ShouldCompleteInExtensions.cs,NotThrowInternal,The length of the statement  "                throw new ShouldAssertException(new TaskShouldlyThrowMessage(ex.InnerException.GetType()' ex.InnerException.Message' customMessage' shouldlyMethod).ToString()); " is 160.
Long Statement,Shouldly,Should,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldStaticClasses\ShouldCompleteInExtensions.cs,NotThrowInternal,The length of the statement  "                throw new ShouldAssertException(new TaskShouldlyThrowMessage(ex.GetType()' ex.Message' customMessage' shouldlyMethod).ToString()); " is 130.
Long Statement,Shouldly,Should,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldStaticClasses\ShouldCompleteInExtensions.cs,HandleAggregateException,The length of the statement  "            throw new ShouldAssertException(new ExpectedActualShouldlyMessage(typeof(TException)' innerException.GetType()' customMessage).ToString()); " is 139.
Long Statement,Shouldly,Should,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldStaticClasses\ShouldCompleteInExtensions.cs,HandleAggregateException,The length of the statement  "            throw new ShouldAssertException(new ExpectedActualShouldlyMessage(exceptionType' innerException.GetType()' customMessage).ToString()); " is 134.
Long Statement,Shouldly,Should,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldStaticClasses\ShouldCompleteInExtensions.cs,ThrowAsync,The length of the statement  "                                    return new ShouldAssertException(new AsyncShouldlyThrowShouldlyMessage(typeof(TException)' customMessage' stackTrace).ToString()); " is 130.
Long Statement,Shouldly,Should,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldStaticClasses\ShouldCompleteInExtensions.cs,ThrowAsync,The length of the statement  "                                return new ShouldAssertException(new AsyncShouldlyThrowShouldlyMessage(typeof(TException)' t.Exception.InnerException.GetType()' customMessage' stackTrace).ToString()); " is 168.
Long Statement,Shouldly,Should,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldStaticClasses\ShouldCompleteInExtensions.cs,ThrowAsync,The length of the statement  "                            return new ShouldAssertException(new AsyncShouldlyThrowShouldlyMessage(typeof(TException)' customMessage' stackTrace).ToString()); " is 130.
Long Statement,Shouldly,Should,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldStaticClasses\ShouldCompleteInExtensions.cs,ThrowAsync,The length of the statement  "                                    throw new ShouldAssertException(new AsyncShouldlyThrowShouldlyMessage(typeof(TException)' x.Result.GetType()' customMessage' stackTrace).ToString()' x.Result);                                     " is 159.
Long Statement,Shouldly,Should,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldStaticClasses\ShouldCompleteInExtensions.cs,ThrowAsync,The length of the statement  "                    throw new ShouldAssertException(new AsyncShouldlyThrowShouldlyMessage(typeof(TException)' e.GetType()' customMessage' stackTrace).ToString()); " is 142.
Long Statement,Shouldly,Should,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldStaticClasses\ShouldCompleteInExtensions.cs,ThrowAsync,The length of the statement  "                                return new ShouldAssertException(new TaskShouldlyThrowMessage(typeof(TException)' t.Exception.InnerException.GetType()' customMessage).ToString()); " is 147.
Long Statement,Shouldly,Should,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldStaticClasses\ShouldCompleteInExtensions.cs,ThrowAsync,The length of the statement  "                throw new ShouldAssertException(new TaskShouldlyThrowMessage(typeof(TException)' e.GetType()' customMessage).ToString()); " is 121.
Long Statement,Shouldly,Should,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldStaticClasses\ShouldCompleteInExtensions.cs,ThrowAsync,The length of the statement  "                        throw new ShouldAssertException(new AsyncShouldlyThrowShouldlyMessage(exceptionType' customMessage' stackTrace).ToString()); " is 124.
Long Statement,Shouldly,Should,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldStaticClasses\ShouldCompleteInExtensions.cs,ThrowAsync,The length of the statement  "                    throw new ShouldAssertException(new AsyncShouldlyThrowShouldlyMessage(exceptionType' customMessage' stackTrace).ToString() " is 122.
Long Statement,Shouldly,Should,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldStaticClasses\ShouldCompleteInExtensions.cs,ThrowAsync,The length of the statement  "                throw new ShouldAssertException(new AsyncShouldlyThrowShouldlyMessage(exceptionType' customMessage' stackTrace).ToString()); " is 124.
Long Statement,Shouldly.Configuration,DiffToolConfiguration,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\Configuration\DiffToolConfiguration.cs,GetDiffTool,The length of the statement  "                throw new ShouldAssertException(@"Cannot find a difftool to use' please open an issue or a PR to add support for your difftool. " is 127.
Long Statement,Shouldly.Configuration,KnownDiffTools,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\Configuration\KnownDiffTools.cs,BeyondCompareArgs,The length of the statement  "                ? $"\"{received}\" \"{approved}\" " + (ShouldlyEnvironmentContext.IsWindows() ? "/" :"-") + $"mergeoutput=\"{approved}\"" " is 121.
Long Statement,Shouldly.Configuration,TestMethodInfo,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\Configuration\TestMethodInfo.cs,GetRealMethod,The length of the statement  "            if (!ContainsAttribute(declaringType.GetCustomAttributes(false)' "System.Runtime.CompilerServices.CompilerGeneratedAttribute")) " is 127.
Long Statement,Shouldly.Configuration,TestMethodInfo,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\Configuration\TestMethodInfo.cs,GetRealMethod,The length of the statement  "                //var message = string.Format("Could not derive root method for async method '{0}' since there are multiple methods named '{1}'."' method.Name' trueMethodName); " is 160.
Long Statement,Shouldly.DifferenceHighlighting,FormattedDetailedDifferenceString,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\DifferenceHighlighting\FormattedDetailedDifferenceString.cs,GenerateFormattedString,The length of the statement  "                expectedValueStringBuilder.Append(string.Format("{0'-5}"' index < _expectedValue.Length ? _expectedValue[index].ToSafeString() : "")); " is 134.
Long Statement,Shouldly.DifferenceHighlighting,FormattedDetailedDifferenceString,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\DifferenceHighlighting\FormattedDetailedDifferenceString.cs,GenerateFormattedString,The length of the statement  "                actualValueStringBuilder.Append(string.Format("{0'-5}"' index < _actualValue.Length ? _actualValue[index].ToSafeString() : "")); " is 128.
Long Statement,Shouldly.DifferenceHighlighting,FormattedDetailedDifferenceString,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\DifferenceHighlighting\FormattedDetailedDifferenceString.cs,GenerateFormattedString,The length of the statement  "                expectedCodeStringBuilder.Append(string.Format("{0'-5}"' index < _expectedValue.Length ? ((int)_expectedValue[index]).ToString() : "")); " is 136.
Long Statement,Shouldly.DifferenceHighlighting,FormattedDetailedDifferenceString,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\DifferenceHighlighting\FormattedDetailedDifferenceString.cs,GenerateFormattedString,The length of the statement  "                actualCodeStringBuilder.Append(string.Format("{0'-5}"' index < _actualValue.Length ? ((int)_actualValue[index]).ToString() : "")); " is 130.
Long Statement,Shouldly.DifferenceHighlighting,StringDifferenceHighlighter,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\DifferenceHighlighting\StringDifferenceHighlighter.cs,HighlightDifferences,The length of the statement  "                var differenceIndexConsolidator = new DifferenceIndexConsolidator(maxDiffLength' maxLengthOfStrings' indicesOfAllDiffs); " is 120.
Long Statement,Shouldly.Internals,ActualCodeTextGetter,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\Internals\SourceCodeTextGetter.cs,GetCodePart,The length of the statement  "            var codePart = "Shouldly uses your source code to generate its great error messages' build your test project with full debug information to get better error messages" + " is 168.
Long Statement,Shouldly.MessageGenerators,DynamicShouldMessageGenerator,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\MessageGenerators\DynamicShouldMessageGenerator.cs,GenerateErrorMessage,The length of the statement  "                var codeLine = string.Join(""' File.ReadAllLines(testFileName).ToArray().Skip(assertionLineNumber.Value - 1).Select(s => s.Trim())); " is 132.
Long Statement,Shouldly.MessageGenerators,ShouldBeEnumerableCaseSensitiveMessageGenerator,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\MessageGenerators\ShouldBeEnumerableCaseSensitiveMessageGenerator.cs,GenerateErrorMessage,The length of the statement  "            var caseSensitivity = context.CaseSensitivity == Case.Insensitive ? " (case insensitive comparison)" : " (case sensitive comparison)"; " is 134.
Long Statement,Shouldly.MessageGenerators,ShouldBeIgnoringOrderMessageGenerator,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\MessageGenerators\ShouldBeIgnoringOrderMessageGenerator.cs,GenerateErrorMessage,The length of the statement  "            var hasBothActualAndExpectedMissingItems = !string.IsNullOrEmpty(actualMissingMessage) && !string.IsNullOrEmpty(expectedMissingMessage); " is 136.
Empty Catch Block,Shouldly,EqualityComparer<T>,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\Internals\EqualityComparer.cs,Equals,The method has an empty catch block.
Magic Number,ExpressionToString,ExpressionStringBuilder,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\App_Packages\ExpressionStringBuilder.0.10.0\ExpressionStringBuilder.cs,VisitMethodCall,The following statement contains a magic number: args.Length > 3 && trimLongArgumentList
Magic Number,Shouldly,ShouldBeStringTestExtensions,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldlyExtensionMethods\ShouldBe\StringContainsTestExtensions.cs,ShouldContain,The following statement contains a magic number: actual.AssertAwesomely(                  v => (caseSensitivity == Case.Sensitive) ? Is.StringContainingUsingCaseSensitivity(v' expected) : Is.StringContainingIgnoreCase(v' expected)'                   actual.Clip(100' "...")'                  expected'                  caseSensitivity'                  customMessage);
Magic Number,Shouldly,ShouldBeStringTestExtensions,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\ShouldlyExtensionMethods\ShouldBe\StringContainsTestExtensions.cs,ShouldNotContain,The following statement contains a magic number: actual.AssertAwesomely(v =>              {                  var b = (caseSensitivity == Case.Sensitive) ? !Is.StringContainingUsingCaseSensitivity(v' expected) : !Is.StringContainingIgnoreCase(v' expected);                  return b;              }' actual.Clip(100' "...")' expected' caseSensitivity' customMessage);
Magic Number,Shouldly.Configuration,CurrentlyRunningVisualStudioDiffTool,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\Configuration\VisualStudioDiffTool.cs,GetPath,The following statement contains a magic number: 11 <= version
Magic Number,Shouldly.Configuration,ParentProcessUtils,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\Configuration\VisualStudioDiffTool.cs,ParentProcess,The following statement contains a magic number: const uint TH32_CS_SNAPPROCESS = 2;
Magic Number,Shouldly.DifferenceHighlighting,DifferenceIndexConsolidator,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\DifferenceHighlighting\DifferenceIndexConsolidator.cs,CenterDiffIndices,The following statement contains a magic number: var requiredAdjustmentToCenterDiff = (_maxDiffLength - 1) / 2;
Magic Number,NUnit.Framework.Constraints,FloatingPointNumerics,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\Internals\FloatingPointNumerics.cs,AreAlmostEqualUlps,The following statement contains a magic number: uint leftSignMask = (leftUnion.UInt >> 31);
Magic Number,NUnit.Framework.Constraints,FloatingPointNumerics,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\Internals\FloatingPointNumerics.cs,AreAlmostEqualUlps,The following statement contains a magic number: uint rightSignMask = (rightUnion.UInt >> 31);
Magic Number,NUnit.Framework.Constraints,FloatingPointNumerics,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\Internals\FloatingPointNumerics.cs,AreAlmostEqualUlps,The following statement contains a magic number: ulong leftSignMask = (leftUnion.ULong >> 63);
Magic Number,NUnit.Framework.Constraints,FloatingPointNumerics,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\Internals\FloatingPointNumerics.cs,AreAlmostEqualUlps,The following statement contains a magic number: ulong rightSignMask = (rightUnion.ULong >> 63);
Magic Number,NUnit.Framework.Constraints,Numerics,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\Internals\Numerics.cs,AreEqual,The following statement contains a magic number: switch (tolerance.Mode)              {                  case ToleranceMode.None:                      return expected.Equals(actual);                    case ToleranceMode.Linear:                      return Math.Abs(expected - actual) <= Convert.ToDouble(tolerance.Value);                    case ToleranceMode.Percent:                      if (expected == 0.0)                          return expected.Equals(actual);                        double relativeError = Math.Abs((expected - actual)/expected);                      return (relativeError <= Convert.ToDouble(tolerance.Value)/100.0);                  case ToleranceMode.Ulps:                      return FloatingPointNumerics.AreAlmostEqualUlps(                          expected' actual' Convert.ToInt64(tolerance.Value));                  default:                      throw new ArgumentException("Unknown tolerance mode specified"' "mode");              }
Magic Number,NUnit.Framework.Constraints,Numerics,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\Internals\Numerics.cs,AreEqual,The following statement contains a magic number: switch (tolerance.Mode)              {                  case ToleranceMode.None:                      return expected.Equals(actual);                    case ToleranceMode.Linear:                      return Math.Abs(expected - actual) <= Convert.ToDouble(tolerance.Value);                    case ToleranceMode.Percent:                      if (expected == 0.0f)                          return expected.Equals(actual);                      float relativeError = Math.Abs((expected - actual)/expected);                      return (relativeError <= Convert.ToSingle(tolerance.Value)/100.0f);                  case ToleranceMode.Ulps:                      return FloatingPointNumerics.AreAlmostEqualUlps(                          expected' actual' Convert.ToInt32(tolerance.Value));                  default:                      throw new ArgumentException("Unknown tolerance mode specified"' "mode");              }
Magic Number,NUnit.Framework.Constraints,Numerics,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\Internals\Numerics.cs,AreEqual,The following statement contains a magic number: switch (tolerance.Mode)              {                  case ToleranceMode.None:                      return expected.Equals(actual);                    case ToleranceMode.Linear:                      decimal decimalTolerance = Convert.ToDecimal(tolerance.Value);                      if (decimalTolerance > 0m)                          return Math.Abs(expected - actual) <= decimalTolerance;                        return expected.Equals(actual);                    case ToleranceMode.Percent:                      if (expected == 0m)                          return expected.Equals(actual);                        double relativeError = Math.Abs(                          (double) (expected - actual)/(double) expected);                      return (relativeError <= Convert.ToDouble(tolerance.Value)/100.0);                    default:                      throw new ArgumentException("Unknown tolerance mode specified"' "mode");              }
Magic Number,NUnit.Framework.Constraints,Numerics,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\Internals\Numerics.cs,AreEqual,The following statement contains a magic number: switch (tolerance.Mode)              {                  case ToleranceMode.None:                      return expected.Equals(actual);                    case ToleranceMode.Linear:                      ulong ulongTolerance = Convert.ToUInt64(tolerance.Value);                      if (ulongTolerance > 0ul)                      {                          ulong diff = expected >= actual ? expected - actual : actual - expected;                          return diff <= ulongTolerance;                      }                        return expected.Equals(actual);                    case ToleranceMode.Percent:                      if (expected == 0ul)                          return expected.Equals(actual);                        // Can't do a simple Math.Abs() here since it's unsigned                      ulong difference = Math.Max(expected' actual) - Math.Min(expected' actual);                      double relativeError = Math.Abs(difference/(double) expected);                      return (relativeError <= Convert.ToDouble(tolerance.Value)/100.0);                    default:                      throw new ArgumentException("Unknown tolerance mode specified"' "mode");              }
Magic Number,NUnit.Framework.Constraints,Numerics,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\Internals\Numerics.cs,AreEqual,The following statement contains a magic number: switch (tolerance.Mode)              {                  case ToleranceMode.None:                      return expected.Equals(actual);                    case ToleranceMode.Linear:                      long longTolerance = Convert.ToInt64(tolerance.Value);                      if (longTolerance > 0L)                          return Math.Abs(expected - actual) <= longTolerance;                        return expected.Equals(actual);                    case ToleranceMode.Percent:                      if (expected == 0L)                          return expected.Equals(actual);                        double relativeError = Math.Abs(                          (expected - actual)/(double) expected);                      return (relativeError <= Convert.ToDouble(tolerance.Value)/100.0);                    default:                      throw new ArgumentException("Unknown tolerance mode specified"' "mode");              }
Magic Number,NUnit.Framework.Constraints,Numerics,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\Internals\Numerics.cs,AreEqual,The following statement contains a magic number: switch (tolerance.Mode)              {                  case ToleranceMode.None:                      return expected.Equals(actual);                    case ToleranceMode.Linear:                      uint uintTolerance = Convert.ToUInt32(tolerance.Value);                      if (uintTolerance > 0)                      {                          uint diff = expected >= actual ? expected - actual : actual - expected;                          return diff <= uintTolerance;                      }                        return expected.Equals(actual);                    case ToleranceMode.Percent:                      if (expected == 0u)                          return expected.Equals(actual);                        // Can't do a simple Math.Abs() here since it's unsigned                      uint difference = Math.Max(expected' actual) - Math.Min(expected' actual);                      double relativeError = Math.Abs(difference/(double) expected);                      return (relativeError <= Convert.ToDouble(tolerance.Value)/100.0);                    default:                      throw new ArgumentException("Unknown tolerance mode specified"' "mode");              }
Magic Number,NUnit.Framework.Constraints,Numerics,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\Internals\Numerics.cs,AreEqual,The following statement contains a magic number: switch (tolerance.Mode)              {                  case ToleranceMode.None:                      return expected.Equals(actual);                    case ToleranceMode.Linear:                      int intTolerance = Convert.ToInt32(tolerance.Value);                      if (intTolerance > 0)                          return Math.Abs(expected - actual) <= intTolerance;                        return expected.Equals(actual);                    case ToleranceMode.Percent:                      if (expected == 0)                          return expected.Equals(actual);                        double relativeError = Math.Abs(                          (expected - actual)/(double) expected);                      return (relativeError <= Convert.ToDouble(tolerance.Value)/100.0);                    default:                      throw new ArgumentException("Unknown tolerance mode specified"' "mode");              }
Magic Number,Shouldly.Internals,ActualCodeTextGetter,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\Internals\SourceCodeTextGetter.cs,GetCodePartFromParameter,The following statement contains a magic number: parameterString = parameterString.StartsWith("<")                  ? parameterString.Substring(parameterString.IndexOf(">"' StringComparison.Ordinal) + 2)                  : parameterString.Substring(1);
Missing Default,Shouldly,TaskExtensions,D:\research\architectureSmells\repos1\shouldly_shouldly\src\Shouldly\Internals\TaskExtensions.cs,MarshalTaskResults,The following switch statement is missing a default case: switch (source.Status)              {                  case TaskStatus.Faulted:                      proxy.TrySetException(source.Exception);                      break;                  case TaskStatus.Canceled:                      proxy.TrySetCanceled();                      break;                  case TaskStatus.RanToCompletion:                      var castedSource = source as Task<TResult>;                      proxy.TrySetResult(castedSource == null                          ? default // source is a Task                          : castedSource.Result); // source is a Task<TResult>                      break;              }
