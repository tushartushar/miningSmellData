Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,PhoneLogic.CallBusinessIntelligence,RecruiterUtilization,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.CallBusinessIntelligence\RecruiterUtilization.cs,GetRecruiterTimeSummary,The method has 11 parameters.
Long Statement,PhoneLogic.CallBusinessIntelligence,RecruiterUtilization,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.CallBusinessIntelligence\RecruiterUtilization.cs,GetRecruiterTimeSummary,The length of the statement  "		r.CallTime = new TimeSpan (r.RecruiterActivities.Where (x => x.ActivityType == _callActivityType).Sum (x => x.Duration.Ticks)); " is 127.
Long Statement,PhoneLogic.CallBusinessIntelligence,RecruiterUtilization,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.CallBusinessIntelligence\RecruiterUtilization.cs,GetRecruiterTimeSummary,The length of the statement  "		r.InboundCallCnt = r.RecruiterActivities.Where (x => x.ActivityType == _callActivityType).Count (x => x.ActivityName == _inboundCallActivity); " is 142.
Long Statement,PhoneLogic.CallBusinessIntelligence,RecruiterUtilization,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.CallBusinessIntelligence\RecruiterUtilization.cs,GetRecruiterTimeSummary,The length of the statement  "		r.OutboundCallCnt = r.RecruiterActivities.Where (x => x.ActivityType == _callActivityType).Count (x => x.ActivityName == _outboundCallActivity); " is 144.
Long Statement,PhoneLogic.CallBusinessIntelligence,RecruiterUtilization,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.CallBusinessIntelligence\RecruiterUtilization.cs,GetRecruiterTimeSummary,The length of the statement  "		r.IdleTime = new TimeSpan (r.RecruiterActivities.Where (x => x.ActivityType == _otherActivityType).Sum (x => x.Duration.Ticks)); " is 128.
Long Statement,PhoneLogic.CallBusinessIntelligence,RecruiterUtilization,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.CallBusinessIntelligence\RecruiterUtilization.cs,GetRecruiterActivityRpt,The length of the statement  "	//IdleActivity.Duration = (int)(IdleActivity.StartTime.GetValueOrDefault(DateTime.Now).Subtract(IdleActivity.EndTime.GetValueOrDefault(DateTime.Now))).Ticks; " is 157.
Magic Number,PhoneLogic.CallBusinessIntelligence,RecruiterUtilization,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.CallBusinessIntelligence\RecruiterUtilization.cs,GetRecruiterActivityRpt,The following statement contains a magic number: if (calls.Count () < 2)// only one call :(   {  	// just add the call and the idle activity that is ready to go  	var lastActivity = ObjectCopier.Clone (idleActivityTemplate);  	lastActivity.EndTime = EndTime;  	lastActivity.StartTime = calls.First ().CallEndTime.GetValueOrDefault (EndTime);  	lastActivity.Duration = (EndTime.Subtract (lastActivity.StartTime));  	activities.Add (lastActivity);  	return activities;  }  
