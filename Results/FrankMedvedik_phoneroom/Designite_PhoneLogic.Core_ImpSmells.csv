Implementation smell,Namespace,Class,File,Method,Description
Complex Method,PhoneLogic.Core.Areas.ReportCriteria,PhoneroomsViewModel,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\ReportCriteria\PhoneroomsViewModel.cs,GetActivePhoneroomRecruiters,Cyclomatic complexity of the method is 9
Complex Method,PhoneLogic.Core.Behaviors,DefaultButtonBehavior,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Behaviors\DefaultButtonBehavior.cs,PerformKeyDown,Cyclomatic complexity of the method is 8
Complex Method,PhoneLogic.Core.Behaviors,ExcelBehavior,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Behaviors\ExcelBehavior.cs,SetCellData,Cyclomatic complexity of the method is 16
Complex Method,PhoneLogic.Core.Helpers,DynamicHeaders,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Helpers\DynamicHeaders.cs,ParseHeader,Cyclomatic complexity of the method is 17
Complex Method,PhoneLogic.Core.Helpers,DataGridExtensions,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Helpers\DataGridExtensions.cs,ExportDataGrid,Cyclomatic complexity of the method is 17
Complex Method,PhoneLogic.Core.Helpers,DataGridExtensions,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Helpers\DataGridExtensions.cs,BuildStringOfRow,Cyclomatic complexity of the method is 8
Complex Method,PhoneLogic.Core.Views.Utility,DialPadView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\DialHistory\DialPadView.xaml.cs,key_Click,Cyclomatic complexity of the method is 11
Long Parameter List,PhoneLogic.Core.Behaviors,ExcelBehavior,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Behaviors\ExcelBehavior.cs,SetCellData,The method has 5 parameters.
Long Parameter List,PhoneLogic.Core.Behaviors,ExcelBehavior,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Behaviors\ExcelBehavior.cs,EnableForGrid,The method has 7 parameters.
Long Parameter List,PhoneLogic.Core.AppServiceReference,IPhoneLogicService,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\AppServiceReference\Reference.cs,BeginRecruiterDialOut,The method has 6 parameters.
Long Parameter List,PhoneLogic.Core.AppServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\AppServiceReference\Reference.cs,BeginRecruiterDialOut,The method has 6 parameters.
Long Parameter List,PhoneLogic.Core.AppServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\AppServiceReference\Reference.cs,RecruiterDialOutAsync,The method has 5 parameters.
Long Parameter List,PhoneLogic.Core.ProdServiceReference,IPhoneLogicService,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\ProdServiceReference\Reference.cs,BeginRecruiterDialOut,The method has 6 parameters.
Long Parameter List,PhoneLogic.Core.ProdServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\ProdServiceReference\Reference.cs,BeginRecruiterDialOut,The method has 6 parameters.
Long Parameter List,PhoneLogic.Core.ProdServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\ProdServiceReference\Reference.cs,RecruiterDialOutAsync,The method has 5 parameters.
Long Statement,PhoneLogic.Core.Areas.Callbacks,CallbacksView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Callbacks\CallbacksView.xaml.cs,Call_Click,The length of the statement  "		if (MessageBox.Show ("Call may already be in progress' call anyway?"' "Confirm"' MessageBoxButton.OKCancel) != MessageBoxResult.OK) " is 131.
Long Statement,PhoneLogic.Core.Areas.Callbacks,CallbacksView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Callbacks\CallbacksView.xaml.cs,SetupAudioPlayback,The length of the statement  "		AudioPlayer.Title = String.Format ("{0} - {1}"' _vm.SelectedMyCallback.JobFormatted' _vm.SelectedMyCallback.phoneFormatted); " is 124.
Long Statement,PhoneLogic.Core.Areas.Callbacks,CallBacksViewModel,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Callbacks\CallbacksViewModel.cs,GetOpenCallbacks,The length of the statement  "			HeadingText = String.Format ("Job {0} has {1} Voice Mail Messages"' StringFormatSvc.JobAndTaskFormatted (SelectedJobNum)' MyCallbacks.Count ()); " is 144.
Long Statement,PhoneLogic.Core.Areas.Callbacks,CallBacksViewModel,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Callbacks\CallbacksViewModel.cs,GetClosedCallbacks,The length of the statement  "			var ro = await ClosedCallbackSvc.GetClosedJobCallbacks (SelectedJobNum' SelectedTaskId.ToString ()' ReportDateRange.StartRptDate' ReportDateRange.EndRptDate); " is 158.
Long Statement,PhoneLogic.Core.Areas.Callbacks,CallBacksViewModel,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Callbacks\CallbacksViewModel.cs,GetClosedCallbacks,The length of the statement  "			HeadingText = String.Format ("Job {0} has {1} Voice Mail Messages"' StringFormatSvc.JobAndTaskFormatted (SelectedJobNum)' MyCallbacks.Count ()); " is 144.
Long Statement,PhoneLogic.Core.Areas.Callbacks,ClosedCallbacksJobsViewModel,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Callbacks\ClosedCallbacksJobsViewModel.cs,FilterJobs,The length of the statement  "	HeadingText = string.Format ("{0} Phone Room has {1} Jobs with Closed Callbacks as of {2}"' Phoneroom' FilteredJobs.Count ()' DateTime.Now); " is 140.
Long Statement,PhoneLogic.Core.Areas.Callbacks,MyCallbacksView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Callbacks\MyCallbacksView.xaml.cs,Call_Click,The length of the statement  "		if (MessageBox.Show ("Call may already be in progress' call anyway?"' "Confirm"' MessageBoxButton.OKCancel) != MessageBoxResult.OK) " is 131.
Long Statement,PhoneLogic.Core.Areas.Callbacks,MyCallbacksView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Callbacks\MyCallbacksView.xaml.cs,callbackGrid_SelectionChanged,The length of the statement  "		AudioPlayer.Title = String.Format ("{0} - {1}"' _vm.SelectedMyCallback.JobFormatted' _vm.SelectedMyCallback.phoneFormatted); " is 124.
Long Statement,PhoneLogic.Core.Areas.Callbacks,MyCallBacksViewModel,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Callbacks\MyCallbacksViewModel.cs,GetMyCallbacks,The length of the statement  "		var mcb = new ObservableCollection<myCallback> (await CallbackSvc.GetMyCallbacks (LyncClient.GetClient ().Self.Contact.Uri' SelectedJobNum' SelectedTaskId.ToString ())); " is 169.
Long Statement,PhoneLogic.Core.Areas.Callbacks,MyCallBacksViewModel,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Callbacks\MyCallbacksViewModel.cs,GetMyCallbacks,The length of the statement  "			HeadingText = String.Format ("Job {0}-{1} has {2} voice mail messages"' SelectedJobNum.Substring (0' 4)' SelectedJobNum.Substring (4)' MyCallbacks.Count); " is 154.
Long Statement,PhoneLogic.Core.Areas.CallsRpts,RecruiterJobsViewModel,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\CallsRpts\RecruiterJobsViewModel.cs,GetRecruiterJobs,The length of the statement  "			var ro = await LyncCallLogSvc.GetLynJobsForRecruiter (ReportDateRange.StartRptDate' ReportDateRange.EndRptDate' RecruiterSIP); " is 126.
Long Statement,PhoneLogic.Core.Areas.CallsRpts,RecruiterJobsViewModel,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\CallsRpts\RecruiterJobsViewModel.cs,GetRecruiterJobs,The length of the statement  "			HeadingText = String.Format ("{0} Jobs with call activity between  {1} and {2}"' RecruiterJobs.Count' ReportDateRange.StartRptDate' ReportDateRange.EndRptDate); " is 160.
Long Statement,PhoneLogic.Core.Areas.CallsRpts,CallsViewModel,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\CallsRpts\CallsViewModel.cs,GetCalls,The length of the statement  "			ro = await LyncCallLogSvc.GetLyncCallLog (SelectedJobNum' SelectedRecruiter' ReportDateRange.StartRptDate' ReportDateRange.EndRptDate); " is 135.
Long Statement,PhoneLogic.Core.Areas.CallsRpts,CallsViewModel,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\CallsRpts\CallsViewModel.cs,GetCalls,The length of the statement  "			HeadingText = String.Format ("Job {0} has {1} calls"' StringFormatSvc.JobAndTaskFormatted (SelectedJobNum)' Calls.Count ()); " is 124.
Long Statement,PhoneLogic.Core.Areas.CallsRpts,RecruiterViewModel,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\CallsRpts\RecruiterViewModel.cs,FilterByPhoneRoom,The length of the statement  "	HeadingText = String.Format ("{0} Phone Room Activity between {1} and {2} - for {3} Recruiters as of {4}"' SelectedPhoneRoomName' ReportDateRange.StartRptDate' ReportDateRange.EndRptDate' FilteredRecruiters.Count' DateTime.Now.ToShortTimeString ()); " is 249.
Long Statement,PhoneLogic.Core.Areas.CallsRpts,JobRecruitersViewModel,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\CallsRpts\JobRecruitersViewModel.cs,GetRecruiters,The length of the statement  "			var ro = await LyncCallLogSvc.GetLynRecruitersForJob (_callRptJobNum' ReportDateRange.StartRptDate' ReportDateRange.EndRptDate); " is 128.
Long Statement,PhoneLogic.Core.Areas.CallsRpts,JobRecruitersViewModel,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\CallsRpts\JobRecruitersViewModel.cs,GetRecruiters,The length of the statement  "			HeadingText = String.Format ("Job {0} has {1} Recruiters with call activity between {2} and {3}"' StringFormatSvc.JobAndTaskFormatted (CallRptJobNum)' JobRecruiters.Count' ReportDateRange.StartRptDate' ReportDateRange.EndRptDate); " is 230.
Long Statement,PhoneLogic.Core.Areas.CallsRpts,JobsViewModel,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\CallsRpts\JobsViewModel.cs,FilterJobs,The length of the statement  "			HeadingText = string.Format ("{0} Phone Room has {1} jobs with call activity between  {2} and {3} as of {4} "' Phoneroom' Jobs.Count ()' ReportDateRange.StartRptDate' ReportDateRange.EndRptDate' DateTime.Now.ToShortTimeString ()); " is 230.
Long Statement,PhoneLogic.Core.Areas.CallsRpts,JobsViewModel,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\CallsRpts\JobsViewModel.cs,FilterJobs,The length of the statement  "			HeadingText = string.Format ("{0} Phone Room(s) has no call activity between  {1} and {2} as of {3}"' Phoneroom' ReportDateRange.StartRptDate' ReportDateRange.EndRptDate' DateTime.Now.ToShortTimeString ()); " is 206.
Long Statement,PhoneLogic.Core.Areas.Recruiters,lsContact,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Recruiters\LyncSearchViewModel.cs,_Contact_OnInformationChanged,The length of the statement  "		CanCall = ((ContactAvailability)_contact.GetContactInformation (ContactInformationType.Availability) == ContactAvailability.Free); " is 130.
Long Statement,PhoneLogic.Core.Areas.Recruiters,MyJobsView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Recruiters\MyJobs.xaml.cs,RefreshCalls,The length of the statement  "		if ((cv.SelectedJobNum == _vm.SelectedPhoneLogicTask.JobNum + ":0" + _vm.SelectedPhoneLogicTask.TaskID) && (_vm.SelectedPhoneLogicTask.LastCallTime == cv.LastCallTime || _vm.SelectedPhoneLogicTask.LastCallTime == null)) " is 219.
Long Statement,PhoneLogic.Core.Areas.Recruiters,MyJobsView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Recruiters\MyJobs.xaml.cs,RefreshCallBacks,The length of the statement  "		if (mcb.SelectedJobNum == _vm.SelectedPhoneLogicTask.JobNum && mcb.SelectedTaskId == _vm.SelectedPhoneLogicTask.TaskID.GetValueOrDefault (0) && ((_vm.SelectedPhoneLogicTask.NewestMsg == mcb.LastCallBackStartTime) || _vm.SelectedPhoneLogicTask.MsgCnt.GetValueOrDefault (0) == 0)) " is 278.
Long Statement,PhoneLogic.Core.Areas.Recruiters,LyncSearchView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Recruiters\LyncSearch.xaml.cs,btnAddToCall_Click,The length of the statement  "	if ((ContactAvailability)_vm.SelectedContact.Contact.GetContactInformation (ContactInformationType.Availability) != ContactAvailability.Free) " is 141.
Long Statement,PhoneLogic.Core.Areas.Recruiters,LyncSearchView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Recruiters\LyncSearch.xaml.cs,btnAddToCall_Click,The length of the statement  "	//CmdParms.Text = String.Format("Id {0} - {1} "'ConversationContext.Instance.PhoneLogicContext.conversationId' _vm.SelectedContact.Contact.Uri); " is 144.
Long Statement,PhoneLogic.Core.Areas.Recruiters,LyncSearchView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Recruiters\LyncSearch.xaml.cs,btnAddToCall_Click,The length of the statement  "	await LyncSvc.TransferCall (ConversationContext.Instance.PhoneLogicContext.conversationId' _vm.SelectedContact.Contact.Uri); " is 124.
Long Statement,PhoneLogic.Core.Areas.Recruiters,MyJobsViewModel,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Recruiters\MyJobsViewModel.cs,GetMyJobs,The length of the statement  "			HeadingText = String.Format ("There are {0} jobs that have {1} voice mail messages and {2} calls today"' PhoneLogicTasks.Count' PhoneLogicTasks.Sum (x => x.MsgCnt)' PhoneLogicTasks.Sum (x => x.CallCnt)); " is 203.
Long Statement,PhoneLogic.Core.Areas.RecruiterUtilization,RecruiterViewModel,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\RecruiterUtilization\RecruiterViewModel.cs,GetRecruiters,The length of the statement  "		List<RecruiterTimeSummary> l = await RecruiterUtilizationSvc.GetRecruiterTimeSummary (SelectedPhoneRoomName' ReportDateRange.StartRptDate' ReportDateRange.EndRptDate); " is 167.
Long Statement,PhoneLogic.Core.Areas.ReportCriteria,GlobalReportCriteriaView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\ReportCriteria\GlobalReportCriteriaView.xaml.cs,SendUpdateMessage,The length of the statement  "	Messenger.Default.Send (new NotificationMessage<GlobalReportCriteria> (this' grc' Notifications.GlobalReportCriteriaChanged)); " is 126.
Long Statement,PhoneLogic.Core.Areas.ReportCriteria,PhoneroomsViewModel,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\ReportCriteria\PhoneroomsViewModel.cs,GetAllPhoneroomRecruiters,The length of the statement  "				DisplayName = grp.Key.DisplayName.Length > 4 ? grp.Key.DisplayName.Substring (0' grp.Key.DisplayName.IndexOf (' ')) + " " + grp.Key.DisplayName.Substring (grp.Key.DisplayName.IndexOf (' ') + 1' 1) : grp.Key.DisplayName' " is 219.
Long Statement,PhoneLogic.Core.Areas.ReportCriteria,PhoneroomsViewModel,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\ReportCriteria\PhoneroomsViewModel.cs,GetAllPhoneroomRecruiters,The length of the statement  "				DisplayName = grp.Key.DisplayName.Length > 4 ? grp.Key.DisplayName.Substring (0' grp.Key.DisplayName.IndexOf (' ')) + " " + grp.Key.DisplayName.Substring (grp.Key.DisplayName.IndexOf (' ') + 1' 1) : grp.Key.DisplayName' " is 219.
Long Statement,PhoneLogic.Core.Commands,ThemeChangeCommand,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Commands\ThemeChangeCommand.cs,Execute,The length of the statement  "		themeContainer.ThemeUri = new Uri ("/System.Windows.Controls.Theming." + themeName + ";component/Theme.xaml"' UriKind.RelativeOrAbsolute); " is 138.
Long Statement,PhoneLogic.Core.Helpers,TimespanExtentions,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Helpers\TimespanExtentions.cs,ToReadableString,The length of the statement  "	string formatted = string.Format ("{0}{1}{2}{3}"' span.Duration ().Days > 0 ? string.Format ("{0:0} day{1}' "' span.Days' span.Days == 1 ? String.Empty : "s") : string.Empty' span.Duration ().Hours > 0 ? string.Format ("{0:0} hour{1}' "' span.Hours' span.Hours == 1 ? String.Empty : "s") : string.Empty' span.Duration ().Minutes > 0 ? string.Format ("{0:0} minute{1}' "' span.Minutes' span.Minutes == 1 ? String.Empty : "s") : string.Empty' span.Duration ().Seconds > 0 ? string.Format ("{0:0} second{1}"' span.Seconds' span.Seconds == 1 ? String.Empty : "s") : string.Empty); " is 576.
Long Statement,PhoneLogic.Core.Helpers,DataGridExtensions,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Helpers\DataGridExtensions.cs,ExportDataGrid,The length of the statement  "		if (dGrid.HeadersVisibility == DataGridHeadersVisibility.Column || dGrid.HeadersVisibility == DataGridHeadersVisibility.All) { " is 126.
Long Statement,PhoneLogic.Core.Helpers,DataGridExtensions,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Helpers\DataGridExtensions.cs,ExportDataGrid,The length of the statement  "							strValue = objBinding.Converter.Convert (strValue' typeof(string)' objBinding.ConverterParameter' objBinding.ConverterCulture).ToString (); " is 139.
Long Statement,PhoneLogic.Core.Helpers,DataGridExtensions,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Helpers\DataGridExtensions.cs,ExportDataGrid,The length of the statement  "							strValue = objBinding.Converter.Convert (data' typeof(string)' objBinding.ConverterParameter' objBinding.ConverterCulture).ToString (); " is 135.
Long Statement,PhoneLogic.Core.Helpers,DataGridExtensions,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Helpers\DataGridExtensions.cs,FormatField,The length of the statement  "		return String.Format (isNum ? "<Cell><Data ss:Type=\"Number\">{0}</Data></Cell>" : "<Cell><Data ss:Type=\"String\">{0}</Data></Cell>"' data); " is 141.
Long Statement,PhoneLogic.Core.AppServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\AppServiceReference\Reference.cs,OnEndGetJobSummary,The length of the statement  "	System.Collections.Generic.List<PhoneLogic.Core.AppServiceReference.JobSummary> retVal = ((PhoneLogic.Core.AppServiceReference.IPhoneLogicService)(this)).EndGetJobSummary (result); " is 180.
Long Statement,PhoneLogic.Core.AppServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\AppServiceReference\Reference.cs,GetJobSummaryAsync,The length of the statement  "	base.InvokeAsync (this.onBeginGetJobSummaryDelegate' null' this.onEndGetJobSummaryDelegate' this.onGetJobSummaryCompletedDelegate' userState); " is 142.
Long Statement,PhoneLogic.Core.AppServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\AppServiceReference\Reference.cs,OnBeginGetQueueDetail,The length of the statement  "	return ((PhoneLogic.Core.AppServiceReference.IPhoneLogicService)(this)).BeginGetQueueDetail (jobNumber' callback' asyncState); " is 126.
Long Statement,PhoneLogic.Core.AppServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\AppServiceReference\Reference.cs,OnEndGetQueueDetail,The length of the statement  "	System.Collections.Generic.List<PhoneLogic.Core.AppServiceReference.QueueDetail> retVal = ((PhoneLogic.Core.AppServiceReference.IPhoneLogicService)(this)).EndGetQueueDetail (result); " is 182.
Long Statement,PhoneLogic.Core.AppServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\AppServiceReference\Reference.cs,OnGetQueueDetailCompleted,The length of the statement  "		this.GetQueueDetailCompleted (this' new GetQueueDetailCompletedEventArgs (e.Results' e.Error' e.Cancelled' e.UserState)); " is 121.
Long Statement,PhoneLogic.Core.AppServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\AppServiceReference\Reference.cs,OnEndGetAllCallsInQueue,The length of the statement  "	System.Collections.Generic.List<PhoneLogic.Core.AppServiceReference.QueueDetail> retVal = ((PhoneLogic.Core.AppServiceReference.IPhoneLogicService)(this)).EndGetAllCallsInQueue (result); " is 186.
Long Statement,PhoneLogic.Core.AppServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\AppServiceReference\Reference.cs,OnGetAllCallsInQueueCompleted,The length of the statement  "		this.GetAllCallsInQueueCompleted (this' new GetAllCallsInQueueCompletedEventArgs (e.Results' e.Error' e.Cancelled' e.UserState)); " is 129.
Long Statement,PhoneLogic.Core.AppServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\AppServiceReference\Reference.cs,GetAllCallsInQueueAsync,The length of the statement  "		this.onGetAllCallsInQueueCompletedDelegate = new System.Threading.SendOrPostCallback (this.OnGetAllCallsInQueueCompleted); " is 122.
Long Statement,PhoneLogic.Core.AppServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\AppServiceReference\Reference.cs,GetAllCallsInQueueAsync,The length of the statement  "	base.InvokeAsync (this.onBeginGetAllCallsInQueueDelegate' null' this.onEndGetAllCallsInQueueDelegate' this.onGetAllCallsInQueueCompletedDelegate' userState); " is 157.
Long Statement,PhoneLogic.Core.AppServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\AppServiceReference\Reference.cs,OnBeginGetMyQueuedCalls,The length of the statement  "	return ((PhoneLogic.Core.AppServiceReference.IPhoneLogicService)(this)).BeginGetMyQueuedCalls (sipAddress' callback' asyncState); " is 129.
Long Statement,PhoneLogic.Core.AppServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\AppServiceReference\Reference.cs,OnGetMyQueuedCallsCompleted,The length of the statement  "		this.GetMyQueuedCallsCompleted (this' new GetMyQueuedCallsCompletedEventArgs (e.Results' e.Error' e.Cancelled' e.UserState)); " is 125.
Long Statement,PhoneLogic.Core.AppServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\AppServiceReference\Reference.cs,OnBeginGetMyQueueSummary,The length of the statement  "	return ((PhoneLogic.Core.AppServiceReference.IPhoneLogicService)(this)).BeginGetMyQueueSummary (sipAddress' callback' asyncState); " is 130.
Long Statement,PhoneLogic.Core.AppServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\AppServiceReference\Reference.cs,OnEndGetMyQueueSummary,The length of the statement  "	System.Collections.Generic.List<PhoneLogic.Core.AppServiceReference.QueueSummary> retVal = ((PhoneLogic.Core.AppServiceReference.IPhoneLogicService)(this)).EndGetMyQueueSummary (result); " is 186.
Long Statement,PhoneLogic.Core.AppServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\AppServiceReference\Reference.cs,OnGetMyQueueSummaryCompleted,The length of the statement  "		this.GetMyQueueSummaryCompleted (this' new GetMyQueueSummaryCompletedEventArgs (e.Results' e.Error' e.Cancelled' e.UserState)); " is 127.
Long Statement,PhoneLogic.Core.AppServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\AppServiceReference\Reference.cs,GetMyQueueSummaryAsync,The length of the statement  "		this.onGetMyQueueSummaryCompletedDelegate = new System.Threading.SendOrPostCallback (this.OnGetMyQueueSummaryCompleted); " is 120.
Long Statement,PhoneLogic.Core.AppServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\AppServiceReference\Reference.cs,OnBeginGetMyQueueDetail,The length of the statement  "	return ((PhoneLogic.Core.AppServiceReference.IPhoneLogicService)(this)).BeginGetMyQueueDetail (sipAddress' callback' asyncState); " is 129.
Long Statement,PhoneLogic.Core.AppServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\AppServiceReference\Reference.cs,OnEndGetMyQueueDetail,The length of the statement  "	System.Collections.Generic.List<PhoneLogic.Core.AppServiceReference.QueueDetail> retVal = ((PhoneLogic.Core.AppServiceReference.IPhoneLogicService)(this)).EndGetMyQueueDetail (result); " is 184.
Long Statement,PhoneLogic.Core.AppServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\AppServiceReference\Reference.cs,OnGetMyQueueDetailCompleted,The length of the statement  "		this.GetMyQueueDetailCompleted (this' new GetMyQueueDetailCompletedEventArgs (e.Results' e.Error' e.Cancelled' e.UserState)); " is 125.
Long Statement,PhoneLogic.Core.AppServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\AppServiceReference\Reference.cs,OnBeginGetRecruitersOnline,The length of the statement  "	return ((PhoneLogic.Core.AppServiceReference.IPhoneLogicService)(this)).BeginGetRecruitersOnline (callback' asyncState); " is 120.
Long Statement,PhoneLogic.Core.AppServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\AppServiceReference\Reference.cs,OnEndGetRecruitersOnline,The length of the statement  "	System.Collections.Generic.List<string> retVal = ((PhoneLogic.Core.AppServiceReference.IPhoneLogicService)(this)).EndGetRecruitersOnline (result); " is 146.
Long Statement,PhoneLogic.Core.AppServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\AppServiceReference\Reference.cs,OnGetRecruitersOnlineCompleted,The length of the statement  "		this.GetRecruitersOnlineCompleted (this' new GetRecruitersOnlineCompletedEventArgs (e.Results' e.Error' e.Cancelled' e.UserState)); " is 131.
Long Statement,PhoneLogic.Core.AppServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\AppServiceReference\Reference.cs,GetRecruitersOnlineAsync,The length of the statement  "		this.onGetRecruitersOnlineCompletedDelegate = new System.Threading.SendOrPostCallback (this.OnGetRecruitersOnlineCompleted); " is 124.
Long Statement,PhoneLogic.Core.AppServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\AppServiceReference\Reference.cs,GetRecruitersOnlineAsync,The length of the statement  "	base.InvokeAsync (this.onBeginGetRecruitersOnlineDelegate' null' this.onEndGetRecruitersOnlineDelegate' this.onGetRecruitersOnlineCompletedDelegate' userState); " is 160.
Long Statement,PhoneLogic.Core.AppServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\AppServiceReference\Reference.cs,OnBeginGetRecruitersAvailable,The length of the statement  "	return ((PhoneLogic.Core.AppServiceReference.IPhoneLogicService)(this)).BeginGetRecruitersAvailable (callback' asyncState); " is 123.
Long Statement,PhoneLogic.Core.AppServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\AppServiceReference\Reference.cs,OnEndGetRecruitersAvailable,The length of the statement  "	System.Collections.Generic.List<string> retVal = ((PhoneLogic.Core.AppServiceReference.IPhoneLogicService)(this)).EndGetRecruitersAvailable (result); " is 149.
Long Statement,PhoneLogic.Core.AppServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\AppServiceReference\Reference.cs,OnGetRecruitersAvailableCompleted,The length of the statement  "		this.GetRecruitersAvailableCompleted (this' new GetRecruitersAvailableCompletedEventArgs (e.Results' e.Error' e.Cancelled' e.UserState)); " is 137.
Long Statement,PhoneLogic.Core.AppServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\AppServiceReference\Reference.cs,GetRecruitersAvailableAsync,The length of the statement  "		this.onGetRecruitersAvailableCompletedDelegate = new System.Threading.SendOrPostCallback (this.OnGetRecruitersAvailableCompleted); " is 130.
Long Statement,PhoneLogic.Core.AppServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\AppServiceReference\Reference.cs,GetRecruitersAvailableAsync,The length of the statement  "	base.InvokeAsync (this.onBeginGetRecruitersAvailableDelegate' null' this.onEndGetRecruitersAvailableDelegate' this.onGetRecruitersAvailableCompletedDelegate' userState); " is 169.
Long Statement,PhoneLogic.Core.AppServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\AppServiceReference\Reference.cs,OnEndGetActiveCalls,The length of the statement  "	System.Collections.Generic.List<PhoneLogic.Core.AppServiceReference.ActiveCall> retVal = ((PhoneLogic.Core.AppServiceReference.IPhoneLogicService)(this)).EndGetActiveCalls (result); " is 181.
Long Statement,PhoneLogic.Core.AppServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\AppServiceReference\Reference.cs,OnGetActiveCallsCompleted,The length of the statement  "		this.GetActiveCallsCompleted (this' new GetActiveCallsCompletedEventArgs (e.Results' e.Error' e.Cancelled' e.UserState)); " is 121.
Long Statement,PhoneLogic.Core.AppServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\AppServiceReference\Reference.cs,GetActiveCallsAsync,The length of the statement  "	base.InvokeAsync (this.onBeginGetActiveCallsDelegate' null' this.onEndGetActiveCallsDelegate' this.onGetActiveCallsCompletedDelegate' userState); " is 145.
Long Statement,PhoneLogic.Core.AppServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\AppServiceReference\Reference.cs,OnBeginPullFromQueue,The length of the statement  "	return ((PhoneLogic.Core.AppServiceReference.IPhoneLogicService)(this)).BeginPullFromQueue (id' recruiterUri' callback' asyncState); " is 132.
Long Statement,PhoneLogic.Core.AppServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\AppServiceReference\Reference.cs,OnPullFromQueueCompleted,The length of the statement  "		this.PullFromQueueCompleted (this' new System.ComponentModel.AsyncCompletedEventArgs (e.Error' e.Cancelled' e.UserState)); " is 122.
Long Statement,PhoneLogic.Core.AppServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\AppServiceReference\Reference.cs,OnBeginRecruiterDialOut,The length of the statement  "	return ((PhoneLogic.Core.AppServiceReference.IPhoneLogicService)(this)).BeginRecruiterDialOut (recruiterUri' jobNumber' numberToDial' callbackId' callback' asyncState); " is 168.
Long Statement,PhoneLogic.Core.AppServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\AppServiceReference\Reference.cs,OnRecruiterDialOutCompleted,The length of the statement  "		this.RecruiterDialOutCompleted (this' new System.ComponentModel.AsyncCompletedEventArgs (e.Error' e.Cancelled' e.UserState)); " is 125.
Long Statement,PhoneLogic.Core.AppServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\AppServiceReference\Reference.cs,OnBeginTransferCall,The length of the statement  "	return ((PhoneLogic.Core.AppServiceReference.IPhoneLogicService)(this)).BeginTransferCall (id' recruiterUri' callback' asyncState); " is 131.
Long Statement,PhoneLogic.Core.AppServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\AppServiceReference\Reference.cs,OnTransferCallCompleted,The length of the statement  "		this.TransferCallCompleted (this' new System.ComponentModel.AsyncCompletedEventArgs (e.Error' e.Cancelled' e.UserState)); " is 121.
Long Statement,PhoneLogic.Core.AppServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\AppServiceReference\Reference.cs,OnBeginSilentMonitorCall,The length of the statement  "	return ((PhoneLogic.Core.AppServiceReference.IPhoneLogicService)(this)).BeginSilentMonitorCall (id' sipAddress' callback' asyncState); " is 134.
Long Statement,PhoneLogic.Core.AppServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\AppServiceReference\Reference.cs,OnSilentMonitorCallCompleted,The length of the statement  "		this.SilentMonitorCallCompleted (this' new System.ComponentModel.AsyncCompletedEventArgs (e.Error' e.Cancelled' e.UserState)); " is 126.
Long Statement,PhoneLogic.Core.AppServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\AppServiceReference\Reference.cs,SilentMonitorCallAsync,The length of the statement  "		this.onSilentMonitorCallCompletedDelegate = new System.Threading.SendOrPostCallback (this.OnSilentMonitorCallCompleted); " is 120.
Long Statement,PhoneLogic.Core.AppServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\AppServiceReference\Reference.cs,OnBeginBargeIntoCall,The length of the statement  "	return ((PhoneLogic.Core.AppServiceReference.IPhoneLogicService)(this)).BeginBargeIntoCall (id' sipAddress' callback' asyncState); " is 130.
Long Statement,PhoneLogic.Core.AppServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\AppServiceReference\Reference.cs,OnBargeIntoCallCompleted,The length of the statement  "		this.BargeIntoCallCompleted (this' new System.ComponentModel.AsyncCompletedEventArgs (e.Error' e.Cancelled' e.UserState)); " is 122.
Long Statement,PhoneLogic.Core.AppServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\AppServiceReference\Reference.cs,OnBeginDispatchCallInQueue,The length of the statement  "	return ((PhoneLogic.Core.AppServiceReference.IPhoneLogicService)(this)).BeginDispatchCallInQueue (id' sipAddress' callback' asyncState); " is 136.
Long Statement,PhoneLogic.Core.AppServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\AppServiceReference\Reference.cs,OnDispatchCallInQueueCompleted,The length of the statement  "		this.DispatchCallInQueueCompleted (this' new System.ComponentModel.AsyncCompletedEventArgs (e.Error' e.Cancelled' e.UserState)); " is 128.
Long Statement,PhoneLogic.Core.AppServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\AppServiceReference\Reference.cs,DispatchCallInQueueAsync,The length of the statement  "		this.onDispatchCallInQueueCompletedDelegate = new System.Threading.SendOrPostCallback (this.OnDispatchCallInQueueCompleted); " is 124.
Long Statement,PhoneLogic.Core.AppServiceReference,PolicyRetrieverClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\AppServiceReference\Reference.cs,OnGetSilverlightPolicyCompleted,The length of the statement  "		this.GetSilverlightPolicyCompleted (this' new GetSilverlightPolicyCompletedEventArgs (e.Results' e.Error' e.Cancelled' e.UserState)); " is 133.
Long Statement,PhoneLogic.Core.AppServiceReference,PolicyRetrieverClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\AppServiceReference\Reference.cs,GetSilverlightPolicyAsync,The length of the statement  "		this.onGetSilverlightPolicyCompletedDelegate = new System.Threading.SendOrPostCallback (this.OnGetSilverlightPolicyCompleted); " is 126.
Long Statement,PhoneLogic.Core.AppServiceReference,PolicyRetrieverClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\AppServiceReference\Reference.cs,GetSilverlightPolicyAsync,The length of the statement  "	base.InvokeAsync (this.onBeginGetSilverlightPolicyDelegate' null' this.onEndGetSilverlightPolicyDelegate' this.onGetSilverlightPolicyCompletedDelegate' userState); " is 163.
Long Statement,PhoneLogic.Core.ProdServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\ProdServiceReference\Reference.cs,OnEndGetJobSummary,The length of the statement  "	System.Collections.Generic.List<PhoneLogic.Core.ProdServiceReference.JobSummary> retVal = ((PhoneLogic.Core.ProdServiceReference.IPhoneLogicService)(this)).EndGetJobSummary (result); " is 182.
Long Statement,PhoneLogic.Core.ProdServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\ProdServiceReference\Reference.cs,GetJobSummaryAsync,The length of the statement  "	base.InvokeAsync (this.onBeginGetJobSummaryDelegate' null' this.onEndGetJobSummaryDelegate' this.onGetJobSummaryCompletedDelegate' userState); " is 142.
Long Statement,PhoneLogic.Core.ProdServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\ProdServiceReference\Reference.cs,OnBeginGetQueueDetail,The length of the statement  "	return ((PhoneLogic.Core.ProdServiceReference.IPhoneLogicService)(this)).BeginGetQueueDetail (jobNumber' callback' asyncState); " is 127.
Long Statement,PhoneLogic.Core.ProdServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\ProdServiceReference\Reference.cs,OnEndGetQueueDetail,The length of the statement  "	System.Collections.Generic.List<PhoneLogic.Core.ProdServiceReference.QueueDetail> retVal = ((PhoneLogic.Core.ProdServiceReference.IPhoneLogicService)(this)).EndGetQueueDetail (result); " is 184.
Long Statement,PhoneLogic.Core.ProdServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\ProdServiceReference\Reference.cs,OnGetQueueDetailCompleted,The length of the statement  "		this.GetQueueDetailCompleted (this' new GetQueueDetailCompletedEventArgs (e.Results' e.Error' e.Cancelled' e.UserState)); " is 121.
Long Statement,PhoneLogic.Core.ProdServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\ProdServiceReference\Reference.cs,OnBeginGetAllCallsInQueue,The length of the statement  "	return ((PhoneLogic.Core.ProdServiceReference.IPhoneLogicService)(this)).BeginGetAllCallsInQueue (callback' asyncState); " is 120.
Long Statement,PhoneLogic.Core.ProdServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\ProdServiceReference\Reference.cs,OnEndGetAllCallsInQueue,The length of the statement  "	System.Collections.Generic.List<PhoneLogic.Core.ProdServiceReference.QueueDetail> retVal = ((PhoneLogic.Core.ProdServiceReference.IPhoneLogicService)(this)).EndGetAllCallsInQueue (result); " is 188.
Long Statement,PhoneLogic.Core.ProdServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\ProdServiceReference\Reference.cs,OnGetAllCallsInQueueCompleted,The length of the statement  "		this.GetAllCallsInQueueCompleted (this' new GetAllCallsInQueueCompletedEventArgs (e.Results' e.Error' e.Cancelled' e.UserState)); " is 129.
Long Statement,PhoneLogic.Core.ProdServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\ProdServiceReference\Reference.cs,GetAllCallsInQueueAsync,The length of the statement  "		this.onGetAllCallsInQueueCompletedDelegate = new System.Threading.SendOrPostCallback (this.OnGetAllCallsInQueueCompleted); " is 122.
Long Statement,PhoneLogic.Core.ProdServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\ProdServiceReference\Reference.cs,GetAllCallsInQueueAsync,The length of the statement  "	base.InvokeAsync (this.onBeginGetAllCallsInQueueDelegate' null' this.onEndGetAllCallsInQueueDelegate' this.onGetAllCallsInQueueCompletedDelegate' userState); " is 157.
Long Statement,PhoneLogic.Core.ProdServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\ProdServiceReference\Reference.cs,OnBeginGetMyQueuedCalls,The length of the statement  "	return ((PhoneLogic.Core.ProdServiceReference.IPhoneLogicService)(this)).BeginGetMyQueuedCalls (sipAddress' callback' asyncState); " is 130.
Long Statement,PhoneLogic.Core.ProdServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\ProdServiceReference\Reference.cs,OnGetMyQueuedCallsCompleted,The length of the statement  "		this.GetMyQueuedCallsCompleted (this' new GetMyQueuedCallsCompletedEventArgs (e.Results' e.Error' e.Cancelled' e.UserState)); " is 125.
Long Statement,PhoneLogic.Core.ProdServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\ProdServiceReference\Reference.cs,OnBeginGetMyQueueSummary,The length of the statement  "	return ((PhoneLogic.Core.ProdServiceReference.IPhoneLogicService)(this)).BeginGetMyQueueSummary (sipAddress' callback' asyncState); " is 131.
Long Statement,PhoneLogic.Core.ProdServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\ProdServiceReference\Reference.cs,OnEndGetMyQueueSummary,The length of the statement  "	System.Collections.Generic.List<PhoneLogic.Core.ProdServiceReference.QueueSummary> retVal = ((PhoneLogic.Core.ProdServiceReference.IPhoneLogicService)(this)).EndGetMyQueueSummary (result); " is 188.
Long Statement,PhoneLogic.Core.ProdServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\ProdServiceReference\Reference.cs,OnGetMyQueueSummaryCompleted,The length of the statement  "		this.GetMyQueueSummaryCompleted (this' new GetMyQueueSummaryCompletedEventArgs (e.Results' e.Error' e.Cancelled' e.UserState)); " is 127.
Long Statement,PhoneLogic.Core.ProdServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\ProdServiceReference\Reference.cs,GetMyQueueSummaryAsync,The length of the statement  "		this.onGetMyQueueSummaryCompletedDelegate = new System.Threading.SendOrPostCallback (this.OnGetMyQueueSummaryCompleted); " is 120.
Long Statement,PhoneLogic.Core.ProdServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\ProdServiceReference\Reference.cs,OnBeginGetMyQueueDetail,The length of the statement  "	return ((PhoneLogic.Core.ProdServiceReference.IPhoneLogicService)(this)).BeginGetMyQueueDetail (sipAddress' callback' asyncState); " is 130.
Long Statement,PhoneLogic.Core.ProdServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\ProdServiceReference\Reference.cs,OnEndGetMyQueueDetail,The length of the statement  "	System.Collections.Generic.List<PhoneLogic.Core.ProdServiceReference.QueueDetail> retVal = ((PhoneLogic.Core.ProdServiceReference.IPhoneLogicService)(this)).EndGetMyQueueDetail (result); " is 186.
Long Statement,PhoneLogic.Core.ProdServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\ProdServiceReference\Reference.cs,OnGetMyQueueDetailCompleted,The length of the statement  "		this.GetMyQueueDetailCompleted (this' new GetMyQueueDetailCompletedEventArgs (e.Results' e.Error' e.Cancelled' e.UserState)); " is 125.
Long Statement,PhoneLogic.Core.ProdServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\ProdServiceReference\Reference.cs,OnBeginGetRecruitersOnline,The length of the statement  "	return ((PhoneLogic.Core.ProdServiceReference.IPhoneLogicService)(this)).BeginGetRecruitersOnline (callback' asyncState); " is 121.
Long Statement,PhoneLogic.Core.ProdServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\ProdServiceReference\Reference.cs,OnEndGetRecruitersOnline,The length of the statement  "	System.Collections.Generic.List<string> retVal = ((PhoneLogic.Core.ProdServiceReference.IPhoneLogicService)(this)).EndGetRecruitersOnline (result); " is 147.
Long Statement,PhoneLogic.Core.ProdServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\ProdServiceReference\Reference.cs,OnGetRecruitersOnlineCompleted,The length of the statement  "		this.GetRecruitersOnlineCompleted (this' new GetRecruitersOnlineCompletedEventArgs (e.Results' e.Error' e.Cancelled' e.UserState)); " is 131.
Long Statement,PhoneLogic.Core.ProdServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\ProdServiceReference\Reference.cs,GetRecruitersOnlineAsync,The length of the statement  "		this.onGetRecruitersOnlineCompletedDelegate = new System.Threading.SendOrPostCallback (this.OnGetRecruitersOnlineCompleted); " is 124.
Long Statement,PhoneLogic.Core.ProdServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\ProdServiceReference\Reference.cs,GetRecruitersOnlineAsync,The length of the statement  "	base.InvokeAsync (this.onBeginGetRecruitersOnlineDelegate' null' this.onEndGetRecruitersOnlineDelegate' this.onGetRecruitersOnlineCompletedDelegate' userState); " is 160.
Long Statement,PhoneLogic.Core.ProdServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\ProdServiceReference\Reference.cs,OnBeginGetRecruitersAvailable,The length of the statement  "	return ((PhoneLogic.Core.ProdServiceReference.IPhoneLogicService)(this)).BeginGetRecruitersAvailable (callback' asyncState); " is 124.
Long Statement,PhoneLogic.Core.ProdServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\ProdServiceReference\Reference.cs,OnEndGetRecruitersAvailable,The length of the statement  "	System.Collections.Generic.List<string> retVal = ((PhoneLogic.Core.ProdServiceReference.IPhoneLogicService)(this)).EndGetRecruitersAvailable (result); " is 150.
Long Statement,PhoneLogic.Core.ProdServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\ProdServiceReference\Reference.cs,OnGetRecruitersAvailableCompleted,The length of the statement  "		this.GetRecruitersAvailableCompleted (this' new GetRecruitersAvailableCompletedEventArgs (e.Results' e.Error' e.Cancelled' e.UserState)); " is 137.
Long Statement,PhoneLogic.Core.ProdServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\ProdServiceReference\Reference.cs,GetRecruitersAvailableAsync,The length of the statement  "		this.onGetRecruitersAvailableCompletedDelegate = new System.Threading.SendOrPostCallback (this.OnGetRecruitersAvailableCompleted); " is 130.
Long Statement,PhoneLogic.Core.ProdServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\ProdServiceReference\Reference.cs,GetRecruitersAvailableAsync,The length of the statement  "	base.InvokeAsync (this.onBeginGetRecruitersAvailableDelegate' null' this.onEndGetRecruitersAvailableDelegate' this.onGetRecruitersAvailableCompletedDelegate' userState); " is 169.
Long Statement,PhoneLogic.Core.ProdServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\ProdServiceReference\Reference.cs,OnEndGetActiveCalls,The length of the statement  "	System.Collections.Generic.List<PhoneLogic.Core.ProdServiceReference.ActiveCall> retVal = ((PhoneLogic.Core.ProdServiceReference.IPhoneLogicService)(this)).EndGetActiveCalls (result); " is 183.
Long Statement,PhoneLogic.Core.ProdServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\ProdServiceReference\Reference.cs,OnGetActiveCallsCompleted,The length of the statement  "		this.GetActiveCallsCompleted (this' new GetActiveCallsCompletedEventArgs (e.Results' e.Error' e.Cancelled' e.UserState)); " is 121.
Long Statement,PhoneLogic.Core.ProdServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\ProdServiceReference\Reference.cs,GetActiveCallsAsync,The length of the statement  "	base.InvokeAsync (this.onBeginGetActiveCallsDelegate' null' this.onEndGetActiveCallsDelegate' this.onGetActiveCallsCompletedDelegate' userState); " is 145.
Long Statement,PhoneLogic.Core.ProdServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\ProdServiceReference\Reference.cs,OnBeginPullFromQueue,The length of the statement  "	return ((PhoneLogic.Core.ProdServiceReference.IPhoneLogicService)(this)).BeginPullFromQueue (id' recruiterUri' callback' asyncState); " is 133.
Long Statement,PhoneLogic.Core.ProdServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\ProdServiceReference\Reference.cs,OnPullFromQueueCompleted,The length of the statement  "		this.PullFromQueueCompleted (this' new System.ComponentModel.AsyncCompletedEventArgs (e.Error' e.Cancelled' e.UserState)); " is 122.
Long Statement,PhoneLogic.Core.ProdServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\ProdServiceReference\Reference.cs,OnBeginRecruiterDialOut,The length of the statement  "	return ((PhoneLogic.Core.ProdServiceReference.IPhoneLogicService)(this)).BeginRecruiterDialOut (recruiterUri' jobNumber' numberToDial' callbackId' callback' asyncState); " is 169.
Long Statement,PhoneLogic.Core.ProdServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\ProdServiceReference\Reference.cs,OnRecruiterDialOutCompleted,The length of the statement  "		this.RecruiterDialOutCompleted (this' new System.ComponentModel.AsyncCompletedEventArgs (e.Error' e.Cancelled' e.UserState)); " is 125.
Long Statement,PhoneLogic.Core.ProdServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\ProdServiceReference\Reference.cs,OnBeginTransferCall,The length of the statement  "	return ((PhoneLogic.Core.ProdServiceReference.IPhoneLogicService)(this)).BeginTransferCall (id' recruiterUri' callback' asyncState); " is 132.
Long Statement,PhoneLogic.Core.ProdServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\ProdServiceReference\Reference.cs,OnTransferCallCompleted,The length of the statement  "		this.TransferCallCompleted (this' new System.ComponentModel.AsyncCompletedEventArgs (e.Error' e.Cancelled' e.UserState)); " is 121.
Long Statement,PhoneLogic.Core.ProdServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\ProdServiceReference\Reference.cs,OnBeginSilentMonitorCall,The length of the statement  "	return ((PhoneLogic.Core.ProdServiceReference.IPhoneLogicService)(this)).BeginSilentMonitorCall (id' sipAddress' callback' asyncState); " is 135.
Long Statement,PhoneLogic.Core.ProdServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\ProdServiceReference\Reference.cs,OnSilentMonitorCallCompleted,The length of the statement  "		this.SilentMonitorCallCompleted (this' new System.ComponentModel.AsyncCompletedEventArgs (e.Error' e.Cancelled' e.UserState)); " is 126.
Long Statement,PhoneLogic.Core.ProdServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\ProdServiceReference\Reference.cs,SilentMonitorCallAsync,The length of the statement  "		this.onSilentMonitorCallCompletedDelegate = new System.Threading.SendOrPostCallback (this.OnSilentMonitorCallCompleted); " is 120.
Long Statement,PhoneLogic.Core.ProdServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\ProdServiceReference\Reference.cs,OnBeginBargeIntoCall,The length of the statement  "	return ((PhoneLogic.Core.ProdServiceReference.IPhoneLogicService)(this)).BeginBargeIntoCall (id' sipAddress' callback' asyncState); " is 131.
Long Statement,PhoneLogic.Core.ProdServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\ProdServiceReference\Reference.cs,OnBargeIntoCallCompleted,The length of the statement  "		this.BargeIntoCallCompleted (this' new System.ComponentModel.AsyncCompletedEventArgs (e.Error' e.Cancelled' e.UserState)); " is 122.
Long Statement,PhoneLogic.Core.ProdServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\ProdServiceReference\Reference.cs,OnBeginDispatchCallInQueue,The length of the statement  "	return ((PhoneLogic.Core.ProdServiceReference.IPhoneLogicService)(this)).BeginDispatchCallInQueue (id' sipAddress' callback' asyncState); " is 137.
Long Statement,PhoneLogic.Core.ProdServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\ProdServiceReference\Reference.cs,OnDispatchCallInQueueCompleted,The length of the statement  "		this.DispatchCallInQueueCompleted (this' new System.ComponentModel.AsyncCompletedEventArgs (e.Error' e.Cancelled' e.UserState)); " is 128.
Long Statement,PhoneLogic.Core.ProdServiceReference,PhoneLogicServiceClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\ProdServiceReference\Reference.cs,DispatchCallInQueueAsync,The length of the statement  "		this.onDispatchCallInQueueCompletedDelegate = new System.Threading.SendOrPostCallback (this.OnDispatchCallInQueueCompleted); " is 124.
Long Statement,PhoneLogic.Core.ProdServiceReference,PolicyRetrieverClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\ProdServiceReference\Reference.cs,OnBeginGetSilverlightPolicy,The length of the statement  "	return ((PhoneLogic.Core.ProdServiceReference.IPolicyRetriever)(this)).BeginGetSilverlightPolicy (callback' asyncState); " is 120.
Long Statement,PhoneLogic.Core.ProdServiceReference,PolicyRetrieverClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\ProdServiceReference\Reference.cs,OnGetSilverlightPolicyCompleted,The length of the statement  "		this.GetSilverlightPolicyCompleted (this' new GetSilverlightPolicyCompletedEventArgs (e.Results' e.Error' e.Cancelled' e.UserState)); " is 133.
Long Statement,PhoneLogic.Core.ProdServiceReference,PolicyRetrieverClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\ProdServiceReference\Reference.cs,GetSilverlightPolicyAsync,The length of the statement  "		this.onGetSilverlightPolicyCompletedDelegate = new System.Threading.SendOrPostCallback (this.OnGetSilverlightPolicyCompleted); " is 126.
Long Statement,PhoneLogic.Core.ProdServiceReference,PolicyRetrieverClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\ProdServiceReference\Reference.cs,GetSilverlightPolicyAsync,The length of the statement  "	base.InvokeAsync (this.onBeginGetSilverlightPolicyDelegate' null' this.onEndGetSilverlightPolicyDelegate' this.onGetSilverlightPolicyCompletedDelegate' userState); " is 163.
Long Statement,PhoneLogic.Core.ProdServiceReference,PolicyRetrieverClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\ProdServiceReference\Reference.cs,OnGetFlashPolicyCompleted,The length of the statement  "		this.GetFlashPolicyCompleted (this' new GetFlashPolicyCompletedEventArgs (e.Results' e.Error' e.Cancelled' e.UserState)); " is 121.
Long Statement,PhoneLogic.Core.ProdServiceReference,PolicyRetrieverClient,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Service References\ProdServiceReference\Reference.cs,GetFlashPolicyAsync,The length of the statement  "	base.InvokeAsync (this.onBeginGetFlashPolicyDelegate' null' this.onEndGetFlashPolicyDelegate' this.onGetFlashPolicyCompletedDelegate' userState); " is 145.
Long Statement,PhoneLogic.Core.Services,ClosedCallbackSvc,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Services\ClosedCallbackSvc.cs,GetClosedJobCallbacks,The length of the statement  "	var data = await client.DownloadStringTaskAsync (new Uri (ConditionalConfiguration.apiUrl + "ClosedCallbacks" + "?jobNum=" + jobNum + "&taskId=" + taskId + "&startDate=" + startDate.Ticks + "&endDate=" + endDate.Ticks)); " is 220.
Long Statement,PhoneLogic.Core.Services,ClosedCallbackSvc,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Services\ClosedCallbackSvc.cs,GetClosedCallbackRpt,The length of the statement  "	var data = await client.DownloadStringTaskAsync (new Uri (ConditionalConfiguration.apiUrl + "ClosedCallbacks" + "?startDate=" + startDate.Ticks + "&endDate=" + endDate.Ticks)); " is 176.
Long Statement,PhoneLogic.Core.Services,OpenCallbackSvc,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Services\OpenCallbackSvc.cs,GetOpenJobCallbacks,The length of the statement  "	var data = await client.DownloadStringTaskAsync (new Uri (ConditionalConfiguration.apiUrl + "OpenCallbacks" + "?jobNum=" + jobNum + "&taskId=" + taskId)); " is 154.
Long Statement,PhoneLogic.Core.Services,LyncCallLogSvc,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Services\LyncCallLogSvc.cs,GetCalls,The length of the statement  "	var data = await client.DownloadStringTaskAsync (new Uri (ConditionalConfiguration.apiUrl + "Calls?sip=" + sip + "&startDate=" + startDate.Ticks + "&endDate=" + endDate.Ticks)); " is 177.
Long Statement,PhoneLogic.Core.Services,LyncCallLogSvc,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Services\LyncCallLogSvc.cs,GetCallsToPhoneNumber,The length of the statement  "	var data = await client.DownloadStringTaskAsync (new Uri (ConditionalConfiguration.apiUrl + "Calls?startDate=" + startDate.Ticks + "&endDate=" + endDate.Ticks + "&phoneNumber=" + phoneNumber)); " is 193.
Long Statement,PhoneLogic.Core.Services,LyncCallLogSvc,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Services\LyncCallLogSvc.cs,GetCalls,The length of the statement  "	var data = await client.DownloadStringTaskAsync (new Uri (ConditionalConfiguration.apiUrl + "Calls?phoneNumber=" + phoneNumber)); " is 129.
Long Statement,PhoneLogic.Core.Services,LyncCallLogSvc,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Services\LyncCallLogSvc.cs,GetLyncCallLog,The length of the statement  "	var data = await client.DownloadStringTaskAsync (new Uri (ConditionalConfiguration.apiUrl + "Calls?&startDate=" + startDate.Ticks + "&endDate=" + endDate.Ticks)); " is 162.
Long Statement,PhoneLogic.Core.Services,LyncCallLogSvc,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Services\LyncCallLogSvc.cs,GetLynCallsByJob,The length of the statement  "	var data = await client.DownloadStringTaskAsync (new Uri (ConditionalConfiguration.apiUrl + "LyncCallJobs?startDate=" + startDate.Ticks + "&endDate=" + endDate.Ticks)); " is 168.
Long Statement,PhoneLogic.Core.Services,LyncCallLogSvc,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Services\LyncCallLogSvc.cs,GetLynJobsForRecruiter,The length of the statement  "	var data = await client.DownloadStringTaskAsync (new Uri (ConditionalConfiguration.apiUrl + "LyncCallJobPhoneRoomRecruiters?startDate=" + startDate.Ticks + "&endDate=" + endDate.Ticks + "&sip=" + sip)); " is 202.
Long Statement,PhoneLogic.Core.Services,LyncCallLogSvc,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Services\LyncCallLogSvc.cs,GetLynRecruitersForJob,The length of the statement  "	var data = await client.DownloadStringTaskAsync (new Uri (ConditionalConfiguration.apiUrl + "LyncCallJobPhoneRoomRecruiters?job=" + job + "&startDate=" + startDate.Ticks + "&endDate=" + endDate.Ticks)); " is 202.
Long Statement,PhoneLogic.Core.Services,LyncCallLogSvc,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Services\LyncCallLogSvc.cs,GetLyncCallLog,The length of the statement  "	var data = await client.DownloadStringTaskAsync (new Uri (ConditionalConfiguration.apiUrl + "Calls?jobNum=" + jobNum + "&sip=" + sip + "&startDate=" + startDate.Ticks + "&endDate=" + endDate.Ticks)); " is 199.
Long Statement,PhoneLogic.Core.Services,LyncCallLogSvc,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Services\LyncCallLogSvc.cs,GetLyncCallsByRecruiter,The length of the statement  "			var data = await client.DownloadStringTaskAsync (new Uri (ConditionalConfiguration.apiUrl + "LyncCallByRecruiters?startDate=" + startRptDate.Ticks + "&endDate=" + endRptDate.Ticks + "&primaryEntity=Log")); " is 205.
Long Statement,PhoneLogic.Core.Services,LyncCallLogSvc,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Services\LyncCallLogSvc.cs,GetRecruitersPlusCallSummary,The length of the statement  "			var data = await client.DownloadStringTaskAsync (new Uri (ConditionalConfiguration.apiUrl + "LyncCallByRecruiters?startDate=" + startRptDate.Ticks + "&endDate=" + endRptDate.Ticks + "&primaryEntity=Recruiter")); " is 211.
Long Statement,PhoneLogic.Core.Services,RecruiterUtilizationSvc,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Services\RecruiterUtilizationSvc.cs,GetRecruiterTimeSummary,The length of the statement  "	var data = await client.DownloadStringTaskAsync (new Uri (ConditionalConfiguration.apiUrl + "RecruiterTimeSummary?phoneroom=" + phoneroom + "&startDate=" + startDate.Ticks + "&endDate=" + endDate.Ticks)); " is 204.
Long Statement,PhoneLogic.Core.Services,RecruiterSvc,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Services\RecruiterSvc.cs,GetRecruiterLog,The length of the statement  "	var data = await client.DownloadStringTaskAsync (new Uri (ConditionalConfiguration.apiUrl + "RecruiterCallLogs?sip=" + sip + "&startDate=" + startDate.Ticks + "&endDate=" + endDate.Ticks)); " is 189.
Long Statement,PhoneLogic.Core.Services,RecruiterSvc,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Services\RecruiterSvc.cs,GetActiveRecruiters,The length of the statement  "	var data = await client.DownloadStringTaskAsync (new Uri (ConditionalConfiguration.apiUrl + "Recruiter?startDate=" + startDate.Ticks + "&endDate=" + endDate.Ticks)); " is 165.
Long Statement,PhoneLogic.Core.Services,RecruiterSvc,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Services\RecruiterSvc.cs,GetRecruiterCallRpt,The length of the statement  "	var data = await client.DownloadStringTaskAsync (new Uri (ConditionalConfiguration.apiUrl + "recruiterCallRpt?&startDate=" + startDate.Ticks + "&endDate=" + endDate.Ticks)); " is 173.
Long Statement,PhoneLogic.Core.Services,PhoneLogicTaskSvc,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Services\PhoneLogicTaskSvc.cs,GetTask,The length of the statement  "	var data = await client.DownloadStringTaskAsync (new Uri (ConditionalConfiguration.apiUrl + "PhoneLogicTasks?jobNum=" + jobNum + "&taskId=" + task)); " is 149.
Long Statement,PhoneLogic.Core.Services,PhoneLogicTaskSvc,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Services\PhoneLogicTaskSvc.cs,GetMyJobs,The length of the statement  "	var data = await client.DownloadStringTaskAsync (new Uri (ConditionalConfiguration.apiUrl + "PhoneLogicTasksRpt?SIP=" + sip)); " is 126.
Long Statement,PhoneLogic.Core.Services,CallbackSvc,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Services\CallbackSvc.cs,GetMyCallbacks,The length of the statement  "	var data = await client.DownloadStringTaskAsync (new Uri (ConditionalConfiguration.apiUrl + "Callbacks?SIP=" + sip + "&jobNum=" + jobNum + "&taskId=" + taskId)); " is 161.
Long Statement,PhoneLogic.Core.ServicesTest,LyncSvc,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\ServicesTest\LyncSvc.Mock.cs,GetAvailableRecruiters,The length of the statement  "		var t = Task<List<String>>.Factory.FromAsync (channel.BeginGetRecruitersAvailable' channel.EndGetRecruitersAvailable' state); " is 125.
Complex Conditional,PhoneLogic.Core.Areas.Recruiters,MyJobsView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Recruiters\MyJobs.xaml.cs,RefreshCallBacks,The conditional expression  "mcb.SelectedJobNum == _vm.SelectedPhoneLogicTask.JobNum && mcb.SelectedTaskId == _vm.SelectedPhoneLogicTask.TaskID.GetValueOrDefault (0) && ((_vm.SelectedPhoneLogicTask.NewestMsg == mcb.LastCallBackStartTime) || _vm.SelectedPhoneLogicTask.MsgCnt.GetValueOrDefault (0) == 0)"  is complex.
Magic Number,PhoneLogic.Core.Areas.Callbacks,CallbacksView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Callbacks\CallbacksView.xaml.cs,ResizeGrid,The following statement contains a magic number: if (BrowserInfoSvc.ClientWidth < UserInterfaceTimings.ResizeBoundryWidth) {  	callbackGrid.Columns [2].Visibility = Visibility.Collapsed;  	callbackGrid.Columns [3].Visibility = Visibility.Collapsed;  	//callbackGrid.Columns[4].Visibility = Visibility.Collapsed;  }  
Magic Number,PhoneLogic.Core.Areas.Callbacks,CallbacksView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Callbacks\CallbacksView.xaml.cs,ResizeGrid,The following statement contains a magic number: if (BrowserInfoSvc.ClientWidth < UserInterfaceTimings.ResizeBoundryWidth) {  	callbackGrid.Columns [2].Visibility = Visibility.Collapsed;  	callbackGrid.Columns [3].Visibility = Visibility.Collapsed;  	//callbackGrid.Columns[4].Visibility = Visibility.Collapsed;  }  
Magic Number,PhoneLogic.Core.Areas.Callbacks,CallbacksView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Callbacks\CallbacksView.xaml.cs,ResizeGrid,The following statement contains a magic number: callbackGrid.Columns [2].Visibility = Visibility.Collapsed;  
Magic Number,PhoneLogic.Core.Areas.Callbacks,CallbacksView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Callbacks\CallbacksView.xaml.cs,ResizeGrid,The following statement contains a magic number: callbackGrid.Columns [3].Visibility = Visibility.Collapsed;  
Magic Number,PhoneLogic.Core.Areas.Callbacks,CallbacksView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Callbacks\CallbacksView.xaml.cs,ResizeGrid,The following statement contains a magic number: if (BrowserInfoSvc.ClientWidth >= UserInterfaceTimings.ResizeBoundryWidth) {  	callbackGrid.Columns [2].Visibility = Visibility.Visible;  	callbackGrid.Columns [3].Visibility = Visibility.Visible;  	//callbackGrid.Columns[4].Visibility = Visibility.Visible;  }  
Magic Number,PhoneLogic.Core.Areas.Callbacks,CallbacksView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Callbacks\CallbacksView.xaml.cs,ResizeGrid,The following statement contains a magic number: if (BrowserInfoSvc.ClientWidth >= UserInterfaceTimings.ResizeBoundryWidth) {  	callbackGrid.Columns [2].Visibility = Visibility.Visible;  	callbackGrid.Columns [3].Visibility = Visibility.Visible;  	//callbackGrid.Columns[4].Visibility = Visibility.Visible;  }  
Magic Number,PhoneLogic.Core.Areas.Callbacks,CallbacksView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Callbacks\CallbacksView.xaml.cs,ResizeGrid,The following statement contains a magic number: callbackGrid.Columns [2].Visibility = Visibility.Visible;  
Magic Number,PhoneLogic.Core.Areas.Callbacks,CallbacksView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Callbacks\CallbacksView.xaml.cs,ResizeGrid,The following statement contains a magic number: callbackGrid.Columns [3].Visibility = Visibility.Visible;  
Magic Number,PhoneLogic.Core.Areas.Callbacks,MyCallbacksView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Callbacks\MyCallbacksView.xaml.cs,ResizeGrid,The following statement contains a magic number: if (BrowserInfoSvc.ClientWidth < UserInterfaceTimings.ResizeBoundryWidth) {  	callbackGrid.Columns [2].Visibility = Visibility.Collapsed;  	callbackGrid.Columns [3].Visibility = Visibility.Collapsed;  	//callbackGrid.Columns[4].Visibility = Visibility.Collapsed;  }  
Magic Number,PhoneLogic.Core.Areas.Callbacks,MyCallbacksView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Callbacks\MyCallbacksView.xaml.cs,ResizeGrid,The following statement contains a magic number: if (BrowserInfoSvc.ClientWidth < UserInterfaceTimings.ResizeBoundryWidth) {  	callbackGrid.Columns [2].Visibility = Visibility.Collapsed;  	callbackGrid.Columns [3].Visibility = Visibility.Collapsed;  	//callbackGrid.Columns[4].Visibility = Visibility.Collapsed;  }  
Magic Number,PhoneLogic.Core.Areas.Callbacks,MyCallbacksView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Callbacks\MyCallbacksView.xaml.cs,ResizeGrid,The following statement contains a magic number: callbackGrid.Columns [2].Visibility = Visibility.Collapsed;  
Magic Number,PhoneLogic.Core.Areas.Callbacks,MyCallbacksView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Callbacks\MyCallbacksView.xaml.cs,ResizeGrid,The following statement contains a magic number: callbackGrid.Columns [3].Visibility = Visibility.Collapsed;  
Magic Number,PhoneLogic.Core.Areas.Callbacks,MyCallbacksView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Callbacks\MyCallbacksView.xaml.cs,ResizeGrid,The following statement contains a magic number: if (BrowserInfoSvc.ClientWidth >= UserInterfaceTimings.ResizeBoundryWidth) {  	callbackGrid.Columns [2].Visibility = Visibility.Visible;  	callbackGrid.Columns [3].Visibility = Visibility.Visible;  	//callbackGrid.Columns[4].Visibility = Visibility.Visible;  }  
Magic Number,PhoneLogic.Core.Areas.Callbacks,MyCallbacksView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Callbacks\MyCallbacksView.xaml.cs,ResizeGrid,The following statement contains a magic number: if (BrowserInfoSvc.ClientWidth >= UserInterfaceTimings.ResizeBoundryWidth) {  	callbackGrid.Columns [2].Visibility = Visibility.Visible;  	callbackGrid.Columns [3].Visibility = Visibility.Visible;  	//callbackGrid.Columns[4].Visibility = Visibility.Visible;  }  
Magic Number,PhoneLogic.Core.Areas.Callbacks,MyCallbacksView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Callbacks\MyCallbacksView.xaml.cs,ResizeGrid,The following statement contains a magic number: callbackGrid.Columns [2].Visibility = Visibility.Visible;  
Magic Number,PhoneLogic.Core.Areas.Callbacks,MyCallbacksView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Callbacks\MyCallbacksView.xaml.cs,ResizeGrid,The following statement contains a magic number: callbackGrid.Columns [3].Visibility = Visibility.Visible;  
Magic Number,PhoneLogic.Core.Areas.Callbacks,MyCallBacksViewModel,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Callbacks\MyCallbacksViewModel.cs,GetMyCallbacks,The following statement contains a magic number: try {  	var mcb = new ObservableCollection<myCallback> (await CallbackSvc.GetMyCallbacks (LyncClient.GetClient ().Self.Contact.Uri' SelectedJobNum' SelectedTaskId.ToString ()));  	MyCallbacks = mcb;  	if (MyCallbacks.Count > 0) {  		ShowGridData = true;  		HeadingText = String.Format ("Job {0}-{1} has {2} voice mail messages"' SelectedJobNum.Substring (0' 4)' SelectedJobNum.Substring (4)' MyCallbacks.Count);  		if (s != null)  			SelectedMyCallback = MyCallbacks.First (x => x.callbackID == s.callbackID);  	}  	else {  		HeadingText = "No voice mail messages";  	}  	LoadedOk = true;  }  catch (Exception e) {  	LoadFailed (e);  }  
Magic Number,PhoneLogic.Core.Areas.Callbacks,MyCallBacksViewModel,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Callbacks\MyCallbacksViewModel.cs,GetMyCallbacks,The following statement contains a magic number: try {  	var mcb = new ObservableCollection<myCallback> (await CallbackSvc.GetMyCallbacks (LyncClient.GetClient ().Self.Contact.Uri' SelectedJobNum' SelectedTaskId.ToString ()));  	MyCallbacks = mcb;  	if (MyCallbacks.Count > 0) {  		ShowGridData = true;  		HeadingText = String.Format ("Job {0}-{1} has {2} voice mail messages"' SelectedJobNum.Substring (0' 4)' SelectedJobNum.Substring (4)' MyCallbacks.Count);  		if (s != null)  			SelectedMyCallback = MyCallbacks.First (x => x.callbackID == s.callbackID);  	}  	else {  		HeadingText = "No voice mail messages";  	}  	LoadedOk = true;  }  catch (Exception e) {  	LoadFailed (e);  }  
Magic Number,PhoneLogic.Core.Areas.Callbacks,MyCallBacksViewModel,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Callbacks\MyCallbacksViewModel.cs,GetMyCallbacks,The following statement contains a magic number: if (MyCallbacks.Count > 0) {  	ShowGridData = true;  	HeadingText = String.Format ("Job {0}-{1} has {2} voice mail messages"' SelectedJobNum.Substring (0' 4)' SelectedJobNum.Substring (4)' MyCallbacks.Count);  	if (s != null)  		SelectedMyCallback = MyCallbacks.First (x => x.callbackID == s.callbackID);  }  else {  	HeadingText = "No voice mail messages";  }  
Magic Number,PhoneLogic.Core.Areas.Callbacks,MyCallBacksViewModel,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Callbacks\MyCallbacksViewModel.cs,GetMyCallbacks,The following statement contains a magic number: if (MyCallbacks.Count > 0) {  	ShowGridData = true;  	HeadingText = String.Format ("Job {0}-{1} has {2} voice mail messages"' SelectedJobNum.Substring (0' 4)' SelectedJobNum.Substring (4)' MyCallbacks.Count);  	if (s != null)  		SelectedMyCallback = MyCallbacks.First (x => x.callbackID == s.callbackID);  }  else {  	HeadingText = "No voice mail messages";  }  
Magic Number,PhoneLogic.Core.Areas.Callbacks,MyCallBacksViewModel,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Callbacks\MyCallbacksViewModel.cs,GetMyCallbacks,The following statement contains a magic number: HeadingText = String.Format ("Job {0}-{1} has {2} voice mail messages"' SelectedJobNum.Substring (0' 4)' SelectedJobNum.Substring (4)' MyCallbacks.Count);  
Magic Number,PhoneLogic.Core.Areas.Callbacks,MyCallBacksViewModel,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Callbacks\MyCallbacksViewModel.cs,GetMyCallbacks,The following statement contains a magic number: HeadingText = String.Format ("Job {0}-{1} has {2} voice mail messages"' SelectedJobNum.Substring (0' 4)' SelectedJobNum.Substring (4)' MyCallbacks.Count);  
Magic Number,PhoneLogic.Core.Areas.DialHistory,DialHistoryView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\DialHistory\DialHistoryView.xaml.cs,ResizeGrid,The following statement contains a magic number: if (BrowserInfoSvc.ClientWidth < UserInterfaceTimings.ResizeBoundryWidth) {  	CallsDG.Columns [4].Visibility = Visibility.Collapsed;  	CallsDG.Columns [5].Visibility = Visibility.Collapsed;  	CallsDG.Columns [6].Visibility = Visibility.Collapsed;  	CallsDG.Columns [7].Visibility = Visibility.Collapsed;  	CallsDG.Columns [8].Visibility = Visibility.Collapsed;  	CallsDG.Columns [9].Visibility = Visibility.Collapsed;  }  
Magic Number,PhoneLogic.Core.Areas.DialHistory,DialHistoryView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\DialHistory\DialHistoryView.xaml.cs,ResizeGrid,The following statement contains a magic number: if (BrowserInfoSvc.ClientWidth < UserInterfaceTimings.ResizeBoundryWidth) {  	CallsDG.Columns [4].Visibility = Visibility.Collapsed;  	CallsDG.Columns [5].Visibility = Visibility.Collapsed;  	CallsDG.Columns [6].Visibility = Visibility.Collapsed;  	CallsDG.Columns [7].Visibility = Visibility.Collapsed;  	CallsDG.Columns [8].Visibility = Visibility.Collapsed;  	CallsDG.Columns [9].Visibility = Visibility.Collapsed;  }  
Magic Number,PhoneLogic.Core.Areas.DialHistory,DialHistoryView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\DialHistory\DialHistoryView.xaml.cs,ResizeGrid,The following statement contains a magic number: if (BrowserInfoSvc.ClientWidth < UserInterfaceTimings.ResizeBoundryWidth) {  	CallsDG.Columns [4].Visibility = Visibility.Collapsed;  	CallsDG.Columns [5].Visibility = Visibility.Collapsed;  	CallsDG.Columns [6].Visibility = Visibility.Collapsed;  	CallsDG.Columns [7].Visibility = Visibility.Collapsed;  	CallsDG.Columns [8].Visibility = Visibility.Collapsed;  	CallsDG.Columns [9].Visibility = Visibility.Collapsed;  }  
Magic Number,PhoneLogic.Core.Areas.DialHistory,DialHistoryView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\DialHistory\DialHistoryView.xaml.cs,ResizeGrid,The following statement contains a magic number: if (BrowserInfoSvc.ClientWidth < UserInterfaceTimings.ResizeBoundryWidth) {  	CallsDG.Columns [4].Visibility = Visibility.Collapsed;  	CallsDG.Columns [5].Visibility = Visibility.Collapsed;  	CallsDG.Columns [6].Visibility = Visibility.Collapsed;  	CallsDG.Columns [7].Visibility = Visibility.Collapsed;  	CallsDG.Columns [8].Visibility = Visibility.Collapsed;  	CallsDG.Columns [9].Visibility = Visibility.Collapsed;  }  
Magic Number,PhoneLogic.Core.Areas.DialHistory,DialHistoryView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\DialHistory\DialHistoryView.xaml.cs,ResizeGrid,The following statement contains a magic number: if (BrowserInfoSvc.ClientWidth < UserInterfaceTimings.ResizeBoundryWidth) {  	CallsDG.Columns [4].Visibility = Visibility.Collapsed;  	CallsDG.Columns [5].Visibility = Visibility.Collapsed;  	CallsDG.Columns [6].Visibility = Visibility.Collapsed;  	CallsDG.Columns [7].Visibility = Visibility.Collapsed;  	CallsDG.Columns [8].Visibility = Visibility.Collapsed;  	CallsDG.Columns [9].Visibility = Visibility.Collapsed;  }  
Magic Number,PhoneLogic.Core.Areas.DialHistory,DialHistoryView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\DialHistory\DialHistoryView.xaml.cs,ResizeGrid,The following statement contains a magic number: if (BrowserInfoSvc.ClientWidth < UserInterfaceTimings.ResizeBoundryWidth) {  	CallsDG.Columns [4].Visibility = Visibility.Collapsed;  	CallsDG.Columns [5].Visibility = Visibility.Collapsed;  	CallsDG.Columns [6].Visibility = Visibility.Collapsed;  	CallsDG.Columns [7].Visibility = Visibility.Collapsed;  	CallsDG.Columns [8].Visibility = Visibility.Collapsed;  	CallsDG.Columns [9].Visibility = Visibility.Collapsed;  }  
Magic Number,PhoneLogic.Core.Areas.DialHistory,DialHistoryView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\DialHistory\DialHistoryView.xaml.cs,ResizeGrid,The following statement contains a magic number: CallsDG.Columns [4].Visibility = Visibility.Collapsed;  
Magic Number,PhoneLogic.Core.Areas.DialHistory,DialHistoryView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\DialHistory\DialHistoryView.xaml.cs,ResizeGrid,The following statement contains a magic number: CallsDG.Columns [5].Visibility = Visibility.Collapsed;  
Magic Number,PhoneLogic.Core.Areas.DialHistory,DialHistoryView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\DialHistory\DialHistoryView.xaml.cs,ResizeGrid,The following statement contains a magic number: CallsDG.Columns [6].Visibility = Visibility.Collapsed;  
Magic Number,PhoneLogic.Core.Areas.DialHistory,DialHistoryView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\DialHistory\DialHistoryView.xaml.cs,ResizeGrid,The following statement contains a magic number: CallsDG.Columns [7].Visibility = Visibility.Collapsed;  
Magic Number,PhoneLogic.Core.Areas.DialHistory,DialHistoryView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\DialHistory\DialHistoryView.xaml.cs,ResizeGrid,The following statement contains a magic number: CallsDG.Columns [8].Visibility = Visibility.Collapsed;  
Magic Number,PhoneLogic.Core.Areas.DialHistory,DialHistoryView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\DialHistory\DialHistoryView.xaml.cs,ResizeGrid,The following statement contains a magic number: CallsDG.Columns [9].Visibility = Visibility.Collapsed;  
Magic Number,PhoneLogic.Core.Areas.DialHistory,DialHistoryView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\DialHistory\DialHistoryView.xaml.cs,ResizeGrid,The following statement contains a magic number: if (BrowserInfoSvc.ClientWidth >= UserInterfaceTimings.ResizeBoundryWidth) {  	CallsDG.Columns [4].Visibility = Visibility.Visible;  	CallsDG.Columns [5].Visibility = Visibility.Visible;  	CallsDG.Columns [6].Visibility = Visibility.Visible;  	CallsDG.Columns [7].Visibility = Visibility.Visible;  	CallsDG.Columns [8].Visibility = Visibility.Visible;  	CallsDG.Columns [9].Visibility = Visibility.Visible;  }  
Magic Number,PhoneLogic.Core.Areas.DialHistory,DialHistoryView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\DialHistory\DialHistoryView.xaml.cs,ResizeGrid,The following statement contains a magic number: if (BrowserInfoSvc.ClientWidth >= UserInterfaceTimings.ResizeBoundryWidth) {  	CallsDG.Columns [4].Visibility = Visibility.Visible;  	CallsDG.Columns [5].Visibility = Visibility.Visible;  	CallsDG.Columns [6].Visibility = Visibility.Visible;  	CallsDG.Columns [7].Visibility = Visibility.Visible;  	CallsDG.Columns [8].Visibility = Visibility.Visible;  	CallsDG.Columns [9].Visibility = Visibility.Visible;  }  
Magic Number,PhoneLogic.Core.Areas.DialHistory,DialHistoryView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\DialHistory\DialHistoryView.xaml.cs,ResizeGrid,The following statement contains a magic number: if (BrowserInfoSvc.ClientWidth >= UserInterfaceTimings.ResizeBoundryWidth) {  	CallsDG.Columns [4].Visibility = Visibility.Visible;  	CallsDG.Columns [5].Visibility = Visibility.Visible;  	CallsDG.Columns [6].Visibility = Visibility.Visible;  	CallsDG.Columns [7].Visibility = Visibility.Visible;  	CallsDG.Columns [8].Visibility = Visibility.Visible;  	CallsDG.Columns [9].Visibility = Visibility.Visible;  }  
Magic Number,PhoneLogic.Core.Areas.DialHistory,DialHistoryView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\DialHistory\DialHistoryView.xaml.cs,ResizeGrid,The following statement contains a magic number: if (BrowserInfoSvc.ClientWidth >= UserInterfaceTimings.ResizeBoundryWidth) {  	CallsDG.Columns [4].Visibility = Visibility.Visible;  	CallsDG.Columns [5].Visibility = Visibility.Visible;  	CallsDG.Columns [6].Visibility = Visibility.Visible;  	CallsDG.Columns [7].Visibility = Visibility.Visible;  	CallsDG.Columns [8].Visibility = Visibility.Visible;  	CallsDG.Columns [9].Visibility = Visibility.Visible;  }  
Magic Number,PhoneLogic.Core.Areas.DialHistory,DialHistoryView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\DialHistory\DialHistoryView.xaml.cs,ResizeGrid,The following statement contains a magic number: if (BrowserInfoSvc.ClientWidth >= UserInterfaceTimings.ResizeBoundryWidth) {  	CallsDG.Columns [4].Visibility = Visibility.Visible;  	CallsDG.Columns [5].Visibility = Visibility.Visible;  	CallsDG.Columns [6].Visibility = Visibility.Visible;  	CallsDG.Columns [7].Visibility = Visibility.Visible;  	CallsDG.Columns [8].Visibility = Visibility.Visible;  	CallsDG.Columns [9].Visibility = Visibility.Visible;  }  
Magic Number,PhoneLogic.Core.Areas.DialHistory,DialHistoryView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\DialHistory\DialHistoryView.xaml.cs,ResizeGrid,The following statement contains a magic number: if (BrowserInfoSvc.ClientWidth >= UserInterfaceTimings.ResizeBoundryWidth) {  	CallsDG.Columns [4].Visibility = Visibility.Visible;  	CallsDG.Columns [5].Visibility = Visibility.Visible;  	CallsDG.Columns [6].Visibility = Visibility.Visible;  	CallsDG.Columns [7].Visibility = Visibility.Visible;  	CallsDG.Columns [8].Visibility = Visibility.Visible;  	CallsDG.Columns [9].Visibility = Visibility.Visible;  }  
Magic Number,PhoneLogic.Core.Areas.DialHistory,DialHistoryView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\DialHistory\DialHistoryView.xaml.cs,ResizeGrid,The following statement contains a magic number: CallsDG.Columns [4].Visibility = Visibility.Visible;  
Magic Number,PhoneLogic.Core.Areas.DialHistory,DialHistoryView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\DialHistory\DialHistoryView.xaml.cs,ResizeGrid,The following statement contains a magic number: CallsDG.Columns [5].Visibility = Visibility.Visible;  
Magic Number,PhoneLogic.Core.Areas.DialHistory,DialHistoryView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\DialHistory\DialHistoryView.xaml.cs,ResizeGrid,The following statement contains a magic number: CallsDG.Columns [6].Visibility = Visibility.Visible;  
Magic Number,PhoneLogic.Core.Areas.DialHistory,DialHistoryView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\DialHistory\DialHistoryView.xaml.cs,ResizeGrid,The following statement contains a magic number: CallsDG.Columns [7].Visibility = Visibility.Visible;  
Magic Number,PhoneLogic.Core.Areas.DialHistory,DialHistoryView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\DialHistory\DialHistoryView.xaml.cs,ResizeGrid,The following statement contains a magic number: CallsDG.Columns [8].Visibility = Visibility.Visible;  
Magic Number,PhoneLogic.Core.Areas.DialHistory,DialHistoryView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\DialHistory\DialHistoryView.xaml.cs,ResizeGrid,The following statement contains a magic number: CallsDG.Columns [9].Visibility = Visibility.Visible;  
Magic Number,PhoneLogic.Core.Areas.CallsRpts,CallsView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\CallsRpts\CallsView.xaml.cs,ResizeGrid,The following statement contains a magic number: if (BrowserInfoSvc.ClientWidth < UserInterfaceTimings.ResizeBoundryWidth) {  	CallsDG.Columns [3].Visibility = Visibility.Collapsed;  	CallsDG.Columns [4].Visibility = Visibility.Collapsed;  }  
Magic Number,PhoneLogic.Core.Areas.CallsRpts,CallsView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\CallsRpts\CallsView.xaml.cs,ResizeGrid,The following statement contains a magic number: if (BrowserInfoSvc.ClientWidth < UserInterfaceTimings.ResizeBoundryWidth) {  	CallsDG.Columns [3].Visibility = Visibility.Collapsed;  	CallsDG.Columns [4].Visibility = Visibility.Collapsed;  }  
Magic Number,PhoneLogic.Core.Areas.CallsRpts,CallsView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\CallsRpts\CallsView.xaml.cs,ResizeGrid,The following statement contains a magic number: CallsDG.Columns [3].Visibility = Visibility.Collapsed;  
Magic Number,PhoneLogic.Core.Areas.CallsRpts,CallsView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\CallsRpts\CallsView.xaml.cs,ResizeGrid,The following statement contains a magic number: CallsDG.Columns [4].Visibility = Visibility.Collapsed;  
Magic Number,PhoneLogic.Core.Areas.CallsRpts,CallsView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\CallsRpts\CallsView.xaml.cs,ResizeGrid,The following statement contains a magic number: if (BrowserInfoSvc.ClientWidth >= UserInterfaceTimings.ResizeBoundryWidth) {  	CallsDG.Columns [3].Visibility = Visibility.Visible;  	CallsDG.Columns [4].Visibility = Visibility.Visible;  }  
Magic Number,PhoneLogic.Core.Areas.CallsRpts,CallsView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\CallsRpts\CallsView.xaml.cs,ResizeGrid,The following statement contains a magic number: if (BrowserInfoSvc.ClientWidth >= UserInterfaceTimings.ResizeBoundryWidth) {  	CallsDG.Columns [3].Visibility = Visibility.Visible;  	CallsDG.Columns [4].Visibility = Visibility.Visible;  }  
Magic Number,PhoneLogic.Core.Areas.CallsRpts,CallsView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\CallsRpts\CallsView.xaml.cs,ResizeGrid,The following statement contains a magic number: CallsDG.Columns [3].Visibility = Visibility.Visible;  
Magic Number,PhoneLogic.Core.Areas.CallsRpts,CallsView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\CallsRpts\CallsView.xaml.cs,ResizeGrid,The following statement contains a magic number: CallsDG.Columns [4].Visibility = Visibility.Visible;  
Magic Number,PhoneLogic.Core.Areas.Recruiters,OutboundCallView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Recruiters\OutboundCallView.xaml.cs,ValidateCallerId,The following statement contains a magic number: if ((PhoneNumberSvc.GetNumbers (tbOutboundPhone.Text).Length != 10))  	tbErrors.Text = "Phone number invalid";  
Magic Number,PhoneLogic.Core.Areas.Recruiters,MyJobsView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Recruiters\MyJobs.xaml.cs,DGrid_LoadingRow,The following statement contains a magic number: if (c.MsgCnt > 0) {  	FrameworkElement ele = DGrid.Columns [0].GetCellContent (e.Row);  	(ele as TextBlock).Foreground = new SolidColorBrush (Colors.Red);  	ele = DGrid.Columns [1].GetCellContent (e.Row);  	(ele as TextBlock).Foreground = new SolidColorBrush (Colors.Red);  	ele = DGrid.Columns [2].GetCellContent (e.Row);  	(ele as TextBlock).Foreground = new SolidColorBrush (Colors.Red);  	ele = DGrid.Columns [3].GetCellContent (e.Row);  	(ele as TextBlock).Foreground = new SolidColorBrush (Colors.Red);  }  else {  	FrameworkElement ele = DGrid.Columns [0].GetCellContent (e.Row);  	(ele as TextBlock).Foreground = new SolidColorBrush (Colors.Black);  	ele = DGrid.Columns [1].GetCellContent (e.Row);  	(ele as TextBlock).Foreground = new SolidColorBrush (Colors.Black);  	ele = DGrid.Columns [2].GetCellContent (e.Row);  	(ele as TextBlock).Foreground = new SolidColorBrush (Colors.Black);  	ele = DGrid.Columns [3].GetCellContent (e.Row);  	(ele as TextBlock).Foreground = new SolidColorBrush (Colors.Black);  }  
Magic Number,PhoneLogic.Core.Areas.Recruiters,MyJobsView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Recruiters\MyJobs.xaml.cs,DGrid_LoadingRow,The following statement contains a magic number: if (c.MsgCnt > 0) {  	FrameworkElement ele = DGrid.Columns [0].GetCellContent (e.Row);  	(ele as TextBlock).Foreground = new SolidColorBrush (Colors.Red);  	ele = DGrid.Columns [1].GetCellContent (e.Row);  	(ele as TextBlock).Foreground = new SolidColorBrush (Colors.Red);  	ele = DGrid.Columns [2].GetCellContent (e.Row);  	(ele as TextBlock).Foreground = new SolidColorBrush (Colors.Red);  	ele = DGrid.Columns [3].GetCellContent (e.Row);  	(ele as TextBlock).Foreground = new SolidColorBrush (Colors.Red);  }  else {  	FrameworkElement ele = DGrid.Columns [0].GetCellContent (e.Row);  	(ele as TextBlock).Foreground = new SolidColorBrush (Colors.Black);  	ele = DGrid.Columns [1].GetCellContent (e.Row);  	(ele as TextBlock).Foreground = new SolidColorBrush (Colors.Black);  	ele = DGrid.Columns [2].GetCellContent (e.Row);  	(ele as TextBlock).Foreground = new SolidColorBrush (Colors.Black);  	ele = DGrid.Columns [3].GetCellContent (e.Row);  	(ele as TextBlock).Foreground = new SolidColorBrush (Colors.Black);  }  
Magic Number,PhoneLogic.Core.Areas.Recruiters,MyJobsView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Recruiters\MyJobs.xaml.cs,DGrid_LoadingRow,The following statement contains a magic number: if (c.MsgCnt > 0) {  	FrameworkElement ele = DGrid.Columns [0].GetCellContent (e.Row);  	(ele as TextBlock).Foreground = new SolidColorBrush (Colors.Red);  	ele = DGrid.Columns [1].GetCellContent (e.Row);  	(ele as TextBlock).Foreground = new SolidColorBrush (Colors.Red);  	ele = DGrid.Columns [2].GetCellContent (e.Row);  	(ele as TextBlock).Foreground = new SolidColorBrush (Colors.Red);  	ele = DGrid.Columns [3].GetCellContent (e.Row);  	(ele as TextBlock).Foreground = new SolidColorBrush (Colors.Red);  }  else {  	FrameworkElement ele = DGrid.Columns [0].GetCellContent (e.Row);  	(ele as TextBlock).Foreground = new SolidColorBrush (Colors.Black);  	ele = DGrid.Columns [1].GetCellContent (e.Row);  	(ele as TextBlock).Foreground = new SolidColorBrush (Colors.Black);  	ele = DGrid.Columns [2].GetCellContent (e.Row);  	(ele as TextBlock).Foreground = new SolidColorBrush (Colors.Black);  	ele = DGrid.Columns [3].GetCellContent (e.Row);  	(ele as TextBlock).Foreground = new SolidColorBrush (Colors.Black);  }  
Magic Number,PhoneLogic.Core.Areas.Recruiters,MyJobsView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Recruiters\MyJobs.xaml.cs,DGrid_LoadingRow,The following statement contains a magic number: if (c.MsgCnt > 0) {  	FrameworkElement ele = DGrid.Columns [0].GetCellContent (e.Row);  	(ele as TextBlock).Foreground = new SolidColorBrush (Colors.Red);  	ele = DGrid.Columns [1].GetCellContent (e.Row);  	(ele as TextBlock).Foreground = new SolidColorBrush (Colors.Red);  	ele = DGrid.Columns [2].GetCellContent (e.Row);  	(ele as TextBlock).Foreground = new SolidColorBrush (Colors.Red);  	ele = DGrid.Columns [3].GetCellContent (e.Row);  	(ele as TextBlock).Foreground = new SolidColorBrush (Colors.Red);  }  else {  	FrameworkElement ele = DGrid.Columns [0].GetCellContent (e.Row);  	(ele as TextBlock).Foreground = new SolidColorBrush (Colors.Black);  	ele = DGrid.Columns [1].GetCellContent (e.Row);  	(ele as TextBlock).Foreground = new SolidColorBrush (Colors.Black);  	ele = DGrid.Columns [2].GetCellContent (e.Row);  	(ele as TextBlock).Foreground = new SolidColorBrush (Colors.Black);  	ele = DGrid.Columns [3].GetCellContent (e.Row);  	(ele as TextBlock).Foreground = new SolidColorBrush (Colors.Black);  }  
Magic Number,PhoneLogic.Core.Areas.Recruiters,MyJobsView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Recruiters\MyJobs.xaml.cs,DGrid_LoadingRow,The following statement contains a magic number: ele = DGrid.Columns [2].GetCellContent (e.Row);  
Magic Number,PhoneLogic.Core.Areas.Recruiters,MyJobsView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Recruiters\MyJobs.xaml.cs,DGrid_LoadingRow,The following statement contains a magic number: ele = DGrid.Columns [3].GetCellContent (e.Row);  
Magic Number,PhoneLogic.Core.Areas.Recruiters,MyJobsView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Recruiters\MyJobs.xaml.cs,DGrid_LoadingRow,The following statement contains a magic number: ele = DGrid.Columns [2].GetCellContent (e.Row);  
Magic Number,PhoneLogic.Core.Areas.Recruiters,MyJobsView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Recruiters\MyJobs.xaml.cs,DGrid_LoadingRow,The following statement contains a magic number: ele = DGrid.Columns [3].GetCellContent (e.Row);  
Magic Number,PhoneLogic.Core.Areas.Recruiters,MyJobsView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Recruiters\MyJobs.xaml.cs,ResizeGrid,The following statement contains a magic number: if (BrowserInfoSvc.ClientWidth < UserInterfaceTimings.ResizeBoundryWidth) {  	DGrid.Columns [3].Visibility = Visibility.Collapsed;  	DGrid.Columns [4].Visibility = Visibility.Collapsed;  	DGrid.Columns [5].Visibility = Visibility.Collapsed;  	DGrid.Columns [6].Visibility = Visibility.Collapsed;  	DGrid.Columns [7].Visibility = Visibility.Collapsed;  	DGrid.Columns [8].Visibility = Visibility.Collapsed;  	DGrid.Columns [9].Visibility = Visibility.Collapsed;  	DGrid.Columns [10].Visibility = Visibility.Collapsed;  	DGrid.Columns [11].Visibility = Visibility.Collapsed;  	DGrid.Columns [12].Visibility = Visibility.Collapsed;  	tc.SetValue (Grid.RowProperty' 1);  	tc.SetValue (Grid.ColumnProperty' 0);  }  
Magic Number,PhoneLogic.Core.Areas.Recruiters,MyJobsView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Recruiters\MyJobs.xaml.cs,ResizeGrid,The following statement contains a magic number: if (BrowserInfoSvc.ClientWidth < UserInterfaceTimings.ResizeBoundryWidth) {  	DGrid.Columns [3].Visibility = Visibility.Collapsed;  	DGrid.Columns [4].Visibility = Visibility.Collapsed;  	DGrid.Columns [5].Visibility = Visibility.Collapsed;  	DGrid.Columns [6].Visibility = Visibility.Collapsed;  	DGrid.Columns [7].Visibility = Visibility.Collapsed;  	DGrid.Columns [8].Visibility = Visibility.Collapsed;  	DGrid.Columns [9].Visibility = Visibility.Collapsed;  	DGrid.Columns [10].Visibility = Visibility.Collapsed;  	DGrid.Columns [11].Visibility = Visibility.Collapsed;  	DGrid.Columns [12].Visibility = Visibility.Collapsed;  	tc.SetValue (Grid.RowProperty' 1);  	tc.SetValue (Grid.ColumnProperty' 0);  }  
Magic Number,PhoneLogic.Core.Areas.Recruiters,MyJobsView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Recruiters\MyJobs.xaml.cs,ResizeGrid,The following statement contains a magic number: if (BrowserInfoSvc.ClientWidth < UserInterfaceTimings.ResizeBoundryWidth) {  	DGrid.Columns [3].Visibility = Visibility.Collapsed;  	DGrid.Columns [4].Visibility = Visibility.Collapsed;  	DGrid.Columns [5].Visibility = Visibility.Collapsed;  	DGrid.Columns [6].Visibility = Visibility.Collapsed;  	DGrid.Columns [7].Visibility = Visibility.Collapsed;  	DGrid.Columns [8].Visibility = Visibility.Collapsed;  	DGrid.Columns [9].Visibility = Visibility.Collapsed;  	DGrid.Columns [10].Visibility = Visibility.Collapsed;  	DGrid.Columns [11].Visibility = Visibility.Collapsed;  	DGrid.Columns [12].Visibility = Visibility.Collapsed;  	tc.SetValue (Grid.RowProperty' 1);  	tc.SetValue (Grid.ColumnProperty' 0);  }  
Magic Number,PhoneLogic.Core.Areas.Recruiters,MyJobsView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Recruiters\MyJobs.xaml.cs,ResizeGrid,The following statement contains a magic number: if (BrowserInfoSvc.ClientWidth < UserInterfaceTimings.ResizeBoundryWidth) {  	DGrid.Columns [3].Visibility = Visibility.Collapsed;  	DGrid.Columns [4].Visibility = Visibility.Collapsed;  	DGrid.Columns [5].Visibility = Visibility.Collapsed;  	DGrid.Columns [6].Visibility = Visibility.Collapsed;  	DGrid.Columns [7].Visibility = Visibility.Collapsed;  	DGrid.Columns [8].Visibility = Visibility.Collapsed;  	DGrid.Columns [9].Visibility = Visibility.Collapsed;  	DGrid.Columns [10].Visibility = Visibility.Collapsed;  	DGrid.Columns [11].Visibility = Visibility.Collapsed;  	DGrid.Columns [12].Visibility = Visibility.Collapsed;  	tc.SetValue (Grid.RowProperty' 1);  	tc.SetValue (Grid.ColumnProperty' 0);  }  
Magic Number,PhoneLogic.Core.Areas.Recruiters,MyJobsView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Recruiters\MyJobs.xaml.cs,ResizeGrid,The following statement contains a magic number: if (BrowserInfoSvc.ClientWidth < UserInterfaceTimings.ResizeBoundryWidth) {  	DGrid.Columns [3].Visibility = Visibility.Collapsed;  	DGrid.Columns [4].Visibility = Visibility.Collapsed;  	DGrid.Columns [5].Visibility = Visibility.Collapsed;  	DGrid.Columns [6].Visibility = Visibility.Collapsed;  	DGrid.Columns [7].Visibility = Visibility.Collapsed;  	DGrid.Columns [8].Visibility = Visibility.Collapsed;  	DGrid.Columns [9].Visibility = Visibility.Collapsed;  	DGrid.Columns [10].Visibility = Visibility.Collapsed;  	DGrid.Columns [11].Visibility = Visibility.Collapsed;  	DGrid.Columns [12].Visibility = Visibility.Collapsed;  	tc.SetValue (Grid.RowProperty' 1);  	tc.SetValue (Grid.ColumnProperty' 0);  }  
Magic Number,PhoneLogic.Core.Areas.Recruiters,MyJobsView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Recruiters\MyJobs.xaml.cs,ResizeGrid,The following statement contains a magic number: if (BrowserInfoSvc.ClientWidth < UserInterfaceTimings.ResizeBoundryWidth) {  	DGrid.Columns [3].Visibility = Visibility.Collapsed;  	DGrid.Columns [4].Visibility = Visibility.Collapsed;  	DGrid.Columns [5].Visibility = Visibility.Collapsed;  	DGrid.Columns [6].Visibility = Visibility.Collapsed;  	DGrid.Columns [7].Visibility = Visibility.Collapsed;  	DGrid.Columns [8].Visibility = Visibility.Collapsed;  	DGrid.Columns [9].Visibility = Visibility.Collapsed;  	DGrid.Columns [10].Visibility = Visibility.Collapsed;  	DGrid.Columns [11].Visibility = Visibility.Collapsed;  	DGrid.Columns [12].Visibility = Visibility.Collapsed;  	tc.SetValue (Grid.RowProperty' 1);  	tc.SetValue (Grid.ColumnProperty' 0);  }  
Magic Number,PhoneLogic.Core.Areas.Recruiters,MyJobsView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Recruiters\MyJobs.xaml.cs,ResizeGrid,The following statement contains a magic number: if (BrowserInfoSvc.ClientWidth < UserInterfaceTimings.ResizeBoundryWidth) {  	DGrid.Columns [3].Visibility = Visibility.Collapsed;  	DGrid.Columns [4].Visibility = Visibility.Collapsed;  	DGrid.Columns [5].Visibility = Visibility.Collapsed;  	DGrid.Columns [6].Visibility = Visibility.Collapsed;  	DGrid.Columns [7].Visibility = Visibility.Collapsed;  	DGrid.Columns [8].Visibility = Visibility.Collapsed;  	DGrid.Columns [9].Visibility = Visibility.Collapsed;  	DGrid.Columns [10].Visibility = Visibility.Collapsed;  	DGrid.Columns [11].Visibility = Visibility.Collapsed;  	DGrid.Columns [12].Visibility = Visibility.Collapsed;  	tc.SetValue (Grid.RowProperty' 1);  	tc.SetValue (Grid.ColumnProperty' 0);  }  
Magic Number,PhoneLogic.Core.Areas.Recruiters,MyJobsView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Recruiters\MyJobs.xaml.cs,ResizeGrid,The following statement contains a magic number: if (BrowserInfoSvc.ClientWidth < UserInterfaceTimings.ResizeBoundryWidth) {  	DGrid.Columns [3].Visibility = Visibility.Collapsed;  	DGrid.Columns [4].Visibility = Visibility.Collapsed;  	DGrid.Columns [5].Visibility = Visibility.Collapsed;  	DGrid.Columns [6].Visibility = Visibility.Collapsed;  	DGrid.Columns [7].Visibility = Visibility.Collapsed;  	DGrid.Columns [8].Visibility = Visibility.Collapsed;  	DGrid.Columns [9].Visibility = Visibility.Collapsed;  	DGrid.Columns [10].Visibility = Visibility.Collapsed;  	DGrid.Columns [11].Visibility = Visibility.Collapsed;  	DGrid.Columns [12].Visibility = Visibility.Collapsed;  	tc.SetValue (Grid.RowProperty' 1);  	tc.SetValue (Grid.ColumnProperty' 0);  }  
Magic Number,PhoneLogic.Core.Areas.Recruiters,MyJobsView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Recruiters\MyJobs.xaml.cs,ResizeGrid,The following statement contains a magic number: if (BrowserInfoSvc.ClientWidth < UserInterfaceTimings.ResizeBoundryWidth) {  	DGrid.Columns [3].Visibility = Visibility.Collapsed;  	DGrid.Columns [4].Visibility = Visibility.Collapsed;  	DGrid.Columns [5].Visibility = Visibility.Collapsed;  	DGrid.Columns [6].Visibility = Visibility.Collapsed;  	DGrid.Columns [7].Visibility = Visibility.Collapsed;  	DGrid.Columns [8].Visibility = Visibility.Collapsed;  	DGrid.Columns [9].Visibility = Visibility.Collapsed;  	DGrid.Columns [10].Visibility = Visibility.Collapsed;  	DGrid.Columns [11].Visibility = Visibility.Collapsed;  	DGrid.Columns [12].Visibility = Visibility.Collapsed;  	tc.SetValue (Grid.RowProperty' 1);  	tc.SetValue (Grid.ColumnProperty' 0);  }  
Magic Number,PhoneLogic.Core.Areas.Recruiters,MyJobsView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Recruiters\MyJobs.xaml.cs,ResizeGrid,The following statement contains a magic number: if (BrowserInfoSvc.ClientWidth < UserInterfaceTimings.ResizeBoundryWidth) {  	DGrid.Columns [3].Visibility = Visibility.Collapsed;  	DGrid.Columns [4].Visibility = Visibility.Collapsed;  	DGrid.Columns [5].Visibility = Visibility.Collapsed;  	DGrid.Columns [6].Visibility = Visibility.Collapsed;  	DGrid.Columns [7].Visibility = Visibility.Collapsed;  	DGrid.Columns [8].Visibility = Visibility.Collapsed;  	DGrid.Columns [9].Visibility = Visibility.Collapsed;  	DGrid.Columns [10].Visibility = Visibility.Collapsed;  	DGrid.Columns [11].Visibility = Visibility.Collapsed;  	DGrid.Columns [12].Visibility = Visibility.Collapsed;  	tc.SetValue (Grid.RowProperty' 1);  	tc.SetValue (Grid.ColumnProperty' 0);  }  
Magic Number,PhoneLogic.Core.Areas.Recruiters,MyJobsView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Recruiters\MyJobs.xaml.cs,ResizeGrid,The following statement contains a magic number: DGrid.Columns [3].Visibility = Visibility.Collapsed;  
Magic Number,PhoneLogic.Core.Areas.Recruiters,MyJobsView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Recruiters\MyJobs.xaml.cs,ResizeGrid,The following statement contains a magic number: DGrid.Columns [4].Visibility = Visibility.Collapsed;  
Magic Number,PhoneLogic.Core.Areas.Recruiters,MyJobsView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Recruiters\MyJobs.xaml.cs,ResizeGrid,The following statement contains a magic number: DGrid.Columns [5].Visibility = Visibility.Collapsed;  
Magic Number,PhoneLogic.Core.Areas.Recruiters,MyJobsView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Recruiters\MyJobs.xaml.cs,ResizeGrid,The following statement contains a magic number: DGrid.Columns [6].Visibility = Visibility.Collapsed;  
Magic Number,PhoneLogic.Core.Areas.Recruiters,MyJobsView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Recruiters\MyJobs.xaml.cs,ResizeGrid,The following statement contains a magic number: DGrid.Columns [7].Visibility = Visibility.Collapsed;  
Magic Number,PhoneLogic.Core.Areas.Recruiters,MyJobsView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Recruiters\MyJobs.xaml.cs,ResizeGrid,The following statement contains a magic number: DGrid.Columns [8].Visibility = Visibility.Collapsed;  
Magic Number,PhoneLogic.Core.Areas.Recruiters,MyJobsView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Recruiters\MyJobs.xaml.cs,ResizeGrid,The following statement contains a magic number: DGrid.Columns [9].Visibility = Visibility.Collapsed;  
Magic Number,PhoneLogic.Core.Areas.Recruiters,MyJobsView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Recruiters\MyJobs.xaml.cs,ResizeGrid,The following statement contains a magic number: DGrid.Columns [10].Visibility = Visibility.Collapsed;  
Magic Number,PhoneLogic.Core.Areas.Recruiters,MyJobsView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Recruiters\MyJobs.xaml.cs,ResizeGrid,The following statement contains a magic number: DGrid.Columns [11].Visibility = Visibility.Collapsed;  
Magic Number,PhoneLogic.Core.Areas.Recruiters,MyJobsView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Recruiters\MyJobs.xaml.cs,ResizeGrid,The following statement contains a magic number: DGrid.Columns [12].Visibility = Visibility.Collapsed;  
Magic Number,PhoneLogic.Core.Areas.Recruiters,MyJobsView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Recruiters\MyJobs.xaml.cs,ResizeGrid,The following statement contains a magic number: if (BrowserInfoSvc.ClientWidth >= UserInterfaceTimings.ResizeBoundryWidth) {  	DGrid.Columns [3].Visibility = Visibility.Visible;  	DGrid.Columns [4].Visibility = Visibility.Visible;  	DGrid.Columns [5].Visibility = Visibility.Visible;  	DGrid.Columns [6].Visibility = Visibility.Visible;  	DGrid.Columns [7].Visibility = Visibility.Visible;  	DGrid.Columns [8].Visibility = Visibility.Visible;  	DGrid.Columns [9].Visibility = Visibility.Visible;  	DGrid.Columns [10].Visibility = Visibility.Visible;  	DGrid.Columns [11].Visibility = Visibility.Visible;  	DGrid.Columns [12].Visibility = Visibility.Visible;  	tc.SetValue (Grid.RowProperty' 0);  	tc.SetValue (Grid.ColumnProperty' 1);  }  
Magic Number,PhoneLogic.Core.Areas.Recruiters,MyJobsView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Recruiters\MyJobs.xaml.cs,ResizeGrid,The following statement contains a magic number: if (BrowserInfoSvc.ClientWidth >= UserInterfaceTimings.ResizeBoundryWidth) {  	DGrid.Columns [3].Visibility = Visibility.Visible;  	DGrid.Columns [4].Visibility = Visibility.Visible;  	DGrid.Columns [5].Visibility = Visibility.Visible;  	DGrid.Columns [6].Visibility = Visibility.Visible;  	DGrid.Columns [7].Visibility = Visibility.Visible;  	DGrid.Columns [8].Visibility = Visibility.Visible;  	DGrid.Columns [9].Visibility = Visibility.Visible;  	DGrid.Columns [10].Visibility = Visibility.Visible;  	DGrid.Columns [11].Visibility = Visibility.Visible;  	DGrid.Columns [12].Visibility = Visibility.Visible;  	tc.SetValue (Grid.RowProperty' 0);  	tc.SetValue (Grid.ColumnProperty' 1);  }  
Magic Number,PhoneLogic.Core.Areas.Recruiters,MyJobsView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Recruiters\MyJobs.xaml.cs,ResizeGrid,The following statement contains a magic number: if (BrowserInfoSvc.ClientWidth >= UserInterfaceTimings.ResizeBoundryWidth) {  	DGrid.Columns [3].Visibility = Visibility.Visible;  	DGrid.Columns [4].Visibility = Visibility.Visible;  	DGrid.Columns [5].Visibility = Visibility.Visible;  	DGrid.Columns [6].Visibility = Visibility.Visible;  	DGrid.Columns [7].Visibility = Visibility.Visible;  	DGrid.Columns [8].Visibility = Visibility.Visible;  	DGrid.Columns [9].Visibility = Visibility.Visible;  	DGrid.Columns [10].Visibility = Visibility.Visible;  	DGrid.Columns [11].Visibility = Visibility.Visible;  	DGrid.Columns [12].Visibility = Visibility.Visible;  	tc.SetValue (Grid.RowProperty' 0);  	tc.SetValue (Grid.ColumnProperty' 1);  }  
Magic Number,PhoneLogic.Core.Areas.Recruiters,MyJobsView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Recruiters\MyJobs.xaml.cs,ResizeGrid,The following statement contains a magic number: if (BrowserInfoSvc.ClientWidth >= UserInterfaceTimings.ResizeBoundryWidth) {  	DGrid.Columns [3].Visibility = Visibility.Visible;  	DGrid.Columns [4].Visibility = Visibility.Visible;  	DGrid.Columns [5].Visibility = Visibility.Visible;  	DGrid.Columns [6].Visibility = Visibility.Visible;  	DGrid.Columns [7].Visibility = Visibility.Visible;  	DGrid.Columns [8].Visibility = Visibility.Visible;  	DGrid.Columns [9].Visibility = Visibility.Visible;  	DGrid.Columns [10].Visibility = Visibility.Visible;  	DGrid.Columns [11].Visibility = Visibility.Visible;  	DGrid.Columns [12].Visibility = Visibility.Visible;  	tc.SetValue (Grid.RowProperty' 0);  	tc.SetValue (Grid.ColumnProperty' 1);  }  
Magic Number,PhoneLogic.Core.Areas.Recruiters,MyJobsView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Recruiters\MyJobs.xaml.cs,ResizeGrid,The following statement contains a magic number: if (BrowserInfoSvc.ClientWidth >= UserInterfaceTimings.ResizeBoundryWidth) {  	DGrid.Columns [3].Visibility = Visibility.Visible;  	DGrid.Columns [4].Visibility = Visibility.Visible;  	DGrid.Columns [5].Visibility = Visibility.Visible;  	DGrid.Columns [6].Visibility = Visibility.Visible;  	DGrid.Columns [7].Visibility = Visibility.Visible;  	DGrid.Columns [8].Visibility = Visibility.Visible;  	DGrid.Columns [9].Visibility = Visibility.Visible;  	DGrid.Columns [10].Visibility = Visibility.Visible;  	DGrid.Columns [11].Visibility = Visibility.Visible;  	DGrid.Columns [12].Visibility = Visibility.Visible;  	tc.SetValue (Grid.RowProperty' 0);  	tc.SetValue (Grid.ColumnProperty' 1);  }  
Magic Number,PhoneLogic.Core.Areas.Recruiters,MyJobsView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Recruiters\MyJobs.xaml.cs,ResizeGrid,The following statement contains a magic number: if (BrowserInfoSvc.ClientWidth >= UserInterfaceTimings.ResizeBoundryWidth) {  	DGrid.Columns [3].Visibility = Visibility.Visible;  	DGrid.Columns [4].Visibility = Visibility.Visible;  	DGrid.Columns [5].Visibility = Visibility.Visible;  	DGrid.Columns [6].Visibility = Visibility.Visible;  	DGrid.Columns [7].Visibility = Visibility.Visible;  	DGrid.Columns [8].Visibility = Visibility.Visible;  	DGrid.Columns [9].Visibility = Visibility.Visible;  	DGrid.Columns [10].Visibility = Visibility.Visible;  	DGrid.Columns [11].Visibility = Visibility.Visible;  	DGrid.Columns [12].Visibility = Visibility.Visible;  	tc.SetValue (Grid.RowProperty' 0);  	tc.SetValue (Grid.ColumnProperty' 1);  }  
Magic Number,PhoneLogic.Core.Areas.Recruiters,MyJobsView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Recruiters\MyJobs.xaml.cs,ResizeGrid,The following statement contains a magic number: if (BrowserInfoSvc.ClientWidth >= UserInterfaceTimings.ResizeBoundryWidth) {  	DGrid.Columns [3].Visibility = Visibility.Visible;  	DGrid.Columns [4].Visibility = Visibility.Visible;  	DGrid.Columns [5].Visibility = Visibility.Visible;  	DGrid.Columns [6].Visibility = Visibility.Visible;  	DGrid.Columns [7].Visibility = Visibility.Visible;  	DGrid.Columns [8].Visibility = Visibility.Visible;  	DGrid.Columns [9].Visibility = Visibility.Visible;  	DGrid.Columns [10].Visibility = Visibility.Visible;  	DGrid.Columns [11].Visibility = Visibility.Visible;  	DGrid.Columns [12].Visibility = Visibility.Visible;  	tc.SetValue (Grid.RowProperty' 0);  	tc.SetValue (Grid.ColumnProperty' 1);  }  
Magic Number,PhoneLogic.Core.Areas.Recruiters,MyJobsView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Recruiters\MyJobs.xaml.cs,ResizeGrid,The following statement contains a magic number: if (BrowserInfoSvc.ClientWidth >= UserInterfaceTimings.ResizeBoundryWidth) {  	DGrid.Columns [3].Visibility = Visibility.Visible;  	DGrid.Columns [4].Visibility = Visibility.Visible;  	DGrid.Columns [5].Visibility = Visibility.Visible;  	DGrid.Columns [6].Visibility = Visibility.Visible;  	DGrid.Columns [7].Visibility = Visibility.Visible;  	DGrid.Columns [8].Visibility = Visibility.Visible;  	DGrid.Columns [9].Visibility = Visibility.Visible;  	DGrid.Columns [10].Visibility = Visibility.Visible;  	DGrid.Columns [11].Visibility = Visibility.Visible;  	DGrid.Columns [12].Visibility = Visibility.Visible;  	tc.SetValue (Grid.RowProperty' 0);  	tc.SetValue (Grid.ColumnProperty' 1);  }  
Magic Number,PhoneLogic.Core.Areas.Recruiters,MyJobsView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Recruiters\MyJobs.xaml.cs,ResizeGrid,The following statement contains a magic number: if (BrowserInfoSvc.ClientWidth >= UserInterfaceTimings.ResizeBoundryWidth) {  	DGrid.Columns [3].Visibility = Visibility.Visible;  	DGrid.Columns [4].Visibility = Visibility.Visible;  	DGrid.Columns [5].Visibility = Visibility.Visible;  	DGrid.Columns [6].Visibility = Visibility.Visible;  	DGrid.Columns [7].Visibility = Visibility.Visible;  	DGrid.Columns [8].Visibility = Visibility.Visible;  	DGrid.Columns [9].Visibility = Visibility.Visible;  	DGrid.Columns [10].Visibility = Visibility.Visible;  	DGrid.Columns [11].Visibility = Visibility.Visible;  	DGrid.Columns [12].Visibility = Visibility.Visible;  	tc.SetValue (Grid.RowProperty' 0);  	tc.SetValue (Grid.ColumnProperty' 1);  }  
Magic Number,PhoneLogic.Core.Areas.Recruiters,MyJobsView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Recruiters\MyJobs.xaml.cs,ResizeGrid,The following statement contains a magic number: if (BrowserInfoSvc.ClientWidth >= UserInterfaceTimings.ResizeBoundryWidth) {  	DGrid.Columns [3].Visibility = Visibility.Visible;  	DGrid.Columns [4].Visibility = Visibility.Visible;  	DGrid.Columns [5].Visibility = Visibility.Visible;  	DGrid.Columns [6].Visibility = Visibility.Visible;  	DGrid.Columns [7].Visibility = Visibility.Visible;  	DGrid.Columns [8].Visibility = Visibility.Visible;  	DGrid.Columns [9].Visibility = Visibility.Visible;  	DGrid.Columns [10].Visibility = Visibility.Visible;  	DGrid.Columns [11].Visibility = Visibility.Visible;  	DGrid.Columns [12].Visibility = Visibility.Visible;  	tc.SetValue (Grid.RowProperty' 0);  	tc.SetValue (Grid.ColumnProperty' 1);  }  
Magic Number,PhoneLogic.Core.Areas.Recruiters,MyJobsView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Recruiters\MyJobs.xaml.cs,ResizeGrid,The following statement contains a magic number: DGrid.Columns [3].Visibility = Visibility.Visible;  
Magic Number,PhoneLogic.Core.Areas.Recruiters,MyJobsView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Recruiters\MyJobs.xaml.cs,ResizeGrid,The following statement contains a magic number: DGrid.Columns [4].Visibility = Visibility.Visible;  
Magic Number,PhoneLogic.Core.Areas.Recruiters,MyJobsView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Recruiters\MyJobs.xaml.cs,ResizeGrid,The following statement contains a magic number: DGrid.Columns [5].Visibility = Visibility.Visible;  
Magic Number,PhoneLogic.Core.Areas.Recruiters,MyJobsView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Recruiters\MyJobs.xaml.cs,ResizeGrid,The following statement contains a magic number: DGrid.Columns [6].Visibility = Visibility.Visible;  
Magic Number,PhoneLogic.Core.Areas.Recruiters,MyJobsView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Recruiters\MyJobs.xaml.cs,ResizeGrid,The following statement contains a magic number: DGrid.Columns [7].Visibility = Visibility.Visible;  
Magic Number,PhoneLogic.Core.Areas.Recruiters,MyJobsView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Recruiters\MyJobs.xaml.cs,ResizeGrid,The following statement contains a magic number: DGrid.Columns [8].Visibility = Visibility.Visible;  
Magic Number,PhoneLogic.Core.Areas.Recruiters,MyJobsView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Recruiters\MyJobs.xaml.cs,ResizeGrid,The following statement contains a magic number: DGrid.Columns [9].Visibility = Visibility.Visible;  
Magic Number,PhoneLogic.Core.Areas.Recruiters,MyJobsView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Recruiters\MyJobs.xaml.cs,ResizeGrid,The following statement contains a magic number: DGrid.Columns [10].Visibility = Visibility.Visible;  
Magic Number,PhoneLogic.Core.Areas.Recruiters,MyJobsView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Recruiters\MyJobs.xaml.cs,ResizeGrid,The following statement contains a magic number: DGrid.Columns [11].Visibility = Visibility.Visible;  
Magic Number,PhoneLogic.Core.Areas.Recruiters,MyJobsView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Recruiters\MyJobs.xaml.cs,ResizeGrid,The following statement contains a magic number: DGrid.Columns [12].Visibility = Visibility.Visible;  
Magic Number,PhoneLogic.Core.Areas.Recruiters,LyncSearchView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\Recruiters\LyncSearch.xaml.cs,tbSearchString_KeyUp,The following statement contains a magic number: if (tbSearchString.Text.Length > 2) {  	_vm.SearchForContacts (tbSearchString.Text);  }  
Magic Number,PhoneLogic.Core.Areas.ReportCriteria,AutoRefreshView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\ReportCriteria\AutoRefreshView.xaml.cs,chkAutoRefresh_Checked,The following statement contains a magic number: StartAutoRefresh (60);  
Magic Number,PhoneLogic.Core.Areas.ReportCriteria,GlobalReportCriteriaView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\ReportCriteria\GlobalReportCriteriaView.xaml.cs,chkAutoRefresh_Checked,The following statement contains a magic number: StartAutoRefresh (60);  
Magic Number,PhoneLogic.Core.Areas.ReportCriteria,PhoneroomsViewModel,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\ReportCriteria\PhoneroomsViewModel.cs,Setup,The following statement contains a magic number: StartAutoRefresh (5);  
Magic Number,PhoneLogic.Core.Areas.ReportCriteria,PhoneroomsViewModel,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\ReportCriteria\PhoneroomsViewModel.cs,GetAllPhoneroomRecruiters,The following statement contains a magic number: sips = await Task.Factory.StartNew (() =>  {  	if (!String.IsNullOrEmpty (SelectedPhoneRoomName) && SelectedPhoneRoomName != PhoneRoomSvc.GetDefault ().Name) {  		sips = (from x in _phoneroomRecruiterJobs  		where x.PhoneRoom == SelectedPhoneRoomName  		where x.sip.Length > 4  		group x by new {  			x.sip'  			x.EmailAddress'  			x.DisplayName'  			x.Description  		} into grp  		select new Recruiter () {  			DisplayName = grp.Key.DisplayName.Length > 4 ? grp.Key.DisplayName.Substring (0' grp.Key.DisplayName.IndexOf (' ')) + " " + grp.Key.DisplayName.Substring (grp.Key.DisplayName.IndexOf (' ') + 1' 1) : grp.Key.DisplayName'  			EmailAddress = grp.Key.EmailAddress'  			Description = grp.Key.Description  		}).OrderBy (c => c.DisplayName).ToList ();  	}  	else {  		sips = (from x in _phoneroomRecruiterJobs  		group x by new {  			x.sip'  			x.EmailAddress'  			x.DisplayName'  			x.Description  		} into grp  		select new Recruiter () {  			DisplayName = grp.Key.DisplayName.Length > 4 ? grp.Key.DisplayName.Substring (0' grp.Key.DisplayName.IndexOf (' ')) + " " + grp.Key.DisplayName.Substring (grp.Key.DisplayName.IndexOf (' ') + 1' 1) : grp.Key.DisplayName'  			EmailAddress = grp.Key.EmailAddress'  			Description = grp.Key.Description  		}).OrderBy (c => c.DisplayName).ToList ();  	}  	return sips;  });  
Magic Number,PhoneLogic.Core.Areas.ReportCriteria,PhoneroomsViewModel,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\ReportCriteria\PhoneroomsViewModel.cs,GetAllPhoneroomRecruiters,The following statement contains a magic number: sips = await Task.Factory.StartNew (() =>  {  	if (!String.IsNullOrEmpty (SelectedPhoneRoomName) && SelectedPhoneRoomName != PhoneRoomSvc.GetDefault ().Name) {  		sips = (from x in _phoneroomRecruiterJobs  		where x.PhoneRoom == SelectedPhoneRoomName  		where x.sip.Length > 4  		group x by new {  			x.sip'  			x.EmailAddress'  			x.DisplayName'  			x.Description  		} into grp  		select new Recruiter () {  			DisplayName = grp.Key.DisplayName.Length > 4 ? grp.Key.DisplayName.Substring (0' grp.Key.DisplayName.IndexOf (' ')) + " " + grp.Key.DisplayName.Substring (grp.Key.DisplayName.IndexOf (' ') + 1' 1) : grp.Key.DisplayName'  			EmailAddress = grp.Key.EmailAddress'  			Description = grp.Key.Description  		}).OrderBy (c => c.DisplayName).ToList ();  	}  	else {  		sips = (from x in _phoneroomRecruiterJobs  		group x by new {  			x.sip'  			x.EmailAddress'  			x.DisplayName'  			x.Description  		} into grp  		select new Recruiter () {  			DisplayName = grp.Key.DisplayName.Length > 4 ? grp.Key.DisplayName.Substring (0' grp.Key.DisplayName.IndexOf (' ')) + " " + grp.Key.DisplayName.Substring (grp.Key.DisplayName.IndexOf (' ') + 1' 1) : grp.Key.DisplayName'  			EmailAddress = grp.Key.EmailAddress'  			Description = grp.Key.Description  		}).OrderBy (c => c.DisplayName).ToList ();  	}  	return sips;  });  
Magic Number,PhoneLogic.Core.Areas.ReportCriteria,PhoneroomsViewModel,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\ReportCriteria\PhoneroomsViewModel.cs,GetAllPhoneroomRecruiters,The following statement contains a magic number: sips = await Task.Factory.StartNew (() =>  {  	if (!String.IsNullOrEmpty (SelectedPhoneRoomName) && SelectedPhoneRoomName != PhoneRoomSvc.GetDefault ().Name) {  		sips = (from x in _phoneroomRecruiterJobs  		where x.PhoneRoom == SelectedPhoneRoomName  		where x.sip.Length > 4  		group x by new {  			x.sip'  			x.EmailAddress'  			x.DisplayName'  			x.Description  		} into grp  		select new Recruiter () {  			DisplayName = grp.Key.DisplayName.Length > 4 ? grp.Key.DisplayName.Substring (0' grp.Key.DisplayName.IndexOf (' ')) + " " + grp.Key.DisplayName.Substring (grp.Key.DisplayName.IndexOf (' ') + 1' 1) : grp.Key.DisplayName'  			EmailAddress = grp.Key.EmailAddress'  			Description = grp.Key.Description  		}).OrderBy (c => c.DisplayName).ToList ();  	}  	else {  		sips = (from x in _phoneroomRecruiterJobs  		group x by new {  			x.sip'  			x.EmailAddress'  			x.DisplayName'  			x.Description  		} into grp  		select new Recruiter () {  			DisplayName = grp.Key.DisplayName.Length > 4 ? grp.Key.DisplayName.Substring (0' grp.Key.DisplayName.IndexOf (' ')) + " " + grp.Key.DisplayName.Substring (grp.Key.DisplayName.IndexOf (' ') + 1' 1) : grp.Key.DisplayName'  			EmailAddress = grp.Key.EmailAddress'  			Description = grp.Key.Description  		}).OrderBy (c => c.DisplayName).ToList ();  	}  	return sips;  });  
Magic Number,PhoneLogic.Core.Areas.ReportCriteria,PhoneroomsViewModel,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\ReportCriteria\PhoneroomsViewModel.cs,GetAllPhoneroomRecruiters,The following statement contains a magic number: if (!String.IsNullOrEmpty (SelectedPhoneRoomName) && SelectedPhoneRoomName != PhoneRoomSvc.GetDefault ().Name) {  	sips = (from x in _phoneroomRecruiterJobs  	where x.PhoneRoom == SelectedPhoneRoomName  	where x.sip.Length > 4  	group x by new {  		x.sip'  		x.EmailAddress'  		x.DisplayName'  		x.Description  	} into grp  	select new Recruiter () {  		DisplayName = grp.Key.DisplayName.Length > 4 ? grp.Key.DisplayName.Substring (0' grp.Key.DisplayName.IndexOf (' ')) + " " + grp.Key.DisplayName.Substring (grp.Key.DisplayName.IndexOf (' ') + 1' 1) : grp.Key.DisplayName'  		EmailAddress = grp.Key.EmailAddress'  		Description = grp.Key.Description  	}).OrderBy (c => c.DisplayName).ToList ();  }  else {  	sips = (from x in _phoneroomRecruiterJobs  	group x by new {  		x.sip'  		x.EmailAddress'  		x.DisplayName'  		x.Description  	} into grp  	select new Recruiter () {  		DisplayName = grp.Key.DisplayName.Length > 4 ? grp.Key.DisplayName.Substring (0' grp.Key.DisplayName.IndexOf (' ')) + " " + grp.Key.DisplayName.Substring (grp.Key.DisplayName.IndexOf (' ') + 1' 1) : grp.Key.DisplayName'  		EmailAddress = grp.Key.EmailAddress'  		Description = grp.Key.Description  	}).OrderBy (c => c.DisplayName).ToList ();  }  
Magic Number,PhoneLogic.Core.Areas.ReportCriteria,PhoneroomsViewModel,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\ReportCriteria\PhoneroomsViewModel.cs,GetAllPhoneroomRecruiters,The following statement contains a magic number: if (!String.IsNullOrEmpty (SelectedPhoneRoomName) && SelectedPhoneRoomName != PhoneRoomSvc.GetDefault ().Name) {  	sips = (from x in _phoneroomRecruiterJobs  	where x.PhoneRoom == SelectedPhoneRoomName  	where x.sip.Length > 4  	group x by new {  		x.sip'  		x.EmailAddress'  		x.DisplayName'  		x.Description  	} into grp  	select new Recruiter () {  		DisplayName = grp.Key.DisplayName.Length > 4 ? grp.Key.DisplayName.Substring (0' grp.Key.DisplayName.IndexOf (' ')) + " " + grp.Key.DisplayName.Substring (grp.Key.DisplayName.IndexOf (' ') + 1' 1) : grp.Key.DisplayName'  		EmailAddress = grp.Key.EmailAddress'  		Description = grp.Key.Description  	}).OrderBy (c => c.DisplayName).ToList ();  }  else {  	sips = (from x in _phoneroomRecruiterJobs  	group x by new {  		x.sip'  		x.EmailAddress'  		x.DisplayName'  		x.Description  	} into grp  	select new Recruiter () {  		DisplayName = grp.Key.DisplayName.Length > 4 ? grp.Key.DisplayName.Substring (0' grp.Key.DisplayName.IndexOf (' ')) + " " + grp.Key.DisplayName.Substring (grp.Key.DisplayName.IndexOf (' ') + 1' 1) : grp.Key.DisplayName'  		EmailAddress = grp.Key.EmailAddress'  		Description = grp.Key.Description  	}).OrderBy (c => c.DisplayName).ToList ();  }  
Magic Number,PhoneLogic.Core.Areas.ReportCriteria,PhoneroomsViewModel,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\ReportCriteria\PhoneroomsViewModel.cs,GetAllPhoneroomRecruiters,The following statement contains a magic number: if (!String.IsNullOrEmpty (SelectedPhoneRoomName) && SelectedPhoneRoomName != PhoneRoomSvc.GetDefault ().Name) {  	sips = (from x in _phoneroomRecruiterJobs  	where x.PhoneRoom == SelectedPhoneRoomName  	where x.sip.Length > 4  	group x by new {  		x.sip'  		x.EmailAddress'  		x.DisplayName'  		x.Description  	} into grp  	select new Recruiter () {  		DisplayName = grp.Key.DisplayName.Length > 4 ? grp.Key.DisplayName.Substring (0' grp.Key.DisplayName.IndexOf (' ')) + " " + grp.Key.DisplayName.Substring (grp.Key.DisplayName.IndexOf (' ') + 1' 1) : grp.Key.DisplayName'  		EmailAddress = grp.Key.EmailAddress'  		Description = grp.Key.Description  	}).OrderBy (c => c.DisplayName).ToList ();  }  else {  	sips = (from x in _phoneroomRecruiterJobs  	group x by new {  		x.sip'  		x.EmailAddress'  		x.DisplayName'  		x.Description  	} into grp  	select new Recruiter () {  		DisplayName = grp.Key.DisplayName.Length > 4 ? grp.Key.DisplayName.Substring (0' grp.Key.DisplayName.IndexOf (' ')) + " " + grp.Key.DisplayName.Substring (grp.Key.DisplayName.IndexOf (' ') + 1' 1) : grp.Key.DisplayName'  		EmailAddress = grp.Key.EmailAddress'  		Description = grp.Key.Description  	}).OrderBy (c => c.DisplayName).ToList ();  }  
Magic Number,PhoneLogic.Core.Areas.ReportCriteria,PhoneroomsViewModel,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\ReportCriteria\PhoneroomsViewModel.cs,GetAllPhoneroomRecruiters,The following statement contains a magic number: sips = (from x in _phoneroomRecruiterJobs  where x.PhoneRoom == SelectedPhoneRoomName  where x.sip.Length > 4  group x by new {  	x.sip'  	x.EmailAddress'  	x.DisplayName'  	x.Description  } into grp  select new Recruiter () {  	DisplayName = grp.Key.DisplayName.Length > 4 ? grp.Key.DisplayName.Substring (0' grp.Key.DisplayName.IndexOf (' ')) + " " + grp.Key.DisplayName.Substring (grp.Key.DisplayName.IndexOf (' ') + 1' 1) : grp.Key.DisplayName'  	EmailAddress = grp.Key.EmailAddress'  	Description = grp.Key.Description  }).OrderBy (c => c.DisplayName).ToList ();  
Magic Number,PhoneLogic.Core.Areas.ReportCriteria,PhoneroomsViewModel,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\ReportCriteria\PhoneroomsViewModel.cs,GetAllPhoneroomRecruiters,The following statement contains a magic number: sips = (from x in _phoneroomRecruiterJobs  where x.PhoneRoom == SelectedPhoneRoomName  where x.sip.Length > 4  group x by new {  	x.sip'  	x.EmailAddress'  	x.DisplayName'  	x.Description  } into grp  select new Recruiter () {  	DisplayName = grp.Key.DisplayName.Length > 4 ? grp.Key.DisplayName.Substring (0' grp.Key.DisplayName.IndexOf (' ')) + " " + grp.Key.DisplayName.Substring (grp.Key.DisplayName.IndexOf (' ') + 1' 1) : grp.Key.DisplayName'  	EmailAddress = grp.Key.EmailAddress'  	Description = grp.Key.Description  }).OrderBy (c => c.DisplayName).ToList ();  
Magic Number,PhoneLogic.Core.Areas.ReportCriteria,PhoneroomsViewModel,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\ReportCriteria\PhoneroomsViewModel.cs,GetAllPhoneroomRecruiters,The following statement contains a magic number: sips = (from x in _phoneroomRecruiterJobs  group x by new {  	x.sip'  	x.EmailAddress'  	x.DisplayName'  	x.Description  } into grp  select new Recruiter () {  	DisplayName = grp.Key.DisplayName.Length > 4 ? grp.Key.DisplayName.Substring (0' grp.Key.DisplayName.IndexOf (' ')) + " " + grp.Key.DisplayName.Substring (grp.Key.DisplayName.IndexOf (' ') + 1' 1) : grp.Key.DisplayName'  	EmailAddress = grp.Key.EmailAddress'  	Description = grp.Key.Description  }).OrderBy (c => c.DisplayName).ToList ();  
Magic Number,PhoneLogic.Core.Areas.ReportCriteria,ReportDateRangeView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\ReportCriteria\ReportDateRangeView.xaml.cs,chkAutoEndTime_Checked,The following statement contains a magic number: StartAutoRefresh (60);  
Magic Number,PhoneLogic.Core.Helpers,TimespanExtentions,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Helpers\TimespanExtentions.cs,ToReadableAgeString,The following statement contains a magic number: return string.Format ("{0:0}"' span.Days / 365.25);  
Magic Number,PhoneLogic.Core.Helpers,TimespanExtentions,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Helpers\TimespanExtentions.cs,ToReadableString,The following statement contains a magic number: if (formatted.EndsWith ("' "))  	formatted = formatted.Substring (0' formatted.Length - 2);  
Magic Number,PhoneLogic.Core.Helpers,TimespanExtentions,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Helpers\TimespanExtentions.cs,ToReadableString,The following statement contains a magic number: formatted = formatted.Substring (0' formatted.Length - 2);  
Magic Number,PhoneLogic.Core.Services,ColorToBrushSvc,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Services\ColorToBrushSvc.cs,GetForeground,The following statement contains a magic number: if (cnt > 1 && cnt < 5)  	return medium;  
Magic Number,PhoneLogic.Core.Services,ColorToBrushSvc,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Services\ColorToBrushSvc.cs,GetForeground,The following statement contains a magic number: if (cnt > 5)  	return high;  
Magic Number,PhoneLogic.Core.Services,ColorToBrushSvc,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Services\ColorToBrushSvc.cs,GetBackground,The following statement contains a magic number: if (cnt > 1 && cnt < 5)  	return medium;  
Magic Number,PhoneLogic.Core.Services,ColorToBrushSvc,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Services\ColorToBrushSvc.cs,GetBackground,The following statement contains a magic number: if (cnt > 5)  	return high;  
Magic Number,PhoneLogic.Model,ColorMapping,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Services\ColorMapping.cs,GetForeground,The following statement contains a magic number: if (cnt > 1 && cnt < 5)  	return medium;  
Magic Number,PhoneLogic.Model,ColorMapping,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Services\ColorMapping.cs,GetForeground,The following statement contains a magic number: if (cnt > 5)  	return high;  
Magic Number,PhoneLogic.Model,ColorMapping,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Services\ColorMapping.cs,GetBackground,The following statement contains a magic number: if (cnt > 1 && cnt < 5)  	return medium;  
Magic Number,PhoneLogic.Model,ColorMapping,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Services\ColorMapping.cs,GetBackground,The following statement contains a magic number: if (cnt >= 5)  	return high;  
Magic Number,PhoneLogic.Core.ViewModels,QuotableQuoteViewModel,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\ViewModels\QuotableQuoteViewModel.cs,QuotableQuoteViewModel,The following statement contains a magic number: StartAutoRefresh (36000);  
Magic Number,PhoneLogic.Core.Views,AudioPlaybackView,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Views\Utility\AudioPlaybackView.xaml.cs,AudioPlaybackView,The following statement contains a magic number: _timer.Interval = TimeSpan.FromSeconds (10);  
Magic Number,PhoneLogic.Core.Areas.PhoneRooms,CallsInQueueViewModel,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Areas\PhoneRooms\CallsInQueueViewModel.cs,testGetMyQueuedCalls,The following statement contains a magic number: CallsInQueue.Add (new QueueSummary {  	InQueue = 100'  	JobNumber = "9999-9999"  });  
Magic Number,PhoneLogic.Core.ServicesTest,LyncSvc,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\ServicesTest\LyncSvc.Mock.cs,GetMyQueuedCalls,The following statement contains a magic number: lqs.Add (new QueueSummary {  	InQueue = 100'  	JobNumber = "9999-9999"  });  
Missing Default,PhoneLogic.Core.Helpers,DataGridExtensions,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Helpers\DataGridExtensions.cs,BuildStringOfRow,The following switch statement is missing a default case: switch (strFormat) {  case "XML":  	strBuilder.AppendLine ("<Row>");  	strBuilder.AppendLine (String.Join ("\r\n"' lstFields.ToArray ()));  	strBuilder.AppendLine ("</Row>");  	break;  case "CSV":  	strBuilder.AppendLine (String.Join ("'"' lstFields.ToArray ()));  	break;  }  
Missing Default,PhoneLogic.Core.Helpers,DataGridExtensions,C:\repos\FrankMedvedik_phoneroom\PhoneLogic.Core\Helpers\DataGridExtensions.cs,FormatField,The following switch statement is missing a default case: switch (format) {  case "XML":  	return String.Format (isNum ? "<Cell><Data ss:Type=\"Number\">{0}</Data></Cell>" : "<Cell><Data ss:Type=\"String\">{0}</Data></Cell>"' data);  case "CSV":  	return String.Format ("\"{0}\""' data.Replace ("\""' "\"\"\"").Replace ("\n"' "").Replace ("\r"' ""));  }  
