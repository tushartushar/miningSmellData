Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,RedditSharp,Reddit,C:\repos\SirCmpwn_RedditSharp\RedditSharp\Reddit.cs,ComposePrivateMessage,The method has 6 parameters. Parameters: subject' body' to' fromSubReddit' captchaId' captchaAnswer
Long Parameter List,RedditSharp,Reddit,C:\repos\SirCmpwn_RedditSharp\RedditSharp\Reddit.cs,SearchByTimestamp,The method has 6 parameters. Parameters: from' to' query' subreddit' sortE' timeE
Long Parameter List,RedditSharp,SubredditImage,C:\repos\SirCmpwn_RedditSharp\RedditSharp\SubredditImage.cs,SubredditImage,The method has 5 parameters. Parameters: reddit' subredditStyle' cssLink' name' webAgent
Long Parameter List,RedditSharp,SubredditImage,C:\repos\SirCmpwn_RedditSharp\RedditSharp\SubredditImage.cs,SubredditImage,The method has 6 parameters. Parameters: reddit' subreddit' cssLink' name' url' webAgent
Long Parameter List,RedditSharp.Things,Subreddit,C:\repos\SirCmpwn_RedditSharp\RedditSharp\Things\Subreddit.cs,SubmitPost,The method has 5 parameters. Parameters: title' url' captchaId' captchaAnswer' resubmit
Long Statement,RedditSharp,AuthProvider,C:\repos\SirCmpwn_RedditSharp\RedditSharp\AuthProvider.cs,GetAuthUrl,The length of the statement  "            return String.Format("https://ssl.reddit.com/api/v1/authorize?client_id={0}&response_type=code&state={1}&redirect_uri={2}&duration={3}&scope={4}"' _clientId' state' _redirectUri' permanent ? "permanent" : "temporary"' scope.ToString().Replace(" "'"")); " is 252.
Long Statement,RedditSharp,AuthProvider,C:\repos\SirCmpwn_RedditSharp\RedditSharp\AuthProvider.cs,GetOAuthToken,The length of the statement  "            request.Headers["Authorization"] = "Basic " + Convert.ToBase64String(Encoding.Default.GetBytes(_clientId + ":" + _clientSecret)); " is 129.
Long Statement,RedditSharp,AuthProvider,C:\repos\SirCmpwn_RedditSharp\RedditSharp\AuthProvider.cs,GetOAuthToken,The length of the statement  "            request.Headers["Authorization"] = "Basic " + Convert.ToBase64String(Encoding.Default.GetBytes(_clientId + ":" + _clientSecret)); " is 129.
Long Statement,RedditSharp,AuthProvider,C:\repos\SirCmpwn_RedditSharp\RedditSharp\AuthProvider.cs,RevokeToken,The length of the statement  "            request.Headers["Authorization"] = "Basic " + Convert.ToBase64String(Encoding.Default.GetBytes(_clientId + ":" + _clientSecret)); " is 129.
Long Statement,RedditSharp,Reddit,C:\repos\SirCmpwn_RedditSharp\RedditSharp\Reddit.cs,SearchByTimestamp,The length of the statement  "            string searchQuery = "(and+timestamp:" + fromUnix + ".." + toUnix + "+'" + query + "'+" + "subreddit:'" + subreddit + "')&syntax=cloudsearch"; " is 142.
Long Statement,RedditSharp,WebAgent,C:\repos\SirCmpwn_RedditSharp\RedditSharp\WebAgent.cs,ExecuteRequest,The length of the statement  "                json = JToken.Parse("{'method':'" + response.Method + "'''uri':'" + response.ResponseUri.AbsoluteUri + "'''status':'" + response.StatusCode.ToString() + "'}"); " is 159.
Long Statement,RedditSharp,WebAgent,C:\repos\SirCmpwn_RedditSharp\RedditSharp\WebAgent.cs,EnforceRateLimit,The length of the statement  "                    if (_requestsThisBurst == 0 || (DateTime.UtcNow - _burstStart).TotalSeconds >= 10) //this is first request OR the burst expired " is 127.
Long Statement,RedditSharp,WebAgent,C:\repos\SirCmpwn_RedditSharp\RedditSharp\WebAgent.cs,EnforceRateLimit,The length of the statement  "                    if (_requestsThisBurst == 0 || (DateTime.UtcNow - _burstStart).TotalSeconds >= 60) //this is first request OR the burst expired " is 127.
Long Statement,RedditSharp,WebAgent,C:\repos\SirCmpwn_RedditSharp\RedditSharp\WebAgent.cs,WritePostBody,The length of the statement  "                var attr = property.GetCustomAttributes(typeof(RedditAPINameAttribute)' false).FirstOrDefault() as RedditAPINameAttribute; " is 122.
Long Statement,RedditSharp,Wiki,C:\repos\SirCmpwn_RedditSharp\RedditSharp\Wiki.cs,SetPageEditor,The length of the statement  "            var request = WebAgent.CreatePost(string.Format(allow ? WikiPageAllowEditorAddUrl : WikiPageAllowEditorDelUrl' Subreddit.Name)); " is 128.
Long Statement,RedditSharp,ToolBoxUserNotes,C:\repos\SirCmpwn_RedditSharp\RedditSharp\ToolBoxUserNotes.cs,GetUserNotes,The length of the statement  "                throw new ToolBoxUserNotesException("An error occured while processing Usernotes wiki. See inner exception for details"' e); " is 124.
Long Statement,RedditSharp.Things,ModAction,C:\repos\SirCmpwn_RedditSharp\RedditSharp\Things\ModAction.cs,InitAsync,The length of the statement  "            await Task.Factory.StartNew(() => JsonConvert.PopulateObject(post["data"].ToString()' this' reddit.JsonSerializerSettings)); " is 124.
Long Statement,RedditSharp.Things,AuthenticatedUser,C:\repos\SirCmpwn_RedditSharp\RedditSharp\Things\AuthenticatedUser.cs,InitAsync,The length of the statement  "            await Task.Factory.StartNew(() => JsonConvert.PopulateObject(json["name"] == null ? json["data"].ToString() : json.ToString()' this' " is 132.
Long Statement,RedditSharp.Things,CreatedThing,C:\repos\SirCmpwn_RedditSharp\RedditSharp\Things\CreatedThing.cs,InitAsync,The length of the statement  "            await Task.Factory.StartNew(() => JsonConvert.PopulateObject(json["data"].ToString()' this' reddit.JsonSerializerSettings)); " is 124.
Long Statement,RedditSharp.Things,Post,C:\repos\SirCmpwn_RedditSharp\RedditSharp\Things\Post.cs,InitAsync,The length of the statement  "            await Task.Factory.StartNew(() => JsonConvert.PopulateObject(post["data"].ToString()' this' reddit.JsonSerializerSettings)); " is 124.
Long Statement,RedditSharp.Things,PrivateMessage,C:\repos\SirCmpwn_RedditSharp\RedditSharp\Things\PrivateMessage.cs,InitAsync,The length of the statement  "            await Task.Factory.StartNew(() => JsonConvert.PopulateObject(json["data"].ToString()' this' reddit.JsonSerializerSettings)); " is 124.
Long Statement,RedditSharp.Things,RedditUser,C:\repos\SirCmpwn_RedditSharp\RedditSharp\Things\RedditUser.cs,InitAsync,The length of the statement  "            await Task.Factory.StartNew(() => JsonConvert.PopulateObject(json["name"] == null ? json["data"].ToString() : json.ToString()' this' " is 132.
Long Statement,RedditSharp.Things,RedditUser,C:\repos\SirCmpwn_RedditSharp\RedditSharp\Things\RedditUser.cs,GetOverview,The length of the statement  "            overviewUrl += string.Format("?sort={0}&limit={1}&t={2}"' Enum.GetName(typeof(Sort)' sorting)' limit' Enum.GetName(typeof(FromTime)' fromTime)); " is 144.
Long Statement,RedditSharp.Things,RedditUser,C:\repos\SirCmpwn_RedditSharp\RedditSharp\Things\RedditUser.cs,GetComments,The length of the statement  "            commentsUrl += string.Format("?sort={0}&limit={1}&t={2}"' Enum.GetName(typeof(Sort)' sorting)' limit' Enum.GetName(typeof(FromTime)' fromTime)); " is 144.
Long Statement,RedditSharp.Things,RedditUser,C:\repos\SirCmpwn_RedditSharp\RedditSharp\Things\RedditUser.cs,GetPosts,The length of the statement  "            linksUrl += string.Format("?sort={0}&limit={1}&t={2}"' Enum.GetName(typeof(Sort)' sorting)' limit' Enum.GetName(typeof(FromTime)' fromTime)); " is 141.
Long Statement,RedditSharp.Things,Subreddit,C:\repos\SirCmpwn_RedditSharp\RedditSharp\Things\Subreddit.cs,GetTop,The length of the statement  "            return new Listing<Post>(Reddit' string.Format(SubredditTopUrl' Name' Enum.GetName(typeof(FromTime)' timePeriod)).ToLower()' WebAgent); " is 135.
Long Statement,RedditSharp.Things,Subreddit,C:\repos\SirCmpwn_RedditSharp\RedditSharp\Things\Subreddit.cs,Search,The length of the statement  "            return new Listing<Post>(Reddit' string.Format(SearchUrlDate' Name' from.DateTimeToUnixTimestamp()' to.DateTimeToUnixTimestamp()' sort)' WebAgent); " is 147.
Long Statement,RedditSharp.Things,Subreddit,C:\repos\SirCmpwn_RedditSharp\RedditSharp\Things\Subreddit.cs,InitAsync,The length of the statement  "            await Task.Factory.StartNew(() => JsonConvert.PopulateObject(json["data"].ToString()' this' reddit.JsonSerializerSettings)); " is 124.
Long Statement,RedditSharp.Things,Subreddit,C:\repos\SirCmpwn_RedditSharp\RedditSharp\Things\Subreddit.cs,Submit,The length of the statement  "                throw new DuplicateLinkException(String.Format("Post failed when submitting.  The following link has already been submitted: {0}"' SubmitLinkUrl)); " is 147.
Long Statement,RedditSharp.Things,Subreddit,C:\repos\SirCmpwn_RedditSharp\RedditSharp\Things\Subreddit.cs,GetModerationLog,The length of the statement  "            return new Listing<ModAction>(Reddit' string.Format(ModLogUrl + "?type={1}"' Name' ModActionTypeConverter.GetRedditParamName(action))' WebAgent); " is 145.
Long Statement,RedditSharp.Things,Subreddit,C:\repos\SirCmpwn_RedditSharp\RedditSharp\Things\Subreddit.cs,GetModerationLog,The length of the statement  "            return new Listing<ModAction>(Reddit' string.Format(ModLogUrl + "?type={1}&mod={2}"' Name' ModActionTypeConverter.GetRedditParamName(action)' string.Join("'"' mods))' WebAgent); " is 177.
Long Statement,RedditSharp.Things,VotableThing,C:\repos\SirCmpwn_RedditSharp\RedditSharp\Things\VotableThing.cs,InitAsync,The length of the statement  "            await Task.Factory.StartNew(() => JsonConvert.PopulateObject(json["data"].ToString()' this' Reddit.JsonSerializerSettings)); " is 124.
Empty Catch Block,RedditSharp,WebAgent,C:\repos\SirCmpwn_RedditSharp\RedditSharp\WebAgent.cs,ExecuteRequest,The method has an empty catch block.
Magic Number,RedditSharp,MultipartFormBuilder,C:\repos\SirCmpwn_RedditSharp\RedditSharp\MultipartFormBuilder.cs,CreateRandomBoundary,The following statement contains a magic number: for (int i = 0; i < 10; i++)                  value += characters[random.Next(characters.Length)];
Magic Number,RedditSharp,Reddit,C:\repos\SirCmpwn_RedditSharp\RedditSharp\Reddit.cs,GetSubreddit,The following statement contains a magic number: if (name.StartsWith("r/"))                  name = name.Substring(2);
Magic Number,RedditSharp,Reddit,C:\repos\SirCmpwn_RedditSharp\RedditSharp\Reddit.cs,GetSubreddit,The following statement contains a magic number: if (name.StartsWith("/r/"))                  name = name.Substring(3);
Magic Number,RedditSharp,Reddit,C:\repos\SirCmpwn_RedditSharp\RedditSharp\Reddit.cs,GetSubredditAsync,The following statement contains a magic number: if (name.StartsWith("r/"))                  name = name.Substring(2);
Magic Number,RedditSharp,Reddit,C:\repos\SirCmpwn_RedditSharp\RedditSharp\Reddit.cs,GetSubredditAsync,The following statement contains a magic number: if (name.StartsWith("/r/"))                  name = name.Substring(3);
Magic Number,RedditSharp,Reddit,C:\repos\SirCmpwn_RedditSharp\RedditSharp\Reddit.cs,GetComment,The following statement contains a magic number: try              {                  if (linkName.StartsWith("t3_"))                      linkName = linkName.Substring(3);                  if (name.StartsWith("t1_"))                      name = name.Substring(3);                    var url = string.Format(GetCommentUrl' subreddit' linkName' name);                  return GetComment(new Uri(url));              }              catch (WebException)              {                  return null;              }
Magic Number,RedditSharp,Reddit,C:\repos\SirCmpwn_RedditSharp\RedditSharp\Reddit.cs,GetComment,The following statement contains a magic number: try              {                  if (linkName.StartsWith("t3_"))                      linkName = linkName.Substring(3);                  if (name.StartsWith("t1_"))                      name = name.Substring(3);                    var url = string.Format(GetCommentUrl' subreddit' linkName' name);                  return GetComment(new Uri(url));              }              catch (WebException)              {                  return null;              }
Magic Number,RedditSharp,Reddit,C:\repos\SirCmpwn_RedditSharp\RedditSharp\Reddit.cs,SearchByTimestamp,The following statement contains a magic number: var fromUnix = (from - new DateTime(1970' 1' 1' 0' 0' 0)).TotalSeconds;
Magic Number,RedditSharp,Reddit,C:\repos\SirCmpwn_RedditSharp\RedditSharp\Reddit.cs,SearchByTimestamp,The following statement contains a magic number: var toUnix = (to - new DateTime(1970' 1' 1' 0' 0' 0)).TotalSeconds;
Magic Number,RedditSharp,SubredditSettings,C:\repos\SirCmpwn_RedditSharp\RedditSharp\SubredditSettings.cs,SubredditSettings,The following statement contains a magic number: WikiEditKarma = 100;
Magic Number,RedditSharp,SubredditSettings,C:\repos\SirCmpwn_RedditSharp\RedditSharp\SubredditSettings.cs,SubredditSettings,The following statement contains a magic number: WikiEditAge = 10;
Magic Number,RedditSharp,UnixTimeStamp,C:\repos\SirCmpwn_RedditSharp\RedditSharp\UnixTimeStamp.cs,UnixTimeStampToDateTime,The following statement contains a magic number: var dtDateTime = new DateTime(1970' 1' 1' 0' 0' 0' 0' DateTimeKind.Utc);
Magic Number,RedditSharp,WebAgent,C:\repos\SirCmpwn_RedditSharp\RedditSharp\WebAgent.cs,EnforceRateLimit,The following statement contains a magic number: switch (RateLimit)              {                  case RateLimitMode.Pace:                      while ((DateTime.UtcNow - _lastRequest).TotalSeconds < 2)// Rate limiting                          Thread.Sleep(250);                      _lastRequest = DateTime.UtcNow;                      break;                  case RateLimitMode.SmallBurst:                      if (_requestsThisBurst == 0 || (DateTime.UtcNow - _burstStart).TotalSeconds >= 10) //this is first request OR the burst expired                      {                          _burstStart = DateTime.UtcNow;                          _requestsThisBurst = 0;                      }                      if (_requestsThisBurst >= 5) //limit has been reached                      {                          while ((DateTime.UtcNow - _burstStart).TotalSeconds < 10)                              Thread.Sleep(250);                          _burstStart = DateTime.UtcNow;                          _requestsThisBurst = 0;                      }                      _lastRequest = DateTime.UtcNow;                      _requestsThisBurst++;                      break;                  case RateLimitMode.Burst:                      if (_requestsThisBurst == 0 || (DateTime.UtcNow - _burstStart).TotalSeconds >= 60) //this is first request OR the burst expired                      {                          _burstStart = DateTime.UtcNow;                          _requestsThisBurst = 0;                      }                      if (_requestsThisBurst >= 30) //limit has been reached                      {                          while ((DateTime.UtcNow - _burstStart).TotalSeconds < 60)                              Thread.Sleep(250);                          _burstStart = DateTime.UtcNow;                          _requestsThisBurst = 0;                      }                      _lastRequest = DateTime.UtcNow;                      _requestsThisBurst++;                      break;              }
Magic Number,RedditSharp,WebAgent,C:\repos\SirCmpwn_RedditSharp\RedditSharp\WebAgent.cs,EnforceRateLimit,The following statement contains a magic number: switch (RateLimit)              {                  case RateLimitMode.Pace:                      while ((DateTime.UtcNow - _lastRequest).TotalSeconds < 2)// Rate limiting                          Thread.Sleep(250);                      _lastRequest = DateTime.UtcNow;                      break;                  case RateLimitMode.SmallBurst:                      if (_requestsThisBurst == 0 || (DateTime.UtcNow - _burstStart).TotalSeconds >= 10) //this is first request OR the burst expired                      {                          _burstStart = DateTime.UtcNow;                          _requestsThisBurst = 0;                      }                      if (_requestsThisBurst >= 5) //limit has been reached                      {                          while ((DateTime.UtcNow - _burstStart).TotalSeconds < 10)                              Thread.Sleep(250);                          _burstStart = DateTime.UtcNow;                          _requestsThisBurst = 0;                      }                      _lastRequest = DateTime.UtcNow;                      _requestsThisBurst++;                      break;                  case RateLimitMode.Burst:                      if (_requestsThisBurst == 0 || (DateTime.UtcNow - _burstStart).TotalSeconds >= 60) //this is first request OR the burst expired                      {                          _burstStart = DateTime.UtcNow;                          _requestsThisBurst = 0;                      }                      if (_requestsThisBurst >= 30) //limit has been reached                      {                          while ((DateTime.UtcNow - _burstStart).TotalSeconds < 60)                              Thread.Sleep(250);                          _burstStart = DateTime.UtcNow;                          _requestsThisBurst = 0;                      }                      _lastRequest = DateTime.UtcNow;                      _requestsThisBurst++;                      break;              }
Magic Number,RedditSharp,WebAgent,C:\repos\SirCmpwn_RedditSharp\RedditSharp\WebAgent.cs,EnforceRateLimit,The following statement contains a magic number: switch (RateLimit)              {                  case RateLimitMode.Pace:                      while ((DateTime.UtcNow - _lastRequest).TotalSeconds < 2)// Rate limiting                          Thread.Sleep(250);                      _lastRequest = DateTime.UtcNow;                      break;                  case RateLimitMode.SmallBurst:                      if (_requestsThisBurst == 0 || (DateTime.UtcNow - _burstStart).TotalSeconds >= 10) //this is first request OR the burst expired                      {                          _burstStart = DateTime.UtcNow;                          _requestsThisBurst = 0;                      }                      if (_requestsThisBurst >= 5) //limit has been reached                      {                          while ((DateTime.UtcNow - _burstStart).TotalSeconds < 10)                              Thread.Sleep(250);                          _burstStart = DateTime.UtcNow;                          _requestsThisBurst = 0;                      }                      _lastRequest = DateTime.UtcNow;                      _requestsThisBurst++;                      break;                  case RateLimitMode.Burst:                      if (_requestsThisBurst == 0 || (DateTime.UtcNow - _burstStart).TotalSeconds >= 60) //this is first request OR the burst expired                      {                          _burstStart = DateTime.UtcNow;                          _requestsThisBurst = 0;                      }                      if (_requestsThisBurst >= 30) //limit has been reached                      {                          while ((DateTime.UtcNow - _burstStart).TotalSeconds < 60)                              Thread.Sleep(250);                          _burstStart = DateTime.UtcNow;                          _requestsThisBurst = 0;                      }                      _lastRequest = DateTime.UtcNow;                      _requestsThisBurst++;                      break;              }
Magic Number,RedditSharp,WebAgent,C:\repos\SirCmpwn_RedditSharp\RedditSharp\WebAgent.cs,EnforceRateLimit,The following statement contains a magic number: switch (RateLimit)              {                  case RateLimitMode.Pace:                      while ((DateTime.UtcNow - _lastRequest).TotalSeconds < 2)// Rate limiting                          Thread.Sleep(250);                      _lastRequest = DateTime.UtcNow;                      break;                  case RateLimitMode.SmallBurst:                      if (_requestsThisBurst == 0 || (DateTime.UtcNow - _burstStart).TotalSeconds >= 10) //this is first request OR the burst expired                      {                          _burstStart = DateTime.UtcNow;                          _requestsThisBurst = 0;                      }                      if (_requestsThisBurst >= 5) //limit has been reached                      {                          while ((DateTime.UtcNow - _burstStart).TotalSeconds < 10)                              Thread.Sleep(250);                          _burstStart = DateTime.UtcNow;                          _requestsThisBurst = 0;                      }                      _lastRequest = DateTime.UtcNow;                      _requestsThisBurst++;                      break;                  case RateLimitMode.Burst:                      if (_requestsThisBurst == 0 || (DateTime.UtcNow - _burstStart).TotalSeconds >= 60) //this is first request OR the burst expired                      {                          _burstStart = DateTime.UtcNow;                          _requestsThisBurst = 0;                      }                      if (_requestsThisBurst >= 30) //limit has been reached                      {                          while ((DateTime.UtcNow - _burstStart).TotalSeconds < 60)                              Thread.Sleep(250);                          _burstStart = DateTime.UtcNow;                          _requestsThisBurst = 0;                      }                      _lastRequest = DateTime.UtcNow;                      _requestsThisBurst++;                      break;              }
Magic Number,RedditSharp,WebAgent,C:\repos\SirCmpwn_RedditSharp\RedditSharp\WebAgent.cs,EnforceRateLimit,The following statement contains a magic number: switch (RateLimit)              {                  case RateLimitMode.Pace:                      while ((DateTime.UtcNow - _lastRequest).TotalSeconds < 2)// Rate limiting                          Thread.Sleep(250);                      _lastRequest = DateTime.UtcNow;                      break;                  case RateLimitMode.SmallBurst:                      if (_requestsThisBurst == 0 || (DateTime.UtcNow - _burstStart).TotalSeconds >= 10) //this is first request OR the burst expired                      {                          _burstStart = DateTime.UtcNow;                          _requestsThisBurst = 0;                      }                      if (_requestsThisBurst >= 5) //limit has been reached                      {                          while ((DateTime.UtcNow - _burstStart).TotalSeconds < 10)                              Thread.Sleep(250);                          _burstStart = DateTime.UtcNow;                          _requestsThisBurst = 0;                      }                      _lastRequest = DateTime.UtcNow;                      _requestsThisBurst++;                      break;                  case RateLimitMode.Burst:                      if (_requestsThisBurst == 0 || (DateTime.UtcNow - _burstStart).TotalSeconds >= 60) //this is first request OR the burst expired                      {                          _burstStart = DateTime.UtcNow;                          _requestsThisBurst = 0;                      }                      if (_requestsThisBurst >= 30) //limit has been reached                      {                          while ((DateTime.UtcNow - _burstStart).TotalSeconds < 60)                              Thread.Sleep(250);                          _burstStart = DateTime.UtcNow;                          _requestsThisBurst = 0;                      }                      _lastRequest = DateTime.UtcNow;                      _requestsThisBurst++;                      break;              }
Magic Number,RedditSharp,WebAgent,C:\repos\SirCmpwn_RedditSharp\RedditSharp\WebAgent.cs,EnforceRateLimit,The following statement contains a magic number: switch (RateLimit)              {                  case RateLimitMode.Pace:                      while ((DateTime.UtcNow - _lastRequest).TotalSeconds < 2)// Rate limiting                          Thread.Sleep(250);                      _lastRequest = DateTime.UtcNow;                      break;                  case RateLimitMode.SmallBurst:                      if (_requestsThisBurst == 0 || (DateTime.UtcNow - _burstStart).TotalSeconds >= 10) //this is first request OR the burst expired                      {                          _burstStart = DateTime.UtcNow;                          _requestsThisBurst = 0;                      }                      if (_requestsThisBurst >= 5) //limit has been reached                      {                          while ((DateTime.UtcNow - _burstStart).TotalSeconds < 10)                              Thread.Sleep(250);                          _burstStart = DateTime.UtcNow;                          _requestsThisBurst = 0;                      }                      _lastRequest = DateTime.UtcNow;                      _requestsThisBurst++;                      break;                  case RateLimitMode.Burst:                      if (_requestsThisBurst == 0 || (DateTime.UtcNow - _burstStart).TotalSeconds >= 60) //this is first request OR the burst expired                      {                          _burstStart = DateTime.UtcNow;                          _requestsThisBurst = 0;                      }                      if (_requestsThisBurst >= 30) //limit has been reached                      {                          while ((DateTime.UtcNow - _burstStart).TotalSeconds < 60)                              Thread.Sleep(250);                          _burstStart = DateTime.UtcNow;                          _requestsThisBurst = 0;                      }                      _lastRequest = DateTime.UtcNow;                      _requestsThisBurst++;                      break;              }
Magic Number,RedditSharp,WebAgent,C:\repos\SirCmpwn_RedditSharp\RedditSharp\WebAgent.cs,EnforceRateLimit,The following statement contains a magic number: switch (RateLimit)              {                  case RateLimitMode.Pace:                      while ((DateTime.UtcNow - _lastRequest).TotalSeconds < 2)// Rate limiting                          Thread.Sleep(250);                      _lastRequest = DateTime.UtcNow;                      break;                  case RateLimitMode.SmallBurst:                      if (_requestsThisBurst == 0 || (DateTime.UtcNow - _burstStart).TotalSeconds >= 10) //this is first request OR the burst expired                      {                          _burstStart = DateTime.UtcNow;                          _requestsThisBurst = 0;                      }                      if (_requestsThisBurst >= 5) //limit has been reached                      {                          while ((DateTime.UtcNow - _burstStart).TotalSeconds < 10)                              Thread.Sleep(250);                          _burstStart = DateTime.UtcNow;                          _requestsThisBurst = 0;                      }                      _lastRequest = DateTime.UtcNow;                      _requestsThisBurst++;                      break;                  case RateLimitMode.Burst:                      if (_requestsThisBurst == 0 || (DateTime.UtcNow - _burstStart).TotalSeconds >= 60) //this is first request OR the burst expired                      {                          _burstStart = DateTime.UtcNow;                          _requestsThisBurst = 0;                      }                      if (_requestsThisBurst >= 30) //limit has been reached                      {                          while ((DateTime.UtcNow - _burstStart).TotalSeconds < 60)                              Thread.Sleep(250);                          _burstStart = DateTime.UtcNow;                          _requestsThisBurst = 0;                      }                      _lastRequest = DateTime.UtcNow;                      _requestsThisBurst++;                      break;              }
Magic Number,RedditSharp,WebAgent,C:\repos\SirCmpwn_RedditSharp\RedditSharp\WebAgent.cs,EnforceRateLimit,The following statement contains a magic number: switch (RateLimit)              {                  case RateLimitMode.Pace:                      while ((DateTime.UtcNow - _lastRequest).TotalSeconds < 2)// Rate limiting                          Thread.Sleep(250);                      _lastRequest = DateTime.UtcNow;                      break;                  case RateLimitMode.SmallBurst:                      if (_requestsThisBurst == 0 || (DateTime.UtcNow - _burstStart).TotalSeconds >= 10) //this is first request OR the burst expired                      {                          _burstStart = DateTime.UtcNow;                          _requestsThisBurst = 0;                      }                      if (_requestsThisBurst >= 5) //limit has been reached                      {                          while ((DateTime.UtcNow - _burstStart).TotalSeconds < 10)                              Thread.Sleep(250);                          _burstStart = DateTime.UtcNow;                          _requestsThisBurst = 0;                      }                      _lastRequest = DateTime.UtcNow;                      _requestsThisBurst++;                      break;                  case RateLimitMode.Burst:                      if (_requestsThisBurst == 0 || (DateTime.UtcNow - _burstStart).TotalSeconds >= 60) //this is first request OR the burst expired                      {                          _burstStart = DateTime.UtcNow;                          _requestsThisBurst = 0;                      }                      if (_requestsThisBurst >= 30) //limit has been reached                      {                          while ((DateTime.UtcNow - _burstStart).TotalSeconds < 60)                              Thread.Sleep(250);                          _burstStart = DateTime.UtcNow;                          _requestsThisBurst = 0;                      }                      _lastRequest = DateTime.UtcNow;                      _requestsThisBurst++;                      break;              }
Magic Number,RedditSharp,WebAgent,C:\repos\SirCmpwn_RedditSharp\RedditSharp\WebAgent.cs,EnforceRateLimit,The following statement contains a magic number: switch (RateLimit)              {                  case RateLimitMode.Pace:                      while ((DateTime.UtcNow - _lastRequest).TotalSeconds < 2)// Rate limiting                          Thread.Sleep(250);                      _lastRequest = DateTime.UtcNow;                      break;                  case RateLimitMode.SmallBurst:                      if (_requestsThisBurst == 0 || (DateTime.UtcNow - _burstStart).TotalSeconds >= 10) //this is first request OR the burst expired                      {                          _burstStart = DateTime.UtcNow;                          _requestsThisBurst = 0;                      }                      if (_requestsThisBurst >= 5) //limit has been reached                      {                          while ((DateTime.UtcNow - _burstStart).TotalSeconds < 10)                              Thread.Sleep(250);                          _burstStart = DateTime.UtcNow;                          _requestsThisBurst = 0;                      }                      _lastRequest = DateTime.UtcNow;                      _requestsThisBurst++;                      break;                  case RateLimitMode.Burst:                      if (_requestsThisBurst == 0 || (DateTime.UtcNow - _burstStart).TotalSeconds >= 60) //this is first request OR the burst expired                      {                          _burstStart = DateTime.UtcNow;                          _requestsThisBurst = 0;                      }                      if (_requestsThisBurst >= 30) //limit has been reached                      {                          while ((DateTime.UtcNow - _burstStart).TotalSeconds < 60)                              Thread.Sleep(250);                          _burstStart = DateTime.UtcNow;                          _requestsThisBurst = 0;                      }                      _lastRequest = DateTime.UtcNow;                      _requestsThisBurst++;                      break;              }
Magic Number,RedditSharp,WebAgent,C:\repos\SirCmpwn_RedditSharp\RedditSharp\WebAgent.cs,EnforceRateLimit,The following statement contains a magic number: switch (RateLimit)              {                  case RateLimitMode.Pace:                      while ((DateTime.UtcNow - _lastRequest).TotalSeconds < 2)// Rate limiting                          Thread.Sleep(250);                      _lastRequest = DateTime.UtcNow;                      break;                  case RateLimitMode.SmallBurst:                      if (_requestsThisBurst == 0 || (DateTime.UtcNow - _burstStart).TotalSeconds >= 10) //this is first request OR the burst expired                      {                          _burstStart = DateTime.UtcNow;                          _requestsThisBurst = 0;                      }                      if (_requestsThisBurst >= 5) //limit has been reached                      {                          while ((DateTime.UtcNow - _burstStart).TotalSeconds < 10)                              Thread.Sleep(250);                          _burstStart = DateTime.UtcNow;                          _requestsThisBurst = 0;                      }                      _lastRequest = DateTime.UtcNow;                      _requestsThisBurst++;                      break;                  case RateLimitMode.Burst:                      if (_requestsThisBurst == 0 || (DateTime.UtcNow - _burstStart).TotalSeconds >= 60) //this is first request OR the burst expired                      {                          _burstStart = DateTime.UtcNow;                          _requestsThisBurst = 0;                      }                      if (_requestsThisBurst >= 30) //limit has been reached                      {                          while ((DateTime.UtcNow - _burstStart).TotalSeconds < 60)                              Thread.Sleep(250);                          _burstStart = DateTime.UtcNow;                          _requestsThisBurst = 0;                      }                      _lastRequest = DateTime.UtcNow;                      _requestsThisBurst++;                      break;              }
Magic Number,RedditSharp,WebAgent,C:\repos\SirCmpwn_RedditSharp\RedditSharp\WebAgent.cs,WritePostBody,The following statement contains a magic number: for (int i = 0; i < additionalFields.Length; i += 2)              {                  var entry = Convert.ToString(additionalFields[i + 1]) ?? string.Empty;                  value += additionalFields[i] + "=" + HttpUtility.UrlEncode(entry).Replace(";"' "%3B").Replace("&"' "%26") + "&";              }
Magic Number,RedditSharp,ToolBoxUserNotes,C:\repos\SirCmpwn_RedditSharp\RedditSharp\ToolBoxUserNotes.cs,GetUserNotes,The following statement contains a magic number: if (version < 6) throw new ToolBoxUserNotesException("Unsupported ToolBox version");
Magic Number,RedditSharp,ToolBoxUserNotes,C:\repos\SirCmpwn_RedditSharp\RedditSharp\ToolBoxUserNotes.cs,UnsquashLink,The following statement contains a magic number: if (linkParams[0] == "l")              {                  link += "comments/" + linkParams[1] + "/";                  if (linkParams.Length > 2)                      link += "-/" + linkParams[2] + "/";              }              else if (linkParams[0] == "m")              {                  link += "message/messages/" + linkParams[1];              }
Magic Number,RedditSharp,ToolBoxUserNotes,C:\repos\SirCmpwn_RedditSharp\RedditSharp\ToolBoxUserNotes.cs,UnsquashLink,The following statement contains a magic number: if (linkParams[0] == "l")              {                  link += "comments/" + linkParams[1] + "/";                  if (linkParams.Length > 2)                      link += "-/" + linkParams[2] + "/";              }              else if (linkParams[0] == "m")              {                  link += "message/messages/" + linkParams[1];              }
Magic Number,RedditSharp.Things,Comment,C:\repos\SirCmpwn_RedditSharp\RedditSharp\Things\Comment.cs,CommonInit,The following statement contains a magic number: if (data["context"] != null)              {                  var context = data["context"].Value<string>();                  LinkId = context.Split('/')[4];              }
Magic Number,RedditSharp.Things,RedditUser,C:\repos\SirCmpwn_RedditSharp\RedditSharp\Things\RedditUser.cs,GetPosts,The following statement contains a magic number: if ((limit < 1) || (limit > 100))                  throw new ArgumentOutOfRangeException("limit"' "Valid range: [1'100]");
Magic Number,RedditSharp.Things,Subreddit,C:\repos\SirCmpwn_RedditSharp\RedditSharp\Things\Subreddit.cs,SetName,The following statement contains a magic number: if (Name.StartsWith("/r/"))                  Name = Name.Substring(3);
Magic Number,RedditSharp.Things,Subreddit,C:\repos\SirCmpwn_RedditSharp\RedditSharp\Things\Subreddit.cs,SetName,The following statement contains a magic number: if (Name.StartsWith("r/"))                  Name = Name.Substring(2);
Magic Number,RedditSharp.Things,VotableThing,C:\repos\SirCmpwn_RedditSharp\RedditSharp\Things\VotableThing.cs,Distinguish,The following statement contains a magic number: if (json["jquery"].Count(i => i[0].Value<int>() == 11 && i[1].Value<int>() == 12) == 0)                  throw new AuthenticationException("You are not permitted to distinguish this comment.");
Magic Number,RedditSharp.Things,VotableThing,C:\repos\SirCmpwn_RedditSharp\RedditSharp\Things\VotableThing.cs,Distinguish,The following statement contains a magic number: if (json["jquery"].Count(i => i[0].Value<int>() == 11 && i[1].Value<int>() == 12) == 0)                  throw new AuthenticationException("You are not permitted to distinguish this comment.");
Magic Number,RedditSharp.Utils,DateTimeExtensions,C:\repos\SirCmpwn_RedditSharp\RedditSharp\Utils\DateTimeExtensions.cs,DateTimeToUnixTimestamp,The following statement contains a magic number: double time = (dateTime - new DateTime(1970' 1' 1).ToLocalTime()).TotalSeconds;
Missing Default,RedditSharp,SubredditSettings,C:\repos\SirCmpwn_RedditSharp\RedditSharp\SubredditSettings.cs,SubredditSettings,The following switch statement is missing a default case: switch (wikiMode)                  {                      case "disabled":                          WikiEditMode = WikiEditMode.None;                          break;                      case "modonly":                          WikiEditMode = WikiEditMode.Moderators;                          break;                      case "anyone":                          WikiEditMode = WikiEditMode.All;                          break;                  }
Missing Default,RedditSharp,SubredditSettings,C:\repos\SirCmpwn_RedditSharp\RedditSharp\SubredditSettings.cs,SubredditSettings,The following switch statement is missing a default case: switch (type)                  {                      case "public":                          SubredditType = SubredditType.Public;                          break;                      case "private":                          SubredditType = SubredditType.Private;                          break;                      case "restricted":                          SubredditType = SubredditType.Restricted;                          break;                  }
Missing Default,RedditSharp,SubredditSettings,C:\repos\SirCmpwn_RedditSharp\RedditSharp\SubredditSettings.cs,SubredditSettings,The following switch statement is missing a default case: switch (contentOptions)                  {                      case "any":                          ContentOptions = ContentOptions.All;                          break;                      case "link":                          ContentOptions = ContentOptions.LinkOnly;                          break;                      case "self":                          ContentOptions = ContentOptions.SelfOnly;                          break;                  }
Missing Default,RedditSharp,WebAgent,C:\repos\SirCmpwn_RedditSharp\RedditSharp\WebAgent.cs,ExecuteRequest,The following switch statement is missing a default case: switch (json["error"].ToString())                          {                              case "404":                                  throw new Exception("File Not Found");                              case "403":                                  throw new Exception("Restricted");                              case "invalid_grant":                                  //Refresh authtoken                                  //AccessToken = authProvider.GetRefreshToken();                                  //ExecuteRequest(request);                                  break;                          }
Missing Default,RedditSharp,WebAgent,C:\repos\SirCmpwn_RedditSharp\RedditSharp\WebAgent.cs,EnforceRateLimit,The following switch statement is missing a default case: switch (RateLimit)              {                  case RateLimitMode.Pace:                      while ((DateTime.UtcNow - _lastRequest).TotalSeconds < 2)// Rate limiting                          Thread.Sleep(250);                      _lastRequest = DateTime.UtcNow;                      break;                  case RateLimitMode.SmallBurst:                      if (_requestsThisBurst == 0 || (DateTime.UtcNow - _burstStart).TotalSeconds >= 10) //this is first request OR the burst expired                      {                          _burstStart = DateTime.UtcNow;                          _requestsThisBurst = 0;                      }                      if (_requestsThisBurst >= 5) //limit has been reached                      {                          while ((DateTime.UtcNow - _burstStart).TotalSeconds < 10)                              Thread.Sleep(250);                          _burstStart = DateTime.UtcNow;                          _requestsThisBurst = 0;                      }                      _lastRequest = DateTime.UtcNow;                      _requestsThisBurst++;                      break;                  case RateLimitMode.Burst:                      if (_requestsThisBurst == 0 || (DateTime.UtcNow - _burstStart).TotalSeconds >= 60) //this is first request OR the burst expired                      {                          _burstStart = DateTime.UtcNow;                          _requestsThisBurst = 0;                      }                      if (_requestsThisBurst >= 30) //limit has been reached                      {                          while ((DateTime.UtcNow - _burstStart).TotalSeconds < 60)                              Thread.Sleep(250);                          _burstStart = DateTime.UtcNow;                          _requestsThisBurst = 0;                      }                      _lastRequest = DateTime.UtcNow;                      _requestsThisBurst++;                      break;              }
Missing Default,RedditSharp.Things,VotableThing,C:\repos\SirCmpwn_RedditSharp\RedditSharp\Things\VotableThing.cs,SetVote,The following switch statement is missing a default case: switch(type)              {                  case VoteType.Upvote: Liked = true; Upvotes++; return;                  case VoteType.None: Liked = null; return;                  case VoteType.Downvote: Liked = false; Downvotes++; return;              }
