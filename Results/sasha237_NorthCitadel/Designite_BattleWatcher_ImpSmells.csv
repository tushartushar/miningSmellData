Implementation smell,Namespace,Class,File,Method,Description
Long Method,BattleWatcher,MainForm,C:\repos\sasha237_NorthCitadel\BattleWatcher\MainForm.cs,Gobutton_Click,The method has 141 lines of code.
Complex Method,BattleWatcher,MainForm,C:\repos\sasha237_NorthCitadel\BattleWatcher\MainForm.cs,Gobutton_Click,Cyclomatic complexity of the method is 21
Long Statement,BattleWatcher,MainForm,C:\repos\sasha237_NorthCitadel\BattleWatcher\MainForm.cs,Gobutton_Click,The length of the statement  "		dDomination = double.Parse (Regex.Match (Response' "domination\":([0-9.]{1'9})").Groups [1].Value' CultureInfo.GetCultureInfo ("en-US").NumberFormat) / 100.0; " is 158.
Magic Number,BattleWatcher,MainForm,C:\repos\sasha237_NorthCitadel\BattleWatcher\MainForm.cs,Gobutton_Click,The following statement contains a magic number: while (true) {  	Console.WriteLine ("Step " + i.ToString ());  	int iSumm = 0;  	int iA = 0;  	int iD = 0;  	string Response = "";  	try {  		Response = httpClient.DownloadString ("http://www.erepublik.com/en/military/battle-log/" + sBattelId);  	}  	catch (System.Exception e1) {  		MessageBox.Show ("Wrong number");  		return;  	}  	bool bFlag = true;  	string sAttackers = "\"attackers\":";  	string sDefenders = "\"defenders\":";  	int iPos;  	int iAttk = Response.IndexOf (sAttackers);  	int iDef = Response.IndexOf (sDefenders);  	int j = 0;  	dDomination = double.Parse (Regex.Match (Response' "domination\":([0-9.]{1'9})").Groups [1].Value' CultureInfo.GetCultureInfo ("en-US").NumberFormat) / 100.0;  	Match mcD = Regex.Match (Response' "damage\":\"([0-9.]{1'9})\"");  	Match mcI = Regex.Match (Response' "id\":\"([0-9.]{1'9})\"");  	while (mcD.Success && mcI.Success) {  		int iDam = int.Parse (mcD.Groups [1].Value);  		int iId = int.Parse (mcI.Groups [1].Value);  		if (sdOldFight.ContainsKey (iId)) {  			j++;  			mcD = mcD.NextMatch ();  			mcI = mcI.NextMatch ();  			continue;  		}  		iSumm += iDam;  		if (mcD.Groups [1].Index > iAttk && mcD.Groups [1].Index < iDef)  			iA += iDam;  		else  			iD += iDam;  		sdFight.Add (iId' iDam);  		mcD = mcD.NextMatch ();  		mcI = mcI.NextMatch ();  	}  	if (j > 25) {  		bFlag = false;  	}  	if (bFlag) {  		i++;  		if (dOldDomination != 0) {  			if (dOldDomination != dDomination) {  				double dVal1 = Math.Abs (dDomination * dOldDomination / (dDomination - dOldDomination) * (iA / dDomination - iSumm));  				double dVal2 = Math.Abs (dDomination * dOldDomination / (dDomination - dOldDomination) * (iD / dDomination - iSumm));  				double dVal = dVal1 + dVal2;  				dVal /= 100.0;  				Console.WriteLine ("Current                  1% = " + ((int)(dVal)).ToString () + " dmg");  				sdMatr.Add (i' new Pair2<int' double> (Math.Abs (iSumm)' Math.Abs (dVal)));  			}  			if (sdMatr.Count != 0) {  				double dSum = 0;  				double dSumlast10 = 10;  				double dCount = 0;  				double dWithoutPeaks = 0;  				double dWithoutPeakslast10 = 0;  				double dCount10 = 0;  				foreach (var el in sdMatr) {  					Pair2<int' double> pp = el.Value as Pair2<int' double>;  					dCount++;  					dSum += pp.Second;  					if (dCount + 10 > sdMatr.Count) {  						dSumlast10 += pp.Second;  						dCount10++;  					}  				}  				dSum /= dCount;  				Console.WriteLine ("Average                  1% = " + ((int)(dSum)).ToString () + " dmg");  				if (dCount > 10) {  					dSumlast10 /= dCount10;  					Console.WriteLine ("Average last 10          1% = " + ((int)(dSumlast10)).ToString () + " dmg");  				}  				dCount = 0;  				dCount10 = 0;  				foreach (var el in sdMatr) {  					Pair2<int' double> pp = el.Value as Pair2<int' double>;  					if (pp.Second > dSum * 3)  						continue;  					dCount++;  					dWithoutPeaks += pp.Second;  					if (dCount + 10 > sdMatr.Count) {  						dWithoutPeakslast10 += pp.Second;  						dCount10++;  					}  				}  				dWithoutPeaks /= dCount;  				Console.WriteLine ("Average no peaks         1% = " + ((int)(dWithoutPeaks)).ToString () + " dmg");  				if (dCount > 10) {  					dWithoutPeakslast10 /= dCount10;  					Console.WriteLine ("Average no peaks last 10 1% = " + ((int)(dWithoutPeakslast10)).ToString () + " dmg");  				}  			}  		}  		sdOldFight.Clear ();  		foreach (var ff in sdFight) {  			sdOldFight.Add (ff.Key' ff.Value);  		}  		sdFight.Clear ();  		dOldDomination = dDomination;  	}  	else {  		sdFight.Clear ();  		Console.WriteLine (j.ToString () + " fights are same! Trying again!");  	}  	System.Threading.Thread.Sleep ((int)(dSec * 1000));  }  
Magic Number,BattleWatcher,MainForm,C:\repos\sasha237_NorthCitadel\BattleWatcher\MainForm.cs,Gobutton_Click,The following statement contains a magic number: while (true) {  	Console.WriteLine ("Step " + i.ToString ());  	int iSumm = 0;  	int iA = 0;  	int iD = 0;  	string Response = "";  	try {  		Response = httpClient.DownloadString ("http://www.erepublik.com/en/military/battle-log/" + sBattelId);  	}  	catch (System.Exception e1) {  		MessageBox.Show ("Wrong number");  		return;  	}  	bool bFlag = true;  	string sAttackers = "\"attackers\":";  	string sDefenders = "\"defenders\":";  	int iPos;  	int iAttk = Response.IndexOf (sAttackers);  	int iDef = Response.IndexOf (sDefenders);  	int j = 0;  	dDomination = double.Parse (Regex.Match (Response' "domination\":([0-9.]{1'9})").Groups [1].Value' CultureInfo.GetCultureInfo ("en-US").NumberFormat) / 100.0;  	Match mcD = Regex.Match (Response' "damage\":\"([0-9.]{1'9})\"");  	Match mcI = Regex.Match (Response' "id\":\"([0-9.]{1'9})\"");  	while (mcD.Success && mcI.Success) {  		int iDam = int.Parse (mcD.Groups [1].Value);  		int iId = int.Parse (mcI.Groups [1].Value);  		if (sdOldFight.ContainsKey (iId)) {  			j++;  			mcD = mcD.NextMatch ();  			mcI = mcI.NextMatch ();  			continue;  		}  		iSumm += iDam;  		if (mcD.Groups [1].Index > iAttk && mcD.Groups [1].Index < iDef)  			iA += iDam;  		else  			iD += iDam;  		sdFight.Add (iId' iDam);  		mcD = mcD.NextMatch ();  		mcI = mcI.NextMatch ();  	}  	if (j > 25) {  		bFlag = false;  	}  	if (bFlag) {  		i++;  		if (dOldDomination != 0) {  			if (dOldDomination != dDomination) {  				double dVal1 = Math.Abs (dDomination * dOldDomination / (dDomination - dOldDomination) * (iA / dDomination - iSumm));  				double dVal2 = Math.Abs (dDomination * dOldDomination / (dDomination - dOldDomination) * (iD / dDomination - iSumm));  				double dVal = dVal1 + dVal2;  				dVal /= 100.0;  				Console.WriteLine ("Current                  1% = " + ((int)(dVal)).ToString () + " dmg");  				sdMatr.Add (i' new Pair2<int' double> (Math.Abs (iSumm)' Math.Abs (dVal)));  			}  			if (sdMatr.Count != 0) {  				double dSum = 0;  				double dSumlast10 = 10;  				double dCount = 0;  				double dWithoutPeaks = 0;  				double dWithoutPeakslast10 = 0;  				double dCount10 = 0;  				foreach (var el in sdMatr) {  					Pair2<int' double> pp = el.Value as Pair2<int' double>;  					dCount++;  					dSum += pp.Second;  					if (dCount + 10 > sdMatr.Count) {  						dSumlast10 += pp.Second;  						dCount10++;  					}  				}  				dSum /= dCount;  				Console.WriteLine ("Average                  1% = " + ((int)(dSum)).ToString () + " dmg");  				if (dCount > 10) {  					dSumlast10 /= dCount10;  					Console.WriteLine ("Average last 10          1% = " + ((int)(dSumlast10)).ToString () + " dmg");  				}  				dCount = 0;  				dCount10 = 0;  				foreach (var el in sdMatr) {  					Pair2<int' double> pp = el.Value as Pair2<int' double>;  					if (pp.Second > dSum * 3)  						continue;  					dCount++;  					dWithoutPeaks += pp.Second;  					if (dCount + 10 > sdMatr.Count) {  						dWithoutPeakslast10 += pp.Second;  						dCount10++;  					}  				}  				dWithoutPeaks /= dCount;  				Console.WriteLine ("Average no peaks         1% = " + ((int)(dWithoutPeaks)).ToString () + " dmg");  				if (dCount > 10) {  					dWithoutPeakslast10 /= dCount10;  					Console.WriteLine ("Average no peaks last 10 1% = " + ((int)(dWithoutPeakslast10)).ToString () + " dmg");  				}  			}  		}  		sdOldFight.Clear ();  		foreach (var ff in sdFight) {  			sdOldFight.Add (ff.Key' ff.Value);  		}  		sdFight.Clear ();  		dOldDomination = dDomination;  	}  	else {  		sdFight.Clear ();  		Console.WriteLine (j.ToString () + " fights are same! Trying again!");  	}  	System.Threading.Thread.Sleep ((int)(dSec * 1000));  }  
Magic Number,BattleWatcher,MainForm,C:\repos\sasha237_NorthCitadel\BattleWatcher\MainForm.cs,Gobutton_Click,The following statement contains a magic number: while (true) {  	Console.WriteLine ("Step " + i.ToString ());  	int iSumm = 0;  	int iA = 0;  	int iD = 0;  	string Response = "";  	try {  		Response = httpClient.DownloadString ("http://www.erepublik.com/en/military/battle-log/" + sBattelId);  	}  	catch (System.Exception e1) {  		MessageBox.Show ("Wrong number");  		return;  	}  	bool bFlag = true;  	string sAttackers = "\"attackers\":";  	string sDefenders = "\"defenders\":";  	int iPos;  	int iAttk = Response.IndexOf (sAttackers);  	int iDef = Response.IndexOf (sDefenders);  	int j = 0;  	dDomination = double.Parse (Regex.Match (Response' "domination\":([0-9.]{1'9})").Groups [1].Value' CultureInfo.GetCultureInfo ("en-US").NumberFormat) / 100.0;  	Match mcD = Regex.Match (Response' "damage\":\"([0-9.]{1'9})\"");  	Match mcI = Regex.Match (Response' "id\":\"([0-9.]{1'9})\"");  	while (mcD.Success && mcI.Success) {  		int iDam = int.Parse (mcD.Groups [1].Value);  		int iId = int.Parse (mcI.Groups [1].Value);  		if (sdOldFight.ContainsKey (iId)) {  			j++;  			mcD = mcD.NextMatch ();  			mcI = mcI.NextMatch ();  			continue;  		}  		iSumm += iDam;  		if (mcD.Groups [1].Index > iAttk && mcD.Groups [1].Index < iDef)  			iA += iDam;  		else  			iD += iDam;  		sdFight.Add (iId' iDam);  		mcD = mcD.NextMatch ();  		mcI = mcI.NextMatch ();  	}  	if (j > 25) {  		bFlag = false;  	}  	if (bFlag) {  		i++;  		if (dOldDomination != 0) {  			if (dOldDomination != dDomination) {  				double dVal1 = Math.Abs (dDomination * dOldDomination / (dDomination - dOldDomination) * (iA / dDomination - iSumm));  				double dVal2 = Math.Abs (dDomination * dOldDomination / (dDomination - dOldDomination) * (iD / dDomination - iSumm));  				double dVal = dVal1 + dVal2;  				dVal /= 100.0;  				Console.WriteLine ("Current                  1% = " + ((int)(dVal)).ToString () + " dmg");  				sdMatr.Add (i' new Pair2<int' double> (Math.Abs (iSumm)' Math.Abs (dVal)));  			}  			if (sdMatr.Count != 0) {  				double dSum = 0;  				double dSumlast10 = 10;  				double dCount = 0;  				double dWithoutPeaks = 0;  				double dWithoutPeakslast10 = 0;  				double dCount10 = 0;  				foreach (var el in sdMatr) {  					Pair2<int' double> pp = el.Value as Pair2<int' double>;  					dCount++;  					dSum += pp.Second;  					if (dCount + 10 > sdMatr.Count) {  						dSumlast10 += pp.Second;  						dCount10++;  					}  				}  				dSum /= dCount;  				Console.WriteLine ("Average                  1% = " + ((int)(dSum)).ToString () + " dmg");  				if (dCount > 10) {  					dSumlast10 /= dCount10;  					Console.WriteLine ("Average last 10          1% = " + ((int)(dSumlast10)).ToString () + " dmg");  				}  				dCount = 0;  				dCount10 = 0;  				foreach (var el in sdMatr) {  					Pair2<int' double> pp = el.Value as Pair2<int' double>;  					if (pp.Second > dSum * 3)  						continue;  					dCount++;  					dWithoutPeaks += pp.Second;  					if (dCount + 10 > sdMatr.Count) {  						dWithoutPeakslast10 += pp.Second;  						dCount10++;  					}  				}  				dWithoutPeaks /= dCount;  				Console.WriteLine ("Average no peaks         1% = " + ((int)(dWithoutPeaks)).ToString () + " dmg");  				if (dCount > 10) {  					dWithoutPeakslast10 /= dCount10;  					Console.WriteLine ("Average no peaks last 10 1% = " + ((int)(dWithoutPeakslast10)).ToString () + " dmg");  				}  			}  		}  		sdOldFight.Clear ();  		foreach (var ff in sdFight) {  			sdOldFight.Add (ff.Key' ff.Value);  		}  		sdFight.Clear ();  		dOldDomination = dDomination;  	}  	else {  		sdFight.Clear ();  		Console.WriteLine (j.ToString () + " fights are same! Trying again!");  	}  	System.Threading.Thread.Sleep ((int)(dSec * 1000));  }  
Magic Number,BattleWatcher,MainForm,C:\repos\sasha237_NorthCitadel\BattleWatcher\MainForm.cs,Gobutton_Click,The following statement contains a magic number: while (true) {  	Console.WriteLine ("Step " + i.ToString ());  	int iSumm = 0;  	int iA = 0;  	int iD = 0;  	string Response = "";  	try {  		Response = httpClient.DownloadString ("http://www.erepublik.com/en/military/battle-log/" + sBattelId);  	}  	catch (System.Exception e1) {  		MessageBox.Show ("Wrong number");  		return;  	}  	bool bFlag = true;  	string sAttackers = "\"attackers\":";  	string sDefenders = "\"defenders\":";  	int iPos;  	int iAttk = Response.IndexOf (sAttackers);  	int iDef = Response.IndexOf (sDefenders);  	int j = 0;  	dDomination = double.Parse (Regex.Match (Response' "domination\":([0-9.]{1'9})").Groups [1].Value' CultureInfo.GetCultureInfo ("en-US").NumberFormat) / 100.0;  	Match mcD = Regex.Match (Response' "damage\":\"([0-9.]{1'9})\"");  	Match mcI = Regex.Match (Response' "id\":\"([0-9.]{1'9})\"");  	while (mcD.Success && mcI.Success) {  		int iDam = int.Parse (mcD.Groups [1].Value);  		int iId = int.Parse (mcI.Groups [1].Value);  		if (sdOldFight.ContainsKey (iId)) {  			j++;  			mcD = mcD.NextMatch ();  			mcI = mcI.NextMatch ();  			continue;  		}  		iSumm += iDam;  		if (mcD.Groups [1].Index > iAttk && mcD.Groups [1].Index < iDef)  			iA += iDam;  		else  			iD += iDam;  		sdFight.Add (iId' iDam);  		mcD = mcD.NextMatch ();  		mcI = mcI.NextMatch ();  	}  	if (j > 25) {  		bFlag = false;  	}  	if (bFlag) {  		i++;  		if (dOldDomination != 0) {  			if (dOldDomination != dDomination) {  				double dVal1 = Math.Abs (dDomination * dOldDomination / (dDomination - dOldDomination) * (iA / dDomination - iSumm));  				double dVal2 = Math.Abs (dDomination * dOldDomination / (dDomination - dOldDomination) * (iD / dDomination - iSumm));  				double dVal = dVal1 + dVal2;  				dVal /= 100.0;  				Console.WriteLine ("Current                  1% = " + ((int)(dVal)).ToString () + " dmg");  				sdMatr.Add (i' new Pair2<int' double> (Math.Abs (iSumm)' Math.Abs (dVal)));  			}  			if (sdMatr.Count != 0) {  				double dSum = 0;  				double dSumlast10 = 10;  				double dCount = 0;  				double dWithoutPeaks = 0;  				double dWithoutPeakslast10 = 0;  				double dCount10 = 0;  				foreach (var el in sdMatr) {  					Pair2<int' double> pp = el.Value as Pair2<int' double>;  					dCount++;  					dSum += pp.Second;  					if (dCount + 10 > sdMatr.Count) {  						dSumlast10 += pp.Second;  						dCount10++;  					}  				}  				dSum /= dCount;  				Console.WriteLine ("Average                  1% = " + ((int)(dSum)).ToString () + " dmg");  				if (dCount > 10) {  					dSumlast10 /= dCount10;  					Console.WriteLine ("Average last 10          1% = " + ((int)(dSumlast10)).ToString () + " dmg");  				}  				dCount = 0;  				dCount10 = 0;  				foreach (var el in sdMatr) {  					Pair2<int' double> pp = el.Value as Pair2<int' double>;  					if (pp.Second > dSum * 3)  						continue;  					dCount++;  					dWithoutPeaks += pp.Second;  					if (dCount + 10 > sdMatr.Count) {  						dWithoutPeakslast10 += pp.Second;  						dCount10++;  					}  				}  				dWithoutPeaks /= dCount;  				Console.WriteLine ("Average no peaks         1% = " + ((int)(dWithoutPeaks)).ToString () + " dmg");  				if (dCount > 10) {  					dWithoutPeakslast10 /= dCount10;  					Console.WriteLine ("Average no peaks last 10 1% = " + ((int)(dWithoutPeakslast10)).ToString () + " dmg");  				}  			}  		}  		sdOldFight.Clear ();  		foreach (var ff in sdFight) {  			sdOldFight.Add (ff.Key' ff.Value);  		}  		sdFight.Clear ();  		dOldDomination = dDomination;  	}  	else {  		sdFight.Clear ();  		Console.WriteLine (j.ToString () + " fights are same! Trying again!");  	}  	System.Threading.Thread.Sleep ((int)(dSec * 1000));  }  
Magic Number,BattleWatcher,MainForm,C:\repos\sasha237_NorthCitadel\BattleWatcher\MainForm.cs,Gobutton_Click,The following statement contains a magic number: while (true) {  	Console.WriteLine ("Step " + i.ToString ());  	int iSumm = 0;  	int iA = 0;  	int iD = 0;  	string Response = "";  	try {  		Response = httpClient.DownloadString ("http://www.erepublik.com/en/military/battle-log/" + sBattelId);  	}  	catch (System.Exception e1) {  		MessageBox.Show ("Wrong number");  		return;  	}  	bool bFlag = true;  	string sAttackers = "\"attackers\":";  	string sDefenders = "\"defenders\":";  	int iPos;  	int iAttk = Response.IndexOf (sAttackers);  	int iDef = Response.IndexOf (sDefenders);  	int j = 0;  	dDomination = double.Parse (Regex.Match (Response' "domination\":([0-9.]{1'9})").Groups [1].Value' CultureInfo.GetCultureInfo ("en-US").NumberFormat) / 100.0;  	Match mcD = Regex.Match (Response' "damage\":\"([0-9.]{1'9})\"");  	Match mcI = Regex.Match (Response' "id\":\"([0-9.]{1'9})\"");  	while (mcD.Success && mcI.Success) {  		int iDam = int.Parse (mcD.Groups [1].Value);  		int iId = int.Parse (mcI.Groups [1].Value);  		if (sdOldFight.ContainsKey (iId)) {  			j++;  			mcD = mcD.NextMatch ();  			mcI = mcI.NextMatch ();  			continue;  		}  		iSumm += iDam;  		if (mcD.Groups [1].Index > iAttk && mcD.Groups [1].Index < iDef)  			iA += iDam;  		else  			iD += iDam;  		sdFight.Add (iId' iDam);  		mcD = mcD.NextMatch ();  		mcI = mcI.NextMatch ();  	}  	if (j > 25) {  		bFlag = false;  	}  	if (bFlag) {  		i++;  		if (dOldDomination != 0) {  			if (dOldDomination != dDomination) {  				double dVal1 = Math.Abs (dDomination * dOldDomination / (dDomination - dOldDomination) * (iA / dDomination - iSumm));  				double dVal2 = Math.Abs (dDomination * dOldDomination / (dDomination - dOldDomination) * (iD / dDomination - iSumm));  				double dVal = dVal1 + dVal2;  				dVal /= 100.0;  				Console.WriteLine ("Current                  1% = " + ((int)(dVal)).ToString () + " dmg");  				sdMatr.Add (i' new Pair2<int' double> (Math.Abs (iSumm)' Math.Abs (dVal)));  			}  			if (sdMatr.Count != 0) {  				double dSum = 0;  				double dSumlast10 = 10;  				double dCount = 0;  				double dWithoutPeaks = 0;  				double dWithoutPeakslast10 = 0;  				double dCount10 = 0;  				foreach (var el in sdMatr) {  					Pair2<int' double> pp = el.Value as Pair2<int' double>;  					dCount++;  					dSum += pp.Second;  					if (dCount + 10 > sdMatr.Count) {  						dSumlast10 += pp.Second;  						dCount10++;  					}  				}  				dSum /= dCount;  				Console.WriteLine ("Average                  1% = " + ((int)(dSum)).ToString () + " dmg");  				if (dCount > 10) {  					dSumlast10 /= dCount10;  					Console.WriteLine ("Average last 10          1% = " + ((int)(dSumlast10)).ToString () + " dmg");  				}  				dCount = 0;  				dCount10 = 0;  				foreach (var el in sdMatr) {  					Pair2<int' double> pp = el.Value as Pair2<int' double>;  					if (pp.Second > dSum * 3)  						continue;  					dCount++;  					dWithoutPeaks += pp.Second;  					if (dCount + 10 > sdMatr.Count) {  						dWithoutPeakslast10 += pp.Second;  						dCount10++;  					}  				}  				dWithoutPeaks /= dCount;  				Console.WriteLine ("Average no peaks         1% = " + ((int)(dWithoutPeaks)).ToString () + " dmg");  				if (dCount > 10) {  					dWithoutPeakslast10 /= dCount10;  					Console.WriteLine ("Average no peaks last 10 1% = " + ((int)(dWithoutPeakslast10)).ToString () + " dmg");  				}  			}  		}  		sdOldFight.Clear ();  		foreach (var ff in sdFight) {  			sdOldFight.Add (ff.Key' ff.Value);  		}  		sdFight.Clear ();  		dOldDomination = dDomination;  	}  	else {  		sdFight.Clear ();  		Console.WriteLine (j.ToString () + " fights are same! Trying again!");  	}  	System.Threading.Thread.Sleep ((int)(dSec * 1000));  }  
Magic Number,BattleWatcher,MainForm,C:\repos\sasha237_NorthCitadel\BattleWatcher\MainForm.cs,Gobutton_Click,The following statement contains a magic number: while (true) {  	Console.WriteLine ("Step " + i.ToString ());  	int iSumm = 0;  	int iA = 0;  	int iD = 0;  	string Response = "";  	try {  		Response = httpClient.DownloadString ("http://www.erepublik.com/en/military/battle-log/" + sBattelId);  	}  	catch (System.Exception e1) {  		MessageBox.Show ("Wrong number");  		return;  	}  	bool bFlag = true;  	string sAttackers = "\"attackers\":";  	string sDefenders = "\"defenders\":";  	int iPos;  	int iAttk = Response.IndexOf (sAttackers);  	int iDef = Response.IndexOf (sDefenders);  	int j = 0;  	dDomination = double.Parse (Regex.Match (Response' "domination\":([0-9.]{1'9})").Groups [1].Value' CultureInfo.GetCultureInfo ("en-US").NumberFormat) / 100.0;  	Match mcD = Regex.Match (Response' "damage\":\"([0-9.]{1'9})\"");  	Match mcI = Regex.Match (Response' "id\":\"([0-9.]{1'9})\"");  	while (mcD.Success && mcI.Success) {  		int iDam = int.Parse (mcD.Groups [1].Value);  		int iId = int.Parse (mcI.Groups [1].Value);  		if (sdOldFight.ContainsKey (iId)) {  			j++;  			mcD = mcD.NextMatch ();  			mcI = mcI.NextMatch ();  			continue;  		}  		iSumm += iDam;  		if (mcD.Groups [1].Index > iAttk && mcD.Groups [1].Index < iDef)  			iA += iDam;  		else  			iD += iDam;  		sdFight.Add (iId' iDam);  		mcD = mcD.NextMatch ();  		mcI = mcI.NextMatch ();  	}  	if (j > 25) {  		bFlag = false;  	}  	if (bFlag) {  		i++;  		if (dOldDomination != 0) {  			if (dOldDomination != dDomination) {  				double dVal1 = Math.Abs (dDomination * dOldDomination / (dDomination - dOldDomination) * (iA / dDomination - iSumm));  				double dVal2 = Math.Abs (dDomination * dOldDomination / (dDomination - dOldDomination) * (iD / dDomination - iSumm));  				double dVal = dVal1 + dVal2;  				dVal /= 100.0;  				Console.WriteLine ("Current                  1% = " + ((int)(dVal)).ToString () + " dmg");  				sdMatr.Add (i' new Pair2<int' double> (Math.Abs (iSumm)' Math.Abs (dVal)));  			}  			if (sdMatr.Count != 0) {  				double dSum = 0;  				double dSumlast10 = 10;  				double dCount = 0;  				double dWithoutPeaks = 0;  				double dWithoutPeakslast10 = 0;  				double dCount10 = 0;  				foreach (var el in sdMatr) {  					Pair2<int' double> pp = el.Value as Pair2<int' double>;  					dCount++;  					dSum += pp.Second;  					if (dCount + 10 > sdMatr.Count) {  						dSumlast10 += pp.Second;  						dCount10++;  					}  				}  				dSum /= dCount;  				Console.WriteLine ("Average                  1% = " + ((int)(dSum)).ToString () + " dmg");  				if (dCount > 10) {  					dSumlast10 /= dCount10;  					Console.WriteLine ("Average last 10          1% = " + ((int)(dSumlast10)).ToString () + " dmg");  				}  				dCount = 0;  				dCount10 = 0;  				foreach (var el in sdMatr) {  					Pair2<int' double> pp = el.Value as Pair2<int' double>;  					if (pp.Second > dSum * 3)  						continue;  					dCount++;  					dWithoutPeaks += pp.Second;  					if (dCount + 10 > sdMatr.Count) {  						dWithoutPeakslast10 += pp.Second;  						dCount10++;  					}  				}  				dWithoutPeaks /= dCount;  				Console.WriteLine ("Average no peaks         1% = " + ((int)(dWithoutPeaks)).ToString () + " dmg");  				if (dCount > 10) {  					dWithoutPeakslast10 /= dCount10;  					Console.WriteLine ("Average no peaks last 10 1% = " + ((int)(dWithoutPeakslast10)).ToString () + " dmg");  				}  			}  		}  		sdOldFight.Clear ();  		foreach (var ff in sdFight) {  			sdOldFight.Add (ff.Key' ff.Value);  		}  		sdFight.Clear ();  		dOldDomination = dDomination;  	}  	else {  		sdFight.Clear ();  		Console.WriteLine (j.ToString () + " fights are same! Trying again!");  	}  	System.Threading.Thread.Sleep ((int)(dSec * 1000));  }  
Magic Number,BattleWatcher,MainForm,C:\repos\sasha237_NorthCitadel\BattleWatcher\MainForm.cs,Gobutton_Click,The following statement contains a magic number: while (true) {  	Console.WriteLine ("Step " + i.ToString ());  	int iSumm = 0;  	int iA = 0;  	int iD = 0;  	string Response = "";  	try {  		Response = httpClient.DownloadString ("http://www.erepublik.com/en/military/battle-log/" + sBattelId);  	}  	catch (System.Exception e1) {  		MessageBox.Show ("Wrong number");  		return;  	}  	bool bFlag = true;  	string sAttackers = "\"attackers\":";  	string sDefenders = "\"defenders\":";  	int iPos;  	int iAttk = Response.IndexOf (sAttackers);  	int iDef = Response.IndexOf (sDefenders);  	int j = 0;  	dDomination = double.Parse (Regex.Match (Response' "domination\":([0-9.]{1'9})").Groups [1].Value' CultureInfo.GetCultureInfo ("en-US").NumberFormat) / 100.0;  	Match mcD = Regex.Match (Response' "damage\":\"([0-9.]{1'9})\"");  	Match mcI = Regex.Match (Response' "id\":\"([0-9.]{1'9})\"");  	while (mcD.Success && mcI.Success) {  		int iDam = int.Parse (mcD.Groups [1].Value);  		int iId = int.Parse (mcI.Groups [1].Value);  		if (sdOldFight.ContainsKey (iId)) {  			j++;  			mcD = mcD.NextMatch ();  			mcI = mcI.NextMatch ();  			continue;  		}  		iSumm += iDam;  		if (mcD.Groups [1].Index > iAttk && mcD.Groups [1].Index < iDef)  			iA += iDam;  		else  			iD += iDam;  		sdFight.Add (iId' iDam);  		mcD = mcD.NextMatch ();  		mcI = mcI.NextMatch ();  	}  	if (j > 25) {  		bFlag = false;  	}  	if (bFlag) {  		i++;  		if (dOldDomination != 0) {  			if (dOldDomination != dDomination) {  				double dVal1 = Math.Abs (dDomination * dOldDomination / (dDomination - dOldDomination) * (iA / dDomination - iSumm));  				double dVal2 = Math.Abs (dDomination * dOldDomination / (dDomination - dOldDomination) * (iD / dDomination - iSumm));  				double dVal = dVal1 + dVal2;  				dVal /= 100.0;  				Console.WriteLine ("Current                  1% = " + ((int)(dVal)).ToString () + " dmg");  				sdMatr.Add (i' new Pair2<int' double> (Math.Abs (iSumm)' Math.Abs (dVal)));  			}  			if (sdMatr.Count != 0) {  				double dSum = 0;  				double dSumlast10 = 10;  				double dCount = 0;  				double dWithoutPeaks = 0;  				double dWithoutPeakslast10 = 0;  				double dCount10 = 0;  				foreach (var el in sdMatr) {  					Pair2<int' double> pp = el.Value as Pair2<int' double>;  					dCount++;  					dSum += pp.Second;  					if (dCount + 10 > sdMatr.Count) {  						dSumlast10 += pp.Second;  						dCount10++;  					}  				}  				dSum /= dCount;  				Console.WriteLine ("Average                  1% = " + ((int)(dSum)).ToString () + " dmg");  				if (dCount > 10) {  					dSumlast10 /= dCount10;  					Console.WriteLine ("Average last 10          1% = " + ((int)(dSumlast10)).ToString () + " dmg");  				}  				dCount = 0;  				dCount10 = 0;  				foreach (var el in sdMatr) {  					Pair2<int' double> pp = el.Value as Pair2<int' double>;  					if (pp.Second > dSum * 3)  						continue;  					dCount++;  					dWithoutPeaks += pp.Second;  					if (dCount + 10 > sdMatr.Count) {  						dWithoutPeakslast10 += pp.Second;  						dCount10++;  					}  				}  				dWithoutPeaks /= dCount;  				Console.WriteLine ("Average no peaks         1% = " + ((int)(dWithoutPeaks)).ToString () + " dmg");  				if (dCount > 10) {  					dWithoutPeakslast10 /= dCount10;  					Console.WriteLine ("Average no peaks last 10 1% = " + ((int)(dWithoutPeakslast10)).ToString () + " dmg");  				}  			}  		}  		sdOldFight.Clear ();  		foreach (var ff in sdFight) {  			sdOldFight.Add (ff.Key' ff.Value);  		}  		sdFight.Clear ();  		dOldDomination = dDomination;  	}  	else {  		sdFight.Clear ();  		Console.WriteLine (j.ToString () + " fights are same! Trying again!");  	}  	System.Threading.Thread.Sleep ((int)(dSec * 1000));  }  
Magic Number,BattleWatcher,MainForm,C:\repos\sasha237_NorthCitadel\BattleWatcher\MainForm.cs,Gobutton_Click,The following statement contains a magic number: while (true) {  	Console.WriteLine ("Step " + i.ToString ());  	int iSumm = 0;  	int iA = 0;  	int iD = 0;  	string Response = "";  	try {  		Response = httpClient.DownloadString ("http://www.erepublik.com/en/military/battle-log/" + sBattelId);  	}  	catch (System.Exception e1) {  		MessageBox.Show ("Wrong number");  		return;  	}  	bool bFlag = true;  	string sAttackers = "\"attackers\":";  	string sDefenders = "\"defenders\":";  	int iPos;  	int iAttk = Response.IndexOf (sAttackers);  	int iDef = Response.IndexOf (sDefenders);  	int j = 0;  	dDomination = double.Parse (Regex.Match (Response' "domination\":([0-9.]{1'9})").Groups [1].Value' CultureInfo.GetCultureInfo ("en-US").NumberFormat) / 100.0;  	Match mcD = Regex.Match (Response' "damage\":\"([0-9.]{1'9})\"");  	Match mcI = Regex.Match (Response' "id\":\"([0-9.]{1'9})\"");  	while (mcD.Success && mcI.Success) {  		int iDam = int.Parse (mcD.Groups [1].Value);  		int iId = int.Parse (mcI.Groups [1].Value);  		if (sdOldFight.ContainsKey (iId)) {  			j++;  			mcD = mcD.NextMatch ();  			mcI = mcI.NextMatch ();  			continue;  		}  		iSumm += iDam;  		if (mcD.Groups [1].Index > iAttk && mcD.Groups [1].Index < iDef)  			iA += iDam;  		else  			iD += iDam;  		sdFight.Add (iId' iDam);  		mcD = mcD.NextMatch ();  		mcI = mcI.NextMatch ();  	}  	if (j > 25) {  		bFlag = false;  	}  	if (bFlag) {  		i++;  		if (dOldDomination != 0) {  			if (dOldDomination != dDomination) {  				double dVal1 = Math.Abs (dDomination * dOldDomination / (dDomination - dOldDomination) * (iA / dDomination - iSumm));  				double dVal2 = Math.Abs (dDomination * dOldDomination / (dDomination - dOldDomination) * (iD / dDomination - iSumm));  				double dVal = dVal1 + dVal2;  				dVal /= 100.0;  				Console.WriteLine ("Current                  1% = " + ((int)(dVal)).ToString () + " dmg");  				sdMatr.Add (i' new Pair2<int' double> (Math.Abs (iSumm)' Math.Abs (dVal)));  			}  			if (sdMatr.Count != 0) {  				double dSum = 0;  				double dSumlast10 = 10;  				double dCount = 0;  				double dWithoutPeaks = 0;  				double dWithoutPeakslast10 = 0;  				double dCount10 = 0;  				foreach (var el in sdMatr) {  					Pair2<int' double> pp = el.Value as Pair2<int' double>;  					dCount++;  					dSum += pp.Second;  					if (dCount + 10 > sdMatr.Count) {  						dSumlast10 += pp.Second;  						dCount10++;  					}  				}  				dSum /= dCount;  				Console.WriteLine ("Average                  1% = " + ((int)(dSum)).ToString () + " dmg");  				if (dCount > 10) {  					dSumlast10 /= dCount10;  					Console.WriteLine ("Average last 10          1% = " + ((int)(dSumlast10)).ToString () + " dmg");  				}  				dCount = 0;  				dCount10 = 0;  				foreach (var el in sdMatr) {  					Pair2<int' double> pp = el.Value as Pair2<int' double>;  					if (pp.Second > dSum * 3)  						continue;  					dCount++;  					dWithoutPeaks += pp.Second;  					if (dCount + 10 > sdMatr.Count) {  						dWithoutPeakslast10 += pp.Second;  						dCount10++;  					}  				}  				dWithoutPeaks /= dCount;  				Console.WriteLine ("Average no peaks         1% = " + ((int)(dWithoutPeaks)).ToString () + " dmg");  				if (dCount > 10) {  					dWithoutPeakslast10 /= dCount10;  					Console.WriteLine ("Average no peaks last 10 1% = " + ((int)(dWithoutPeakslast10)).ToString () + " dmg");  				}  			}  		}  		sdOldFight.Clear ();  		foreach (var ff in sdFight) {  			sdOldFight.Add (ff.Key' ff.Value);  		}  		sdFight.Clear ();  		dOldDomination = dDomination;  	}  	else {  		sdFight.Clear ();  		Console.WriteLine (j.ToString () + " fights are same! Trying again!");  	}  	System.Threading.Thread.Sleep ((int)(dSec * 1000));  }  
Magic Number,BattleWatcher,MainForm,C:\repos\sasha237_NorthCitadel\BattleWatcher\MainForm.cs,Gobutton_Click,The following statement contains a magic number: while (true) {  	Console.WriteLine ("Step " + i.ToString ());  	int iSumm = 0;  	int iA = 0;  	int iD = 0;  	string Response = "";  	try {  		Response = httpClient.DownloadString ("http://www.erepublik.com/en/military/battle-log/" + sBattelId);  	}  	catch (System.Exception e1) {  		MessageBox.Show ("Wrong number");  		return;  	}  	bool bFlag = true;  	string sAttackers = "\"attackers\":";  	string sDefenders = "\"defenders\":";  	int iPos;  	int iAttk = Response.IndexOf (sAttackers);  	int iDef = Response.IndexOf (sDefenders);  	int j = 0;  	dDomination = double.Parse (Regex.Match (Response' "domination\":([0-9.]{1'9})").Groups [1].Value' CultureInfo.GetCultureInfo ("en-US").NumberFormat) / 100.0;  	Match mcD = Regex.Match (Response' "damage\":\"([0-9.]{1'9})\"");  	Match mcI = Regex.Match (Response' "id\":\"([0-9.]{1'9})\"");  	while (mcD.Success && mcI.Success) {  		int iDam = int.Parse (mcD.Groups [1].Value);  		int iId = int.Parse (mcI.Groups [1].Value);  		if (sdOldFight.ContainsKey (iId)) {  			j++;  			mcD = mcD.NextMatch ();  			mcI = mcI.NextMatch ();  			continue;  		}  		iSumm += iDam;  		if (mcD.Groups [1].Index > iAttk && mcD.Groups [1].Index < iDef)  			iA += iDam;  		else  			iD += iDam;  		sdFight.Add (iId' iDam);  		mcD = mcD.NextMatch ();  		mcI = mcI.NextMatch ();  	}  	if (j > 25) {  		bFlag = false;  	}  	if (bFlag) {  		i++;  		if (dOldDomination != 0) {  			if (dOldDomination != dDomination) {  				double dVal1 = Math.Abs (dDomination * dOldDomination / (dDomination - dOldDomination) * (iA / dDomination - iSumm));  				double dVal2 = Math.Abs (dDomination * dOldDomination / (dDomination - dOldDomination) * (iD / dDomination - iSumm));  				double dVal = dVal1 + dVal2;  				dVal /= 100.0;  				Console.WriteLine ("Current                  1% = " + ((int)(dVal)).ToString () + " dmg");  				sdMatr.Add (i' new Pair2<int' double> (Math.Abs (iSumm)' Math.Abs (dVal)));  			}  			if (sdMatr.Count != 0) {  				double dSum = 0;  				double dSumlast10 = 10;  				double dCount = 0;  				double dWithoutPeaks = 0;  				double dWithoutPeakslast10 = 0;  				double dCount10 = 0;  				foreach (var el in sdMatr) {  					Pair2<int' double> pp = el.Value as Pair2<int' double>;  					dCount++;  					dSum += pp.Second;  					if (dCount + 10 > sdMatr.Count) {  						dSumlast10 += pp.Second;  						dCount10++;  					}  				}  				dSum /= dCount;  				Console.WriteLine ("Average                  1% = " + ((int)(dSum)).ToString () + " dmg");  				if (dCount > 10) {  					dSumlast10 /= dCount10;  					Console.WriteLine ("Average last 10          1% = " + ((int)(dSumlast10)).ToString () + " dmg");  				}  				dCount = 0;  				dCount10 = 0;  				foreach (var el in sdMatr) {  					Pair2<int' double> pp = el.Value as Pair2<int' double>;  					if (pp.Second > dSum * 3)  						continue;  					dCount++;  					dWithoutPeaks += pp.Second;  					if (dCount + 10 > sdMatr.Count) {  						dWithoutPeakslast10 += pp.Second;  						dCount10++;  					}  				}  				dWithoutPeaks /= dCount;  				Console.WriteLine ("Average no peaks         1% = " + ((int)(dWithoutPeaks)).ToString () + " dmg");  				if (dCount > 10) {  					dWithoutPeakslast10 /= dCount10;  					Console.WriteLine ("Average no peaks last 10 1% = " + ((int)(dWithoutPeakslast10)).ToString () + " dmg");  				}  			}  		}  		sdOldFight.Clear ();  		foreach (var ff in sdFight) {  			sdOldFight.Add (ff.Key' ff.Value);  		}  		sdFight.Clear ();  		dOldDomination = dDomination;  	}  	else {  		sdFight.Clear ();  		Console.WriteLine (j.ToString () + " fights are same! Trying again!");  	}  	System.Threading.Thread.Sleep ((int)(dSec * 1000));  }  
Magic Number,BattleWatcher,MainForm,C:\repos\sasha237_NorthCitadel\BattleWatcher\MainForm.cs,Gobutton_Click,The following statement contains a magic number: while (true) {  	Console.WriteLine ("Step " + i.ToString ());  	int iSumm = 0;  	int iA = 0;  	int iD = 0;  	string Response = "";  	try {  		Response = httpClient.DownloadString ("http://www.erepublik.com/en/military/battle-log/" + sBattelId);  	}  	catch (System.Exception e1) {  		MessageBox.Show ("Wrong number");  		return;  	}  	bool bFlag = true;  	string sAttackers = "\"attackers\":";  	string sDefenders = "\"defenders\":";  	int iPos;  	int iAttk = Response.IndexOf (sAttackers);  	int iDef = Response.IndexOf (sDefenders);  	int j = 0;  	dDomination = double.Parse (Regex.Match (Response' "domination\":([0-9.]{1'9})").Groups [1].Value' CultureInfo.GetCultureInfo ("en-US").NumberFormat) / 100.0;  	Match mcD = Regex.Match (Response' "damage\":\"([0-9.]{1'9})\"");  	Match mcI = Regex.Match (Response' "id\":\"([0-9.]{1'9})\"");  	while (mcD.Success && mcI.Success) {  		int iDam = int.Parse (mcD.Groups [1].Value);  		int iId = int.Parse (mcI.Groups [1].Value);  		if (sdOldFight.ContainsKey (iId)) {  			j++;  			mcD = mcD.NextMatch ();  			mcI = mcI.NextMatch ();  			continue;  		}  		iSumm += iDam;  		if (mcD.Groups [1].Index > iAttk && mcD.Groups [1].Index < iDef)  			iA += iDam;  		else  			iD += iDam;  		sdFight.Add (iId' iDam);  		mcD = mcD.NextMatch ();  		mcI = mcI.NextMatch ();  	}  	if (j > 25) {  		bFlag = false;  	}  	if (bFlag) {  		i++;  		if (dOldDomination != 0) {  			if (dOldDomination != dDomination) {  				double dVal1 = Math.Abs (dDomination * dOldDomination / (dDomination - dOldDomination) * (iA / dDomination - iSumm));  				double dVal2 = Math.Abs (dDomination * dOldDomination / (dDomination - dOldDomination) * (iD / dDomination - iSumm));  				double dVal = dVal1 + dVal2;  				dVal /= 100.0;  				Console.WriteLine ("Current                  1% = " + ((int)(dVal)).ToString () + " dmg");  				sdMatr.Add (i' new Pair2<int' double> (Math.Abs (iSumm)' Math.Abs (dVal)));  			}  			if (sdMatr.Count != 0) {  				double dSum = 0;  				double dSumlast10 = 10;  				double dCount = 0;  				double dWithoutPeaks = 0;  				double dWithoutPeakslast10 = 0;  				double dCount10 = 0;  				foreach (var el in sdMatr) {  					Pair2<int' double> pp = el.Value as Pair2<int' double>;  					dCount++;  					dSum += pp.Second;  					if (dCount + 10 > sdMatr.Count) {  						dSumlast10 += pp.Second;  						dCount10++;  					}  				}  				dSum /= dCount;  				Console.WriteLine ("Average                  1% = " + ((int)(dSum)).ToString () + " dmg");  				if (dCount > 10) {  					dSumlast10 /= dCount10;  					Console.WriteLine ("Average last 10          1% = " + ((int)(dSumlast10)).ToString () + " dmg");  				}  				dCount = 0;  				dCount10 = 0;  				foreach (var el in sdMatr) {  					Pair2<int' double> pp = el.Value as Pair2<int' double>;  					if (pp.Second > dSum * 3)  						continue;  					dCount++;  					dWithoutPeaks += pp.Second;  					if (dCount + 10 > sdMatr.Count) {  						dWithoutPeakslast10 += pp.Second;  						dCount10++;  					}  				}  				dWithoutPeaks /= dCount;  				Console.WriteLine ("Average no peaks         1% = " + ((int)(dWithoutPeaks)).ToString () + " dmg");  				if (dCount > 10) {  					dWithoutPeakslast10 /= dCount10;  					Console.WriteLine ("Average no peaks last 10 1% = " + ((int)(dWithoutPeakslast10)).ToString () + " dmg");  				}  			}  		}  		sdOldFight.Clear ();  		foreach (var ff in sdFight) {  			sdOldFight.Add (ff.Key' ff.Value);  		}  		sdFight.Clear ();  		dOldDomination = dDomination;  	}  	else {  		sdFight.Clear ();  		Console.WriteLine (j.ToString () + " fights are same! Trying again!");  	}  	System.Threading.Thread.Sleep ((int)(dSec * 1000));  }  
Magic Number,BattleWatcher,MainForm,C:\repos\sasha237_NorthCitadel\BattleWatcher\MainForm.cs,Gobutton_Click,The following statement contains a magic number: dDomination = double.Parse (Regex.Match (Response' "domination\":([0-9.]{1'9})").Groups [1].Value' CultureInfo.GetCultureInfo ("en-US").NumberFormat) / 100.0;  
Magic Number,BattleWatcher,MainForm,C:\repos\sasha237_NorthCitadel\BattleWatcher\MainForm.cs,Gobutton_Click,The following statement contains a magic number: if (j > 25) {  	bFlag = false;  }  
Magic Number,BattleWatcher,MainForm,C:\repos\sasha237_NorthCitadel\BattleWatcher\MainForm.cs,Gobutton_Click,The following statement contains a magic number: if (bFlag) {  	i++;  	if (dOldDomination != 0) {  		if (dOldDomination != dDomination) {  			double dVal1 = Math.Abs (dDomination * dOldDomination / (dDomination - dOldDomination) * (iA / dDomination - iSumm));  			double dVal2 = Math.Abs (dDomination * dOldDomination / (dDomination - dOldDomination) * (iD / dDomination - iSumm));  			double dVal = dVal1 + dVal2;  			dVal /= 100.0;  			Console.WriteLine ("Current                  1% = " + ((int)(dVal)).ToString () + " dmg");  			sdMatr.Add (i' new Pair2<int' double> (Math.Abs (iSumm)' Math.Abs (dVal)));  		}  		if (sdMatr.Count != 0) {  			double dSum = 0;  			double dSumlast10 = 10;  			double dCount = 0;  			double dWithoutPeaks = 0;  			double dWithoutPeakslast10 = 0;  			double dCount10 = 0;  			foreach (var el in sdMatr) {  				Pair2<int' double> pp = el.Value as Pair2<int' double>;  				dCount++;  				dSum += pp.Second;  				if (dCount + 10 > sdMatr.Count) {  					dSumlast10 += pp.Second;  					dCount10++;  				}  			}  			dSum /= dCount;  			Console.WriteLine ("Average                  1% = " + ((int)(dSum)).ToString () + " dmg");  			if (dCount > 10) {  				dSumlast10 /= dCount10;  				Console.WriteLine ("Average last 10          1% = " + ((int)(dSumlast10)).ToString () + " dmg");  			}  			dCount = 0;  			dCount10 = 0;  			foreach (var el in sdMatr) {  				Pair2<int' double> pp = el.Value as Pair2<int' double>;  				if (pp.Second > dSum * 3)  					continue;  				dCount++;  				dWithoutPeaks += pp.Second;  				if (dCount + 10 > sdMatr.Count) {  					dWithoutPeakslast10 += pp.Second;  					dCount10++;  				}  			}  			dWithoutPeaks /= dCount;  			Console.WriteLine ("Average no peaks         1% = " + ((int)(dWithoutPeaks)).ToString () + " dmg");  			if (dCount > 10) {  				dWithoutPeakslast10 /= dCount10;  				Console.WriteLine ("Average no peaks last 10 1% = " + ((int)(dWithoutPeakslast10)).ToString () + " dmg");  			}  		}  	}  	sdOldFight.Clear ();  	foreach (var ff in sdFight) {  		sdOldFight.Add (ff.Key' ff.Value);  	}  	sdFight.Clear ();  	dOldDomination = dDomination;  }  else {  	sdFight.Clear ();  	Console.WriteLine (j.ToString () + " fights are same! Trying again!");  }  
Magic Number,BattleWatcher,MainForm,C:\repos\sasha237_NorthCitadel\BattleWatcher\MainForm.cs,Gobutton_Click,The following statement contains a magic number: if (bFlag) {  	i++;  	if (dOldDomination != 0) {  		if (dOldDomination != dDomination) {  			double dVal1 = Math.Abs (dDomination * dOldDomination / (dDomination - dOldDomination) * (iA / dDomination - iSumm));  			double dVal2 = Math.Abs (dDomination * dOldDomination / (dDomination - dOldDomination) * (iD / dDomination - iSumm));  			double dVal = dVal1 + dVal2;  			dVal /= 100.0;  			Console.WriteLine ("Current                  1% = " + ((int)(dVal)).ToString () + " dmg");  			sdMatr.Add (i' new Pair2<int' double> (Math.Abs (iSumm)' Math.Abs (dVal)));  		}  		if (sdMatr.Count != 0) {  			double dSum = 0;  			double dSumlast10 = 10;  			double dCount = 0;  			double dWithoutPeaks = 0;  			double dWithoutPeakslast10 = 0;  			double dCount10 = 0;  			foreach (var el in sdMatr) {  				Pair2<int' double> pp = el.Value as Pair2<int' double>;  				dCount++;  				dSum += pp.Second;  				if (dCount + 10 > sdMatr.Count) {  					dSumlast10 += pp.Second;  					dCount10++;  				}  			}  			dSum /= dCount;  			Console.WriteLine ("Average                  1% = " + ((int)(dSum)).ToString () + " dmg");  			if (dCount > 10) {  				dSumlast10 /= dCount10;  				Console.WriteLine ("Average last 10          1% = " + ((int)(dSumlast10)).ToString () + " dmg");  			}  			dCount = 0;  			dCount10 = 0;  			foreach (var el in sdMatr) {  				Pair2<int' double> pp = el.Value as Pair2<int' double>;  				if (pp.Second > dSum * 3)  					continue;  				dCount++;  				dWithoutPeaks += pp.Second;  				if (dCount + 10 > sdMatr.Count) {  					dWithoutPeakslast10 += pp.Second;  					dCount10++;  				}  			}  			dWithoutPeaks /= dCount;  			Console.WriteLine ("Average no peaks         1% = " + ((int)(dWithoutPeaks)).ToString () + " dmg");  			if (dCount > 10) {  				dWithoutPeakslast10 /= dCount10;  				Console.WriteLine ("Average no peaks last 10 1% = " + ((int)(dWithoutPeakslast10)).ToString () + " dmg");  			}  		}  	}  	sdOldFight.Clear ();  	foreach (var ff in sdFight) {  		sdOldFight.Add (ff.Key' ff.Value);  	}  	sdFight.Clear ();  	dOldDomination = dDomination;  }  else {  	sdFight.Clear ();  	Console.WriteLine (j.ToString () + " fights are same! Trying again!");  }  
Magic Number,BattleWatcher,MainForm,C:\repos\sasha237_NorthCitadel\BattleWatcher\MainForm.cs,Gobutton_Click,The following statement contains a magic number: if (bFlag) {  	i++;  	if (dOldDomination != 0) {  		if (dOldDomination != dDomination) {  			double dVal1 = Math.Abs (dDomination * dOldDomination / (dDomination - dOldDomination) * (iA / dDomination - iSumm));  			double dVal2 = Math.Abs (dDomination * dOldDomination / (dDomination - dOldDomination) * (iD / dDomination - iSumm));  			double dVal = dVal1 + dVal2;  			dVal /= 100.0;  			Console.WriteLine ("Current                  1% = " + ((int)(dVal)).ToString () + " dmg");  			sdMatr.Add (i' new Pair2<int' double> (Math.Abs (iSumm)' Math.Abs (dVal)));  		}  		if (sdMatr.Count != 0) {  			double dSum = 0;  			double dSumlast10 = 10;  			double dCount = 0;  			double dWithoutPeaks = 0;  			double dWithoutPeakslast10 = 0;  			double dCount10 = 0;  			foreach (var el in sdMatr) {  				Pair2<int' double> pp = el.Value as Pair2<int' double>;  				dCount++;  				dSum += pp.Second;  				if (dCount + 10 > sdMatr.Count) {  					dSumlast10 += pp.Second;  					dCount10++;  				}  			}  			dSum /= dCount;  			Console.WriteLine ("Average                  1% = " + ((int)(dSum)).ToString () + " dmg");  			if (dCount > 10) {  				dSumlast10 /= dCount10;  				Console.WriteLine ("Average last 10          1% = " + ((int)(dSumlast10)).ToString () + " dmg");  			}  			dCount = 0;  			dCount10 = 0;  			foreach (var el in sdMatr) {  				Pair2<int' double> pp = el.Value as Pair2<int' double>;  				if (pp.Second > dSum * 3)  					continue;  				dCount++;  				dWithoutPeaks += pp.Second;  				if (dCount + 10 > sdMatr.Count) {  					dWithoutPeakslast10 += pp.Second;  					dCount10++;  				}  			}  			dWithoutPeaks /= dCount;  			Console.WriteLine ("Average no peaks         1% = " + ((int)(dWithoutPeaks)).ToString () + " dmg");  			if (dCount > 10) {  				dWithoutPeakslast10 /= dCount10;  				Console.WriteLine ("Average no peaks last 10 1% = " + ((int)(dWithoutPeakslast10)).ToString () + " dmg");  			}  		}  	}  	sdOldFight.Clear ();  	foreach (var ff in sdFight) {  		sdOldFight.Add (ff.Key' ff.Value);  	}  	sdFight.Clear ();  	dOldDomination = dDomination;  }  else {  	sdFight.Clear ();  	Console.WriteLine (j.ToString () + " fights are same! Trying again!");  }  
Magic Number,BattleWatcher,MainForm,C:\repos\sasha237_NorthCitadel\BattleWatcher\MainForm.cs,Gobutton_Click,The following statement contains a magic number: if (bFlag) {  	i++;  	if (dOldDomination != 0) {  		if (dOldDomination != dDomination) {  			double dVal1 = Math.Abs (dDomination * dOldDomination / (dDomination - dOldDomination) * (iA / dDomination - iSumm));  			double dVal2 = Math.Abs (dDomination * dOldDomination / (dDomination - dOldDomination) * (iD / dDomination - iSumm));  			double dVal = dVal1 + dVal2;  			dVal /= 100.0;  			Console.WriteLine ("Current                  1% = " + ((int)(dVal)).ToString () + " dmg");  			sdMatr.Add (i' new Pair2<int' double> (Math.Abs (iSumm)' Math.Abs (dVal)));  		}  		if (sdMatr.Count != 0) {  			double dSum = 0;  			double dSumlast10 = 10;  			double dCount = 0;  			double dWithoutPeaks = 0;  			double dWithoutPeakslast10 = 0;  			double dCount10 = 0;  			foreach (var el in sdMatr) {  				Pair2<int' double> pp = el.Value as Pair2<int' double>;  				dCount++;  				dSum += pp.Second;  				if (dCount + 10 > sdMatr.Count) {  					dSumlast10 += pp.Second;  					dCount10++;  				}  			}  			dSum /= dCount;  			Console.WriteLine ("Average                  1% = " + ((int)(dSum)).ToString () + " dmg");  			if (dCount > 10) {  				dSumlast10 /= dCount10;  				Console.WriteLine ("Average last 10          1% = " + ((int)(dSumlast10)).ToString () + " dmg");  			}  			dCount = 0;  			dCount10 = 0;  			foreach (var el in sdMatr) {  				Pair2<int' double> pp = el.Value as Pair2<int' double>;  				if (pp.Second > dSum * 3)  					continue;  				dCount++;  				dWithoutPeaks += pp.Second;  				if (dCount + 10 > sdMatr.Count) {  					dWithoutPeakslast10 += pp.Second;  					dCount10++;  				}  			}  			dWithoutPeaks /= dCount;  			Console.WriteLine ("Average no peaks         1% = " + ((int)(dWithoutPeaks)).ToString () + " dmg");  			if (dCount > 10) {  				dWithoutPeakslast10 /= dCount10;  				Console.WriteLine ("Average no peaks last 10 1% = " + ((int)(dWithoutPeakslast10)).ToString () + " dmg");  			}  		}  	}  	sdOldFight.Clear ();  	foreach (var ff in sdFight) {  		sdOldFight.Add (ff.Key' ff.Value);  	}  	sdFight.Clear ();  	dOldDomination = dDomination;  }  else {  	sdFight.Clear ();  	Console.WriteLine (j.ToString () + " fights are same! Trying again!");  }  
Magic Number,BattleWatcher,MainForm,C:\repos\sasha237_NorthCitadel\BattleWatcher\MainForm.cs,Gobutton_Click,The following statement contains a magic number: if (bFlag) {  	i++;  	if (dOldDomination != 0) {  		if (dOldDomination != dDomination) {  			double dVal1 = Math.Abs (dDomination * dOldDomination / (dDomination - dOldDomination) * (iA / dDomination - iSumm));  			double dVal2 = Math.Abs (dDomination * dOldDomination / (dDomination - dOldDomination) * (iD / dDomination - iSumm));  			double dVal = dVal1 + dVal2;  			dVal /= 100.0;  			Console.WriteLine ("Current                  1% = " + ((int)(dVal)).ToString () + " dmg");  			sdMatr.Add (i' new Pair2<int' double> (Math.Abs (iSumm)' Math.Abs (dVal)));  		}  		if (sdMatr.Count != 0) {  			double dSum = 0;  			double dSumlast10 = 10;  			double dCount = 0;  			double dWithoutPeaks = 0;  			double dWithoutPeakslast10 = 0;  			double dCount10 = 0;  			foreach (var el in sdMatr) {  				Pair2<int' double> pp = el.Value as Pair2<int' double>;  				dCount++;  				dSum += pp.Second;  				if (dCount + 10 > sdMatr.Count) {  					dSumlast10 += pp.Second;  					dCount10++;  				}  			}  			dSum /= dCount;  			Console.WriteLine ("Average                  1% = " + ((int)(dSum)).ToString () + " dmg");  			if (dCount > 10) {  				dSumlast10 /= dCount10;  				Console.WriteLine ("Average last 10          1% = " + ((int)(dSumlast10)).ToString () + " dmg");  			}  			dCount = 0;  			dCount10 = 0;  			foreach (var el in sdMatr) {  				Pair2<int' double> pp = el.Value as Pair2<int' double>;  				if (pp.Second > dSum * 3)  					continue;  				dCount++;  				dWithoutPeaks += pp.Second;  				if (dCount + 10 > sdMatr.Count) {  					dWithoutPeakslast10 += pp.Second;  					dCount10++;  				}  			}  			dWithoutPeaks /= dCount;  			Console.WriteLine ("Average no peaks         1% = " + ((int)(dWithoutPeaks)).ToString () + " dmg");  			if (dCount > 10) {  				dWithoutPeakslast10 /= dCount10;  				Console.WriteLine ("Average no peaks last 10 1% = " + ((int)(dWithoutPeakslast10)).ToString () + " dmg");  			}  		}  	}  	sdOldFight.Clear ();  	foreach (var ff in sdFight) {  		sdOldFight.Add (ff.Key' ff.Value);  	}  	sdFight.Clear ();  	dOldDomination = dDomination;  }  else {  	sdFight.Clear ();  	Console.WriteLine (j.ToString () + " fights are same! Trying again!");  }  
Magic Number,BattleWatcher,MainForm,C:\repos\sasha237_NorthCitadel\BattleWatcher\MainForm.cs,Gobutton_Click,The following statement contains a magic number: if (bFlag) {  	i++;  	if (dOldDomination != 0) {  		if (dOldDomination != dDomination) {  			double dVal1 = Math.Abs (dDomination * dOldDomination / (dDomination - dOldDomination) * (iA / dDomination - iSumm));  			double dVal2 = Math.Abs (dDomination * dOldDomination / (dDomination - dOldDomination) * (iD / dDomination - iSumm));  			double dVal = dVal1 + dVal2;  			dVal /= 100.0;  			Console.WriteLine ("Current                  1% = " + ((int)(dVal)).ToString () + " dmg");  			sdMatr.Add (i' new Pair2<int' double> (Math.Abs (iSumm)' Math.Abs (dVal)));  		}  		if (sdMatr.Count != 0) {  			double dSum = 0;  			double dSumlast10 = 10;  			double dCount = 0;  			double dWithoutPeaks = 0;  			double dWithoutPeakslast10 = 0;  			double dCount10 = 0;  			foreach (var el in sdMatr) {  				Pair2<int' double> pp = el.Value as Pair2<int' double>;  				dCount++;  				dSum += pp.Second;  				if (dCount + 10 > sdMatr.Count) {  					dSumlast10 += pp.Second;  					dCount10++;  				}  			}  			dSum /= dCount;  			Console.WriteLine ("Average                  1% = " + ((int)(dSum)).ToString () + " dmg");  			if (dCount > 10) {  				dSumlast10 /= dCount10;  				Console.WriteLine ("Average last 10          1% = " + ((int)(dSumlast10)).ToString () + " dmg");  			}  			dCount = 0;  			dCount10 = 0;  			foreach (var el in sdMatr) {  				Pair2<int' double> pp = el.Value as Pair2<int' double>;  				if (pp.Second > dSum * 3)  					continue;  				dCount++;  				dWithoutPeaks += pp.Second;  				if (dCount + 10 > sdMatr.Count) {  					dWithoutPeakslast10 += pp.Second;  					dCount10++;  				}  			}  			dWithoutPeaks /= dCount;  			Console.WriteLine ("Average no peaks         1% = " + ((int)(dWithoutPeaks)).ToString () + " dmg");  			if (dCount > 10) {  				dWithoutPeakslast10 /= dCount10;  				Console.WriteLine ("Average no peaks last 10 1% = " + ((int)(dWithoutPeakslast10)).ToString () + " dmg");  			}  		}  	}  	sdOldFight.Clear ();  	foreach (var ff in sdFight) {  		sdOldFight.Add (ff.Key' ff.Value);  	}  	sdFight.Clear ();  	dOldDomination = dDomination;  }  else {  	sdFight.Clear ();  	Console.WriteLine (j.ToString () + " fights are same! Trying again!");  }  
Magic Number,BattleWatcher,MainForm,C:\repos\sasha237_NorthCitadel\BattleWatcher\MainForm.cs,Gobutton_Click,The following statement contains a magic number: if (bFlag) {  	i++;  	if (dOldDomination != 0) {  		if (dOldDomination != dDomination) {  			double dVal1 = Math.Abs (dDomination * dOldDomination / (dDomination - dOldDomination) * (iA / dDomination - iSumm));  			double dVal2 = Math.Abs (dDomination * dOldDomination / (dDomination - dOldDomination) * (iD / dDomination - iSumm));  			double dVal = dVal1 + dVal2;  			dVal /= 100.0;  			Console.WriteLine ("Current                  1% = " + ((int)(dVal)).ToString () + " dmg");  			sdMatr.Add (i' new Pair2<int' double> (Math.Abs (iSumm)' Math.Abs (dVal)));  		}  		if (sdMatr.Count != 0) {  			double dSum = 0;  			double dSumlast10 = 10;  			double dCount = 0;  			double dWithoutPeaks = 0;  			double dWithoutPeakslast10 = 0;  			double dCount10 = 0;  			foreach (var el in sdMatr) {  				Pair2<int' double> pp = el.Value as Pair2<int' double>;  				dCount++;  				dSum += pp.Second;  				if (dCount + 10 > sdMatr.Count) {  					dSumlast10 += pp.Second;  					dCount10++;  				}  			}  			dSum /= dCount;  			Console.WriteLine ("Average                  1% = " + ((int)(dSum)).ToString () + " dmg");  			if (dCount > 10) {  				dSumlast10 /= dCount10;  				Console.WriteLine ("Average last 10          1% = " + ((int)(dSumlast10)).ToString () + " dmg");  			}  			dCount = 0;  			dCount10 = 0;  			foreach (var el in sdMatr) {  				Pair2<int' double> pp = el.Value as Pair2<int' double>;  				if (pp.Second > dSum * 3)  					continue;  				dCount++;  				dWithoutPeaks += pp.Second;  				if (dCount + 10 > sdMatr.Count) {  					dWithoutPeakslast10 += pp.Second;  					dCount10++;  				}  			}  			dWithoutPeaks /= dCount;  			Console.WriteLine ("Average no peaks         1% = " + ((int)(dWithoutPeaks)).ToString () + " dmg");  			if (dCount > 10) {  				dWithoutPeakslast10 /= dCount10;  				Console.WriteLine ("Average no peaks last 10 1% = " + ((int)(dWithoutPeakslast10)).ToString () + " dmg");  			}  		}  	}  	sdOldFight.Clear ();  	foreach (var ff in sdFight) {  		sdOldFight.Add (ff.Key' ff.Value);  	}  	sdFight.Clear ();  	dOldDomination = dDomination;  }  else {  	sdFight.Clear ();  	Console.WriteLine (j.ToString () + " fights are same! Trying again!");  }  
Magic Number,BattleWatcher,MainForm,C:\repos\sasha237_NorthCitadel\BattleWatcher\MainForm.cs,Gobutton_Click,The following statement contains a magic number: if (dOldDomination != 0) {  	if (dOldDomination != dDomination) {  		double dVal1 = Math.Abs (dDomination * dOldDomination / (dDomination - dOldDomination) * (iA / dDomination - iSumm));  		double dVal2 = Math.Abs (dDomination * dOldDomination / (dDomination - dOldDomination) * (iD / dDomination - iSumm));  		double dVal = dVal1 + dVal2;  		dVal /= 100.0;  		Console.WriteLine ("Current                  1% = " + ((int)(dVal)).ToString () + " dmg");  		sdMatr.Add (i' new Pair2<int' double> (Math.Abs (iSumm)' Math.Abs (dVal)));  	}  	if (sdMatr.Count != 0) {  		double dSum = 0;  		double dSumlast10 = 10;  		double dCount = 0;  		double dWithoutPeaks = 0;  		double dWithoutPeakslast10 = 0;  		double dCount10 = 0;  		foreach (var el in sdMatr) {  			Pair2<int' double> pp = el.Value as Pair2<int' double>;  			dCount++;  			dSum += pp.Second;  			if (dCount + 10 > sdMatr.Count) {  				dSumlast10 += pp.Second;  				dCount10++;  			}  		}  		dSum /= dCount;  		Console.WriteLine ("Average                  1% = " + ((int)(dSum)).ToString () + " dmg");  		if (dCount > 10) {  			dSumlast10 /= dCount10;  			Console.WriteLine ("Average last 10          1% = " + ((int)(dSumlast10)).ToString () + " dmg");  		}  		dCount = 0;  		dCount10 = 0;  		foreach (var el in sdMatr) {  			Pair2<int' double> pp = el.Value as Pair2<int' double>;  			if (pp.Second > dSum * 3)  				continue;  			dCount++;  			dWithoutPeaks += pp.Second;  			if (dCount + 10 > sdMatr.Count) {  				dWithoutPeakslast10 += pp.Second;  				dCount10++;  			}  		}  		dWithoutPeaks /= dCount;  		Console.WriteLine ("Average no peaks         1% = " + ((int)(dWithoutPeaks)).ToString () + " dmg");  		if (dCount > 10) {  			dWithoutPeakslast10 /= dCount10;  			Console.WriteLine ("Average no peaks last 10 1% = " + ((int)(dWithoutPeakslast10)).ToString () + " dmg");  		}  	}  }  
Magic Number,BattleWatcher,MainForm,C:\repos\sasha237_NorthCitadel\BattleWatcher\MainForm.cs,Gobutton_Click,The following statement contains a magic number: if (dOldDomination != 0) {  	if (dOldDomination != dDomination) {  		double dVal1 = Math.Abs (dDomination * dOldDomination / (dDomination - dOldDomination) * (iA / dDomination - iSumm));  		double dVal2 = Math.Abs (dDomination * dOldDomination / (dDomination - dOldDomination) * (iD / dDomination - iSumm));  		double dVal = dVal1 + dVal2;  		dVal /= 100.0;  		Console.WriteLine ("Current                  1% = " + ((int)(dVal)).ToString () + " dmg");  		sdMatr.Add (i' new Pair2<int' double> (Math.Abs (iSumm)' Math.Abs (dVal)));  	}  	if (sdMatr.Count != 0) {  		double dSum = 0;  		double dSumlast10 = 10;  		double dCount = 0;  		double dWithoutPeaks = 0;  		double dWithoutPeakslast10 = 0;  		double dCount10 = 0;  		foreach (var el in sdMatr) {  			Pair2<int' double> pp = el.Value as Pair2<int' double>;  			dCount++;  			dSum += pp.Second;  			if (dCount + 10 > sdMatr.Count) {  				dSumlast10 += pp.Second;  				dCount10++;  			}  		}  		dSum /= dCount;  		Console.WriteLine ("Average                  1% = " + ((int)(dSum)).ToString () + " dmg");  		if (dCount > 10) {  			dSumlast10 /= dCount10;  			Console.WriteLine ("Average last 10          1% = " + ((int)(dSumlast10)).ToString () + " dmg");  		}  		dCount = 0;  		dCount10 = 0;  		foreach (var el in sdMatr) {  			Pair2<int' double> pp = el.Value as Pair2<int' double>;  			if (pp.Second > dSum * 3)  				continue;  			dCount++;  			dWithoutPeaks += pp.Second;  			if (dCount + 10 > sdMatr.Count) {  				dWithoutPeakslast10 += pp.Second;  				dCount10++;  			}  		}  		dWithoutPeaks /= dCount;  		Console.WriteLine ("Average no peaks         1% = " + ((int)(dWithoutPeaks)).ToString () + " dmg");  		if (dCount > 10) {  			dWithoutPeakslast10 /= dCount10;  			Console.WriteLine ("Average no peaks last 10 1% = " + ((int)(dWithoutPeakslast10)).ToString () + " dmg");  		}  	}  }  
Magic Number,BattleWatcher,MainForm,C:\repos\sasha237_NorthCitadel\BattleWatcher\MainForm.cs,Gobutton_Click,The following statement contains a magic number: if (dOldDomination != 0) {  	if (dOldDomination != dDomination) {  		double dVal1 = Math.Abs (dDomination * dOldDomination / (dDomination - dOldDomination) * (iA / dDomination - iSumm));  		double dVal2 = Math.Abs (dDomination * dOldDomination / (dDomination - dOldDomination) * (iD / dDomination - iSumm));  		double dVal = dVal1 + dVal2;  		dVal /= 100.0;  		Console.WriteLine ("Current                  1% = " + ((int)(dVal)).ToString () + " dmg");  		sdMatr.Add (i' new Pair2<int' double> (Math.Abs (iSumm)' Math.Abs (dVal)));  	}  	if (sdMatr.Count != 0) {  		double dSum = 0;  		double dSumlast10 = 10;  		double dCount = 0;  		double dWithoutPeaks = 0;  		double dWithoutPeakslast10 = 0;  		double dCount10 = 0;  		foreach (var el in sdMatr) {  			Pair2<int' double> pp = el.Value as Pair2<int' double>;  			dCount++;  			dSum += pp.Second;  			if (dCount + 10 > sdMatr.Count) {  				dSumlast10 += pp.Second;  				dCount10++;  			}  		}  		dSum /= dCount;  		Console.WriteLine ("Average                  1% = " + ((int)(dSum)).ToString () + " dmg");  		if (dCount > 10) {  			dSumlast10 /= dCount10;  			Console.WriteLine ("Average last 10          1% = " + ((int)(dSumlast10)).ToString () + " dmg");  		}  		dCount = 0;  		dCount10 = 0;  		foreach (var el in sdMatr) {  			Pair2<int' double> pp = el.Value as Pair2<int' double>;  			if (pp.Second > dSum * 3)  				continue;  			dCount++;  			dWithoutPeaks += pp.Second;  			if (dCount + 10 > sdMatr.Count) {  				dWithoutPeakslast10 += pp.Second;  				dCount10++;  			}  		}  		dWithoutPeaks /= dCount;  		Console.WriteLine ("Average no peaks         1% = " + ((int)(dWithoutPeaks)).ToString () + " dmg");  		if (dCount > 10) {  			dWithoutPeakslast10 /= dCount10;  			Console.WriteLine ("Average no peaks last 10 1% = " + ((int)(dWithoutPeakslast10)).ToString () + " dmg");  		}  	}  }  
Magic Number,BattleWatcher,MainForm,C:\repos\sasha237_NorthCitadel\BattleWatcher\MainForm.cs,Gobutton_Click,The following statement contains a magic number: if (dOldDomination != 0) {  	if (dOldDomination != dDomination) {  		double dVal1 = Math.Abs (dDomination * dOldDomination / (dDomination - dOldDomination) * (iA / dDomination - iSumm));  		double dVal2 = Math.Abs (dDomination * dOldDomination / (dDomination - dOldDomination) * (iD / dDomination - iSumm));  		double dVal = dVal1 + dVal2;  		dVal /= 100.0;  		Console.WriteLine ("Current                  1% = " + ((int)(dVal)).ToString () + " dmg");  		sdMatr.Add (i' new Pair2<int' double> (Math.Abs (iSumm)' Math.Abs (dVal)));  	}  	if (sdMatr.Count != 0) {  		double dSum = 0;  		double dSumlast10 = 10;  		double dCount = 0;  		double dWithoutPeaks = 0;  		double dWithoutPeakslast10 = 0;  		double dCount10 = 0;  		foreach (var el in sdMatr) {  			Pair2<int' double> pp = el.Value as Pair2<int' double>;  			dCount++;  			dSum += pp.Second;  			if (dCount + 10 > sdMatr.Count) {  				dSumlast10 += pp.Second;  				dCount10++;  			}  		}  		dSum /= dCount;  		Console.WriteLine ("Average                  1% = " + ((int)(dSum)).ToString () + " dmg");  		if (dCount > 10) {  			dSumlast10 /= dCount10;  			Console.WriteLine ("Average last 10          1% = " + ((int)(dSumlast10)).ToString () + " dmg");  		}  		dCount = 0;  		dCount10 = 0;  		foreach (var el in sdMatr) {  			Pair2<int' double> pp = el.Value as Pair2<int' double>;  			if (pp.Second > dSum * 3)  				continue;  			dCount++;  			dWithoutPeaks += pp.Second;  			if (dCount + 10 > sdMatr.Count) {  				dWithoutPeakslast10 += pp.Second;  				dCount10++;  			}  		}  		dWithoutPeaks /= dCount;  		Console.WriteLine ("Average no peaks         1% = " + ((int)(dWithoutPeaks)).ToString () + " dmg");  		if (dCount > 10) {  			dWithoutPeakslast10 /= dCount10;  			Console.WriteLine ("Average no peaks last 10 1% = " + ((int)(dWithoutPeakslast10)).ToString () + " dmg");  		}  	}  }  
Magic Number,BattleWatcher,MainForm,C:\repos\sasha237_NorthCitadel\BattleWatcher\MainForm.cs,Gobutton_Click,The following statement contains a magic number: if (dOldDomination != 0) {  	if (dOldDomination != dDomination) {  		double dVal1 = Math.Abs (dDomination * dOldDomination / (dDomination - dOldDomination) * (iA / dDomination - iSumm));  		double dVal2 = Math.Abs (dDomination * dOldDomination / (dDomination - dOldDomination) * (iD / dDomination - iSumm));  		double dVal = dVal1 + dVal2;  		dVal /= 100.0;  		Console.WriteLine ("Current                  1% = " + ((int)(dVal)).ToString () + " dmg");  		sdMatr.Add (i' new Pair2<int' double> (Math.Abs (iSumm)' Math.Abs (dVal)));  	}  	if (sdMatr.Count != 0) {  		double dSum = 0;  		double dSumlast10 = 10;  		double dCount = 0;  		double dWithoutPeaks = 0;  		double dWithoutPeakslast10 = 0;  		double dCount10 = 0;  		foreach (var el in sdMatr) {  			Pair2<int' double> pp = el.Value as Pair2<int' double>;  			dCount++;  			dSum += pp.Second;  			if (dCount + 10 > sdMatr.Count) {  				dSumlast10 += pp.Second;  				dCount10++;  			}  		}  		dSum /= dCount;  		Console.WriteLine ("Average                  1% = " + ((int)(dSum)).ToString () + " dmg");  		if (dCount > 10) {  			dSumlast10 /= dCount10;  			Console.WriteLine ("Average last 10          1% = " + ((int)(dSumlast10)).ToString () + " dmg");  		}  		dCount = 0;  		dCount10 = 0;  		foreach (var el in sdMatr) {  			Pair2<int' double> pp = el.Value as Pair2<int' double>;  			if (pp.Second > dSum * 3)  				continue;  			dCount++;  			dWithoutPeaks += pp.Second;  			if (dCount + 10 > sdMatr.Count) {  				dWithoutPeakslast10 += pp.Second;  				dCount10++;  			}  		}  		dWithoutPeaks /= dCount;  		Console.WriteLine ("Average no peaks         1% = " + ((int)(dWithoutPeaks)).ToString () + " dmg");  		if (dCount > 10) {  			dWithoutPeakslast10 /= dCount10;  			Console.WriteLine ("Average no peaks last 10 1% = " + ((int)(dWithoutPeakslast10)).ToString () + " dmg");  		}  	}  }  
Magic Number,BattleWatcher,MainForm,C:\repos\sasha237_NorthCitadel\BattleWatcher\MainForm.cs,Gobutton_Click,The following statement contains a magic number: if (dOldDomination != 0) {  	if (dOldDomination != dDomination) {  		double dVal1 = Math.Abs (dDomination * dOldDomination / (dDomination - dOldDomination) * (iA / dDomination - iSumm));  		double dVal2 = Math.Abs (dDomination * dOldDomination / (dDomination - dOldDomination) * (iD / dDomination - iSumm));  		double dVal = dVal1 + dVal2;  		dVal /= 100.0;  		Console.WriteLine ("Current                  1% = " + ((int)(dVal)).ToString () + " dmg");  		sdMatr.Add (i' new Pair2<int' double> (Math.Abs (iSumm)' Math.Abs (dVal)));  	}  	if (sdMatr.Count != 0) {  		double dSum = 0;  		double dSumlast10 = 10;  		double dCount = 0;  		double dWithoutPeaks = 0;  		double dWithoutPeakslast10 = 0;  		double dCount10 = 0;  		foreach (var el in sdMatr) {  			Pair2<int' double> pp = el.Value as Pair2<int' double>;  			dCount++;  			dSum += pp.Second;  			if (dCount + 10 > sdMatr.Count) {  				dSumlast10 += pp.Second;  				dCount10++;  			}  		}  		dSum /= dCount;  		Console.WriteLine ("Average                  1% = " + ((int)(dSum)).ToString () + " dmg");  		if (dCount > 10) {  			dSumlast10 /= dCount10;  			Console.WriteLine ("Average last 10          1% = " + ((int)(dSumlast10)).ToString () + " dmg");  		}  		dCount = 0;  		dCount10 = 0;  		foreach (var el in sdMatr) {  			Pair2<int' double> pp = el.Value as Pair2<int' double>;  			if (pp.Second > dSum * 3)  				continue;  			dCount++;  			dWithoutPeaks += pp.Second;  			if (dCount + 10 > sdMatr.Count) {  				dWithoutPeakslast10 += pp.Second;  				dCount10++;  			}  		}  		dWithoutPeaks /= dCount;  		Console.WriteLine ("Average no peaks         1% = " + ((int)(dWithoutPeaks)).ToString () + " dmg");  		if (dCount > 10) {  			dWithoutPeakslast10 /= dCount10;  			Console.WriteLine ("Average no peaks last 10 1% = " + ((int)(dWithoutPeakslast10)).ToString () + " dmg");  		}  	}  }  
Magic Number,BattleWatcher,MainForm,C:\repos\sasha237_NorthCitadel\BattleWatcher\MainForm.cs,Gobutton_Click,The following statement contains a magic number: if (dOldDomination != 0) {  	if (dOldDomination != dDomination) {  		double dVal1 = Math.Abs (dDomination * dOldDomination / (dDomination - dOldDomination) * (iA / dDomination - iSumm));  		double dVal2 = Math.Abs (dDomination * dOldDomination / (dDomination - dOldDomination) * (iD / dDomination - iSumm));  		double dVal = dVal1 + dVal2;  		dVal /= 100.0;  		Console.WriteLine ("Current                  1% = " + ((int)(dVal)).ToString () + " dmg");  		sdMatr.Add (i' new Pair2<int' double> (Math.Abs (iSumm)' Math.Abs (dVal)));  	}  	if (sdMatr.Count != 0) {  		double dSum = 0;  		double dSumlast10 = 10;  		double dCount = 0;  		double dWithoutPeaks = 0;  		double dWithoutPeakslast10 = 0;  		double dCount10 = 0;  		foreach (var el in sdMatr) {  			Pair2<int' double> pp = el.Value as Pair2<int' double>;  			dCount++;  			dSum += pp.Second;  			if (dCount + 10 > sdMatr.Count) {  				dSumlast10 += pp.Second;  				dCount10++;  			}  		}  		dSum /= dCount;  		Console.WriteLine ("Average                  1% = " + ((int)(dSum)).ToString () + " dmg");  		if (dCount > 10) {  			dSumlast10 /= dCount10;  			Console.WriteLine ("Average last 10          1% = " + ((int)(dSumlast10)).ToString () + " dmg");  		}  		dCount = 0;  		dCount10 = 0;  		foreach (var el in sdMatr) {  			Pair2<int' double> pp = el.Value as Pair2<int' double>;  			if (pp.Second > dSum * 3)  				continue;  			dCount++;  			dWithoutPeaks += pp.Second;  			if (dCount + 10 > sdMatr.Count) {  				dWithoutPeakslast10 += pp.Second;  				dCount10++;  			}  		}  		dWithoutPeaks /= dCount;  		Console.WriteLine ("Average no peaks         1% = " + ((int)(dWithoutPeaks)).ToString () + " dmg");  		if (dCount > 10) {  			dWithoutPeakslast10 /= dCount10;  			Console.WriteLine ("Average no peaks last 10 1% = " + ((int)(dWithoutPeakslast10)).ToString () + " dmg");  		}  	}  }  
Magic Number,BattleWatcher,MainForm,C:\repos\sasha237_NorthCitadel\BattleWatcher\MainForm.cs,Gobutton_Click,The following statement contains a magic number: if (dOldDomination != dDomination) {  	double dVal1 = Math.Abs (dDomination * dOldDomination / (dDomination - dOldDomination) * (iA / dDomination - iSumm));  	double dVal2 = Math.Abs (dDomination * dOldDomination / (dDomination - dOldDomination) * (iD / dDomination - iSumm));  	double dVal = dVal1 + dVal2;  	dVal /= 100.0;  	Console.WriteLine ("Current                  1% = " + ((int)(dVal)).ToString () + " dmg");  	sdMatr.Add (i' new Pair2<int' double> (Math.Abs (iSumm)' Math.Abs (dVal)));  }  
Magic Number,BattleWatcher,MainForm,C:\repos\sasha237_NorthCitadel\BattleWatcher\MainForm.cs,Gobutton_Click,The following statement contains a magic number: dVal /= 100.0;  
Magic Number,BattleWatcher,MainForm,C:\repos\sasha237_NorthCitadel\BattleWatcher\MainForm.cs,Gobutton_Click,The following statement contains a magic number: if (sdMatr.Count != 0) {  	double dSum = 0;  	double dSumlast10 = 10;  	double dCount = 0;  	double dWithoutPeaks = 0;  	double dWithoutPeakslast10 = 0;  	double dCount10 = 0;  	foreach (var el in sdMatr) {  		Pair2<int' double> pp = el.Value as Pair2<int' double>;  		dCount++;  		dSum += pp.Second;  		if (dCount + 10 > sdMatr.Count) {  			dSumlast10 += pp.Second;  			dCount10++;  		}  	}  	dSum /= dCount;  	Console.WriteLine ("Average                  1% = " + ((int)(dSum)).ToString () + " dmg");  	if (dCount > 10) {  		dSumlast10 /= dCount10;  		Console.WriteLine ("Average last 10          1% = " + ((int)(dSumlast10)).ToString () + " dmg");  	}  	dCount = 0;  	dCount10 = 0;  	foreach (var el in sdMatr) {  		Pair2<int' double> pp = el.Value as Pair2<int' double>;  		if (pp.Second > dSum * 3)  			continue;  		dCount++;  		dWithoutPeaks += pp.Second;  		if (dCount + 10 > sdMatr.Count) {  			dWithoutPeakslast10 += pp.Second;  			dCount10++;  		}  	}  	dWithoutPeaks /= dCount;  	Console.WriteLine ("Average no peaks         1% = " + ((int)(dWithoutPeaks)).ToString () + " dmg");  	if (dCount > 10) {  		dWithoutPeakslast10 /= dCount10;  		Console.WriteLine ("Average no peaks last 10 1% = " + ((int)(dWithoutPeakslast10)).ToString () + " dmg");  	}  }  
Magic Number,BattleWatcher,MainForm,C:\repos\sasha237_NorthCitadel\BattleWatcher\MainForm.cs,Gobutton_Click,The following statement contains a magic number: if (sdMatr.Count != 0) {  	double dSum = 0;  	double dSumlast10 = 10;  	double dCount = 0;  	double dWithoutPeaks = 0;  	double dWithoutPeakslast10 = 0;  	double dCount10 = 0;  	foreach (var el in sdMatr) {  		Pair2<int' double> pp = el.Value as Pair2<int' double>;  		dCount++;  		dSum += pp.Second;  		if (dCount + 10 > sdMatr.Count) {  			dSumlast10 += pp.Second;  			dCount10++;  		}  	}  	dSum /= dCount;  	Console.WriteLine ("Average                  1% = " + ((int)(dSum)).ToString () + " dmg");  	if (dCount > 10) {  		dSumlast10 /= dCount10;  		Console.WriteLine ("Average last 10          1% = " + ((int)(dSumlast10)).ToString () + " dmg");  	}  	dCount = 0;  	dCount10 = 0;  	foreach (var el in sdMatr) {  		Pair2<int' double> pp = el.Value as Pair2<int' double>;  		if (pp.Second > dSum * 3)  			continue;  		dCount++;  		dWithoutPeaks += pp.Second;  		if (dCount + 10 > sdMatr.Count) {  			dWithoutPeakslast10 += pp.Second;  			dCount10++;  		}  	}  	dWithoutPeaks /= dCount;  	Console.WriteLine ("Average no peaks         1% = " + ((int)(dWithoutPeaks)).ToString () + " dmg");  	if (dCount > 10) {  		dWithoutPeakslast10 /= dCount10;  		Console.WriteLine ("Average no peaks last 10 1% = " + ((int)(dWithoutPeakslast10)).ToString () + " dmg");  	}  }  
Magic Number,BattleWatcher,MainForm,C:\repos\sasha237_NorthCitadel\BattleWatcher\MainForm.cs,Gobutton_Click,The following statement contains a magic number: if (sdMatr.Count != 0) {  	double dSum = 0;  	double dSumlast10 = 10;  	double dCount = 0;  	double dWithoutPeaks = 0;  	double dWithoutPeakslast10 = 0;  	double dCount10 = 0;  	foreach (var el in sdMatr) {  		Pair2<int' double> pp = el.Value as Pair2<int' double>;  		dCount++;  		dSum += pp.Second;  		if (dCount + 10 > sdMatr.Count) {  			dSumlast10 += pp.Second;  			dCount10++;  		}  	}  	dSum /= dCount;  	Console.WriteLine ("Average                  1% = " + ((int)(dSum)).ToString () + " dmg");  	if (dCount > 10) {  		dSumlast10 /= dCount10;  		Console.WriteLine ("Average last 10          1% = " + ((int)(dSumlast10)).ToString () + " dmg");  	}  	dCount = 0;  	dCount10 = 0;  	foreach (var el in sdMatr) {  		Pair2<int' double> pp = el.Value as Pair2<int' double>;  		if (pp.Second > dSum * 3)  			continue;  		dCount++;  		dWithoutPeaks += pp.Second;  		if (dCount + 10 > sdMatr.Count) {  			dWithoutPeakslast10 += pp.Second;  			dCount10++;  		}  	}  	dWithoutPeaks /= dCount;  	Console.WriteLine ("Average no peaks         1% = " + ((int)(dWithoutPeaks)).ToString () + " dmg");  	if (dCount > 10) {  		dWithoutPeakslast10 /= dCount10;  		Console.WriteLine ("Average no peaks last 10 1% = " + ((int)(dWithoutPeakslast10)).ToString () + " dmg");  	}  }  
Magic Number,BattleWatcher,MainForm,C:\repos\sasha237_NorthCitadel\BattleWatcher\MainForm.cs,Gobutton_Click,The following statement contains a magic number: if (sdMatr.Count != 0) {  	double dSum = 0;  	double dSumlast10 = 10;  	double dCount = 0;  	double dWithoutPeaks = 0;  	double dWithoutPeakslast10 = 0;  	double dCount10 = 0;  	foreach (var el in sdMatr) {  		Pair2<int' double> pp = el.Value as Pair2<int' double>;  		dCount++;  		dSum += pp.Second;  		if (dCount + 10 > sdMatr.Count) {  			dSumlast10 += pp.Second;  			dCount10++;  		}  	}  	dSum /= dCount;  	Console.WriteLine ("Average                  1% = " + ((int)(dSum)).ToString () + " dmg");  	if (dCount > 10) {  		dSumlast10 /= dCount10;  		Console.WriteLine ("Average last 10          1% = " + ((int)(dSumlast10)).ToString () + " dmg");  	}  	dCount = 0;  	dCount10 = 0;  	foreach (var el in sdMatr) {  		Pair2<int' double> pp = el.Value as Pair2<int' double>;  		if (pp.Second > dSum * 3)  			continue;  		dCount++;  		dWithoutPeaks += pp.Second;  		if (dCount + 10 > sdMatr.Count) {  			dWithoutPeakslast10 += pp.Second;  			dCount10++;  		}  	}  	dWithoutPeaks /= dCount;  	Console.WriteLine ("Average no peaks         1% = " + ((int)(dWithoutPeaks)).ToString () + " dmg");  	if (dCount > 10) {  		dWithoutPeakslast10 /= dCount10;  		Console.WriteLine ("Average no peaks last 10 1% = " + ((int)(dWithoutPeakslast10)).ToString () + " dmg");  	}  }  
Magic Number,BattleWatcher,MainForm,C:\repos\sasha237_NorthCitadel\BattleWatcher\MainForm.cs,Gobutton_Click,The following statement contains a magic number: if (sdMatr.Count != 0) {  	double dSum = 0;  	double dSumlast10 = 10;  	double dCount = 0;  	double dWithoutPeaks = 0;  	double dWithoutPeakslast10 = 0;  	double dCount10 = 0;  	foreach (var el in sdMatr) {  		Pair2<int' double> pp = el.Value as Pair2<int' double>;  		dCount++;  		dSum += pp.Second;  		if (dCount + 10 > sdMatr.Count) {  			dSumlast10 += pp.Second;  			dCount10++;  		}  	}  	dSum /= dCount;  	Console.WriteLine ("Average                  1% = " + ((int)(dSum)).ToString () + " dmg");  	if (dCount > 10) {  		dSumlast10 /= dCount10;  		Console.WriteLine ("Average last 10          1% = " + ((int)(dSumlast10)).ToString () + " dmg");  	}  	dCount = 0;  	dCount10 = 0;  	foreach (var el in sdMatr) {  		Pair2<int' double> pp = el.Value as Pair2<int' double>;  		if (pp.Second > dSum * 3)  			continue;  		dCount++;  		dWithoutPeaks += pp.Second;  		if (dCount + 10 > sdMatr.Count) {  			dWithoutPeakslast10 += pp.Second;  			dCount10++;  		}  	}  	dWithoutPeaks /= dCount;  	Console.WriteLine ("Average no peaks         1% = " + ((int)(dWithoutPeaks)).ToString () + " dmg");  	if (dCount > 10) {  		dWithoutPeakslast10 /= dCount10;  		Console.WriteLine ("Average no peaks last 10 1% = " + ((int)(dWithoutPeakslast10)).ToString () + " dmg");  	}  }  
Magic Number,BattleWatcher,MainForm,C:\repos\sasha237_NorthCitadel\BattleWatcher\MainForm.cs,Gobutton_Click,The following statement contains a magic number: if (sdMatr.Count != 0) {  	double dSum = 0;  	double dSumlast10 = 10;  	double dCount = 0;  	double dWithoutPeaks = 0;  	double dWithoutPeakslast10 = 0;  	double dCount10 = 0;  	foreach (var el in sdMatr) {  		Pair2<int' double> pp = el.Value as Pair2<int' double>;  		dCount++;  		dSum += pp.Second;  		if (dCount + 10 > sdMatr.Count) {  			dSumlast10 += pp.Second;  			dCount10++;  		}  	}  	dSum /= dCount;  	Console.WriteLine ("Average                  1% = " + ((int)(dSum)).ToString () + " dmg");  	if (dCount > 10) {  		dSumlast10 /= dCount10;  		Console.WriteLine ("Average last 10          1% = " + ((int)(dSumlast10)).ToString () + " dmg");  	}  	dCount = 0;  	dCount10 = 0;  	foreach (var el in sdMatr) {  		Pair2<int' double> pp = el.Value as Pair2<int' double>;  		if (pp.Second > dSum * 3)  			continue;  		dCount++;  		dWithoutPeaks += pp.Second;  		if (dCount + 10 > sdMatr.Count) {  			dWithoutPeakslast10 += pp.Second;  			dCount10++;  		}  	}  	dWithoutPeaks /= dCount;  	Console.WriteLine ("Average no peaks         1% = " + ((int)(dWithoutPeaks)).ToString () + " dmg");  	if (dCount > 10) {  		dWithoutPeakslast10 /= dCount10;  		Console.WriteLine ("Average no peaks last 10 1% = " + ((int)(dWithoutPeakslast10)).ToString () + " dmg");  	}  }  
Magic Number,BattleWatcher,MainForm,C:\repos\sasha237_NorthCitadel\BattleWatcher\MainForm.cs,Gobutton_Click,The following statement contains a magic number: foreach (var el in sdMatr) {  	Pair2<int' double> pp = el.Value as Pair2<int' double>;  	dCount++;  	dSum += pp.Second;  	if (dCount + 10 > sdMatr.Count) {  		dSumlast10 += pp.Second;  		dCount10++;  	}  }  
Magic Number,BattleWatcher,MainForm,C:\repos\sasha237_NorthCitadel\BattleWatcher\MainForm.cs,Gobutton_Click,The following statement contains a magic number: if (dCount + 10 > sdMatr.Count) {  	dSumlast10 += pp.Second;  	dCount10++;  }  
Magic Number,BattleWatcher,MainForm,C:\repos\sasha237_NorthCitadel\BattleWatcher\MainForm.cs,Gobutton_Click,The following statement contains a magic number: if (dCount > 10) {  	dSumlast10 /= dCount10;  	Console.WriteLine ("Average last 10          1% = " + ((int)(dSumlast10)).ToString () + " dmg");  }  
Magic Number,BattleWatcher,MainForm,C:\repos\sasha237_NorthCitadel\BattleWatcher\MainForm.cs,Gobutton_Click,The following statement contains a magic number: foreach (var el in sdMatr) {  	Pair2<int' double> pp = el.Value as Pair2<int' double>;  	if (pp.Second > dSum * 3)  		continue;  	dCount++;  	dWithoutPeaks += pp.Second;  	if (dCount + 10 > sdMatr.Count) {  		dWithoutPeakslast10 += pp.Second;  		dCount10++;  	}  }  
Magic Number,BattleWatcher,MainForm,C:\repos\sasha237_NorthCitadel\BattleWatcher\MainForm.cs,Gobutton_Click,The following statement contains a magic number: foreach (var el in sdMatr) {  	Pair2<int' double> pp = el.Value as Pair2<int' double>;  	if (pp.Second > dSum * 3)  		continue;  	dCount++;  	dWithoutPeaks += pp.Second;  	if (dCount + 10 > sdMatr.Count) {  		dWithoutPeakslast10 += pp.Second;  		dCount10++;  	}  }  
Magic Number,BattleWatcher,MainForm,C:\repos\sasha237_NorthCitadel\BattleWatcher\MainForm.cs,Gobutton_Click,The following statement contains a magic number: if (pp.Second > dSum * 3)  	continue;  
Magic Number,BattleWatcher,MainForm,C:\repos\sasha237_NorthCitadel\BattleWatcher\MainForm.cs,Gobutton_Click,The following statement contains a magic number: if (dCount + 10 > sdMatr.Count) {  	dWithoutPeakslast10 += pp.Second;  	dCount10++;  }  
Magic Number,BattleWatcher,MainForm,C:\repos\sasha237_NorthCitadel\BattleWatcher\MainForm.cs,Gobutton_Click,The following statement contains a magic number: if (dCount > 10) {  	dWithoutPeakslast10 /= dCount10;  	Console.WriteLine ("Average no peaks last 10 1% = " + ((int)(dWithoutPeakslast10)).ToString () + " dmg");  }  
Magic Number,BattleWatcher,MainForm,C:\repos\sasha237_NorthCitadel\BattleWatcher\MainForm.cs,Gobutton_Click,The following statement contains a magic number: System.Threading.Thread.Sleep ((int)(dSec * 1000));  
