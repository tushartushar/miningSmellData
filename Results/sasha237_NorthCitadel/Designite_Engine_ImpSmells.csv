Implementation smell,Namespace,Class,File,Method,Description
Long Method,Engine,CollectQuests,C:\repos\sasha237_NorthCitadel\Engine\CollectQuests.cs,BotProc,The method has 130 lines of code.
Long Method,Engine,Deploy,C:\repos\sasha237_NorthCitadel\Engine\Deploy.cs,BotProc2,The method has 196 lines of code.
Long Method,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The method has 173 lines of code.
Complex Method,Engine,ActivateMail,C:\repos\sasha237_NorthCitadel\Engine\ActivateMail.cs,Worker,Cyclomatic complexity of the method is 9
Complex Method,Engine,ActivateMail,C:\repos\sasha237_NorthCitadel\Engine\ActivateMail.cs,ActivateProc,Cyclomatic complexity of the method is 8
Complex Method,Engine,CollectQuests,C:\repos\sasha237_NorthCitadel\Engine\CollectQuests.cs,BotProc,Cyclomatic complexity of the method is 9
Complex Method,Engine,Feed,C:\repos\sasha237_NorthCitadel\Engine\Feed.cs,Worker,Cyclomatic complexity of the method is 12
Complex Method,Engine,Fight,C:\repos\sasha237_NorthCitadel\Engine\Fight.cs,BotProc,Cyclomatic complexity of the method is 16
Complex Method,Engine,MainClass,C:\repos\sasha237_NorthCitadel\Engine\Main.cs,Main,Cyclomatic complexity of the method is 25
Complex Method,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotWork,Cyclomatic complexity of the method is 20
Complex Method,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotWorkSelf,Cyclomatic complexity of the method is 8
Complex Method,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,Cyclomatic complexity of the method is 42
Complex Method,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcBuyFromOffer,Cyclomatic complexity of the method is 13
Complex Method,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcCollectmoney,Cyclomatic complexity of the method is 8
Complex Method,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,WorkerDonateMoney,Cyclomatic complexity of the method is 8
Complex Method,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcConvertMoney,Cyclomatic complexity of the method is 13
Complex Method,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcCollectmoneyToCountry,Cyclomatic complexity of the method is 8
Complex Method,Engine,RegBots,C:\repos\sasha237_NorthCitadel\Engine\RegBots.cs,Worker,Cyclomatic complexity of the method is 20
Complex Method,Engine,RegBots,C:\repos\sasha237_NorthCitadel\Engine\RegBots.cs,RegisterProc,Cyclomatic complexity of the method is 16
Complex Method,Engine,RegBots,C:\repos\sasha237_NorthCitadel\Engine\RegBots.cs,RegisterBot,Cyclomatic complexity of the method is 9
Complex Method,Engine,Elections,C:\repos\sasha237_NorthCitadel\Engine\Elections.cs,Worker,Cyclomatic complexity of the method is 12
Complex Method,Engine,Elections,C:\repos\sasha237_NorthCitadel\Engine\Elections.cs,BotProc,Cyclomatic complexity of the method is 21
Long Parameter List,Engine,RegBots,C:\repos\sasha237_NorthCitadel\Engine\RegBots.cs,RegisterBot,The method has 9 parameters.
Long Parameter List,Engine,RegBots,C:\repos\sasha237_NorthCitadel\Engine\RegBots.cs,RegisterBot,The method has 5 parameters.
Long Statement,Engine,CollectQuests,C:\repos\sasha237_NorthCitadel\Engine\CollectQuests.cs,BotProc,The length of the statement  "	ConsoleLog.WriteLine ("Processing bot " + Globals.processedBotCounter.ToString () + "/" + Globals.totalBotCounter.ToString () + ": " + (string)botinfo ["login"]); " is 162.
Long Statement,Engine,CollectQuests,C:\repos\sasha237_NorthCitadel\Engine\CollectQuests.cs,BotProc,The length of the statement  "		ManagedCitizen Bot = new NerZul.Core.Utils.ManagedCitizen ((string)botinfo ["login"]' (string)botinfo ["email"]' (string)botinfo ["password"]' Globals.BotConfig); " is 162.
Long Statement,Engine,Comment,C:\repos\sasha237_NorthCitadel\Engine\Comment.cs,BotProc2,The length of the statement  "	NerZul.Core.Utils.ManagedCitizen Bot = new NerZul.Core.Utils.ManagedCitizen ((string)botinfo ["login"]' (string)botinfo ["email"]' (string)botinfo ["password"]' Globals.BotConfig); " is 180.
Long Statement,Engine,Feed,C:\repos\sasha237_NorthCitadel\Engine\Feed.cs,BotProc,The length of the statement  "	ConsoleLog.WriteLine ("Processing bot " + Globals.processedBotCounter.ToString () + "/" + Globals.totalBotCounter.ToString () + ": " + (string)botinfo ["login"]); " is 162.
Long Statement,Engine,Feed,C:\repos\sasha237_NorthCitadel\Engine\Feed.cs,BotProc,The length of the statement  "		ManagedCitizen Bot = new NerZul.Core.Utils.ManagedCitizen ((string)botinfo ["login"]' (string)botinfo ["email"]' (string)botinfo ["password"]' Globals.BotConfig); " is 162.
Long Statement,Engine,Fight,C:\repos\sasha237_NorthCitadel\Engine\Fight.cs,PrintUsage,The length of the statement  "	ConsoleLog.WriteLine ("Usage: fight group battle_id buy_weapon(true|false) buy_food(true|false) left_hp left_food country_id(id|0) do_not_change_weapon(true|false) shot_limit cyclic_fight(true|false) experience_limit"); " is 219.
Long Statement,Engine,Fight,C:\repos\sasha237_NorthCitadel\Engine\Fight.cs,BotProc,The length of the statement  "	ConsoleLog.WriteLine ("Processing bot " + Globals.processedBotCounter.ToString () + "/" + Globals.totalBotCounter.ToString () + ": " + (string)botinfo ["login"]); " is 162.
Long Statement,Engine,Fight,C:\repos\sasha237_NorthCitadel\Engine\Fight.cs,BotProc,The length of the statement  "	NerZul.Core.Utils.ManagedCitizen Bot = new NerZul.Core.Utils.ManagedCitizen ((string)botinfo ["login"]' (string)botinfo ["email"]' (string)botinfo ["password"]' Globals.BotConfig); " is 180.
Long Statement,Engine,Fight,C:\repos\sasha237_NorthCitadel\Engine\Fight.cs,BotProc,The length of the statement  "						Bot.Bot.FightInBattle (iBattle' ((bBuyWeapon) ? 1 : 0)' (int)botinfo ["country"]' iLeftHP' iCountry' doNotChange' iShotLimit); " is 126.
Long Statement,Engine,Fly,C:\repos\sasha237_NorthCitadel\Engine\Fly.cs,BotProc,The length of the statement  "	ConsoleLog.WriteLine ("Processing bot " + Globals.processedBotCounter.ToString () + "/" + Globals.totalBotCounter.ToString () + ": " + (string)botinfo ["login"]); " is 162.
Long Statement,Engine,Fly,C:\repos\sasha237_NorthCitadel\Engine\Fly.cs,BotProc,The length of the statement  "	NerZul.Core.Utils.ManagedCitizen Bot = new NerZul.Core.Utils.ManagedCitizen ((string)botinfo ["login"]' (string)botinfo ["email"]' (string)botinfo ["password"]' Globals.BotConfig); " is 180.
Long Statement,Engine,Globals,C:\repos\sasha237_NorthCitadel\Engine\Main.cs,Init,The length of the statement  "	ErepAgeStart = new DateTime (Config.GetValue ("time"' "zeroyear"' 2007)' Config.GetValue ("time"' "zeromounth"' 11)' Config.GetValue ("time"' "zeroday"' 20)); " is 158.
Long Statement,Engine,Globals,C:\repos\sasha237_NorthCitadel\Engine\Main.cs,Init,The length of the statement  "	Avatars = new NerZul.Core.Utils.StringSelector (System.IO.Directory.GetFiles (System.IO.Path.Combine (DataDir' "avatars"))); " is 124.
Long Statement,Engine,MainClass,C:\repos\sasha237_NorthCitadel\Engine\Main.cs,Main,The length of the statement  "	ConsoleLog.WriteLine (string.Format ("Started at {0:00}:{1:00}"' now.Hours' now.Minutes) + "' day " + now.Days.ToString () + " of the New World"); " is 146.
Long Statement,Engine,Database,C:\repos\sasha237_NorthCitadel\Engine\Database.cs,ConnectToDb,The length of the statement  "	MySql.Data.MySqlClient.MySqlConnectionStringBuilder builder = new MySql.Data.MySqlClient.MySqlConnectionStringBuilder (); " is 121.
Long Statement,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,PrintUsage,The length of the statement  "	ConsoleLog.WriteLine ("Usage: daily group exact_vacancy(0|id) industry mode(normal|light|self) resignBeforeWork(true|false) doFeed(0|1|2)"); " is 140.
Long Statement,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotWorkSelf,The length of the statement  "			ConsoleLog.WriteLine ("\"Not enough slots\" message' visiting inventory - " + botinfo ["login"] + " - " + Bot.Bot.GetLastResponse ()); " is 134.
Long Statement,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The length of the statement  "	ConsoleLog.WriteLine ("Processing bot " + Globals.processedBotCounter.ToString () + "/" + Globals.totalBotCounter.ToString () + ": " + (string)botinfo ["login"]); " is 162.
Long Statement,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The length of the statement  "	NerZul.Core.Utils.ManagedCitizen Bot = new NerZul.Core.Utils.ManagedCitizen ((string)botinfo ["login"]' (string)botinfo ["email"]' (string)botinfo ["password"]' Globals.BotConfig); " is 180.
Long Statement,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,GetCurrencyAmount,The length of the statement  "	URL = "http://www.erepublik.com/en/exchange/selectAccount?buy_currency_history_id=buy_currencies=" + lToCurrency.ToString () + "&sell_currency_history_id=sell_currencies=" + FromCurrency.ToString () + "&account_type=citizen-&select_page=select&action_path=listOffers"; " is 268.
Long Statement,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,GetCurrencyAmount,The length of the statement  "	string Currency = CommonUtils.GetStringBetween (response' "currency_account_for_sell\" style=\"display:inline\">"' "</span>"); " is 126.
Long Statement,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,GetCurrencyAmount,The length of the statement  "		ConsoleLog.WriteLine ("Do not have such currency (visible: " + Currency + "' requested: " + CurrencyCodes [FromCurrency.ToString ()] + ")"); " is 140.
Long Statement,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,GetCurrencyAmount,The length of the statement  "	string sCurRemains = CommonUtils.GetStringBetween (response' "<span class=\"special\" id=\"sell_currency_account_amount\">"' "</span>"); " is 136.
Long Statement,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,WorkerBuyFromOffer,The length of the statement  "		ConsoleLog.WriteLine ("Usage: buymoneyfromoffer group offer_id fromwhom_id how_much curr_for_sell_id curr_for_buy_id exp_from exp_to"); " is 135.
Long Statement,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcBuyFromOffer,The length of the statement  "	ConsoleLog.WriteLine ("Processing bot " + Globals.processedBotCounter.ToString () + "/" + Globals.totalBotCounter.ToString () + ": " + (string)botinfo ["login"]); " is 162.
Long Statement,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcBuyFromOffer,The length of the statement  "		NerZul.Core.Utils.ManagedCitizen Bot = new NerZul.Core.Utils.ManagedCitizen ((string)botinfo ["login"]' (string)botinfo ["email"]' (string)botinfo ["password"]' Globals.BotConfig); " is 180.
Long Statement,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcBuyFromOffer,The length of the statement  "						//                                ConsoleLog.WriteLine(botinfo["login"] + ": Gold drain failed. Waiting for 1 minute."); " is 120.
Long Statement,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcCollectmoney,The length of the statement  "	ConsoleLog.WriteLine ("Processing bot " + Globals.processedBotCounter.ToString () + "/" + Globals.totalBotCounter.ToString () + ": " + (string)botinfo ["login"]); " is 162.
Long Statement,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcCollectmoney,The length of the statement  "	NerZul.Core.Utils.ManagedCitizen Bot = new NerZul.Core.Utils.ManagedCitizen ((string)botinfo ["login"]' (string)botinfo ["email"]' (string)botinfo ["password"]' Globals.BotConfig); " is 180.
Long Statement,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,WorkerDonateMoney,The length of the statement  "		NerZul.Core.Utils.ManagedCitizen Bot = new NerZul.Core.Utils.ManagedCitizen (login' login' password' Globals.BotConfig); " is 120.
Long Statement,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,WorkerDonateMoney,The length of the statement  "				ConsoleLog.WriteLine ("Processing bot " + processedBotCounter.ToString () + "/" + totalBotCounter.ToString () + ": " + (string)botinfo ["login"]); " is 146.
Long Statement,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcConvertMoney,The length of the statement  "	ConsoleLog.WriteLine ("Processing bot " + Globals.processedBotCounter.ToString () + "/" + Globals.totalBotCounter.ToString () + ": " + (string)botinfo ["login"]); " is 162.
Long Statement,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcConvertMoney,The length of the statement  "		NerZul.Core.Utils.ManagedCitizen Bot = new ManagedCitizen ((string)botinfo ["login"]' (string)botinfo ["email"]' (string)botinfo ["password"]' Globals.BotConfig); " is 162.
Long Statement,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcConvertMoney,The length of the statement  "					URL = "http://www.erepublik.com/en/exchange/listOffers?select_page=select&buy_currency_history_id=buy_currencies=" + iCurrencyBuyID.ToString () + "&sell_currency_history_id=sell_currencies=" + iCurrencySpendID.ToString () + "&account_type=citizen-&action_path=listOffers&page=page=1"; " is 284.
Long Statement,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcConvertMoney,The length of the statement  "						string sPosRate = CommonUtils.GetStringBetween (response' "<span class=\"special\" id=\"exchange_value_amount_" + sOfferId + "\">"' "</span>"); " is 143.
Long Statement,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcConvertMoney,The length of the statement  "						string sPosAmount = CommonUtils.GetStringBetween (response' "<span class=\"special\"  id=\"initial_amount_" + sOfferId + "\">"' "</span>"); " is 139.
Long Statement,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcConvertMoney,The length of the statement  "						string sCorrespondentID = CommonUtils.GetStringBetween (response' "<a class=\"nameholder dotted\" href=\"/en/citizen/profile/"' "\">"); " is 135.
Long Statement,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcConvertMoney,The length of the statement  "						ConsoleLog.WriteLine ("Detected position " + rateNum.ToString () + ": OfferId=" + sOfferId + "' PosRate=" + sPosRate + "' PosAmount=" + sPosAmount + "' CorrespondentID=" + sCorrespondentID); " is 190.
Long Statement,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcCollectmoneyToCountry,The length of the statement  "	ConsoleLog.WriteLine ("Processing bot " + Globals.processedBotCounter.ToString () + "/" + Globals.totalBotCounter.ToString () + ": " + (string)botinfo ["login"]); " is 162.
Long Statement,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcCollectmoneyToCountry,The length of the statement  "	NerZul.Core.Utils.ManagedCitizen Bot = new NerZul.Core.Utils.ManagedCitizen ((string)botinfo ["login"]' (string)botinfo ["email"]' (string)botinfo ["password"]' Globals.BotConfig); " is 180.
Long Statement,Engine,RegBots,C:\repos\sasha237_NorthCitadel\Engine\RegBots.cs,Worker,The length of the statement  "		ConsoleLog.WriteLine ("regbots reg_type(gmail|domain|maillist) " + errorHelp + " count_bots count_threads country_id region_id group_name nicknames(manual|dictionary|web) delay"); " is 179.
Long Statement,Engine,RegBots,C:\repos\sasha237_NorthCitadel\Engine\RegBots.cs,Worker,The length of the statement  "		ConsoleLog.WriteLine ("regactbots reg_type(gmail|domain) " + errorHelp + " count_bots count_threads country_id region_id group_name nicknames(manual|dictionary|web) delay pop_server mail_login mail_password"); " is 209.
Long Statement,Engine,RegBots,C:\repos\sasha237_NorthCitadel\Engine\RegBots.cs,RegisterBot,The length of the statement  "		CaptchaProvider = new PrecaptchaCaptchaProvider (Globals.BotConfig.AntiGateKey' Globals.BotConfig.precaptchaBufferSize' Globals.BotConfig.bBeep); " is 145.
Long Statement,Engine,RegBots,C:\repos\sasha237_NorthCitadel\Engine\RegBots.cs,RegisterBot,The length of the statement  "		PostData = "_token=" + Token + "&recaptcha_challenge_field=" + captcha.ChallengeID + "&recaptcha_response_field=" + captcha.CaptchaText; " is 136.
Long Statement,Engine,RegBots,C:\repos\sasha237_NorthCitadel\Engine\RegBots.cs,RegisterBot,The length of the statement  "	PostData = "_token=" + Token + "&citizen_name=" + System.Web.HttpUtility.UrlEncode (NickName) + "&citizen_password=" + System.Web.HttpUtility.UrlEncode (Password) + "&country_selected_id=" + country.ToString () + "&country_list=" + country.ToString () + "&region_list=" + region.ToString () + "&region_selected_id=" + region.ToString () + "&nationality_list=" + Nationality + "&citizen_email=" + EMail.Replace ("@"' "%40") + "&recaptcha_challenge_field=" + captcha.ChallengeID + "&recaptcha_response_field=" + captcha.CaptchaText; " is 530.
Long Statement,Engine,RegBots,C:\repos\sasha237_NorthCitadel\Engine\RegBots.cs,RegisterBot,The length of the statement  "	return RegisterBot (NickName' Password' Nationality' EMail' m_Random.Next (1' 29)' m_Random.Next (1' 13)' m_Random.Next (1970' 1995)' (m_Random.Next (0' 2) > 0)' out Response); " is 176.
Long Statement,Engine,ReportAll,C:\repos\sasha237_NorthCitadel\Engine\ReportAll.cs,BotProc,The length of the statement  "	ConsoleLog.WriteLine ("Processing bot " + Globals.processedBotCounter.ToString () + "/" + Globals.totalBotCounter.ToString () + ": " + (string)botinfo ["login"]); " is 162.
Long Statement,Engine,ReportAll,C:\repos\sasha237_NorthCitadel\Engine\ReportAll.cs,BotProc,The length of the statement  "	NerZul.Core.Utils.ManagedCitizen Bot = new NerZul.Core.Utils.ManagedCitizen ((string)botinfo ["login"]' (string)botinfo ["email"]' (string)botinfo ["password"]' Globals.BotConfig); " is 180.
Long Statement,Engine,Subscribe,C:\repos\sasha237_NorthCitadel\Engine\Subscribe.cs,BotProc,The length of the statement  "	NerZul.Core.Utils.ManagedCitizen Bot = new NerZul.Core.Utils.ManagedCitizen ((string)botinfo ["login"]' (string)botinfo ["email"]' (string)botinfo ["password"]' Globals.BotConfig); " is 180.
Long Statement,Engine,Tutorial,C:\repos\sasha237_NorthCitadel\Engine\Tutorial.cs,BotProc,The length of the statement  "	NerZul.Core.Utils.ManagedCitizen Bot = new NerZul.Core.Utils.ManagedCitizen ((string)botinfo ["login"]' (string)botinfo ["email"]' (string)botinfo ["password"]' Globals.BotConfig); " is 180.
Long Statement,Engine,Utils,C:\repos\sasha237_NorthCitadel\Engine\Utils.cs,UpdateDbWithBasicInfo,The length of the statement  "		Database.Update ("bots"' "citizen_id"' nfo.CitizenID' "experience"' nfo.Experience' "wellness"' nfo.Wellness' "country"' nfo.Country' "gold"' nfo.Gold' "nat_occur"' nfo.Nat_occur); " is 180.
Long Statement,Engine,FireAll,C:\repos\sasha237_NorthCitadel\Engine\FireAll.cs,Worker,The length of the statement  "		System.Text.RegularExpressions.Match m = System.Text.RegularExpressions.Regex.Match (scan' @"/en/fire-employee/company-\w+-employee-\w+"); " is 138.
Long Statement,Engine,Elections,C:\repos\sasha237_NorthCitadel\Engine\Elections.cs,Worker,The length of the statement  "		ConsoleLog.WriteLine ("Usage: " + args [0] + " operation(join|leave|vote) group party election_type electionid candidate"); " is 123.
Long Statement,Engine,Elections,C:\repos\sasha237_NorthCitadel\Engine\Elections.cs,BotProc,The length of the statement  "	NerZul.Core.Utils.ManagedCitizen bot = new NerZul.Core.Utils.ManagedCitizen ((string)botinfo ["login"]' (string)botinfo ["email"]' (string)botinfo ["password"]' Globals.BotConfig); " is 180.
Long Statement,Engine,VoteArticle,C:\repos\sasha237_NorthCitadel\Engine\VoteArticle.cs,BotProc,The length of the statement  "	NerZul.Core.Utils.ManagedCitizen Bot = new NerZul.Core.Utils.ManagedCitizen ((string)botinfo ["login"]' (string)botinfo ["email"]' (string)botinfo ["password"]' Globals.BotConfig); " is 180.
Long Statement,Pop3,Pop3Message,C:\repos\sasha237_NorthCitadel\Engine\POP3\Pop3Message.cs,GetHeader,The length of the statement  "	int index = result.IndexOf (String.Format (CultureInfo.InvariantCulture' "\r\n{0}"' headerName)' StringComparison.OrdinalIgnoreCase); " is 133.
Long Statement,Pop3,Pop3Message,C:\repos\sasha237_NorthCitadel\Engine\POP3\Pop3Message.cs,GetHeader,The length of the statement  "		result = result.Remove (result.IndexOf ('\r')' (result.Length - result.IndexOf ('\r'))).Replace ("\n"' String.Empty).Trim (); " is 125.
Complex Conditional,Engine,Fight,C:\repos\sasha237_NorthCitadel\Engine\Fight.cs,BotProc,The conditional expression  "(!cyclicFight) || (retryCount >= 3) || ((iExpLimit != 0) && ((int)botinfo ["experience"]) >= iExpLimit)"  is complex.
Empty Catch Block,Engine,Database,C:\repos\sasha237_NorthCitadel\Engine\Database.cs,AddRow,The method has an empty catch block.
Magic Number,Engine,ActivateMail,C:\repos\sasha237_NorthCitadel\Engine\ActivateMail.cs,Worker,The following statement contains a magic number: if (args [0] == "activatemail" && args.Length != 4) {  	ConsoleLog.WriteLine ("activatemail pop_server login password");  	return;  }  
Magic Number,Engine,ActivateMail,C:\repos\sasha237_NorthCitadel\Engine\ActivateMail.cs,Worker,The following statement contains a magic number: if (args [0] == "activatelist" && args.Length != 2) {  	ConsoleLog.WriteLine ("activatelist mailboxes_file");  	return;  }  
Magic Number,Engine,ActivateMail,C:\repos\sasha237_NorthCitadel\Engine\ActivateMail.cs,Worker,The following statement contains a magic number: if (args [0] == "activatemail") {  	mailBoxes = new List<string> ();  	mailBoxes.Add (args [1] + ';' + args [2] + ';' + args [3] + ";xxx");  }  
Magic Number,Engine,ActivateMail,C:\repos\sasha237_NorthCitadel\Engine\ActivateMail.cs,Worker,The following statement contains a magic number: if (args [0] == "activatemail") {  	mailBoxes = new List<string> ();  	mailBoxes.Add (args [1] + ';' + args [2] + ';' + args [3] + ";xxx");  }  
Magic Number,Engine,ActivateMail,C:\repos\sasha237_NorthCitadel\Engine\ActivateMail.cs,Worker,The following statement contains a magic number: mailBoxes.Add (args [1] + ';' + args [2] + ';' + args [3] + ";xxx");  
Magic Number,Engine,ActivateMail,C:\repos\sasha237_NorthCitadel\Engine\ActivateMail.cs,Worker,The following statement contains a magic number: mailBoxes.Add (args [1] + ';' + args [2] + ';' + args [3] + ";xxx");  
Magic Number,Engine,ActivateMail,C:\repos\sasha237_NorthCitadel\Engine\ActivateMail.cs,Worker,The following statement contains a magic number: foreach (var mailbox in mailBoxes) {  	mailclient = new Pop3.Pop3Client ();  	messagesToDelete = new List<Pop3Message> ();  	messNumber = 0;  	messCount = 0;  	ConsoleLog.WriteLine ("Connecting to " + mailbox.Split (';') [0]);  	mailclient.Connect (mailbox.Split (';') [0]' mailbox.Split (';') [1]' mailbox.Split (';') [2]);  	ConsoleLog.WriteLine ("Logged in. Retrieving message list...");  	List<Pop3Message> messages = mailclient.List ();  	mailclient.Retrieve (messages);  	int poolsize = Globals.threadCount;  	if ((args [0] == "activatelist") || (Globals.BotConfig.useTOR))  		poolsize = 1;  	try {  		messCount = messages.Count;  		NerZul.Core.Utils.Bicycles.ThreadPool.ExecInPool (ActivateProc' messages' poolsize' true' Globals.ShowDlg);  		if (args [0] == "activatelist") {  			gen.FixBoxAct (mailbox.Split (';') [3]);  		}  	}  	catch (System.Exception e) {  		ConsoleLog.WriteLine ("Activate mail error: " + e.Message);  	}  	ConsoleLog.WriteLine ("Deleteing processed messages...");  	mailclient.Delete (messagesToDelete);  	ConsoleLog.WriteLine ("Disconnecting...");  	mailclient.Disconnect ();  	ConsoleLog.WriteLine ("Finished");  	messagesToDelete.Clear ();  }  
Magic Number,Engine,ActivateMail,C:\repos\sasha237_NorthCitadel\Engine\ActivateMail.cs,Worker,The following statement contains a magic number: foreach (var mailbox in mailBoxes) {  	mailclient = new Pop3.Pop3Client ();  	messagesToDelete = new List<Pop3Message> ();  	messNumber = 0;  	messCount = 0;  	ConsoleLog.WriteLine ("Connecting to " + mailbox.Split (';') [0]);  	mailclient.Connect (mailbox.Split (';') [0]' mailbox.Split (';') [1]' mailbox.Split (';') [2]);  	ConsoleLog.WriteLine ("Logged in. Retrieving message list...");  	List<Pop3Message> messages = mailclient.List ();  	mailclient.Retrieve (messages);  	int poolsize = Globals.threadCount;  	if ((args [0] == "activatelist") || (Globals.BotConfig.useTOR))  		poolsize = 1;  	try {  		messCount = messages.Count;  		NerZul.Core.Utils.Bicycles.ThreadPool.ExecInPool (ActivateProc' messages' poolsize' true' Globals.ShowDlg);  		if (args [0] == "activatelist") {  			gen.FixBoxAct (mailbox.Split (';') [3]);  		}  	}  	catch (System.Exception e) {  		ConsoleLog.WriteLine ("Activate mail error: " + e.Message);  	}  	ConsoleLog.WriteLine ("Deleteing processed messages...");  	mailclient.Delete (messagesToDelete);  	ConsoleLog.WriteLine ("Disconnecting...");  	mailclient.Disconnect ();  	ConsoleLog.WriteLine ("Finished");  	messagesToDelete.Clear ();  }  
Magic Number,Engine,ActivateMail,C:\repos\sasha237_NorthCitadel\Engine\ActivateMail.cs,Worker,The following statement contains a magic number: mailclient.Connect (mailbox.Split (';') [0]' mailbox.Split (';') [1]' mailbox.Split (';') [2]);  
Magic Number,Engine,ActivateMail,C:\repos\sasha237_NorthCitadel\Engine\ActivateMail.cs,Worker,The following statement contains a magic number: try {  	messCount = messages.Count;  	NerZul.Core.Utils.Bicycles.ThreadPool.ExecInPool (ActivateProc' messages' poolsize' true' Globals.ShowDlg);  	if (args [0] == "activatelist") {  		gen.FixBoxAct (mailbox.Split (';') [3]);  	}  }  catch (System.Exception e) {  	ConsoleLog.WriteLine ("Activate mail error: " + e.Message);  }  
Magic Number,Engine,ActivateMail,C:\repos\sasha237_NorthCitadel\Engine\ActivateMail.cs,Worker,The following statement contains a magic number: if (args [0] == "activatelist") {  	gen.FixBoxAct (mailbox.Split (';') [3]);  }  
Magic Number,Engine,ActivateMail,C:\repos\sasha237_NorthCitadel\Engine\ActivateMail.cs,Worker,The following statement contains a magic number: gen.FixBoxAct (mailbox.Split (';') [3]);  
Magic Number,Engine,ActivateMail,C:\repos\sasha237_NorthCitadel\Engine\ActivateMail.cs,ActivateProc,The following statement contains a magic number: if (message.Body.Contains (regURL)) {  	string sBuf = message.Body;  	sBuf = sBuf.Replace ("\n"' "");  	sBuf = sBuf.Replace ("\r"' "");  	sBuf = sBuf.Replace ("="' "");  	string link = sBuf.Substring (sBuf.IndexOf (regURL));  	link = link.Remove (link.IndexOfAny (new char[] {  		'\r''  		'\n''  		'\"''  		'<''  		'>''  		'*'  	}));  	link = link.Replace ("="' "");  	ConsoleLog.WriteLine ("Activate: " + link);  	for (int i = 1; i <= 10; i++) {  		if (OpenLink (link)) {  			lock (locker) {  				messagesToDelete.Add (message);  			}  			System.Threading.Thread.Sleep (1000);  			break;  		}  	}  	return;  }  
Magic Number,Engine,ActivateMail,C:\repos\sasha237_NorthCitadel\Engine\ActivateMail.cs,ActivateProc,The following statement contains a magic number: if (message.Body.Contains (regURL)) {  	string sBuf = message.Body;  	sBuf = sBuf.Replace ("\n"' "");  	sBuf = sBuf.Replace ("\r"' "");  	sBuf = sBuf.Replace ("="' "");  	string link = sBuf.Substring (sBuf.IndexOf (regURL));  	link = link.Remove (link.IndexOfAny (new char[] {  		'\r''  		'\n''  		'\"''  		'<''  		'>''  		'*'  	}));  	link = link.Replace ("="' "");  	ConsoleLog.WriteLine ("Activate: " + link);  	for (int i = 1; i <= 10; i++) {  		if (OpenLink (link)) {  			lock (locker) {  				messagesToDelete.Add (message);  			}  			System.Threading.Thread.Sleep (1000);  			break;  		}  	}  	return;  }  
Magic Number,Engine,ActivateMail,C:\repos\sasha237_NorthCitadel\Engine\ActivateMail.cs,ActivateProc,The following statement contains a magic number: for (int i = 1; i <= 10; i++) {  	if (OpenLink (link)) {  		lock (locker) {  			messagesToDelete.Add (message);  		}  		System.Threading.Thread.Sleep (1000);  		break;  	}  }  
Magic Number,Engine,ActivateMail,C:\repos\sasha237_NorthCitadel\Engine\ActivateMail.cs,ActivateProc,The following statement contains a magic number: for (int i = 1; i <= 10; i++) {  	if (OpenLink (link)) {  		lock (locker) {  			messagesToDelete.Add (message);  		}  		System.Threading.Thread.Sleep (1000);  		break;  	}  }  
Magic Number,Engine,ActivateMail,C:\repos\sasha237_NorthCitadel\Engine\ActivateMail.cs,ActivateProc,The following statement contains a magic number: if (OpenLink (link)) {  	lock (locker) {  		messagesToDelete.Add (message);  	}  	System.Threading.Thread.Sleep (1000);  	break;  }  
Magic Number,Engine,ActivateMail,C:\repos\sasha237_NorthCitadel\Engine\ActivateMail.cs,ActivateProc,The following statement contains a magic number: System.Threading.Thread.Sleep (1000);  
Magic Number,Engine,ActivateMail,C:\repos\sasha237_NorthCitadel\Engine\ActivateMail.cs,ActivateProc,The following statement contains a magic number: if (message.Body.Contains (weaponURL)) {  	string link = weaponURL + CommonUtils.GetStringBetween (message.Body' weaponURL' "\"");  	ConsoleLog.WriteLine ("Weapon claim: " + link);  	for (int i = 1; i <= 10; i++) {  		if (OpenLink (link)) {  			lock (locker) {  				messagesToDelete.Add (message);  			}  			System.Threading.Thread.Sleep (1000);  			break;  		}  	}  	return;  }  
Magic Number,Engine,ActivateMail,C:\repos\sasha237_NorthCitadel\Engine\ActivateMail.cs,ActivateProc,The following statement contains a magic number: if (message.Body.Contains (weaponURL)) {  	string link = weaponURL + CommonUtils.GetStringBetween (message.Body' weaponURL' "\"");  	ConsoleLog.WriteLine ("Weapon claim: " + link);  	for (int i = 1; i <= 10; i++) {  		if (OpenLink (link)) {  			lock (locker) {  				messagesToDelete.Add (message);  			}  			System.Threading.Thread.Sleep (1000);  			break;  		}  	}  	return;  }  
Magic Number,Engine,ActivateMail,C:\repos\sasha237_NorthCitadel\Engine\ActivateMail.cs,ActivateProc,The following statement contains a magic number: for (int i = 1; i <= 10; i++) {  	if (OpenLink (link)) {  		lock (locker) {  			messagesToDelete.Add (message);  		}  		System.Threading.Thread.Sleep (1000);  		break;  	}  }  
Magic Number,Engine,ActivateMail,C:\repos\sasha237_NorthCitadel\Engine\ActivateMail.cs,ActivateProc,The following statement contains a magic number: for (int i = 1; i <= 10; i++) {  	if (OpenLink (link)) {  		lock (locker) {  			messagesToDelete.Add (message);  		}  		System.Threading.Thread.Sleep (1000);  		break;  	}  }  
Magic Number,Engine,ActivateMail,C:\repos\sasha237_NorthCitadel\Engine\ActivateMail.cs,ActivateProc,The following statement contains a magic number: if (OpenLink (link)) {  	lock (locker) {  		messagesToDelete.Add (message);  	}  	System.Threading.Thread.Sleep (1000);  	break;  }  
Magic Number,Engine,ActivateMail,C:\repos\sasha237_NorthCitadel\Engine\ActivateMail.cs,ActivateProc,The following statement contains a magic number: System.Threading.Thread.Sleep (1000);  
Magic Number,Engine,CollectQuests,C:\repos\sasha237_NorthCitadel\Engine\CollectQuests.cs,Worker,The following statement contains a magic number: if (args.Length != 5) {  	PrintUsage ();  	return;  }  
Magic Number,Engine,CollectQuests,C:\repos\sasha237_NorthCitadel\Engine\CollectQuests.cs,Worker,The following statement contains a magic number: collectAll = args [2] == "1";  
Magic Number,Engine,CollectQuests,C:\repos\sasha237_NorthCitadel\Engine\CollectQuests.cs,Worker,The following statement contains a magic number: buyFood = args [3] == "1";  
Magic Number,Engine,CollectQuests,C:\repos\sasha237_NorthCitadel\Engine\CollectQuests.cs,Worker,The following statement contains a magic number: buyWeapons = args [4] == "1";  
Magic Number,Engine,CollectQuests,C:\repos\sasha237_NorthCitadel\Engine\CollectQuests.cs,BotProc,The following statement contains a magic number: try {  	//инициализируем класс  	ManagedCitizen Bot = new NerZul.Core.Utils.ManagedCitizen ((string)botinfo ["login"]' (string)botinfo ["email"]' (string)botinfo ["password"]' Globals.BotConfig);  	//Пытаемся залогиниться через проксики  	if (Bot.Login () == ManagedCitizen.LoginResult.Success)//Bot.Bot.Login();	//if(true)  	 {  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		ConsoleLog.WriteLine ("Logged in - " + Bot.Bot.LoginName);  		if (buyFood) {  			ConsoleLog.WriteLine ("Покупает 3 булки");  			Bot.Bot.BuyItem (int.Parse (botinfo ["country"].ToString ())' Goods.Food' 3' 0' 0' true);  		}  		if (buyWeapons) {  			ConsoleLog.WriteLine ("Покупает 3 пушки");  			Bot.Bot.BuyItem (int.Parse (botinfo ["country"].ToString ())' Goods.Weapon' 3' 0' 0' true);  		}  		for (int i = 0; i < 5; i++) {  			string response = Bot.Bot.m_Client.DownloadString ("http://www.erepublik.com/en");  			Match m = Regex.Match (response' "var missionsJSON = (\\[.*?\\]);\\s*var csrfToken = '([^']+)';");  			string MissionsJson = m.Groups [1].Value;  			string MissionsToken = m.Groups [2].Value;  			if (collectAll) {  				for (int q = 1; q < 16; i++) {  					Bot.Bot.DoMission (q' false' MissionsToken);  				}  				break;  			}  			else {  				if (Bot.Bot.DoMissionsFromJson (MissionsJson' MissionsToken) == 0)  					break;  			}  		}  		/*                     for (int i = 0; i < 2; i++)                     {                         ConsoleLog.WriteLine(                             Bot.Bot.LoginName + " - try to buy 3 " + ((i == 0) ? "food" : "guns"));                          try                         {                             System.Threading.Thread.Sleep(rnd.Next(1000' 2000));                             // Первые 3 раза покупаем булки' вторые 3 раза пушки                             Bot.Bot.BuyItem(int.Parse(botinfo["country"].ToString())' (i==0)?Goods.Food:Goods.Weapon' 3' 0' 0' 0' 0);                             Bot.GetInfoFromCommonResponse();                             ConsoleLog.WriteLine(                                 Bot.Bot.LoginName + " - after buy. " +                                 "Currency left: " + Bot.Info.Nat_occur.ToString());                         }                         catch (Exception e)                         {                             ConsoleLog.WriteLine("Error buying: " + e.Message);                         }                     } 					*//*                     //Utils.TryToUpdateDbWithCurrentInfo(botinfo' Bot);                     //Вроде нечем апдейтить' к сожалению.                      #region FEED                     try                     {                         ConsoleLog.WriteLine(Bot.Bot.LoginName + " - collecting FEED quest");                         Bot.Bot.RewardFeed();                     }                     catch (Exception e)                     {                         ConsoleLog.WriteLine("Error collecting FEED quest: " + e.Message);                     }                                         #endregion                      #region WEAPON                     try                     {                         ConsoleLog.WriteLine(Bot.Bot.LoginName + " - collecting WEAPON quest");                         Bot.Bot.RewardWeapoon();                     }                     catch (Exception e)                     {                         ConsoleLog.WriteLine("Error collecting WEAPON quest: " + e.Message);                     }                      #endregion                      #region HERO                     try                     {                         ConsoleLog.WriteLine(Bot.Bot.LoginName + " - collecting HERO quest");                         Bot.Bot.RewardHero();                     }                     catch (Exception e)                     {                         ConsoleLog.WriteLine("Error collecting HERO quest: " + e.Message);                     }                      #endregion                                          #region WORKING ROW                     try                     {                         ConsoleLog.WriteLine(Bot.Bot.LoginName + " - collecting WORKING ROW quest");                         Bot.Bot.RewardWorkingRow();                     }                     catch (Exception e)                     {                         ConsoleLog.WriteLine("Error collecting WORKING ROW quest: " + e.Message);                     }                      #endregion                      #region SOCIETY                     try                     {                        ConsoleLog.WriteLine(Bot.Bot.LoginName + " - collecting SOCIETY quest");                        Bot.Bot.RewardSociety();                     }                     catch (Exception e)                     {                        ConsoleLog.WriteLine("Error collecting SOCIETY quest: " + e.Message);                     }                      #endregion 					*/}  	else {  		ConsoleLog.WriteLine ("Unable to login - " + botinfo ["login"]);  	}  }  catch (System.Exception e) {  	ConsoleLog.WriteLine ("CollectQuests exception: " + e.Message);  }  
Magic Number,Engine,CollectQuests,C:\repos\sasha237_NorthCitadel\Engine\CollectQuests.cs,BotProc,The following statement contains a magic number: try {  	//инициализируем класс  	ManagedCitizen Bot = new NerZul.Core.Utils.ManagedCitizen ((string)botinfo ["login"]' (string)botinfo ["email"]' (string)botinfo ["password"]' Globals.BotConfig);  	//Пытаемся залогиниться через проксики  	if (Bot.Login () == ManagedCitizen.LoginResult.Success)//Bot.Bot.Login();	//if(true)  	 {  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		ConsoleLog.WriteLine ("Logged in - " + Bot.Bot.LoginName);  		if (buyFood) {  			ConsoleLog.WriteLine ("Покупает 3 булки");  			Bot.Bot.BuyItem (int.Parse (botinfo ["country"].ToString ())' Goods.Food' 3' 0' 0' true);  		}  		if (buyWeapons) {  			ConsoleLog.WriteLine ("Покупает 3 пушки");  			Bot.Bot.BuyItem (int.Parse (botinfo ["country"].ToString ())' Goods.Weapon' 3' 0' 0' true);  		}  		for (int i = 0; i < 5; i++) {  			string response = Bot.Bot.m_Client.DownloadString ("http://www.erepublik.com/en");  			Match m = Regex.Match (response' "var missionsJSON = (\\[.*?\\]);\\s*var csrfToken = '([^']+)';");  			string MissionsJson = m.Groups [1].Value;  			string MissionsToken = m.Groups [2].Value;  			if (collectAll) {  				for (int q = 1; q < 16; i++) {  					Bot.Bot.DoMission (q' false' MissionsToken);  				}  				break;  			}  			else {  				if (Bot.Bot.DoMissionsFromJson (MissionsJson' MissionsToken) == 0)  					break;  			}  		}  		/*                     for (int i = 0; i < 2; i++)                     {                         ConsoleLog.WriteLine(                             Bot.Bot.LoginName + " - try to buy 3 " + ((i == 0) ? "food" : "guns"));                          try                         {                             System.Threading.Thread.Sleep(rnd.Next(1000' 2000));                             // Первые 3 раза покупаем булки' вторые 3 раза пушки                             Bot.Bot.BuyItem(int.Parse(botinfo["country"].ToString())' (i==0)?Goods.Food:Goods.Weapon' 3' 0' 0' 0' 0);                             Bot.GetInfoFromCommonResponse();                             ConsoleLog.WriteLine(                                 Bot.Bot.LoginName + " - after buy. " +                                 "Currency left: " + Bot.Info.Nat_occur.ToString());                         }                         catch (Exception e)                         {                             ConsoleLog.WriteLine("Error buying: " + e.Message);                         }                     } 					*//*                     //Utils.TryToUpdateDbWithCurrentInfo(botinfo' Bot);                     //Вроде нечем апдейтить' к сожалению.                      #region FEED                     try                     {                         ConsoleLog.WriteLine(Bot.Bot.LoginName + " - collecting FEED quest");                         Bot.Bot.RewardFeed();                     }                     catch (Exception e)                     {                         ConsoleLog.WriteLine("Error collecting FEED quest: " + e.Message);                     }                                         #endregion                      #region WEAPON                     try                     {                         ConsoleLog.WriteLine(Bot.Bot.LoginName + " - collecting WEAPON quest");                         Bot.Bot.RewardWeapoon();                     }                     catch (Exception e)                     {                         ConsoleLog.WriteLine("Error collecting WEAPON quest: " + e.Message);                     }                      #endregion                      #region HERO                     try                     {                         ConsoleLog.WriteLine(Bot.Bot.LoginName + " - collecting HERO quest");                         Bot.Bot.RewardHero();                     }                     catch (Exception e)                     {                         ConsoleLog.WriteLine("Error collecting HERO quest: " + e.Message);                     }                      #endregion                                          #region WORKING ROW                     try                     {                         ConsoleLog.WriteLine(Bot.Bot.LoginName + " - collecting WORKING ROW quest");                         Bot.Bot.RewardWorkingRow();                     }                     catch (Exception e)                     {                         ConsoleLog.WriteLine("Error collecting WORKING ROW quest: " + e.Message);                     }                      #endregion                      #region SOCIETY                     try                     {                        ConsoleLog.WriteLine(Bot.Bot.LoginName + " - collecting SOCIETY quest");                        Bot.Bot.RewardSociety();                     }                     catch (Exception e)                     {                        ConsoleLog.WriteLine("Error collecting SOCIETY quest: " + e.Message);                     }                      #endregion 					*/}  	else {  		ConsoleLog.WriteLine ("Unable to login - " + botinfo ["login"]);  	}  }  catch (System.Exception e) {  	ConsoleLog.WriteLine ("CollectQuests exception: " + e.Message);  }  
Magic Number,Engine,CollectQuests,C:\repos\sasha237_NorthCitadel\Engine\CollectQuests.cs,BotProc,The following statement contains a magic number: try {  	//инициализируем класс  	ManagedCitizen Bot = new NerZul.Core.Utils.ManagedCitizen ((string)botinfo ["login"]' (string)botinfo ["email"]' (string)botinfo ["password"]' Globals.BotConfig);  	//Пытаемся залогиниться через проксики  	if (Bot.Login () == ManagedCitizen.LoginResult.Success)//Bot.Bot.Login();	//if(true)  	 {  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		ConsoleLog.WriteLine ("Logged in - " + Bot.Bot.LoginName);  		if (buyFood) {  			ConsoleLog.WriteLine ("Покупает 3 булки");  			Bot.Bot.BuyItem (int.Parse (botinfo ["country"].ToString ())' Goods.Food' 3' 0' 0' true);  		}  		if (buyWeapons) {  			ConsoleLog.WriteLine ("Покупает 3 пушки");  			Bot.Bot.BuyItem (int.Parse (botinfo ["country"].ToString ())' Goods.Weapon' 3' 0' 0' true);  		}  		for (int i = 0; i < 5; i++) {  			string response = Bot.Bot.m_Client.DownloadString ("http://www.erepublik.com/en");  			Match m = Regex.Match (response' "var missionsJSON = (\\[.*?\\]);\\s*var csrfToken = '([^']+)';");  			string MissionsJson = m.Groups [1].Value;  			string MissionsToken = m.Groups [2].Value;  			if (collectAll) {  				for (int q = 1; q < 16; i++) {  					Bot.Bot.DoMission (q' false' MissionsToken);  				}  				break;  			}  			else {  				if (Bot.Bot.DoMissionsFromJson (MissionsJson' MissionsToken) == 0)  					break;  			}  		}  		/*                     for (int i = 0; i < 2; i++)                     {                         ConsoleLog.WriteLine(                             Bot.Bot.LoginName + " - try to buy 3 " + ((i == 0) ? "food" : "guns"));                          try                         {                             System.Threading.Thread.Sleep(rnd.Next(1000' 2000));                             // Первые 3 раза покупаем булки' вторые 3 раза пушки                             Bot.Bot.BuyItem(int.Parse(botinfo["country"].ToString())' (i==0)?Goods.Food:Goods.Weapon' 3' 0' 0' 0' 0);                             Bot.GetInfoFromCommonResponse();                             ConsoleLog.WriteLine(                                 Bot.Bot.LoginName + " - after buy. " +                                 "Currency left: " + Bot.Info.Nat_occur.ToString());                         }                         catch (Exception e)                         {                             ConsoleLog.WriteLine("Error buying: " + e.Message);                         }                     } 					*//*                     //Utils.TryToUpdateDbWithCurrentInfo(botinfo' Bot);                     //Вроде нечем апдейтить' к сожалению.                      #region FEED                     try                     {                         ConsoleLog.WriteLine(Bot.Bot.LoginName + " - collecting FEED quest");                         Bot.Bot.RewardFeed();                     }                     catch (Exception e)                     {                         ConsoleLog.WriteLine("Error collecting FEED quest: " + e.Message);                     }                                         #endregion                      #region WEAPON                     try                     {                         ConsoleLog.WriteLine(Bot.Bot.LoginName + " - collecting WEAPON quest");                         Bot.Bot.RewardWeapoon();                     }                     catch (Exception e)                     {                         ConsoleLog.WriteLine("Error collecting WEAPON quest: " + e.Message);                     }                      #endregion                      #region HERO                     try                     {                         ConsoleLog.WriteLine(Bot.Bot.LoginName + " - collecting HERO quest");                         Bot.Bot.RewardHero();                     }                     catch (Exception e)                     {                         ConsoleLog.WriteLine("Error collecting HERO quest: " + e.Message);                     }                      #endregion                                          #region WORKING ROW                     try                     {                         ConsoleLog.WriteLine(Bot.Bot.LoginName + " - collecting WORKING ROW quest");                         Bot.Bot.RewardWorkingRow();                     }                     catch (Exception e)                     {                         ConsoleLog.WriteLine("Error collecting WORKING ROW quest: " + e.Message);                     }                      #endregion                      #region SOCIETY                     try                     {                        ConsoleLog.WriteLine(Bot.Bot.LoginName + " - collecting SOCIETY quest");                        Bot.Bot.RewardSociety();                     }                     catch (Exception e)                     {                        ConsoleLog.WriteLine("Error collecting SOCIETY quest: " + e.Message);                     }                      #endregion 					*/}  	else {  		ConsoleLog.WriteLine ("Unable to login - " + botinfo ["login"]);  	}  }  catch (System.Exception e) {  	ConsoleLog.WriteLine ("CollectQuests exception: " + e.Message);  }  
Magic Number,Engine,CollectQuests,C:\repos\sasha237_NorthCitadel\Engine\CollectQuests.cs,BotProc,The following statement contains a magic number: try {  	//инициализируем класс  	ManagedCitizen Bot = new NerZul.Core.Utils.ManagedCitizen ((string)botinfo ["login"]' (string)botinfo ["email"]' (string)botinfo ["password"]' Globals.BotConfig);  	//Пытаемся залогиниться через проксики  	if (Bot.Login () == ManagedCitizen.LoginResult.Success)//Bot.Bot.Login();	//if(true)  	 {  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		ConsoleLog.WriteLine ("Logged in - " + Bot.Bot.LoginName);  		if (buyFood) {  			ConsoleLog.WriteLine ("Покупает 3 булки");  			Bot.Bot.BuyItem (int.Parse (botinfo ["country"].ToString ())' Goods.Food' 3' 0' 0' true);  		}  		if (buyWeapons) {  			ConsoleLog.WriteLine ("Покупает 3 пушки");  			Bot.Bot.BuyItem (int.Parse (botinfo ["country"].ToString ())' Goods.Weapon' 3' 0' 0' true);  		}  		for (int i = 0; i < 5; i++) {  			string response = Bot.Bot.m_Client.DownloadString ("http://www.erepublik.com/en");  			Match m = Regex.Match (response' "var missionsJSON = (\\[.*?\\]);\\s*var csrfToken = '([^']+)';");  			string MissionsJson = m.Groups [1].Value;  			string MissionsToken = m.Groups [2].Value;  			if (collectAll) {  				for (int q = 1; q < 16; i++) {  					Bot.Bot.DoMission (q' false' MissionsToken);  				}  				break;  			}  			else {  				if (Bot.Bot.DoMissionsFromJson (MissionsJson' MissionsToken) == 0)  					break;  			}  		}  		/*                     for (int i = 0; i < 2; i++)                     {                         ConsoleLog.WriteLine(                             Bot.Bot.LoginName + " - try to buy 3 " + ((i == 0) ? "food" : "guns"));                          try                         {                             System.Threading.Thread.Sleep(rnd.Next(1000' 2000));                             // Первые 3 раза покупаем булки' вторые 3 раза пушки                             Bot.Bot.BuyItem(int.Parse(botinfo["country"].ToString())' (i==0)?Goods.Food:Goods.Weapon' 3' 0' 0' 0' 0);                             Bot.GetInfoFromCommonResponse();                             ConsoleLog.WriteLine(                                 Bot.Bot.LoginName + " - after buy. " +                                 "Currency left: " + Bot.Info.Nat_occur.ToString());                         }                         catch (Exception e)                         {                             ConsoleLog.WriteLine("Error buying: " + e.Message);                         }                     } 					*//*                     //Utils.TryToUpdateDbWithCurrentInfo(botinfo' Bot);                     //Вроде нечем апдейтить' к сожалению.                      #region FEED                     try                     {                         ConsoleLog.WriteLine(Bot.Bot.LoginName + " - collecting FEED quest");                         Bot.Bot.RewardFeed();                     }                     catch (Exception e)                     {                         ConsoleLog.WriteLine("Error collecting FEED quest: " + e.Message);                     }                                         #endregion                      #region WEAPON                     try                     {                         ConsoleLog.WriteLine(Bot.Bot.LoginName + " - collecting WEAPON quest");                         Bot.Bot.RewardWeapoon();                     }                     catch (Exception e)                     {                         ConsoleLog.WriteLine("Error collecting WEAPON quest: " + e.Message);                     }                      #endregion                      #region HERO                     try                     {                         ConsoleLog.WriteLine(Bot.Bot.LoginName + " - collecting HERO quest");                         Bot.Bot.RewardHero();                     }                     catch (Exception e)                     {                         ConsoleLog.WriteLine("Error collecting HERO quest: " + e.Message);                     }                      #endregion                                          #region WORKING ROW                     try                     {                         ConsoleLog.WriteLine(Bot.Bot.LoginName + " - collecting WORKING ROW quest");                         Bot.Bot.RewardWorkingRow();                     }                     catch (Exception e)                     {                         ConsoleLog.WriteLine("Error collecting WORKING ROW quest: " + e.Message);                     }                      #endregion                      #region SOCIETY                     try                     {                        ConsoleLog.WriteLine(Bot.Bot.LoginName + " - collecting SOCIETY quest");                        Bot.Bot.RewardSociety();                     }                     catch (Exception e)                     {                        ConsoleLog.WriteLine("Error collecting SOCIETY quest: " + e.Message);                     }                      #endregion 					*/}  	else {  		ConsoleLog.WriteLine ("Unable to login - " + botinfo ["login"]);  	}  }  catch (System.Exception e) {  	ConsoleLog.WriteLine ("CollectQuests exception: " + e.Message);  }  
Magic Number,Engine,CollectQuests,C:\repos\sasha237_NorthCitadel\Engine\CollectQuests.cs,BotProc,The following statement contains a magic number: try {  	//инициализируем класс  	ManagedCitizen Bot = new NerZul.Core.Utils.ManagedCitizen ((string)botinfo ["login"]' (string)botinfo ["email"]' (string)botinfo ["password"]' Globals.BotConfig);  	//Пытаемся залогиниться через проксики  	if (Bot.Login () == ManagedCitizen.LoginResult.Success)//Bot.Bot.Login();	//if(true)  	 {  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		ConsoleLog.WriteLine ("Logged in - " + Bot.Bot.LoginName);  		if (buyFood) {  			ConsoleLog.WriteLine ("Покупает 3 булки");  			Bot.Bot.BuyItem (int.Parse (botinfo ["country"].ToString ())' Goods.Food' 3' 0' 0' true);  		}  		if (buyWeapons) {  			ConsoleLog.WriteLine ("Покупает 3 пушки");  			Bot.Bot.BuyItem (int.Parse (botinfo ["country"].ToString ())' Goods.Weapon' 3' 0' 0' true);  		}  		for (int i = 0; i < 5; i++) {  			string response = Bot.Bot.m_Client.DownloadString ("http://www.erepublik.com/en");  			Match m = Regex.Match (response' "var missionsJSON = (\\[.*?\\]);\\s*var csrfToken = '([^']+)';");  			string MissionsJson = m.Groups [1].Value;  			string MissionsToken = m.Groups [2].Value;  			if (collectAll) {  				for (int q = 1; q < 16; i++) {  					Bot.Bot.DoMission (q' false' MissionsToken);  				}  				break;  			}  			else {  				if (Bot.Bot.DoMissionsFromJson (MissionsJson' MissionsToken) == 0)  					break;  			}  		}  		/*                     for (int i = 0; i < 2; i++)                     {                         ConsoleLog.WriteLine(                             Bot.Bot.LoginName + " - try to buy 3 " + ((i == 0) ? "food" : "guns"));                          try                         {                             System.Threading.Thread.Sleep(rnd.Next(1000' 2000));                             // Первые 3 раза покупаем булки' вторые 3 раза пушки                             Bot.Bot.BuyItem(int.Parse(botinfo["country"].ToString())' (i==0)?Goods.Food:Goods.Weapon' 3' 0' 0' 0' 0);                             Bot.GetInfoFromCommonResponse();                             ConsoleLog.WriteLine(                                 Bot.Bot.LoginName + " - after buy. " +                                 "Currency left: " + Bot.Info.Nat_occur.ToString());                         }                         catch (Exception e)                         {                             ConsoleLog.WriteLine("Error buying: " + e.Message);                         }                     } 					*//*                     //Utils.TryToUpdateDbWithCurrentInfo(botinfo' Bot);                     //Вроде нечем апдейтить' к сожалению.                      #region FEED                     try                     {                         ConsoleLog.WriteLine(Bot.Bot.LoginName + " - collecting FEED quest");                         Bot.Bot.RewardFeed();                     }                     catch (Exception e)                     {                         ConsoleLog.WriteLine("Error collecting FEED quest: " + e.Message);                     }                                         #endregion                      #region WEAPON                     try                     {                         ConsoleLog.WriteLine(Bot.Bot.LoginName + " - collecting WEAPON quest");                         Bot.Bot.RewardWeapoon();                     }                     catch (Exception e)                     {                         ConsoleLog.WriteLine("Error collecting WEAPON quest: " + e.Message);                     }                      #endregion                      #region HERO                     try                     {                         ConsoleLog.WriteLine(Bot.Bot.LoginName + " - collecting HERO quest");                         Bot.Bot.RewardHero();                     }                     catch (Exception e)                     {                         ConsoleLog.WriteLine("Error collecting HERO quest: " + e.Message);                     }                      #endregion                                          #region WORKING ROW                     try                     {                         ConsoleLog.WriteLine(Bot.Bot.LoginName + " - collecting WORKING ROW quest");                         Bot.Bot.RewardWorkingRow();                     }                     catch (Exception e)                     {                         ConsoleLog.WriteLine("Error collecting WORKING ROW quest: " + e.Message);                     }                      #endregion                      #region SOCIETY                     try                     {                        ConsoleLog.WriteLine(Bot.Bot.LoginName + " - collecting SOCIETY quest");                        Bot.Bot.RewardSociety();                     }                     catch (Exception e)                     {                        ConsoleLog.WriteLine("Error collecting SOCIETY quest: " + e.Message);                     }                      #endregion 					*/}  	else {  		ConsoleLog.WriteLine ("Unable to login - " + botinfo ["login"]);  	}  }  catch (System.Exception e) {  	ConsoleLog.WriteLine ("CollectQuests exception: " + e.Message);  }  
Magic Number,Engine,CollectQuests,C:\repos\sasha237_NorthCitadel\Engine\CollectQuests.cs,BotProc,The following statement contains a magic number: if (Bot.Login () == ManagedCitizen.LoginResult.Success)//Bot.Bot.Login();	//if(true)   {  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	ConsoleLog.WriteLine ("Logged in - " + Bot.Bot.LoginName);  	if (buyFood) {  		ConsoleLog.WriteLine ("Покупает 3 булки");  		Bot.Bot.BuyItem (int.Parse (botinfo ["country"].ToString ())' Goods.Food' 3' 0' 0' true);  	}  	if (buyWeapons) {  		ConsoleLog.WriteLine ("Покупает 3 пушки");  		Bot.Bot.BuyItem (int.Parse (botinfo ["country"].ToString ())' Goods.Weapon' 3' 0' 0' true);  	}  	for (int i = 0; i < 5; i++) {  		string response = Bot.Bot.m_Client.DownloadString ("http://www.erepublik.com/en");  		Match m = Regex.Match (response' "var missionsJSON = (\\[.*?\\]);\\s*var csrfToken = '([^']+)';");  		string MissionsJson = m.Groups [1].Value;  		string MissionsToken = m.Groups [2].Value;  		if (collectAll) {  			for (int q = 1; q < 16; i++) {  				Bot.Bot.DoMission (q' false' MissionsToken);  			}  			break;  		}  		else {  			if (Bot.Bot.DoMissionsFromJson (MissionsJson' MissionsToken) == 0)  				break;  		}  	}  	/*                     for (int i = 0; i < 2; i++)                     {                         ConsoleLog.WriteLine(                             Bot.Bot.LoginName + " - try to buy 3 " + ((i == 0) ? "food" : "guns"));                          try                         {                             System.Threading.Thread.Sleep(rnd.Next(1000' 2000));                             // Первые 3 раза покупаем булки' вторые 3 раза пушки                             Bot.Bot.BuyItem(int.Parse(botinfo["country"].ToString())' (i==0)?Goods.Food:Goods.Weapon' 3' 0' 0' 0' 0);                             Bot.GetInfoFromCommonResponse();                             ConsoleLog.WriteLine(                                 Bot.Bot.LoginName + " - after buy. " +                                 "Currency left: " + Bot.Info.Nat_occur.ToString());                         }                         catch (Exception e)                         {                             ConsoleLog.WriteLine("Error buying: " + e.Message);                         }                     } 					*//*                     //Utils.TryToUpdateDbWithCurrentInfo(botinfo' Bot);                     //Вроде нечем апдейтить' к сожалению.                      #region FEED                     try                     {                         ConsoleLog.WriteLine(Bot.Bot.LoginName + " - collecting FEED quest");                         Bot.Bot.RewardFeed();                     }                     catch (Exception e)                     {                         ConsoleLog.WriteLine("Error collecting FEED quest: " + e.Message);                     }                                         #endregion                      #region WEAPON                     try                     {                         ConsoleLog.WriteLine(Bot.Bot.LoginName + " - collecting WEAPON quest");                         Bot.Bot.RewardWeapoon();                     }                     catch (Exception e)                     {                         ConsoleLog.WriteLine("Error collecting WEAPON quest: " + e.Message);                     }                      #endregion                      #region HERO                     try                     {                         ConsoleLog.WriteLine(Bot.Bot.LoginName + " - collecting HERO quest");                         Bot.Bot.RewardHero();                     }                     catch (Exception e)                     {                         ConsoleLog.WriteLine("Error collecting HERO quest: " + e.Message);                     }                      #endregion                                          #region WORKING ROW                     try                     {                         ConsoleLog.WriteLine(Bot.Bot.LoginName + " - collecting WORKING ROW quest");                         Bot.Bot.RewardWorkingRow();                     }                     catch (Exception e)                     {                         ConsoleLog.WriteLine("Error collecting WORKING ROW quest: " + e.Message);                     }                      #endregion                      #region SOCIETY                     try                     {                        ConsoleLog.WriteLine(Bot.Bot.LoginName + " - collecting SOCIETY quest");                        Bot.Bot.RewardSociety();                     }                     catch (Exception e)                     {                        ConsoleLog.WriteLine("Error collecting SOCIETY quest: " + e.Message);                     }                      #endregion 					*/}  else {  	ConsoleLog.WriteLine ("Unable to login - " + botinfo ["login"]);  }  
Magic Number,Engine,CollectQuests,C:\repos\sasha237_NorthCitadel\Engine\CollectQuests.cs,BotProc,The following statement contains a magic number: if (Bot.Login () == ManagedCitizen.LoginResult.Success)//Bot.Bot.Login();	//if(true)   {  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	ConsoleLog.WriteLine ("Logged in - " + Bot.Bot.LoginName);  	if (buyFood) {  		ConsoleLog.WriteLine ("Покупает 3 булки");  		Bot.Bot.BuyItem (int.Parse (botinfo ["country"].ToString ())' Goods.Food' 3' 0' 0' true);  	}  	if (buyWeapons) {  		ConsoleLog.WriteLine ("Покупает 3 пушки");  		Bot.Bot.BuyItem (int.Parse (botinfo ["country"].ToString ())' Goods.Weapon' 3' 0' 0' true);  	}  	for (int i = 0; i < 5; i++) {  		string response = Bot.Bot.m_Client.DownloadString ("http://www.erepublik.com/en");  		Match m = Regex.Match (response' "var missionsJSON = (\\[.*?\\]);\\s*var csrfToken = '([^']+)';");  		string MissionsJson = m.Groups [1].Value;  		string MissionsToken = m.Groups [2].Value;  		if (collectAll) {  			for (int q = 1; q < 16; i++) {  				Bot.Bot.DoMission (q' false' MissionsToken);  			}  			break;  		}  		else {  			if (Bot.Bot.DoMissionsFromJson (MissionsJson' MissionsToken) == 0)  				break;  		}  	}  	/*                     for (int i = 0; i < 2; i++)                     {                         ConsoleLog.WriteLine(                             Bot.Bot.LoginName + " - try to buy 3 " + ((i == 0) ? "food" : "guns"));                          try                         {                             System.Threading.Thread.Sleep(rnd.Next(1000' 2000));                             // Первые 3 раза покупаем булки' вторые 3 раза пушки                             Bot.Bot.BuyItem(int.Parse(botinfo["country"].ToString())' (i==0)?Goods.Food:Goods.Weapon' 3' 0' 0' 0' 0);                             Bot.GetInfoFromCommonResponse();                             ConsoleLog.WriteLine(                                 Bot.Bot.LoginName + " - after buy. " +                                 "Currency left: " + Bot.Info.Nat_occur.ToString());                         }                         catch (Exception e)                         {                             ConsoleLog.WriteLine("Error buying: " + e.Message);                         }                     } 					*//*                     //Utils.TryToUpdateDbWithCurrentInfo(botinfo' Bot);                     //Вроде нечем апдейтить' к сожалению.                      #region FEED                     try                     {                         ConsoleLog.WriteLine(Bot.Bot.LoginName + " - collecting FEED quest");                         Bot.Bot.RewardFeed();                     }                     catch (Exception e)                     {                         ConsoleLog.WriteLine("Error collecting FEED quest: " + e.Message);                     }                                         #endregion                      #region WEAPON                     try                     {                         ConsoleLog.WriteLine(Bot.Bot.LoginName + " - collecting WEAPON quest");                         Bot.Bot.RewardWeapoon();                     }                     catch (Exception e)                     {                         ConsoleLog.WriteLine("Error collecting WEAPON quest: " + e.Message);                     }                      #endregion                      #region HERO                     try                     {                         ConsoleLog.WriteLine(Bot.Bot.LoginName + " - collecting HERO quest");                         Bot.Bot.RewardHero();                     }                     catch (Exception e)                     {                         ConsoleLog.WriteLine("Error collecting HERO quest: " + e.Message);                     }                      #endregion                                          #region WORKING ROW                     try                     {                         ConsoleLog.WriteLine(Bot.Bot.LoginName + " - collecting WORKING ROW quest");                         Bot.Bot.RewardWorkingRow();                     }                     catch (Exception e)                     {                         ConsoleLog.WriteLine("Error collecting WORKING ROW quest: " + e.Message);                     }                      #endregion                      #region SOCIETY                     try                     {                        ConsoleLog.WriteLine(Bot.Bot.LoginName + " - collecting SOCIETY quest");                        Bot.Bot.RewardSociety();                     }                     catch (Exception e)                     {                        ConsoleLog.WriteLine("Error collecting SOCIETY quest: " + e.Message);                     }                      #endregion 					*/}  else {  	ConsoleLog.WriteLine ("Unable to login - " + botinfo ["login"]);  }  
Magic Number,Engine,CollectQuests,C:\repos\sasha237_NorthCitadel\Engine\CollectQuests.cs,BotProc,The following statement contains a magic number: if (Bot.Login () == ManagedCitizen.LoginResult.Success)//Bot.Bot.Login();	//if(true)   {  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	ConsoleLog.WriteLine ("Logged in - " + Bot.Bot.LoginName);  	if (buyFood) {  		ConsoleLog.WriteLine ("Покупает 3 булки");  		Bot.Bot.BuyItem (int.Parse (botinfo ["country"].ToString ())' Goods.Food' 3' 0' 0' true);  	}  	if (buyWeapons) {  		ConsoleLog.WriteLine ("Покупает 3 пушки");  		Bot.Bot.BuyItem (int.Parse (botinfo ["country"].ToString ())' Goods.Weapon' 3' 0' 0' true);  	}  	for (int i = 0; i < 5; i++) {  		string response = Bot.Bot.m_Client.DownloadString ("http://www.erepublik.com/en");  		Match m = Regex.Match (response' "var missionsJSON = (\\[.*?\\]);\\s*var csrfToken = '([^']+)';");  		string MissionsJson = m.Groups [1].Value;  		string MissionsToken = m.Groups [2].Value;  		if (collectAll) {  			for (int q = 1; q < 16; i++) {  				Bot.Bot.DoMission (q' false' MissionsToken);  			}  			break;  		}  		else {  			if (Bot.Bot.DoMissionsFromJson (MissionsJson' MissionsToken) == 0)  				break;  		}  	}  	/*                     for (int i = 0; i < 2; i++)                     {                         ConsoleLog.WriteLine(                             Bot.Bot.LoginName + " - try to buy 3 " + ((i == 0) ? "food" : "guns"));                          try                         {                             System.Threading.Thread.Sleep(rnd.Next(1000' 2000));                             // Первые 3 раза покупаем булки' вторые 3 раза пушки                             Bot.Bot.BuyItem(int.Parse(botinfo["country"].ToString())' (i==0)?Goods.Food:Goods.Weapon' 3' 0' 0' 0' 0);                             Bot.GetInfoFromCommonResponse();                             ConsoleLog.WriteLine(                                 Bot.Bot.LoginName + " - after buy. " +                                 "Currency left: " + Bot.Info.Nat_occur.ToString());                         }                         catch (Exception e)                         {                             ConsoleLog.WriteLine("Error buying: " + e.Message);                         }                     } 					*//*                     //Utils.TryToUpdateDbWithCurrentInfo(botinfo' Bot);                     //Вроде нечем апдейтить' к сожалению.                      #region FEED                     try                     {                         ConsoleLog.WriteLine(Bot.Bot.LoginName + " - collecting FEED quest");                         Bot.Bot.RewardFeed();                     }                     catch (Exception e)                     {                         ConsoleLog.WriteLine("Error collecting FEED quest: " + e.Message);                     }                                         #endregion                      #region WEAPON                     try                     {                         ConsoleLog.WriteLine(Bot.Bot.LoginName + " - collecting WEAPON quest");                         Bot.Bot.RewardWeapoon();                     }                     catch (Exception e)                     {                         ConsoleLog.WriteLine("Error collecting WEAPON quest: " + e.Message);                     }                      #endregion                      #region HERO                     try                     {                         ConsoleLog.WriteLine(Bot.Bot.LoginName + " - collecting HERO quest");                         Bot.Bot.RewardHero();                     }                     catch (Exception e)                     {                         ConsoleLog.WriteLine("Error collecting HERO quest: " + e.Message);                     }                      #endregion                                          #region WORKING ROW                     try                     {                         ConsoleLog.WriteLine(Bot.Bot.LoginName + " - collecting WORKING ROW quest");                         Bot.Bot.RewardWorkingRow();                     }                     catch (Exception e)                     {                         ConsoleLog.WriteLine("Error collecting WORKING ROW quest: " + e.Message);                     }                      #endregion                      #region SOCIETY                     try                     {                        ConsoleLog.WriteLine(Bot.Bot.LoginName + " - collecting SOCIETY quest");                        Bot.Bot.RewardSociety();                     }                     catch (Exception e)                     {                        ConsoleLog.WriteLine("Error collecting SOCIETY quest: " + e.Message);                     }                      #endregion 					*/}  else {  	ConsoleLog.WriteLine ("Unable to login - " + botinfo ["login"]);  }  
Magic Number,Engine,CollectQuests,C:\repos\sasha237_NorthCitadel\Engine\CollectQuests.cs,BotProc,The following statement contains a magic number: if (Bot.Login () == ManagedCitizen.LoginResult.Success)//Bot.Bot.Login();	//if(true)   {  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	ConsoleLog.WriteLine ("Logged in - " + Bot.Bot.LoginName);  	if (buyFood) {  		ConsoleLog.WriteLine ("Покупает 3 булки");  		Bot.Bot.BuyItem (int.Parse (botinfo ["country"].ToString ())' Goods.Food' 3' 0' 0' true);  	}  	if (buyWeapons) {  		ConsoleLog.WriteLine ("Покупает 3 пушки");  		Bot.Bot.BuyItem (int.Parse (botinfo ["country"].ToString ())' Goods.Weapon' 3' 0' 0' true);  	}  	for (int i = 0; i < 5; i++) {  		string response = Bot.Bot.m_Client.DownloadString ("http://www.erepublik.com/en");  		Match m = Regex.Match (response' "var missionsJSON = (\\[.*?\\]);\\s*var csrfToken = '([^']+)';");  		string MissionsJson = m.Groups [1].Value;  		string MissionsToken = m.Groups [2].Value;  		if (collectAll) {  			for (int q = 1; q < 16; i++) {  				Bot.Bot.DoMission (q' false' MissionsToken);  			}  			break;  		}  		else {  			if (Bot.Bot.DoMissionsFromJson (MissionsJson' MissionsToken) == 0)  				break;  		}  	}  	/*                     for (int i = 0; i < 2; i++)                     {                         ConsoleLog.WriteLine(                             Bot.Bot.LoginName + " - try to buy 3 " + ((i == 0) ? "food" : "guns"));                          try                         {                             System.Threading.Thread.Sleep(rnd.Next(1000' 2000));                             // Первые 3 раза покупаем булки' вторые 3 раза пушки                             Bot.Bot.BuyItem(int.Parse(botinfo["country"].ToString())' (i==0)?Goods.Food:Goods.Weapon' 3' 0' 0' 0' 0);                             Bot.GetInfoFromCommonResponse();                             ConsoleLog.WriteLine(                                 Bot.Bot.LoginName + " - after buy. " +                                 "Currency left: " + Bot.Info.Nat_occur.ToString());                         }                         catch (Exception e)                         {                             ConsoleLog.WriteLine("Error buying: " + e.Message);                         }                     } 					*//*                     //Utils.TryToUpdateDbWithCurrentInfo(botinfo' Bot);                     //Вроде нечем апдейтить' к сожалению.                      #region FEED                     try                     {                         ConsoleLog.WriteLine(Bot.Bot.LoginName + " - collecting FEED quest");                         Bot.Bot.RewardFeed();                     }                     catch (Exception e)                     {                         ConsoleLog.WriteLine("Error collecting FEED quest: " + e.Message);                     }                                         #endregion                      #region WEAPON                     try                     {                         ConsoleLog.WriteLine(Bot.Bot.LoginName + " - collecting WEAPON quest");                         Bot.Bot.RewardWeapoon();                     }                     catch (Exception e)                     {                         ConsoleLog.WriteLine("Error collecting WEAPON quest: " + e.Message);                     }                      #endregion                      #region HERO                     try                     {                         ConsoleLog.WriteLine(Bot.Bot.LoginName + " - collecting HERO quest");                         Bot.Bot.RewardHero();                     }                     catch (Exception e)                     {                         ConsoleLog.WriteLine("Error collecting HERO quest: " + e.Message);                     }                      #endregion                                          #region WORKING ROW                     try                     {                         ConsoleLog.WriteLine(Bot.Bot.LoginName + " - collecting WORKING ROW quest");                         Bot.Bot.RewardWorkingRow();                     }                     catch (Exception e)                     {                         ConsoleLog.WriteLine("Error collecting WORKING ROW quest: " + e.Message);                     }                      #endregion                      #region SOCIETY                     try                     {                        ConsoleLog.WriteLine(Bot.Bot.LoginName + " - collecting SOCIETY quest");                        Bot.Bot.RewardSociety();                     }                     catch (Exception e)                     {                        ConsoleLog.WriteLine("Error collecting SOCIETY quest: " + e.Message);                     }                      #endregion 					*/}  else {  	ConsoleLog.WriteLine ("Unable to login - " + botinfo ["login"]);  }  
Magic Number,Engine,CollectQuests,C:\repos\sasha237_NorthCitadel\Engine\CollectQuests.cs,BotProc,The following statement contains a magic number: if (Bot.Login () == ManagedCitizen.LoginResult.Success)//Bot.Bot.Login();	//if(true)   {  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	ConsoleLog.WriteLine ("Logged in - " + Bot.Bot.LoginName);  	if (buyFood) {  		ConsoleLog.WriteLine ("Покупает 3 булки");  		Bot.Bot.BuyItem (int.Parse (botinfo ["country"].ToString ())' Goods.Food' 3' 0' 0' true);  	}  	if (buyWeapons) {  		ConsoleLog.WriteLine ("Покупает 3 пушки");  		Bot.Bot.BuyItem (int.Parse (botinfo ["country"].ToString ())' Goods.Weapon' 3' 0' 0' true);  	}  	for (int i = 0; i < 5; i++) {  		string response = Bot.Bot.m_Client.DownloadString ("http://www.erepublik.com/en");  		Match m = Regex.Match (response' "var missionsJSON = (\\[.*?\\]);\\s*var csrfToken = '([^']+)';");  		string MissionsJson = m.Groups [1].Value;  		string MissionsToken = m.Groups [2].Value;  		if (collectAll) {  			for (int q = 1; q < 16; i++) {  				Bot.Bot.DoMission (q' false' MissionsToken);  			}  			break;  		}  		else {  			if (Bot.Bot.DoMissionsFromJson (MissionsJson' MissionsToken) == 0)  				break;  		}  	}  	/*                     for (int i = 0; i < 2; i++)                     {                         ConsoleLog.WriteLine(                             Bot.Bot.LoginName + " - try to buy 3 " + ((i == 0) ? "food" : "guns"));                          try                         {                             System.Threading.Thread.Sleep(rnd.Next(1000' 2000));                             // Первые 3 раза покупаем булки' вторые 3 раза пушки                             Bot.Bot.BuyItem(int.Parse(botinfo["country"].ToString())' (i==0)?Goods.Food:Goods.Weapon' 3' 0' 0' 0' 0);                             Bot.GetInfoFromCommonResponse();                             ConsoleLog.WriteLine(                                 Bot.Bot.LoginName + " - after buy. " +                                 "Currency left: " + Bot.Info.Nat_occur.ToString());                         }                         catch (Exception e)                         {                             ConsoleLog.WriteLine("Error buying: " + e.Message);                         }                     } 					*//*                     //Utils.TryToUpdateDbWithCurrentInfo(botinfo' Bot);                     //Вроде нечем апдейтить' к сожалению.                      #region FEED                     try                     {                         ConsoleLog.WriteLine(Bot.Bot.LoginName + " - collecting FEED quest");                         Bot.Bot.RewardFeed();                     }                     catch (Exception e)                     {                         ConsoleLog.WriteLine("Error collecting FEED quest: " + e.Message);                     }                                         #endregion                      #region WEAPON                     try                     {                         ConsoleLog.WriteLine(Bot.Bot.LoginName + " - collecting WEAPON quest");                         Bot.Bot.RewardWeapoon();                     }                     catch (Exception e)                     {                         ConsoleLog.WriteLine("Error collecting WEAPON quest: " + e.Message);                     }                      #endregion                      #region HERO                     try                     {                         ConsoleLog.WriteLine(Bot.Bot.LoginName + " - collecting HERO quest");                         Bot.Bot.RewardHero();                     }                     catch (Exception e)                     {                         ConsoleLog.WriteLine("Error collecting HERO quest: " + e.Message);                     }                      #endregion                                          #region WORKING ROW                     try                     {                         ConsoleLog.WriteLine(Bot.Bot.LoginName + " - collecting WORKING ROW quest");                         Bot.Bot.RewardWorkingRow();                     }                     catch (Exception e)                     {                         ConsoleLog.WriteLine("Error collecting WORKING ROW quest: " + e.Message);                     }                      #endregion                      #region SOCIETY                     try                     {                        ConsoleLog.WriteLine(Bot.Bot.LoginName + " - collecting SOCIETY quest");                        Bot.Bot.RewardSociety();                     }                     catch (Exception e)                     {                        ConsoleLog.WriteLine("Error collecting SOCIETY quest: " + e.Message);                     }                      #endregion 					*/}  else {  	ConsoleLog.WriteLine ("Unable to login - " + botinfo ["login"]);  }  
Magic Number,Engine,CollectQuests,C:\repos\sasha237_NorthCitadel\Engine\CollectQuests.cs,BotProc,The following statement contains a magic number: if (buyFood) {  	ConsoleLog.WriteLine ("Покупает 3 булки");  	Bot.Bot.BuyItem (int.Parse (botinfo ["country"].ToString ())' Goods.Food' 3' 0' 0' true);  }  
Magic Number,Engine,CollectQuests,C:\repos\sasha237_NorthCitadel\Engine\CollectQuests.cs,BotProc,The following statement contains a magic number: Bot.Bot.BuyItem (int.Parse (botinfo ["country"].ToString ())' Goods.Food' 3' 0' 0' true);  
Magic Number,Engine,CollectQuests,C:\repos\sasha237_NorthCitadel\Engine\CollectQuests.cs,BotProc,The following statement contains a magic number: if (buyWeapons) {  	ConsoleLog.WriteLine ("Покупает 3 пушки");  	Bot.Bot.BuyItem (int.Parse (botinfo ["country"].ToString ())' Goods.Weapon' 3' 0' 0' true);  }  
Magic Number,Engine,CollectQuests,C:\repos\sasha237_NorthCitadel\Engine\CollectQuests.cs,BotProc,The following statement contains a magic number: Bot.Bot.BuyItem (int.Parse (botinfo ["country"].ToString ())' Goods.Weapon' 3' 0' 0' true);  
Magic Number,Engine,CollectQuests,C:\repos\sasha237_NorthCitadel\Engine\CollectQuests.cs,BotProc,The following statement contains a magic number: for (int i = 0; i < 5; i++) {  	string response = Bot.Bot.m_Client.DownloadString ("http://www.erepublik.com/en");  	Match m = Regex.Match (response' "var missionsJSON = (\\[.*?\\]);\\s*var csrfToken = '([^']+)';");  	string MissionsJson = m.Groups [1].Value;  	string MissionsToken = m.Groups [2].Value;  	if (collectAll) {  		for (int q = 1; q < 16; i++) {  			Bot.Bot.DoMission (q' false' MissionsToken);  		}  		break;  	}  	else {  		if (Bot.Bot.DoMissionsFromJson (MissionsJson' MissionsToken) == 0)  			break;  	}  }  
Magic Number,Engine,CollectQuests,C:\repos\sasha237_NorthCitadel\Engine\CollectQuests.cs,BotProc,The following statement contains a magic number: for (int i = 0; i < 5; i++) {  	string response = Bot.Bot.m_Client.DownloadString ("http://www.erepublik.com/en");  	Match m = Regex.Match (response' "var missionsJSON = (\\[.*?\\]);\\s*var csrfToken = '([^']+)';");  	string MissionsJson = m.Groups [1].Value;  	string MissionsToken = m.Groups [2].Value;  	if (collectAll) {  		for (int q = 1; q < 16; i++) {  			Bot.Bot.DoMission (q' false' MissionsToken);  		}  		break;  	}  	else {  		if (Bot.Bot.DoMissionsFromJson (MissionsJson' MissionsToken) == 0)  			break;  	}  }  
Magic Number,Engine,CollectQuests,C:\repos\sasha237_NorthCitadel\Engine\CollectQuests.cs,BotProc,The following statement contains a magic number: for (int i = 0; i < 5; i++) {  	string response = Bot.Bot.m_Client.DownloadString ("http://www.erepublik.com/en");  	Match m = Regex.Match (response' "var missionsJSON = (\\[.*?\\]);\\s*var csrfToken = '([^']+)';");  	string MissionsJson = m.Groups [1].Value;  	string MissionsToken = m.Groups [2].Value;  	if (collectAll) {  		for (int q = 1; q < 16; i++) {  			Bot.Bot.DoMission (q' false' MissionsToken);  		}  		break;  	}  	else {  		if (Bot.Bot.DoMissionsFromJson (MissionsJson' MissionsToken) == 0)  			break;  	}  }  
Magic Number,Engine,CollectQuests,C:\repos\sasha237_NorthCitadel\Engine\CollectQuests.cs,BotProc,The following statement contains a magic number: if (collectAll) {  	for (int q = 1; q < 16; i++) {  		Bot.Bot.DoMission (q' false' MissionsToken);  	}  	break;  }  else {  	if (Bot.Bot.DoMissionsFromJson (MissionsJson' MissionsToken) == 0)  		break;  }  
Magic Number,Engine,CollectQuests,C:\repos\sasha237_NorthCitadel\Engine\CollectQuests.cs,BotProc,The following statement contains a magic number: for (int q = 1; q < 16; i++) {  	Bot.Bot.DoMission (q' false' MissionsToken);  }  
Magic Number,Engine,Comment,C:\repos\sasha237_NorthCitadel\Engine\Comment.cs,Worker,The following statement contains a magic number: if (args.Length != 4) {  	PrintUsage ();  	return;  }  
Magic Number,Engine,Comment,C:\repos\sasha237_NorthCitadel\Engine\Comment.cs,Worker,The following statement contains a magic number: int.TryParse (args [2]' out iId);  
Magic Number,Engine,Comment,C:\repos\sasha237_NorthCitadel\Engine\Comment.cs,Worker,The following statement contains a magic number: sMess = args [3];  
Magic Number,Engine,Deploy,C:\repos\sasha237_NorthCitadel\Engine\Deploy.cs,Worker,The following statement contains a magic number: if (args.Length != 3) {  	PrintUsage ();  	return;  }  
Magic Number,Engine,Deploy,C:\repos\sasha237_NorthCitadel\Engine\Deploy.cs,Worker,The following statement contains a magic number: group = args [2];  
Magic Number,Engine,Deploy,C:\repos\sasha237_NorthCitadel\Engine\Deploy.cs,Worker,The following statement contains a magic number: int.TryParse (args [2]' out id);  
Magic Number,Engine,Feed,C:\repos\sasha237_NorthCitadel\Engine\Feed.cs,Worker,The following statement contains a magic number: if (args.Length != 8) {  	PrintUsage ();  	return;  }  
Magic Number,Engine,Feed,C:\repos\sasha237_NorthCitadel\Engine\Feed.cs,Worker,The following statement contains a magic number: if (!int.TryParse (args [2]' out food_quality)) {  	ConsoleLog.WriteLine ("Wrong food_health");  	return;  }  
Magic Number,Engine,Feed,C:\repos\sasha237_NorthCitadel\Engine\Feed.cs,Worker,The following statement contains a magic number: if (!int.TryParse (args [3]' out for_health)) {  	ConsoleLog.WriteLine ("Wrong food_quality");  	return;  }  
Magic Number,Engine,Feed,C:\repos\sasha237_NorthCitadel\Engine\Feed.cs,Worker,The following statement contains a magic number: args [4] = (String.IsNullOrEmpty (args [4]) || (args [4] == "0")) ? "101" : args [4];  
Magic Number,Engine,Feed,C:\repos\sasha237_NorthCitadel\Engine\Feed.cs,Worker,The following statement contains a magic number: args [4] = (String.IsNullOrEmpty (args [4]) || (args [4] == "0")) ? "101" : args [4];  
Magic Number,Engine,Feed,C:\repos\sasha237_NorthCitadel\Engine\Feed.cs,Worker,The following statement contains a magic number: args [4] = (String.IsNullOrEmpty (args [4]) || (args [4] == "0")) ? "101" : args [4];  
Magic Number,Engine,Feed,C:\repos\sasha237_NorthCitadel\Engine\Feed.cs,Worker,The following statement contains a magic number: args [4] = (String.IsNullOrEmpty (args [4]) || (args [4] == "0")) ? "101" : args [4];  
Magic Number,Engine,Feed,C:\repos\sasha237_NorthCitadel\Engine\Feed.cs,Worker,The following statement contains a magic number: if (!int.TryParse (args [4]' out less_then)) {  	ConsoleLog.WriteLine ("Wrong less_then");  	return;  }  
Magic Number,Engine,Feed,C:\repos\sasha237_NorthCitadel\Engine\Feed.cs,Worker,The following statement contains a magic number: if (!bool.TryParse (args [5]' out justEat)) {  	ConsoleLog.WriteLine ("Wrong just_eat");  	return;  }  
Magic Number,Engine,Feed,C:\repos\sasha237_NorthCitadel\Engine\Feed.cs,Worker,The following statement contains a magic number: if (!bool.TryParse (args [6]' out fastFood)) {  	ConsoleLog.WriteLine ("Wrong fast_food");  	return;  }  
Magic Number,Engine,Feed,C:\repos\sasha237_NorthCitadel\Engine\Feed.cs,Worker,The following statement contains a magic number: if (!bool.TryParse (args [7]' out hungryFirst)) {  	ConsoleLog.WriteLine ("Wrong hungry_first");  	return;  }  
Magic Number,Engine,Feed,C:\repos\sasha237_NorthCitadel\Engine\Feed.cs,BotProc,The following statement contains a magic number: try {  	//инициализируем класс  	ManagedCitizen Bot = new NerZul.Core.Utils.ManagedCitizen ((string)botinfo ["login"]' (string)botinfo ["email"]' (string)botinfo ["password"]' Globals.BotConfig);  	//Пытаемся залогиниться через проксики  	ManagedCitizen.LoginResult loginResult;  	loginResult = Bot.Login ();  	if (loginResult == ManagedCitizen.LoginResult.Success) {  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		ConsoleLog.WriteLine ("Logged in - " + Bot.Bot.LoginName);  		Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' food_quality' for_health' justEat' fastFood);  		Utils.TryToUpdateDbWithCurrentInfo (botinfo' Bot);  	}  	else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  		botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  		Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  		//botinfo = Utils.TryToUpdateDbWithBasicInfo(botinfo' Bot);  	}  	//else  	//    if (Bot.Bot.GetLastResponse().Contains("infringement"))  	//    {  	//        botinfo["banned"] = 1;  	//        Utils.UpdateDbWithCustomBotInfo(botinfo' "banned");  	//        //botinfo = Utils.TryToUpdateDbWithBasicInfo(botinfo' Bot);  	//        ConsoleLog.WriteLine(botinfo["login"].ToString() + ": Banned");  	//    }  	else {  		//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  		ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  	}  }  catch (System.Exception e) {  	ConsoleLog.WriteLine ("Feed exception: " + e.Message);  }  
Magic Number,Engine,Feed,C:\repos\sasha237_NorthCitadel\Engine\Feed.cs,BotProc,The following statement contains a magic number: if (loginResult == ManagedCitizen.LoginResult.Success) {  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	ConsoleLog.WriteLine ("Logged in - " + Bot.Bot.LoginName);  	Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' food_quality' for_health' justEat' fastFood);  	Utils.TryToUpdateDbWithCurrentInfo (botinfo' Bot);  }  else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  	//botinfo = Utils.TryToUpdateDbWithBasicInfo(botinfo' Bot);  }  //else  //    if (Bot.Bot.GetLastResponse().Contains("infringement"))  //    {  //        botinfo["banned"] = 1;  //        Utils.UpdateDbWithCustomBotInfo(botinfo' "banned");  //        //botinfo = Utils.TryToUpdateDbWithBasicInfo(botinfo' Bot);  //        ConsoleLog.WriteLine(botinfo["login"].ToString() + ": Banned");  //    }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,Feed,C:\repos\sasha237_NorthCitadel\Engine\Feed.cs,BotProc,The following statement contains a magic number: if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  	//botinfo = Utils.TryToUpdateDbWithBasicInfo(botinfo' Bot);  }  //else  //    if (Bot.Bot.GetLastResponse().Contains("infringement"))  //    {  //        botinfo["banned"] = 1;  //        Utils.UpdateDbWithCustomBotInfo(botinfo' "banned");  //        //botinfo = Utils.TryToUpdateDbWithBasicInfo(botinfo' Bot);  //        ConsoleLog.WriteLine(botinfo["login"].ToString() + ": Banned");  //    }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,Feed,C:\repos\sasha237_NorthCitadel\Engine\Feed.cs,BotProc,The following statement contains a magic number: botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  
Magic Number,Engine,Fight,C:\repos\sasha237_NorthCitadel\Engine\Fight.cs,Worker,The following statement contains a magic number: if (args.Length != 12) {  	PrintUsage ();  	return;  }  
Magic Number,Engine,Fight,C:\repos\sasha237_NorthCitadel\Engine\Fight.cs,Worker,The following statement contains a magic number: int.TryParse (args [2]' out iBattle);  
Magic Number,Engine,Fight,C:\repos\sasha237_NorthCitadel\Engine\Fight.cs,Worker,The following statement contains a magic number: bool.TryParse (args [3]' out bBuyWeapon);  
Magic Number,Engine,Fight,C:\repos\sasha237_NorthCitadel\Engine\Fight.cs,Worker,The following statement contains a magic number: bool.TryParse (args [4]' out bBuyFood);  
Magic Number,Engine,Fight,C:\repos\sasha237_NorthCitadel\Engine\Fight.cs,Worker,The following statement contains a magic number: int.TryParse (args [5]' out iLeftHP);  
Magic Number,Engine,Fight,C:\repos\sasha237_NorthCitadel\Engine\Fight.cs,Worker,The following statement contains a magic number: int.TryParse (args [6]' out iLeftFood);  
Magic Number,Engine,Fight,C:\repos\sasha237_NorthCitadel\Engine\Fight.cs,Worker,The following statement contains a magic number: int.TryParse (args [7]' out iCountry);  
Magic Number,Engine,Fight,C:\repos\sasha237_NorthCitadel\Engine\Fight.cs,Worker,The following statement contains a magic number: bool.TryParse (args [8]' out doNotChange);  
Magic Number,Engine,Fight,C:\repos\sasha237_NorthCitadel\Engine\Fight.cs,Worker,The following statement contains a magic number: int.TryParse (args [9]' out iShotLimit);  
Magic Number,Engine,Fight,C:\repos\sasha237_NorthCitadel\Engine\Fight.cs,Worker,The following statement contains a magic number: bool.TryParse (args [10]' out cyclicFight);  
Magic Number,Engine,Fight,C:\repos\sasha237_NorthCitadel\Engine\Fight.cs,Worker,The following statement contains a magic number: int.TryParse (args [11]' out iExpLimit);  
Magic Number,Engine,Fight,C:\repos\sasha237_NorthCitadel\Engine\Fight.cs,Worker,The following statement contains a magic number: if (iLeftHP < 21)  	iLeftHP = 21;  
Magic Number,Engine,Fight,C:\repos\sasha237_NorthCitadel\Engine\Fight.cs,Worker,The following statement contains a magic number: if (iLeftHP < 21)  	iLeftHP = 21;  
Magic Number,Engine,Fight,C:\repos\sasha237_NorthCitadel\Engine\Fight.cs,Worker,The following statement contains a magic number: iLeftHP = 21;  
Magic Number,Engine,Fight,C:\repos\sasha237_NorthCitadel\Engine\Fight.cs,BotProc,The following statement contains a magic number: if (loginResult == ManagedCitizen.LoginResult.Success) {  	ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	// Смотрим состояние инвентаря  	if (Bot.GetStorageInfo (true)) {  		botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  	}  	if ((iLeftFood == 0) || (Bot.storageInfo.foodQty >= iLeftFood)) {  		for (int i = 1; i <= 3; i++) {  			if (cyclicFight)  				ConsoleLog.WriteLine ("Cyclic fight' try " + i.ToString ());  			int iter = 0;  			int retryCount = 0;  			float wellness = (float)botinfo ["wellness"];  			float oldWellness = 0;  			do {  				System.Threading.Thread.Sleep (1500);  				iter++;  				if (iter > 10)  					break;  				if (wellness > iLeftHP) {  					if (cyclicFight)  						ConsoleLog.WriteLine ("Cyclic fight' iteration " + iter.ToString () + ". Fight!");  					Bot.Bot.FightInBattle (iBattle' ((bBuyWeapon) ? 1 : 0)' (int)botinfo ["country"]' iLeftHP' iCountry' doNotChange' iShotLimit);  				}  				Bot.GetInfoFromCommonResponse (true);  				botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  				if (cyclicFight) {  					ConsoleLog.WriteLine ("Cyclic fight' iteration " + iter.ToString () + ". Feed!");  					Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 97' !bBuyFood' true);  				}  				Bot.GetInfoFromCommonResponse (true);  				botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  				wellness = (float)botinfo ["wellness"];  				ConsoleLog.WriteLine ("Fight finished. Wellness left: " + wellness.ToString ());  				if (oldWellness == wellness) {  					retryCount++;  				}  				else {  					oldWellness = wellness;  					retryCount = 0;  				}  				if ((!cyclicFight) || (retryCount >= 3) || ((iExpLimit != 0) && ((int)botinfo ["experience"]) >= iExpLimit))  					break;  			}  			while (wellness > iLeftHP);  			if ((!cyclicFight) || ((iExpLimit != 0) && ((int)botinfo ["experience"]) >= iExpLimit))  				break;  		}  	}  	// Смотрим состояние инвентаря  	if (Bot.GetStorageInfo (true)) {  		botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  	}  }  else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  	//botinfo = Utils.TryToUpdateDbWithBasicInfo(botinfo' Bot);  }  //else  //    if (Bot.Bot.GetLastResponse().Contains("infringement"))  //    {  //        botinfo["banned"] = 1;  //        Utils.UpdateDbWithCustomBotInfo(botinfo' "banned");  //        //botinfo = Utils.TryToUpdateDbWithBasicInfo(botinfo' Bot);  //        ConsoleLog.WriteLine(botinfo["login"].ToString() + ": Banned");  //    }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,Fight,C:\repos\sasha237_NorthCitadel\Engine\Fight.cs,BotProc,The following statement contains a magic number: if (loginResult == ManagedCitizen.LoginResult.Success) {  	ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	// Смотрим состояние инвентаря  	if (Bot.GetStorageInfo (true)) {  		botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  	}  	if ((iLeftFood == 0) || (Bot.storageInfo.foodQty >= iLeftFood)) {  		for (int i = 1; i <= 3; i++) {  			if (cyclicFight)  				ConsoleLog.WriteLine ("Cyclic fight' try " + i.ToString ());  			int iter = 0;  			int retryCount = 0;  			float wellness = (float)botinfo ["wellness"];  			float oldWellness = 0;  			do {  				System.Threading.Thread.Sleep (1500);  				iter++;  				if (iter > 10)  					break;  				if (wellness > iLeftHP) {  					if (cyclicFight)  						ConsoleLog.WriteLine ("Cyclic fight' iteration " + iter.ToString () + ". Fight!");  					Bot.Bot.FightInBattle (iBattle' ((bBuyWeapon) ? 1 : 0)' (int)botinfo ["country"]' iLeftHP' iCountry' doNotChange' iShotLimit);  				}  				Bot.GetInfoFromCommonResponse (true);  				botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  				if (cyclicFight) {  					ConsoleLog.WriteLine ("Cyclic fight' iteration " + iter.ToString () + ". Feed!");  					Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 97' !bBuyFood' true);  				}  				Bot.GetInfoFromCommonResponse (true);  				botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  				wellness = (float)botinfo ["wellness"];  				ConsoleLog.WriteLine ("Fight finished. Wellness left: " + wellness.ToString ());  				if (oldWellness == wellness) {  					retryCount++;  				}  				else {  					oldWellness = wellness;  					retryCount = 0;  				}  				if ((!cyclicFight) || (retryCount >= 3) || ((iExpLimit != 0) && ((int)botinfo ["experience"]) >= iExpLimit))  					break;  			}  			while (wellness > iLeftHP);  			if ((!cyclicFight) || ((iExpLimit != 0) && ((int)botinfo ["experience"]) >= iExpLimit))  				break;  		}  	}  	// Смотрим состояние инвентаря  	if (Bot.GetStorageInfo (true)) {  		botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  	}  }  else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  	//botinfo = Utils.TryToUpdateDbWithBasicInfo(botinfo' Bot);  }  //else  //    if (Bot.Bot.GetLastResponse().Contains("infringement"))  //    {  //        botinfo["banned"] = 1;  //        Utils.UpdateDbWithCustomBotInfo(botinfo' "banned");  //        //botinfo = Utils.TryToUpdateDbWithBasicInfo(botinfo' Bot);  //        ConsoleLog.WriteLine(botinfo["login"].ToString() + ": Banned");  //    }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,Fight,C:\repos\sasha237_NorthCitadel\Engine\Fight.cs,BotProc,The following statement contains a magic number: if (loginResult == ManagedCitizen.LoginResult.Success) {  	ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	// Смотрим состояние инвентаря  	if (Bot.GetStorageInfo (true)) {  		botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  	}  	if ((iLeftFood == 0) || (Bot.storageInfo.foodQty >= iLeftFood)) {  		for (int i = 1; i <= 3; i++) {  			if (cyclicFight)  				ConsoleLog.WriteLine ("Cyclic fight' try " + i.ToString ());  			int iter = 0;  			int retryCount = 0;  			float wellness = (float)botinfo ["wellness"];  			float oldWellness = 0;  			do {  				System.Threading.Thread.Sleep (1500);  				iter++;  				if (iter > 10)  					break;  				if (wellness > iLeftHP) {  					if (cyclicFight)  						ConsoleLog.WriteLine ("Cyclic fight' iteration " + iter.ToString () + ". Fight!");  					Bot.Bot.FightInBattle (iBattle' ((bBuyWeapon) ? 1 : 0)' (int)botinfo ["country"]' iLeftHP' iCountry' doNotChange' iShotLimit);  				}  				Bot.GetInfoFromCommonResponse (true);  				botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  				if (cyclicFight) {  					ConsoleLog.WriteLine ("Cyclic fight' iteration " + iter.ToString () + ". Feed!");  					Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 97' !bBuyFood' true);  				}  				Bot.GetInfoFromCommonResponse (true);  				botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  				wellness = (float)botinfo ["wellness"];  				ConsoleLog.WriteLine ("Fight finished. Wellness left: " + wellness.ToString ());  				if (oldWellness == wellness) {  					retryCount++;  				}  				else {  					oldWellness = wellness;  					retryCount = 0;  				}  				if ((!cyclicFight) || (retryCount >= 3) || ((iExpLimit != 0) && ((int)botinfo ["experience"]) >= iExpLimit))  					break;  			}  			while (wellness > iLeftHP);  			if ((!cyclicFight) || ((iExpLimit != 0) && ((int)botinfo ["experience"]) >= iExpLimit))  				break;  		}  	}  	// Смотрим состояние инвентаря  	if (Bot.GetStorageInfo (true)) {  		botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  	}  }  else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  	//botinfo = Utils.TryToUpdateDbWithBasicInfo(botinfo' Bot);  }  //else  //    if (Bot.Bot.GetLastResponse().Contains("infringement"))  //    {  //        botinfo["banned"] = 1;  //        Utils.UpdateDbWithCustomBotInfo(botinfo' "banned");  //        //botinfo = Utils.TryToUpdateDbWithBasicInfo(botinfo' Bot);  //        ConsoleLog.WriteLine(botinfo["login"].ToString() + ": Banned");  //    }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,Fight,C:\repos\sasha237_NorthCitadel\Engine\Fight.cs,BotProc,The following statement contains a magic number: if (loginResult == ManagedCitizen.LoginResult.Success) {  	ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	// Смотрим состояние инвентаря  	if (Bot.GetStorageInfo (true)) {  		botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  	}  	if ((iLeftFood == 0) || (Bot.storageInfo.foodQty >= iLeftFood)) {  		for (int i = 1; i <= 3; i++) {  			if (cyclicFight)  				ConsoleLog.WriteLine ("Cyclic fight' try " + i.ToString ());  			int iter = 0;  			int retryCount = 0;  			float wellness = (float)botinfo ["wellness"];  			float oldWellness = 0;  			do {  				System.Threading.Thread.Sleep (1500);  				iter++;  				if (iter > 10)  					break;  				if (wellness > iLeftHP) {  					if (cyclicFight)  						ConsoleLog.WriteLine ("Cyclic fight' iteration " + iter.ToString () + ". Fight!");  					Bot.Bot.FightInBattle (iBattle' ((bBuyWeapon) ? 1 : 0)' (int)botinfo ["country"]' iLeftHP' iCountry' doNotChange' iShotLimit);  				}  				Bot.GetInfoFromCommonResponse (true);  				botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  				if (cyclicFight) {  					ConsoleLog.WriteLine ("Cyclic fight' iteration " + iter.ToString () + ". Feed!");  					Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 97' !bBuyFood' true);  				}  				Bot.GetInfoFromCommonResponse (true);  				botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  				wellness = (float)botinfo ["wellness"];  				ConsoleLog.WriteLine ("Fight finished. Wellness left: " + wellness.ToString ());  				if (oldWellness == wellness) {  					retryCount++;  				}  				else {  					oldWellness = wellness;  					retryCount = 0;  				}  				if ((!cyclicFight) || (retryCount >= 3) || ((iExpLimit != 0) && ((int)botinfo ["experience"]) >= iExpLimit))  					break;  			}  			while (wellness > iLeftHP);  			if ((!cyclicFight) || ((iExpLimit != 0) && ((int)botinfo ["experience"]) >= iExpLimit))  				break;  		}  	}  	// Смотрим состояние инвентаря  	if (Bot.GetStorageInfo (true)) {  		botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  	}  }  else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  	//botinfo = Utils.TryToUpdateDbWithBasicInfo(botinfo' Bot);  }  //else  //    if (Bot.Bot.GetLastResponse().Contains("infringement"))  //    {  //        botinfo["banned"] = 1;  //        Utils.UpdateDbWithCustomBotInfo(botinfo' "banned");  //        //botinfo = Utils.TryToUpdateDbWithBasicInfo(botinfo' Bot);  //        ConsoleLog.WriteLine(botinfo["login"].ToString() + ": Banned");  //    }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,Fight,C:\repos\sasha237_NorthCitadel\Engine\Fight.cs,BotProc,The following statement contains a magic number: if (loginResult == ManagedCitizen.LoginResult.Success) {  	ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	// Смотрим состояние инвентаря  	if (Bot.GetStorageInfo (true)) {  		botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  	}  	if ((iLeftFood == 0) || (Bot.storageInfo.foodQty >= iLeftFood)) {  		for (int i = 1; i <= 3; i++) {  			if (cyclicFight)  				ConsoleLog.WriteLine ("Cyclic fight' try " + i.ToString ());  			int iter = 0;  			int retryCount = 0;  			float wellness = (float)botinfo ["wellness"];  			float oldWellness = 0;  			do {  				System.Threading.Thread.Sleep (1500);  				iter++;  				if (iter > 10)  					break;  				if (wellness > iLeftHP) {  					if (cyclicFight)  						ConsoleLog.WriteLine ("Cyclic fight' iteration " + iter.ToString () + ". Fight!");  					Bot.Bot.FightInBattle (iBattle' ((bBuyWeapon) ? 1 : 0)' (int)botinfo ["country"]' iLeftHP' iCountry' doNotChange' iShotLimit);  				}  				Bot.GetInfoFromCommonResponse (true);  				botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  				if (cyclicFight) {  					ConsoleLog.WriteLine ("Cyclic fight' iteration " + iter.ToString () + ". Feed!");  					Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 97' !bBuyFood' true);  				}  				Bot.GetInfoFromCommonResponse (true);  				botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  				wellness = (float)botinfo ["wellness"];  				ConsoleLog.WriteLine ("Fight finished. Wellness left: " + wellness.ToString ());  				if (oldWellness == wellness) {  					retryCount++;  				}  				else {  					oldWellness = wellness;  					retryCount = 0;  				}  				if ((!cyclicFight) || (retryCount >= 3) || ((iExpLimit != 0) && ((int)botinfo ["experience"]) >= iExpLimit))  					break;  			}  			while (wellness > iLeftHP);  			if ((!cyclicFight) || ((iExpLimit != 0) && ((int)botinfo ["experience"]) >= iExpLimit))  				break;  		}  	}  	// Смотрим состояние инвентаря  	if (Bot.GetStorageInfo (true)) {  		botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  	}  }  else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  	//botinfo = Utils.TryToUpdateDbWithBasicInfo(botinfo' Bot);  }  //else  //    if (Bot.Bot.GetLastResponse().Contains("infringement"))  //    {  //        botinfo["banned"] = 1;  //        Utils.UpdateDbWithCustomBotInfo(botinfo' "banned");  //        //botinfo = Utils.TryToUpdateDbWithBasicInfo(botinfo' Bot);  //        ConsoleLog.WriteLine(botinfo["login"].ToString() + ": Banned");  //    }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,Fight,C:\repos\sasha237_NorthCitadel\Engine\Fight.cs,BotProc,The following statement contains a magic number: if (loginResult == ManagedCitizen.LoginResult.Success) {  	ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	// Смотрим состояние инвентаря  	if (Bot.GetStorageInfo (true)) {  		botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  	}  	if ((iLeftFood == 0) || (Bot.storageInfo.foodQty >= iLeftFood)) {  		for (int i = 1; i <= 3; i++) {  			if (cyclicFight)  				ConsoleLog.WriteLine ("Cyclic fight' try " + i.ToString ());  			int iter = 0;  			int retryCount = 0;  			float wellness = (float)botinfo ["wellness"];  			float oldWellness = 0;  			do {  				System.Threading.Thread.Sleep (1500);  				iter++;  				if (iter > 10)  					break;  				if (wellness > iLeftHP) {  					if (cyclicFight)  						ConsoleLog.WriteLine ("Cyclic fight' iteration " + iter.ToString () + ". Fight!");  					Bot.Bot.FightInBattle (iBattle' ((bBuyWeapon) ? 1 : 0)' (int)botinfo ["country"]' iLeftHP' iCountry' doNotChange' iShotLimit);  				}  				Bot.GetInfoFromCommonResponse (true);  				botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  				if (cyclicFight) {  					ConsoleLog.WriteLine ("Cyclic fight' iteration " + iter.ToString () + ". Feed!");  					Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 97' !bBuyFood' true);  				}  				Bot.GetInfoFromCommonResponse (true);  				botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  				wellness = (float)botinfo ["wellness"];  				ConsoleLog.WriteLine ("Fight finished. Wellness left: " + wellness.ToString ());  				if (oldWellness == wellness) {  					retryCount++;  				}  				else {  					oldWellness = wellness;  					retryCount = 0;  				}  				if ((!cyclicFight) || (retryCount >= 3) || ((iExpLimit != 0) && ((int)botinfo ["experience"]) >= iExpLimit))  					break;  			}  			while (wellness > iLeftHP);  			if ((!cyclicFight) || ((iExpLimit != 0) && ((int)botinfo ["experience"]) >= iExpLimit))  				break;  		}  	}  	// Смотрим состояние инвентаря  	if (Bot.GetStorageInfo (true)) {  		botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  	}  }  else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  	//botinfo = Utils.TryToUpdateDbWithBasicInfo(botinfo' Bot);  }  //else  //    if (Bot.Bot.GetLastResponse().Contains("infringement"))  //    {  //        botinfo["banned"] = 1;  //        Utils.UpdateDbWithCustomBotInfo(botinfo' "banned");  //        //botinfo = Utils.TryToUpdateDbWithBasicInfo(botinfo' Bot);  //        ConsoleLog.WriteLine(botinfo["login"].ToString() + ": Banned");  //    }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,Fight,C:\repos\sasha237_NorthCitadel\Engine\Fight.cs,BotProc,The following statement contains a magic number: if ((iLeftFood == 0) || (Bot.storageInfo.foodQty >= iLeftFood)) {  	for (int i = 1; i <= 3; i++) {  		if (cyclicFight)  			ConsoleLog.WriteLine ("Cyclic fight' try " + i.ToString ());  		int iter = 0;  		int retryCount = 0;  		float wellness = (float)botinfo ["wellness"];  		float oldWellness = 0;  		do {  			System.Threading.Thread.Sleep (1500);  			iter++;  			if (iter > 10)  				break;  			if (wellness > iLeftHP) {  				if (cyclicFight)  					ConsoleLog.WriteLine ("Cyclic fight' iteration " + iter.ToString () + ". Fight!");  				Bot.Bot.FightInBattle (iBattle' ((bBuyWeapon) ? 1 : 0)' (int)botinfo ["country"]' iLeftHP' iCountry' doNotChange' iShotLimit);  			}  			Bot.GetInfoFromCommonResponse (true);  			botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  			if (cyclicFight) {  				ConsoleLog.WriteLine ("Cyclic fight' iteration " + iter.ToString () + ". Feed!");  				Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 97' !bBuyFood' true);  			}  			Bot.GetInfoFromCommonResponse (true);  			botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  			wellness = (float)botinfo ["wellness"];  			ConsoleLog.WriteLine ("Fight finished. Wellness left: " + wellness.ToString ());  			if (oldWellness == wellness) {  				retryCount++;  			}  			else {  				oldWellness = wellness;  				retryCount = 0;  			}  			if ((!cyclicFight) || (retryCount >= 3) || ((iExpLimit != 0) && ((int)botinfo ["experience"]) >= iExpLimit))  				break;  		}  		while (wellness > iLeftHP);  		if ((!cyclicFight) || ((iExpLimit != 0) && ((int)botinfo ["experience"]) >= iExpLimit))  			break;  	}  }  
Magic Number,Engine,Fight,C:\repos\sasha237_NorthCitadel\Engine\Fight.cs,BotProc,The following statement contains a magic number: if ((iLeftFood == 0) || (Bot.storageInfo.foodQty >= iLeftFood)) {  	for (int i = 1; i <= 3; i++) {  		if (cyclicFight)  			ConsoleLog.WriteLine ("Cyclic fight' try " + i.ToString ());  		int iter = 0;  		int retryCount = 0;  		float wellness = (float)botinfo ["wellness"];  		float oldWellness = 0;  		do {  			System.Threading.Thread.Sleep (1500);  			iter++;  			if (iter > 10)  				break;  			if (wellness > iLeftHP) {  				if (cyclicFight)  					ConsoleLog.WriteLine ("Cyclic fight' iteration " + iter.ToString () + ". Fight!");  				Bot.Bot.FightInBattle (iBattle' ((bBuyWeapon) ? 1 : 0)' (int)botinfo ["country"]' iLeftHP' iCountry' doNotChange' iShotLimit);  			}  			Bot.GetInfoFromCommonResponse (true);  			botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  			if (cyclicFight) {  				ConsoleLog.WriteLine ("Cyclic fight' iteration " + iter.ToString () + ". Feed!");  				Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 97' !bBuyFood' true);  			}  			Bot.GetInfoFromCommonResponse (true);  			botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  			wellness = (float)botinfo ["wellness"];  			ConsoleLog.WriteLine ("Fight finished. Wellness left: " + wellness.ToString ());  			if (oldWellness == wellness) {  				retryCount++;  			}  			else {  				oldWellness = wellness;  				retryCount = 0;  			}  			if ((!cyclicFight) || (retryCount >= 3) || ((iExpLimit != 0) && ((int)botinfo ["experience"]) >= iExpLimit))  				break;  		}  		while (wellness > iLeftHP);  		if ((!cyclicFight) || ((iExpLimit != 0) && ((int)botinfo ["experience"]) >= iExpLimit))  			break;  	}  }  
Magic Number,Engine,Fight,C:\repos\sasha237_NorthCitadel\Engine\Fight.cs,BotProc,The following statement contains a magic number: if ((iLeftFood == 0) || (Bot.storageInfo.foodQty >= iLeftFood)) {  	for (int i = 1; i <= 3; i++) {  		if (cyclicFight)  			ConsoleLog.WriteLine ("Cyclic fight' try " + i.ToString ());  		int iter = 0;  		int retryCount = 0;  		float wellness = (float)botinfo ["wellness"];  		float oldWellness = 0;  		do {  			System.Threading.Thread.Sleep (1500);  			iter++;  			if (iter > 10)  				break;  			if (wellness > iLeftHP) {  				if (cyclicFight)  					ConsoleLog.WriteLine ("Cyclic fight' iteration " + iter.ToString () + ". Fight!");  				Bot.Bot.FightInBattle (iBattle' ((bBuyWeapon) ? 1 : 0)' (int)botinfo ["country"]' iLeftHP' iCountry' doNotChange' iShotLimit);  			}  			Bot.GetInfoFromCommonResponse (true);  			botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  			if (cyclicFight) {  				ConsoleLog.WriteLine ("Cyclic fight' iteration " + iter.ToString () + ". Feed!");  				Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 97' !bBuyFood' true);  			}  			Bot.GetInfoFromCommonResponse (true);  			botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  			wellness = (float)botinfo ["wellness"];  			ConsoleLog.WriteLine ("Fight finished. Wellness left: " + wellness.ToString ());  			if (oldWellness == wellness) {  				retryCount++;  			}  			else {  				oldWellness = wellness;  				retryCount = 0;  			}  			if ((!cyclicFight) || (retryCount >= 3) || ((iExpLimit != 0) && ((int)botinfo ["experience"]) >= iExpLimit))  				break;  		}  		while (wellness > iLeftHP);  		if ((!cyclicFight) || ((iExpLimit != 0) && ((int)botinfo ["experience"]) >= iExpLimit))  			break;  	}  }  
Magic Number,Engine,Fight,C:\repos\sasha237_NorthCitadel\Engine\Fight.cs,BotProc,The following statement contains a magic number: if ((iLeftFood == 0) || (Bot.storageInfo.foodQty >= iLeftFood)) {  	for (int i = 1; i <= 3; i++) {  		if (cyclicFight)  			ConsoleLog.WriteLine ("Cyclic fight' try " + i.ToString ());  		int iter = 0;  		int retryCount = 0;  		float wellness = (float)botinfo ["wellness"];  		float oldWellness = 0;  		do {  			System.Threading.Thread.Sleep (1500);  			iter++;  			if (iter > 10)  				break;  			if (wellness > iLeftHP) {  				if (cyclicFight)  					ConsoleLog.WriteLine ("Cyclic fight' iteration " + iter.ToString () + ". Fight!");  				Bot.Bot.FightInBattle (iBattle' ((bBuyWeapon) ? 1 : 0)' (int)botinfo ["country"]' iLeftHP' iCountry' doNotChange' iShotLimit);  			}  			Bot.GetInfoFromCommonResponse (true);  			botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  			if (cyclicFight) {  				ConsoleLog.WriteLine ("Cyclic fight' iteration " + iter.ToString () + ". Feed!");  				Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 97' !bBuyFood' true);  			}  			Bot.GetInfoFromCommonResponse (true);  			botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  			wellness = (float)botinfo ["wellness"];  			ConsoleLog.WriteLine ("Fight finished. Wellness left: " + wellness.ToString ());  			if (oldWellness == wellness) {  				retryCount++;  			}  			else {  				oldWellness = wellness;  				retryCount = 0;  			}  			if ((!cyclicFight) || (retryCount >= 3) || ((iExpLimit != 0) && ((int)botinfo ["experience"]) >= iExpLimit))  				break;  		}  		while (wellness > iLeftHP);  		if ((!cyclicFight) || ((iExpLimit != 0) && ((int)botinfo ["experience"]) >= iExpLimit))  			break;  	}  }  
Magic Number,Engine,Fight,C:\repos\sasha237_NorthCitadel\Engine\Fight.cs,BotProc,The following statement contains a magic number: if ((iLeftFood == 0) || (Bot.storageInfo.foodQty >= iLeftFood)) {  	for (int i = 1; i <= 3; i++) {  		if (cyclicFight)  			ConsoleLog.WriteLine ("Cyclic fight' try " + i.ToString ());  		int iter = 0;  		int retryCount = 0;  		float wellness = (float)botinfo ["wellness"];  		float oldWellness = 0;  		do {  			System.Threading.Thread.Sleep (1500);  			iter++;  			if (iter > 10)  				break;  			if (wellness > iLeftHP) {  				if (cyclicFight)  					ConsoleLog.WriteLine ("Cyclic fight' iteration " + iter.ToString () + ". Fight!");  				Bot.Bot.FightInBattle (iBattle' ((bBuyWeapon) ? 1 : 0)' (int)botinfo ["country"]' iLeftHP' iCountry' doNotChange' iShotLimit);  			}  			Bot.GetInfoFromCommonResponse (true);  			botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  			if (cyclicFight) {  				ConsoleLog.WriteLine ("Cyclic fight' iteration " + iter.ToString () + ". Feed!");  				Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 97' !bBuyFood' true);  			}  			Bot.GetInfoFromCommonResponse (true);  			botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  			wellness = (float)botinfo ["wellness"];  			ConsoleLog.WriteLine ("Fight finished. Wellness left: " + wellness.ToString ());  			if (oldWellness == wellness) {  				retryCount++;  			}  			else {  				oldWellness = wellness;  				retryCount = 0;  			}  			if ((!cyclicFight) || (retryCount >= 3) || ((iExpLimit != 0) && ((int)botinfo ["experience"]) >= iExpLimit))  				break;  		}  		while (wellness > iLeftHP);  		if ((!cyclicFight) || ((iExpLimit != 0) && ((int)botinfo ["experience"]) >= iExpLimit))  			break;  	}  }  
Magic Number,Engine,Fight,C:\repos\sasha237_NorthCitadel\Engine\Fight.cs,BotProc,The following statement contains a magic number: for (int i = 1; i <= 3; i++) {  	if (cyclicFight)  		ConsoleLog.WriteLine ("Cyclic fight' try " + i.ToString ());  	int iter = 0;  	int retryCount = 0;  	float wellness = (float)botinfo ["wellness"];  	float oldWellness = 0;  	do {  		System.Threading.Thread.Sleep (1500);  		iter++;  		if (iter > 10)  			break;  		if (wellness > iLeftHP) {  			if (cyclicFight)  				ConsoleLog.WriteLine ("Cyclic fight' iteration " + iter.ToString () + ". Fight!");  			Bot.Bot.FightInBattle (iBattle' ((bBuyWeapon) ? 1 : 0)' (int)botinfo ["country"]' iLeftHP' iCountry' doNotChange' iShotLimit);  		}  		Bot.GetInfoFromCommonResponse (true);  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		if (cyclicFight) {  			ConsoleLog.WriteLine ("Cyclic fight' iteration " + iter.ToString () + ". Feed!");  			Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 97' !bBuyFood' true);  		}  		Bot.GetInfoFromCommonResponse (true);  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		wellness = (float)botinfo ["wellness"];  		ConsoleLog.WriteLine ("Fight finished. Wellness left: " + wellness.ToString ());  		if (oldWellness == wellness) {  			retryCount++;  		}  		else {  			oldWellness = wellness;  			retryCount = 0;  		}  		if ((!cyclicFight) || (retryCount >= 3) || ((iExpLimit != 0) && ((int)botinfo ["experience"]) >= iExpLimit))  			break;  	}  	while (wellness > iLeftHP);  	if ((!cyclicFight) || ((iExpLimit != 0) && ((int)botinfo ["experience"]) >= iExpLimit))  		break;  }  
Magic Number,Engine,Fight,C:\repos\sasha237_NorthCitadel\Engine\Fight.cs,BotProc,The following statement contains a magic number: for (int i = 1; i <= 3; i++) {  	if (cyclicFight)  		ConsoleLog.WriteLine ("Cyclic fight' try " + i.ToString ());  	int iter = 0;  	int retryCount = 0;  	float wellness = (float)botinfo ["wellness"];  	float oldWellness = 0;  	do {  		System.Threading.Thread.Sleep (1500);  		iter++;  		if (iter > 10)  			break;  		if (wellness > iLeftHP) {  			if (cyclicFight)  				ConsoleLog.WriteLine ("Cyclic fight' iteration " + iter.ToString () + ". Fight!");  			Bot.Bot.FightInBattle (iBattle' ((bBuyWeapon) ? 1 : 0)' (int)botinfo ["country"]' iLeftHP' iCountry' doNotChange' iShotLimit);  		}  		Bot.GetInfoFromCommonResponse (true);  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		if (cyclicFight) {  			ConsoleLog.WriteLine ("Cyclic fight' iteration " + iter.ToString () + ". Feed!");  			Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 97' !bBuyFood' true);  		}  		Bot.GetInfoFromCommonResponse (true);  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		wellness = (float)botinfo ["wellness"];  		ConsoleLog.WriteLine ("Fight finished. Wellness left: " + wellness.ToString ());  		if (oldWellness == wellness) {  			retryCount++;  		}  		else {  			oldWellness = wellness;  			retryCount = 0;  		}  		if ((!cyclicFight) || (retryCount >= 3) || ((iExpLimit != 0) && ((int)botinfo ["experience"]) >= iExpLimit))  			break;  	}  	while (wellness > iLeftHP);  	if ((!cyclicFight) || ((iExpLimit != 0) && ((int)botinfo ["experience"]) >= iExpLimit))  		break;  }  
Magic Number,Engine,Fight,C:\repos\sasha237_NorthCitadel\Engine\Fight.cs,BotProc,The following statement contains a magic number: for (int i = 1; i <= 3; i++) {  	if (cyclicFight)  		ConsoleLog.WriteLine ("Cyclic fight' try " + i.ToString ());  	int iter = 0;  	int retryCount = 0;  	float wellness = (float)botinfo ["wellness"];  	float oldWellness = 0;  	do {  		System.Threading.Thread.Sleep (1500);  		iter++;  		if (iter > 10)  			break;  		if (wellness > iLeftHP) {  			if (cyclicFight)  				ConsoleLog.WriteLine ("Cyclic fight' iteration " + iter.ToString () + ". Fight!");  			Bot.Bot.FightInBattle (iBattle' ((bBuyWeapon) ? 1 : 0)' (int)botinfo ["country"]' iLeftHP' iCountry' doNotChange' iShotLimit);  		}  		Bot.GetInfoFromCommonResponse (true);  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		if (cyclicFight) {  			ConsoleLog.WriteLine ("Cyclic fight' iteration " + iter.ToString () + ". Feed!");  			Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 97' !bBuyFood' true);  		}  		Bot.GetInfoFromCommonResponse (true);  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		wellness = (float)botinfo ["wellness"];  		ConsoleLog.WriteLine ("Fight finished. Wellness left: " + wellness.ToString ());  		if (oldWellness == wellness) {  			retryCount++;  		}  		else {  			oldWellness = wellness;  			retryCount = 0;  		}  		if ((!cyclicFight) || (retryCount >= 3) || ((iExpLimit != 0) && ((int)botinfo ["experience"]) >= iExpLimit))  			break;  	}  	while (wellness > iLeftHP);  	if ((!cyclicFight) || ((iExpLimit != 0) && ((int)botinfo ["experience"]) >= iExpLimit))  		break;  }  
Magic Number,Engine,Fight,C:\repos\sasha237_NorthCitadel\Engine\Fight.cs,BotProc,The following statement contains a magic number: for (int i = 1; i <= 3; i++) {  	if (cyclicFight)  		ConsoleLog.WriteLine ("Cyclic fight' try " + i.ToString ());  	int iter = 0;  	int retryCount = 0;  	float wellness = (float)botinfo ["wellness"];  	float oldWellness = 0;  	do {  		System.Threading.Thread.Sleep (1500);  		iter++;  		if (iter > 10)  			break;  		if (wellness > iLeftHP) {  			if (cyclicFight)  				ConsoleLog.WriteLine ("Cyclic fight' iteration " + iter.ToString () + ". Fight!");  			Bot.Bot.FightInBattle (iBattle' ((bBuyWeapon) ? 1 : 0)' (int)botinfo ["country"]' iLeftHP' iCountry' doNotChange' iShotLimit);  		}  		Bot.GetInfoFromCommonResponse (true);  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		if (cyclicFight) {  			ConsoleLog.WriteLine ("Cyclic fight' iteration " + iter.ToString () + ". Feed!");  			Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 97' !bBuyFood' true);  		}  		Bot.GetInfoFromCommonResponse (true);  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		wellness = (float)botinfo ["wellness"];  		ConsoleLog.WriteLine ("Fight finished. Wellness left: " + wellness.ToString ());  		if (oldWellness == wellness) {  			retryCount++;  		}  		else {  			oldWellness = wellness;  			retryCount = 0;  		}  		if ((!cyclicFight) || (retryCount >= 3) || ((iExpLimit != 0) && ((int)botinfo ["experience"]) >= iExpLimit))  			break;  	}  	while (wellness > iLeftHP);  	if ((!cyclicFight) || ((iExpLimit != 0) && ((int)botinfo ["experience"]) >= iExpLimit))  		break;  }  
Magic Number,Engine,Fight,C:\repos\sasha237_NorthCitadel\Engine\Fight.cs,BotProc,The following statement contains a magic number: for (int i = 1; i <= 3; i++) {  	if (cyclicFight)  		ConsoleLog.WriteLine ("Cyclic fight' try " + i.ToString ());  	int iter = 0;  	int retryCount = 0;  	float wellness = (float)botinfo ["wellness"];  	float oldWellness = 0;  	do {  		System.Threading.Thread.Sleep (1500);  		iter++;  		if (iter > 10)  			break;  		if (wellness > iLeftHP) {  			if (cyclicFight)  				ConsoleLog.WriteLine ("Cyclic fight' iteration " + iter.ToString () + ". Fight!");  			Bot.Bot.FightInBattle (iBattle' ((bBuyWeapon) ? 1 : 0)' (int)botinfo ["country"]' iLeftHP' iCountry' doNotChange' iShotLimit);  		}  		Bot.GetInfoFromCommonResponse (true);  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		if (cyclicFight) {  			ConsoleLog.WriteLine ("Cyclic fight' iteration " + iter.ToString () + ". Feed!");  			Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 97' !bBuyFood' true);  		}  		Bot.GetInfoFromCommonResponse (true);  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		wellness = (float)botinfo ["wellness"];  		ConsoleLog.WriteLine ("Fight finished. Wellness left: " + wellness.ToString ());  		if (oldWellness == wellness) {  			retryCount++;  		}  		else {  			oldWellness = wellness;  			retryCount = 0;  		}  		if ((!cyclicFight) || (retryCount >= 3) || ((iExpLimit != 0) && ((int)botinfo ["experience"]) >= iExpLimit))  			break;  	}  	while (wellness > iLeftHP);  	if ((!cyclicFight) || ((iExpLimit != 0) && ((int)botinfo ["experience"]) >= iExpLimit))  		break;  }  
Magic Number,Engine,Fight,C:\repos\sasha237_NorthCitadel\Engine\Fight.cs,BotProc,The following statement contains a magic number: do {  	System.Threading.Thread.Sleep (1500);  	iter++;  	if (iter > 10)  		break;  	if (wellness > iLeftHP) {  		if (cyclicFight)  			ConsoleLog.WriteLine ("Cyclic fight' iteration " + iter.ToString () + ". Fight!");  		Bot.Bot.FightInBattle (iBattle' ((bBuyWeapon) ? 1 : 0)' (int)botinfo ["country"]' iLeftHP' iCountry' doNotChange' iShotLimit);  	}  	Bot.GetInfoFromCommonResponse (true);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	if (cyclicFight) {  		ConsoleLog.WriteLine ("Cyclic fight' iteration " + iter.ToString () + ". Feed!");  		Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 97' !bBuyFood' true);  	}  	Bot.GetInfoFromCommonResponse (true);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	wellness = (float)botinfo ["wellness"];  	ConsoleLog.WriteLine ("Fight finished. Wellness left: " + wellness.ToString ());  	if (oldWellness == wellness) {  		retryCount++;  	}  	else {  		oldWellness = wellness;  		retryCount = 0;  	}  	if ((!cyclicFight) || (retryCount >= 3) || ((iExpLimit != 0) && ((int)botinfo ["experience"]) >= iExpLimit))  		break;  }  while (wellness > iLeftHP);  
Magic Number,Engine,Fight,C:\repos\sasha237_NorthCitadel\Engine\Fight.cs,BotProc,The following statement contains a magic number: do {  	System.Threading.Thread.Sleep (1500);  	iter++;  	if (iter > 10)  		break;  	if (wellness > iLeftHP) {  		if (cyclicFight)  			ConsoleLog.WriteLine ("Cyclic fight' iteration " + iter.ToString () + ". Fight!");  		Bot.Bot.FightInBattle (iBattle' ((bBuyWeapon) ? 1 : 0)' (int)botinfo ["country"]' iLeftHP' iCountry' doNotChange' iShotLimit);  	}  	Bot.GetInfoFromCommonResponse (true);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	if (cyclicFight) {  		ConsoleLog.WriteLine ("Cyclic fight' iteration " + iter.ToString () + ". Feed!");  		Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 97' !bBuyFood' true);  	}  	Bot.GetInfoFromCommonResponse (true);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	wellness = (float)botinfo ["wellness"];  	ConsoleLog.WriteLine ("Fight finished. Wellness left: " + wellness.ToString ());  	if (oldWellness == wellness) {  		retryCount++;  	}  	else {  		oldWellness = wellness;  		retryCount = 0;  	}  	if ((!cyclicFight) || (retryCount >= 3) || ((iExpLimit != 0) && ((int)botinfo ["experience"]) >= iExpLimit))  		break;  }  while (wellness > iLeftHP);  
Magic Number,Engine,Fight,C:\repos\sasha237_NorthCitadel\Engine\Fight.cs,BotProc,The following statement contains a magic number: do {  	System.Threading.Thread.Sleep (1500);  	iter++;  	if (iter > 10)  		break;  	if (wellness > iLeftHP) {  		if (cyclicFight)  			ConsoleLog.WriteLine ("Cyclic fight' iteration " + iter.ToString () + ". Fight!");  		Bot.Bot.FightInBattle (iBattle' ((bBuyWeapon) ? 1 : 0)' (int)botinfo ["country"]' iLeftHP' iCountry' doNotChange' iShotLimit);  	}  	Bot.GetInfoFromCommonResponse (true);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	if (cyclicFight) {  		ConsoleLog.WriteLine ("Cyclic fight' iteration " + iter.ToString () + ". Feed!");  		Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 97' !bBuyFood' true);  	}  	Bot.GetInfoFromCommonResponse (true);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	wellness = (float)botinfo ["wellness"];  	ConsoleLog.WriteLine ("Fight finished. Wellness left: " + wellness.ToString ());  	if (oldWellness == wellness) {  		retryCount++;  	}  	else {  		oldWellness = wellness;  		retryCount = 0;  	}  	if ((!cyclicFight) || (retryCount >= 3) || ((iExpLimit != 0) && ((int)botinfo ["experience"]) >= iExpLimit))  		break;  }  while (wellness > iLeftHP);  
Magic Number,Engine,Fight,C:\repos\sasha237_NorthCitadel\Engine\Fight.cs,BotProc,The following statement contains a magic number: do {  	System.Threading.Thread.Sleep (1500);  	iter++;  	if (iter > 10)  		break;  	if (wellness > iLeftHP) {  		if (cyclicFight)  			ConsoleLog.WriteLine ("Cyclic fight' iteration " + iter.ToString () + ". Fight!");  		Bot.Bot.FightInBattle (iBattle' ((bBuyWeapon) ? 1 : 0)' (int)botinfo ["country"]' iLeftHP' iCountry' doNotChange' iShotLimit);  	}  	Bot.GetInfoFromCommonResponse (true);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	if (cyclicFight) {  		ConsoleLog.WriteLine ("Cyclic fight' iteration " + iter.ToString () + ". Feed!");  		Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 97' !bBuyFood' true);  	}  	Bot.GetInfoFromCommonResponse (true);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	wellness = (float)botinfo ["wellness"];  	ConsoleLog.WriteLine ("Fight finished. Wellness left: " + wellness.ToString ());  	if (oldWellness == wellness) {  		retryCount++;  	}  	else {  		oldWellness = wellness;  		retryCount = 0;  	}  	if ((!cyclicFight) || (retryCount >= 3) || ((iExpLimit != 0) && ((int)botinfo ["experience"]) >= iExpLimit))  		break;  }  while (wellness > iLeftHP);  
Magic Number,Engine,Fight,C:\repos\sasha237_NorthCitadel\Engine\Fight.cs,BotProc,The following statement contains a magic number: System.Threading.Thread.Sleep (1500);  
Magic Number,Engine,Fight,C:\repos\sasha237_NorthCitadel\Engine\Fight.cs,BotProc,The following statement contains a magic number: if (iter > 10)  	break;  
Magic Number,Engine,Fight,C:\repos\sasha237_NorthCitadel\Engine\Fight.cs,BotProc,The following statement contains a magic number: if (cyclicFight) {  	ConsoleLog.WriteLine ("Cyclic fight' iteration " + iter.ToString () + ". Feed!");  	Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 97' !bBuyFood' true);  }  
Magic Number,Engine,Fight,C:\repos\sasha237_NorthCitadel\Engine\Fight.cs,BotProc,The following statement contains a magic number: Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 97' !bBuyFood' true);  
Magic Number,Engine,Fight,C:\repos\sasha237_NorthCitadel\Engine\Fight.cs,BotProc,The following statement contains a magic number: if ((!cyclicFight) || (retryCount >= 3) || ((iExpLimit != 0) && ((int)botinfo ["experience"]) >= iExpLimit))  	break;  
Magic Number,Engine,Fight,C:\repos\sasha237_NorthCitadel\Engine\Fight.cs,BotProc,The following statement contains a magic number: if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  	//botinfo = Utils.TryToUpdateDbWithBasicInfo(botinfo' Bot);  }  //else  //    if (Bot.Bot.GetLastResponse().Contains("infringement"))  //    {  //        botinfo["banned"] = 1;  //        Utils.UpdateDbWithCustomBotInfo(botinfo' "banned");  //        //botinfo = Utils.TryToUpdateDbWithBasicInfo(botinfo' Bot);  //        ConsoleLog.WriteLine(botinfo["login"].ToString() + ": Banned");  //    }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,Fight,C:\repos\sasha237_NorthCitadel\Engine\Fight.cs,BotProc,The following statement contains a magic number: botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  
Magic Number,Engine,Fly,C:\repos\sasha237_NorthCitadel\Engine\Fly.cs,Worker,The following statement contains a magic number: if (args.Length != 5) {  	PrintUsage ();  	return;  }  
Magic Number,Engine,Fly,C:\repos\sasha237_NorthCitadel\Engine\Fly.cs,Worker,The following statement contains a magic number: int.TryParse (args [2]' out iDistance);  
Magic Number,Engine,Fly,C:\repos\sasha237_NorthCitadel\Engine\Fly.cs,Worker,The following statement contains a magic number: int.TryParse (args [3]' out iCountry);  
Magic Number,Engine,Fly,C:\repos\sasha237_NorthCitadel\Engine\Fly.cs,Worker,The following statement contains a magic number: int.TryParse (args [4]' out iRegion);  
Magic Number,Engine,Fly,C:\repos\sasha237_NorthCitadel\Engine\Fly.cs,BotProc,The following statement contains a magic number: if (loginResult == ManagedCitizen.LoginResult.Success) {  	ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	try {  		Bot.Bot.Resign ();  	}  	catch (System.Exception e) {  		ConsoleLog.WriteLine ("Bot resign error: " + e.Message);  	}  	try {  		System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		Bot.Bot.BuyItem (int.Parse (botinfo ["country"].ToString ())' Goods.Ticket' 1' iDistance' 0' true);  	}  	catch (System.Exception e) {  		ConsoleLog.WriteLine ("Bot buy ticket error: " + e.Message);  	}  	try {  		Bot.Bot.Fly (iCountry' iRegion);  		botinfo = Utils.TryToUpdateDbWithCurrentInfo (botinfo' Bot);  	}  	catch (System.Exception e) {  		ConsoleLog.WriteLine ("Bot fly error: " + e.Message);  	}  }  
Magic Number,Engine,Fly,C:\repos\sasha237_NorthCitadel\Engine\Fly.cs,BotProc,The following statement contains a magic number: if (loginResult == ManagedCitizen.LoginResult.Success) {  	ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	try {  		Bot.Bot.Resign ();  	}  	catch (System.Exception e) {  		ConsoleLog.WriteLine ("Bot resign error: " + e.Message);  	}  	try {  		System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		Bot.Bot.BuyItem (int.Parse (botinfo ["country"].ToString ())' Goods.Ticket' 1' iDistance' 0' true);  	}  	catch (System.Exception e) {  		ConsoleLog.WriteLine ("Bot buy ticket error: " + e.Message);  	}  	try {  		Bot.Bot.Fly (iCountry' iRegion);  		botinfo = Utils.TryToUpdateDbWithCurrentInfo (botinfo' Bot);  	}  	catch (System.Exception e) {  		ConsoleLog.WriteLine ("Bot fly error: " + e.Message);  	}  }  
Magic Number,Engine,Fly,C:\repos\sasha237_NorthCitadel\Engine\Fly.cs,BotProc,The following statement contains a magic number: try {  	System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  	Bot.Bot.BuyItem (int.Parse (botinfo ["country"].ToString ())' Goods.Ticket' 1' iDistance' 0' true);  }  catch (System.Exception e) {  	ConsoleLog.WriteLine ("Bot buy ticket error: " + e.Message);  }  
Magic Number,Engine,Fly,C:\repos\sasha237_NorthCitadel\Engine\Fly.cs,BotProc,The following statement contains a magic number: try {  	System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  	Bot.Bot.BuyItem (int.Parse (botinfo ["country"].ToString ())' Goods.Ticket' 1' iDistance' 0' true);  }  catch (System.Exception e) {  	ConsoleLog.WriteLine ("Bot buy ticket error: " + e.Message);  }  
Magic Number,Engine,Fly,C:\repos\sasha237_NorthCitadel\Engine\Fly.cs,BotProc,The following statement contains a magic number: System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  
Magic Number,Engine,Fly,C:\repos\sasha237_NorthCitadel\Engine\Fly.cs,BotProc,The following statement contains a magic number: System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  
Magic Number,Engine,Globals,C:\repos\sasha237_NorthCitadel\Engine\Main.cs,Init,The following statement contains a magic number: NerZul.Core.Network.HttpClient.ResponseTimeout = Config.GetValue ("misc"' "responsetimeout"' 10) * 1000;  
Magic Number,Engine,Globals,C:\repos\sasha237_NorthCitadel\Engine\Main.cs,Init,The following statement contains a magic number: NerZul.Core.Network.HttpClient.ResponseTimeout = Config.GetValue ("misc"' "responsetimeout"' 10) * 1000;  
Magic Number,Engine,Globals,C:\repos\sasha237_NorthCitadel\Engine\Main.cs,Init,The following statement contains a magic number: timeoutsLimit = Config.GetValue ("misc"' "timeoutslimit"' 9999);  
Magic Number,Engine,Globals,C:\repos\sasha237_NorthCitadel\Engine\Main.cs,Init,The following statement contains a magic number: threadCount = Config.GetValue ("misc"' "threadCount"' 10);  
Magic Number,Engine,Globals,C:\repos\sasha237_NorthCitadel\Engine\Main.cs,Init,The following statement contains a magic number: ErepTZ = Config.GetValue ("time"' "timezone"' -7);  
Magic Number,Engine,Globals,C:\repos\sasha237_NorthCitadel\Engine\Main.cs,Init,The following statement contains a magic number: ErepAgeStart = new DateTime (Config.GetValue ("time"' "zeroyear"' 2007)' Config.GetValue ("time"' "zeromounth"' 11)' Config.GetValue ("time"' "zeroday"' 20));  
Magic Number,Engine,Globals,C:\repos\sasha237_NorthCitadel\Engine\Main.cs,Init,The following statement contains a magic number: ErepAgeStart = new DateTime (Config.GetValue ("time"' "zeroyear"' 2007)' Config.GetValue ("time"' "zeromounth"' 11)' Config.GetValue ("time"' "zeroday"' 20));  
Magic Number,Engine,Globals,C:\repos\sasha237_NorthCitadel\Engine\Main.cs,Init,The following statement contains a magic number: ErepAgeStart = new DateTime (Config.GetValue ("time"' "zeroyear"' 2007)' Config.GetValue ("time"' "zeromounth"' 11)' Config.GetValue ("time"' "zeroday"' 20));  
Magic Number,Engine,Globals,C:\repos\sasha237_NorthCitadel\Engine\Main.cs,Init,The following statement contains a magic number: FirstRealKey = sb1.ToString ().Substring (0' 200);  
Magic Number,Engine,Database,C:\repos\sasha237_NorthCitadel\Engine\Database.cs,ConnectToDb,The following statement contains a magic number: builder.Port = (uint)Globals.Config.GetValue ("database"' "port"' 3306);  
Magic Number,Engine,Database,C:\repos\sasha237_NorthCitadel\Engine\Database.cs,PrepareVarsFromParamArray,The following statement contains a magic number: while (i < Values.Length) {  	string column = (string)Values [i];  	if (i + 1 > Values.Length)  		throw new ArgumentException ("No matching key for column \"" + column + "\"");  	string val = Values [i + 1].ToString ();  	i += 2;  	//Check for boolean arg  	bool needesc = true;  	if ((i < Values.Length) && (Values [i].GetType () == typeof(bool))) {  		needesc = (bool)Values [i];  		i++;  	}  	if (needesc)  		val = "\"" + MySql.Data.MySqlClient.MySqlHelper.EscapeString (val) + "\"";  	rv.Add (column' val);  }  
Magic Number,Engine,Database,C:\repos\sasha237_NorthCitadel\Engine\Database.cs,PrepareVarsFromParamArray,The following statement contains a magic number: i += 2;  
Magic Number,Engine,Database,C:\repos\sasha237_NorthCitadel\Engine\Database.cs,Update,The following statement contains a magic number: foreach (var vals in row) {  	args [c * 2] = vals.Key;  	args [c * 2 + 1] = vals.Value;  }  
Magic Number,Engine,Database,C:\repos\sasha237_NorthCitadel\Engine\Database.cs,Update,The following statement contains a magic number: foreach (var vals in row) {  	args [c * 2] = vals.Key;  	args [c * 2 + 1] = vals.Value;  }  
Magic Number,Engine,Database,C:\repos\sasha237_NorthCitadel\Engine\Database.cs,Update,The following statement contains a magic number: args [c * 2] = vals.Key;  
Magic Number,Engine,Database,C:\repos\sasha237_NorthCitadel\Engine\Database.cs,Update,The following statement contains a magic number: args [c * 2 + 1] = vals.Value;  
Magic Number,Engine,Import,C:\repos\sasha237_NorthCitadel\Engine\Import.cs,ImportBots,The following statement contains a magic number: if (args.Length != 3) {  	ConsoleLog.WriteLine ("import filename group");  	ConsoleLog.WriteLine ("Format: login|password\\n");  	return;  }  
Magic Number,Engine,Import,C:\repos\sasha237_NorthCitadel\Engine\Import.cs,ImportBots,The following statement contains a magic number: foreach (string Bot in Botota) {  	if (Bot.Length != 0) {  		string[] LPPair = Bot.Split ('|');  		if (LPPair.Length != 2) {  			ConsoleLog.WriteLine ("Unable to import " + Bot + " - use login|password syntax");  		}  		else {  			Globals.Database.Reset ();  			try {  				Globals.Database.Insert ("bots"' "login"' LPPair [0]' "password"' LPPair [1]' "group"' args [2]);  			}  			catch (Exception e) {  				ConsoleLog.WriteLine ("Unable to import " + LPPair [0] + ": " + e.Message);  			}  		}  	}  }  
Magic Number,Engine,Import,C:\repos\sasha237_NorthCitadel\Engine\Import.cs,ImportBots,The following statement contains a magic number: foreach (string Bot in Botota) {  	if (Bot.Length != 0) {  		string[] LPPair = Bot.Split ('|');  		if (LPPair.Length != 2) {  			ConsoleLog.WriteLine ("Unable to import " + Bot + " - use login|password syntax");  		}  		else {  			Globals.Database.Reset ();  			try {  				Globals.Database.Insert ("bots"' "login"' LPPair [0]' "password"' LPPair [1]' "group"' args [2]);  			}  			catch (Exception e) {  				ConsoleLog.WriteLine ("Unable to import " + LPPair [0] + ": " + e.Message);  			}  		}  	}  }  
Magic Number,Engine,Import,C:\repos\sasha237_NorthCitadel\Engine\Import.cs,ImportBots,The following statement contains a magic number: if (Bot.Length != 0) {  	string[] LPPair = Bot.Split ('|');  	if (LPPair.Length != 2) {  		ConsoleLog.WriteLine ("Unable to import " + Bot + " - use login|password syntax");  	}  	else {  		Globals.Database.Reset ();  		try {  			Globals.Database.Insert ("bots"' "login"' LPPair [0]' "password"' LPPair [1]' "group"' args [2]);  		}  		catch (Exception e) {  			ConsoleLog.WriteLine ("Unable to import " + LPPair [0] + ": " + e.Message);  		}  	}  }  
Magic Number,Engine,Import,C:\repos\sasha237_NorthCitadel\Engine\Import.cs,ImportBots,The following statement contains a magic number: if (Bot.Length != 0) {  	string[] LPPair = Bot.Split ('|');  	if (LPPair.Length != 2) {  		ConsoleLog.WriteLine ("Unable to import " + Bot + " - use login|password syntax");  	}  	else {  		Globals.Database.Reset ();  		try {  			Globals.Database.Insert ("bots"' "login"' LPPair [0]' "password"' LPPair [1]' "group"' args [2]);  		}  		catch (Exception e) {  			ConsoleLog.WriteLine ("Unable to import " + LPPair [0] + ": " + e.Message);  		}  	}  }  
Magic Number,Engine,Import,C:\repos\sasha237_NorthCitadel\Engine\Import.cs,ImportBots,The following statement contains a magic number: if (LPPair.Length != 2) {  	ConsoleLog.WriteLine ("Unable to import " + Bot + " - use login|password syntax");  }  else {  	Globals.Database.Reset ();  	try {  		Globals.Database.Insert ("bots"' "login"' LPPair [0]' "password"' LPPair [1]' "group"' args [2]);  	}  	catch (Exception e) {  		ConsoleLog.WriteLine ("Unable to import " + LPPair [0] + ": " + e.Message);  	}  }  
Magic Number,Engine,Import,C:\repos\sasha237_NorthCitadel\Engine\Import.cs,ImportBots,The following statement contains a magic number: if (LPPair.Length != 2) {  	ConsoleLog.WriteLine ("Unable to import " + Bot + " - use login|password syntax");  }  else {  	Globals.Database.Reset ();  	try {  		Globals.Database.Insert ("bots"' "login"' LPPair [0]' "password"' LPPair [1]' "group"' args [2]);  	}  	catch (Exception e) {  		ConsoleLog.WriteLine ("Unable to import " + LPPair [0] + ": " + e.Message);  	}  }  
Magic Number,Engine,Import,C:\repos\sasha237_NorthCitadel\Engine\Import.cs,ImportBots,The following statement contains a magic number: try {  	Globals.Database.Insert ("bots"' "login"' LPPair [0]' "password"' LPPair [1]' "group"' args [2]);  }  catch (Exception e) {  	ConsoleLog.WriteLine ("Unable to import " + LPPair [0] + ": " + e.Message);  }  
Magic Number,Engine,Import,C:\repos\sasha237_NorthCitadel\Engine\Import.cs,ImportBots,The following statement contains a magic number: Globals.Database.Insert ("bots"' "login"' LPPair [0]' "password"' LPPair [1]' "group"' args [2]);  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,Worker,The following statement contains a magic number: if (args.Length != 7) {  	PrintUsage ();  	return;  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,Worker,The following statement contains a magic number: if ((args [4] != "normal") && (args [4] != "light") && (args [4] != "self")) {  	PrintUsage ();  	return;  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,Worker,The following statement contains a magic number: if ((args [4] != "normal") && (args [4] != "light") && (args [4] != "self")) {  	PrintUsage ();  	return;  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,Worker,The following statement contains a magic number: if ((args [4] != "normal") && (args [4] != "light") && (args [4] != "self")) {  	PrintUsage ();  	return;  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,Worker,The following statement contains a magic number: int.TryParse (args [2]' out exactVacancy);  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,Worker,The following statement contains a magic number: industry = args [3];  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,Worker,The following statement contains a magic number: mode = args [4];  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,Worker,The following statement contains a magic number: bool.TryParse (args [5]' out resignBeforeWork);  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,Worker,The following statement contains a magic number: int.TryParse (args [6]' out doFeed);  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotLight,The following statement contains a magic number: if (resignBeforeWork) {  	if (!Bot.Bot.Resign ()) {  		ConsoleLog.WriteLine ("Unable to resign from job - " + botinfo ["login"]);  	}  	if (!Globals.BotConfig.useTOR)  		System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotLight,The following statement contains a magic number: if (resignBeforeWork) {  	if (!Bot.Bot.Resign ()) {  		ConsoleLog.WriteLine ("Unable to resign from job - " + botinfo ["login"]);  	}  	if (!Globals.BotConfig.useTOR)  		System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotLight,The following statement contains a magic number: if (!Globals.BotConfig.useTOR)  	System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotLight,The following statement contains a magic number: if (!Globals.BotConfig.useTOR)  	System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotLight,The following statement contains a magic number: System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotLight,The following statement contains a magic number: System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotWork,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	if ((int)botinfo ["last_day_work"] < Globals.GetErepTime ().Days) {  		if (resignBeforeWork) {  			if (!Bot.Bot.Resign ()) {  				ConsoleLog.WriteLine ("Unable to resign from job - " + botinfo ["login"]);  			}  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		}  		if (mode == "self") {  			Daily.BotWorkSelf (botinfo' Bot' rnd);  			return;  		}  		//Вот тут мы разруливаем трудоустройство  		int work = 0;  		var offers = Bot.Bot.GetJobOffers (Bot.Info.Country' industry' 0' 1' curVacancy);  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (2000' 3000));  		//if (curVacancy != 0)  		//    ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "FindJobLog.txt");  		if (offers != null) {  			if (curVacancy == 0) {  				int minq = 5;  				/*                              Ищем самое дорогое предложение с минимальным Q' меньше или равно заданному.                              ПРОПУСКАЕМ первые два предложения. Там частенько бывают предложения'                              на которые не дают устраиваться. Денег нет на фирме или еще что...                               */int skip = 3;  				foreach (var offer in offers) {  					skip--;  					if (skip > 0)  						continue;  					// Берем вот ту' что стоит третьей. Мало ли лучше не найдем  					if (skip == 0) {  						work = offer.GetValue ("id");  						workindustry = offer.GetValue ("industry");  					}  					// Если нашли с заданным Q -- то и совсем хорошо  					if (offer.GetValue ("quality") <= minq) {  						work = offer.GetValue ("id");  						workindustry = offer.GetValue ("industry");  						break;  					}  				}  			}  			else {  				if (offers.Count != 0) {  					work = offers [0].GetValue ("id");  					workindustry = offers [0].GetValue ("industry");  				}  				else {  					work = 0;  					workindustry = 0;  				}  			}  			if (work != 0) {  				if (!Bot.Bot.Hire (work)) {  					ConsoleLog.WriteLine ("Unable to get job - " + botinfo ["login"]);  					break;  				}  				else {  					if (!Globals.BotConfig.useTOR)  						System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  					botinfo ["industry"] = workindustry;  					Utils.UpdateDbWithCustomBotInfo (botinfo' "industry");  				}  			}  			else {  				ConsoleLog.WriteLine ("Вакансии с ID=" + curVacancy.ToString () + " не удалось найти!");  				if ((curVacancy == 0) || (!Globals.TryAnotherWork)) {  					break;  				}  				else {  					ConsoleLog.WriteLine ("Ищем первую попавшуюся вакансию.");  					curVacancy = 0;  					continue;  				}  			}  		}  		//РАБОТА  		if (Bot.Bot.Work ((uint)botinfo ["citizen_id"]) != 0) {  			botinfo ["last_day_work"] = Globals.GetErepTime ().Days;  			Utils.UpdateDbWithCustomBotInfo (botinfo' "last_day_work");  		}  		else {  			ConsoleLog.WriteLine ("Unable to work - " + botinfo ["login"]);  			//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "WorkLog.txt");  		}  	}  	break;  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotWork,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	if ((int)botinfo ["last_day_work"] < Globals.GetErepTime ().Days) {  		if (resignBeforeWork) {  			if (!Bot.Bot.Resign ()) {  				ConsoleLog.WriteLine ("Unable to resign from job - " + botinfo ["login"]);  			}  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		}  		if (mode == "self") {  			Daily.BotWorkSelf (botinfo' Bot' rnd);  			return;  		}  		//Вот тут мы разруливаем трудоустройство  		int work = 0;  		var offers = Bot.Bot.GetJobOffers (Bot.Info.Country' industry' 0' 1' curVacancy);  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (2000' 3000));  		//if (curVacancy != 0)  		//    ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "FindJobLog.txt");  		if (offers != null) {  			if (curVacancy == 0) {  				int minq = 5;  				/*                              Ищем самое дорогое предложение с минимальным Q' меньше или равно заданному.                              ПРОПУСКАЕМ первые два предложения. Там частенько бывают предложения'                              на которые не дают устраиваться. Денег нет на фирме или еще что...                               */int skip = 3;  				foreach (var offer in offers) {  					skip--;  					if (skip > 0)  						continue;  					// Берем вот ту' что стоит третьей. Мало ли лучше не найдем  					if (skip == 0) {  						work = offer.GetValue ("id");  						workindustry = offer.GetValue ("industry");  					}  					// Если нашли с заданным Q -- то и совсем хорошо  					if (offer.GetValue ("quality") <= minq) {  						work = offer.GetValue ("id");  						workindustry = offer.GetValue ("industry");  						break;  					}  				}  			}  			else {  				if (offers.Count != 0) {  					work = offers [0].GetValue ("id");  					workindustry = offers [0].GetValue ("industry");  				}  				else {  					work = 0;  					workindustry = 0;  				}  			}  			if (work != 0) {  				if (!Bot.Bot.Hire (work)) {  					ConsoleLog.WriteLine ("Unable to get job - " + botinfo ["login"]);  					break;  				}  				else {  					if (!Globals.BotConfig.useTOR)  						System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  					botinfo ["industry"] = workindustry;  					Utils.UpdateDbWithCustomBotInfo (botinfo' "industry");  				}  			}  			else {  				ConsoleLog.WriteLine ("Вакансии с ID=" + curVacancy.ToString () + " не удалось найти!");  				if ((curVacancy == 0) || (!Globals.TryAnotherWork)) {  					break;  				}  				else {  					ConsoleLog.WriteLine ("Ищем первую попавшуюся вакансию.");  					curVacancy = 0;  					continue;  				}  			}  		}  		//РАБОТА  		if (Bot.Bot.Work ((uint)botinfo ["citizen_id"]) != 0) {  			botinfo ["last_day_work"] = Globals.GetErepTime ().Days;  			Utils.UpdateDbWithCustomBotInfo (botinfo' "last_day_work");  		}  		else {  			ConsoleLog.WriteLine ("Unable to work - " + botinfo ["login"]);  			//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "WorkLog.txt");  		}  	}  	break;  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotWork,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	if ((int)botinfo ["last_day_work"] < Globals.GetErepTime ().Days) {  		if (resignBeforeWork) {  			if (!Bot.Bot.Resign ()) {  				ConsoleLog.WriteLine ("Unable to resign from job - " + botinfo ["login"]);  			}  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		}  		if (mode == "self") {  			Daily.BotWorkSelf (botinfo' Bot' rnd);  			return;  		}  		//Вот тут мы разруливаем трудоустройство  		int work = 0;  		var offers = Bot.Bot.GetJobOffers (Bot.Info.Country' industry' 0' 1' curVacancy);  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (2000' 3000));  		//if (curVacancy != 0)  		//    ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "FindJobLog.txt");  		if (offers != null) {  			if (curVacancy == 0) {  				int minq = 5;  				/*                              Ищем самое дорогое предложение с минимальным Q' меньше или равно заданному.                              ПРОПУСКАЕМ первые два предложения. Там частенько бывают предложения'                              на которые не дают устраиваться. Денег нет на фирме или еще что...                               */int skip = 3;  				foreach (var offer in offers) {  					skip--;  					if (skip > 0)  						continue;  					// Берем вот ту' что стоит третьей. Мало ли лучше не найдем  					if (skip == 0) {  						work = offer.GetValue ("id");  						workindustry = offer.GetValue ("industry");  					}  					// Если нашли с заданным Q -- то и совсем хорошо  					if (offer.GetValue ("quality") <= minq) {  						work = offer.GetValue ("id");  						workindustry = offer.GetValue ("industry");  						break;  					}  				}  			}  			else {  				if (offers.Count != 0) {  					work = offers [0].GetValue ("id");  					workindustry = offers [0].GetValue ("industry");  				}  				else {  					work = 0;  					workindustry = 0;  				}  			}  			if (work != 0) {  				if (!Bot.Bot.Hire (work)) {  					ConsoleLog.WriteLine ("Unable to get job - " + botinfo ["login"]);  					break;  				}  				else {  					if (!Globals.BotConfig.useTOR)  						System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  					botinfo ["industry"] = workindustry;  					Utils.UpdateDbWithCustomBotInfo (botinfo' "industry");  				}  			}  			else {  				ConsoleLog.WriteLine ("Вакансии с ID=" + curVacancy.ToString () + " не удалось найти!");  				if ((curVacancy == 0) || (!Globals.TryAnotherWork)) {  					break;  				}  				else {  					ConsoleLog.WriteLine ("Ищем первую попавшуюся вакансию.");  					curVacancy = 0;  					continue;  				}  			}  		}  		//РАБОТА  		if (Bot.Bot.Work ((uint)botinfo ["citizen_id"]) != 0) {  			botinfo ["last_day_work"] = Globals.GetErepTime ().Days;  			Utils.UpdateDbWithCustomBotInfo (botinfo' "last_day_work");  		}  		else {  			ConsoleLog.WriteLine ("Unable to work - " + botinfo ["login"]);  			//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "WorkLog.txt");  		}  	}  	break;  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotWork,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	if ((int)botinfo ["last_day_work"] < Globals.GetErepTime ().Days) {  		if (resignBeforeWork) {  			if (!Bot.Bot.Resign ()) {  				ConsoleLog.WriteLine ("Unable to resign from job - " + botinfo ["login"]);  			}  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		}  		if (mode == "self") {  			Daily.BotWorkSelf (botinfo' Bot' rnd);  			return;  		}  		//Вот тут мы разруливаем трудоустройство  		int work = 0;  		var offers = Bot.Bot.GetJobOffers (Bot.Info.Country' industry' 0' 1' curVacancy);  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (2000' 3000));  		//if (curVacancy != 0)  		//    ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "FindJobLog.txt");  		if (offers != null) {  			if (curVacancy == 0) {  				int minq = 5;  				/*                              Ищем самое дорогое предложение с минимальным Q' меньше или равно заданному.                              ПРОПУСКАЕМ первые два предложения. Там частенько бывают предложения'                              на которые не дают устраиваться. Денег нет на фирме или еще что...                               */int skip = 3;  				foreach (var offer in offers) {  					skip--;  					if (skip > 0)  						continue;  					// Берем вот ту' что стоит третьей. Мало ли лучше не найдем  					if (skip == 0) {  						work = offer.GetValue ("id");  						workindustry = offer.GetValue ("industry");  					}  					// Если нашли с заданным Q -- то и совсем хорошо  					if (offer.GetValue ("quality") <= minq) {  						work = offer.GetValue ("id");  						workindustry = offer.GetValue ("industry");  						break;  					}  				}  			}  			else {  				if (offers.Count != 0) {  					work = offers [0].GetValue ("id");  					workindustry = offers [0].GetValue ("industry");  				}  				else {  					work = 0;  					workindustry = 0;  				}  			}  			if (work != 0) {  				if (!Bot.Bot.Hire (work)) {  					ConsoleLog.WriteLine ("Unable to get job - " + botinfo ["login"]);  					break;  				}  				else {  					if (!Globals.BotConfig.useTOR)  						System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  					botinfo ["industry"] = workindustry;  					Utils.UpdateDbWithCustomBotInfo (botinfo' "industry");  				}  			}  			else {  				ConsoleLog.WriteLine ("Вакансии с ID=" + curVacancy.ToString () + " не удалось найти!");  				if ((curVacancy == 0) || (!Globals.TryAnotherWork)) {  					break;  				}  				else {  					ConsoleLog.WriteLine ("Ищем первую попавшуюся вакансию.");  					curVacancy = 0;  					continue;  				}  			}  		}  		//РАБОТА  		if (Bot.Bot.Work ((uint)botinfo ["citizen_id"]) != 0) {  			botinfo ["last_day_work"] = Globals.GetErepTime ().Days;  			Utils.UpdateDbWithCustomBotInfo (botinfo' "last_day_work");  		}  		else {  			ConsoleLog.WriteLine ("Unable to work - " + botinfo ["login"]);  			//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "WorkLog.txt");  		}  	}  	break;  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotWork,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	if ((int)botinfo ["last_day_work"] < Globals.GetErepTime ().Days) {  		if (resignBeforeWork) {  			if (!Bot.Bot.Resign ()) {  				ConsoleLog.WriteLine ("Unable to resign from job - " + botinfo ["login"]);  			}  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		}  		if (mode == "self") {  			Daily.BotWorkSelf (botinfo' Bot' rnd);  			return;  		}  		//Вот тут мы разруливаем трудоустройство  		int work = 0;  		var offers = Bot.Bot.GetJobOffers (Bot.Info.Country' industry' 0' 1' curVacancy);  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (2000' 3000));  		//if (curVacancy != 0)  		//    ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "FindJobLog.txt");  		if (offers != null) {  			if (curVacancy == 0) {  				int minq = 5;  				/*                              Ищем самое дорогое предложение с минимальным Q' меньше или равно заданному.                              ПРОПУСКАЕМ первые два предложения. Там частенько бывают предложения'                              на которые не дают устраиваться. Денег нет на фирме или еще что...                               */int skip = 3;  				foreach (var offer in offers) {  					skip--;  					if (skip > 0)  						continue;  					// Берем вот ту' что стоит третьей. Мало ли лучше не найдем  					if (skip == 0) {  						work = offer.GetValue ("id");  						workindustry = offer.GetValue ("industry");  					}  					// Если нашли с заданным Q -- то и совсем хорошо  					if (offer.GetValue ("quality") <= minq) {  						work = offer.GetValue ("id");  						workindustry = offer.GetValue ("industry");  						break;  					}  				}  			}  			else {  				if (offers.Count != 0) {  					work = offers [0].GetValue ("id");  					workindustry = offers [0].GetValue ("industry");  				}  				else {  					work = 0;  					workindustry = 0;  				}  			}  			if (work != 0) {  				if (!Bot.Bot.Hire (work)) {  					ConsoleLog.WriteLine ("Unable to get job - " + botinfo ["login"]);  					break;  				}  				else {  					if (!Globals.BotConfig.useTOR)  						System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  					botinfo ["industry"] = workindustry;  					Utils.UpdateDbWithCustomBotInfo (botinfo' "industry");  				}  			}  			else {  				ConsoleLog.WriteLine ("Вакансии с ID=" + curVacancy.ToString () + " не удалось найти!");  				if ((curVacancy == 0) || (!Globals.TryAnotherWork)) {  					break;  				}  				else {  					ConsoleLog.WriteLine ("Ищем первую попавшуюся вакансию.");  					curVacancy = 0;  					continue;  				}  			}  		}  		//РАБОТА  		if (Bot.Bot.Work ((uint)botinfo ["citizen_id"]) != 0) {  			botinfo ["last_day_work"] = Globals.GetErepTime ().Days;  			Utils.UpdateDbWithCustomBotInfo (botinfo' "last_day_work");  		}  		else {  			ConsoleLog.WriteLine ("Unable to work - " + botinfo ["login"]);  			//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "WorkLog.txt");  		}  	}  	break;  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotWork,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	if ((int)botinfo ["last_day_work"] < Globals.GetErepTime ().Days) {  		if (resignBeforeWork) {  			if (!Bot.Bot.Resign ()) {  				ConsoleLog.WriteLine ("Unable to resign from job - " + botinfo ["login"]);  			}  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		}  		if (mode == "self") {  			Daily.BotWorkSelf (botinfo' Bot' rnd);  			return;  		}  		//Вот тут мы разруливаем трудоустройство  		int work = 0;  		var offers = Bot.Bot.GetJobOffers (Bot.Info.Country' industry' 0' 1' curVacancy);  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (2000' 3000));  		//if (curVacancy != 0)  		//    ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "FindJobLog.txt");  		if (offers != null) {  			if (curVacancy == 0) {  				int minq = 5;  				/*                              Ищем самое дорогое предложение с минимальным Q' меньше или равно заданному.                              ПРОПУСКАЕМ первые два предложения. Там частенько бывают предложения'                              на которые не дают устраиваться. Денег нет на фирме или еще что...                               */int skip = 3;  				foreach (var offer in offers) {  					skip--;  					if (skip > 0)  						continue;  					// Берем вот ту' что стоит третьей. Мало ли лучше не найдем  					if (skip == 0) {  						work = offer.GetValue ("id");  						workindustry = offer.GetValue ("industry");  					}  					// Если нашли с заданным Q -- то и совсем хорошо  					if (offer.GetValue ("quality") <= minq) {  						work = offer.GetValue ("id");  						workindustry = offer.GetValue ("industry");  						break;  					}  				}  			}  			else {  				if (offers.Count != 0) {  					work = offers [0].GetValue ("id");  					workindustry = offers [0].GetValue ("industry");  				}  				else {  					work = 0;  					workindustry = 0;  				}  			}  			if (work != 0) {  				if (!Bot.Bot.Hire (work)) {  					ConsoleLog.WriteLine ("Unable to get job - " + botinfo ["login"]);  					break;  				}  				else {  					if (!Globals.BotConfig.useTOR)  						System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  					botinfo ["industry"] = workindustry;  					Utils.UpdateDbWithCustomBotInfo (botinfo' "industry");  				}  			}  			else {  				ConsoleLog.WriteLine ("Вакансии с ID=" + curVacancy.ToString () + " не удалось найти!");  				if ((curVacancy == 0) || (!Globals.TryAnotherWork)) {  					break;  				}  				else {  					ConsoleLog.WriteLine ("Ищем первую попавшуюся вакансию.");  					curVacancy = 0;  					continue;  				}  			}  		}  		//РАБОТА  		if (Bot.Bot.Work ((uint)botinfo ["citizen_id"]) != 0) {  			botinfo ["last_day_work"] = Globals.GetErepTime ().Days;  			Utils.UpdateDbWithCustomBotInfo (botinfo' "last_day_work");  		}  		else {  			ConsoleLog.WriteLine ("Unable to work - " + botinfo ["login"]);  			//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "WorkLog.txt");  		}  	}  	break;  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotWork,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	if ((int)botinfo ["last_day_work"] < Globals.GetErepTime ().Days) {  		if (resignBeforeWork) {  			if (!Bot.Bot.Resign ()) {  				ConsoleLog.WriteLine ("Unable to resign from job - " + botinfo ["login"]);  			}  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		}  		if (mode == "self") {  			Daily.BotWorkSelf (botinfo' Bot' rnd);  			return;  		}  		//Вот тут мы разруливаем трудоустройство  		int work = 0;  		var offers = Bot.Bot.GetJobOffers (Bot.Info.Country' industry' 0' 1' curVacancy);  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (2000' 3000));  		//if (curVacancy != 0)  		//    ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "FindJobLog.txt");  		if (offers != null) {  			if (curVacancy == 0) {  				int minq = 5;  				/*                              Ищем самое дорогое предложение с минимальным Q' меньше или равно заданному.                              ПРОПУСКАЕМ первые два предложения. Там частенько бывают предложения'                              на которые не дают устраиваться. Денег нет на фирме или еще что...                               */int skip = 3;  				foreach (var offer in offers) {  					skip--;  					if (skip > 0)  						continue;  					// Берем вот ту' что стоит третьей. Мало ли лучше не найдем  					if (skip == 0) {  						work = offer.GetValue ("id");  						workindustry = offer.GetValue ("industry");  					}  					// Если нашли с заданным Q -- то и совсем хорошо  					if (offer.GetValue ("quality") <= minq) {  						work = offer.GetValue ("id");  						workindustry = offer.GetValue ("industry");  						break;  					}  				}  			}  			else {  				if (offers.Count != 0) {  					work = offers [0].GetValue ("id");  					workindustry = offers [0].GetValue ("industry");  				}  				else {  					work = 0;  					workindustry = 0;  				}  			}  			if (work != 0) {  				if (!Bot.Bot.Hire (work)) {  					ConsoleLog.WriteLine ("Unable to get job - " + botinfo ["login"]);  					break;  				}  				else {  					if (!Globals.BotConfig.useTOR)  						System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  					botinfo ["industry"] = workindustry;  					Utils.UpdateDbWithCustomBotInfo (botinfo' "industry");  				}  			}  			else {  				ConsoleLog.WriteLine ("Вакансии с ID=" + curVacancy.ToString () + " не удалось найти!");  				if ((curVacancy == 0) || (!Globals.TryAnotherWork)) {  					break;  				}  				else {  					ConsoleLog.WriteLine ("Ищем первую попавшуюся вакансию.");  					curVacancy = 0;  					continue;  				}  			}  		}  		//РАБОТА  		if (Bot.Bot.Work ((uint)botinfo ["citizen_id"]) != 0) {  			botinfo ["last_day_work"] = Globals.GetErepTime ().Days;  			Utils.UpdateDbWithCustomBotInfo (botinfo' "last_day_work");  		}  		else {  			ConsoleLog.WriteLine ("Unable to work - " + botinfo ["login"]);  			//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "WorkLog.txt");  		}  	}  	break;  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotWork,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	if ((int)botinfo ["last_day_work"] < Globals.GetErepTime ().Days) {  		if (resignBeforeWork) {  			if (!Bot.Bot.Resign ()) {  				ConsoleLog.WriteLine ("Unable to resign from job - " + botinfo ["login"]);  			}  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		}  		if (mode == "self") {  			Daily.BotWorkSelf (botinfo' Bot' rnd);  			return;  		}  		//Вот тут мы разруливаем трудоустройство  		int work = 0;  		var offers = Bot.Bot.GetJobOffers (Bot.Info.Country' industry' 0' 1' curVacancy);  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (2000' 3000));  		//if (curVacancy != 0)  		//    ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "FindJobLog.txt");  		if (offers != null) {  			if (curVacancy == 0) {  				int minq = 5;  				/*                              Ищем самое дорогое предложение с минимальным Q' меньше или равно заданному.                              ПРОПУСКАЕМ первые два предложения. Там частенько бывают предложения'                              на которые не дают устраиваться. Денег нет на фирме или еще что...                               */int skip = 3;  				foreach (var offer in offers) {  					skip--;  					if (skip > 0)  						continue;  					// Берем вот ту' что стоит третьей. Мало ли лучше не найдем  					if (skip == 0) {  						work = offer.GetValue ("id");  						workindustry = offer.GetValue ("industry");  					}  					// Если нашли с заданным Q -- то и совсем хорошо  					if (offer.GetValue ("quality") <= minq) {  						work = offer.GetValue ("id");  						workindustry = offer.GetValue ("industry");  						break;  					}  				}  			}  			else {  				if (offers.Count != 0) {  					work = offers [0].GetValue ("id");  					workindustry = offers [0].GetValue ("industry");  				}  				else {  					work = 0;  					workindustry = 0;  				}  			}  			if (work != 0) {  				if (!Bot.Bot.Hire (work)) {  					ConsoleLog.WriteLine ("Unable to get job - " + botinfo ["login"]);  					break;  				}  				else {  					if (!Globals.BotConfig.useTOR)  						System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  					botinfo ["industry"] = workindustry;  					Utils.UpdateDbWithCustomBotInfo (botinfo' "industry");  				}  			}  			else {  				ConsoleLog.WriteLine ("Вакансии с ID=" + curVacancy.ToString () + " не удалось найти!");  				if ((curVacancy == 0) || (!Globals.TryAnotherWork)) {  					break;  				}  				else {  					ConsoleLog.WriteLine ("Ищем первую попавшуюся вакансию.");  					curVacancy = 0;  					continue;  				}  			}  		}  		//РАБОТА  		if (Bot.Bot.Work ((uint)botinfo ["citizen_id"]) != 0) {  			botinfo ["last_day_work"] = Globals.GetErepTime ().Days;  			Utils.UpdateDbWithCustomBotInfo (botinfo' "last_day_work");  		}  		else {  			ConsoleLog.WriteLine ("Unable to work - " + botinfo ["login"]);  			//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "WorkLog.txt");  		}  	}  	break;  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotWork,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	if ((int)botinfo ["last_day_work"] < Globals.GetErepTime ().Days) {  		if (resignBeforeWork) {  			if (!Bot.Bot.Resign ()) {  				ConsoleLog.WriteLine ("Unable to resign from job - " + botinfo ["login"]);  			}  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		}  		if (mode == "self") {  			Daily.BotWorkSelf (botinfo' Bot' rnd);  			return;  		}  		//Вот тут мы разруливаем трудоустройство  		int work = 0;  		var offers = Bot.Bot.GetJobOffers (Bot.Info.Country' industry' 0' 1' curVacancy);  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (2000' 3000));  		//if (curVacancy != 0)  		//    ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "FindJobLog.txt");  		if (offers != null) {  			if (curVacancy == 0) {  				int minq = 5;  				/*                              Ищем самое дорогое предложение с минимальным Q' меньше или равно заданному.                              ПРОПУСКАЕМ первые два предложения. Там частенько бывают предложения'                              на которые не дают устраиваться. Денег нет на фирме или еще что...                               */int skip = 3;  				foreach (var offer in offers) {  					skip--;  					if (skip > 0)  						continue;  					// Берем вот ту' что стоит третьей. Мало ли лучше не найдем  					if (skip == 0) {  						work = offer.GetValue ("id");  						workindustry = offer.GetValue ("industry");  					}  					// Если нашли с заданным Q -- то и совсем хорошо  					if (offer.GetValue ("quality") <= minq) {  						work = offer.GetValue ("id");  						workindustry = offer.GetValue ("industry");  						break;  					}  				}  			}  			else {  				if (offers.Count != 0) {  					work = offers [0].GetValue ("id");  					workindustry = offers [0].GetValue ("industry");  				}  				else {  					work = 0;  					workindustry = 0;  				}  			}  			if (work != 0) {  				if (!Bot.Bot.Hire (work)) {  					ConsoleLog.WriteLine ("Unable to get job - " + botinfo ["login"]);  					break;  				}  				else {  					if (!Globals.BotConfig.useTOR)  						System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  					botinfo ["industry"] = workindustry;  					Utils.UpdateDbWithCustomBotInfo (botinfo' "industry");  				}  			}  			else {  				ConsoleLog.WriteLine ("Вакансии с ID=" + curVacancy.ToString () + " не удалось найти!");  				if ((curVacancy == 0) || (!Globals.TryAnotherWork)) {  					break;  				}  				else {  					ConsoleLog.WriteLine ("Ищем первую попавшуюся вакансию.");  					curVacancy = 0;  					continue;  				}  			}  		}  		//РАБОТА  		if (Bot.Bot.Work ((uint)botinfo ["citizen_id"]) != 0) {  			botinfo ["last_day_work"] = Globals.GetErepTime ().Days;  			Utils.UpdateDbWithCustomBotInfo (botinfo' "last_day_work");  		}  		else {  			ConsoleLog.WriteLine ("Unable to work - " + botinfo ["login"]);  			//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "WorkLog.txt");  		}  	}  	break;  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotWork,The following statement contains a magic number: if ((int)botinfo ["last_day_work"] < Globals.GetErepTime ().Days) {  	if (resignBeforeWork) {  		if (!Bot.Bot.Resign ()) {  			ConsoleLog.WriteLine ("Unable to resign from job - " + botinfo ["login"]);  		}  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  	}  	if (mode == "self") {  		Daily.BotWorkSelf (botinfo' Bot' rnd);  		return;  	}  	//Вот тут мы разруливаем трудоустройство  	int work = 0;  	var offers = Bot.Bot.GetJobOffers (Bot.Info.Country' industry' 0' 1' curVacancy);  	if (!Globals.BotConfig.useTOR)  		System.Threading.Thread.Sleep (rnd.Next (2000' 3000));  	//if (curVacancy != 0)  	//    ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "FindJobLog.txt");  	if (offers != null) {  		if (curVacancy == 0) {  			int minq = 5;  			/*                              Ищем самое дорогое предложение с минимальным Q' меньше или равно заданному.                              ПРОПУСКАЕМ первые два предложения. Там частенько бывают предложения'                              на которые не дают устраиваться. Денег нет на фирме или еще что...                               */int skip = 3;  			foreach (var offer in offers) {  				skip--;  				if (skip > 0)  					continue;  				// Берем вот ту' что стоит третьей. Мало ли лучше не найдем  				if (skip == 0) {  					work = offer.GetValue ("id");  					workindustry = offer.GetValue ("industry");  				}  				// Если нашли с заданным Q -- то и совсем хорошо  				if (offer.GetValue ("quality") <= minq) {  					work = offer.GetValue ("id");  					workindustry = offer.GetValue ("industry");  					break;  				}  			}  		}  		else {  			if (offers.Count != 0) {  				work = offers [0].GetValue ("id");  				workindustry = offers [0].GetValue ("industry");  			}  			else {  				work = 0;  				workindustry = 0;  			}  		}  		if (work != 0) {  			if (!Bot.Bot.Hire (work)) {  				ConsoleLog.WriteLine ("Unable to get job - " + botinfo ["login"]);  				break;  			}  			else {  				if (!Globals.BotConfig.useTOR)  					System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  				botinfo ["industry"] = workindustry;  				Utils.UpdateDbWithCustomBotInfo (botinfo' "industry");  			}  		}  		else {  			ConsoleLog.WriteLine ("Вакансии с ID=" + curVacancy.ToString () + " не удалось найти!");  			if ((curVacancy == 0) || (!Globals.TryAnotherWork)) {  				break;  			}  			else {  				ConsoleLog.WriteLine ("Ищем первую попавшуюся вакансию.");  				curVacancy = 0;  				continue;  			}  		}  	}  	//РАБОТА  	if (Bot.Bot.Work ((uint)botinfo ["citizen_id"]) != 0) {  		botinfo ["last_day_work"] = Globals.GetErepTime ().Days;  		Utils.UpdateDbWithCustomBotInfo (botinfo' "last_day_work");  	}  	else {  		ConsoleLog.WriteLine ("Unable to work - " + botinfo ["login"]);  		//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "WorkLog.txt");  	}  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotWork,The following statement contains a magic number: if ((int)botinfo ["last_day_work"] < Globals.GetErepTime ().Days) {  	if (resignBeforeWork) {  		if (!Bot.Bot.Resign ()) {  			ConsoleLog.WriteLine ("Unable to resign from job - " + botinfo ["login"]);  		}  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  	}  	if (mode == "self") {  		Daily.BotWorkSelf (botinfo' Bot' rnd);  		return;  	}  	//Вот тут мы разруливаем трудоустройство  	int work = 0;  	var offers = Bot.Bot.GetJobOffers (Bot.Info.Country' industry' 0' 1' curVacancy);  	if (!Globals.BotConfig.useTOR)  		System.Threading.Thread.Sleep (rnd.Next (2000' 3000));  	//if (curVacancy != 0)  	//    ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "FindJobLog.txt");  	if (offers != null) {  		if (curVacancy == 0) {  			int minq = 5;  			/*                              Ищем самое дорогое предложение с минимальным Q' меньше или равно заданному.                              ПРОПУСКАЕМ первые два предложения. Там частенько бывают предложения'                              на которые не дают устраиваться. Денег нет на фирме или еще что...                               */int skip = 3;  			foreach (var offer in offers) {  				skip--;  				if (skip > 0)  					continue;  				// Берем вот ту' что стоит третьей. Мало ли лучше не найдем  				if (skip == 0) {  					work = offer.GetValue ("id");  					workindustry = offer.GetValue ("industry");  				}  				// Если нашли с заданным Q -- то и совсем хорошо  				if (offer.GetValue ("quality") <= minq) {  					work = offer.GetValue ("id");  					workindustry = offer.GetValue ("industry");  					break;  				}  			}  		}  		else {  			if (offers.Count != 0) {  				work = offers [0].GetValue ("id");  				workindustry = offers [0].GetValue ("industry");  			}  			else {  				work = 0;  				workindustry = 0;  			}  		}  		if (work != 0) {  			if (!Bot.Bot.Hire (work)) {  				ConsoleLog.WriteLine ("Unable to get job - " + botinfo ["login"]);  				break;  			}  			else {  				if (!Globals.BotConfig.useTOR)  					System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  				botinfo ["industry"] = workindustry;  				Utils.UpdateDbWithCustomBotInfo (botinfo' "industry");  			}  		}  		else {  			ConsoleLog.WriteLine ("Вакансии с ID=" + curVacancy.ToString () + " не удалось найти!");  			if ((curVacancy == 0) || (!Globals.TryAnotherWork)) {  				break;  			}  			else {  				ConsoleLog.WriteLine ("Ищем первую попавшуюся вакансию.");  				curVacancy = 0;  				continue;  			}  		}  	}  	//РАБОТА  	if (Bot.Bot.Work ((uint)botinfo ["citizen_id"]) != 0) {  		botinfo ["last_day_work"] = Globals.GetErepTime ().Days;  		Utils.UpdateDbWithCustomBotInfo (botinfo' "last_day_work");  	}  	else {  		ConsoleLog.WriteLine ("Unable to work - " + botinfo ["login"]);  		//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "WorkLog.txt");  	}  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotWork,The following statement contains a magic number: if ((int)botinfo ["last_day_work"] < Globals.GetErepTime ().Days) {  	if (resignBeforeWork) {  		if (!Bot.Bot.Resign ()) {  			ConsoleLog.WriteLine ("Unable to resign from job - " + botinfo ["login"]);  		}  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  	}  	if (mode == "self") {  		Daily.BotWorkSelf (botinfo' Bot' rnd);  		return;  	}  	//Вот тут мы разруливаем трудоустройство  	int work = 0;  	var offers = Bot.Bot.GetJobOffers (Bot.Info.Country' industry' 0' 1' curVacancy);  	if (!Globals.BotConfig.useTOR)  		System.Threading.Thread.Sleep (rnd.Next (2000' 3000));  	//if (curVacancy != 0)  	//    ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "FindJobLog.txt");  	if (offers != null) {  		if (curVacancy == 0) {  			int minq = 5;  			/*                              Ищем самое дорогое предложение с минимальным Q' меньше или равно заданному.                              ПРОПУСКАЕМ первые два предложения. Там частенько бывают предложения'                              на которые не дают устраиваться. Денег нет на фирме или еще что...                               */int skip = 3;  			foreach (var offer in offers) {  				skip--;  				if (skip > 0)  					continue;  				// Берем вот ту' что стоит третьей. Мало ли лучше не найдем  				if (skip == 0) {  					work = offer.GetValue ("id");  					workindustry = offer.GetValue ("industry");  				}  				// Если нашли с заданным Q -- то и совсем хорошо  				if (offer.GetValue ("quality") <= minq) {  					work = offer.GetValue ("id");  					workindustry = offer.GetValue ("industry");  					break;  				}  			}  		}  		else {  			if (offers.Count != 0) {  				work = offers [0].GetValue ("id");  				workindustry = offers [0].GetValue ("industry");  			}  			else {  				work = 0;  				workindustry = 0;  			}  		}  		if (work != 0) {  			if (!Bot.Bot.Hire (work)) {  				ConsoleLog.WriteLine ("Unable to get job - " + botinfo ["login"]);  				break;  			}  			else {  				if (!Globals.BotConfig.useTOR)  					System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  				botinfo ["industry"] = workindustry;  				Utils.UpdateDbWithCustomBotInfo (botinfo' "industry");  			}  		}  		else {  			ConsoleLog.WriteLine ("Вакансии с ID=" + curVacancy.ToString () + " не удалось найти!");  			if ((curVacancy == 0) || (!Globals.TryAnotherWork)) {  				break;  			}  			else {  				ConsoleLog.WriteLine ("Ищем первую попавшуюся вакансию.");  				curVacancy = 0;  				continue;  			}  		}  	}  	//РАБОТА  	if (Bot.Bot.Work ((uint)botinfo ["citizen_id"]) != 0) {  		botinfo ["last_day_work"] = Globals.GetErepTime ().Days;  		Utils.UpdateDbWithCustomBotInfo (botinfo' "last_day_work");  	}  	else {  		ConsoleLog.WriteLine ("Unable to work - " + botinfo ["login"]);  		//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "WorkLog.txt");  	}  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotWork,The following statement contains a magic number: if ((int)botinfo ["last_day_work"] < Globals.GetErepTime ().Days) {  	if (resignBeforeWork) {  		if (!Bot.Bot.Resign ()) {  			ConsoleLog.WriteLine ("Unable to resign from job - " + botinfo ["login"]);  		}  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  	}  	if (mode == "self") {  		Daily.BotWorkSelf (botinfo' Bot' rnd);  		return;  	}  	//Вот тут мы разруливаем трудоустройство  	int work = 0;  	var offers = Bot.Bot.GetJobOffers (Bot.Info.Country' industry' 0' 1' curVacancy);  	if (!Globals.BotConfig.useTOR)  		System.Threading.Thread.Sleep (rnd.Next (2000' 3000));  	//if (curVacancy != 0)  	//    ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "FindJobLog.txt");  	if (offers != null) {  		if (curVacancy == 0) {  			int minq = 5;  			/*                              Ищем самое дорогое предложение с минимальным Q' меньше или равно заданному.                              ПРОПУСКАЕМ первые два предложения. Там частенько бывают предложения'                              на которые не дают устраиваться. Денег нет на фирме или еще что...                               */int skip = 3;  			foreach (var offer in offers) {  				skip--;  				if (skip > 0)  					continue;  				// Берем вот ту' что стоит третьей. Мало ли лучше не найдем  				if (skip == 0) {  					work = offer.GetValue ("id");  					workindustry = offer.GetValue ("industry");  				}  				// Если нашли с заданным Q -- то и совсем хорошо  				if (offer.GetValue ("quality") <= minq) {  					work = offer.GetValue ("id");  					workindustry = offer.GetValue ("industry");  					break;  				}  			}  		}  		else {  			if (offers.Count != 0) {  				work = offers [0].GetValue ("id");  				workindustry = offers [0].GetValue ("industry");  			}  			else {  				work = 0;  				workindustry = 0;  			}  		}  		if (work != 0) {  			if (!Bot.Bot.Hire (work)) {  				ConsoleLog.WriteLine ("Unable to get job - " + botinfo ["login"]);  				break;  			}  			else {  				if (!Globals.BotConfig.useTOR)  					System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  				botinfo ["industry"] = workindustry;  				Utils.UpdateDbWithCustomBotInfo (botinfo' "industry");  			}  		}  		else {  			ConsoleLog.WriteLine ("Вакансии с ID=" + curVacancy.ToString () + " не удалось найти!");  			if ((curVacancy == 0) || (!Globals.TryAnotherWork)) {  				break;  			}  			else {  				ConsoleLog.WriteLine ("Ищем первую попавшуюся вакансию.");  				curVacancy = 0;  				continue;  			}  		}  	}  	//РАБОТА  	if (Bot.Bot.Work ((uint)botinfo ["citizen_id"]) != 0) {  		botinfo ["last_day_work"] = Globals.GetErepTime ().Days;  		Utils.UpdateDbWithCustomBotInfo (botinfo' "last_day_work");  	}  	else {  		ConsoleLog.WriteLine ("Unable to work - " + botinfo ["login"]);  		//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "WorkLog.txt");  	}  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotWork,The following statement contains a magic number: if ((int)botinfo ["last_day_work"] < Globals.GetErepTime ().Days) {  	if (resignBeforeWork) {  		if (!Bot.Bot.Resign ()) {  			ConsoleLog.WriteLine ("Unable to resign from job - " + botinfo ["login"]);  		}  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  	}  	if (mode == "self") {  		Daily.BotWorkSelf (botinfo' Bot' rnd);  		return;  	}  	//Вот тут мы разруливаем трудоустройство  	int work = 0;  	var offers = Bot.Bot.GetJobOffers (Bot.Info.Country' industry' 0' 1' curVacancy);  	if (!Globals.BotConfig.useTOR)  		System.Threading.Thread.Sleep (rnd.Next (2000' 3000));  	//if (curVacancy != 0)  	//    ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "FindJobLog.txt");  	if (offers != null) {  		if (curVacancy == 0) {  			int minq = 5;  			/*                              Ищем самое дорогое предложение с минимальным Q' меньше или равно заданному.                              ПРОПУСКАЕМ первые два предложения. Там частенько бывают предложения'                              на которые не дают устраиваться. Денег нет на фирме или еще что...                               */int skip = 3;  			foreach (var offer in offers) {  				skip--;  				if (skip > 0)  					continue;  				// Берем вот ту' что стоит третьей. Мало ли лучше не найдем  				if (skip == 0) {  					work = offer.GetValue ("id");  					workindustry = offer.GetValue ("industry");  				}  				// Если нашли с заданным Q -- то и совсем хорошо  				if (offer.GetValue ("quality") <= minq) {  					work = offer.GetValue ("id");  					workindustry = offer.GetValue ("industry");  					break;  				}  			}  		}  		else {  			if (offers.Count != 0) {  				work = offers [0].GetValue ("id");  				workindustry = offers [0].GetValue ("industry");  			}  			else {  				work = 0;  				workindustry = 0;  			}  		}  		if (work != 0) {  			if (!Bot.Bot.Hire (work)) {  				ConsoleLog.WriteLine ("Unable to get job - " + botinfo ["login"]);  				break;  			}  			else {  				if (!Globals.BotConfig.useTOR)  					System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  				botinfo ["industry"] = workindustry;  				Utils.UpdateDbWithCustomBotInfo (botinfo' "industry");  			}  		}  		else {  			ConsoleLog.WriteLine ("Вакансии с ID=" + curVacancy.ToString () + " не удалось найти!");  			if ((curVacancy == 0) || (!Globals.TryAnotherWork)) {  				break;  			}  			else {  				ConsoleLog.WriteLine ("Ищем первую попавшуюся вакансию.");  				curVacancy = 0;  				continue;  			}  		}  	}  	//РАБОТА  	if (Bot.Bot.Work ((uint)botinfo ["citizen_id"]) != 0) {  		botinfo ["last_day_work"] = Globals.GetErepTime ().Days;  		Utils.UpdateDbWithCustomBotInfo (botinfo' "last_day_work");  	}  	else {  		ConsoleLog.WriteLine ("Unable to work - " + botinfo ["login"]);  		//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "WorkLog.txt");  	}  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotWork,The following statement contains a magic number: if ((int)botinfo ["last_day_work"] < Globals.GetErepTime ().Days) {  	if (resignBeforeWork) {  		if (!Bot.Bot.Resign ()) {  			ConsoleLog.WriteLine ("Unable to resign from job - " + botinfo ["login"]);  		}  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  	}  	if (mode == "self") {  		Daily.BotWorkSelf (botinfo' Bot' rnd);  		return;  	}  	//Вот тут мы разруливаем трудоустройство  	int work = 0;  	var offers = Bot.Bot.GetJobOffers (Bot.Info.Country' industry' 0' 1' curVacancy);  	if (!Globals.BotConfig.useTOR)  		System.Threading.Thread.Sleep (rnd.Next (2000' 3000));  	//if (curVacancy != 0)  	//    ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "FindJobLog.txt");  	if (offers != null) {  		if (curVacancy == 0) {  			int minq = 5;  			/*                              Ищем самое дорогое предложение с минимальным Q' меньше или равно заданному.                              ПРОПУСКАЕМ первые два предложения. Там частенько бывают предложения'                              на которые не дают устраиваться. Денег нет на фирме или еще что...                               */int skip = 3;  			foreach (var offer in offers) {  				skip--;  				if (skip > 0)  					continue;  				// Берем вот ту' что стоит третьей. Мало ли лучше не найдем  				if (skip == 0) {  					work = offer.GetValue ("id");  					workindustry = offer.GetValue ("industry");  				}  				// Если нашли с заданным Q -- то и совсем хорошо  				if (offer.GetValue ("quality") <= minq) {  					work = offer.GetValue ("id");  					workindustry = offer.GetValue ("industry");  					break;  				}  			}  		}  		else {  			if (offers.Count != 0) {  				work = offers [0].GetValue ("id");  				workindustry = offers [0].GetValue ("industry");  			}  			else {  				work = 0;  				workindustry = 0;  			}  		}  		if (work != 0) {  			if (!Bot.Bot.Hire (work)) {  				ConsoleLog.WriteLine ("Unable to get job - " + botinfo ["login"]);  				break;  			}  			else {  				if (!Globals.BotConfig.useTOR)  					System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  				botinfo ["industry"] = workindustry;  				Utils.UpdateDbWithCustomBotInfo (botinfo' "industry");  			}  		}  		else {  			ConsoleLog.WriteLine ("Вакансии с ID=" + curVacancy.ToString () + " не удалось найти!");  			if ((curVacancy == 0) || (!Globals.TryAnotherWork)) {  				break;  			}  			else {  				ConsoleLog.WriteLine ("Ищем первую попавшуюся вакансию.");  				curVacancy = 0;  				continue;  			}  		}  	}  	//РАБОТА  	if (Bot.Bot.Work ((uint)botinfo ["citizen_id"]) != 0) {  		botinfo ["last_day_work"] = Globals.GetErepTime ().Days;  		Utils.UpdateDbWithCustomBotInfo (botinfo' "last_day_work");  	}  	else {  		ConsoleLog.WriteLine ("Unable to work - " + botinfo ["login"]);  		//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "WorkLog.txt");  	}  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotWork,The following statement contains a magic number: if ((int)botinfo ["last_day_work"] < Globals.GetErepTime ().Days) {  	if (resignBeforeWork) {  		if (!Bot.Bot.Resign ()) {  			ConsoleLog.WriteLine ("Unable to resign from job - " + botinfo ["login"]);  		}  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  	}  	if (mode == "self") {  		Daily.BotWorkSelf (botinfo' Bot' rnd);  		return;  	}  	//Вот тут мы разруливаем трудоустройство  	int work = 0;  	var offers = Bot.Bot.GetJobOffers (Bot.Info.Country' industry' 0' 1' curVacancy);  	if (!Globals.BotConfig.useTOR)  		System.Threading.Thread.Sleep (rnd.Next (2000' 3000));  	//if (curVacancy != 0)  	//    ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "FindJobLog.txt");  	if (offers != null) {  		if (curVacancy == 0) {  			int minq = 5;  			/*                              Ищем самое дорогое предложение с минимальным Q' меньше или равно заданному.                              ПРОПУСКАЕМ первые два предложения. Там частенько бывают предложения'                              на которые не дают устраиваться. Денег нет на фирме или еще что...                               */int skip = 3;  			foreach (var offer in offers) {  				skip--;  				if (skip > 0)  					continue;  				// Берем вот ту' что стоит третьей. Мало ли лучше не найдем  				if (skip == 0) {  					work = offer.GetValue ("id");  					workindustry = offer.GetValue ("industry");  				}  				// Если нашли с заданным Q -- то и совсем хорошо  				if (offer.GetValue ("quality") <= minq) {  					work = offer.GetValue ("id");  					workindustry = offer.GetValue ("industry");  					break;  				}  			}  		}  		else {  			if (offers.Count != 0) {  				work = offers [0].GetValue ("id");  				workindustry = offers [0].GetValue ("industry");  			}  			else {  				work = 0;  				workindustry = 0;  			}  		}  		if (work != 0) {  			if (!Bot.Bot.Hire (work)) {  				ConsoleLog.WriteLine ("Unable to get job - " + botinfo ["login"]);  				break;  			}  			else {  				if (!Globals.BotConfig.useTOR)  					System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  				botinfo ["industry"] = workindustry;  				Utils.UpdateDbWithCustomBotInfo (botinfo' "industry");  			}  		}  		else {  			ConsoleLog.WriteLine ("Вакансии с ID=" + curVacancy.ToString () + " не удалось найти!");  			if ((curVacancy == 0) || (!Globals.TryAnotherWork)) {  				break;  			}  			else {  				ConsoleLog.WriteLine ("Ищем первую попавшуюся вакансию.");  				curVacancy = 0;  				continue;  			}  		}  	}  	//РАБОТА  	if (Bot.Bot.Work ((uint)botinfo ["citizen_id"]) != 0) {  		botinfo ["last_day_work"] = Globals.GetErepTime ().Days;  		Utils.UpdateDbWithCustomBotInfo (botinfo' "last_day_work");  	}  	else {  		ConsoleLog.WriteLine ("Unable to work - " + botinfo ["login"]);  		//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "WorkLog.txt");  	}  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotWork,The following statement contains a magic number: if ((int)botinfo ["last_day_work"] < Globals.GetErepTime ().Days) {  	if (resignBeforeWork) {  		if (!Bot.Bot.Resign ()) {  			ConsoleLog.WriteLine ("Unable to resign from job - " + botinfo ["login"]);  		}  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  	}  	if (mode == "self") {  		Daily.BotWorkSelf (botinfo' Bot' rnd);  		return;  	}  	//Вот тут мы разруливаем трудоустройство  	int work = 0;  	var offers = Bot.Bot.GetJobOffers (Bot.Info.Country' industry' 0' 1' curVacancy);  	if (!Globals.BotConfig.useTOR)  		System.Threading.Thread.Sleep (rnd.Next (2000' 3000));  	//if (curVacancy != 0)  	//    ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "FindJobLog.txt");  	if (offers != null) {  		if (curVacancy == 0) {  			int minq = 5;  			/*                              Ищем самое дорогое предложение с минимальным Q' меньше или равно заданному.                              ПРОПУСКАЕМ первые два предложения. Там частенько бывают предложения'                              на которые не дают устраиваться. Денег нет на фирме или еще что...                               */int skip = 3;  			foreach (var offer in offers) {  				skip--;  				if (skip > 0)  					continue;  				// Берем вот ту' что стоит третьей. Мало ли лучше не найдем  				if (skip == 0) {  					work = offer.GetValue ("id");  					workindustry = offer.GetValue ("industry");  				}  				// Если нашли с заданным Q -- то и совсем хорошо  				if (offer.GetValue ("quality") <= minq) {  					work = offer.GetValue ("id");  					workindustry = offer.GetValue ("industry");  					break;  				}  			}  		}  		else {  			if (offers.Count != 0) {  				work = offers [0].GetValue ("id");  				workindustry = offers [0].GetValue ("industry");  			}  			else {  				work = 0;  				workindustry = 0;  			}  		}  		if (work != 0) {  			if (!Bot.Bot.Hire (work)) {  				ConsoleLog.WriteLine ("Unable to get job - " + botinfo ["login"]);  				break;  			}  			else {  				if (!Globals.BotConfig.useTOR)  					System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  				botinfo ["industry"] = workindustry;  				Utils.UpdateDbWithCustomBotInfo (botinfo' "industry");  			}  		}  		else {  			ConsoleLog.WriteLine ("Вакансии с ID=" + curVacancy.ToString () + " не удалось найти!");  			if ((curVacancy == 0) || (!Globals.TryAnotherWork)) {  				break;  			}  			else {  				ConsoleLog.WriteLine ("Ищем первую попавшуюся вакансию.");  				curVacancy = 0;  				continue;  			}  		}  	}  	//РАБОТА  	if (Bot.Bot.Work ((uint)botinfo ["citizen_id"]) != 0) {  		botinfo ["last_day_work"] = Globals.GetErepTime ().Days;  		Utils.UpdateDbWithCustomBotInfo (botinfo' "last_day_work");  	}  	else {  		ConsoleLog.WriteLine ("Unable to work - " + botinfo ["login"]);  		//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "WorkLog.txt");  	}  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotWork,The following statement contains a magic number: if (resignBeforeWork) {  	if (!Bot.Bot.Resign ()) {  		ConsoleLog.WriteLine ("Unable to resign from job - " + botinfo ["login"]);  	}  	if (!Globals.BotConfig.useTOR)  		System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotWork,The following statement contains a magic number: if (resignBeforeWork) {  	if (!Bot.Bot.Resign ()) {  		ConsoleLog.WriteLine ("Unable to resign from job - " + botinfo ["login"]);  	}  	if (!Globals.BotConfig.useTOR)  		System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotWork,The following statement contains a magic number: if (!Globals.BotConfig.useTOR)  	System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotWork,The following statement contains a magic number: if (!Globals.BotConfig.useTOR)  	System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotWork,The following statement contains a magic number: System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotWork,The following statement contains a magic number: System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotWork,The following statement contains a magic number: if (!Globals.BotConfig.useTOR)  	System.Threading.Thread.Sleep (rnd.Next (2000' 3000));  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotWork,The following statement contains a magic number: if (!Globals.BotConfig.useTOR)  	System.Threading.Thread.Sleep (rnd.Next (2000' 3000));  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotWork,The following statement contains a magic number: System.Threading.Thread.Sleep (rnd.Next (2000' 3000));  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotWork,The following statement contains a magic number: System.Threading.Thread.Sleep (rnd.Next (2000' 3000));  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotWork,The following statement contains a magic number: if (offers != null) {  	if (curVacancy == 0) {  		int minq = 5;  		/*                              Ищем самое дорогое предложение с минимальным Q' меньше или равно заданному.                              ПРОПУСКАЕМ первые два предложения. Там частенько бывают предложения'                              на которые не дают устраиваться. Денег нет на фирме или еще что...                               */int skip = 3;  		foreach (var offer in offers) {  			skip--;  			if (skip > 0)  				continue;  			// Берем вот ту' что стоит третьей. Мало ли лучше не найдем  			if (skip == 0) {  				work = offer.GetValue ("id");  				workindustry = offer.GetValue ("industry");  			}  			// Если нашли с заданным Q -- то и совсем хорошо  			if (offer.GetValue ("quality") <= minq) {  				work = offer.GetValue ("id");  				workindustry = offer.GetValue ("industry");  				break;  			}  		}  	}  	else {  		if (offers.Count != 0) {  			work = offers [0].GetValue ("id");  			workindustry = offers [0].GetValue ("industry");  		}  		else {  			work = 0;  			workindustry = 0;  		}  	}  	if (work != 0) {  		if (!Bot.Bot.Hire (work)) {  			ConsoleLog.WriteLine ("Unable to get job - " + botinfo ["login"]);  			break;  		}  		else {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			botinfo ["industry"] = workindustry;  			Utils.UpdateDbWithCustomBotInfo (botinfo' "industry");  		}  	}  	else {  		ConsoleLog.WriteLine ("Вакансии с ID=" + curVacancy.ToString () + " не удалось найти!");  		if ((curVacancy == 0) || (!Globals.TryAnotherWork)) {  			break;  		}  		else {  			ConsoleLog.WriteLine ("Ищем первую попавшуюся вакансию.");  			curVacancy = 0;  			continue;  		}  	}  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotWork,The following statement contains a magic number: if (offers != null) {  	if (curVacancy == 0) {  		int minq = 5;  		/*                              Ищем самое дорогое предложение с минимальным Q' меньше или равно заданному.                              ПРОПУСКАЕМ первые два предложения. Там частенько бывают предложения'                              на которые не дают устраиваться. Денег нет на фирме или еще что...                               */int skip = 3;  		foreach (var offer in offers) {  			skip--;  			if (skip > 0)  				continue;  			// Берем вот ту' что стоит третьей. Мало ли лучше не найдем  			if (skip == 0) {  				work = offer.GetValue ("id");  				workindustry = offer.GetValue ("industry");  			}  			// Если нашли с заданным Q -- то и совсем хорошо  			if (offer.GetValue ("quality") <= minq) {  				work = offer.GetValue ("id");  				workindustry = offer.GetValue ("industry");  				break;  			}  		}  	}  	else {  		if (offers.Count != 0) {  			work = offers [0].GetValue ("id");  			workindustry = offers [0].GetValue ("industry");  		}  		else {  			work = 0;  			workindustry = 0;  		}  	}  	if (work != 0) {  		if (!Bot.Bot.Hire (work)) {  			ConsoleLog.WriteLine ("Unable to get job - " + botinfo ["login"]);  			break;  		}  		else {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			botinfo ["industry"] = workindustry;  			Utils.UpdateDbWithCustomBotInfo (botinfo' "industry");  		}  	}  	else {  		ConsoleLog.WriteLine ("Вакансии с ID=" + curVacancy.ToString () + " не удалось найти!");  		if ((curVacancy == 0) || (!Globals.TryAnotherWork)) {  			break;  		}  		else {  			ConsoleLog.WriteLine ("Ищем первую попавшуюся вакансию.");  			curVacancy = 0;  			continue;  		}  	}  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotWork,The following statement contains a magic number: if (offers != null) {  	if (curVacancy == 0) {  		int minq = 5;  		/*                              Ищем самое дорогое предложение с минимальным Q' меньше или равно заданному.                              ПРОПУСКАЕМ первые два предложения. Там частенько бывают предложения'                              на которые не дают устраиваться. Денег нет на фирме или еще что...                               */int skip = 3;  		foreach (var offer in offers) {  			skip--;  			if (skip > 0)  				continue;  			// Берем вот ту' что стоит третьей. Мало ли лучше не найдем  			if (skip == 0) {  				work = offer.GetValue ("id");  				workindustry = offer.GetValue ("industry");  			}  			// Если нашли с заданным Q -- то и совсем хорошо  			if (offer.GetValue ("quality") <= minq) {  				work = offer.GetValue ("id");  				workindustry = offer.GetValue ("industry");  				break;  			}  		}  	}  	else {  		if (offers.Count != 0) {  			work = offers [0].GetValue ("id");  			workindustry = offers [0].GetValue ("industry");  		}  		else {  			work = 0;  			workindustry = 0;  		}  	}  	if (work != 0) {  		if (!Bot.Bot.Hire (work)) {  			ConsoleLog.WriteLine ("Unable to get job - " + botinfo ["login"]);  			break;  		}  		else {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			botinfo ["industry"] = workindustry;  			Utils.UpdateDbWithCustomBotInfo (botinfo' "industry");  		}  	}  	else {  		ConsoleLog.WriteLine ("Вакансии с ID=" + curVacancy.ToString () + " не удалось найти!");  		if ((curVacancy == 0) || (!Globals.TryAnotherWork)) {  			break;  		}  		else {  			ConsoleLog.WriteLine ("Ищем первую попавшуюся вакансию.");  			curVacancy = 0;  			continue;  		}  	}  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotWork,The following statement contains a magic number: if (offers != null) {  	if (curVacancy == 0) {  		int minq = 5;  		/*                              Ищем самое дорогое предложение с минимальным Q' меньше или равно заданному.                              ПРОПУСКАЕМ первые два предложения. Там частенько бывают предложения'                              на которые не дают устраиваться. Денег нет на фирме или еще что...                               */int skip = 3;  		foreach (var offer in offers) {  			skip--;  			if (skip > 0)  				continue;  			// Берем вот ту' что стоит третьей. Мало ли лучше не найдем  			if (skip == 0) {  				work = offer.GetValue ("id");  				workindustry = offer.GetValue ("industry");  			}  			// Если нашли с заданным Q -- то и совсем хорошо  			if (offer.GetValue ("quality") <= minq) {  				work = offer.GetValue ("id");  				workindustry = offer.GetValue ("industry");  				break;  			}  		}  	}  	else {  		if (offers.Count != 0) {  			work = offers [0].GetValue ("id");  			workindustry = offers [0].GetValue ("industry");  		}  		else {  			work = 0;  			workindustry = 0;  		}  	}  	if (work != 0) {  		if (!Bot.Bot.Hire (work)) {  			ConsoleLog.WriteLine ("Unable to get job - " + botinfo ["login"]);  			break;  		}  		else {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			botinfo ["industry"] = workindustry;  			Utils.UpdateDbWithCustomBotInfo (botinfo' "industry");  		}  	}  	else {  		ConsoleLog.WriteLine ("Вакансии с ID=" + curVacancy.ToString () + " не удалось найти!");  		if ((curVacancy == 0) || (!Globals.TryAnotherWork)) {  			break;  		}  		else {  			ConsoleLog.WriteLine ("Ищем первую попавшуюся вакансию.");  			curVacancy = 0;  			continue;  		}  	}  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotWork,The following statement contains a magic number: if (curVacancy == 0) {  	int minq = 5;  	/*                              Ищем самое дорогое предложение с минимальным Q' меньше или равно заданному.                              ПРОПУСКАЕМ первые два предложения. Там частенько бывают предложения'                              на которые не дают устраиваться. Денег нет на фирме или еще что...                               */int skip = 3;  	foreach (var offer in offers) {  		skip--;  		if (skip > 0)  			continue;  		// Берем вот ту' что стоит третьей. Мало ли лучше не найдем  		if (skip == 0) {  			work = offer.GetValue ("id");  			workindustry = offer.GetValue ("industry");  		}  		// Если нашли с заданным Q -- то и совсем хорошо  		if (offer.GetValue ("quality") <= minq) {  			work = offer.GetValue ("id");  			workindustry = offer.GetValue ("industry");  			break;  		}  	}  }  else {  	if (offers.Count != 0) {  		work = offers [0].GetValue ("id");  		workindustry = offers [0].GetValue ("industry");  	}  	else {  		work = 0;  		workindustry = 0;  	}  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotWork,The following statement contains a magic number: if (curVacancy == 0) {  	int minq = 5;  	/*                              Ищем самое дорогое предложение с минимальным Q' меньше или равно заданному.                              ПРОПУСКАЕМ первые два предложения. Там частенько бывают предложения'                              на которые не дают устраиваться. Денег нет на фирме или еще что...                               */int skip = 3;  	foreach (var offer in offers) {  		skip--;  		if (skip > 0)  			continue;  		// Берем вот ту' что стоит третьей. Мало ли лучше не найдем  		if (skip == 0) {  			work = offer.GetValue ("id");  			workindustry = offer.GetValue ("industry");  		}  		// Если нашли с заданным Q -- то и совсем хорошо  		if (offer.GetValue ("quality") <= minq) {  			work = offer.GetValue ("id");  			workindustry = offer.GetValue ("industry");  			break;  		}  	}  }  else {  	if (offers.Count != 0) {  		work = offers [0].GetValue ("id");  		workindustry = offers [0].GetValue ("industry");  	}  	else {  		work = 0;  		workindustry = 0;  	}  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotWork,The following statement contains a magic number: if (work != 0) {  	if (!Bot.Bot.Hire (work)) {  		ConsoleLog.WriteLine ("Unable to get job - " + botinfo ["login"]);  		break;  	}  	else {  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		botinfo ["industry"] = workindustry;  		Utils.UpdateDbWithCustomBotInfo (botinfo' "industry");  	}  }  else {  	ConsoleLog.WriteLine ("Вакансии с ID=" + curVacancy.ToString () + " не удалось найти!");  	if ((curVacancy == 0) || (!Globals.TryAnotherWork)) {  		break;  	}  	else {  		ConsoleLog.WriteLine ("Ищем первую попавшуюся вакансию.");  		curVacancy = 0;  		continue;  	}  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotWork,The following statement contains a magic number: if (work != 0) {  	if (!Bot.Bot.Hire (work)) {  		ConsoleLog.WriteLine ("Unable to get job - " + botinfo ["login"]);  		break;  	}  	else {  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		botinfo ["industry"] = workindustry;  		Utils.UpdateDbWithCustomBotInfo (botinfo' "industry");  	}  }  else {  	ConsoleLog.WriteLine ("Вакансии с ID=" + curVacancy.ToString () + " не удалось найти!");  	if ((curVacancy == 0) || (!Globals.TryAnotherWork)) {  		break;  	}  	else {  		ConsoleLog.WriteLine ("Ищем первую попавшуюся вакансию.");  		curVacancy = 0;  		continue;  	}  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotWork,The following statement contains a magic number: if (!Bot.Bot.Hire (work)) {  	ConsoleLog.WriteLine ("Unable to get job - " + botinfo ["login"]);  	break;  }  else {  	if (!Globals.BotConfig.useTOR)  		System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  	botinfo ["industry"] = workindustry;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "industry");  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotWork,The following statement contains a magic number: if (!Bot.Bot.Hire (work)) {  	ConsoleLog.WriteLine ("Unable to get job - " + botinfo ["login"]);  	break;  }  else {  	if (!Globals.BotConfig.useTOR)  		System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  	botinfo ["industry"] = workindustry;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "industry");  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotWork,The following statement contains a magic number: if (!Globals.BotConfig.useTOR)  	System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotWork,The following statement contains a magic number: if (!Globals.BotConfig.useTOR)  	System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotWork,The following statement contains a magic number: System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotWork,The following statement contains a magic number: System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotWorkSelf,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	string land = "http://economy.erepublik.com/en/land/overview/" + ((uint)botinfo ["citizen_id"]).ToString ();  	string m_Response = Bot.Bot.CustomRequest (land);  	//ConsoleLog.WriteLine(m_Response' "LandOVerviewLog.txt");  	if (!m_Response.Contains ("/en/company/restore")) {  		break;  	}  	ConsoleLog.WriteLine ("Not restored firm found. Restoring.");  	Bot.Bot.RestoreSelfFirm ((uint)botinfo ["citizen_id"]);  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotWorkSelf,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	//РАБОТА  	int workRes = Bot.Bot.Work ((uint)botinfo ["citizen_id"]);  	ConsoleLog.WriteLine ("Work try " + i.ToString () + " - " + botinfo ["login"] + " - Result: " + workRes.ToString ());  	if (workRes == 0) {  		ConsoleLog.WriteLine ("Unable to work - " + botinfo ["login"] + " - " + Bot.Bot.GetLastResponse ());  		//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "WorkLog.txt");  	}  	if (workRes == 1) {  		// Успешно где-то отработали  	}  	if (workRes == 2) {  		botinfo ["last_day_work"] = Globals.GetErepTime ().Days;  		Utils.UpdateDbWithCustomBotInfo (botinfo' "last_day_work");  		break;  	}  	if (workRes == 3) {  		ConsoleLog.WriteLine ("\"Not enough slots\" message' visiting inventory - " + botinfo ["login"] + " - " + Bot.Bot.GetLastResponse ());  		Bot.Bot.VisitInventory ();  	}  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotWorkSelf,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	//РАБОТА  	int workRes = Bot.Bot.Work ((uint)botinfo ["citizen_id"]);  	ConsoleLog.WriteLine ("Work try " + i.ToString () + " - " + botinfo ["login"] + " - Result: " + workRes.ToString ());  	if (workRes == 0) {  		ConsoleLog.WriteLine ("Unable to work - " + botinfo ["login"] + " - " + Bot.Bot.GetLastResponse ());  		//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "WorkLog.txt");  	}  	if (workRes == 1) {  		// Успешно где-то отработали  	}  	if (workRes == 2) {  		botinfo ["last_day_work"] = Globals.GetErepTime ().Days;  		Utils.UpdateDbWithCustomBotInfo (botinfo' "last_day_work");  		break;  	}  	if (workRes == 3) {  		ConsoleLog.WriteLine ("\"Not enough slots\" message' visiting inventory - " + botinfo ["login"] + " - " + Bot.Bot.GetLastResponse ());  		Bot.Bot.VisitInventory ();  	}  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotWorkSelf,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	//РАБОТА  	int workRes = Bot.Bot.Work ((uint)botinfo ["citizen_id"]);  	ConsoleLog.WriteLine ("Work try " + i.ToString () + " - " + botinfo ["login"] + " - Result: " + workRes.ToString ());  	if (workRes == 0) {  		ConsoleLog.WriteLine ("Unable to work - " + botinfo ["login"] + " - " + Bot.Bot.GetLastResponse ());  		//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "WorkLog.txt");  	}  	if (workRes == 1) {  		// Успешно где-то отработали  	}  	if (workRes == 2) {  		botinfo ["last_day_work"] = Globals.GetErepTime ().Days;  		Utils.UpdateDbWithCustomBotInfo (botinfo' "last_day_work");  		break;  	}  	if (workRes == 3) {  		ConsoleLog.WriteLine ("\"Not enough slots\" message' visiting inventory - " + botinfo ["login"] + " - " + Bot.Bot.GetLastResponse ());  		Bot.Bot.VisitInventory ();  	}  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotWorkSelf,The following statement contains a magic number: if (workRes == 2) {  	botinfo ["last_day_work"] = Globals.GetErepTime ().Days;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "last_day_work");  	break;  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotWorkSelf,The following statement contains a magic number: if (workRes == 3) {  	ConsoleLog.WriteLine ("\"Not enough slots\" message' visiting inventory - " + botinfo ["login"] + " - " + Bot.Bot.GetLastResponse ());  	Bot.Bot.VisitInventory ();  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: if (loginResult == ManagedCitizen.LoginResult.Success) {  	try {  		Bot.Bot.m_Client.Timeouts = 0;  		ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		#region Активируем' если в базе нет отметки что активен. Посещаем диснейленд в первый раз  		try {  			if (((int)botinfo ["activated"]) == 0) {  				if (!Globals.BotConfig.useTOR)  					System.Threading.Thread.Sleep (rnd.Next (2000' 5000));  				Bot.Bot.Activate ();  				botinfo ["activated"] = 1;  				Utils.UpdateDbWithCustomBotInfo (botinfo' "activated");  				botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  				ConsoleLog.WriteLine ("Visit 'Land' for the first time");  				Bot.Bot.VisitLand ((uint)botinfo ["citizen_id"]);  			}  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Error activation: " + e.Message);  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		// Смотрим состояние инвентаря  		if (Bot.GetStorageInfo (true)) {  			botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  		}  		#region Light mode. Light так light. НИЧЕГО не делаем' только собираем инфу и выходим  		if (mode == "light") {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			Daily.BotLight (botinfo' Bot' rnd);  			return;  		}  		#endregion  		#region Покупаем и едим еду 1  		if (doFeed == 1)  			Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		#region Работаем' тренькаемся' читаем алерты' читаем статьи' смотрим TreasureMap  		//' учимся' отдыхаем  		List<int> lst = new List<int> ();  		lst.Add (1);  		lst.Add (2);  		lst.Add (3);  		lst.Add (4);  		lst = CommonUtils.MixList (lst);  		for (List<int>.Enumerator e = lst.GetEnumerator (); e.MoveNext ();) {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			switch (e.Current) {  			case 1:  				// Работа  				for (int i = 1; i <= 3; i++) {  					try {  						Daily.BotWork (botinfo' Bot' rnd);  						break;  					}  					catch (System.Exception e1) {  						ConsoleLog.WriteLine ("Bot work error: " + e1.Message);  					}  				}  				break;  			case 2:  				// Тренька  				for (int i = 1; i <= 3; i++) {  					try {  						Daily.BotTrain (botinfo' Bot' rnd);  						break;  					}  					catch (System.Exception e1) {  						ConsoleLog.WriteLine ("Bot train error: " + e1.Message);  					}  				}  				break;  			case 3:  				// Аллерты  				try {  					Bot.Bot.LookAlerts ();  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot look alerts error: " + e1.Message);  				}  				break;  			case 4:  				// Статьи  				try {  					Bot.Bot.ReadRandomTopArticle ();  					//if (!Globals.BotConfig.useTOR) System.Threading.Thread.Sleep(rnd.Next(15000' 20000));  					Bot.Bot.ReadRandomTopArticle ();  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot read article error: " + e1.Message);  				}  				break;  			}  			if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  				throw new Exception ("Timeout limit reached.");  		}  		#endregion  		#region Получаем дневной reward  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		for (int i = 1; i <= 3; i++) {  			try {  				Bot.Bot.DailyReward ();  				break;  			}  			catch (System.Exception e) {  				ConsoleLog.WriteLine ("Bot get daily reward error: " + e.Message);  			}  			if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  				throw new Exception ("Timeout limit reached.");  		}  		#endregion  		#region Покупаем и едим еду 2  		if (doFeed == 2)  			Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		// Смотрим состояние инвентаря  		if (Bot.GetStorageInfo (true)) {  			botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  		}  		#region Грузим аватару' если не загружена  		try {  			//АВАТАРКА  			if (/*((int)botinfo["experience"] >= 61) && */(!Bot.Info.HasAvatar))//if (false)  			 {  				ConsoleLog.WriteLine (botinfo ["login"] + ": Upload avatar");  				if (!Globals.BotConfig.useTOR)  					System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  				string Path = System.IO.Path.Combine (Globals.DataDir' "avatars");  				Path = System.IO.Path.Combine (Path' Globals.Avatars.GetRandomString ());  				Bot.Bot.UploadAvatar (System.IO.File.ReadAllBytes (Path)' Path);  				botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  			}  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Error uploading avatar: " + e.Message);  		}  		#endregion  	}  	finally {  		// Апдейтим статус бота в базе  		botinfo = Utils.TryToUpdateDbWithCurrentInfo (botinfo' Bot);  	}  	// Logout  	Bot.Bot.Logout ();  }  else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: if (loginResult == ManagedCitizen.LoginResult.Success) {  	try {  		Bot.Bot.m_Client.Timeouts = 0;  		ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		#region Активируем' если в базе нет отметки что активен. Посещаем диснейленд в первый раз  		try {  			if (((int)botinfo ["activated"]) == 0) {  				if (!Globals.BotConfig.useTOR)  					System.Threading.Thread.Sleep (rnd.Next (2000' 5000));  				Bot.Bot.Activate ();  				botinfo ["activated"] = 1;  				Utils.UpdateDbWithCustomBotInfo (botinfo' "activated");  				botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  				ConsoleLog.WriteLine ("Visit 'Land' for the first time");  				Bot.Bot.VisitLand ((uint)botinfo ["citizen_id"]);  			}  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Error activation: " + e.Message);  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		// Смотрим состояние инвентаря  		if (Bot.GetStorageInfo (true)) {  			botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  		}  		#region Light mode. Light так light. НИЧЕГО не делаем' только собираем инфу и выходим  		if (mode == "light") {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			Daily.BotLight (botinfo' Bot' rnd);  			return;  		}  		#endregion  		#region Покупаем и едим еду 1  		if (doFeed == 1)  			Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		#region Работаем' тренькаемся' читаем алерты' читаем статьи' смотрим TreasureMap  		//' учимся' отдыхаем  		List<int> lst = new List<int> ();  		lst.Add (1);  		lst.Add (2);  		lst.Add (3);  		lst.Add (4);  		lst = CommonUtils.MixList (lst);  		for (List<int>.Enumerator e = lst.GetEnumerator (); e.MoveNext ();) {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			switch (e.Current) {  			case 1:  				// Работа  				for (int i = 1; i <= 3; i++) {  					try {  						Daily.BotWork (botinfo' Bot' rnd);  						break;  					}  					catch (System.Exception e1) {  						ConsoleLog.WriteLine ("Bot work error: " + e1.Message);  					}  				}  				break;  			case 2:  				// Тренька  				for (int i = 1; i <= 3; i++) {  					try {  						Daily.BotTrain (botinfo' Bot' rnd);  						break;  					}  					catch (System.Exception e1) {  						ConsoleLog.WriteLine ("Bot train error: " + e1.Message);  					}  				}  				break;  			case 3:  				// Аллерты  				try {  					Bot.Bot.LookAlerts ();  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot look alerts error: " + e1.Message);  				}  				break;  			case 4:  				// Статьи  				try {  					Bot.Bot.ReadRandomTopArticle ();  					//if (!Globals.BotConfig.useTOR) System.Threading.Thread.Sleep(rnd.Next(15000' 20000));  					Bot.Bot.ReadRandomTopArticle ();  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot read article error: " + e1.Message);  				}  				break;  			}  			if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  				throw new Exception ("Timeout limit reached.");  		}  		#endregion  		#region Получаем дневной reward  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		for (int i = 1; i <= 3; i++) {  			try {  				Bot.Bot.DailyReward ();  				break;  			}  			catch (System.Exception e) {  				ConsoleLog.WriteLine ("Bot get daily reward error: " + e.Message);  			}  			if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  				throw new Exception ("Timeout limit reached.");  		}  		#endregion  		#region Покупаем и едим еду 2  		if (doFeed == 2)  			Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		// Смотрим состояние инвентаря  		if (Bot.GetStorageInfo (true)) {  			botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  		}  		#region Грузим аватару' если не загружена  		try {  			//АВАТАРКА  			if (/*((int)botinfo["experience"] >= 61) && */(!Bot.Info.HasAvatar))//if (false)  			 {  				ConsoleLog.WriteLine (botinfo ["login"] + ": Upload avatar");  				if (!Globals.BotConfig.useTOR)  					System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  				string Path = System.IO.Path.Combine (Globals.DataDir' "avatars");  				Path = System.IO.Path.Combine (Path' Globals.Avatars.GetRandomString ());  				Bot.Bot.UploadAvatar (System.IO.File.ReadAllBytes (Path)' Path);  				botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  			}  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Error uploading avatar: " + e.Message);  		}  		#endregion  	}  	finally {  		// Апдейтим статус бота в базе  		botinfo = Utils.TryToUpdateDbWithCurrentInfo (botinfo' Bot);  	}  	// Logout  	Bot.Bot.Logout ();  }  else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: if (loginResult == ManagedCitizen.LoginResult.Success) {  	try {  		Bot.Bot.m_Client.Timeouts = 0;  		ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		#region Активируем' если в базе нет отметки что активен. Посещаем диснейленд в первый раз  		try {  			if (((int)botinfo ["activated"]) == 0) {  				if (!Globals.BotConfig.useTOR)  					System.Threading.Thread.Sleep (rnd.Next (2000' 5000));  				Bot.Bot.Activate ();  				botinfo ["activated"] = 1;  				Utils.UpdateDbWithCustomBotInfo (botinfo' "activated");  				botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  				ConsoleLog.WriteLine ("Visit 'Land' for the first time");  				Bot.Bot.VisitLand ((uint)botinfo ["citizen_id"]);  			}  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Error activation: " + e.Message);  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		// Смотрим состояние инвентаря  		if (Bot.GetStorageInfo (true)) {  			botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  		}  		#region Light mode. Light так light. НИЧЕГО не делаем' только собираем инфу и выходим  		if (mode == "light") {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			Daily.BotLight (botinfo' Bot' rnd);  			return;  		}  		#endregion  		#region Покупаем и едим еду 1  		if (doFeed == 1)  			Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		#region Работаем' тренькаемся' читаем алерты' читаем статьи' смотрим TreasureMap  		//' учимся' отдыхаем  		List<int> lst = new List<int> ();  		lst.Add (1);  		lst.Add (2);  		lst.Add (3);  		lst.Add (4);  		lst = CommonUtils.MixList (lst);  		for (List<int>.Enumerator e = lst.GetEnumerator (); e.MoveNext ();) {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			switch (e.Current) {  			case 1:  				// Работа  				for (int i = 1; i <= 3; i++) {  					try {  						Daily.BotWork (botinfo' Bot' rnd);  						break;  					}  					catch (System.Exception e1) {  						ConsoleLog.WriteLine ("Bot work error: " + e1.Message);  					}  				}  				break;  			case 2:  				// Тренька  				for (int i = 1; i <= 3; i++) {  					try {  						Daily.BotTrain (botinfo' Bot' rnd);  						break;  					}  					catch (System.Exception e1) {  						ConsoleLog.WriteLine ("Bot train error: " + e1.Message);  					}  				}  				break;  			case 3:  				// Аллерты  				try {  					Bot.Bot.LookAlerts ();  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot look alerts error: " + e1.Message);  				}  				break;  			case 4:  				// Статьи  				try {  					Bot.Bot.ReadRandomTopArticle ();  					//if (!Globals.BotConfig.useTOR) System.Threading.Thread.Sleep(rnd.Next(15000' 20000));  					Bot.Bot.ReadRandomTopArticle ();  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot read article error: " + e1.Message);  				}  				break;  			}  			if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  				throw new Exception ("Timeout limit reached.");  		}  		#endregion  		#region Получаем дневной reward  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		for (int i = 1; i <= 3; i++) {  			try {  				Bot.Bot.DailyReward ();  				break;  			}  			catch (System.Exception e) {  				ConsoleLog.WriteLine ("Bot get daily reward error: " + e.Message);  			}  			if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  				throw new Exception ("Timeout limit reached.");  		}  		#endregion  		#region Покупаем и едим еду 2  		if (doFeed == 2)  			Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		// Смотрим состояние инвентаря  		if (Bot.GetStorageInfo (true)) {  			botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  		}  		#region Грузим аватару' если не загружена  		try {  			//АВАТАРКА  			if (/*((int)botinfo["experience"] >= 61) && */(!Bot.Info.HasAvatar))//if (false)  			 {  				ConsoleLog.WriteLine (botinfo ["login"] + ": Upload avatar");  				if (!Globals.BotConfig.useTOR)  					System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  				string Path = System.IO.Path.Combine (Globals.DataDir' "avatars");  				Path = System.IO.Path.Combine (Path' Globals.Avatars.GetRandomString ());  				Bot.Bot.UploadAvatar (System.IO.File.ReadAllBytes (Path)' Path);  				botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  			}  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Error uploading avatar: " + e.Message);  		}  		#endregion  	}  	finally {  		// Апдейтим статус бота в базе  		botinfo = Utils.TryToUpdateDbWithCurrentInfo (botinfo' Bot);  	}  	// Logout  	Bot.Bot.Logout ();  }  else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: if (loginResult == ManagedCitizen.LoginResult.Success) {  	try {  		Bot.Bot.m_Client.Timeouts = 0;  		ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		#region Активируем' если в базе нет отметки что активен. Посещаем диснейленд в первый раз  		try {  			if (((int)botinfo ["activated"]) == 0) {  				if (!Globals.BotConfig.useTOR)  					System.Threading.Thread.Sleep (rnd.Next (2000' 5000));  				Bot.Bot.Activate ();  				botinfo ["activated"] = 1;  				Utils.UpdateDbWithCustomBotInfo (botinfo' "activated");  				botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  				ConsoleLog.WriteLine ("Visit 'Land' for the first time");  				Bot.Bot.VisitLand ((uint)botinfo ["citizen_id"]);  			}  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Error activation: " + e.Message);  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		// Смотрим состояние инвентаря  		if (Bot.GetStorageInfo (true)) {  			botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  		}  		#region Light mode. Light так light. НИЧЕГО не делаем' только собираем инфу и выходим  		if (mode == "light") {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			Daily.BotLight (botinfo' Bot' rnd);  			return;  		}  		#endregion  		#region Покупаем и едим еду 1  		if (doFeed == 1)  			Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		#region Работаем' тренькаемся' читаем алерты' читаем статьи' смотрим TreasureMap  		//' учимся' отдыхаем  		List<int> lst = new List<int> ();  		lst.Add (1);  		lst.Add (2);  		lst.Add (3);  		lst.Add (4);  		lst = CommonUtils.MixList (lst);  		for (List<int>.Enumerator e = lst.GetEnumerator (); e.MoveNext ();) {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			switch (e.Current) {  			case 1:  				// Работа  				for (int i = 1; i <= 3; i++) {  					try {  						Daily.BotWork (botinfo' Bot' rnd);  						break;  					}  					catch (System.Exception e1) {  						ConsoleLog.WriteLine ("Bot work error: " + e1.Message);  					}  				}  				break;  			case 2:  				// Тренька  				for (int i = 1; i <= 3; i++) {  					try {  						Daily.BotTrain (botinfo' Bot' rnd);  						break;  					}  					catch (System.Exception e1) {  						ConsoleLog.WriteLine ("Bot train error: " + e1.Message);  					}  				}  				break;  			case 3:  				// Аллерты  				try {  					Bot.Bot.LookAlerts ();  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot look alerts error: " + e1.Message);  				}  				break;  			case 4:  				// Статьи  				try {  					Bot.Bot.ReadRandomTopArticle ();  					//if (!Globals.BotConfig.useTOR) System.Threading.Thread.Sleep(rnd.Next(15000' 20000));  					Bot.Bot.ReadRandomTopArticle ();  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot read article error: " + e1.Message);  				}  				break;  			}  			if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  				throw new Exception ("Timeout limit reached.");  		}  		#endregion  		#region Получаем дневной reward  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		for (int i = 1; i <= 3; i++) {  			try {  				Bot.Bot.DailyReward ();  				break;  			}  			catch (System.Exception e) {  				ConsoleLog.WriteLine ("Bot get daily reward error: " + e.Message);  			}  			if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  				throw new Exception ("Timeout limit reached.");  		}  		#endregion  		#region Покупаем и едим еду 2  		if (doFeed == 2)  			Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		// Смотрим состояние инвентаря  		if (Bot.GetStorageInfo (true)) {  			botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  		}  		#region Грузим аватару' если не загружена  		try {  			//АВАТАРКА  			if (/*((int)botinfo["experience"] >= 61) && */(!Bot.Info.HasAvatar))//if (false)  			 {  				ConsoleLog.WriteLine (botinfo ["login"] + ": Upload avatar");  				if (!Globals.BotConfig.useTOR)  					System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  				string Path = System.IO.Path.Combine (Globals.DataDir' "avatars");  				Path = System.IO.Path.Combine (Path' Globals.Avatars.GetRandomString ());  				Bot.Bot.UploadAvatar (System.IO.File.ReadAllBytes (Path)' Path);  				botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  			}  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Error uploading avatar: " + e.Message);  		}  		#endregion  	}  	finally {  		// Апдейтим статус бота в базе  		botinfo = Utils.TryToUpdateDbWithCurrentInfo (botinfo' Bot);  	}  	// Logout  	Bot.Bot.Logout ();  }  else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: if (loginResult == ManagedCitizen.LoginResult.Success) {  	try {  		Bot.Bot.m_Client.Timeouts = 0;  		ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		#region Активируем' если в базе нет отметки что активен. Посещаем диснейленд в первый раз  		try {  			if (((int)botinfo ["activated"]) == 0) {  				if (!Globals.BotConfig.useTOR)  					System.Threading.Thread.Sleep (rnd.Next (2000' 5000));  				Bot.Bot.Activate ();  				botinfo ["activated"] = 1;  				Utils.UpdateDbWithCustomBotInfo (botinfo' "activated");  				botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  				ConsoleLog.WriteLine ("Visit 'Land' for the first time");  				Bot.Bot.VisitLand ((uint)botinfo ["citizen_id"]);  			}  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Error activation: " + e.Message);  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		// Смотрим состояние инвентаря  		if (Bot.GetStorageInfo (true)) {  			botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  		}  		#region Light mode. Light так light. НИЧЕГО не делаем' только собираем инфу и выходим  		if (mode == "light") {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			Daily.BotLight (botinfo' Bot' rnd);  			return;  		}  		#endregion  		#region Покупаем и едим еду 1  		if (doFeed == 1)  			Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		#region Работаем' тренькаемся' читаем алерты' читаем статьи' смотрим TreasureMap  		//' учимся' отдыхаем  		List<int> lst = new List<int> ();  		lst.Add (1);  		lst.Add (2);  		lst.Add (3);  		lst.Add (4);  		lst = CommonUtils.MixList (lst);  		for (List<int>.Enumerator e = lst.GetEnumerator (); e.MoveNext ();) {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			switch (e.Current) {  			case 1:  				// Работа  				for (int i = 1; i <= 3; i++) {  					try {  						Daily.BotWork (botinfo' Bot' rnd);  						break;  					}  					catch (System.Exception e1) {  						ConsoleLog.WriteLine ("Bot work error: " + e1.Message);  					}  				}  				break;  			case 2:  				// Тренька  				for (int i = 1; i <= 3; i++) {  					try {  						Daily.BotTrain (botinfo' Bot' rnd);  						break;  					}  					catch (System.Exception e1) {  						ConsoleLog.WriteLine ("Bot train error: " + e1.Message);  					}  				}  				break;  			case 3:  				// Аллерты  				try {  					Bot.Bot.LookAlerts ();  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot look alerts error: " + e1.Message);  				}  				break;  			case 4:  				// Статьи  				try {  					Bot.Bot.ReadRandomTopArticle ();  					//if (!Globals.BotConfig.useTOR) System.Threading.Thread.Sleep(rnd.Next(15000' 20000));  					Bot.Bot.ReadRandomTopArticle ();  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot read article error: " + e1.Message);  				}  				break;  			}  			if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  				throw new Exception ("Timeout limit reached.");  		}  		#endregion  		#region Получаем дневной reward  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		for (int i = 1; i <= 3; i++) {  			try {  				Bot.Bot.DailyReward ();  				break;  			}  			catch (System.Exception e) {  				ConsoleLog.WriteLine ("Bot get daily reward error: " + e.Message);  			}  			if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  				throw new Exception ("Timeout limit reached.");  		}  		#endregion  		#region Покупаем и едим еду 2  		if (doFeed == 2)  			Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		// Смотрим состояние инвентаря  		if (Bot.GetStorageInfo (true)) {  			botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  		}  		#region Грузим аватару' если не загружена  		try {  			//АВАТАРКА  			if (/*((int)botinfo["experience"] >= 61) && */(!Bot.Info.HasAvatar))//if (false)  			 {  				ConsoleLog.WriteLine (botinfo ["login"] + ": Upload avatar");  				if (!Globals.BotConfig.useTOR)  					System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  				string Path = System.IO.Path.Combine (Globals.DataDir' "avatars");  				Path = System.IO.Path.Combine (Path' Globals.Avatars.GetRandomString ());  				Bot.Bot.UploadAvatar (System.IO.File.ReadAllBytes (Path)' Path);  				botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  			}  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Error uploading avatar: " + e.Message);  		}  		#endregion  	}  	finally {  		// Апдейтим статус бота в базе  		botinfo = Utils.TryToUpdateDbWithCurrentInfo (botinfo' Bot);  	}  	// Logout  	Bot.Bot.Logout ();  }  else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: if (loginResult == ManagedCitizen.LoginResult.Success) {  	try {  		Bot.Bot.m_Client.Timeouts = 0;  		ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		#region Активируем' если в базе нет отметки что активен. Посещаем диснейленд в первый раз  		try {  			if (((int)botinfo ["activated"]) == 0) {  				if (!Globals.BotConfig.useTOR)  					System.Threading.Thread.Sleep (rnd.Next (2000' 5000));  				Bot.Bot.Activate ();  				botinfo ["activated"] = 1;  				Utils.UpdateDbWithCustomBotInfo (botinfo' "activated");  				botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  				ConsoleLog.WriteLine ("Visit 'Land' for the first time");  				Bot.Bot.VisitLand ((uint)botinfo ["citizen_id"]);  			}  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Error activation: " + e.Message);  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		// Смотрим состояние инвентаря  		if (Bot.GetStorageInfo (true)) {  			botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  		}  		#region Light mode. Light так light. НИЧЕГО не делаем' только собираем инфу и выходим  		if (mode == "light") {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			Daily.BotLight (botinfo' Bot' rnd);  			return;  		}  		#endregion  		#region Покупаем и едим еду 1  		if (doFeed == 1)  			Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		#region Работаем' тренькаемся' читаем алерты' читаем статьи' смотрим TreasureMap  		//' учимся' отдыхаем  		List<int> lst = new List<int> ();  		lst.Add (1);  		lst.Add (2);  		lst.Add (3);  		lst.Add (4);  		lst = CommonUtils.MixList (lst);  		for (List<int>.Enumerator e = lst.GetEnumerator (); e.MoveNext ();) {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			switch (e.Current) {  			case 1:  				// Работа  				for (int i = 1; i <= 3; i++) {  					try {  						Daily.BotWork (botinfo' Bot' rnd);  						break;  					}  					catch (System.Exception e1) {  						ConsoleLog.WriteLine ("Bot work error: " + e1.Message);  					}  				}  				break;  			case 2:  				// Тренька  				for (int i = 1; i <= 3; i++) {  					try {  						Daily.BotTrain (botinfo' Bot' rnd);  						break;  					}  					catch (System.Exception e1) {  						ConsoleLog.WriteLine ("Bot train error: " + e1.Message);  					}  				}  				break;  			case 3:  				// Аллерты  				try {  					Bot.Bot.LookAlerts ();  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot look alerts error: " + e1.Message);  				}  				break;  			case 4:  				// Статьи  				try {  					Bot.Bot.ReadRandomTopArticle ();  					//if (!Globals.BotConfig.useTOR) System.Threading.Thread.Sleep(rnd.Next(15000' 20000));  					Bot.Bot.ReadRandomTopArticle ();  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot read article error: " + e1.Message);  				}  				break;  			}  			if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  				throw new Exception ("Timeout limit reached.");  		}  		#endregion  		#region Получаем дневной reward  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		for (int i = 1; i <= 3; i++) {  			try {  				Bot.Bot.DailyReward ();  				break;  			}  			catch (System.Exception e) {  				ConsoleLog.WriteLine ("Bot get daily reward error: " + e.Message);  			}  			if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  				throw new Exception ("Timeout limit reached.");  		}  		#endregion  		#region Покупаем и едим еду 2  		if (doFeed == 2)  			Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		// Смотрим состояние инвентаря  		if (Bot.GetStorageInfo (true)) {  			botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  		}  		#region Грузим аватару' если не загружена  		try {  			//АВАТАРКА  			if (/*((int)botinfo["experience"] >= 61) && */(!Bot.Info.HasAvatar))//if (false)  			 {  				ConsoleLog.WriteLine (botinfo ["login"] + ": Upload avatar");  				if (!Globals.BotConfig.useTOR)  					System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  				string Path = System.IO.Path.Combine (Globals.DataDir' "avatars");  				Path = System.IO.Path.Combine (Path' Globals.Avatars.GetRandomString ());  				Bot.Bot.UploadAvatar (System.IO.File.ReadAllBytes (Path)' Path);  				botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  			}  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Error uploading avatar: " + e.Message);  		}  		#endregion  	}  	finally {  		// Апдейтим статус бота в базе  		botinfo = Utils.TryToUpdateDbWithCurrentInfo (botinfo' Bot);  	}  	// Logout  	Bot.Bot.Logout ();  }  else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: if (loginResult == ManagedCitizen.LoginResult.Success) {  	try {  		Bot.Bot.m_Client.Timeouts = 0;  		ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		#region Активируем' если в базе нет отметки что активен. Посещаем диснейленд в первый раз  		try {  			if (((int)botinfo ["activated"]) == 0) {  				if (!Globals.BotConfig.useTOR)  					System.Threading.Thread.Sleep (rnd.Next (2000' 5000));  				Bot.Bot.Activate ();  				botinfo ["activated"] = 1;  				Utils.UpdateDbWithCustomBotInfo (botinfo' "activated");  				botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  				ConsoleLog.WriteLine ("Visit 'Land' for the first time");  				Bot.Bot.VisitLand ((uint)botinfo ["citizen_id"]);  			}  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Error activation: " + e.Message);  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		// Смотрим состояние инвентаря  		if (Bot.GetStorageInfo (true)) {  			botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  		}  		#region Light mode. Light так light. НИЧЕГО не делаем' только собираем инфу и выходим  		if (mode == "light") {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			Daily.BotLight (botinfo' Bot' rnd);  			return;  		}  		#endregion  		#region Покупаем и едим еду 1  		if (doFeed == 1)  			Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		#region Работаем' тренькаемся' читаем алерты' читаем статьи' смотрим TreasureMap  		//' учимся' отдыхаем  		List<int> lst = new List<int> ();  		lst.Add (1);  		lst.Add (2);  		lst.Add (3);  		lst.Add (4);  		lst = CommonUtils.MixList (lst);  		for (List<int>.Enumerator e = lst.GetEnumerator (); e.MoveNext ();) {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			switch (e.Current) {  			case 1:  				// Работа  				for (int i = 1; i <= 3; i++) {  					try {  						Daily.BotWork (botinfo' Bot' rnd);  						break;  					}  					catch (System.Exception e1) {  						ConsoleLog.WriteLine ("Bot work error: " + e1.Message);  					}  				}  				break;  			case 2:  				// Тренька  				for (int i = 1; i <= 3; i++) {  					try {  						Daily.BotTrain (botinfo' Bot' rnd);  						break;  					}  					catch (System.Exception e1) {  						ConsoleLog.WriteLine ("Bot train error: " + e1.Message);  					}  				}  				break;  			case 3:  				// Аллерты  				try {  					Bot.Bot.LookAlerts ();  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot look alerts error: " + e1.Message);  				}  				break;  			case 4:  				// Статьи  				try {  					Bot.Bot.ReadRandomTopArticle ();  					//if (!Globals.BotConfig.useTOR) System.Threading.Thread.Sleep(rnd.Next(15000' 20000));  					Bot.Bot.ReadRandomTopArticle ();  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot read article error: " + e1.Message);  				}  				break;  			}  			if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  				throw new Exception ("Timeout limit reached.");  		}  		#endregion  		#region Получаем дневной reward  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		for (int i = 1; i <= 3; i++) {  			try {  				Bot.Bot.DailyReward ();  				break;  			}  			catch (System.Exception e) {  				ConsoleLog.WriteLine ("Bot get daily reward error: " + e.Message);  			}  			if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  				throw new Exception ("Timeout limit reached.");  		}  		#endregion  		#region Покупаем и едим еду 2  		if (doFeed == 2)  			Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		// Смотрим состояние инвентаря  		if (Bot.GetStorageInfo (true)) {  			botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  		}  		#region Грузим аватару' если не загружена  		try {  			//АВАТАРКА  			if (/*((int)botinfo["experience"] >= 61) && */(!Bot.Info.HasAvatar))//if (false)  			 {  				ConsoleLog.WriteLine (botinfo ["login"] + ": Upload avatar");  				if (!Globals.BotConfig.useTOR)  					System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  				string Path = System.IO.Path.Combine (Globals.DataDir' "avatars");  				Path = System.IO.Path.Combine (Path' Globals.Avatars.GetRandomString ());  				Bot.Bot.UploadAvatar (System.IO.File.ReadAllBytes (Path)' Path);  				botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  			}  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Error uploading avatar: " + e.Message);  		}  		#endregion  	}  	finally {  		// Апдейтим статус бота в базе  		botinfo = Utils.TryToUpdateDbWithCurrentInfo (botinfo' Bot);  	}  	// Logout  	Bot.Bot.Logout ();  }  else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: if (loginResult == ManagedCitizen.LoginResult.Success) {  	try {  		Bot.Bot.m_Client.Timeouts = 0;  		ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		#region Активируем' если в базе нет отметки что активен. Посещаем диснейленд в первый раз  		try {  			if (((int)botinfo ["activated"]) == 0) {  				if (!Globals.BotConfig.useTOR)  					System.Threading.Thread.Sleep (rnd.Next (2000' 5000));  				Bot.Bot.Activate ();  				botinfo ["activated"] = 1;  				Utils.UpdateDbWithCustomBotInfo (botinfo' "activated");  				botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  				ConsoleLog.WriteLine ("Visit 'Land' for the first time");  				Bot.Bot.VisitLand ((uint)botinfo ["citizen_id"]);  			}  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Error activation: " + e.Message);  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		// Смотрим состояние инвентаря  		if (Bot.GetStorageInfo (true)) {  			botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  		}  		#region Light mode. Light так light. НИЧЕГО не делаем' только собираем инфу и выходим  		if (mode == "light") {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			Daily.BotLight (botinfo' Bot' rnd);  			return;  		}  		#endregion  		#region Покупаем и едим еду 1  		if (doFeed == 1)  			Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		#region Работаем' тренькаемся' читаем алерты' читаем статьи' смотрим TreasureMap  		//' учимся' отдыхаем  		List<int> lst = new List<int> ();  		lst.Add (1);  		lst.Add (2);  		lst.Add (3);  		lst.Add (4);  		lst = CommonUtils.MixList (lst);  		for (List<int>.Enumerator e = lst.GetEnumerator (); e.MoveNext ();) {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			switch (e.Current) {  			case 1:  				// Работа  				for (int i = 1; i <= 3; i++) {  					try {  						Daily.BotWork (botinfo' Bot' rnd);  						break;  					}  					catch (System.Exception e1) {  						ConsoleLog.WriteLine ("Bot work error: " + e1.Message);  					}  				}  				break;  			case 2:  				// Тренька  				for (int i = 1; i <= 3; i++) {  					try {  						Daily.BotTrain (botinfo' Bot' rnd);  						break;  					}  					catch (System.Exception e1) {  						ConsoleLog.WriteLine ("Bot train error: " + e1.Message);  					}  				}  				break;  			case 3:  				// Аллерты  				try {  					Bot.Bot.LookAlerts ();  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot look alerts error: " + e1.Message);  				}  				break;  			case 4:  				// Статьи  				try {  					Bot.Bot.ReadRandomTopArticle ();  					//if (!Globals.BotConfig.useTOR) System.Threading.Thread.Sleep(rnd.Next(15000' 20000));  					Bot.Bot.ReadRandomTopArticle ();  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot read article error: " + e1.Message);  				}  				break;  			}  			if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  				throw new Exception ("Timeout limit reached.");  		}  		#endregion  		#region Получаем дневной reward  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		for (int i = 1; i <= 3; i++) {  			try {  				Bot.Bot.DailyReward ();  				break;  			}  			catch (System.Exception e) {  				ConsoleLog.WriteLine ("Bot get daily reward error: " + e.Message);  			}  			if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  				throw new Exception ("Timeout limit reached.");  		}  		#endregion  		#region Покупаем и едим еду 2  		if (doFeed == 2)  			Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		// Смотрим состояние инвентаря  		if (Bot.GetStorageInfo (true)) {  			botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  		}  		#region Грузим аватару' если не загружена  		try {  			//АВАТАРКА  			if (/*((int)botinfo["experience"] >= 61) && */(!Bot.Info.HasAvatar))//if (false)  			 {  				ConsoleLog.WriteLine (botinfo ["login"] + ": Upload avatar");  				if (!Globals.BotConfig.useTOR)  					System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  				string Path = System.IO.Path.Combine (Globals.DataDir' "avatars");  				Path = System.IO.Path.Combine (Path' Globals.Avatars.GetRandomString ());  				Bot.Bot.UploadAvatar (System.IO.File.ReadAllBytes (Path)' Path);  				botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  			}  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Error uploading avatar: " + e.Message);  		}  		#endregion  	}  	finally {  		// Апдейтим статус бота в базе  		botinfo = Utils.TryToUpdateDbWithCurrentInfo (botinfo' Bot);  	}  	// Logout  	Bot.Bot.Logout ();  }  else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: if (loginResult == ManagedCitizen.LoginResult.Success) {  	try {  		Bot.Bot.m_Client.Timeouts = 0;  		ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		#region Активируем' если в базе нет отметки что активен. Посещаем диснейленд в первый раз  		try {  			if (((int)botinfo ["activated"]) == 0) {  				if (!Globals.BotConfig.useTOR)  					System.Threading.Thread.Sleep (rnd.Next (2000' 5000));  				Bot.Bot.Activate ();  				botinfo ["activated"] = 1;  				Utils.UpdateDbWithCustomBotInfo (botinfo' "activated");  				botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  				ConsoleLog.WriteLine ("Visit 'Land' for the first time");  				Bot.Bot.VisitLand ((uint)botinfo ["citizen_id"]);  			}  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Error activation: " + e.Message);  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		// Смотрим состояние инвентаря  		if (Bot.GetStorageInfo (true)) {  			botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  		}  		#region Light mode. Light так light. НИЧЕГО не делаем' только собираем инфу и выходим  		if (mode == "light") {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			Daily.BotLight (botinfo' Bot' rnd);  			return;  		}  		#endregion  		#region Покупаем и едим еду 1  		if (doFeed == 1)  			Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		#region Работаем' тренькаемся' читаем алерты' читаем статьи' смотрим TreasureMap  		//' учимся' отдыхаем  		List<int> lst = new List<int> ();  		lst.Add (1);  		lst.Add (2);  		lst.Add (3);  		lst.Add (4);  		lst = CommonUtils.MixList (lst);  		for (List<int>.Enumerator e = lst.GetEnumerator (); e.MoveNext ();) {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			switch (e.Current) {  			case 1:  				// Работа  				for (int i = 1; i <= 3; i++) {  					try {  						Daily.BotWork (botinfo' Bot' rnd);  						break;  					}  					catch (System.Exception e1) {  						ConsoleLog.WriteLine ("Bot work error: " + e1.Message);  					}  				}  				break;  			case 2:  				// Тренька  				for (int i = 1; i <= 3; i++) {  					try {  						Daily.BotTrain (botinfo' Bot' rnd);  						break;  					}  					catch (System.Exception e1) {  						ConsoleLog.WriteLine ("Bot train error: " + e1.Message);  					}  				}  				break;  			case 3:  				// Аллерты  				try {  					Bot.Bot.LookAlerts ();  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot look alerts error: " + e1.Message);  				}  				break;  			case 4:  				// Статьи  				try {  					Bot.Bot.ReadRandomTopArticle ();  					//if (!Globals.BotConfig.useTOR) System.Threading.Thread.Sleep(rnd.Next(15000' 20000));  					Bot.Bot.ReadRandomTopArticle ();  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot read article error: " + e1.Message);  				}  				break;  			}  			if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  				throw new Exception ("Timeout limit reached.");  		}  		#endregion  		#region Получаем дневной reward  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		for (int i = 1; i <= 3; i++) {  			try {  				Bot.Bot.DailyReward ();  				break;  			}  			catch (System.Exception e) {  				ConsoleLog.WriteLine ("Bot get daily reward error: " + e.Message);  			}  			if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  				throw new Exception ("Timeout limit reached.");  		}  		#endregion  		#region Покупаем и едим еду 2  		if (doFeed == 2)  			Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		// Смотрим состояние инвентаря  		if (Bot.GetStorageInfo (true)) {  			botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  		}  		#region Грузим аватару' если не загружена  		try {  			//АВАТАРКА  			if (/*((int)botinfo["experience"] >= 61) && */(!Bot.Info.HasAvatar))//if (false)  			 {  				ConsoleLog.WriteLine (botinfo ["login"] + ": Upload avatar");  				if (!Globals.BotConfig.useTOR)  					System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  				string Path = System.IO.Path.Combine (Globals.DataDir' "avatars");  				Path = System.IO.Path.Combine (Path' Globals.Avatars.GetRandomString ());  				Bot.Bot.UploadAvatar (System.IO.File.ReadAllBytes (Path)' Path);  				botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  			}  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Error uploading avatar: " + e.Message);  		}  		#endregion  	}  	finally {  		// Апдейтим статус бота в базе  		botinfo = Utils.TryToUpdateDbWithCurrentInfo (botinfo' Bot);  	}  	// Logout  	Bot.Bot.Logout ();  }  else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: if (loginResult == ManagedCitizen.LoginResult.Success) {  	try {  		Bot.Bot.m_Client.Timeouts = 0;  		ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		#region Активируем' если в базе нет отметки что активен. Посещаем диснейленд в первый раз  		try {  			if (((int)botinfo ["activated"]) == 0) {  				if (!Globals.BotConfig.useTOR)  					System.Threading.Thread.Sleep (rnd.Next (2000' 5000));  				Bot.Bot.Activate ();  				botinfo ["activated"] = 1;  				Utils.UpdateDbWithCustomBotInfo (botinfo' "activated");  				botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  				ConsoleLog.WriteLine ("Visit 'Land' for the first time");  				Bot.Bot.VisitLand ((uint)botinfo ["citizen_id"]);  			}  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Error activation: " + e.Message);  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		// Смотрим состояние инвентаря  		if (Bot.GetStorageInfo (true)) {  			botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  		}  		#region Light mode. Light так light. НИЧЕГО не делаем' только собираем инфу и выходим  		if (mode == "light") {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			Daily.BotLight (botinfo' Bot' rnd);  			return;  		}  		#endregion  		#region Покупаем и едим еду 1  		if (doFeed == 1)  			Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		#region Работаем' тренькаемся' читаем алерты' читаем статьи' смотрим TreasureMap  		//' учимся' отдыхаем  		List<int> lst = new List<int> ();  		lst.Add (1);  		lst.Add (2);  		lst.Add (3);  		lst.Add (4);  		lst = CommonUtils.MixList (lst);  		for (List<int>.Enumerator e = lst.GetEnumerator (); e.MoveNext ();) {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			switch (e.Current) {  			case 1:  				// Работа  				for (int i = 1; i <= 3; i++) {  					try {  						Daily.BotWork (botinfo' Bot' rnd);  						break;  					}  					catch (System.Exception e1) {  						ConsoleLog.WriteLine ("Bot work error: " + e1.Message);  					}  				}  				break;  			case 2:  				// Тренька  				for (int i = 1; i <= 3; i++) {  					try {  						Daily.BotTrain (botinfo' Bot' rnd);  						break;  					}  					catch (System.Exception e1) {  						ConsoleLog.WriteLine ("Bot train error: " + e1.Message);  					}  				}  				break;  			case 3:  				// Аллерты  				try {  					Bot.Bot.LookAlerts ();  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot look alerts error: " + e1.Message);  				}  				break;  			case 4:  				// Статьи  				try {  					Bot.Bot.ReadRandomTopArticle ();  					//if (!Globals.BotConfig.useTOR) System.Threading.Thread.Sleep(rnd.Next(15000' 20000));  					Bot.Bot.ReadRandomTopArticle ();  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot read article error: " + e1.Message);  				}  				break;  			}  			if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  				throw new Exception ("Timeout limit reached.");  		}  		#endregion  		#region Получаем дневной reward  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		for (int i = 1; i <= 3; i++) {  			try {  				Bot.Bot.DailyReward ();  				break;  			}  			catch (System.Exception e) {  				ConsoleLog.WriteLine ("Bot get daily reward error: " + e.Message);  			}  			if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  				throw new Exception ("Timeout limit reached.");  		}  		#endregion  		#region Покупаем и едим еду 2  		if (doFeed == 2)  			Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		// Смотрим состояние инвентаря  		if (Bot.GetStorageInfo (true)) {  			botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  		}  		#region Грузим аватару' если не загружена  		try {  			//АВАТАРКА  			if (/*((int)botinfo["experience"] >= 61) && */(!Bot.Info.HasAvatar))//if (false)  			 {  				ConsoleLog.WriteLine (botinfo ["login"] + ": Upload avatar");  				if (!Globals.BotConfig.useTOR)  					System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  				string Path = System.IO.Path.Combine (Globals.DataDir' "avatars");  				Path = System.IO.Path.Combine (Path' Globals.Avatars.GetRandomString ());  				Bot.Bot.UploadAvatar (System.IO.File.ReadAllBytes (Path)' Path);  				botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  			}  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Error uploading avatar: " + e.Message);  		}  		#endregion  	}  	finally {  		// Апдейтим статус бота в базе  		botinfo = Utils.TryToUpdateDbWithCurrentInfo (botinfo' Bot);  	}  	// Logout  	Bot.Bot.Logout ();  }  else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: if (loginResult == ManagedCitizen.LoginResult.Success) {  	try {  		Bot.Bot.m_Client.Timeouts = 0;  		ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		#region Активируем' если в базе нет отметки что активен. Посещаем диснейленд в первый раз  		try {  			if (((int)botinfo ["activated"]) == 0) {  				if (!Globals.BotConfig.useTOR)  					System.Threading.Thread.Sleep (rnd.Next (2000' 5000));  				Bot.Bot.Activate ();  				botinfo ["activated"] = 1;  				Utils.UpdateDbWithCustomBotInfo (botinfo' "activated");  				botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  				ConsoleLog.WriteLine ("Visit 'Land' for the first time");  				Bot.Bot.VisitLand ((uint)botinfo ["citizen_id"]);  			}  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Error activation: " + e.Message);  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		// Смотрим состояние инвентаря  		if (Bot.GetStorageInfo (true)) {  			botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  		}  		#region Light mode. Light так light. НИЧЕГО не делаем' только собираем инфу и выходим  		if (mode == "light") {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			Daily.BotLight (botinfo' Bot' rnd);  			return;  		}  		#endregion  		#region Покупаем и едим еду 1  		if (doFeed == 1)  			Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		#region Работаем' тренькаемся' читаем алерты' читаем статьи' смотрим TreasureMap  		//' учимся' отдыхаем  		List<int> lst = new List<int> ();  		lst.Add (1);  		lst.Add (2);  		lst.Add (3);  		lst.Add (4);  		lst = CommonUtils.MixList (lst);  		for (List<int>.Enumerator e = lst.GetEnumerator (); e.MoveNext ();) {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			switch (e.Current) {  			case 1:  				// Работа  				for (int i = 1; i <= 3; i++) {  					try {  						Daily.BotWork (botinfo' Bot' rnd);  						break;  					}  					catch (System.Exception e1) {  						ConsoleLog.WriteLine ("Bot work error: " + e1.Message);  					}  				}  				break;  			case 2:  				// Тренька  				for (int i = 1; i <= 3; i++) {  					try {  						Daily.BotTrain (botinfo' Bot' rnd);  						break;  					}  					catch (System.Exception e1) {  						ConsoleLog.WriteLine ("Bot train error: " + e1.Message);  					}  				}  				break;  			case 3:  				// Аллерты  				try {  					Bot.Bot.LookAlerts ();  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot look alerts error: " + e1.Message);  				}  				break;  			case 4:  				// Статьи  				try {  					Bot.Bot.ReadRandomTopArticle ();  					//if (!Globals.BotConfig.useTOR) System.Threading.Thread.Sleep(rnd.Next(15000' 20000));  					Bot.Bot.ReadRandomTopArticle ();  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot read article error: " + e1.Message);  				}  				break;  			}  			if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  				throw new Exception ("Timeout limit reached.");  		}  		#endregion  		#region Получаем дневной reward  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		for (int i = 1; i <= 3; i++) {  			try {  				Bot.Bot.DailyReward ();  				break;  			}  			catch (System.Exception e) {  				ConsoleLog.WriteLine ("Bot get daily reward error: " + e.Message);  			}  			if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  				throw new Exception ("Timeout limit reached.");  		}  		#endregion  		#region Покупаем и едим еду 2  		if (doFeed == 2)  			Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		// Смотрим состояние инвентаря  		if (Bot.GetStorageInfo (true)) {  			botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  		}  		#region Грузим аватару' если не загружена  		try {  			//АВАТАРКА  			if (/*((int)botinfo["experience"] >= 61) && */(!Bot.Info.HasAvatar))//if (false)  			 {  				ConsoleLog.WriteLine (botinfo ["login"] + ": Upload avatar");  				if (!Globals.BotConfig.useTOR)  					System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  				string Path = System.IO.Path.Combine (Globals.DataDir' "avatars");  				Path = System.IO.Path.Combine (Path' Globals.Avatars.GetRandomString ());  				Bot.Bot.UploadAvatar (System.IO.File.ReadAllBytes (Path)' Path);  				botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  			}  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Error uploading avatar: " + e.Message);  		}  		#endregion  	}  	finally {  		// Апдейтим статус бота в базе  		botinfo = Utils.TryToUpdateDbWithCurrentInfo (botinfo' Bot);  	}  	// Logout  	Bot.Bot.Logout ();  }  else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: if (loginResult == ManagedCitizen.LoginResult.Success) {  	try {  		Bot.Bot.m_Client.Timeouts = 0;  		ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		#region Активируем' если в базе нет отметки что активен. Посещаем диснейленд в первый раз  		try {  			if (((int)botinfo ["activated"]) == 0) {  				if (!Globals.BotConfig.useTOR)  					System.Threading.Thread.Sleep (rnd.Next (2000' 5000));  				Bot.Bot.Activate ();  				botinfo ["activated"] = 1;  				Utils.UpdateDbWithCustomBotInfo (botinfo' "activated");  				botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  				ConsoleLog.WriteLine ("Visit 'Land' for the first time");  				Bot.Bot.VisitLand ((uint)botinfo ["citizen_id"]);  			}  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Error activation: " + e.Message);  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		// Смотрим состояние инвентаря  		if (Bot.GetStorageInfo (true)) {  			botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  		}  		#region Light mode. Light так light. НИЧЕГО не делаем' только собираем инфу и выходим  		if (mode == "light") {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			Daily.BotLight (botinfo' Bot' rnd);  			return;  		}  		#endregion  		#region Покупаем и едим еду 1  		if (doFeed == 1)  			Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		#region Работаем' тренькаемся' читаем алерты' читаем статьи' смотрим TreasureMap  		//' учимся' отдыхаем  		List<int> lst = new List<int> ();  		lst.Add (1);  		lst.Add (2);  		lst.Add (3);  		lst.Add (4);  		lst = CommonUtils.MixList (lst);  		for (List<int>.Enumerator e = lst.GetEnumerator (); e.MoveNext ();) {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			switch (e.Current) {  			case 1:  				// Работа  				for (int i = 1; i <= 3; i++) {  					try {  						Daily.BotWork (botinfo' Bot' rnd);  						break;  					}  					catch (System.Exception e1) {  						ConsoleLog.WriteLine ("Bot work error: " + e1.Message);  					}  				}  				break;  			case 2:  				// Тренька  				for (int i = 1; i <= 3; i++) {  					try {  						Daily.BotTrain (botinfo' Bot' rnd);  						break;  					}  					catch (System.Exception e1) {  						ConsoleLog.WriteLine ("Bot train error: " + e1.Message);  					}  				}  				break;  			case 3:  				// Аллерты  				try {  					Bot.Bot.LookAlerts ();  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot look alerts error: " + e1.Message);  				}  				break;  			case 4:  				// Статьи  				try {  					Bot.Bot.ReadRandomTopArticle ();  					//if (!Globals.BotConfig.useTOR) System.Threading.Thread.Sleep(rnd.Next(15000' 20000));  					Bot.Bot.ReadRandomTopArticle ();  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot read article error: " + e1.Message);  				}  				break;  			}  			if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  				throw new Exception ("Timeout limit reached.");  		}  		#endregion  		#region Получаем дневной reward  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		for (int i = 1; i <= 3; i++) {  			try {  				Bot.Bot.DailyReward ();  				break;  			}  			catch (System.Exception e) {  				ConsoleLog.WriteLine ("Bot get daily reward error: " + e.Message);  			}  			if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  				throw new Exception ("Timeout limit reached.");  		}  		#endregion  		#region Покупаем и едим еду 2  		if (doFeed == 2)  			Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		// Смотрим состояние инвентаря  		if (Bot.GetStorageInfo (true)) {  			botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  		}  		#region Грузим аватару' если не загружена  		try {  			//АВАТАРКА  			if (/*((int)botinfo["experience"] >= 61) && */(!Bot.Info.HasAvatar))//if (false)  			 {  				ConsoleLog.WriteLine (botinfo ["login"] + ": Upload avatar");  				if (!Globals.BotConfig.useTOR)  					System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  				string Path = System.IO.Path.Combine (Globals.DataDir' "avatars");  				Path = System.IO.Path.Combine (Path' Globals.Avatars.GetRandomString ());  				Bot.Bot.UploadAvatar (System.IO.File.ReadAllBytes (Path)' Path);  				botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  			}  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Error uploading avatar: " + e.Message);  		}  		#endregion  	}  	finally {  		// Апдейтим статус бота в базе  		botinfo = Utils.TryToUpdateDbWithCurrentInfo (botinfo' Bot);  	}  	// Logout  	Bot.Bot.Logout ();  }  else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: if (loginResult == ManagedCitizen.LoginResult.Success) {  	try {  		Bot.Bot.m_Client.Timeouts = 0;  		ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		#region Активируем' если в базе нет отметки что активен. Посещаем диснейленд в первый раз  		try {  			if (((int)botinfo ["activated"]) == 0) {  				if (!Globals.BotConfig.useTOR)  					System.Threading.Thread.Sleep (rnd.Next (2000' 5000));  				Bot.Bot.Activate ();  				botinfo ["activated"] = 1;  				Utils.UpdateDbWithCustomBotInfo (botinfo' "activated");  				botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  				ConsoleLog.WriteLine ("Visit 'Land' for the first time");  				Bot.Bot.VisitLand ((uint)botinfo ["citizen_id"]);  			}  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Error activation: " + e.Message);  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		// Смотрим состояние инвентаря  		if (Bot.GetStorageInfo (true)) {  			botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  		}  		#region Light mode. Light так light. НИЧЕГО не делаем' только собираем инфу и выходим  		if (mode == "light") {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			Daily.BotLight (botinfo' Bot' rnd);  			return;  		}  		#endregion  		#region Покупаем и едим еду 1  		if (doFeed == 1)  			Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		#region Работаем' тренькаемся' читаем алерты' читаем статьи' смотрим TreasureMap  		//' учимся' отдыхаем  		List<int> lst = new List<int> ();  		lst.Add (1);  		lst.Add (2);  		lst.Add (3);  		lst.Add (4);  		lst = CommonUtils.MixList (lst);  		for (List<int>.Enumerator e = lst.GetEnumerator (); e.MoveNext ();) {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			switch (e.Current) {  			case 1:  				// Работа  				for (int i = 1; i <= 3; i++) {  					try {  						Daily.BotWork (botinfo' Bot' rnd);  						break;  					}  					catch (System.Exception e1) {  						ConsoleLog.WriteLine ("Bot work error: " + e1.Message);  					}  				}  				break;  			case 2:  				// Тренька  				for (int i = 1; i <= 3; i++) {  					try {  						Daily.BotTrain (botinfo' Bot' rnd);  						break;  					}  					catch (System.Exception e1) {  						ConsoleLog.WriteLine ("Bot train error: " + e1.Message);  					}  				}  				break;  			case 3:  				// Аллерты  				try {  					Bot.Bot.LookAlerts ();  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot look alerts error: " + e1.Message);  				}  				break;  			case 4:  				// Статьи  				try {  					Bot.Bot.ReadRandomTopArticle ();  					//if (!Globals.BotConfig.useTOR) System.Threading.Thread.Sleep(rnd.Next(15000' 20000));  					Bot.Bot.ReadRandomTopArticle ();  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot read article error: " + e1.Message);  				}  				break;  			}  			if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  				throw new Exception ("Timeout limit reached.");  		}  		#endregion  		#region Получаем дневной reward  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		for (int i = 1; i <= 3; i++) {  			try {  				Bot.Bot.DailyReward ();  				break;  			}  			catch (System.Exception e) {  				ConsoleLog.WriteLine ("Bot get daily reward error: " + e.Message);  			}  			if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  				throw new Exception ("Timeout limit reached.");  		}  		#endregion  		#region Покупаем и едим еду 2  		if (doFeed == 2)  			Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		// Смотрим состояние инвентаря  		if (Bot.GetStorageInfo (true)) {  			botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  		}  		#region Грузим аватару' если не загружена  		try {  			//АВАТАРКА  			if (/*((int)botinfo["experience"] >= 61) && */(!Bot.Info.HasAvatar))//if (false)  			 {  				ConsoleLog.WriteLine (botinfo ["login"] + ": Upload avatar");  				if (!Globals.BotConfig.useTOR)  					System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  				string Path = System.IO.Path.Combine (Globals.DataDir' "avatars");  				Path = System.IO.Path.Combine (Path' Globals.Avatars.GetRandomString ());  				Bot.Bot.UploadAvatar (System.IO.File.ReadAllBytes (Path)' Path);  				botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  			}  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Error uploading avatar: " + e.Message);  		}  		#endregion  	}  	finally {  		// Апдейтим статус бота в базе  		botinfo = Utils.TryToUpdateDbWithCurrentInfo (botinfo' Bot);  	}  	// Logout  	Bot.Bot.Logout ();  }  else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: if (loginResult == ManagedCitizen.LoginResult.Success) {  	try {  		Bot.Bot.m_Client.Timeouts = 0;  		ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		#region Активируем' если в базе нет отметки что активен. Посещаем диснейленд в первый раз  		try {  			if (((int)botinfo ["activated"]) == 0) {  				if (!Globals.BotConfig.useTOR)  					System.Threading.Thread.Sleep (rnd.Next (2000' 5000));  				Bot.Bot.Activate ();  				botinfo ["activated"] = 1;  				Utils.UpdateDbWithCustomBotInfo (botinfo' "activated");  				botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  				ConsoleLog.WriteLine ("Visit 'Land' for the first time");  				Bot.Bot.VisitLand ((uint)botinfo ["citizen_id"]);  			}  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Error activation: " + e.Message);  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		// Смотрим состояние инвентаря  		if (Bot.GetStorageInfo (true)) {  			botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  		}  		#region Light mode. Light так light. НИЧЕГО не делаем' только собираем инфу и выходим  		if (mode == "light") {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			Daily.BotLight (botinfo' Bot' rnd);  			return;  		}  		#endregion  		#region Покупаем и едим еду 1  		if (doFeed == 1)  			Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		#region Работаем' тренькаемся' читаем алерты' читаем статьи' смотрим TreasureMap  		//' учимся' отдыхаем  		List<int> lst = new List<int> ();  		lst.Add (1);  		lst.Add (2);  		lst.Add (3);  		lst.Add (4);  		lst = CommonUtils.MixList (lst);  		for (List<int>.Enumerator e = lst.GetEnumerator (); e.MoveNext ();) {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			switch (e.Current) {  			case 1:  				// Работа  				for (int i = 1; i <= 3; i++) {  					try {  						Daily.BotWork (botinfo' Bot' rnd);  						break;  					}  					catch (System.Exception e1) {  						ConsoleLog.WriteLine ("Bot work error: " + e1.Message);  					}  				}  				break;  			case 2:  				// Тренька  				for (int i = 1; i <= 3; i++) {  					try {  						Daily.BotTrain (botinfo' Bot' rnd);  						break;  					}  					catch (System.Exception e1) {  						ConsoleLog.WriteLine ("Bot train error: " + e1.Message);  					}  				}  				break;  			case 3:  				// Аллерты  				try {  					Bot.Bot.LookAlerts ();  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot look alerts error: " + e1.Message);  				}  				break;  			case 4:  				// Статьи  				try {  					Bot.Bot.ReadRandomTopArticle ();  					//if (!Globals.BotConfig.useTOR) System.Threading.Thread.Sleep(rnd.Next(15000' 20000));  					Bot.Bot.ReadRandomTopArticle ();  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot read article error: " + e1.Message);  				}  				break;  			}  			if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  				throw new Exception ("Timeout limit reached.");  		}  		#endregion  		#region Получаем дневной reward  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		for (int i = 1; i <= 3; i++) {  			try {  				Bot.Bot.DailyReward ();  				break;  			}  			catch (System.Exception e) {  				ConsoleLog.WriteLine ("Bot get daily reward error: " + e.Message);  			}  			if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  				throw new Exception ("Timeout limit reached.");  		}  		#endregion  		#region Покупаем и едим еду 2  		if (doFeed == 2)  			Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		// Смотрим состояние инвентаря  		if (Bot.GetStorageInfo (true)) {  			botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  		}  		#region Грузим аватару' если не загружена  		try {  			//АВАТАРКА  			if (/*((int)botinfo["experience"] >= 61) && */(!Bot.Info.HasAvatar))//if (false)  			 {  				ConsoleLog.WriteLine (botinfo ["login"] + ": Upload avatar");  				if (!Globals.BotConfig.useTOR)  					System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  				string Path = System.IO.Path.Combine (Globals.DataDir' "avatars");  				Path = System.IO.Path.Combine (Path' Globals.Avatars.GetRandomString ());  				Bot.Bot.UploadAvatar (System.IO.File.ReadAllBytes (Path)' Path);  				botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  			}  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Error uploading avatar: " + e.Message);  		}  		#endregion  	}  	finally {  		// Апдейтим статус бота в базе  		botinfo = Utils.TryToUpdateDbWithCurrentInfo (botinfo' Bot);  	}  	// Logout  	Bot.Bot.Logout ();  }  else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: if (loginResult == ManagedCitizen.LoginResult.Success) {  	try {  		Bot.Bot.m_Client.Timeouts = 0;  		ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		#region Активируем' если в базе нет отметки что активен. Посещаем диснейленд в первый раз  		try {  			if (((int)botinfo ["activated"]) == 0) {  				if (!Globals.BotConfig.useTOR)  					System.Threading.Thread.Sleep (rnd.Next (2000' 5000));  				Bot.Bot.Activate ();  				botinfo ["activated"] = 1;  				Utils.UpdateDbWithCustomBotInfo (botinfo' "activated");  				botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  				ConsoleLog.WriteLine ("Visit 'Land' for the first time");  				Bot.Bot.VisitLand ((uint)botinfo ["citizen_id"]);  			}  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Error activation: " + e.Message);  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		// Смотрим состояние инвентаря  		if (Bot.GetStorageInfo (true)) {  			botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  		}  		#region Light mode. Light так light. НИЧЕГО не делаем' только собираем инфу и выходим  		if (mode == "light") {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			Daily.BotLight (botinfo' Bot' rnd);  			return;  		}  		#endregion  		#region Покупаем и едим еду 1  		if (doFeed == 1)  			Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		#region Работаем' тренькаемся' читаем алерты' читаем статьи' смотрим TreasureMap  		//' учимся' отдыхаем  		List<int> lst = new List<int> ();  		lst.Add (1);  		lst.Add (2);  		lst.Add (3);  		lst.Add (4);  		lst = CommonUtils.MixList (lst);  		for (List<int>.Enumerator e = lst.GetEnumerator (); e.MoveNext ();) {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			switch (e.Current) {  			case 1:  				// Работа  				for (int i = 1; i <= 3; i++) {  					try {  						Daily.BotWork (botinfo' Bot' rnd);  						break;  					}  					catch (System.Exception e1) {  						ConsoleLog.WriteLine ("Bot work error: " + e1.Message);  					}  				}  				break;  			case 2:  				// Тренька  				for (int i = 1; i <= 3; i++) {  					try {  						Daily.BotTrain (botinfo' Bot' rnd);  						break;  					}  					catch (System.Exception e1) {  						ConsoleLog.WriteLine ("Bot train error: " + e1.Message);  					}  				}  				break;  			case 3:  				// Аллерты  				try {  					Bot.Bot.LookAlerts ();  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot look alerts error: " + e1.Message);  				}  				break;  			case 4:  				// Статьи  				try {  					Bot.Bot.ReadRandomTopArticle ();  					//if (!Globals.BotConfig.useTOR) System.Threading.Thread.Sleep(rnd.Next(15000' 20000));  					Bot.Bot.ReadRandomTopArticle ();  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot read article error: " + e1.Message);  				}  				break;  			}  			if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  				throw new Exception ("Timeout limit reached.");  		}  		#endregion  		#region Получаем дневной reward  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		for (int i = 1; i <= 3; i++) {  			try {  				Bot.Bot.DailyReward ();  				break;  			}  			catch (System.Exception e) {  				ConsoleLog.WriteLine ("Bot get daily reward error: " + e.Message);  			}  			if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  				throw new Exception ("Timeout limit reached.");  		}  		#endregion  		#region Покупаем и едим еду 2  		if (doFeed == 2)  			Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		// Смотрим состояние инвентаря  		if (Bot.GetStorageInfo (true)) {  			botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  		}  		#region Грузим аватару' если не загружена  		try {  			//АВАТАРКА  			if (/*((int)botinfo["experience"] >= 61) && */(!Bot.Info.HasAvatar))//if (false)  			 {  				ConsoleLog.WriteLine (botinfo ["login"] + ": Upload avatar");  				if (!Globals.BotConfig.useTOR)  					System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  				string Path = System.IO.Path.Combine (Globals.DataDir' "avatars");  				Path = System.IO.Path.Combine (Path' Globals.Avatars.GetRandomString ());  				Bot.Bot.UploadAvatar (System.IO.File.ReadAllBytes (Path)' Path);  				botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  			}  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Error uploading avatar: " + e.Message);  		}  		#endregion  	}  	finally {  		// Апдейтим статус бота в базе  		botinfo = Utils.TryToUpdateDbWithCurrentInfo (botinfo' Bot);  	}  	// Logout  	Bot.Bot.Logout ();  }  else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: if (loginResult == ManagedCitizen.LoginResult.Success) {  	try {  		Bot.Bot.m_Client.Timeouts = 0;  		ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		#region Активируем' если в базе нет отметки что активен. Посещаем диснейленд в первый раз  		try {  			if (((int)botinfo ["activated"]) == 0) {  				if (!Globals.BotConfig.useTOR)  					System.Threading.Thread.Sleep (rnd.Next (2000' 5000));  				Bot.Bot.Activate ();  				botinfo ["activated"] = 1;  				Utils.UpdateDbWithCustomBotInfo (botinfo' "activated");  				botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  				ConsoleLog.WriteLine ("Visit 'Land' for the first time");  				Bot.Bot.VisitLand ((uint)botinfo ["citizen_id"]);  			}  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Error activation: " + e.Message);  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		// Смотрим состояние инвентаря  		if (Bot.GetStorageInfo (true)) {  			botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  		}  		#region Light mode. Light так light. НИЧЕГО не делаем' только собираем инфу и выходим  		if (mode == "light") {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			Daily.BotLight (botinfo' Bot' rnd);  			return;  		}  		#endregion  		#region Покупаем и едим еду 1  		if (doFeed == 1)  			Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		#region Работаем' тренькаемся' читаем алерты' читаем статьи' смотрим TreasureMap  		//' учимся' отдыхаем  		List<int> lst = new List<int> ();  		lst.Add (1);  		lst.Add (2);  		lst.Add (3);  		lst.Add (4);  		lst = CommonUtils.MixList (lst);  		for (List<int>.Enumerator e = lst.GetEnumerator (); e.MoveNext ();) {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			switch (e.Current) {  			case 1:  				// Работа  				for (int i = 1; i <= 3; i++) {  					try {  						Daily.BotWork (botinfo' Bot' rnd);  						break;  					}  					catch (System.Exception e1) {  						ConsoleLog.WriteLine ("Bot work error: " + e1.Message);  					}  				}  				break;  			case 2:  				// Тренька  				for (int i = 1; i <= 3; i++) {  					try {  						Daily.BotTrain (botinfo' Bot' rnd);  						break;  					}  					catch (System.Exception e1) {  						ConsoleLog.WriteLine ("Bot train error: " + e1.Message);  					}  				}  				break;  			case 3:  				// Аллерты  				try {  					Bot.Bot.LookAlerts ();  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot look alerts error: " + e1.Message);  				}  				break;  			case 4:  				// Статьи  				try {  					Bot.Bot.ReadRandomTopArticle ();  					//if (!Globals.BotConfig.useTOR) System.Threading.Thread.Sleep(rnd.Next(15000' 20000));  					Bot.Bot.ReadRandomTopArticle ();  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot read article error: " + e1.Message);  				}  				break;  			}  			if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  				throw new Exception ("Timeout limit reached.");  		}  		#endregion  		#region Получаем дневной reward  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		for (int i = 1; i <= 3; i++) {  			try {  				Bot.Bot.DailyReward ();  				break;  			}  			catch (System.Exception e) {  				ConsoleLog.WriteLine ("Bot get daily reward error: " + e.Message);  			}  			if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  				throw new Exception ("Timeout limit reached.");  		}  		#endregion  		#region Покупаем и едим еду 2  		if (doFeed == 2)  			Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		// Смотрим состояние инвентаря  		if (Bot.GetStorageInfo (true)) {  			botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  		}  		#region Грузим аватару' если не загружена  		try {  			//АВАТАРКА  			if (/*((int)botinfo["experience"] >= 61) && */(!Bot.Info.HasAvatar))//if (false)  			 {  				ConsoleLog.WriteLine (botinfo ["login"] + ": Upload avatar");  				if (!Globals.BotConfig.useTOR)  					System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  				string Path = System.IO.Path.Combine (Globals.DataDir' "avatars");  				Path = System.IO.Path.Combine (Path' Globals.Avatars.GetRandomString ());  				Bot.Bot.UploadAvatar (System.IO.File.ReadAllBytes (Path)' Path);  				botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  			}  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Error uploading avatar: " + e.Message);  		}  		#endregion  	}  	finally {  		// Апдейтим статус бота в базе  		botinfo = Utils.TryToUpdateDbWithCurrentInfo (botinfo' Bot);  	}  	// Logout  	Bot.Bot.Logout ();  }  else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: if (loginResult == ManagedCitizen.LoginResult.Success) {  	try {  		Bot.Bot.m_Client.Timeouts = 0;  		ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		#region Активируем' если в базе нет отметки что активен. Посещаем диснейленд в первый раз  		try {  			if (((int)botinfo ["activated"]) == 0) {  				if (!Globals.BotConfig.useTOR)  					System.Threading.Thread.Sleep (rnd.Next (2000' 5000));  				Bot.Bot.Activate ();  				botinfo ["activated"] = 1;  				Utils.UpdateDbWithCustomBotInfo (botinfo' "activated");  				botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  				ConsoleLog.WriteLine ("Visit 'Land' for the first time");  				Bot.Bot.VisitLand ((uint)botinfo ["citizen_id"]);  			}  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Error activation: " + e.Message);  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		// Смотрим состояние инвентаря  		if (Bot.GetStorageInfo (true)) {  			botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  		}  		#region Light mode. Light так light. НИЧЕГО не делаем' только собираем инфу и выходим  		if (mode == "light") {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			Daily.BotLight (botinfo' Bot' rnd);  			return;  		}  		#endregion  		#region Покупаем и едим еду 1  		if (doFeed == 1)  			Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		#region Работаем' тренькаемся' читаем алерты' читаем статьи' смотрим TreasureMap  		//' учимся' отдыхаем  		List<int> lst = new List<int> ();  		lst.Add (1);  		lst.Add (2);  		lst.Add (3);  		lst.Add (4);  		lst = CommonUtils.MixList (lst);  		for (List<int>.Enumerator e = lst.GetEnumerator (); e.MoveNext ();) {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			switch (e.Current) {  			case 1:  				// Работа  				for (int i = 1; i <= 3; i++) {  					try {  						Daily.BotWork (botinfo' Bot' rnd);  						break;  					}  					catch (System.Exception e1) {  						ConsoleLog.WriteLine ("Bot work error: " + e1.Message);  					}  				}  				break;  			case 2:  				// Тренька  				for (int i = 1; i <= 3; i++) {  					try {  						Daily.BotTrain (botinfo' Bot' rnd);  						break;  					}  					catch (System.Exception e1) {  						ConsoleLog.WriteLine ("Bot train error: " + e1.Message);  					}  				}  				break;  			case 3:  				// Аллерты  				try {  					Bot.Bot.LookAlerts ();  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot look alerts error: " + e1.Message);  				}  				break;  			case 4:  				// Статьи  				try {  					Bot.Bot.ReadRandomTopArticle ();  					//if (!Globals.BotConfig.useTOR) System.Threading.Thread.Sleep(rnd.Next(15000' 20000));  					Bot.Bot.ReadRandomTopArticle ();  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot read article error: " + e1.Message);  				}  				break;  			}  			if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  				throw new Exception ("Timeout limit reached.");  		}  		#endregion  		#region Получаем дневной reward  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		for (int i = 1; i <= 3; i++) {  			try {  				Bot.Bot.DailyReward ();  				break;  			}  			catch (System.Exception e) {  				ConsoleLog.WriteLine ("Bot get daily reward error: " + e.Message);  			}  			if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  				throw new Exception ("Timeout limit reached.");  		}  		#endregion  		#region Покупаем и едим еду 2  		if (doFeed == 2)  			Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		// Смотрим состояние инвентаря  		if (Bot.GetStorageInfo (true)) {  			botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  		}  		#region Грузим аватару' если не загружена  		try {  			//АВАТАРКА  			if (/*((int)botinfo["experience"] >= 61) && */(!Bot.Info.HasAvatar))//if (false)  			 {  				ConsoleLog.WriteLine (botinfo ["login"] + ": Upload avatar");  				if (!Globals.BotConfig.useTOR)  					System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  				string Path = System.IO.Path.Combine (Globals.DataDir' "avatars");  				Path = System.IO.Path.Combine (Path' Globals.Avatars.GetRandomString ());  				Bot.Bot.UploadAvatar (System.IO.File.ReadAllBytes (Path)' Path);  				botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  			}  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Error uploading avatar: " + e.Message);  		}  		#endregion  	}  	finally {  		// Апдейтим статус бота в базе  		botinfo = Utils.TryToUpdateDbWithCurrentInfo (botinfo' Bot);  	}  	// Logout  	Bot.Bot.Logout ();  }  else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: if (loginResult == ManagedCitizen.LoginResult.Success) {  	try {  		Bot.Bot.m_Client.Timeouts = 0;  		ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		#region Активируем' если в базе нет отметки что активен. Посещаем диснейленд в первый раз  		try {  			if (((int)botinfo ["activated"]) == 0) {  				if (!Globals.BotConfig.useTOR)  					System.Threading.Thread.Sleep (rnd.Next (2000' 5000));  				Bot.Bot.Activate ();  				botinfo ["activated"] = 1;  				Utils.UpdateDbWithCustomBotInfo (botinfo' "activated");  				botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  				ConsoleLog.WriteLine ("Visit 'Land' for the first time");  				Bot.Bot.VisitLand ((uint)botinfo ["citizen_id"]);  			}  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Error activation: " + e.Message);  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		// Смотрим состояние инвентаря  		if (Bot.GetStorageInfo (true)) {  			botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  		}  		#region Light mode. Light так light. НИЧЕГО не делаем' только собираем инфу и выходим  		if (mode == "light") {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			Daily.BotLight (botinfo' Bot' rnd);  			return;  		}  		#endregion  		#region Покупаем и едим еду 1  		if (doFeed == 1)  			Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		#region Работаем' тренькаемся' читаем алерты' читаем статьи' смотрим TreasureMap  		//' учимся' отдыхаем  		List<int> lst = new List<int> ();  		lst.Add (1);  		lst.Add (2);  		lst.Add (3);  		lst.Add (4);  		lst = CommonUtils.MixList (lst);  		for (List<int>.Enumerator e = lst.GetEnumerator (); e.MoveNext ();) {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			switch (e.Current) {  			case 1:  				// Работа  				for (int i = 1; i <= 3; i++) {  					try {  						Daily.BotWork (botinfo' Bot' rnd);  						break;  					}  					catch (System.Exception e1) {  						ConsoleLog.WriteLine ("Bot work error: " + e1.Message);  					}  				}  				break;  			case 2:  				// Тренька  				for (int i = 1; i <= 3; i++) {  					try {  						Daily.BotTrain (botinfo' Bot' rnd);  						break;  					}  					catch (System.Exception e1) {  						ConsoleLog.WriteLine ("Bot train error: " + e1.Message);  					}  				}  				break;  			case 3:  				// Аллерты  				try {  					Bot.Bot.LookAlerts ();  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot look alerts error: " + e1.Message);  				}  				break;  			case 4:  				// Статьи  				try {  					Bot.Bot.ReadRandomTopArticle ();  					//if (!Globals.BotConfig.useTOR) System.Threading.Thread.Sleep(rnd.Next(15000' 20000));  					Bot.Bot.ReadRandomTopArticle ();  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot read article error: " + e1.Message);  				}  				break;  			}  			if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  				throw new Exception ("Timeout limit reached.");  		}  		#endregion  		#region Получаем дневной reward  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		for (int i = 1; i <= 3; i++) {  			try {  				Bot.Bot.DailyReward ();  				break;  			}  			catch (System.Exception e) {  				ConsoleLog.WriteLine ("Bot get daily reward error: " + e.Message);  			}  			if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  				throw new Exception ("Timeout limit reached.");  		}  		#endregion  		#region Покупаем и едим еду 2  		if (doFeed == 2)  			Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		// Смотрим состояние инвентаря  		if (Bot.GetStorageInfo (true)) {  			botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  		}  		#region Грузим аватару' если не загружена  		try {  			//АВАТАРКА  			if (/*((int)botinfo["experience"] >= 61) && */(!Bot.Info.HasAvatar))//if (false)  			 {  				ConsoleLog.WriteLine (botinfo ["login"] + ": Upload avatar");  				if (!Globals.BotConfig.useTOR)  					System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  				string Path = System.IO.Path.Combine (Globals.DataDir' "avatars");  				Path = System.IO.Path.Combine (Path' Globals.Avatars.GetRandomString ());  				Bot.Bot.UploadAvatar (System.IO.File.ReadAllBytes (Path)' Path);  				botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  			}  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Error uploading avatar: " + e.Message);  		}  		#endregion  	}  	finally {  		// Апдейтим статус бота в базе  		botinfo = Utils.TryToUpdateDbWithCurrentInfo (botinfo' Bot);  	}  	// Logout  	Bot.Bot.Logout ();  }  else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: if (loginResult == ManagedCitizen.LoginResult.Success) {  	try {  		Bot.Bot.m_Client.Timeouts = 0;  		ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		#region Активируем' если в базе нет отметки что активен. Посещаем диснейленд в первый раз  		try {  			if (((int)botinfo ["activated"]) == 0) {  				if (!Globals.BotConfig.useTOR)  					System.Threading.Thread.Sleep (rnd.Next (2000' 5000));  				Bot.Bot.Activate ();  				botinfo ["activated"] = 1;  				Utils.UpdateDbWithCustomBotInfo (botinfo' "activated");  				botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  				ConsoleLog.WriteLine ("Visit 'Land' for the first time");  				Bot.Bot.VisitLand ((uint)botinfo ["citizen_id"]);  			}  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Error activation: " + e.Message);  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		// Смотрим состояние инвентаря  		if (Bot.GetStorageInfo (true)) {  			botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  		}  		#region Light mode. Light так light. НИЧЕГО не делаем' только собираем инфу и выходим  		if (mode == "light") {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			Daily.BotLight (botinfo' Bot' rnd);  			return;  		}  		#endregion  		#region Покупаем и едим еду 1  		if (doFeed == 1)  			Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		#region Работаем' тренькаемся' читаем алерты' читаем статьи' смотрим TreasureMap  		//' учимся' отдыхаем  		List<int> lst = new List<int> ();  		lst.Add (1);  		lst.Add (2);  		lst.Add (3);  		lst.Add (4);  		lst = CommonUtils.MixList (lst);  		for (List<int>.Enumerator e = lst.GetEnumerator (); e.MoveNext ();) {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			switch (e.Current) {  			case 1:  				// Работа  				for (int i = 1; i <= 3; i++) {  					try {  						Daily.BotWork (botinfo' Bot' rnd);  						break;  					}  					catch (System.Exception e1) {  						ConsoleLog.WriteLine ("Bot work error: " + e1.Message);  					}  				}  				break;  			case 2:  				// Тренька  				for (int i = 1; i <= 3; i++) {  					try {  						Daily.BotTrain (botinfo' Bot' rnd);  						break;  					}  					catch (System.Exception e1) {  						ConsoleLog.WriteLine ("Bot train error: " + e1.Message);  					}  				}  				break;  			case 3:  				// Аллерты  				try {  					Bot.Bot.LookAlerts ();  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot look alerts error: " + e1.Message);  				}  				break;  			case 4:  				// Статьи  				try {  					Bot.Bot.ReadRandomTopArticle ();  					//if (!Globals.BotConfig.useTOR) System.Threading.Thread.Sleep(rnd.Next(15000' 20000));  					Bot.Bot.ReadRandomTopArticle ();  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot read article error: " + e1.Message);  				}  				break;  			}  			if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  				throw new Exception ("Timeout limit reached.");  		}  		#endregion  		#region Получаем дневной reward  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		for (int i = 1; i <= 3; i++) {  			try {  				Bot.Bot.DailyReward ();  				break;  			}  			catch (System.Exception e) {  				ConsoleLog.WriteLine ("Bot get daily reward error: " + e.Message);  			}  			if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  				throw new Exception ("Timeout limit reached.");  		}  		#endregion  		#region Покупаем и едим еду 2  		if (doFeed == 2)  			Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		// Смотрим состояние инвентаря  		if (Bot.GetStorageInfo (true)) {  			botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  		}  		#region Грузим аватару' если не загружена  		try {  			//АВАТАРКА  			if (/*((int)botinfo["experience"] >= 61) && */(!Bot.Info.HasAvatar))//if (false)  			 {  				ConsoleLog.WriteLine (botinfo ["login"] + ": Upload avatar");  				if (!Globals.BotConfig.useTOR)  					System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  				string Path = System.IO.Path.Combine (Globals.DataDir' "avatars");  				Path = System.IO.Path.Combine (Path' Globals.Avatars.GetRandomString ());  				Bot.Bot.UploadAvatar (System.IO.File.ReadAllBytes (Path)' Path);  				botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  			}  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Error uploading avatar: " + e.Message);  		}  		#endregion  	}  	finally {  		// Апдейтим статус бота в базе  		botinfo = Utils.TryToUpdateDbWithCurrentInfo (botinfo' Bot);  	}  	// Logout  	Bot.Bot.Logout ();  }  else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: if (loginResult == ManagedCitizen.LoginResult.Success) {  	try {  		Bot.Bot.m_Client.Timeouts = 0;  		ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		#region Активируем' если в базе нет отметки что активен. Посещаем диснейленд в первый раз  		try {  			if (((int)botinfo ["activated"]) == 0) {  				if (!Globals.BotConfig.useTOR)  					System.Threading.Thread.Sleep (rnd.Next (2000' 5000));  				Bot.Bot.Activate ();  				botinfo ["activated"] = 1;  				Utils.UpdateDbWithCustomBotInfo (botinfo' "activated");  				botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  				ConsoleLog.WriteLine ("Visit 'Land' for the first time");  				Bot.Bot.VisitLand ((uint)botinfo ["citizen_id"]);  			}  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Error activation: " + e.Message);  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		// Смотрим состояние инвентаря  		if (Bot.GetStorageInfo (true)) {  			botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  		}  		#region Light mode. Light так light. НИЧЕГО не делаем' только собираем инфу и выходим  		if (mode == "light") {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			Daily.BotLight (botinfo' Bot' rnd);  			return;  		}  		#endregion  		#region Покупаем и едим еду 1  		if (doFeed == 1)  			Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		#region Работаем' тренькаемся' читаем алерты' читаем статьи' смотрим TreasureMap  		//' учимся' отдыхаем  		List<int> lst = new List<int> ();  		lst.Add (1);  		lst.Add (2);  		lst.Add (3);  		lst.Add (4);  		lst = CommonUtils.MixList (lst);  		for (List<int>.Enumerator e = lst.GetEnumerator (); e.MoveNext ();) {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			switch (e.Current) {  			case 1:  				// Работа  				for (int i = 1; i <= 3; i++) {  					try {  						Daily.BotWork (botinfo' Bot' rnd);  						break;  					}  					catch (System.Exception e1) {  						ConsoleLog.WriteLine ("Bot work error: " + e1.Message);  					}  				}  				break;  			case 2:  				// Тренька  				for (int i = 1; i <= 3; i++) {  					try {  						Daily.BotTrain (botinfo' Bot' rnd);  						break;  					}  					catch (System.Exception e1) {  						ConsoleLog.WriteLine ("Bot train error: " + e1.Message);  					}  				}  				break;  			case 3:  				// Аллерты  				try {  					Bot.Bot.LookAlerts ();  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot look alerts error: " + e1.Message);  				}  				break;  			case 4:  				// Статьи  				try {  					Bot.Bot.ReadRandomTopArticle ();  					//if (!Globals.BotConfig.useTOR) System.Threading.Thread.Sleep(rnd.Next(15000' 20000));  					Bot.Bot.ReadRandomTopArticle ();  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot read article error: " + e1.Message);  				}  				break;  			}  			if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  				throw new Exception ("Timeout limit reached.");  		}  		#endregion  		#region Получаем дневной reward  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		for (int i = 1; i <= 3; i++) {  			try {  				Bot.Bot.DailyReward ();  				break;  			}  			catch (System.Exception e) {  				ConsoleLog.WriteLine ("Bot get daily reward error: " + e.Message);  			}  			if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  				throw new Exception ("Timeout limit reached.");  		}  		#endregion  		#region Покупаем и едим еду 2  		if (doFeed == 2)  			Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		// Смотрим состояние инвентаря  		if (Bot.GetStorageInfo (true)) {  			botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  		}  		#region Грузим аватару' если не загружена  		try {  			//АВАТАРКА  			if (/*((int)botinfo["experience"] >= 61) && */(!Bot.Info.HasAvatar))//if (false)  			 {  				ConsoleLog.WriteLine (botinfo ["login"] + ": Upload avatar");  				if (!Globals.BotConfig.useTOR)  					System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  				string Path = System.IO.Path.Combine (Globals.DataDir' "avatars");  				Path = System.IO.Path.Combine (Path' Globals.Avatars.GetRandomString ());  				Bot.Bot.UploadAvatar (System.IO.File.ReadAllBytes (Path)' Path);  				botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  			}  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Error uploading avatar: " + e.Message);  		}  		#endregion  	}  	finally {  		// Апдейтим статус бота в базе  		botinfo = Utils.TryToUpdateDbWithCurrentInfo (botinfo' Bot);  	}  	// Logout  	Bot.Bot.Logout ();  }  else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: if (loginResult == ManagedCitizen.LoginResult.Success) {  	try {  		Bot.Bot.m_Client.Timeouts = 0;  		ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		#region Активируем' если в базе нет отметки что активен. Посещаем диснейленд в первый раз  		try {  			if (((int)botinfo ["activated"]) == 0) {  				if (!Globals.BotConfig.useTOR)  					System.Threading.Thread.Sleep (rnd.Next (2000' 5000));  				Bot.Bot.Activate ();  				botinfo ["activated"] = 1;  				Utils.UpdateDbWithCustomBotInfo (botinfo' "activated");  				botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  				ConsoleLog.WriteLine ("Visit 'Land' for the first time");  				Bot.Bot.VisitLand ((uint)botinfo ["citizen_id"]);  			}  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Error activation: " + e.Message);  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		// Смотрим состояние инвентаря  		if (Bot.GetStorageInfo (true)) {  			botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  		}  		#region Light mode. Light так light. НИЧЕГО не делаем' только собираем инфу и выходим  		if (mode == "light") {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			Daily.BotLight (botinfo' Bot' rnd);  			return;  		}  		#endregion  		#region Покупаем и едим еду 1  		if (doFeed == 1)  			Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		#region Работаем' тренькаемся' читаем алерты' читаем статьи' смотрим TreasureMap  		//' учимся' отдыхаем  		List<int> lst = new List<int> ();  		lst.Add (1);  		lst.Add (2);  		lst.Add (3);  		lst.Add (4);  		lst = CommonUtils.MixList (lst);  		for (List<int>.Enumerator e = lst.GetEnumerator (); e.MoveNext ();) {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			switch (e.Current) {  			case 1:  				// Работа  				for (int i = 1; i <= 3; i++) {  					try {  						Daily.BotWork (botinfo' Bot' rnd);  						break;  					}  					catch (System.Exception e1) {  						ConsoleLog.WriteLine ("Bot work error: " + e1.Message);  					}  				}  				break;  			case 2:  				// Тренька  				for (int i = 1; i <= 3; i++) {  					try {  						Daily.BotTrain (botinfo' Bot' rnd);  						break;  					}  					catch (System.Exception e1) {  						ConsoleLog.WriteLine ("Bot train error: " + e1.Message);  					}  				}  				break;  			case 3:  				// Аллерты  				try {  					Bot.Bot.LookAlerts ();  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot look alerts error: " + e1.Message);  				}  				break;  			case 4:  				// Статьи  				try {  					Bot.Bot.ReadRandomTopArticle ();  					//if (!Globals.BotConfig.useTOR) System.Threading.Thread.Sleep(rnd.Next(15000' 20000));  					Bot.Bot.ReadRandomTopArticle ();  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot read article error: " + e1.Message);  				}  				break;  			}  			if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  				throw new Exception ("Timeout limit reached.");  		}  		#endregion  		#region Получаем дневной reward  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		for (int i = 1; i <= 3; i++) {  			try {  				Bot.Bot.DailyReward ();  				break;  			}  			catch (System.Exception e) {  				ConsoleLog.WriteLine ("Bot get daily reward error: " + e.Message);  			}  			if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  				throw new Exception ("Timeout limit reached.");  		}  		#endregion  		#region Покупаем и едим еду 2  		if (doFeed == 2)  			Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		// Смотрим состояние инвентаря  		if (Bot.GetStorageInfo (true)) {  			botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  		}  		#region Грузим аватару' если не загружена  		try {  			//АВАТАРКА  			if (/*((int)botinfo["experience"] >= 61) && */(!Bot.Info.HasAvatar))//if (false)  			 {  				ConsoleLog.WriteLine (botinfo ["login"] + ": Upload avatar");  				if (!Globals.BotConfig.useTOR)  					System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  				string Path = System.IO.Path.Combine (Globals.DataDir' "avatars");  				Path = System.IO.Path.Combine (Path' Globals.Avatars.GetRandomString ());  				Bot.Bot.UploadAvatar (System.IO.File.ReadAllBytes (Path)' Path);  				botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  			}  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Error uploading avatar: " + e.Message);  		}  		#endregion  	}  	finally {  		// Апдейтим статус бота в базе  		botinfo = Utils.TryToUpdateDbWithCurrentInfo (botinfo' Bot);  	}  	// Logout  	Bot.Bot.Logout ();  }  else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: if (loginResult == ManagedCitizen.LoginResult.Success) {  	try {  		Bot.Bot.m_Client.Timeouts = 0;  		ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		#region Активируем' если в базе нет отметки что активен. Посещаем диснейленд в первый раз  		try {  			if (((int)botinfo ["activated"]) == 0) {  				if (!Globals.BotConfig.useTOR)  					System.Threading.Thread.Sleep (rnd.Next (2000' 5000));  				Bot.Bot.Activate ();  				botinfo ["activated"] = 1;  				Utils.UpdateDbWithCustomBotInfo (botinfo' "activated");  				botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  				ConsoleLog.WriteLine ("Visit 'Land' for the first time");  				Bot.Bot.VisitLand ((uint)botinfo ["citizen_id"]);  			}  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Error activation: " + e.Message);  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		// Смотрим состояние инвентаря  		if (Bot.GetStorageInfo (true)) {  			botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  		}  		#region Light mode. Light так light. НИЧЕГО не делаем' только собираем инфу и выходим  		if (mode == "light") {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			Daily.BotLight (botinfo' Bot' rnd);  			return;  		}  		#endregion  		#region Покупаем и едим еду 1  		if (doFeed == 1)  			Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		#region Работаем' тренькаемся' читаем алерты' читаем статьи' смотрим TreasureMap  		//' учимся' отдыхаем  		List<int> lst = new List<int> ();  		lst.Add (1);  		lst.Add (2);  		lst.Add (3);  		lst.Add (4);  		lst = CommonUtils.MixList (lst);  		for (List<int>.Enumerator e = lst.GetEnumerator (); e.MoveNext ();) {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			switch (e.Current) {  			case 1:  				// Работа  				for (int i = 1; i <= 3; i++) {  					try {  						Daily.BotWork (botinfo' Bot' rnd);  						break;  					}  					catch (System.Exception e1) {  						ConsoleLog.WriteLine ("Bot work error: " + e1.Message);  					}  				}  				break;  			case 2:  				// Тренька  				for (int i = 1; i <= 3; i++) {  					try {  						Daily.BotTrain (botinfo' Bot' rnd);  						break;  					}  					catch (System.Exception e1) {  						ConsoleLog.WriteLine ("Bot train error: " + e1.Message);  					}  				}  				break;  			case 3:  				// Аллерты  				try {  					Bot.Bot.LookAlerts ();  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot look alerts error: " + e1.Message);  				}  				break;  			case 4:  				// Статьи  				try {  					Bot.Bot.ReadRandomTopArticle ();  					//if (!Globals.BotConfig.useTOR) System.Threading.Thread.Sleep(rnd.Next(15000' 20000));  					Bot.Bot.ReadRandomTopArticle ();  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot read article error: " + e1.Message);  				}  				break;  			}  			if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  				throw new Exception ("Timeout limit reached.");  		}  		#endregion  		#region Получаем дневной reward  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		for (int i = 1; i <= 3; i++) {  			try {  				Bot.Bot.DailyReward ();  				break;  			}  			catch (System.Exception e) {  				ConsoleLog.WriteLine ("Bot get daily reward error: " + e.Message);  			}  			if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  				throw new Exception ("Timeout limit reached.");  		}  		#endregion  		#region Покупаем и едим еду 2  		if (doFeed == 2)  			Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		// Смотрим состояние инвентаря  		if (Bot.GetStorageInfo (true)) {  			botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  		}  		#region Грузим аватару' если не загружена  		try {  			//АВАТАРКА  			if (/*((int)botinfo["experience"] >= 61) && */(!Bot.Info.HasAvatar))//if (false)  			 {  				ConsoleLog.WriteLine (botinfo ["login"] + ": Upload avatar");  				if (!Globals.BotConfig.useTOR)  					System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  				string Path = System.IO.Path.Combine (Globals.DataDir' "avatars");  				Path = System.IO.Path.Combine (Path' Globals.Avatars.GetRandomString ());  				Bot.Bot.UploadAvatar (System.IO.File.ReadAllBytes (Path)' Path);  				botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  			}  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Error uploading avatar: " + e.Message);  		}  		#endregion  	}  	finally {  		// Апдейтим статус бота в базе  		botinfo = Utils.TryToUpdateDbWithCurrentInfo (botinfo' Bot);  	}  	// Logout  	Bot.Bot.Logout ();  }  else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: if (loginResult == ManagedCitizen.LoginResult.Success) {  	try {  		Bot.Bot.m_Client.Timeouts = 0;  		ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		#region Активируем' если в базе нет отметки что активен. Посещаем диснейленд в первый раз  		try {  			if (((int)botinfo ["activated"]) == 0) {  				if (!Globals.BotConfig.useTOR)  					System.Threading.Thread.Sleep (rnd.Next (2000' 5000));  				Bot.Bot.Activate ();  				botinfo ["activated"] = 1;  				Utils.UpdateDbWithCustomBotInfo (botinfo' "activated");  				botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  				ConsoleLog.WriteLine ("Visit 'Land' for the first time");  				Bot.Bot.VisitLand ((uint)botinfo ["citizen_id"]);  			}  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Error activation: " + e.Message);  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		// Смотрим состояние инвентаря  		if (Bot.GetStorageInfo (true)) {  			botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  		}  		#region Light mode. Light так light. НИЧЕГО не делаем' только собираем инфу и выходим  		if (mode == "light") {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			Daily.BotLight (botinfo' Bot' rnd);  			return;  		}  		#endregion  		#region Покупаем и едим еду 1  		if (doFeed == 1)  			Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		#region Работаем' тренькаемся' читаем алерты' читаем статьи' смотрим TreasureMap  		//' учимся' отдыхаем  		List<int> lst = new List<int> ();  		lst.Add (1);  		lst.Add (2);  		lst.Add (3);  		lst.Add (4);  		lst = CommonUtils.MixList (lst);  		for (List<int>.Enumerator e = lst.GetEnumerator (); e.MoveNext ();) {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			switch (e.Current) {  			case 1:  				// Работа  				for (int i = 1; i <= 3; i++) {  					try {  						Daily.BotWork (botinfo' Bot' rnd);  						break;  					}  					catch (System.Exception e1) {  						ConsoleLog.WriteLine ("Bot work error: " + e1.Message);  					}  				}  				break;  			case 2:  				// Тренька  				for (int i = 1; i <= 3; i++) {  					try {  						Daily.BotTrain (botinfo' Bot' rnd);  						break;  					}  					catch (System.Exception e1) {  						ConsoleLog.WriteLine ("Bot train error: " + e1.Message);  					}  				}  				break;  			case 3:  				// Аллерты  				try {  					Bot.Bot.LookAlerts ();  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot look alerts error: " + e1.Message);  				}  				break;  			case 4:  				// Статьи  				try {  					Bot.Bot.ReadRandomTopArticle ();  					//if (!Globals.BotConfig.useTOR) System.Threading.Thread.Sleep(rnd.Next(15000' 20000));  					Bot.Bot.ReadRandomTopArticle ();  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot read article error: " + e1.Message);  				}  				break;  			}  			if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  				throw new Exception ("Timeout limit reached.");  		}  		#endregion  		#region Получаем дневной reward  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		for (int i = 1; i <= 3; i++) {  			try {  				Bot.Bot.DailyReward ();  				break;  			}  			catch (System.Exception e) {  				ConsoleLog.WriteLine ("Bot get daily reward error: " + e.Message);  			}  			if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  				throw new Exception ("Timeout limit reached.");  		}  		#endregion  		#region Покупаем и едим еду 2  		if (doFeed == 2)  			Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  		#endregion  		// Смотрим состояние инвентаря  		if (Bot.GetStorageInfo (true)) {  			botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  		}  		#region Грузим аватару' если не загружена  		try {  			//АВАТАРКА  			if (/*((int)botinfo["experience"] >= 61) && */(!Bot.Info.HasAvatar))//if (false)  			 {  				ConsoleLog.WriteLine (botinfo ["login"] + ": Upload avatar");  				if (!Globals.BotConfig.useTOR)  					System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  				string Path = System.IO.Path.Combine (Globals.DataDir' "avatars");  				Path = System.IO.Path.Combine (Path' Globals.Avatars.GetRandomString ());  				Bot.Bot.UploadAvatar (System.IO.File.ReadAllBytes (Path)' Path);  				botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  			}  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Error uploading avatar: " + e.Message);  		}  		#endregion  	}  	finally {  		// Апдейтим статус бота в базе  		botinfo = Utils.TryToUpdateDbWithCurrentInfo (botinfo' Bot);  	}  	// Logout  	Bot.Bot.Logout ();  }  else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: try {  	Bot.Bot.m_Client.Timeouts = 0;  	ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	#region Активируем' если в базе нет отметки что активен. Посещаем диснейленд в первый раз  	try {  		if (((int)botinfo ["activated"]) == 0) {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (2000' 5000));  			Bot.Bot.Activate ();  			botinfo ["activated"] = 1;  			Utils.UpdateDbWithCustomBotInfo (botinfo' "activated");  			botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  			ConsoleLog.WriteLine ("Visit 'Land' for the first time");  			Bot.Bot.VisitLand ((uint)botinfo ["citizen_id"]);  		}  	}  	catch (System.Exception e) {  		ConsoleLog.WriteLine ("Error activation: " + e.Message);  	}  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	// Смотрим состояние инвентаря  	if (Bot.GetStorageInfo (true)) {  		botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  	}  	#region Light mode. Light так light. НИЧЕГО не делаем' только собираем инфу и выходим  	if (mode == "light") {  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		Daily.BotLight (botinfo' Bot' rnd);  		return;  	}  	#endregion  	#region Покупаем и едим еду 1  	if (doFeed == 1)  		Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	#region Работаем' тренькаемся' читаем алерты' читаем статьи' смотрим TreasureMap  	//' учимся' отдыхаем  	List<int> lst = new List<int> ();  	lst.Add (1);  	lst.Add (2);  	lst.Add (3);  	lst.Add (4);  	lst = CommonUtils.MixList (lst);  	for (List<int>.Enumerator e = lst.GetEnumerator (); e.MoveNext ();) {  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		switch (e.Current) {  		case 1:  			// Работа  			for (int i = 1; i <= 3; i++) {  				try {  					Daily.BotWork (botinfo' Bot' rnd);  					break;  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot work error: " + e1.Message);  				}  			}  			break;  		case 2:  			// Тренька  			for (int i = 1; i <= 3; i++) {  				try {  					Daily.BotTrain (botinfo' Bot' rnd);  					break;  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot train error: " + e1.Message);  				}  			}  			break;  		case 3:  			// Аллерты  			try {  				Bot.Bot.LookAlerts ();  			}  			catch (System.Exception e1) {  				ConsoleLog.WriteLine ("Bot look alerts error: " + e1.Message);  			}  			break;  		case 4:  			// Статьи  			try {  				Bot.Bot.ReadRandomTopArticle ();  				//if (!Globals.BotConfig.useTOR) System.Threading.Thread.Sleep(rnd.Next(15000' 20000));  				Bot.Bot.ReadRandomTopArticle ();  			}  			catch (System.Exception e1) {  				ConsoleLog.WriteLine ("Bot read article error: " + e1.Message);  			}  			break;  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  	}  	#endregion  	#region Получаем дневной reward  	if (!Globals.BotConfig.useTOR)  		System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  	for (int i = 1; i <= 3; i++) {  		try {  			Bot.Bot.DailyReward ();  			break;  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Bot get daily reward error: " + e.Message);  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  	}  	#endregion  	#region Покупаем и едим еду 2  	if (doFeed == 2)  		Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	// Смотрим состояние инвентаря  	if (Bot.GetStorageInfo (true)) {  		botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  	}  	#region Грузим аватару' если не загружена  	try {  		//АВАТАРКА  		if (/*((int)botinfo["experience"] >= 61) && */(!Bot.Info.HasAvatar))//if (false)  		 {  			ConsoleLog.WriteLine (botinfo ["login"] + ": Upload avatar");  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			string Path = System.IO.Path.Combine (Globals.DataDir' "avatars");  			Path = System.IO.Path.Combine (Path' Globals.Avatars.GetRandomString ());  			Bot.Bot.UploadAvatar (System.IO.File.ReadAllBytes (Path)' Path);  			botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		}  	}  	catch (System.Exception e) {  		ConsoleLog.WriteLine ("Error uploading avatar: " + e.Message);  	}  	#endregion  }  finally {  	// Апдейтим статус бота в базе  	botinfo = Utils.TryToUpdateDbWithCurrentInfo (botinfo' Bot);  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: try {  	Bot.Bot.m_Client.Timeouts = 0;  	ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	#region Активируем' если в базе нет отметки что активен. Посещаем диснейленд в первый раз  	try {  		if (((int)botinfo ["activated"]) == 0) {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (2000' 5000));  			Bot.Bot.Activate ();  			botinfo ["activated"] = 1;  			Utils.UpdateDbWithCustomBotInfo (botinfo' "activated");  			botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  			ConsoleLog.WriteLine ("Visit 'Land' for the first time");  			Bot.Bot.VisitLand ((uint)botinfo ["citizen_id"]);  		}  	}  	catch (System.Exception e) {  		ConsoleLog.WriteLine ("Error activation: " + e.Message);  	}  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	// Смотрим состояние инвентаря  	if (Bot.GetStorageInfo (true)) {  		botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  	}  	#region Light mode. Light так light. НИЧЕГО не делаем' только собираем инфу и выходим  	if (mode == "light") {  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		Daily.BotLight (botinfo' Bot' rnd);  		return;  	}  	#endregion  	#region Покупаем и едим еду 1  	if (doFeed == 1)  		Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	#region Работаем' тренькаемся' читаем алерты' читаем статьи' смотрим TreasureMap  	//' учимся' отдыхаем  	List<int> lst = new List<int> ();  	lst.Add (1);  	lst.Add (2);  	lst.Add (3);  	lst.Add (4);  	lst = CommonUtils.MixList (lst);  	for (List<int>.Enumerator e = lst.GetEnumerator (); e.MoveNext ();) {  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		switch (e.Current) {  		case 1:  			// Работа  			for (int i = 1; i <= 3; i++) {  				try {  					Daily.BotWork (botinfo' Bot' rnd);  					break;  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot work error: " + e1.Message);  				}  			}  			break;  		case 2:  			// Тренька  			for (int i = 1; i <= 3; i++) {  				try {  					Daily.BotTrain (botinfo' Bot' rnd);  					break;  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot train error: " + e1.Message);  				}  			}  			break;  		case 3:  			// Аллерты  			try {  				Bot.Bot.LookAlerts ();  			}  			catch (System.Exception e1) {  				ConsoleLog.WriteLine ("Bot look alerts error: " + e1.Message);  			}  			break;  		case 4:  			// Статьи  			try {  				Bot.Bot.ReadRandomTopArticle ();  				//if (!Globals.BotConfig.useTOR) System.Threading.Thread.Sleep(rnd.Next(15000' 20000));  				Bot.Bot.ReadRandomTopArticle ();  			}  			catch (System.Exception e1) {  				ConsoleLog.WriteLine ("Bot read article error: " + e1.Message);  			}  			break;  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  	}  	#endregion  	#region Получаем дневной reward  	if (!Globals.BotConfig.useTOR)  		System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  	for (int i = 1; i <= 3; i++) {  		try {  			Bot.Bot.DailyReward ();  			break;  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Bot get daily reward error: " + e.Message);  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  	}  	#endregion  	#region Покупаем и едим еду 2  	if (doFeed == 2)  		Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	// Смотрим состояние инвентаря  	if (Bot.GetStorageInfo (true)) {  		botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  	}  	#region Грузим аватару' если не загружена  	try {  		//АВАТАРКА  		if (/*((int)botinfo["experience"] >= 61) && */(!Bot.Info.HasAvatar))//if (false)  		 {  			ConsoleLog.WriteLine (botinfo ["login"] + ": Upload avatar");  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			string Path = System.IO.Path.Combine (Globals.DataDir' "avatars");  			Path = System.IO.Path.Combine (Path' Globals.Avatars.GetRandomString ());  			Bot.Bot.UploadAvatar (System.IO.File.ReadAllBytes (Path)' Path);  			botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		}  	}  	catch (System.Exception e) {  		ConsoleLog.WriteLine ("Error uploading avatar: " + e.Message);  	}  	#endregion  }  finally {  	// Апдейтим статус бота в базе  	botinfo = Utils.TryToUpdateDbWithCurrentInfo (botinfo' Bot);  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: try {  	Bot.Bot.m_Client.Timeouts = 0;  	ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	#region Активируем' если в базе нет отметки что активен. Посещаем диснейленд в первый раз  	try {  		if (((int)botinfo ["activated"]) == 0) {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (2000' 5000));  			Bot.Bot.Activate ();  			botinfo ["activated"] = 1;  			Utils.UpdateDbWithCustomBotInfo (botinfo' "activated");  			botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  			ConsoleLog.WriteLine ("Visit 'Land' for the first time");  			Bot.Bot.VisitLand ((uint)botinfo ["citizen_id"]);  		}  	}  	catch (System.Exception e) {  		ConsoleLog.WriteLine ("Error activation: " + e.Message);  	}  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	// Смотрим состояние инвентаря  	if (Bot.GetStorageInfo (true)) {  		botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  	}  	#region Light mode. Light так light. НИЧЕГО не делаем' только собираем инфу и выходим  	if (mode == "light") {  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		Daily.BotLight (botinfo' Bot' rnd);  		return;  	}  	#endregion  	#region Покупаем и едим еду 1  	if (doFeed == 1)  		Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	#region Работаем' тренькаемся' читаем алерты' читаем статьи' смотрим TreasureMap  	//' учимся' отдыхаем  	List<int> lst = new List<int> ();  	lst.Add (1);  	lst.Add (2);  	lst.Add (3);  	lst.Add (4);  	lst = CommonUtils.MixList (lst);  	for (List<int>.Enumerator e = lst.GetEnumerator (); e.MoveNext ();) {  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		switch (e.Current) {  		case 1:  			// Работа  			for (int i = 1; i <= 3; i++) {  				try {  					Daily.BotWork (botinfo' Bot' rnd);  					break;  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot work error: " + e1.Message);  				}  			}  			break;  		case 2:  			// Тренька  			for (int i = 1; i <= 3; i++) {  				try {  					Daily.BotTrain (botinfo' Bot' rnd);  					break;  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot train error: " + e1.Message);  				}  			}  			break;  		case 3:  			// Аллерты  			try {  				Bot.Bot.LookAlerts ();  			}  			catch (System.Exception e1) {  				ConsoleLog.WriteLine ("Bot look alerts error: " + e1.Message);  			}  			break;  		case 4:  			// Статьи  			try {  				Bot.Bot.ReadRandomTopArticle ();  				//if (!Globals.BotConfig.useTOR) System.Threading.Thread.Sleep(rnd.Next(15000' 20000));  				Bot.Bot.ReadRandomTopArticle ();  			}  			catch (System.Exception e1) {  				ConsoleLog.WriteLine ("Bot read article error: " + e1.Message);  			}  			break;  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  	}  	#endregion  	#region Получаем дневной reward  	if (!Globals.BotConfig.useTOR)  		System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  	for (int i = 1; i <= 3; i++) {  		try {  			Bot.Bot.DailyReward ();  			break;  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Bot get daily reward error: " + e.Message);  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  	}  	#endregion  	#region Покупаем и едим еду 2  	if (doFeed == 2)  		Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	// Смотрим состояние инвентаря  	if (Bot.GetStorageInfo (true)) {  		botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  	}  	#region Грузим аватару' если не загружена  	try {  		//АВАТАРКА  		if (/*((int)botinfo["experience"] >= 61) && */(!Bot.Info.HasAvatar))//if (false)  		 {  			ConsoleLog.WriteLine (botinfo ["login"] + ": Upload avatar");  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			string Path = System.IO.Path.Combine (Globals.DataDir' "avatars");  			Path = System.IO.Path.Combine (Path' Globals.Avatars.GetRandomString ());  			Bot.Bot.UploadAvatar (System.IO.File.ReadAllBytes (Path)' Path);  			botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		}  	}  	catch (System.Exception e) {  		ConsoleLog.WriteLine ("Error uploading avatar: " + e.Message);  	}  	#endregion  }  finally {  	// Апдейтим статус бота в базе  	botinfo = Utils.TryToUpdateDbWithCurrentInfo (botinfo' Bot);  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: try {  	Bot.Bot.m_Client.Timeouts = 0;  	ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	#region Активируем' если в базе нет отметки что активен. Посещаем диснейленд в первый раз  	try {  		if (((int)botinfo ["activated"]) == 0) {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (2000' 5000));  			Bot.Bot.Activate ();  			botinfo ["activated"] = 1;  			Utils.UpdateDbWithCustomBotInfo (botinfo' "activated");  			botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  			ConsoleLog.WriteLine ("Visit 'Land' for the first time");  			Bot.Bot.VisitLand ((uint)botinfo ["citizen_id"]);  		}  	}  	catch (System.Exception e) {  		ConsoleLog.WriteLine ("Error activation: " + e.Message);  	}  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	// Смотрим состояние инвентаря  	if (Bot.GetStorageInfo (true)) {  		botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  	}  	#region Light mode. Light так light. НИЧЕГО не делаем' только собираем инфу и выходим  	if (mode == "light") {  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		Daily.BotLight (botinfo' Bot' rnd);  		return;  	}  	#endregion  	#region Покупаем и едим еду 1  	if (doFeed == 1)  		Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	#region Работаем' тренькаемся' читаем алерты' читаем статьи' смотрим TreasureMap  	//' учимся' отдыхаем  	List<int> lst = new List<int> ();  	lst.Add (1);  	lst.Add (2);  	lst.Add (3);  	lst.Add (4);  	lst = CommonUtils.MixList (lst);  	for (List<int>.Enumerator e = lst.GetEnumerator (); e.MoveNext ();) {  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		switch (e.Current) {  		case 1:  			// Работа  			for (int i = 1; i <= 3; i++) {  				try {  					Daily.BotWork (botinfo' Bot' rnd);  					break;  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot work error: " + e1.Message);  				}  			}  			break;  		case 2:  			// Тренька  			for (int i = 1; i <= 3; i++) {  				try {  					Daily.BotTrain (botinfo' Bot' rnd);  					break;  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot train error: " + e1.Message);  				}  			}  			break;  		case 3:  			// Аллерты  			try {  				Bot.Bot.LookAlerts ();  			}  			catch (System.Exception e1) {  				ConsoleLog.WriteLine ("Bot look alerts error: " + e1.Message);  			}  			break;  		case 4:  			// Статьи  			try {  				Bot.Bot.ReadRandomTopArticle ();  				//if (!Globals.BotConfig.useTOR) System.Threading.Thread.Sleep(rnd.Next(15000' 20000));  				Bot.Bot.ReadRandomTopArticle ();  			}  			catch (System.Exception e1) {  				ConsoleLog.WriteLine ("Bot read article error: " + e1.Message);  			}  			break;  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  	}  	#endregion  	#region Получаем дневной reward  	if (!Globals.BotConfig.useTOR)  		System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  	for (int i = 1; i <= 3; i++) {  		try {  			Bot.Bot.DailyReward ();  			break;  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Bot get daily reward error: " + e.Message);  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  	}  	#endregion  	#region Покупаем и едим еду 2  	if (doFeed == 2)  		Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	// Смотрим состояние инвентаря  	if (Bot.GetStorageInfo (true)) {  		botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  	}  	#region Грузим аватару' если не загружена  	try {  		//АВАТАРКА  		if (/*((int)botinfo["experience"] >= 61) && */(!Bot.Info.HasAvatar))//if (false)  		 {  			ConsoleLog.WriteLine (botinfo ["login"] + ": Upload avatar");  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			string Path = System.IO.Path.Combine (Globals.DataDir' "avatars");  			Path = System.IO.Path.Combine (Path' Globals.Avatars.GetRandomString ());  			Bot.Bot.UploadAvatar (System.IO.File.ReadAllBytes (Path)' Path);  			botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		}  	}  	catch (System.Exception e) {  		ConsoleLog.WriteLine ("Error uploading avatar: " + e.Message);  	}  	#endregion  }  finally {  	// Апдейтим статус бота в базе  	botinfo = Utils.TryToUpdateDbWithCurrentInfo (botinfo' Bot);  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: try {  	Bot.Bot.m_Client.Timeouts = 0;  	ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	#region Активируем' если в базе нет отметки что активен. Посещаем диснейленд в первый раз  	try {  		if (((int)botinfo ["activated"]) == 0) {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (2000' 5000));  			Bot.Bot.Activate ();  			botinfo ["activated"] = 1;  			Utils.UpdateDbWithCustomBotInfo (botinfo' "activated");  			botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  			ConsoleLog.WriteLine ("Visit 'Land' for the first time");  			Bot.Bot.VisitLand ((uint)botinfo ["citizen_id"]);  		}  	}  	catch (System.Exception e) {  		ConsoleLog.WriteLine ("Error activation: " + e.Message);  	}  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	// Смотрим состояние инвентаря  	if (Bot.GetStorageInfo (true)) {  		botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  	}  	#region Light mode. Light так light. НИЧЕГО не делаем' только собираем инфу и выходим  	if (mode == "light") {  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		Daily.BotLight (botinfo' Bot' rnd);  		return;  	}  	#endregion  	#region Покупаем и едим еду 1  	if (doFeed == 1)  		Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	#region Работаем' тренькаемся' читаем алерты' читаем статьи' смотрим TreasureMap  	//' учимся' отдыхаем  	List<int> lst = new List<int> ();  	lst.Add (1);  	lst.Add (2);  	lst.Add (3);  	lst.Add (4);  	lst = CommonUtils.MixList (lst);  	for (List<int>.Enumerator e = lst.GetEnumerator (); e.MoveNext ();) {  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		switch (e.Current) {  		case 1:  			// Работа  			for (int i = 1; i <= 3; i++) {  				try {  					Daily.BotWork (botinfo' Bot' rnd);  					break;  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot work error: " + e1.Message);  				}  			}  			break;  		case 2:  			// Тренька  			for (int i = 1; i <= 3; i++) {  				try {  					Daily.BotTrain (botinfo' Bot' rnd);  					break;  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot train error: " + e1.Message);  				}  			}  			break;  		case 3:  			// Аллерты  			try {  				Bot.Bot.LookAlerts ();  			}  			catch (System.Exception e1) {  				ConsoleLog.WriteLine ("Bot look alerts error: " + e1.Message);  			}  			break;  		case 4:  			// Статьи  			try {  				Bot.Bot.ReadRandomTopArticle ();  				//if (!Globals.BotConfig.useTOR) System.Threading.Thread.Sleep(rnd.Next(15000' 20000));  				Bot.Bot.ReadRandomTopArticle ();  			}  			catch (System.Exception e1) {  				ConsoleLog.WriteLine ("Bot read article error: " + e1.Message);  			}  			break;  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  	}  	#endregion  	#region Получаем дневной reward  	if (!Globals.BotConfig.useTOR)  		System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  	for (int i = 1; i <= 3; i++) {  		try {  			Bot.Bot.DailyReward ();  			break;  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Bot get daily reward error: " + e.Message);  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  	}  	#endregion  	#region Покупаем и едим еду 2  	if (doFeed == 2)  		Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	// Смотрим состояние инвентаря  	if (Bot.GetStorageInfo (true)) {  		botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  	}  	#region Грузим аватару' если не загружена  	try {  		//АВАТАРКА  		if (/*((int)botinfo["experience"] >= 61) && */(!Bot.Info.HasAvatar))//if (false)  		 {  			ConsoleLog.WriteLine (botinfo ["login"] + ": Upload avatar");  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			string Path = System.IO.Path.Combine (Globals.DataDir' "avatars");  			Path = System.IO.Path.Combine (Path' Globals.Avatars.GetRandomString ());  			Bot.Bot.UploadAvatar (System.IO.File.ReadAllBytes (Path)' Path);  			botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		}  	}  	catch (System.Exception e) {  		ConsoleLog.WriteLine ("Error uploading avatar: " + e.Message);  	}  	#endregion  }  finally {  	// Апдейтим статус бота в базе  	botinfo = Utils.TryToUpdateDbWithCurrentInfo (botinfo' Bot);  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: try {  	Bot.Bot.m_Client.Timeouts = 0;  	ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	#region Активируем' если в базе нет отметки что активен. Посещаем диснейленд в первый раз  	try {  		if (((int)botinfo ["activated"]) == 0) {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (2000' 5000));  			Bot.Bot.Activate ();  			botinfo ["activated"] = 1;  			Utils.UpdateDbWithCustomBotInfo (botinfo' "activated");  			botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  			ConsoleLog.WriteLine ("Visit 'Land' for the first time");  			Bot.Bot.VisitLand ((uint)botinfo ["citizen_id"]);  		}  	}  	catch (System.Exception e) {  		ConsoleLog.WriteLine ("Error activation: " + e.Message);  	}  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	// Смотрим состояние инвентаря  	if (Bot.GetStorageInfo (true)) {  		botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  	}  	#region Light mode. Light так light. НИЧЕГО не делаем' только собираем инфу и выходим  	if (mode == "light") {  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		Daily.BotLight (botinfo' Bot' rnd);  		return;  	}  	#endregion  	#region Покупаем и едим еду 1  	if (doFeed == 1)  		Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	#region Работаем' тренькаемся' читаем алерты' читаем статьи' смотрим TreasureMap  	//' учимся' отдыхаем  	List<int> lst = new List<int> ();  	lst.Add (1);  	lst.Add (2);  	lst.Add (3);  	lst.Add (4);  	lst = CommonUtils.MixList (lst);  	for (List<int>.Enumerator e = lst.GetEnumerator (); e.MoveNext ();) {  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		switch (e.Current) {  		case 1:  			// Работа  			for (int i = 1; i <= 3; i++) {  				try {  					Daily.BotWork (botinfo' Bot' rnd);  					break;  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot work error: " + e1.Message);  				}  			}  			break;  		case 2:  			// Тренька  			for (int i = 1; i <= 3; i++) {  				try {  					Daily.BotTrain (botinfo' Bot' rnd);  					break;  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot train error: " + e1.Message);  				}  			}  			break;  		case 3:  			// Аллерты  			try {  				Bot.Bot.LookAlerts ();  			}  			catch (System.Exception e1) {  				ConsoleLog.WriteLine ("Bot look alerts error: " + e1.Message);  			}  			break;  		case 4:  			// Статьи  			try {  				Bot.Bot.ReadRandomTopArticle ();  				//if (!Globals.BotConfig.useTOR) System.Threading.Thread.Sleep(rnd.Next(15000' 20000));  				Bot.Bot.ReadRandomTopArticle ();  			}  			catch (System.Exception e1) {  				ConsoleLog.WriteLine ("Bot read article error: " + e1.Message);  			}  			break;  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  	}  	#endregion  	#region Получаем дневной reward  	if (!Globals.BotConfig.useTOR)  		System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  	for (int i = 1; i <= 3; i++) {  		try {  			Bot.Bot.DailyReward ();  			break;  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Bot get daily reward error: " + e.Message);  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  	}  	#endregion  	#region Покупаем и едим еду 2  	if (doFeed == 2)  		Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	// Смотрим состояние инвентаря  	if (Bot.GetStorageInfo (true)) {  		botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  	}  	#region Грузим аватару' если не загружена  	try {  		//АВАТАРКА  		if (/*((int)botinfo["experience"] >= 61) && */(!Bot.Info.HasAvatar))//if (false)  		 {  			ConsoleLog.WriteLine (botinfo ["login"] + ": Upload avatar");  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			string Path = System.IO.Path.Combine (Globals.DataDir' "avatars");  			Path = System.IO.Path.Combine (Path' Globals.Avatars.GetRandomString ());  			Bot.Bot.UploadAvatar (System.IO.File.ReadAllBytes (Path)' Path);  			botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		}  	}  	catch (System.Exception e) {  		ConsoleLog.WriteLine ("Error uploading avatar: " + e.Message);  	}  	#endregion  }  finally {  	// Апдейтим статус бота в базе  	botinfo = Utils.TryToUpdateDbWithCurrentInfo (botinfo' Bot);  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: try {  	Bot.Bot.m_Client.Timeouts = 0;  	ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	#region Активируем' если в базе нет отметки что активен. Посещаем диснейленд в первый раз  	try {  		if (((int)botinfo ["activated"]) == 0) {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (2000' 5000));  			Bot.Bot.Activate ();  			botinfo ["activated"] = 1;  			Utils.UpdateDbWithCustomBotInfo (botinfo' "activated");  			botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  			ConsoleLog.WriteLine ("Visit 'Land' for the first time");  			Bot.Bot.VisitLand ((uint)botinfo ["citizen_id"]);  		}  	}  	catch (System.Exception e) {  		ConsoleLog.WriteLine ("Error activation: " + e.Message);  	}  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	// Смотрим состояние инвентаря  	if (Bot.GetStorageInfo (true)) {  		botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  	}  	#region Light mode. Light так light. НИЧЕГО не делаем' только собираем инфу и выходим  	if (mode == "light") {  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		Daily.BotLight (botinfo' Bot' rnd);  		return;  	}  	#endregion  	#region Покупаем и едим еду 1  	if (doFeed == 1)  		Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	#region Работаем' тренькаемся' читаем алерты' читаем статьи' смотрим TreasureMap  	//' учимся' отдыхаем  	List<int> lst = new List<int> ();  	lst.Add (1);  	lst.Add (2);  	lst.Add (3);  	lst.Add (4);  	lst = CommonUtils.MixList (lst);  	for (List<int>.Enumerator e = lst.GetEnumerator (); e.MoveNext ();) {  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		switch (e.Current) {  		case 1:  			// Работа  			for (int i = 1; i <= 3; i++) {  				try {  					Daily.BotWork (botinfo' Bot' rnd);  					break;  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot work error: " + e1.Message);  				}  			}  			break;  		case 2:  			// Тренька  			for (int i = 1; i <= 3; i++) {  				try {  					Daily.BotTrain (botinfo' Bot' rnd);  					break;  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot train error: " + e1.Message);  				}  			}  			break;  		case 3:  			// Аллерты  			try {  				Bot.Bot.LookAlerts ();  			}  			catch (System.Exception e1) {  				ConsoleLog.WriteLine ("Bot look alerts error: " + e1.Message);  			}  			break;  		case 4:  			// Статьи  			try {  				Bot.Bot.ReadRandomTopArticle ();  				//if (!Globals.BotConfig.useTOR) System.Threading.Thread.Sleep(rnd.Next(15000' 20000));  				Bot.Bot.ReadRandomTopArticle ();  			}  			catch (System.Exception e1) {  				ConsoleLog.WriteLine ("Bot read article error: " + e1.Message);  			}  			break;  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  	}  	#endregion  	#region Получаем дневной reward  	if (!Globals.BotConfig.useTOR)  		System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  	for (int i = 1; i <= 3; i++) {  		try {  			Bot.Bot.DailyReward ();  			break;  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Bot get daily reward error: " + e.Message);  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  	}  	#endregion  	#region Покупаем и едим еду 2  	if (doFeed == 2)  		Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	// Смотрим состояние инвентаря  	if (Bot.GetStorageInfo (true)) {  		botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  	}  	#region Грузим аватару' если не загружена  	try {  		//АВАТАРКА  		if (/*((int)botinfo["experience"] >= 61) && */(!Bot.Info.HasAvatar))//if (false)  		 {  			ConsoleLog.WriteLine (botinfo ["login"] + ": Upload avatar");  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			string Path = System.IO.Path.Combine (Globals.DataDir' "avatars");  			Path = System.IO.Path.Combine (Path' Globals.Avatars.GetRandomString ());  			Bot.Bot.UploadAvatar (System.IO.File.ReadAllBytes (Path)' Path);  			botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		}  	}  	catch (System.Exception e) {  		ConsoleLog.WriteLine ("Error uploading avatar: " + e.Message);  	}  	#endregion  }  finally {  	// Апдейтим статус бота в базе  	botinfo = Utils.TryToUpdateDbWithCurrentInfo (botinfo' Bot);  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: try {  	Bot.Bot.m_Client.Timeouts = 0;  	ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	#region Активируем' если в базе нет отметки что активен. Посещаем диснейленд в первый раз  	try {  		if (((int)botinfo ["activated"]) == 0) {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (2000' 5000));  			Bot.Bot.Activate ();  			botinfo ["activated"] = 1;  			Utils.UpdateDbWithCustomBotInfo (botinfo' "activated");  			botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  			ConsoleLog.WriteLine ("Visit 'Land' for the first time");  			Bot.Bot.VisitLand ((uint)botinfo ["citizen_id"]);  		}  	}  	catch (System.Exception e) {  		ConsoleLog.WriteLine ("Error activation: " + e.Message);  	}  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	// Смотрим состояние инвентаря  	if (Bot.GetStorageInfo (true)) {  		botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  	}  	#region Light mode. Light так light. НИЧЕГО не делаем' только собираем инфу и выходим  	if (mode == "light") {  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		Daily.BotLight (botinfo' Bot' rnd);  		return;  	}  	#endregion  	#region Покупаем и едим еду 1  	if (doFeed == 1)  		Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	#region Работаем' тренькаемся' читаем алерты' читаем статьи' смотрим TreasureMap  	//' учимся' отдыхаем  	List<int> lst = new List<int> ();  	lst.Add (1);  	lst.Add (2);  	lst.Add (3);  	lst.Add (4);  	lst = CommonUtils.MixList (lst);  	for (List<int>.Enumerator e = lst.GetEnumerator (); e.MoveNext ();) {  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		switch (e.Current) {  		case 1:  			// Работа  			for (int i = 1; i <= 3; i++) {  				try {  					Daily.BotWork (botinfo' Bot' rnd);  					break;  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot work error: " + e1.Message);  				}  			}  			break;  		case 2:  			// Тренька  			for (int i = 1; i <= 3; i++) {  				try {  					Daily.BotTrain (botinfo' Bot' rnd);  					break;  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot train error: " + e1.Message);  				}  			}  			break;  		case 3:  			// Аллерты  			try {  				Bot.Bot.LookAlerts ();  			}  			catch (System.Exception e1) {  				ConsoleLog.WriteLine ("Bot look alerts error: " + e1.Message);  			}  			break;  		case 4:  			// Статьи  			try {  				Bot.Bot.ReadRandomTopArticle ();  				//if (!Globals.BotConfig.useTOR) System.Threading.Thread.Sleep(rnd.Next(15000' 20000));  				Bot.Bot.ReadRandomTopArticle ();  			}  			catch (System.Exception e1) {  				ConsoleLog.WriteLine ("Bot read article error: " + e1.Message);  			}  			break;  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  	}  	#endregion  	#region Получаем дневной reward  	if (!Globals.BotConfig.useTOR)  		System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  	for (int i = 1; i <= 3; i++) {  		try {  			Bot.Bot.DailyReward ();  			break;  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Bot get daily reward error: " + e.Message);  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  	}  	#endregion  	#region Покупаем и едим еду 2  	if (doFeed == 2)  		Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	// Смотрим состояние инвентаря  	if (Bot.GetStorageInfo (true)) {  		botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  	}  	#region Грузим аватару' если не загружена  	try {  		//АВАТАРКА  		if (/*((int)botinfo["experience"] >= 61) && */(!Bot.Info.HasAvatar))//if (false)  		 {  			ConsoleLog.WriteLine (botinfo ["login"] + ": Upload avatar");  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			string Path = System.IO.Path.Combine (Globals.DataDir' "avatars");  			Path = System.IO.Path.Combine (Path' Globals.Avatars.GetRandomString ());  			Bot.Bot.UploadAvatar (System.IO.File.ReadAllBytes (Path)' Path);  			botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		}  	}  	catch (System.Exception e) {  		ConsoleLog.WriteLine ("Error uploading avatar: " + e.Message);  	}  	#endregion  }  finally {  	// Апдейтим статус бота в базе  	botinfo = Utils.TryToUpdateDbWithCurrentInfo (botinfo' Bot);  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: try {  	Bot.Bot.m_Client.Timeouts = 0;  	ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	#region Активируем' если в базе нет отметки что активен. Посещаем диснейленд в первый раз  	try {  		if (((int)botinfo ["activated"]) == 0) {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (2000' 5000));  			Bot.Bot.Activate ();  			botinfo ["activated"] = 1;  			Utils.UpdateDbWithCustomBotInfo (botinfo' "activated");  			botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  			ConsoleLog.WriteLine ("Visit 'Land' for the first time");  			Bot.Bot.VisitLand ((uint)botinfo ["citizen_id"]);  		}  	}  	catch (System.Exception e) {  		ConsoleLog.WriteLine ("Error activation: " + e.Message);  	}  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	// Смотрим состояние инвентаря  	if (Bot.GetStorageInfo (true)) {  		botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  	}  	#region Light mode. Light так light. НИЧЕГО не делаем' только собираем инфу и выходим  	if (mode == "light") {  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		Daily.BotLight (botinfo' Bot' rnd);  		return;  	}  	#endregion  	#region Покупаем и едим еду 1  	if (doFeed == 1)  		Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	#region Работаем' тренькаемся' читаем алерты' читаем статьи' смотрим TreasureMap  	//' учимся' отдыхаем  	List<int> lst = new List<int> ();  	lst.Add (1);  	lst.Add (2);  	lst.Add (3);  	lst.Add (4);  	lst = CommonUtils.MixList (lst);  	for (List<int>.Enumerator e = lst.GetEnumerator (); e.MoveNext ();) {  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		switch (e.Current) {  		case 1:  			// Работа  			for (int i = 1; i <= 3; i++) {  				try {  					Daily.BotWork (botinfo' Bot' rnd);  					break;  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot work error: " + e1.Message);  				}  			}  			break;  		case 2:  			// Тренька  			for (int i = 1; i <= 3; i++) {  				try {  					Daily.BotTrain (botinfo' Bot' rnd);  					break;  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot train error: " + e1.Message);  				}  			}  			break;  		case 3:  			// Аллерты  			try {  				Bot.Bot.LookAlerts ();  			}  			catch (System.Exception e1) {  				ConsoleLog.WriteLine ("Bot look alerts error: " + e1.Message);  			}  			break;  		case 4:  			// Статьи  			try {  				Bot.Bot.ReadRandomTopArticle ();  				//if (!Globals.BotConfig.useTOR) System.Threading.Thread.Sleep(rnd.Next(15000' 20000));  				Bot.Bot.ReadRandomTopArticle ();  			}  			catch (System.Exception e1) {  				ConsoleLog.WriteLine ("Bot read article error: " + e1.Message);  			}  			break;  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  	}  	#endregion  	#region Получаем дневной reward  	if (!Globals.BotConfig.useTOR)  		System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  	for (int i = 1; i <= 3; i++) {  		try {  			Bot.Bot.DailyReward ();  			break;  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Bot get daily reward error: " + e.Message);  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  	}  	#endregion  	#region Покупаем и едим еду 2  	if (doFeed == 2)  		Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	// Смотрим состояние инвентаря  	if (Bot.GetStorageInfo (true)) {  		botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  	}  	#region Грузим аватару' если не загружена  	try {  		//АВАТАРКА  		if (/*((int)botinfo["experience"] >= 61) && */(!Bot.Info.HasAvatar))//if (false)  		 {  			ConsoleLog.WriteLine (botinfo ["login"] + ": Upload avatar");  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			string Path = System.IO.Path.Combine (Globals.DataDir' "avatars");  			Path = System.IO.Path.Combine (Path' Globals.Avatars.GetRandomString ());  			Bot.Bot.UploadAvatar (System.IO.File.ReadAllBytes (Path)' Path);  			botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		}  	}  	catch (System.Exception e) {  		ConsoleLog.WriteLine ("Error uploading avatar: " + e.Message);  	}  	#endregion  }  finally {  	// Апдейтим статус бота в базе  	botinfo = Utils.TryToUpdateDbWithCurrentInfo (botinfo' Bot);  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: try {  	Bot.Bot.m_Client.Timeouts = 0;  	ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	#region Активируем' если в базе нет отметки что активен. Посещаем диснейленд в первый раз  	try {  		if (((int)botinfo ["activated"]) == 0) {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (2000' 5000));  			Bot.Bot.Activate ();  			botinfo ["activated"] = 1;  			Utils.UpdateDbWithCustomBotInfo (botinfo' "activated");  			botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  			ConsoleLog.WriteLine ("Visit 'Land' for the first time");  			Bot.Bot.VisitLand ((uint)botinfo ["citizen_id"]);  		}  	}  	catch (System.Exception e) {  		ConsoleLog.WriteLine ("Error activation: " + e.Message);  	}  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	// Смотрим состояние инвентаря  	if (Bot.GetStorageInfo (true)) {  		botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  	}  	#region Light mode. Light так light. НИЧЕГО не делаем' только собираем инфу и выходим  	if (mode == "light") {  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		Daily.BotLight (botinfo' Bot' rnd);  		return;  	}  	#endregion  	#region Покупаем и едим еду 1  	if (doFeed == 1)  		Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	#region Работаем' тренькаемся' читаем алерты' читаем статьи' смотрим TreasureMap  	//' учимся' отдыхаем  	List<int> lst = new List<int> ();  	lst.Add (1);  	lst.Add (2);  	lst.Add (3);  	lst.Add (4);  	lst = CommonUtils.MixList (lst);  	for (List<int>.Enumerator e = lst.GetEnumerator (); e.MoveNext ();) {  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		switch (e.Current) {  		case 1:  			// Работа  			for (int i = 1; i <= 3; i++) {  				try {  					Daily.BotWork (botinfo' Bot' rnd);  					break;  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot work error: " + e1.Message);  				}  			}  			break;  		case 2:  			// Тренька  			for (int i = 1; i <= 3; i++) {  				try {  					Daily.BotTrain (botinfo' Bot' rnd);  					break;  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot train error: " + e1.Message);  				}  			}  			break;  		case 3:  			// Аллерты  			try {  				Bot.Bot.LookAlerts ();  			}  			catch (System.Exception e1) {  				ConsoleLog.WriteLine ("Bot look alerts error: " + e1.Message);  			}  			break;  		case 4:  			// Статьи  			try {  				Bot.Bot.ReadRandomTopArticle ();  				//if (!Globals.BotConfig.useTOR) System.Threading.Thread.Sleep(rnd.Next(15000' 20000));  				Bot.Bot.ReadRandomTopArticle ();  			}  			catch (System.Exception e1) {  				ConsoleLog.WriteLine ("Bot read article error: " + e1.Message);  			}  			break;  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  	}  	#endregion  	#region Получаем дневной reward  	if (!Globals.BotConfig.useTOR)  		System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  	for (int i = 1; i <= 3; i++) {  		try {  			Bot.Bot.DailyReward ();  			break;  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Bot get daily reward error: " + e.Message);  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  	}  	#endregion  	#region Покупаем и едим еду 2  	if (doFeed == 2)  		Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	// Смотрим состояние инвентаря  	if (Bot.GetStorageInfo (true)) {  		botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  	}  	#region Грузим аватару' если не загружена  	try {  		//АВАТАРКА  		if (/*((int)botinfo["experience"] >= 61) && */(!Bot.Info.HasAvatar))//if (false)  		 {  			ConsoleLog.WriteLine (botinfo ["login"] + ": Upload avatar");  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			string Path = System.IO.Path.Combine (Globals.DataDir' "avatars");  			Path = System.IO.Path.Combine (Path' Globals.Avatars.GetRandomString ());  			Bot.Bot.UploadAvatar (System.IO.File.ReadAllBytes (Path)' Path);  			botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		}  	}  	catch (System.Exception e) {  		ConsoleLog.WriteLine ("Error uploading avatar: " + e.Message);  	}  	#endregion  }  finally {  	// Апдейтим статус бота в базе  	botinfo = Utils.TryToUpdateDbWithCurrentInfo (botinfo' Bot);  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: try {  	Bot.Bot.m_Client.Timeouts = 0;  	ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	#region Активируем' если в базе нет отметки что активен. Посещаем диснейленд в первый раз  	try {  		if (((int)botinfo ["activated"]) == 0) {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (2000' 5000));  			Bot.Bot.Activate ();  			botinfo ["activated"] = 1;  			Utils.UpdateDbWithCustomBotInfo (botinfo' "activated");  			botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  			ConsoleLog.WriteLine ("Visit 'Land' for the first time");  			Bot.Bot.VisitLand ((uint)botinfo ["citizen_id"]);  		}  	}  	catch (System.Exception e) {  		ConsoleLog.WriteLine ("Error activation: " + e.Message);  	}  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	// Смотрим состояние инвентаря  	if (Bot.GetStorageInfo (true)) {  		botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  	}  	#region Light mode. Light так light. НИЧЕГО не делаем' только собираем инфу и выходим  	if (mode == "light") {  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		Daily.BotLight (botinfo' Bot' rnd);  		return;  	}  	#endregion  	#region Покупаем и едим еду 1  	if (doFeed == 1)  		Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	#region Работаем' тренькаемся' читаем алерты' читаем статьи' смотрим TreasureMap  	//' учимся' отдыхаем  	List<int> lst = new List<int> ();  	lst.Add (1);  	lst.Add (2);  	lst.Add (3);  	lst.Add (4);  	lst = CommonUtils.MixList (lst);  	for (List<int>.Enumerator e = lst.GetEnumerator (); e.MoveNext ();) {  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		switch (e.Current) {  		case 1:  			// Работа  			for (int i = 1; i <= 3; i++) {  				try {  					Daily.BotWork (botinfo' Bot' rnd);  					break;  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot work error: " + e1.Message);  				}  			}  			break;  		case 2:  			// Тренька  			for (int i = 1; i <= 3; i++) {  				try {  					Daily.BotTrain (botinfo' Bot' rnd);  					break;  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot train error: " + e1.Message);  				}  			}  			break;  		case 3:  			// Аллерты  			try {  				Bot.Bot.LookAlerts ();  			}  			catch (System.Exception e1) {  				ConsoleLog.WriteLine ("Bot look alerts error: " + e1.Message);  			}  			break;  		case 4:  			// Статьи  			try {  				Bot.Bot.ReadRandomTopArticle ();  				//if (!Globals.BotConfig.useTOR) System.Threading.Thread.Sleep(rnd.Next(15000' 20000));  				Bot.Bot.ReadRandomTopArticle ();  			}  			catch (System.Exception e1) {  				ConsoleLog.WriteLine ("Bot read article error: " + e1.Message);  			}  			break;  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  	}  	#endregion  	#region Получаем дневной reward  	if (!Globals.BotConfig.useTOR)  		System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  	for (int i = 1; i <= 3; i++) {  		try {  			Bot.Bot.DailyReward ();  			break;  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Bot get daily reward error: " + e.Message);  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  	}  	#endregion  	#region Покупаем и едим еду 2  	if (doFeed == 2)  		Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	// Смотрим состояние инвентаря  	if (Bot.GetStorageInfo (true)) {  		botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  	}  	#region Грузим аватару' если не загружена  	try {  		//АВАТАРКА  		if (/*((int)botinfo["experience"] >= 61) && */(!Bot.Info.HasAvatar))//if (false)  		 {  			ConsoleLog.WriteLine (botinfo ["login"] + ": Upload avatar");  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			string Path = System.IO.Path.Combine (Globals.DataDir' "avatars");  			Path = System.IO.Path.Combine (Path' Globals.Avatars.GetRandomString ());  			Bot.Bot.UploadAvatar (System.IO.File.ReadAllBytes (Path)' Path);  			botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		}  	}  	catch (System.Exception e) {  		ConsoleLog.WriteLine ("Error uploading avatar: " + e.Message);  	}  	#endregion  }  finally {  	// Апдейтим статус бота в базе  	botinfo = Utils.TryToUpdateDbWithCurrentInfo (botinfo' Bot);  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: try {  	Bot.Bot.m_Client.Timeouts = 0;  	ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	#region Активируем' если в базе нет отметки что активен. Посещаем диснейленд в первый раз  	try {  		if (((int)botinfo ["activated"]) == 0) {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (2000' 5000));  			Bot.Bot.Activate ();  			botinfo ["activated"] = 1;  			Utils.UpdateDbWithCustomBotInfo (botinfo' "activated");  			botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  			ConsoleLog.WriteLine ("Visit 'Land' for the first time");  			Bot.Bot.VisitLand ((uint)botinfo ["citizen_id"]);  		}  	}  	catch (System.Exception e) {  		ConsoleLog.WriteLine ("Error activation: " + e.Message);  	}  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	// Смотрим состояние инвентаря  	if (Bot.GetStorageInfo (true)) {  		botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  	}  	#region Light mode. Light так light. НИЧЕГО не делаем' только собираем инфу и выходим  	if (mode == "light") {  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		Daily.BotLight (botinfo' Bot' rnd);  		return;  	}  	#endregion  	#region Покупаем и едим еду 1  	if (doFeed == 1)  		Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	#region Работаем' тренькаемся' читаем алерты' читаем статьи' смотрим TreasureMap  	//' учимся' отдыхаем  	List<int> lst = new List<int> ();  	lst.Add (1);  	lst.Add (2);  	lst.Add (3);  	lst.Add (4);  	lst = CommonUtils.MixList (lst);  	for (List<int>.Enumerator e = lst.GetEnumerator (); e.MoveNext ();) {  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		switch (e.Current) {  		case 1:  			// Работа  			for (int i = 1; i <= 3; i++) {  				try {  					Daily.BotWork (botinfo' Bot' rnd);  					break;  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot work error: " + e1.Message);  				}  			}  			break;  		case 2:  			// Тренька  			for (int i = 1; i <= 3; i++) {  				try {  					Daily.BotTrain (botinfo' Bot' rnd);  					break;  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot train error: " + e1.Message);  				}  			}  			break;  		case 3:  			// Аллерты  			try {  				Bot.Bot.LookAlerts ();  			}  			catch (System.Exception e1) {  				ConsoleLog.WriteLine ("Bot look alerts error: " + e1.Message);  			}  			break;  		case 4:  			// Статьи  			try {  				Bot.Bot.ReadRandomTopArticle ();  				//if (!Globals.BotConfig.useTOR) System.Threading.Thread.Sleep(rnd.Next(15000' 20000));  				Bot.Bot.ReadRandomTopArticle ();  			}  			catch (System.Exception e1) {  				ConsoleLog.WriteLine ("Bot read article error: " + e1.Message);  			}  			break;  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  	}  	#endregion  	#region Получаем дневной reward  	if (!Globals.BotConfig.useTOR)  		System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  	for (int i = 1; i <= 3; i++) {  		try {  			Bot.Bot.DailyReward ();  			break;  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Bot get daily reward error: " + e.Message);  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  	}  	#endregion  	#region Покупаем и едим еду 2  	if (doFeed == 2)  		Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	// Смотрим состояние инвентаря  	if (Bot.GetStorageInfo (true)) {  		botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  	}  	#region Грузим аватару' если не загружена  	try {  		//АВАТАРКА  		if (/*((int)botinfo["experience"] >= 61) && */(!Bot.Info.HasAvatar))//if (false)  		 {  			ConsoleLog.WriteLine (botinfo ["login"] + ": Upload avatar");  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			string Path = System.IO.Path.Combine (Globals.DataDir' "avatars");  			Path = System.IO.Path.Combine (Path' Globals.Avatars.GetRandomString ());  			Bot.Bot.UploadAvatar (System.IO.File.ReadAllBytes (Path)' Path);  			botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		}  	}  	catch (System.Exception e) {  		ConsoleLog.WriteLine ("Error uploading avatar: " + e.Message);  	}  	#endregion  }  finally {  	// Апдейтим статус бота в базе  	botinfo = Utils.TryToUpdateDbWithCurrentInfo (botinfo' Bot);  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: try {  	Bot.Bot.m_Client.Timeouts = 0;  	ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	#region Активируем' если в базе нет отметки что активен. Посещаем диснейленд в первый раз  	try {  		if (((int)botinfo ["activated"]) == 0) {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (2000' 5000));  			Bot.Bot.Activate ();  			botinfo ["activated"] = 1;  			Utils.UpdateDbWithCustomBotInfo (botinfo' "activated");  			botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  			ConsoleLog.WriteLine ("Visit 'Land' for the first time");  			Bot.Bot.VisitLand ((uint)botinfo ["citizen_id"]);  		}  	}  	catch (System.Exception e) {  		ConsoleLog.WriteLine ("Error activation: " + e.Message);  	}  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	// Смотрим состояние инвентаря  	if (Bot.GetStorageInfo (true)) {  		botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  	}  	#region Light mode. Light так light. НИЧЕГО не делаем' только собираем инфу и выходим  	if (mode == "light") {  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		Daily.BotLight (botinfo' Bot' rnd);  		return;  	}  	#endregion  	#region Покупаем и едим еду 1  	if (doFeed == 1)  		Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	#region Работаем' тренькаемся' читаем алерты' читаем статьи' смотрим TreasureMap  	//' учимся' отдыхаем  	List<int> lst = new List<int> ();  	lst.Add (1);  	lst.Add (2);  	lst.Add (3);  	lst.Add (4);  	lst = CommonUtils.MixList (lst);  	for (List<int>.Enumerator e = lst.GetEnumerator (); e.MoveNext ();) {  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		switch (e.Current) {  		case 1:  			// Работа  			for (int i = 1; i <= 3; i++) {  				try {  					Daily.BotWork (botinfo' Bot' rnd);  					break;  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot work error: " + e1.Message);  				}  			}  			break;  		case 2:  			// Тренька  			for (int i = 1; i <= 3; i++) {  				try {  					Daily.BotTrain (botinfo' Bot' rnd);  					break;  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot train error: " + e1.Message);  				}  			}  			break;  		case 3:  			// Аллерты  			try {  				Bot.Bot.LookAlerts ();  			}  			catch (System.Exception e1) {  				ConsoleLog.WriteLine ("Bot look alerts error: " + e1.Message);  			}  			break;  		case 4:  			// Статьи  			try {  				Bot.Bot.ReadRandomTopArticle ();  				//if (!Globals.BotConfig.useTOR) System.Threading.Thread.Sleep(rnd.Next(15000' 20000));  				Bot.Bot.ReadRandomTopArticle ();  			}  			catch (System.Exception e1) {  				ConsoleLog.WriteLine ("Bot read article error: " + e1.Message);  			}  			break;  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  	}  	#endregion  	#region Получаем дневной reward  	if (!Globals.BotConfig.useTOR)  		System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  	for (int i = 1; i <= 3; i++) {  		try {  			Bot.Bot.DailyReward ();  			break;  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Bot get daily reward error: " + e.Message);  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  	}  	#endregion  	#region Покупаем и едим еду 2  	if (doFeed == 2)  		Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	// Смотрим состояние инвентаря  	if (Bot.GetStorageInfo (true)) {  		botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  	}  	#region Грузим аватару' если не загружена  	try {  		//АВАТАРКА  		if (/*((int)botinfo["experience"] >= 61) && */(!Bot.Info.HasAvatar))//if (false)  		 {  			ConsoleLog.WriteLine (botinfo ["login"] + ": Upload avatar");  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			string Path = System.IO.Path.Combine (Globals.DataDir' "avatars");  			Path = System.IO.Path.Combine (Path' Globals.Avatars.GetRandomString ());  			Bot.Bot.UploadAvatar (System.IO.File.ReadAllBytes (Path)' Path);  			botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		}  	}  	catch (System.Exception e) {  		ConsoleLog.WriteLine ("Error uploading avatar: " + e.Message);  	}  	#endregion  }  finally {  	// Апдейтим статус бота в базе  	botinfo = Utils.TryToUpdateDbWithCurrentInfo (botinfo' Bot);  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: try {  	Bot.Bot.m_Client.Timeouts = 0;  	ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	#region Активируем' если в базе нет отметки что активен. Посещаем диснейленд в первый раз  	try {  		if (((int)botinfo ["activated"]) == 0) {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (2000' 5000));  			Bot.Bot.Activate ();  			botinfo ["activated"] = 1;  			Utils.UpdateDbWithCustomBotInfo (botinfo' "activated");  			botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  			ConsoleLog.WriteLine ("Visit 'Land' for the first time");  			Bot.Bot.VisitLand ((uint)botinfo ["citizen_id"]);  		}  	}  	catch (System.Exception e) {  		ConsoleLog.WriteLine ("Error activation: " + e.Message);  	}  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	// Смотрим состояние инвентаря  	if (Bot.GetStorageInfo (true)) {  		botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  	}  	#region Light mode. Light так light. НИЧЕГО не делаем' только собираем инфу и выходим  	if (mode == "light") {  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		Daily.BotLight (botinfo' Bot' rnd);  		return;  	}  	#endregion  	#region Покупаем и едим еду 1  	if (doFeed == 1)  		Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	#region Работаем' тренькаемся' читаем алерты' читаем статьи' смотрим TreasureMap  	//' учимся' отдыхаем  	List<int> lst = new List<int> ();  	lst.Add (1);  	lst.Add (2);  	lst.Add (3);  	lst.Add (4);  	lst = CommonUtils.MixList (lst);  	for (List<int>.Enumerator e = lst.GetEnumerator (); e.MoveNext ();) {  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		switch (e.Current) {  		case 1:  			// Работа  			for (int i = 1; i <= 3; i++) {  				try {  					Daily.BotWork (botinfo' Bot' rnd);  					break;  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot work error: " + e1.Message);  				}  			}  			break;  		case 2:  			// Тренька  			for (int i = 1; i <= 3; i++) {  				try {  					Daily.BotTrain (botinfo' Bot' rnd);  					break;  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot train error: " + e1.Message);  				}  			}  			break;  		case 3:  			// Аллерты  			try {  				Bot.Bot.LookAlerts ();  			}  			catch (System.Exception e1) {  				ConsoleLog.WriteLine ("Bot look alerts error: " + e1.Message);  			}  			break;  		case 4:  			// Статьи  			try {  				Bot.Bot.ReadRandomTopArticle ();  				//if (!Globals.BotConfig.useTOR) System.Threading.Thread.Sleep(rnd.Next(15000' 20000));  				Bot.Bot.ReadRandomTopArticle ();  			}  			catch (System.Exception e1) {  				ConsoleLog.WriteLine ("Bot read article error: " + e1.Message);  			}  			break;  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  	}  	#endregion  	#region Получаем дневной reward  	if (!Globals.BotConfig.useTOR)  		System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  	for (int i = 1; i <= 3; i++) {  		try {  			Bot.Bot.DailyReward ();  			break;  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Bot get daily reward error: " + e.Message);  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  	}  	#endregion  	#region Покупаем и едим еду 2  	if (doFeed == 2)  		Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	// Смотрим состояние инвентаря  	if (Bot.GetStorageInfo (true)) {  		botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  	}  	#region Грузим аватару' если не загружена  	try {  		//АВАТАРКА  		if (/*((int)botinfo["experience"] >= 61) && */(!Bot.Info.HasAvatar))//if (false)  		 {  			ConsoleLog.WriteLine (botinfo ["login"] + ": Upload avatar");  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			string Path = System.IO.Path.Combine (Globals.DataDir' "avatars");  			Path = System.IO.Path.Combine (Path' Globals.Avatars.GetRandomString ());  			Bot.Bot.UploadAvatar (System.IO.File.ReadAllBytes (Path)' Path);  			botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		}  	}  	catch (System.Exception e) {  		ConsoleLog.WriteLine ("Error uploading avatar: " + e.Message);  	}  	#endregion  }  finally {  	// Апдейтим статус бота в базе  	botinfo = Utils.TryToUpdateDbWithCurrentInfo (botinfo' Bot);  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: try {  	Bot.Bot.m_Client.Timeouts = 0;  	ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	#region Активируем' если в базе нет отметки что активен. Посещаем диснейленд в первый раз  	try {  		if (((int)botinfo ["activated"]) == 0) {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (2000' 5000));  			Bot.Bot.Activate ();  			botinfo ["activated"] = 1;  			Utils.UpdateDbWithCustomBotInfo (botinfo' "activated");  			botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  			ConsoleLog.WriteLine ("Visit 'Land' for the first time");  			Bot.Bot.VisitLand ((uint)botinfo ["citizen_id"]);  		}  	}  	catch (System.Exception e) {  		ConsoleLog.WriteLine ("Error activation: " + e.Message);  	}  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	// Смотрим состояние инвентаря  	if (Bot.GetStorageInfo (true)) {  		botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  	}  	#region Light mode. Light так light. НИЧЕГО не делаем' только собираем инфу и выходим  	if (mode == "light") {  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		Daily.BotLight (botinfo' Bot' rnd);  		return;  	}  	#endregion  	#region Покупаем и едим еду 1  	if (doFeed == 1)  		Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	#region Работаем' тренькаемся' читаем алерты' читаем статьи' смотрим TreasureMap  	//' учимся' отдыхаем  	List<int> lst = new List<int> ();  	lst.Add (1);  	lst.Add (2);  	lst.Add (3);  	lst.Add (4);  	lst = CommonUtils.MixList (lst);  	for (List<int>.Enumerator e = lst.GetEnumerator (); e.MoveNext ();) {  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		switch (e.Current) {  		case 1:  			// Работа  			for (int i = 1; i <= 3; i++) {  				try {  					Daily.BotWork (botinfo' Bot' rnd);  					break;  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot work error: " + e1.Message);  				}  			}  			break;  		case 2:  			// Тренька  			for (int i = 1; i <= 3; i++) {  				try {  					Daily.BotTrain (botinfo' Bot' rnd);  					break;  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot train error: " + e1.Message);  				}  			}  			break;  		case 3:  			// Аллерты  			try {  				Bot.Bot.LookAlerts ();  			}  			catch (System.Exception e1) {  				ConsoleLog.WriteLine ("Bot look alerts error: " + e1.Message);  			}  			break;  		case 4:  			// Статьи  			try {  				Bot.Bot.ReadRandomTopArticle ();  				//if (!Globals.BotConfig.useTOR) System.Threading.Thread.Sleep(rnd.Next(15000' 20000));  				Bot.Bot.ReadRandomTopArticle ();  			}  			catch (System.Exception e1) {  				ConsoleLog.WriteLine ("Bot read article error: " + e1.Message);  			}  			break;  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  	}  	#endregion  	#region Получаем дневной reward  	if (!Globals.BotConfig.useTOR)  		System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  	for (int i = 1; i <= 3; i++) {  		try {  			Bot.Bot.DailyReward ();  			break;  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Bot get daily reward error: " + e.Message);  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  	}  	#endregion  	#region Покупаем и едим еду 2  	if (doFeed == 2)  		Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	// Смотрим состояние инвентаря  	if (Bot.GetStorageInfo (true)) {  		botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  	}  	#region Грузим аватару' если не загружена  	try {  		//АВАТАРКА  		if (/*((int)botinfo["experience"] >= 61) && */(!Bot.Info.HasAvatar))//if (false)  		 {  			ConsoleLog.WriteLine (botinfo ["login"] + ": Upload avatar");  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			string Path = System.IO.Path.Combine (Globals.DataDir' "avatars");  			Path = System.IO.Path.Combine (Path' Globals.Avatars.GetRandomString ());  			Bot.Bot.UploadAvatar (System.IO.File.ReadAllBytes (Path)' Path);  			botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		}  	}  	catch (System.Exception e) {  		ConsoleLog.WriteLine ("Error uploading avatar: " + e.Message);  	}  	#endregion  }  finally {  	// Апдейтим статус бота в базе  	botinfo = Utils.TryToUpdateDbWithCurrentInfo (botinfo' Bot);  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: try {  	Bot.Bot.m_Client.Timeouts = 0;  	ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	#region Активируем' если в базе нет отметки что активен. Посещаем диснейленд в первый раз  	try {  		if (((int)botinfo ["activated"]) == 0) {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (2000' 5000));  			Bot.Bot.Activate ();  			botinfo ["activated"] = 1;  			Utils.UpdateDbWithCustomBotInfo (botinfo' "activated");  			botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  			ConsoleLog.WriteLine ("Visit 'Land' for the first time");  			Bot.Bot.VisitLand ((uint)botinfo ["citizen_id"]);  		}  	}  	catch (System.Exception e) {  		ConsoleLog.WriteLine ("Error activation: " + e.Message);  	}  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	// Смотрим состояние инвентаря  	if (Bot.GetStorageInfo (true)) {  		botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  	}  	#region Light mode. Light так light. НИЧЕГО не делаем' только собираем инфу и выходим  	if (mode == "light") {  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		Daily.BotLight (botinfo' Bot' rnd);  		return;  	}  	#endregion  	#region Покупаем и едим еду 1  	if (doFeed == 1)  		Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	#region Работаем' тренькаемся' читаем алерты' читаем статьи' смотрим TreasureMap  	//' учимся' отдыхаем  	List<int> lst = new List<int> ();  	lst.Add (1);  	lst.Add (2);  	lst.Add (3);  	lst.Add (4);  	lst = CommonUtils.MixList (lst);  	for (List<int>.Enumerator e = lst.GetEnumerator (); e.MoveNext ();) {  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		switch (e.Current) {  		case 1:  			// Работа  			for (int i = 1; i <= 3; i++) {  				try {  					Daily.BotWork (botinfo' Bot' rnd);  					break;  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot work error: " + e1.Message);  				}  			}  			break;  		case 2:  			// Тренька  			for (int i = 1; i <= 3; i++) {  				try {  					Daily.BotTrain (botinfo' Bot' rnd);  					break;  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot train error: " + e1.Message);  				}  			}  			break;  		case 3:  			// Аллерты  			try {  				Bot.Bot.LookAlerts ();  			}  			catch (System.Exception e1) {  				ConsoleLog.WriteLine ("Bot look alerts error: " + e1.Message);  			}  			break;  		case 4:  			// Статьи  			try {  				Bot.Bot.ReadRandomTopArticle ();  				//if (!Globals.BotConfig.useTOR) System.Threading.Thread.Sleep(rnd.Next(15000' 20000));  				Bot.Bot.ReadRandomTopArticle ();  			}  			catch (System.Exception e1) {  				ConsoleLog.WriteLine ("Bot read article error: " + e1.Message);  			}  			break;  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  	}  	#endregion  	#region Получаем дневной reward  	if (!Globals.BotConfig.useTOR)  		System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  	for (int i = 1; i <= 3; i++) {  		try {  			Bot.Bot.DailyReward ();  			break;  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Bot get daily reward error: " + e.Message);  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  	}  	#endregion  	#region Покупаем и едим еду 2  	if (doFeed == 2)  		Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	// Смотрим состояние инвентаря  	if (Bot.GetStorageInfo (true)) {  		botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  	}  	#region Грузим аватару' если не загружена  	try {  		//АВАТАРКА  		if (/*((int)botinfo["experience"] >= 61) && */(!Bot.Info.HasAvatar))//if (false)  		 {  			ConsoleLog.WriteLine (botinfo ["login"] + ": Upload avatar");  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			string Path = System.IO.Path.Combine (Globals.DataDir' "avatars");  			Path = System.IO.Path.Combine (Path' Globals.Avatars.GetRandomString ());  			Bot.Bot.UploadAvatar (System.IO.File.ReadAllBytes (Path)' Path);  			botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		}  	}  	catch (System.Exception e) {  		ConsoleLog.WriteLine ("Error uploading avatar: " + e.Message);  	}  	#endregion  }  finally {  	// Апдейтим статус бота в базе  	botinfo = Utils.TryToUpdateDbWithCurrentInfo (botinfo' Bot);  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: try {  	Bot.Bot.m_Client.Timeouts = 0;  	ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	#region Активируем' если в базе нет отметки что активен. Посещаем диснейленд в первый раз  	try {  		if (((int)botinfo ["activated"]) == 0) {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (2000' 5000));  			Bot.Bot.Activate ();  			botinfo ["activated"] = 1;  			Utils.UpdateDbWithCustomBotInfo (botinfo' "activated");  			botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  			ConsoleLog.WriteLine ("Visit 'Land' for the first time");  			Bot.Bot.VisitLand ((uint)botinfo ["citizen_id"]);  		}  	}  	catch (System.Exception e) {  		ConsoleLog.WriteLine ("Error activation: " + e.Message);  	}  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	// Смотрим состояние инвентаря  	if (Bot.GetStorageInfo (true)) {  		botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  	}  	#region Light mode. Light так light. НИЧЕГО не делаем' только собираем инфу и выходим  	if (mode == "light") {  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		Daily.BotLight (botinfo' Bot' rnd);  		return;  	}  	#endregion  	#region Покупаем и едим еду 1  	if (doFeed == 1)  		Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	#region Работаем' тренькаемся' читаем алерты' читаем статьи' смотрим TreasureMap  	//' учимся' отдыхаем  	List<int> lst = new List<int> ();  	lst.Add (1);  	lst.Add (2);  	lst.Add (3);  	lst.Add (4);  	lst = CommonUtils.MixList (lst);  	for (List<int>.Enumerator e = lst.GetEnumerator (); e.MoveNext ();) {  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		switch (e.Current) {  		case 1:  			// Работа  			for (int i = 1; i <= 3; i++) {  				try {  					Daily.BotWork (botinfo' Bot' rnd);  					break;  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot work error: " + e1.Message);  				}  			}  			break;  		case 2:  			// Тренька  			for (int i = 1; i <= 3; i++) {  				try {  					Daily.BotTrain (botinfo' Bot' rnd);  					break;  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot train error: " + e1.Message);  				}  			}  			break;  		case 3:  			// Аллерты  			try {  				Bot.Bot.LookAlerts ();  			}  			catch (System.Exception e1) {  				ConsoleLog.WriteLine ("Bot look alerts error: " + e1.Message);  			}  			break;  		case 4:  			// Статьи  			try {  				Bot.Bot.ReadRandomTopArticle ();  				//if (!Globals.BotConfig.useTOR) System.Threading.Thread.Sleep(rnd.Next(15000' 20000));  				Bot.Bot.ReadRandomTopArticle ();  			}  			catch (System.Exception e1) {  				ConsoleLog.WriteLine ("Bot read article error: " + e1.Message);  			}  			break;  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  	}  	#endregion  	#region Получаем дневной reward  	if (!Globals.BotConfig.useTOR)  		System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  	for (int i = 1; i <= 3; i++) {  		try {  			Bot.Bot.DailyReward ();  			break;  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Bot get daily reward error: " + e.Message);  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  	}  	#endregion  	#region Покупаем и едим еду 2  	if (doFeed == 2)  		Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	// Смотрим состояние инвентаря  	if (Bot.GetStorageInfo (true)) {  		botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  	}  	#region Грузим аватару' если не загружена  	try {  		//АВАТАРКА  		if (/*((int)botinfo["experience"] >= 61) && */(!Bot.Info.HasAvatar))//if (false)  		 {  			ConsoleLog.WriteLine (botinfo ["login"] + ": Upload avatar");  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			string Path = System.IO.Path.Combine (Globals.DataDir' "avatars");  			Path = System.IO.Path.Combine (Path' Globals.Avatars.GetRandomString ());  			Bot.Bot.UploadAvatar (System.IO.File.ReadAllBytes (Path)' Path);  			botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		}  	}  	catch (System.Exception e) {  		ConsoleLog.WriteLine ("Error uploading avatar: " + e.Message);  	}  	#endregion  }  finally {  	// Апдейтим статус бота в базе  	botinfo = Utils.TryToUpdateDbWithCurrentInfo (botinfo' Bot);  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: try {  	Bot.Bot.m_Client.Timeouts = 0;  	ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	#region Активируем' если в базе нет отметки что активен. Посещаем диснейленд в первый раз  	try {  		if (((int)botinfo ["activated"]) == 0) {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (2000' 5000));  			Bot.Bot.Activate ();  			botinfo ["activated"] = 1;  			Utils.UpdateDbWithCustomBotInfo (botinfo' "activated");  			botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  			ConsoleLog.WriteLine ("Visit 'Land' for the first time");  			Bot.Bot.VisitLand ((uint)botinfo ["citizen_id"]);  		}  	}  	catch (System.Exception e) {  		ConsoleLog.WriteLine ("Error activation: " + e.Message);  	}  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	// Смотрим состояние инвентаря  	if (Bot.GetStorageInfo (true)) {  		botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  	}  	#region Light mode. Light так light. НИЧЕГО не делаем' только собираем инфу и выходим  	if (mode == "light") {  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		Daily.BotLight (botinfo' Bot' rnd);  		return;  	}  	#endregion  	#region Покупаем и едим еду 1  	if (doFeed == 1)  		Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	#region Работаем' тренькаемся' читаем алерты' читаем статьи' смотрим TreasureMap  	//' учимся' отдыхаем  	List<int> lst = new List<int> ();  	lst.Add (1);  	lst.Add (2);  	lst.Add (3);  	lst.Add (4);  	lst = CommonUtils.MixList (lst);  	for (List<int>.Enumerator e = lst.GetEnumerator (); e.MoveNext ();) {  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		switch (e.Current) {  		case 1:  			// Работа  			for (int i = 1; i <= 3; i++) {  				try {  					Daily.BotWork (botinfo' Bot' rnd);  					break;  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot work error: " + e1.Message);  				}  			}  			break;  		case 2:  			// Тренька  			for (int i = 1; i <= 3; i++) {  				try {  					Daily.BotTrain (botinfo' Bot' rnd);  					break;  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot train error: " + e1.Message);  				}  			}  			break;  		case 3:  			// Аллерты  			try {  				Bot.Bot.LookAlerts ();  			}  			catch (System.Exception e1) {  				ConsoleLog.WriteLine ("Bot look alerts error: " + e1.Message);  			}  			break;  		case 4:  			// Статьи  			try {  				Bot.Bot.ReadRandomTopArticle ();  				//if (!Globals.BotConfig.useTOR) System.Threading.Thread.Sleep(rnd.Next(15000' 20000));  				Bot.Bot.ReadRandomTopArticle ();  			}  			catch (System.Exception e1) {  				ConsoleLog.WriteLine ("Bot read article error: " + e1.Message);  			}  			break;  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  	}  	#endregion  	#region Получаем дневной reward  	if (!Globals.BotConfig.useTOR)  		System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  	for (int i = 1; i <= 3; i++) {  		try {  			Bot.Bot.DailyReward ();  			break;  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Bot get daily reward error: " + e.Message);  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  	}  	#endregion  	#region Покупаем и едим еду 2  	if (doFeed == 2)  		Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	// Смотрим состояние инвентаря  	if (Bot.GetStorageInfo (true)) {  		botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  	}  	#region Грузим аватару' если не загружена  	try {  		//АВАТАРКА  		if (/*((int)botinfo["experience"] >= 61) && */(!Bot.Info.HasAvatar))//if (false)  		 {  			ConsoleLog.WriteLine (botinfo ["login"] + ": Upload avatar");  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			string Path = System.IO.Path.Combine (Globals.DataDir' "avatars");  			Path = System.IO.Path.Combine (Path' Globals.Avatars.GetRandomString ());  			Bot.Bot.UploadAvatar (System.IO.File.ReadAllBytes (Path)' Path);  			botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		}  	}  	catch (System.Exception e) {  		ConsoleLog.WriteLine ("Error uploading avatar: " + e.Message);  	}  	#endregion  }  finally {  	// Апдейтим статус бота в базе  	botinfo = Utils.TryToUpdateDbWithCurrentInfo (botinfo' Bot);  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: try {  	Bot.Bot.m_Client.Timeouts = 0;  	ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	#region Активируем' если в базе нет отметки что активен. Посещаем диснейленд в первый раз  	try {  		if (((int)botinfo ["activated"]) == 0) {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (2000' 5000));  			Bot.Bot.Activate ();  			botinfo ["activated"] = 1;  			Utils.UpdateDbWithCustomBotInfo (botinfo' "activated");  			botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  			ConsoleLog.WriteLine ("Visit 'Land' for the first time");  			Bot.Bot.VisitLand ((uint)botinfo ["citizen_id"]);  		}  	}  	catch (System.Exception e) {  		ConsoleLog.WriteLine ("Error activation: " + e.Message);  	}  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	// Смотрим состояние инвентаря  	if (Bot.GetStorageInfo (true)) {  		botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  	}  	#region Light mode. Light так light. НИЧЕГО не делаем' только собираем инфу и выходим  	if (mode == "light") {  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		Daily.BotLight (botinfo' Bot' rnd);  		return;  	}  	#endregion  	#region Покупаем и едим еду 1  	if (doFeed == 1)  		Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	#region Работаем' тренькаемся' читаем алерты' читаем статьи' смотрим TreasureMap  	//' учимся' отдыхаем  	List<int> lst = new List<int> ();  	lst.Add (1);  	lst.Add (2);  	lst.Add (3);  	lst.Add (4);  	lst = CommonUtils.MixList (lst);  	for (List<int>.Enumerator e = lst.GetEnumerator (); e.MoveNext ();) {  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		switch (e.Current) {  		case 1:  			// Работа  			for (int i = 1; i <= 3; i++) {  				try {  					Daily.BotWork (botinfo' Bot' rnd);  					break;  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot work error: " + e1.Message);  				}  			}  			break;  		case 2:  			// Тренька  			for (int i = 1; i <= 3; i++) {  				try {  					Daily.BotTrain (botinfo' Bot' rnd);  					break;  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot train error: " + e1.Message);  				}  			}  			break;  		case 3:  			// Аллерты  			try {  				Bot.Bot.LookAlerts ();  			}  			catch (System.Exception e1) {  				ConsoleLog.WriteLine ("Bot look alerts error: " + e1.Message);  			}  			break;  		case 4:  			// Статьи  			try {  				Bot.Bot.ReadRandomTopArticle ();  				//if (!Globals.BotConfig.useTOR) System.Threading.Thread.Sleep(rnd.Next(15000' 20000));  				Bot.Bot.ReadRandomTopArticle ();  			}  			catch (System.Exception e1) {  				ConsoleLog.WriteLine ("Bot read article error: " + e1.Message);  			}  			break;  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  	}  	#endregion  	#region Получаем дневной reward  	if (!Globals.BotConfig.useTOR)  		System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  	for (int i = 1; i <= 3; i++) {  		try {  			Bot.Bot.DailyReward ();  			break;  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Bot get daily reward error: " + e.Message);  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  	}  	#endregion  	#region Покупаем и едим еду 2  	if (doFeed == 2)  		Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	// Смотрим состояние инвентаря  	if (Bot.GetStorageInfo (true)) {  		botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  	}  	#region Грузим аватару' если не загружена  	try {  		//АВАТАРКА  		if (/*((int)botinfo["experience"] >= 61) && */(!Bot.Info.HasAvatar))//if (false)  		 {  			ConsoleLog.WriteLine (botinfo ["login"] + ": Upload avatar");  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			string Path = System.IO.Path.Combine (Globals.DataDir' "avatars");  			Path = System.IO.Path.Combine (Path' Globals.Avatars.GetRandomString ());  			Bot.Bot.UploadAvatar (System.IO.File.ReadAllBytes (Path)' Path);  			botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		}  	}  	catch (System.Exception e) {  		ConsoleLog.WriteLine ("Error uploading avatar: " + e.Message);  	}  	#endregion  }  finally {  	// Апдейтим статус бота в базе  	botinfo = Utils.TryToUpdateDbWithCurrentInfo (botinfo' Bot);  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: try {  	Bot.Bot.m_Client.Timeouts = 0;  	ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	#region Активируем' если в базе нет отметки что активен. Посещаем диснейленд в первый раз  	try {  		if (((int)botinfo ["activated"]) == 0) {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (2000' 5000));  			Bot.Bot.Activate ();  			botinfo ["activated"] = 1;  			Utils.UpdateDbWithCustomBotInfo (botinfo' "activated");  			botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  			ConsoleLog.WriteLine ("Visit 'Land' for the first time");  			Bot.Bot.VisitLand ((uint)botinfo ["citizen_id"]);  		}  	}  	catch (System.Exception e) {  		ConsoleLog.WriteLine ("Error activation: " + e.Message);  	}  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	// Смотрим состояние инвентаря  	if (Bot.GetStorageInfo (true)) {  		botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  	}  	#region Light mode. Light так light. НИЧЕГО не делаем' только собираем инфу и выходим  	if (mode == "light") {  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		Daily.BotLight (botinfo' Bot' rnd);  		return;  	}  	#endregion  	#region Покупаем и едим еду 1  	if (doFeed == 1)  		Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	#region Работаем' тренькаемся' читаем алерты' читаем статьи' смотрим TreasureMap  	//' учимся' отдыхаем  	List<int> lst = new List<int> ();  	lst.Add (1);  	lst.Add (2);  	lst.Add (3);  	lst.Add (4);  	lst = CommonUtils.MixList (lst);  	for (List<int>.Enumerator e = lst.GetEnumerator (); e.MoveNext ();) {  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		switch (e.Current) {  		case 1:  			// Работа  			for (int i = 1; i <= 3; i++) {  				try {  					Daily.BotWork (botinfo' Bot' rnd);  					break;  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot work error: " + e1.Message);  				}  			}  			break;  		case 2:  			// Тренька  			for (int i = 1; i <= 3; i++) {  				try {  					Daily.BotTrain (botinfo' Bot' rnd);  					break;  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot train error: " + e1.Message);  				}  			}  			break;  		case 3:  			// Аллерты  			try {  				Bot.Bot.LookAlerts ();  			}  			catch (System.Exception e1) {  				ConsoleLog.WriteLine ("Bot look alerts error: " + e1.Message);  			}  			break;  		case 4:  			// Статьи  			try {  				Bot.Bot.ReadRandomTopArticle ();  				//if (!Globals.BotConfig.useTOR) System.Threading.Thread.Sleep(rnd.Next(15000' 20000));  				Bot.Bot.ReadRandomTopArticle ();  			}  			catch (System.Exception e1) {  				ConsoleLog.WriteLine ("Bot read article error: " + e1.Message);  			}  			break;  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  	}  	#endregion  	#region Получаем дневной reward  	if (!Globals.BotConfig.useTOR)  		System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  	for (int i = 1; i <= 3; i++) {  		try {  			Bot.Bot.DailyReward ();  			break;  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Bot get daily reward error: " + e.Message);  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  	}  	#endregion  	#region Покупаем и едим еду 2  	if (doFeed == 2)  		Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	// Смотрим состояние инвентаря  	if (Bot.GetStorageInfo (true)) {  		botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  	}  	#region Грузим аватару' если не загружена  	try {  		//АВАТАРКА  		if (/*((int)botinfo["experience"] >= 61) && */(!Bot.Info.HasAvatar))//if (false)  		 {  			ConsoleLog.WriteLine (botinfo ["login"] + ": Upload avatar");  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			string Path = System.IO.Path.Combine (Globals.DataDir' "avatars");  			Path = System.IO.Path.Combine (Path' Globals.Avatars.GetRandomString ());  			Bot.Bot.UploadAvatar (System.IO.File.ReadAllBytes (Path)' Path);  			botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		}  	}  	catch (System.Exception e) {  		ConsoleLog.WriteLine ("Error uploading avatar: " + e.Message);  	}  	#endregion  }  finally {  	// Апдейтим статус бота в базе  	botinfo = Utils.TryToUpdateDbWithCurrentInfo (botinfo' Bot);  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: try {  	Bot.Bot.m_Client.Timeouts = 0;  	ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	#region Активируем' если в базе нет отметки что активен. Посещаем диснейленд в первый раз  	try {  		if (((int)botinfo ["activated"]) == 0) {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (2000' 5000));  			Bot.Bot.Activate ();  			botinfo ["activated"] = 1;  			Utils.UpdateDbWithCustomBotInfo (botinfo' "activated");  			botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  			ConsoleLog.WriteLine ("Visit 'Land' for the first time");  			Bot.Bot.VisitLand ((uint)botinfo ["citizen_id"]);  		}  	}  	catch (System.Exception e) {  		ConsoleLog.WriteLine ("Error activation: " + e.Message);  	}  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	// Смотрим состояние инвентаря  	if (Bot.GetStorageInfo (true)) {  		botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  	}  	#region Light mode. Light так light. НИЧЕГО не делаем' только собираем инфу и выходим  	if (mode == "light") {  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		Daily.BotLight (botinfo' Bot' rnd);  		return;  	}  	#endregion  	#region Покупаем и едим еду 1  	if (doFeed == 1)  		Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	#region Работаем' тренькаемся' читаем алерты' читаем статьи' смотрим TreasureMap  	//' учимся' отдыхаем  	List<int> lst = new List<int> ();  	lst.Add (1);  	lst.Add (2);  	lst.Add (3);  	lst.Add (4);  	lst = CommonUtils.MixList (lst);  	for (List<int>.Enumerator e = lst.GetEnumerator (); e.MoveNext ();) {  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		switch (e.Current) {  		case 1:  			// Работа  			for (int i = 1; i <= 3; i++) {  				try {  					Daily.BotWork (botinfo' Bot' rnd);  					break;  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot work error: " + e1.Message);  				}  			}  			break;  		case 2:  			// Тренька  			for (int i = 1; i <= 3; i++) {  				try {  					Daily.BotTrain (botinfo' Bot' rnd);  					break;  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot train error: " + e1.Message);  				}  			}  			break;  		case 3:  			// Аллерты  			try {  				Bot.Bot.LookAlerts ();  			}  			catch (System.Exception e1) {  				ConsoleLog.WriteLine ("Bot look alerts error: " + e1.Message);  			}  			break;  		case 4:  			// Статьи  			try {  				Bot.Bot.ReadRandomTopArticle ();  				//if (!Globals.BotConfig.useTOR) System.Threading.Thread.Sleep(rnd.Next(15000' 20000));  				Bot.Bot.ReadRandomTopArticle ();  			}  			catch (System.Exception e1) {  				ConsoleLog.WriteLine ("Bot read article error: " + e1.Message);  			}  			break;  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  	}  	#endregion  	#region Получаем дневной reward  	if (!Globals.BotConfig.useTOR)  		System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  	for (int i = 1; i <= 3; i++) {  		try {  			Bot.Bot.DailyReward ();  			break;  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Bot get daily reward error: " + e.Message);  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  	}  	#endregion  	#region Покупаем и едим еду 2  	if (doFeed == 2)  		Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	// Смотрим состояние инвентаря  	if (Bot.GetStorageInfo (true)) {  		botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  	}  	#region Грузим аватару' если не загружена  	try {  		//АВАТАРКА  		if (/*((int)botinfo["experience"] >= 61) && */(!Bot.Info.HasAvatar))//if (false)  		 {  			ConsoleLog.WriteLine (botinfo ["login"] + ": Upload avatar");  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			string Path = System.IO.Path.Combine (Globals.DataDir' "avatars");  			Path = System.IO.Path.Combine (Path' Globals.Avatars.GetRandomString ());  			Bot.Bot.UploadAvatar (System.IO.File.ReadAllBytes (Path)' Path);  			botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		}  	}  	catch (System.Exception e) {  		ConsoleLog.WriteLine ("Error uploading avatar: " + e.Message);  	}  	#endregion  }  finally {  	// Апдейтим статус бота в базе  	botinfo = Utils.TryToUpdateDbWithCurrentInfo (botinfo' Bot);  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: try {  	Bot.Bot.m_Client.Timeouts = 0;  	ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	#region Активируем' если в базе нет отметки что активен. Посещаем диснейленд в первый раз  	try {  		if (((int)botinfo ["activated"]) == 0) {  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (2000' 5000));  			Bot.Bot.Activate ();  			botinfo ["activated"] = 1;  			Utils.UpdateDbWithCustomBotInfo (botinfo' "activated");  			botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  			ConsoleLog.WriteLine ("Visit 'Land' for the first time");  			Bot.Bot.VisitLand ((uint)botinfo ["citizen_id"]);  		}  	}  	catch (System.Exception e) {  		ConsoleLog.WriteLine ("Error activation: " + e.Message);  	}  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	// Смотрим состояние инвентаря  	if (Bot.GetStorageInfo (true)) {  		botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  	}  	#region Light mode. Light так light. НИЧЕГО не делаем' только собираем инфу и выходим  	if (mode == "light") {  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		Daily.BotLight (botinfo' Bot' rnd);  		return;  	}  	#endregion  	#region Покупаем и едим еду 1  	if (doFeed == 1)  		Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	#region Работаем' тренькаемся' читаем алерты' читаем статьи' смотрим TreasureMap  	//' учимся' отдыхаем  	List<int> lst = new List<int> ();  	lst.Add (1);  	lst.Add (2);  	lst.Add (3);  	lst.Add (4);  	lst = CommonUtils.MixList (lst);  	for (List<int>.Enumerator e = lst.GetEnumerator (); e.MoveNext ();) {  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		switch (e.Current) {  		case 1:  			// Работа  			for (int i = 1; i <= 3; i++) {  				try {  					Daily.BotWork (botinfo' Bot' rnd);  					break;  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot work error: " + e1.Message);  				}  			}  			break;  		case 2:  			// Тренька  			for (int i = 1; i <= 3; i++) {  				try {  					Daily.BotTrain (botinfo' Bot' rnd);  					break;  				}  				catch (System.Exception e1) {  					ConsoleLog.WriteLine ("Bot train error: " + e1.Message);  				}  			}  			break;  		case 3:  			// Аллерты  			try {  				Bot.Bot.LookAlerts ();  			}  			catch (System.Exception e1) {  				ConsoleLog.WriteLine ("Bot look alerts error: " + e1.Message);  			}  			break;  		case 4:  			// Статьи  			try {  				Bot.Bot.ReadRandomTopArticle ();  				//if (!Globals.BotConfig.useTOR) System.Threading.Thread.Sleep(rnd.Next(15000' 20000));  				Bot.Bot.ReadRandomTopArticle ();  			}  			catch (System.Exception e1) {  				ConsoleLog.WriteLine ("Bot read article error: " + e1.Message);  			}  			break;  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  	}  	#endregion  	#region Получаем дневной reward  	if (!Globals.BotConfig.useTOR)  		System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  	for (int i = 1; i <= 3; i++) {  		try {  			Bot.Bot.DailyReward ();  			break;  		}  		catch (System.Exception e) {  			ConsoleLog.WriteLine ("Bot get daily reward error: " + e.Message);  		}  		if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  			throw new Exception ("Timeout limit reached.");  	}  	#endregion  	#region Покупаем и едим еду 2  	if (doFeed == 2)  		Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  	#endregion  	// Смотрим состояние инвентаря  	if (Bot.GetStorageInfo (true)) {  		botinfo = Utils.TryToUpdateDbWithStorageInfo (botinfo' Bot);  	}  	#region Грузим аватару' если не загружена  	try {  		//АВАТАРКА  		if (/*((int)botinfo["experience"] >= 61) && */(!Bot.Info.HasAvatar))//if (false)  		 {  			ConsoleLog.WriteLine (botinfo ["login"] + ": Upload avatar");  			if (!Globals.BotConfig.useTOR)  				System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  			string Path = System.IO.Path.Combine (Globals.DataDir' "avatars");  			Path = System.IO.Path.Combine (Path' Globals.Avatars.GetRandomString ());  			Bot.Bot.UploadAvatar (System.IO.File.ReadAllBytes (Path)' Path);  			botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		}  	}  	catch (System.Exception e) {  		ConsoleLog.WriteLine ("Error uploading avatar: " + e.Message);  	}  	#endregion  }  finally {  	// Апдейтим статус бота в базе  	botinfo = Utils.TryToUpdateDbWithCurrentInfo (botinfo' Bot);  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: try {  	if (((int)botinfo ["activated"]) == 0) {  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (2000' 5000));  		Bot.Bot.Activate ();  		botinfo ["activated"] = 1;  		Utils.UpdateDbWithCustomBotInfo (botinfo' "activated");  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		ConsoleLog.WriteLine ("Visit 'Land' for the first time");  		Bot.Bot.VisitLand ((uint)botinfo ["citizen_id"]);  	}  }  catch (System.Exception e) {  	ConsoleLog.WriteLine ("Error activation: " + e.Message);  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: try {  	if (((int)botinfo ["activated"]) == 0) {  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (2000' 5000));  		Bot.Bot.Activate ();  		botinfo ["activated"] = 1;  		Utils.UpdateDbWithCustomBotInfo (botinfo' "activated");  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		ConsoleLog.WriteLine ("Visit 'Land' for the first time");  		Bot.Bot.VisitLand ((uint)botinfo ["citizen_id"]);  	}  }  catch (System.Exception e) {  	ConsoleLog.WriteLine ("Error activation: " + e.Message);  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: if (((int)botinfo ["activated"]) == 0) {  	if (!Globals.BotConfig.useTOR)  		System.Threading.Thread.Sleep (rnd.Next (2000' 5000));  	Bot.Bot.Activate ();  	botinfo ["activated"] = 1;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "activated");  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	ConsoleLog.WriteLine ("Visit 'Land' for the first time");  	Bot.Bot.VisitLand ((uint)botinfo ["citizen_id"]);  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: if (((int)botinfo ["activated"]) == 0) {  	if (!Globals.BotConfig.useTOR)  		System.Threading.Thread.Sleep (rnd.Next (2000' 5000));  	Bot.Bot.Activate ();  	botinfo ["activated"] = 1;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "activated");  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	ConsoleLog.WriteLine ("Visit 'Land' for the first time");  	Bot.Bot.VisitLand ((uint)botinfo ["citizen_id"]);  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: if (!Globals.BotConfig.useTOR)  	System.Threading.Thread.Sleep (rnd.Next (2000' 5000));  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: if (!Globals.BotConfig.useTOR)  	System.Threading.Thread.Sleep (rnd.Next (2000' 5000));  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: System.Threading.Thread.Sleep (rnd.Next (2000' 5000));  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: System.Threading.Thread.Sleep (rnd.Next (2000' 5000));  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: if (mode == "light") {  	if (!Globals.BotConfig.useTOR)  		System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  	Daily.BotLight (botinfo' Bot' rnd);  	return;  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: if (mode == "light") {  	if (!Globals.BotConfig.useTOR)  		System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  	Daily.BotLight (botinfo' Bot' rnd);  	return;  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: if (!Globals.BotConfig.useTOR)  	System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: if (!Globals.BotConfig.useTOR)  	System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: if (doFeed == 1)  	Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: lst.Add (2);  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: lst.Add (3);  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: lst.Add (4);  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: for (List<int>.Enumerator e = lst.GetEnumerator (); e.MoveNext ();) {  	if (!Globals.BotConfig.useTOR)  		System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  	switch (e.Current) {  	case 1:  		// Работа  		for (int i = 1; i <= 3; i++) {  			try {  				Daily.BotWork (botinfo' Bot' rnd);  				break;  			}  			catch (System.Exception e1) {  				ConsoleLog.WriteLine ("Bot work error: " + e1.Message);  			}  		}  		break;  	case 2:  		// Тренька  		for (int i = 1; i <= 3; i++) {  			try {  				Daily.BotTrain (botinfo' Bot' rnd);  				break;  			}  			catch (System.Exception e1) {  				ConsoleLog.WriteLine ("Bot train error: " + e1.Message);  			}  		}  		break;  	case 3:  		// Аллерты  		try {  			Bot.Bot.LookAlerts ();  		}  		catch (System.Exception e1) {  			ConsoleLog.WriteLine ("Bot look alerts error: " + e1.Message);  		}  		break;  	case 4:  		// Статьи  		try {  			Bot.Bot.ReadRandomTopArticle ();  			//if (!Globals.BotConfig.useTOR) System.Threading.Thread.Sleep(rnd.Next(15000' 20000));  			Bot.Bot.ReadRandomTopArticle ();  		}  		catch (System.Exception e1) {  			ConsoleLog.WriteLine ("Bot read article error: " + e1.Message);  		}  		break;  	}  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: for (List<int>.Enumerator e = lst.GetEnumerator (); e.MoveNext ();) {  	if (!Globals.BotConfig.useTOR)  		System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  	switch (e.Current) {  	case 1:  		// Работа  		for (int i = 1; i <= 3; i++) {  			try {  				Daily.BotWork (botinfo' Bot' rnd);  				break;  			}  			catch (System.Exception e1) {  				ConsoleLog.WriteLine ("Bot work error: " + e1.Message);  			}  		}  		break;  	case 2:  		// Тренька  		for (int i = 1; i <= 3; i++) {  			try {  				Daily.BotTrain (botinfo' Bot' rnd);  				break;  			}  			catch (System.Exception e1) {  				ConsoleLog.WriteLine ("Bot train error: " + e1.Message);  			}  		}  		break;  	case 3:  		// Аллерты  		try {  			Bot.Bot.LookAlerts ();  		}  		catch (System.Exception e1) {  			ConsoleLog.WriteLine ("Bot look alerts error: " + e1.Message);  		}  		break;  	case 4:  		// Статьи  		try {  			Bot.Bot.ReadRandomTopArticle ();  			//if (!Globals.BotConfig.useTOR) System.Threading.Thread.Sleep(rnd.Next(15000' 20000));  			Bot.Bot.ReadRandomTopArticle ();  		}  		catch (System.Exception e1) {  			ConsoleLog.WriteLine ("Bot read article error: " + e1.Message);  		}  		break;  	}  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: for (List<int>.Enumerator e = lst.GetEnumerator (); e.MoveNext ();) {  	if (!Globals.BotConfig.useTOR)  		System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  	switch (e.Current) {  	case 1:  		// Работа  		for (int i = 1; i <= 3; i++) {  			try {  				Daily.BotWork (botinfo' Bot' rnd);  				break;  			}  			catch (System.Exception e1) {  				ConsoleLog.WriteLine ("Bot work error: " + e1.Message);  			}  		}  		break;  	case 2:  		// Тренька  		for (int i = 1; i <= 3; i++) {  			try {  				Daily.BotTrain (botinfo' Bot' rnd);  				break;  			}  			catch (System.Exception e1) {  				ConsoleLog.WriteLine ("Bot train error: " + e1.Message);  			}  		}  		break;  	case 3:  		// Аллерты  		try {  			Bot.Bot.LookAlerts ();  		}  		catch (System.Exception e1) {  			ConsoleLog.WriteLine ("Bot look alerts error: " + e1.Message);  		}  		break;  	case 4:  		// Статьи  		try {  			Bot.Bot.ReadRandomTopArticle ();  			//if (!Globals.BotConfig.useTOR) System.Threading.Thread.Sleep(rnd.Next(15000' 20000));  			Bot.Bot.ReadRandomTopArticle ();  		}  		catch (System.Exception e1) {  			ConsoleLog.WriteLine ("Bot read article error: " + e1.Message);  		}  		break;  	}  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: for (List<int>.Enumerator e = lst.GetEnumerator (); e.MoveNext ();) {  	if (!Globals.BotConfig.useTOR)  		System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  	switch (e.Current) {  	case 1:  		// Работа  		for (int i = 1; i <= 3; i++) {  			try {  				Daily.BotWork (botinfo' Bot' rnd);  				break;  			}  			catch (System.Exception e1) {  				ConsoleLog.WriteLine ("Bot work error: " + e1.Message);  			}  		}  		break;  	case 2:  		// Тренька  		for (int i = 1; i <= 3; i++) {  			try {  				Daily.BotTrain (botinfo' Bot' rnd);  				break;  			}  			catch (System.Exception e1) {  				ConsoleLog.WriteLine ("Bot train error: " + e1.Message);  			}  		}  		break;  	case 3:  		// Аллерты  		try {  			Bot.Bot.LookAlerts ();  		}  		catch (System.Exception e1) {  			ConsoleLog.WriteLine ("Bot look alerts error: " + e1.Message);  		}  		break;  	case 4:  		// Статьи  		try {  			Bot.Bot.ReadRandomTopArticle ();  			//if (!Globals.BotConfig.useTOR) System.Threading.Thread.Sleep(rnd.Next(15000' 20000));  			Bot.Bot.ReadRandomTopArticle ();  		}  		catch (System.Exception e1) {  			ConsoleLog.WriteLine ("Bot read article error: " + e1.Message);  		}  		break;  	}  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: for (List<int>.Enumerator e = lst.GetEnumerator (); e.MoveNext ();) {  	if (!Globals.BotConfig.useTOR)  		System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  	switch (e.Current) {  	case 1:  		// Работа  		for (int i = 1; i <= 3; i++) {  			try {  				Daily.BotWork (botinfo' Bot' rnd);  				break;  			}  			catch (System.Exception e1) {  				ConsoleLog.WriteLine ("Bot work error: " + e1.Message);  			}  		}  		break;  	case 2:  		// Тренька  		for (int i = 1; i <= 3; i++) {  			try {  				Daily.BotTrain (botinfo' Bot' rnd);  				break;  			}  			catch (System.Exception e1) {  				ConsoleLog.WriteLine ("Bot train error: " + e1.Message);  			}  		}  		break;  	case 3:  		// Аллерты  		try {  			Bot.Bot.LookAlerts ();  		}  		catch (System.Exception e1) {  			ConsoleLog.WriteLine ("Bot look alerts error: " + e1.Message);  		}  		break;  	case 4:  		// Статьи  		try {  			Bot.Bot.ReadRandomTopArticle ();  			//if (!Globals.BotConfig.useTOR) System.Threading.Thread.Sleep(rnd.Next(15000' 20000));  			Bot.Bot.ReadRandomTopArticle ();  		}  		catch (System.Exception e1) {  			ConsoleLog.WriteLine ("Bot read article error: " + e1.Message);  		}  		break;  	}  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: for (List<int>.Enumerator e = lst.GetEnumerator (); e.MoveNext ();) {  	if (!Globals.BotConfig.useTOR)  		System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  	switch (e.Current) {  	case 1:  		// Работа  		for (int i = 1; i <= 3; i++) {  			try {  				Daily.BotWork (botinfo' Bot' rnd);  				break;  			}  			catch (System.Exception e1) {  				ConsoleLog.WriteLine ("Bot work error: " + e1.Message);  			}  		}  		break;  	case 2:  		// Тренька  		for (int i = 1; i <= 3; i++) {  			try {  				Daily.BotTrain (botinfo' Bot' rnd);  				break;  			}  			catch (System.Exception e1) {  				ConsoleLog.WriteLine ("Bot train error: " + e1.Message);  			}  		}  		break;  	case 3:  		// Аллерты  		try {  			Bot.Bot.LookAlerts ();  		}  		catch (System.Exception e1) {  			ConsoleLog.WriteLine ("Bot look alerts error: " + e1.Message);  		}  		break;  	case 4:  		// Статьи  		try {  			Bot.Bot.ReadRandomTopArticle ();  			//if (!Globals.BotConfig.useTOR) System.Threading.Thread.Sleep(rnd.Next(15000' 20000));  			Bot.Bot.ReadRandomTopArticle ();  		}  		catch (System.Exception e1) {  			ConsoleLog.WriteLine ("Bot read article error: " + e1.Message);  		}  		break;  	}  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: for (List<int>.Enumerator e = lst.GetEnumerator (); e.MoveNext ();) {  	if (!Globals.BotConfig.useTOR)  		System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  	switch (e.Current) {  	case 1:  		// Работа  		for (int i = 1; i <= 3; i++) {  			try {  				Daily.BotWork (botinfo' Bot' rnd);  				break;  			}  			catch (System.Exception e1) {  				ConsoleLog.WriteLine ("Bot work error: " + e1.Message);  			}  		}  		break;  	case 2:  		// Тренька  		for (int i = 1; i <= 3; i++) {  			try {  				Daily.BotTrain (botinfo' Bot' rnd);  				break;  			}  			catch (System.Exception e1) {  				ConsoleLog.WriteLine ("Bot train error: " + e1.Message);  			}  		}  		break;  	case 3:  		// Аллерты  		try {  			Bot.Bot.LookAlerts ();  		}  		catch (System.Exception e1) {  			ConsoleLog.WriteLine ("Bot look alerts error: " + e1.Message);  		}  		break;  	case 4:  		// Статьи  		try {  			Bot.Bot.ReadRandomTopArticle ();  			//if (!Globals.BotConfig.useTOR) System.Threading.Thread.Sleep(rnd.Next(15000' 20000));  			Bot.Bot.ReadRandomTopArticle ();  		}  		catch (System.Exception e1) {  			ConsoleLog.WriteLine ("Bot read article error: " + e1.Message);  		}  		break;  	}  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: if (!Globals.BotConfig.useTOR)  	System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: if (!Globals.BotConfig.useTOR)  	System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: switch (e.Current) {  case 1:  	// Работа  	for (int i = 1; i <= 3; i++) {  		try {  			Daily.BotWork (botinfo' Bot' rnd);  			break;  		}  		catch (System.Exception e1) {  			ConsoleLog.WriteLine ("Bot work error: " + e1.Message);  		}  	}  	break;  case 2:  	// Тренька  	for (int i = 1; i <= 3; i++) {  		try {  			Daily.BotTrain (botinfo' Bot' rnd);  			break;  		}  		catch (System.Exception e1) {  			ConsoleLog.WriteLine ("Bot train error: " + e1.Message);  		}  	}  	break;  case 3:  	// Аллерты  	try {  		Bot.Bot.LookAlerts ();  	}  	catch (System.Exception e1) {  		ConsoleLog.WriteLine ("Bot look alerts error: " + e1.Message);  	}  	break;  case 4:  	// Статьи  	try {  		Bot.Bot.ReadRandomTopArticle ();  		//if (!Globals.BotConfig.useTOR) System.Threading.Thread.Sleep(rnd.Next(15000' 20000));  		Bot.Bot.ReadRandomTopArticle ();  	}  	catch (System.Exception e1) {  		ConsoleLog.WriteLine ("Bot read article error: " + e1.Message);  	}  	break;  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: switch (e.Current) {  case 1:  	// Работа  	for (int i = 1; i <= 3; i++) {  		try {  			Daily.BotWork (botinfo' Bot' rnd);  			break;  		}  		catch (System.Exception e1) {  			ConsoleLog.WriteLine ("Bot work error: " + e1.Message);  		}  	}  	break;  case 2:  	// Тренька  	for (int i = 1; i <= 3; i++) {  		try {  			Daily.BotTrain (botinfo' Bot' rnd);  			break;  		}  		catch (System.Exception e1) {  			ConsoleLog.WriteLine ("Bot train error: " + e1.Message);  		}  	}  	break;  case 3:  	// Аллерты  	try {  		Bot.Bot.LookAlerts ();  	}  	catch (System.Exception e1) {  		ConsoleLog.WriteLine ("Bot look alerts error: " + e1.Message);  	}  	break;  case 4:  	// Статьи  	try {  		Bot.Bot.ReadRandomTopArticle ();  		//if (!Globals.BotConfig.useTOR) System.Threading.Thread.Sleep(rnd.Next(15000' 20000));  		Bot.Bot.ReadRandomTopArticle ();  	}  	catch (System.Exception e1) {  		ConsoleLog.WriteLine ("Bot read article error: " + e1.Message);  	}  	break;  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: switch (e.Current) {  case 1:  	// Работа  	for (int i = 1; i <= 3; i++) {  		try {  			Daily.BotWork (botinfo' Bot' rnd);  			break;  		}  		catch (System.Exception e1) {  			ConsoleLog.WriteLine ("Bot work error: " + e1.Message);  		}  	}  	break;  case 2:  	// Тренька  	for (int i = 1; i <= 3; i++) {  		try {  			Daily.BotTrain (botinfo' Bot' rnd);  			break;  		}  		catch (System.Exception e1) {  			ConsoleLog.WriteLine ("Bot train error: " + e1.Message);  		}  	}  	break;  case 3:  	// Аллерты  	try {  		Bot.Bot.LookAlerts ();  	}  	catch (System.Exception e1) {  		ConsoleLog.WriteLine ("Bot look alerts error: " + e1.Message);  	}  	break;  case 4:  	// Статьи  	try {  		Bot.Bot.ReadRandomTopArticle ();  		//if (!Globals.BotConfig.useTOR) System.Threading.Thread.Sleep(rnd.Next(15000' 20000));  		Bot.Bot.ReadRandomTopArticle ();  	}  	catch (System.Exception e1) {  		ConsoleLog.WriteLine ("Bot read article error: " + e1.Message);  	}  	break;  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: switch (e.Current) {  case 1:  	// Работа  	for (int i = 1; i <= 3; i++) {  		try {  			Daily.BotWork (botinfo' Bot' rnd);  			break;  		}  		catch (System.Exception e1) {  			ConsoleLog.WriteLine ("Bot work error: " + e1.Message);  		}  	}  	break;  case 2:  	// Тренька  	for (int i = 1; i <= 3; i++) {  		try {  			Daily.BotTrain (botinfo' Bot' rnd);  			break;  		}  		catch (System.Exception e1) {  			ConsoleLog.WriteLine ("Bot train error: " + e1.Message);  		}  	}  	break;  case 3:  	// Аллерты  	try {  		Bot.Bot.LookAlerts ();  	}  	catch (System.Exception e1) {  		ConsoleLog.WriteLine ("Bot look alerts error: " + e1.Message);  	}  	break;  case 4:  	// Статьи  	try {  		Bot.Bot.ReadRandomTopArticle ();  		//if (!Globals.BotConfig.useTOR) System.Threading.Thread.Sleep(rnd.Next(15000' 20000));  		Bot.Bot.ReadRandomTopArticle ();  	}  	catch (System.Exception e1) {  		ConsoleLog.WriteLine ("Bot read article error: " + e1.Message);  	}  	break;  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: switch (e.Current) {  case 1:  	// Работа  	for (int i = 1; i <= 3; i++) {  		try {  			Daily.BotWork (botinfo' Bot' rnd);  			break;  		}  		catch (System.Exception e1) {  			ConsoleLog.WriteLine ("Bot work error: " + e1.Message);  		}  	}  	break;  case 2:  	// Тренька  	for (int i = 1; i <= 3; i++) {  		try {  			Daily.BotTrain (botinfo' Bot' rnd);  			break;  		}  		catch (System.Exception e1) {  			ConsoleLog.WriteLine ("Bot train error: " + e1.Message);  		}  	}  	break;  case 3:  	// Аллерты  	try {  		Bot.Bot.LookAlerts ();  	}  	catch (System.Exception e1) {  		ConsoleLog.WriteLine ("Bot look alerts error: " + e1.Message);  	}  	break;  case 4:  	// Статьи  	try {  		Bot.Bot.ReadRandomTopArticle ();  		//if (!Globals.BotConfig.useTOR) System.Threading.Thread.Sleep(rnd.Next(15000' 20000));  		Bot.Bot.ReadRandomTopArticle ();  	}  	catch (System.Exception e1) {  		ConsoleLog.WriteLine ("Bot read article error: " + e1.Message);  	}  	break;  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: for (int i = 1; i <= 3; i++) {  	try {  		Daily.BotWork (botinfo' Bot' rnd);  		break;  	}  	catch (System.Exception e1) {  		ConsoleLog.WriteLine ("Bot work error: " + e1.Message);  	}  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: for (int i = 1; i <= 3; i++) {  	try {  		Daily.BotTrain (botinfo' Bot' rnd);  		break;  	}  	catch (System.Exception e1) {  		ConsoleLog.WriteLine ("Bot train error: " + e1.Message);  	}  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: if (!Globals.BotConfig.useTOR)  	System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: if (!Globals.BotConfig.useTOR)  	System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: for (int i = 1; i <= 3; i++) {  	try {  		Bot.Bot.DailyReward ();  		break;  	}  	catch (System.Exception e) {  		ConsoleLog.WriteLine ("Bot get daily reward error: " + e.Message);  	}  	if (Bot.Bot.m_Client.Timeouts >= Globals.timeoutsLimit)  		throw new Exception ("Timeout limit reached.");  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: if (doFeed == 2)  	Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: if (doFeed == 2)  	Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: Bot.Feed (!Globals.BotConfig.useTOR' (int)botinfo ["country"]' Globals.defaultFoodQ' 99' true' true);  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: try {  	//АВАТАРКА  	if (/*((int)botinfo["experience"] >= 61) && */(!Bot.Info.HasAvatar))//if (false)  	 {  		ConsoleLog.WriteLine (botinfo ["login"] + ": Upload avatar");  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		string Path = System.IO.Path.Combine (Globals.DataDir' "avatars");  		Path = System.IO.Path.Combine (Path' Globals.Avatars.GetRandomString ());  		Bot.Bot.UploadAvatar (System.IO.File.ReadAllBytes (Path)' Path);  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	}  }  catch (System.Exception e) {  	ConsoleLog.WriteLine ("Error uploading avatar: " + e.Message);  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: try {  	//АВАТАРКА  	if (/*((int)botinfo["experience"] >= 61) && */(!Bot.Info.HasAvatar))//if (false)  	 {  		ConsoleLog.WriteLine (botinfo ["login"] + ": Upload avatar");  		if (!Globals.BotConfig.useTOR)  			System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  		string Path = System.IO.Path.Combine (Globals.DataDir' "avatars");  		Path = System.IO.Path.Combine (Path' Globals.Avatars.GetRandomString ());  		Bot.Bot.UploadAvatar (System.IO.File.ReadAllBytes (Path)' Path);  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	}  }  catch (System.Exception e) {  	ConsoleLog.WriteLine ("Error uploading avatar: " + e.Message);  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: if (/*((int)botinfo["experience"] >= 61) && */(!Bot.Info.HasAvatar))//if (false)   {  	ConsoleLog.WriteLine (botinfo ["login"] + ": Upload avatar");  	if (!Globals.BotConfig.useTOR)  		System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  	string Path = System.IO.Path.Combine (Globals.DataDir' "avatars");  	Path = System.IO.Path.Combine (Path' Globals.Avatars.GetRandomString ());  	Bot.Bot.UploadAvatar (System.IO.File.ReadAllBytes (Path)' Path);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: if (/*((int)botinfo["experience"] >= 61) && */(!Bot.Info.HasAvatar))//if (false)   {  	ConsoleLog.WriteLine (botinfo ["login"] + ": Upload avatar");  	if (!Globals.BotConfig.useTOR)  		System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  	string Path = System.IO.Path.Combine (Globals.DataDir' "avatars");  	Path = System.IO.Path.Combine (Path' Globals.Avatars.GetRandomString ());  	Bot.Bot.UploadAvatar (System.IO.File.ReadAllBytes (Path)' Path);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: if (!Globals.BotConfig.useTOR)  	System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: if (!Globals.BotConfig.useTOR)  	System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: System.Threading.Thread.Sleep (rnd.Next (1000' 2000));  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following statement contains a magic number: botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,GetCurrencyAmount,The following statement contains a magic number: if ((FromCurrency == lToCurrency) || (lToCurrency == 0)) {  	// Если одинаковая валюта -- подсовываем либо RON (если FromCurrency не RON' либо RSD)  	lToCurrency = (lToCurrency == 1 ? 65 : 1);  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,GetCurrencyAmount,The following statement contains a magic number: lToCurrency = (lToCurrency == 1 ? 65 : 1);  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,WorkerBuyFromOffer,The following statement contains a magic number: if (args.Length != 9) {  	ConsoleLog.WriteLine ("Usage: buymoneyfromoffer group offer_id fromwhom_id how_much curr_for_sell_id curr_for_buy_id exp_from exp_to");  	return;  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,WorkerBuyFromOffer,The following statement contains a magic number: int.TryParse (args [2]' out iOffer);  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,WorkerBuyFromOffer,The following statement contains a magic number: int.TryParse (args [3]' out iCorrespondentID);  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,WorkerBuyFromOffer,The following statement contains a magic number: double.TryParse (args [4]' out dHowMuch);  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,WorkerBuyFromOffer,The following statement contains a magic number: int.TryParse (args [5]' out iCurrencySpendID);  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,WorkerBuyFromOffer,The following statement contains a magic number: int.TryParse (args [6]' out iCurrencyBuyID);  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,WorkerBuyFromOffer,The following statement contains a magic number: int.TryParse (args [7]' out iExpFrom);  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,WorkerBuyFromOffer,The following statement contains a magic number: int.TryParse (args [8]' out iExpTo);  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,WorkerBuyFromOffer,The following statement contains a magic number: if (iExpTo == 0)  	iExpTo = 99999;  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,WorkerBuyFromOffer,The following statement contains a magic number: iExpTo = 99999;  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,WorkerBuyFromOffer,The following statement contains a magic number: lock (Globals.DBLocker) {  	Globals.Database.Reset ();  	if (group.ToLower () != "all")  		Globals.Database.Where ("group"' group);  	Globals.Database.Where ("banned"' 0);  	Globals.Database.Where ("happiness"' 0);  	if (iCurrencySpendID == 62)  		Globals.Database.Where ("(gold > 0)");  	Globals.Database.Where ("(experience >= " + iExpFrom.ToString () + ")");  	Globals.Database.Where ("(experience <= " + iExpTo.ToString () + ")");  	if (!String.IsNullOrEmpty (Globals.addWhere))  		Globals.Database.Where (Globals.addWhere);  	bots = Globals.Database.Select ("bots");  	Globals.Database.Reset ();  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,WorkerBuyFromOffer,The following statement contains a magic number: if (iCurrencySpendID == 62)  	Globals.Database.Where ("(gold > 0)");  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcBuyFromOffer,The following statement contains a magic number: try {  	NerZul.Core.Utils.ManagedCitizen Bot = new NerZul.Core.Utils.ManagedCitizen ((string)botinfo ["login"]' (string)botinfo ["email"]' (string)botinfo ["password"]' Globals.BotConfig);  	ManagedCitizen.LoginResult loginResult = Bot.Login ();  	if (loginResult == ManagedCitizen.LoginResult.Success) {  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  		if (iCorrespondentID == Convert.ToInt32 ((uint)botinfo ["citizen_id"])) {  			ConsoleLog.WriteLine ("Cannot buy from the same account' exiting");  			return;  		}  		for (int i = 1; i <= 10; i++) {  			try {  				double lHowMuch = dHowMuch;  				ConsoleLog.WriteLine ("BuyFromOffer money' try " + i.ToString ());  				if (lHowMuch == 0) {  					int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  					if (tmpRemains == -1)  						continue;  					lHowMuch = tmpRemains * 0.001 - 0.01;  				}  				if (lHowMuch < 0.02) {  					ConsoleLog.WriteLine ("Nothing to drain");  					break;  				}  				lHowMuch = Math.Truncate (lHowMuch * 100) / 100;  				ConsoleLog.WriteLine ("Buy " + lHowMuch.ToString () + " currency");  				if (Bot.Bot.BuyMoney (iOffer' lHowMuch' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  					//ConsoleLog.WriteLine(botinfo["login"] + ": Gold drained. Waiting for 1 minute.");  					ConsoleLog.WriteLine (botinfo ["login"] + ": Gold drained.");  				}  				else {  					//                                ConsoleLog.WriteLine(botinfo["login"] + ": Gold drain failed. Waiting for 1 minute.");  					ConsoleLog.WriteLine (botinfo ["login"] + ": Gold drain failed.");  				}  				// Если сливаем нац. валюту -- обновляем инфу  				if (iCurrencySpendID == (int)botinfo ["country"])  					Bot.GetInfoFromCommonResponse (true);  				//System.Threading.Thread.Sleep(60000);  				if (dHowMuch != 0)  					break;  			}  			catch (System.Exception localE) {  				ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  			}  		}  		// Logout  		Bot.Bot.Logout ();  	}  	else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  		botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  		Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  	}  	else {  		//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  		ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  	}  }  catch (System.Exception e) {  	ConsoleLog.WriteLine ("BuyFromOffer exception: " + e.Message);  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcBuyFromOffer,The following statement contains a magic number: try {  	NerZul.Core.Utils.ManagedCitizen Bot = new NerZul.Core.Utils.ManagedCitizen ((string)botinfo ["login"]' (string)botinfo ["email"]' (string)botinfo ["password"]' Globals.BotConfig);  	ManagedCitizen.LoginResult loginResult = Bot.Login ();  	if (loginResult == ManagedCitizen.LoginResult.Success) {  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  		if (iCorrespondentID == Convert.ToInt32 ((uint)botinfo ["citizen_id"])) {  			ConsoleLog.WriteLine ("Cannot buy from the same account' exiting");  			return;  		}  		for (int i = 1; i <= 10; i++) {  			try {  				double lHowMuch = dHowMuch;  				ConsoleLog.WriteLine ("BuyFromOffer money' try " + i.ToString ());  				if (lHowMuch == 0) {  					int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  					if (tmpRemains == -1)  						continue;  					lHowMuch = tmpRemains * 0.001 - 0.01;  				}  				if (lHowMuch < 0.02) {  					ConsoleLog.WriteLine ("Nothing to drain");  					break;  				}  				lHowMuch = Math.Truncate (lHowMuch * 100) / 100;  				ConsoleLog.WriteLine ("Buy " + lHowMuch.ToString () + " currency");  				if (Bot.Bot.BuyMoney (iOffer' lHowMuch' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  					//ConsoleLog.WriteLine(botinfo["login"] + ": Gold drained. Waiting for 1 minute.");  					ConsoleLog.WriteLine (botinfo ["login"] + ": Gold drained.");  				}  				else {  					//                                ConsoleLog.WriteLine(botinfo["login"] + ": Gold drain failed. Waiting for 1 minute.");  					ConsoleLog.WriteLine (botinfo ["login"] + ": Gold drain failed.");  				}  				// Если сливаем нац. валюту -- обновляем инфу  				if (iCurrencySpendID == (int)botinfo ["country"])  					Bot.GetInfoFromCommonResponse (true);  				//System.Threading.Thread.Sleep(60000);  				if (dHowMuch != 0)  					break;  			}  			catch (System.Exception localE) {  				ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  			}  		}  		// Logout  		Bot.Bot.Logout ();  	}  	else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  		botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  		Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  	}  	else {  		//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  		ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  	}  }  catch (System.Exception e) {  	ConsoleLog.WriteLine ("BuyFromOffer exception: " + e.Message);  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcBuyFromOffer,The following statement contains a magic number: try {  	NerZul.Core.Utils.ManagedCitizen Bot = new NerZul.Core.Utils.ManagedCitizen ((string)botinfo ["login"]' (string)botinfo ["email"]' (string)botinfo ["password"]' Globals.BotConfig);  	ManagedCitizen.LoginResult loginResult = Bot.Login ();  	if (loginResult == ManagedCitizen.LoginResult.Success) {  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  		if (iCorrespondentID == Convert.ToInt32 ((uint)botinfo ["citizen_id"])) {  			ConsoleLog.WriteLine ("Cannot buy from the same account' exiting");  			return;  		}  		for (int i = 1; i <= 10; i++) {  			try {  				double lHowMuch = dHowMuch;  				ConsoleLog.WriteLine ("BuyFromOffer money' try " + i.ToString ());  				if (lHowMuch == 0) {  					int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  					if (tmpRemains == -1)  						continue;  					lHowMuch = tmpRemains * 0.001 - 0.01;  				}  				if (lHowMuch < 0.02) {  					ConsoleLog.WriteLine ("Nothing to drain");  					break;  				}  				lHowMuch = Math.Truncate (lHowMuch * 100) / 100;  				ConsoleLog.WriteLine ("Buy " + lHowMuch.ToString () + " currency");  				if (Bot.Bot.BuyMoney (iOffer' lHowMuch' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  					//ConsoleLog.WriteLine(botinfo["login"] + ": Gold drained. Waiting for 1 minute.");  					ConsoleLog.WriteLine (botinfo ["login"] + ": Gold drained.");  				}  				else {  					//                                ConsoleLog.WriteLine(botinfo["login"] + ": Gold drain failed. Waiting for 1 minute.");  					ConsoleLog.WriteLine (botinfo ["login"] + ": Gold drain failed.");  				}  				// Если сливаем нац. валюту -- обновляем инфу  				if (iCurrencySpendID == (int)botinfo ["country"])  					Bot.GetInfoFromCommonResponse (true);  				//System.Threading.Thread.Sleep(60000);  				if (dHowMuch != 0)  					break;  			}  			catch (System.Exception localE) {  				ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  			}  		}  		// Logout  		Bot.Bot.Logout ();  	}  	else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  		botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  		Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  	}  	else {  		//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  		ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  	}  }  catch (System.Exception e) {  	ConsoleLog.WriteLine ("BuyFromOffer exception: " + e.Message);  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcBuyFromOffer,The following statement contains a magic number: try {  	NerZul.Core.Utils.ManagedCitizen Bot = new NerZul.Core.Utils.ManagedCitizen ((string)botinfo ["login"]' (string)botinfo ["email"]' (string)botinfo ["password"]' Globals.BotConfig);  	ManagedCitizen.LoginResult loginResult = Bot.Login ();  	if (loginResult == ManagedCitizen.LoginResult.Success) {  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  		if (iCorrespondentID == Convert.ToInt32 ((uint)botinfo ["citizen_id"])) {  			ConsoleLog.WriteLine ("Cannot buy from the same account' exiting");  			return;  		}  		for (int i = 1; i <= 10; i++) {  			try {  				double lHowMuch = dHowMuch;  				ConsoleLog.WriteLine ("BuyFromOffer money' try " + i.ToString ());  				if (lHowMuch == 0) {  					int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  					if (tmpRemains == -1)  						continue;  					lHowMuch = tmpRemains * 0.001 - 0.01;  				}  				if (lHowMuch < 0.02) {  					ConsoleLog.WriteLine ("Nothing to drain");  					break;  				}  				lHowMuch = Math.Truncate (lHowMuch * 100) / 100;  				ConsoleLog.WriteLine ("Buy " + lHowMuch.ToString () + " currency");  				if (Bot.Bot.BuyMoney (iOffer' lHowMuch' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  					//ConsoleLog.WriteLine(botinfo["login"] + ": Gold drained. Waiting for 1 minute.");  					ConsoleLog.WriteLine (botinfo ["login"] + ": Gold drained.");  				}  				else {  					//                                ConsoleLog.WriteLine(botinfo["login"] + ": Gold drain failed. Waiting for 1 minute.");  					ConsoleLog.WriteLine (botinfo ["login"] + ": Gold drain failed.");  				}  				// Если сливаем нац. валюту -- обновляем инфу  				if (iCurrencySpendID == (int)botinfo ["country"])  					Bot.GetInfoFromCommonResponse (true);  				//System.Threading.Thread.Sleep(60000);  				if (dHowMuch != 0)  					break;  			}  			catch (System.Exception localE) {  				ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  			}  		}  		// Logout  		Bot.Bot.Logout ();  	}  	else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  		botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  		Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  	}  	else {  		//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  		ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  	}  }  catch (System.Exception e) {  	ConsoleLog.WriteLine ("BuyFromOffer exception: " + e.Message);  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcBuyFromOffer,The following statement contains a magic number: try {  	NerZul.Core.Utils.ManagedCitizen Bot = new NerZul.Core.Utils.ManagedCitizen ((string)botinfo ["login"]' (string)botinfo ["email"]' (string)botinfo ["password"]' Globals.BotConfig);  	ManagedCitizen.LoginResult loginResult = Bot.Login ();  	if (loginResult == ManagedCitizen.LoginResult.Success) {  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  		if (iCorrespondentID == Convert.ToInt32 ((uint)botinfo ["citizen_id"])) {  			ConsoleLog.WriteLine ("Cannot buy from the same account' exiting");  			return;  		}  		for (int i = 1; i <= 10; i++) {  			try {  				double lHowMuch = dHowMuch;  				ConsoleLog.WriteLine ("BuyFromOffer money' try " + i.ToString ());  				if (lHowMuch == 0) {  					int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  					if (tmpRemains == -1)  						continue;  					lHowMuch = tmpRemains * 0.001 - 0.01;  				}  				if (lHowMuch < 0.02) {  					ConsoleLog.WriteLine ("Nothing to drain");  					break;  				}  				lHowMuch = Math.Truncate (lHowMuch * 100) / 100;  				ConsoleLog.WriteLine ("Buy " + lHowMuch.ToString () + " currency");  				if (Bot.Bot.BuyMoney (iOffer' lHowMuch' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  					//ConsoleLog.WriteLine(botinfo["login"] + ": Gold drained. Waiting for 1 minute.");  					ConsoleLog.WriteLine (botinfo ["login"] + ": Gold drained.");  				}  				else {  					//                                ConsoleLog.WriteLine(botinfo["login"] + ": Gold drain failed. Waiting for 1 minute.");  					ConsoleLog.WriteLine (botinfo ["login"] + ": Gold drain failed.");  				}  				// Если сливаем нац. валюту -- обновляем инфу  				if (iCurrencySpendID == (int)botinfo ["country"])  					Bot.GetInfoFromCommonResponse (true);  				//System.Threading.Thread.Sleep(60000);  				if (dHowMuch != 0)  					break;  			}  			catch (System.Exception localE) {  				ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  			}  		}  		// Logout  		Bot.Bot.Logout ();  	}  	else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  		botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  		Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  	}  	else {  		//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  		ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  	}  }  catch (System.Exception e) {  	ConsoleLog.WriteLine ("BuyFromOffer exception: " + e.Message);  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcBuyFromOffer,The following statement contains a magic number: try {  	NerZul.Core.Utils.ManagedCitizen Bot = new NerZul.Core.Utils.ManagedCitizen ((string)botinfo ["login"]' (string)botinfo ["email"]' (string)botinfo ["password"]' Globals.BotConfig);  	ManagedCitizen.LoginResult loginResult = Bot.Login ();  	if (loginResult == ManagedCitizen.LoginResult.Success) {  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  		if (iCorrespondentID == Convert.ToInt32 ((uint)botinfo ["citizen_id"])) {  			ConsoleLog.WriteLine ("Cannot buy from the same account' exiting");  			return;  		}  		for (int i = 1; i <= 10; i++) {  			try {  				double lHowMuch = dHowMuch;  				ConsoleLog.WriteLine ("BuyFromOffer money' try " + i.ToString ());  				if (lHowMuch == 0) {  					int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  					if (tmpRemains == -1)  						continue;  					lHowMuch = tmpRemains * 0.001 - 0.01;  				}  				if (lHowMuch < 0.02) {  					ConsoleLog.WriteLine ("Nothing to drain");  					break;  				}  				lHowMuch = Math.Truncate (lHowMuch * 100) / 100;  				ConsoleLog.WriteLine ("Buy " + lHowMuch.ToString () + " currency");  				if (Bot.Bot.BuyMoney (iOffer' lHowMuch' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  					//ConsoleLog.WriteLine(botinfo["login"] + ": Gold drained. Waiting for 1 minute.");  					ConsoleLog.WriteLine (botinfo ["login"] + ": Gold drained.");  				}  				else {  					//                                ConsoleLog.WriteLine(botinfo["login"] + ": Gold drain failed. Waiting for 1 minute.");  					ConsoleLog.WriteLine (botinfo ["login"] + ": Gold drain failed.");  				}  				// Если сливаем нац. валюту -- обновляем инфу  				if (iCurrencySpendID == (int)botinfo ["country"])  					Bot.GetInfoFromCommonResponse (true);  				//System.Threading.Thread.Sleep(60000);  				if (dHowMuch != 0)  					break;  			}  			catch (System.Exception localE) {  				ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  			}  		}  		// Logout  		Bot.Bot.Logout ();  	}  	else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  		botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  		Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  	}  	else {  		//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  		ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  	}  }  catch (System.Exception e) {  	ConsoleLog.WriteLine ("BuyFromOffer exception: " + e.Message);  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcBuyFromOffer,The following statement contains a magic number: try {  	NerZul.Core.Utils.ManagedCitizen Bot = new NerZul.Core.Utils.ManagedCitizen ((string)botinfo ["login"]' (string)botinfo ["email"]' (string)botinfo ["password"]' Globals.BotConfig);  	ManagedCitizen.LoginResult loginResult = Bot.Login ();  	if (loginResult == ManagedCitizen.LoginResult.Success) {  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  		if (iCorrespondentID == Convert.ToInt32 ((uint)botinfo ["citizen_id"])) {  			ConsoleLog.WriteLine ("Cannot buy from the same account' exiting");  			return;  		}  		for (int i = 1; i <= 10; i++) {  			try {  				double lHowMuch = dHowMuch;  				ConsoleLog.WriteLine ("BuyFromOffer money' try " + i.ToString ());  				if (lHowMuch == 0) {  					int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  					if (tmpRemains == -1)  						continue;  					lHowMuch = tmpRemains * 0.001 - 0.01;  				}  				if (lHowMuch < 0.02) {  					ConsoleLog.WriteLine ("Nothing to drain");  					break;  				}  				lHowMuch = Math.Truncate (lHowMuch * 100) / 100;  				ConsoleLog.WriteLine ("Buy " + lHowMuch.ToString () + " currency");  				if (Bot.Bot.BuyMoney (iOffer' lHowMuch' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  					//ConsoleLog.WriteLine(botinfo["login"] + ": Gold drained. Waiting for 1 minute.");  					ConsoleLog.WriteLine (botinfo ["login"] + ": Gold drained.");  				}  				else {  					//                                ConsoleLog.WriteLine(botinfo["login"] + ": Gold drain failed. Waiting for 1 minute.");  					ConsoleLog.WriteLine (botinfo ["login"] + ": Gold drain failed.");  				}  				// Если сливаем нац. валюту -- обновляем инфу  				if (iCurrencySpendID == (int)botinfo ["country"])  					Bot.GetInfoFromCommonResponse (true);  				//System.Threading.Thread.Sleep(60000);  				if (dHowMuch != 0)  					break;  			}  			catch (System.Exception localE) {  				ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  			}  		}  		// Logout  		Bot.Bot.Logout ();  	}  	else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  		botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  		Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  	}  	else {  		//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  		ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  	}  }  catch (System.Exception e) {  	ConsoleLog.WriteLine ("BuyFromOffer exception: " + e.Message);  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcBuyFromOffer,The following statement contains a magic number: if (loginResult == ManagedCitizen.LoginResult.Success) {  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  	if (iCorrespondentID == Convert.ToInt32 ((uint)botinfo ["citizen_id"])) {  		ConsoleLog.WriteLine ("Cannot buy from the same account' exiting");  		return;  	}  	for (int i = 1; i <= 10; i++) {  		try {  			double lHowMuch = dHowMuch;  			ConsoleLog.WriteLine ("BuyFromOffer money' try " + i.ToString ());  			if (lHowMuch == 0) {  				int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  				if (tmpRemains == -1)  					continue;  				lHowMuch = tmpRemains * 0.001 - 0.01;  			}  			if (lHowMuch < 0.02) {  				ConsoleLog.WriteLine ("Nothing to drain");  				break;  			}  			lHowMuch = Math.Truncate (lHowMuch * 100) / 100;  			ConsoleLog.WriteLine ("Buy " + lHowMuch.ToString () + " currency");  			if (Bot.Bot.BuyMoney (iOffer' lHowMuch' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  				//ConsoleLog.WriteLine(botinfo["login"] + ": Gold drained. Waiting for 1 minute.");  				ConsoleLog.WriteLine (botinfo ["login"] + ": Gold drained.");  			}  			else {  				//                                ConsoleLog.WriteLine(botinfo["login"] + ": Gold drain failed. Waiting for 1 minute.");  				ConsoleLog.WriteLine (botinfo ["login"] + ": Gold drain failed.");  			}  			// Если сливаем нац. валюту -- обновляем инфу  			if (iCurrencySpendID == (int)botinfo ["country"])  				Bot.GetInfoFromCommonResponse (true);  			//System.Threading.Thread.Sleep(60000);  			if (dHowMuch != 0)  				break;  		}  		catch (System.Exception localE) {  			ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  		}  	}  	// Logout  	Bot.Bot.Logout ();  }  else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcBuyFromOffer,The following statement contains a magic number: if (loginResult == ManagedCitizen.LoginResult.Success) {  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  	if (iCorrespondentID == Convert.ToInt32 ((uint)botinfo ["citizen_id"])) {  		ConsoleLog.WriteLine ("Cannot buy from the same account' exiting");  		return;  	}  	for (int i = 1; i <= 10; i++) {  		try {  			double lHowMuch = dHowMuch;  			ConsoleLog.WriteLine ("BuyFromOffer money' try " + i.ToString ());  			if (lHowMuch == 0) {  				int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  				if (tmpRemains == -1)  					continue;  				lHowMuch = tmpRemains * 0.001 - 0.01;  			}  			if (lHowMuch < 0.02) {  				ConsoleLog.WriteLine ("Nothing to drain");  				break;  			}  			lHowMuch = Math.Truncate (lHowMuch * 100) / 100;  			ConsoleLog.WriteLine ("Buy " + lHowMuch.ToString () + " currency");  			if (Bot.Bot.BuyMoney (iOffer' lHowMuch' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  				//ConsoleLog.WriteLine(botinfo["login"] + ": Gold drained. Waiting for 1 minute.");  				ConsoleLog.WriteLine (botinfo ["login"] + ": Gold drained.");  			}  			else {  				//                                ConsoleLog.WriteLine(botinfo["login"] + ": Gold drain failed. Waiting for 1 minute.");  				ConsoleLog.WriteLine (botinfo ["login"] + ": Gold drain failed.");  			}  			// Если сливаем нац. валюту -- обновляем инфу  			if (iCurrencySpendID == (int)botinfo ["country"])  				Bot.GetInfoFromCommonResponse (true);  			//System.Threading.Thread.Sleep(60000);  			if (dHowMuch != 0)  				break;  		}  		catch (System.Exception localE) {  			ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  		}  	}  	// Logout  	Bot.Bot.Logout ();  }  else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcBuyFromOffer,The following statement contains a magic number: if (loginResult == ManagedCitizen.LoginResult.Success) {  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  	if (iCorrespondentID == Convert.ToInt32 ((uint)botinfo ["citizen_id"])) {  		ConsoleLog.WriteLine ("Cannot buy from the same account' exiting");  		return;  	}  	for (int i = 1; i <= 10; i++) {  		try {  			double lHowMuch = dHowMuch;  			ConsoleLog.WriteLine ("BuyFromOffer money' try " + i.ToString ());  			if (lHowMuch == 0) {  				int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  				if (tmpRemains == -1)  					continue;  				lHowMuch = tmpRemains * 0.001 - 0.01;  			}  			if (lHowMuch < 0.02) {  				ConsoleLog.WriteLine ("Nothing to drain");  				break;  			}  			lHowMuch = Math.Truncate (lHowMuch * 100) / 100;  			ConsoleLog.WriteLine ("Buy " + lHowMuch.ToString () + " currency");  			if (Bot.Bot.BuyMoney (iOffer' lHowMuch' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  				//ConsoleLog.WriteLine(botinfo["login"] + ": Gold drained. Waiting for 1 minute.");  				ConsoleLog.WriteLine (botinfo ["login"] + ": Gold drained.");  			}  			else {  				//                                ConsoleLog.WriteLine(botinfo["login"] + ": Gold drain failed. Waiting for 1 minute.");  				ConsoleLog.WriteLine (botinfo ["login"] + ": Gold drain failed.");  			}  			// Если сливаем нац. валюту -- обновляем инфу  			if (iCurrencySpendID == (int)botinfo ["country"])  				Bot.GetInfoFromCommonResponse (true);  			//System.Threading.Thread.Sleep(60000);  			if (dHowMuch != 0)  				break;  		}  		catch (System.Exception localE) {  			ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  		}  	}  	// Logout  	Bot.Bot.Logout ();  }  else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcBuyFromOffer,The following statement contains a magic number: if (loginResult == ManagedCitizen.LoginResult.Success) {  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  	if (iCorrespondentID == Convert.ToInt32 ((uint)botinfo ["citizen_id"])) {  		ConsoleLog.WriteLine ("Cannot buy from the same account' exiting");  		return;  	}  	for (int i = 1; i <= 10; i++) {  		try {  			double lHowMuch = dHowMuch;  			ConsoleLog.WriteLine ("BuyFromOffer money' try " + i.ToString ());  			if (lHowMuch == 0) {  				int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  				if (tmpRemains == -1)  					continue;  				lHowMuch = tmpRemains * 0.001 - 0.01;  			}  			if (lHowMuch < 0.02) {  				ConsoleLog.WriteLine ("Nothing to drain");  				break;  			}  			lHowMuch = Math.Truncate (lHowMuch * 100) / 100;  			ConsoleLog.WriteLine ("Buy " + lHowMuch.ToString () + " currency");  			if (Bot.Bot.BuyMoney (iOffer' lHowMuch' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  				//ConsoleLog.WriteLine(botinfo["login"] + ": Gold drained. Waiting for 1 minute.");  				ConsoleLog.WriteLine (botinfo ["login"] + ": Gold drained.");  			}  			else {  				//                                ConsoleLog.WriteLine(botinfo["login"] + ": Gold drain failed. Waiting for 1 minute.");  				ConsoleLog.WriteLine (botinfo ["login"] + ": Gold drain failed.");  			}  			// Если сливаем нац. валюту -- обновляем инфу  			if (iCurrencySpendID == (int)botinfo ["country"])  				Bot.GetInfoFromCommonResponse (true);  			//System.Threading.Thread.Sleep(60000);  			if (dHowMuch != 0)  				break;  		}  		catch (System.Exception localE) {  			ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  		}  	}  	// Logout  	Bot.Bot.Logout ();  }  else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcBuyFromOffer,The following statement contains a magic number: if (loginResult == ManagedCitizen.LoginResult.Success) {  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  	if (iCorrespondentID == Convert.ToInt32 ((uint)botinfo ["citizen_id"])) {  		ConsoleLog.WriteLine ("Cannot buy from the same account' exiting");  		return;  	}  	for (int i = 1; i <= 10; i++) {  		try {  			double lHowMuch = dHowMuch;  			ConsoleLog.WriteLine ("BuyFromOffer money' try " + i.ToString ());  			if (lHowMuch == 0) {  				int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  				if (tmpRemains == -1)  					continue;  				lHowMuch = tmpRemains * 0.001 - 0.01;  			}  			if (lHowMuch < 0.02) {  				ConsoleLog.WriteLine ("Nothing to drain");  				break;  			}  			lHowMuch = Math.Truncate (lHowMuch * 100) / 100;  			ConsoleLog.WriteLine ("Buy " + lHowMuch.ToString () + " currency");  			if (Bot.Bot.BuyMoney (iOffer' lHowMuch' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  				//ConsoleLog.WriteLine(botinfo["login"] + ": Gold drained. Waiting for 1 minute.");  				ConsoleLog.WriteLine (botinfo ["login"] + ": Gold drained.");  			}  			else {  				//                                ConsoleLog.WriteLine(botinfo["login"] + ": Gold drain failed. Waiting for 1 minute.");  				ConsoleLog.WriteLine (botinfo ["login"] + ": Gold drain failed.");  			}  			// Если сливаем нац. валюту -- обновляем инфу  			if (iCurrencySpendID == (int)botinfo ["country"])  				Bot.GetInfoFromCommonResponse (true);  			//System.Threading.Thread.Sleep(60000);  			if (dHowMuch != 0)  				break;  		}  		catch (System.Exception localE) {  			ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  		}  	}  	// Logout  	Bot.Bot.Logout ();  }  else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcBuyFromOffer,The following statement contains a magic number: if (loginResult == ManagedCitizen.LoginResult.Success) {  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  	if (iCorrespondentID == Convert.ToInt32 ((uint)botinfo ["citizen_id"])) {  		ConsoleLog.WriteLine ("Cannot buy from the same account' exiting");  		return;  	}  	for (int i = 1; i <= 10; i++) {  		try {  			double lHowMuch = dHowMuch;  			ConsoleLog.WriteLine ("BuyFromOffer money' try " + i.ToString ());  			if (lHowMuch == 0) {  				int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  				if (tmpRemains == -1)  					continue;  				lHowMuch = tmpRemains * 0.001 - 0.01;  			}  			if (lHowMuch < 0.02) {  				ConsoleLog.WriteLine ("Nothing to drain");  				break;  			}  			lHowMuch = Math.Truncate (lHowMuch * 100) / 100;  			ConsoleLog.WriteLine ("Buy " + lHowMuch.ToString () + " currency");  			if (Bot.Bot.BuyMoney (iOffer' lHowMuch' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  				//ConsoleLog.WriteLine(botinfo["login"] + ": Gold drained. Waiting for 1 minute.");  				ConsoleLog.WriteLine (botinfo ["login"] + ": Gold drained.");  			}  			else {  				//                                ConsoleLog.WriteLine(botinfo["login"] + ": Gold drain failed. Waiting for 1 minute.");  				ConsoleLog.WriteLine (botinfo ["login"] + ": Gold drain failed.");  			}  			// Если сливаем нац. валюту -- обновляем инфу  			if (iCurrencySpendID == (int)botinfo ["country"])  				Bot.GetInfoFromCommonResponse (true);  			//System.Threading.Thread.Sleep(60000);  			if (dHowMuch != 0)  				break;  		}  		catch (System.Exception localE) {  			ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  		}  	}  	// Logout  	Bot.Bot.Logout ();  }  else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcBuyFromOffer,The following statement contains a magic number: if (loginResult == ManagedCitizen.LoginResult.Success) {  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  	if (iCorrespondentID == Convert.ToInt32 ((uint)botinfo ["citizen_id"])) {  		ConsoleLog.WriteLine ("Cannot buy from the same account' exiting");  		return;  	}  	for (int i = 1; i <= 10; i++) {  		try {  			double lHowMuch = dHowMuch;  			ConsoleLog.WriteLine ("BuyFromOffer money' try " + i.ToString ());  			if (lHowMuch == 0) {  				int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  				if (tmpRemains == -1)  					continue;  				lHowMuch = tmpRemains * 0.001 - 0.01;  			}  			if (lHowMuch < 0.02) {  				ConsoleLog.WriteLine ("Nothing to drain");  				break;  			}  			lHowMuch = Math.Truncate (lHowMuch * 100) / 100;  			ConsoleLog.WriteLine ("Buy " + lHowMuch.ToString () + " currency");  			if (Bot.Bot.BuyMoney (iOffer' lHowMuch' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  				//ConsoleLog.WriteLine(botinfo["login"] + ": Gold drained. Waiting for 1 minute.");  				ConsoleLog.WriteLine (botinfo ["login"] + ": Gold drained.");  			}  			else {  				//                                ConsoleLog.WriteLine(botinfo["login"] + ": Gold drain failed. Waiting for 1 minute.");  				ConsoleLog.WriteLine (botinfo ["login"] + ": Gold drain failed.");  			}  			// Если сливаем нац. валюту -- обновляем инфу  			if (iCurrencySpendID == (int)botinfo ["country"])  				Bot.GetInfoFromCommonResponse (true);  			//System.Threading.Thread.Sleep(60000);  			if (dHowMuch != 0)  				break;  		}  		catch (System.Exception localE) {  			ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  		}  	}  	// Logout  	Bot.Bot.Logout ();  }  else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcBuyFromOffer,The following statement contains a magic number: for (int i = 1; i <= 10; i++) {  	try {  		double lHowMuch = dHowMuch;  		ConsoleLog.WriteLine ("BuyFromOffer money' try " + i.ToString ());  		if (lHowMuch == 0) {  			int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  			if (tmpRemains == -1)  				continue;  			lHowMuch = tmpRemains * 0.001 - 0.01;  		}  		if (lHowMuch < 0.02) {  			ConsoleLog.WriteLine ("Nothing to drain");  			break;  		}  		lHowMuch = Math.Truncate (lHowMuch * 100) / 100;  		ConsoleLog.WriteLine ("Buy " + lHowMuch.ToString () + " currency");  		if (Bot.Bot.BuyMoney (iOffer' lHowMuch' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  			//ConsoleLog.WriteLine(botinfo["login"] + ": Gold drained. Waiting for 1 minute.");  			ConsoleLog.WriteLine (botinfo ["login"] + ": Gold drained.");  		}  		else {  			//                                ConsoleLog.WriteLine(botinfo["login"] + ": Gold drain failed. Waiting for 1 minute.");  			ConsoleLog.WriteLine (botinfo ["login"] + ": Gold drain failed.");  		}  		// Если сливаем нац. валюту -- обновляем инфу  		if (iCurrencySpendID == (int)botinfo ["country"])  			Bot.GetInfoFromCommonResponse (true);  		//System.Threading.Thread.Sleep(60000);  		if (dHowMuch != 0)  			break;  	}  	catch (System.Exception localE) {  		ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  	}  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcBuyFromOffer,The following statement contains a magic number: for (int i = 1; i <= 10; i++) {  	try {  		double lHowMuch = dHowMuch;  		ConsoleLog.WriteLine ("BuyFromOffer money' try " + i.ToString ());  		if (lHowMuch == 0) {  			int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  			if (tmpRemains == -1)  				continue;  			lHowMuch = tmpRemains * 0.001 - 0.01;  		}  		if (lHowMuch < 0.02) {  			ConsoleLog.WriteLine ("Nothing to drain");  			break;  		}  		lHowMuch = Math.Truncate (lHowMuch * 100) / 100;  		ConsoleLog.WriteLine ("Buy " + lHowMuch.ToString () + " currency");  		if (Bot.Bot.BuyMoney (iOffer' lHowMuch' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  			//ConsoleLog.WriteLine(botinfo["login"] + ": Gold drained. Waiting for 1 minute.");  			ConsoleLog.WriteLine (botinfo ["login"] + ": Gold drained.");  		}  		else {  			//                                ConsoleLog.WriteLine(botinfo["login"] + ": Gold drain failed. Waiting for 1 minute.");  			ConsoleLog.WriteLine (botinfo ["login"] + ": Gold drain failed.");  		}  		// Если сливаем нац. валюту -- обновляем инфу  		if (iCurrencySpendID == (int)botinfo ["country"])  			Bot.GetInfoFromCommonResponse (true);  		//System.Threading.Thread.Sleep(60000);  		if (dHowMuch != 0)  			break;  	}  	catch (System.Exception localE) {  		ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  	}  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcBuyFromOffer,The following statement contains a magic number: for (int i = 1; i <= 10; i++) {  	try {  		double lHowMuch = dHowMuch;  		ConsoleLog.WriteLine ("BuyFromOffer money' try " + i.ToString ());  		if (lHowMuch == 0) {  			int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  			if (tmpRemains == -1)  				continue;  			lHowMuch = tmpRemains * 0.001 - 0.01;  		}  		if (lHowMuch < 0.02) {  			ConsoleLog.WriteLine ("Nothing to drain");  			break;  		}  		lHowMuch = Math.Truncate (lHowMuch * 100) / 100;  		ConsoleLog.WriteLine ("Buy " + lHowMuch.ToString () + " currency");  		if (Bot.Bot.BuyMoney (iOffer' lHowMuch' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  			//ConsoleLog.WriteLine(botinfo["login"] + ": Gold drained. Waiting for 1 minute.");  			ConsoleLog.WriteLine (botinfo ["login"] + ": Gold drained.");  		}  		else {  			//                                ConsoleLog.WriteLine(botinfo["login"] + ": Gold drain failed. Waiting for 1 minute.");  			ConsoleLog.WriteLine (botinfo ["login"] + ": Gold drain failed.");  		}  		// Если сливаем нац. валюту -- обновляем инфу  		if (iCurrencySpendID == (int)botinfo ["country"])  			Bot.GetInfoFromCommonResponse (true);  		//System.Threading.Thread.Sleep(60000);  		if (dHowMuch != 0)  			break;  	}  	catch (System.Exception localE) {  		ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  	}  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcBuyFromOffer,The following statement contains a magic number: for (int i = 1; i <= 10; i++) {  	try {  		double lHowMuch = dHowMuch;  		ConsoleLog.WriteLine ("BuyFromOffer money' try " + i.ToString ());  		if (lHowMuch == 0) {  			int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  			if (tmpRemains == -1)  				continue;  			lHowMuch = tmpRemains * 0.001 - 0.01;  		}  		if (lHowMuch < 0.02) {  			ConsoleLog.WriteLine ("Nothing to drain");  			break;  		}  		lHowMuch = Math.Truncate (lHowMuch * 100) / 100;  		ConsoleLog.WriteLine ("Buy " + lHowMuch.ToString () + " currency");  		if (Bot.Bot.BuyMoney (iOffer' lHowMuch' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  			//ConsoleLog.WriteLine(botinfo["login"] + ": Gold drained. Waiting for 1 minute.");  			ConsoleLog.WriteLine (botinfo ["login"] + ": Gold drained.");  		}  		else {  			//                                ConsoleLog.WriteLine(botinfo["login"] + ": Gold drain failed. Waiting for 1 minute.");  			ConsoleLog.WriteLine (botinfo ["login"] + ": Gold drain failed.");  		}  		// Если сливаем нац. валюту -- обновляем инфу  		if (iCurrencySpendID == (int)botinfo ["country"])  			Bot.GetInfoFromCommonResponse (true);  		//System.Threading.Thread.Sleep(60000);  		if (dHowMuch != 0)  			break;  	}  	catch (System.Exception localE) {  		ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  	}  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcBuyFromOffer,The following statement contains a magic number: for (int i = 1; i <= 10; i++) {  	try {  		double lHowMuch = dHowMuch;  		ConsoleLog.WriteLine ("BuyFromOffer money' try " + i.ToString ());  		if (lHowMuch == 0) {  			int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  			if (tmpRemains == -1)  				continue;  			lHowMuch = tmpRemains * 0.001 - 0.01;  		}  		if (lHowMuch < 0.02) {  			ConsoleLog.WriteLine ("Nothing to drain");  			break;  		}  		lHowMuch = Math.Truncate (lHowMuch * 100) / 100;  		ConsoleLog.WriteLine ("Buy " + lHowMuch.ToString () + " currency");  		if (Bot.Bot.BuyMoney (iOffer' lHowMuch' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  			//ConsoleLog.WriteLine(botinfo["login"] + ": Gold drained. Waiting for 1 minute.");  			ConsoleLog.WriteLine (botinfo ["login"] + ": Gold drained.");  		}  		else {  			//                                ConsoleLog.WriteLine(botinfo["login"] + ": Gold drain failed. Waiting for 1 minute.");  			ConsoleLog.WriteLine (botinfo ["login"] + ": Gold drain failed.");  		}  		// Если сливаем нац. валюту -- обновляем инфу  		if (iCurrencySpendID == (int)botinfo ["country"])  			Bot.GetInfoFromCommonResponse (true);  		//System.Threading.Thread.Sleep(60000);  		if (dHowMuch != 0)  			break;  	}  	catch (System.Exception localE) {  		ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  	}  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcBuyFromOffer,The following statement contains a magic number: for (int i = 1; i <= 10; i++) {  	try {  		double lHowMuch = dHowMuch;  		ConsoleLog.WriteLine ("BuyFromOffer money' try " + i.ToString ());  		if (lHowMuch == 0) {  			int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  			if (tmpRemains == -1)  				continue;  			lHowMuch = tmpRemains * 0.001 - 0.01;  		}  		if (lHowMuch < 0.02) {  			ConsoleLog.WriteLine ("Nothing to drain");  			break;  		}  		lHowMuch = Math.Truncate (lHowMuch * 100) / 100;  		ConsoleLog.WriteLine ("Buy " + lHowMuch.ToString () + " currency");  		if (Bot.Bot.BuyMoney (iOffer' lHowMuch' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  			//ConsoleLog.WriteLine(botinfo["login"] + ": Gold drained. Waiting for 1 minute.");  			ConsoleLog.WriteLine (botinfo ["login"] + ": Gold drained.");  		}  		else {  			//                                ConsoleLog.WriteLine(botinfo["login"] + ": Gold drain failed. Waiting for 1 minute.");  			ConsoleLog.WriteLine (botinfo ["login"] + ": Gold drain failed.");  		}  		// Если сливаем нац. валюту -- обновляем инфу  		if (iCurrencySpendID == (int)botinfo ["country"])  			Bot.GetInfoFromCommonResponse (true);  		//System.Threading.Thread.Sleep(60000);  		if (dHowMuch != 0)  			break;  	}  	catch (System.Exception localE) {  		ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  	}  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcBuyFromOffer,The following statement contains a magic number: try {  	double lHowMuch = dHowMuch;  	ConsoleLog.WriteLine ("BuyFromOffer money' try " + i.ToString ());  	if (lHowMuch == 0) {  		int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  		if (tmpRemains == -1)  			continue;  		lHowMuch = tmpRemains * 0.001 - 0.01;  	}  	if (lHowMuch < 0.02) {  		ConsoleLog.WriteLine ("Nothing to drain");  		break;  	}  	lHowMuch = Math.Truncate (lHowMuch * 100) / 100;  	ConsoleLog.WriteLine ("Buy " + lHowMuch.ToString () + " currency");  	if (Bot.Bot.BuyMoney (iOffer' lHowMuch' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  		//ConsoleLog.WriteLine(botinfo["login"] + ": Gold drained. Waiting for 1 minute.");  		ConsoleLog.WriteLine (botinfo ["login"] + ": Gold drained.");  	}  	else {  		//                                ConsoleLog.WriteLine(botinfo["login"] + ": Gold drain failed. Waiting for 1 minute.");  		ConsoleLog.WriteLine (botinfo ["login"] + ": Gold drain failed.");  	}  	// Если сливаем нац. валюту -- обновляем инфу  	if (iCurrencySpendID == (int)botinfo ["country"])  		Bot.GetInfoFromCommonResponse (true);  	//System.Threading.Thread.Sleep(60000);  	if (dHowMuch != 0)  		break;  }  catch (System.Exception localE) {  	ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcBuyFromOffer,The following statement contains a magic number: try {  	double lHowMuch = dHowMuch;  	ConsoleLog.WriteLine ("BuyFromOffer money' try " + i.ToString ());  	if (lHowMuch == 0) {  		int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  		if (tmpRemains == -1)  			continue;  		lHowMuch = tmpRemains * 0.001 - 0.01;  	}  	if (lHowMuch < 0.02) {  		ConsoleLog.WriteLine ("Nothing to drain");  		break;  	}  	lHowMuch = Math.Truncate (lHowMuch * 100) / 100;  	ConsoleLog.WriteLine ("Buy " + lHowMuch.ToString () + " currency");  	if (Bot.Bot.BuyMoney (iOffer' lHowMuch' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  		//ConsoleLog.WriteLine(botinfo["login"] + ": Gold drained. Waiting for 1 minute.");  		ConsoleLog.WriteLine (botinfo ["login"] + ": Gold drained.");  	}  	else {  		//                                ConsoleLog.WriteLine(botinfo["login"] + ": Gold drain failed. Waiting for 1 minute.");  		ConsoleLog.WriteLine (botinfo ["login"] + ": Gold drain failed.");  	}  	// Если сливаем нац. валюту -- обновляем инфу  	if (iCurrencySpendID == (int)botinfo ["country"])  		Bot.GetInfoFromCommonResponse (true);  	//System.Threading.Thread.Sleep(60000);  	if (dHowMuch != 0)  		break;  }  catch (System.Exception localE) {  	ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcBuyFromOffer,The following statement contains a magic number: try {  	double lHowMuch = dHowMuch;  	ConsoleLog.WriteLine ("BuyFromOffer money' try " + i.ToString ());  	if (lHowMuch == 0) {  		int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  		if (tmpRemains == -1)  			continue;  		lHowMuch = tmpRemains * 0.001 - 0.01;  	}  	if (lHowMuch < 0.02) {  		ConsoleLog.WriteLine ("Nothing to drain");  		break;  	}  	lHowMuch = Math.Truncate (lHowMuch * 100) / 100;  	ConsoleLog.WriteLine ("Buy " + lHowMuch.ToString () + " currency");  	if (Bot.Bot.BuyMoney (iOffer' lHowMuch' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  		//ConsoleLog.WriteLine(botinfo["login"] + ": Gold drained. Waiting for 1 minute.");  		ConsoleLog.WriteLine (botinfo ["login"] + ": Gold drained.");  	}  	else {  		//                                ConsoleLog.WriteLine(botinfo["login"] + ": Gold drain failed. Waiting for 1 minute.");  		ConsoleLog.WriteLine (botinfo ["login"] + ": Gold drain failed.");  	}  	// Если сливаем нац. валюту -- обновляем инфу  	if (iCurrencySpendID == (int)botinfo ["country"])  		Bot.GetInfoFromCommonResponse (true);  	//System.Threading.Thread.Sleep(60000);  	if (dHowMuch != 0)  		break;  }  catch (System.Exception localE) {  	ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcBuyFromOffer,The following statement contains a magic number: try {  	double lHowMuch = dHowMuch;  	ConsoleLog.WriteLine ("BuyFromOffer money' try " + i.ToString ());  	if (lHowMuch == 0) {  		int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  		if (tmpRemains == -1)  			continue;  		lHowMuch = tmpRemains * 0.001 - 0.01;  	}  	if (lHowMuch < 0.02) {  		ConsoleLog.WriteLine ("Nothing to drain");  		break;  	}  	lHowMuch = Math.Truncate (lHowMuch * 100) / 100;  	ConsoleLog.WriteLine ("Buy " + lHowMuch.ToString () + " currency");  	if (Bot.Bot.BuyMoney (iOffer' lHowMuch' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  		//ConsoleLog.WriteLine(botinfo["login"] + ": Gold drained. Waiting for 1 minute.");  		ConsoleLog.WriteLine (botinfo ["login"] + ": Gold drained.");  	}  	else {  		//                                ConsoleLog.WriteLine(botinfo["login"] + ": Gold drain failed. Waiting for 1 minute.");  		ConsoleLog.WriteLine (botinfo ["login"] + ": Gold drain failed.");  	}  	// Если сливаем нац. валюту -- обновляем инфу  	if (iCurrencySpendID == (int)botinfo ["country"])  		Bot.GetInfoFromCommonResponse (true);  	//System.Threading.Thread.Sleep(60000);  	if (dHowMuch != 0)  		break;  }  catch (System.Exception localE) {  	ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcBuyFromOffer,The following statement contains a magic number: try {  	double lHowMuch = dHowMuch;  	ConsoleLog.WriteLine ("BuyFromOffer money' try " + i.ToString ());  	if (lHowMuch == 0) {  		int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  		if (tmpRemains == -1)  			continue;  		lHowMuch = tmpRemains * 0.001 - 0.01;  	}  	if (lHowMuch < 0.02) {  		ConsoleLog.WriteLine ("Nothing to drain");  		break;  	}  	lHowMuch = Math.Truncate (lHowMuch * 100) / 100;  	ConsoleLog.WriteLine ("Buy " + lHowMuch.ToString () + " currency");  	if (Bot.Bot.BuyMoney (iOffer' lHowMuch' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  		//ConsoleLog.WriteLine(botinfo["login"] + ": Gold drained. Waiting for 1 minute.");  		ConsoleLog.WriteLine (botinfo ["login"] + ": Gold drained.");  	}  	else {  		//                                ConsoleLog.WriteLine(botinfo["login"] + ": Gold drain failed. Waiting for 1 minute.");  		ConsoleLog.WriteLine (botinfo ["login"] + ": Gold drain failed.");  	}  	// Если сливаем нац. валюту -- обновляем инфу  	if (iCurrencySpendID == (int)botinfo ["country"])  		Bot.GetInfoFromCommonResponse (true);  	//System.Threading.Thread.Sleep(60000);  	if (dHowMuch != 0)  		break;  }  catch (System.Exception localE) {  	ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcBuyFromOffer,The following statement contains a magic number: if (lHowMuch == 0) {  	int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  	if (tmpRemains == -1)  		continue;  	lHowMuch = tmpRemains * 0.001 - 0.01;  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcBuyFromOffer,The following statement contains a magic number: if (lHowMuch == 0) {  	int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  	if (tmpRemains == -1)  		continue;  	lHowMuch = tmpRemains * 0.001 - 0.01;  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcBuyFromOffer,The following statement contains a magic number: lHowMuch = tmpRemains * 0.001 - 0.01;  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcBuyFromOffer,The following statement contains a magic number: lHowMuch = tmpRemains * 0.001 - 0.01;  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcBuyFromOffer,The following statement contains a magic number: if (lHowMuch < 0.02) {  	ConsoleLog.WriteLine ("Nothing to drain");  	break;  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcBuyFromOffer,The following statement contains a magic number: lHowMuch = Math.Truncate (lHowMuch * 100) / 100;  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcBuyFromOffer,The following statement contains a magic number: lHowMuch = Math.Truncate (lHowMuch * 100) / 100;  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcBuyFromOffer,The following statement contains a magic number: if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcBuyFromOffer,The following statement contains a magic number: botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,WorkerCollectMoney,The following statement contains a magic number: if (args.Length != 6) {  	ConsoleLog.WriteLine ("Usage: collectmoney group dest_user_id curr_for_donate_id exp_from exp_to");  	return;  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,WorkerCollectMoney,The following statement contains a magic number: int.TryParse (args [2]' out iCorrespondentID);  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,WorkerCollectMoney,The following statement contains a magic number: int.TryParse (args [3]' out iCurrencySpendID);  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,WorkerCollectMoney,The following statement contains a magic number: int.TryParse (args [4]' out iExpFrom);  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,WorkerCollectMoney,The following statement contains a magic number: int.TryParse (args [5]' out iExpTo);  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,WorkerCollectMoney,The following statement contains a magic number: if (iExpTo == 0)  	iExpTo = 99999;  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,WorkerCollectMoney,The following statement contains a magic number: iExpTo = 99999;  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,WorkerCollectMoney,The following statement contains a magic number: lock (Globals.DBLocker) {  	Globals.Database.Reset ();  	if (group.ToLower () != "all")  		Globals.Database.Where ("group"' group);  	Globals.Database.Where ("banned"' 0);  	Globals.Database.Where ("happiness"' 0);  	if (iCurrencySpendID == 62)  		Globals.Database.Where ("(gold > 0)");  	Globals.Database.Where ("(experience >= " + iExpFrom.ToString () + ")");  	Globals.Database.Where ("(experience <= " + iExpTo.ToString () + ")");  	if (!String.IsNullOrEmpty (Globals.addWhere))  		Globals.Database.Where (Globals.addWhere);  	bots = Globals.Database.Select ("bots");  	Globals.Database.Reset ();  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,WorkerCollectMoney,The following statement contains a magic number: if (iCurrencySpendID == 62)  	Globals.Database.Where ("(gold > 0)");  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcCollectmoney,The following statement contains a magic number: if (loginResult == ManagedCitizen.LoginResult.Success) {  	ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	int curRemains = 1;  	for (int i = 1; i <= 20; i++) {  		try {  			ConsoleLog.WriteLine ("Collect money' try " + i.ToString ());  			int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' 0);  			if (tmpRemains == -1)  				continue;  			curRemains = tmpRemains;  			if (curRemains < 0.1) {  				ConsoleLog.WriteLine ("Everything converted");  				break;  			}  			if (Bot.Bot.DonateMoney (iCorrespondentID' curRemains - 0.01' iCurrencySpendID)) {  				ConsoleLog.WriteLine ("Collect money successfull");  			}  			else {  				ConsoleLog.WriteLine ("Collect money fail");  			}  		}  		catch (System.Exception e1) {  			ConsoleLog.WriteLine ("Collectmoney - error" + e1.ToString ());  		}  		Bot.GetInfoFromCommonResponse (true);  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		// Logout  		Bot.Bot.Logout ();  	}  }  else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcCollectmoney,The following statement contains a magic number: if (loginResult == ManagedCitizen.LoginResult.Success) {  	ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	int curRemains = 1;  	for (int i = 1; i <= 20; i++) {  		try {  			ConsoleLog.WriteLine ("Collect money' try " + i.ToString ());  			int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' 0);  			if (tmpRemains == -1)  				continue;  			curRemains = tmpRemains;  			if (curRemains < 0.1) {  				ConsoleLog.WriteLine ("Everything converted");  				break;  			}  			if (Bot.Bot.DonateMoney (iCorrespondentID' curRemains - 0.01' iCurrencySpendID)) {  				ConsoleLog.WriteLine ("Collect money successfull");  			}  			else {  				ConsoleLog.WriteLine ("Collect money fail");  			}  		}  		catch (System.Exception e1) {  			ConsoleLog.WriteLine ("Collectmoney - error" + e1.ToString ());  		}  		Bot.GetInfoFromCommonResponse (true);  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		// Logout  		Bot.Bot.Logout ();  	}  }  else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcCollectmoney,The following statement contains a magic number: if (loginResult == ManagedCitizen.LoginResult.Success) {  	ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	int curRemains = 1;  	for (int i = 1; i <= 20; i++) {  		try {  			ConsoleLog.WriteLine ("Collect money' try " + i.ToString ());  			int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' 0);  			if (tmpRemains == -1)  				continue;  			curRemains = tmpRemains;  			if (curRemains < 0.1) {  				ConsoleLog.WriteLine ("Everything converted");  				break;  			}  			if (Bot.Bot.DonateMoney (iCorrespondentID' curRemains - 0.01' iCurrencySpendID)) {  				ConsoleLog.WriteLine ("Collect money successfull");  			}  			else {  				ConsoleLog.WriteLine ("Collect money fail");  			}  		}  		catch (System.Exception e1) {  			ConsoleLog.WriteLine ("Collectmoney - error" + e1.ToString ());  		}  		Bot.GetInfoFromCommonResponse (true);  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		// Logout  		Bot.Bot.Logout ();  	}  }  else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcCollectmoney,The following statement contains a magic number: if (loginResult == ManagedCitizen.LoginResult.Success) {  	ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	int curRemains = 1;  	for (int i = 1; i <= 20; i++) {  		try {  			ConsoleLog.WriteLine ("Collect money' try " + i.ToString ());  			int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' 0);  			if (tmpRemains == -1)  				continue;  			curRemains = tmpRemains;  			if (curRemains < 0.1) {  				ConsoleLog.WriteLine ("Everything converted");  				break;  			}  			if (Bot.Bot.DonateMoney (iCorrespondentID' curRemains - 0.01' iCurrencySpendID)) {  				ConsoleLog.WriteLine ("Collect money successfull");  			}  			else {  				ConsoleLog.WriteLine ("Collect money fail");  			}  		}  		catch (System.Exception e1) {  			ConsoleLog.WriteLine ("Collectmoney - error" + e1.ToString ());  		}  		Bot.GetInfoFromCommonResponse (true);  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		// Logout  		Bot.Bot.Logout ();  	}  }  else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcCollectmoney,The following statement contains a magic number: for (int i = 1; i <= 20; i++) {  	try {  		ConsoleLog.WriteLine ("Collect money' try " + i.ToString ());  		int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' 0);  		if (tmpRemains == -1)  			continue;  		curRemains = tmpRemains;  		if (curRemains < 0.1) {  			ConsoleLog.WriteLine ("Everything converted");  			break;  		}  		if (Bot.Bot.DonateMoney (iCorrespondentID' curRemains - 0.01' iCurrencySpendID)) {  			ConsoleLog.WriteLine ("Collect money successfull");  		}  		else {  			ConsoleLog.WriteLine ("Collect money fail");  		}  	}  	catch (System.Exception e1) {  		ConsoleLog.WriteLine ("Collectmoney - error" + e1.ToString ());  	}  	Bot.GetInfoFromCommonResponse (true);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	// Logout  	Bot.Bot.Logout ();  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcCollectmoney,The following statement contains a magic number: for (int i = 1; i <= 20; i++) {  	try {  		ConsoleLog.WriteLine ("Collect money' try " + i.ToString ());  		int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' 0);  		if (tmpRemains == -1)  			continue;  		curRemains = tmpRemains;  		if (curRemains < 0.1) {  			ConsoleLog.WriteLine ("Everything converted");  			break;  		}  		if (Bot.Bot.DonateMoney (iCorrespondentID' curRemains - 0.01' iCurrencySpendID)) {  			ConsoleLog.WriteLine ("Collect money successfull");  		}  		else {  			ConsoleLog.WriteLine ("Collect money fail");  		}  	}  	catch (System.Exception e1) {  		ConsoleLog.WriteLine ("Collectmoney - error" + e1.ToString ());  	}  	Bot.GetInfoFromCommonResponse (true);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	// Logout  	Bot.Bot.Logout ();  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcCollectmoney,The following statement contains a magic number: for (int i = 1; i <= 20; i++) {  	try {  		ConsoleLog.WriteLine ("Collect money' try " + i.ToString ());  		int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' 0);  		if (tmpRemains == -1)  			continue;  		curRemains = tmpRemains;  		if (curRemains < 0.1) {  			ConsoleLog.WriteLine ("Everything converted");  			break;  		}  		if (Bot.Bot.DonateMoney (iCorrespondentID' curRemains - 0.01' iCurrencySpendID)) {  			ConsoleLog.WriteLine ("Collect money successfull");  		}  		else {  			ConsoleLog.WriteLine ("Collect money fail");  		}  	}  	catch (System.Exception e1) {  		ConsoleLog.WriteLine ("Collectmoney - error" + e1.ToString ());  	}  	Bot.GetInfoFromCommonResponse (true);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	// Logout  	Bot.Bot.Logout ();  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcCollectmoney,The following statement contains a magic number: try {  	ConsoleLog.WriteLine ("Collect money' try " + i.ToString ());  	int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' 0);  	if (tmpRemains == -1)  		continue;  	curRemains = tmpRemains;  	if (curRemains < 0.1) {  		ConsoleLog.WriteLine ("Everything converted");  		break;  	}  	if (Bot.Bot.DonateMoney (iCorrespondentID' curRemains - 0.01' iCurrencySpendID)) {  		ConsoleLog.WriteLine ("Collect money successfull");  	}  	else {  		ConsoleLog.WriteLine ("Collect money fail");  	}  }  catch (System.Exception e1) {  	ConsoleLog.WriteLine ("Collectmoney - error" + e1.ToString ());  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcCollectmoney,The following statement contains a magic number: try {  	ConsoleLog.WriteLine ("Collect money' try " + i.ToString ());  	int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' 0);  	if (tmpRemains == -1)  		continue;  	curRemains = tmpRemains;  	if (curRemains < 0.1) {  		ConsoleLog.WriteLine ("Everything converted");  		break;  	}  	if (Bot.Bot.DonateMoney (iCorrespondentID' curRemains - 0.01' iCurrencySpendID)) {  		ConsoleLog.WriteLine ("Collect money successfull");  	}  	else {  		ConsoleLog.WriteLine ("Collect money fail");  	}  }  catch (System.Exception e1) {  	ConsoleLog.WriteLine ("Collectmoney - error" + e1.ToString ());  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcCollectmoney,The following statement contains a magic number: if (curRemains < 0.1) {  	ConsoleLog.WriteLine ("Everything converted");  	break;  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcCollectmoney,The following statement contains a magic number: if (Bot.Bot.DonateMoney (iCorrespondentID' curRemains - 0.01' iCurrencySpendID)) {  	ConsoleLog.WriteLine ("Collect money successfull");  }  else {  	ConsoleLog.WriteLine ("Collect money fail");  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcCollectmoney,The following statement contains a magic number: if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcCollectmoney,The following statement contains a magic number: botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,WorkerDonateMoney,The following statement contains a magic number: if (args.Length != 6) {  	ConsoleLog.WriteLine ("Usage: donatemoney group login(email) password currency amount");  	return;  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,WorkerDonateMoney,The following statement contains a magic number: login = args [2];  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,WorkerDonateMoney,The following statement contains a magic number: password = args [3];  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,WorkerDonateMoney,The following statement contains a magic number: int.TryParse (args [4]' out iCurrencySpendID);  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,WorkerDonateMoney,The following statement contains a magic number: double.TryParse (args [5]' out dHowMuch);  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,WorkerDonateMoney,The following statement contains a magic number: try {  	//инициализируем класс  	NerZul.Core.Utils.ManagedCitizen Bot = new NerZul.Core.Utils.ManagedCitizen (login' login' password' Globals.BotConfig);  	//Пытаемся залогиниться через проксики  	ManagedCitizen.LoginResult loginResult = Bot.Login ();  	if (loginResult == ManagedCitizen.LoginResult.Success) {  		ConsoleLog.WriteLine ("Logged in - " + login);  		DbRows bots = null;  		lock (Globals.DBLocker) {  			Globals.Database.Reset ();  			if (group.ToLower () != "all")  				Globals.Database.Where ("group"' group);  			Globals.Database.Where ("banned"' 0);  			if (!String.IsNullOrEmpty (Globals.addWhere))  				Globals.Database.Where (Globals.addWhere);  			bots = Globals.Database.Select ("bots");  			Globals.Database.Reset ();  		}  		if (!Globals.webCitadel.SendLogInfo (args' bots.Count))  			return;  		int totalBotCounter = bots.Count;  		int processedBotCounter = 0;  		bots = DbRows.MixList (bots);  		DbRow botinfo;  		Random rnd = new System.Random ();  		foreach (var botnfo in bots) {  			botinfo = (DbRow)botnfo;  			processedBotCounter++;  			ConsoleLog.WriteLine ("Processing bot " + processedBotCounter.ToString () + "/" + totalBotCounter.ToString () + ": " + (string)botinfo ["login"]);  			try {  				for (int i = 0; i < 5; i++) {  					ConsoleLog.WriteLine ("Donate money to " + botinfo ["login"] + "' try " + (i + 1).ToString ());  					if (Bot.Bot.DonateMoney (Convert.ToInt32 ((uint)botinfo ["citizen_id"])' dHowMuch' iCurrencySpendID))  						break;  				}  				Bot.GetInfoFromCommonResponse (true);  			}  			catch (System.Exception e1) {  				ConsoleLog.WriteLine ("Donate - error" + e1.ToString ());  			}  		}  	}  }  catch (System.Exception e) {  	ConsoleLog.WriteLine ("Worker error: " + e.Message);  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,WorkerDonateMoney,The following statement contains a magic number: if (loginResult == ManagedCitizen.LoginResult.Success) {  	ConsoleLog.WriteLine ("Logged in - " + login);  	DbRows bots = null;  	lock (Globals.DBLocker) {  		Globals.Database.Reset ();  		if (group.ToLower () != "all")  			Globals.Database.Where ("group"' group);  		Globals.Database.Where ("banned"' 0);  		if (!String.IsNullOrEmpty (Globals.addWhere))  			Globals.Database.Where (Globals.addWhere);  		bots = Globals.Database.Select ("bots");  		Globals.Database.Reset ();  	}  	if (!Globals.webCitadel.SendLogInfo (args' bots.Count))  		return;  	int totalBotCounter = bots.Count;  	int processedBotCounter = 0;  	bots = DbRows.MixList (bots);  	DbRow botinfo;  	Random rnd = new System.Random ();  	foreach (var botnfo in bots) {  		botinfo = (DbRow)botnfo;  		processedBotCounter++;  		ConsoleLog.WriteLine ("Processing bot " + processedBotCounter.ToString () + "/" + totalBotCounter.ToString () + ": " + (string)botinfo ["login"]);  		try {  			for (int i = 0; i < 5; i++) {  				ConsoleLog.WriteLine ("Donate money to " + botinfo ["login"] + "' try " + (i + 1).ToString ());  				if (Bot.Bot.DonateMoney (Convert.ToInt32 ((uint)botinfo ["citizen_id"])' dHowMuch' iCurrencySpendID))  					break;  			}  			Bot.GetInfoFromCommonResponse (true);  		}  		catch (System.Exception e1) {  			ConsoleLog.WriteLine ("Donate - error" + e1.ToString ());  		}  	}  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,WorkerDonateMoney,The following statement contains a magic number: foreach (var botnfo in bots) {  	botinfo = (DbRow)botnfo;  	processedBotCounter++;  	ConsoleLog.WriteLine ("Processing bot " + processedBotCounter.ToString () + "/" + totalBotCounter.ToString () + ": " + (string)botinfo ["login"]);  	try {  		for (int i = 0; i < 5; i++) {  			ConsoleLog.WriteLine ("Donate money to " + botinfo ["login"] + "' try " + (i + 1).ToString ());  			if (Bot.Bot.DonateMoney (Convert.ToInt32 ((uint)botinfo ["citizen_id"])' dHowMuch' iCurrencySpendID))  				break;  		}  		Bot.GetInfoFromCommonResponse (true);  	}  	catch (System.Exception e1) {  		ConsoleLog.WriteLine ("Donate - error" + e1.ToString ());  	}  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,WorkerDonateMoney,The following statement contains a magic number: try {  	for (int i = 0; i < 5; i++) {  		ConsoleLog.WriteLine ("Donate money to " + botinfo ["login"] + "' try " + (i + 1).ToString ());  		if (Bot.Bot.DonateMoney (Convert.ToInt32 ((uint)botinfo ["citizen_id"])' dHowMuch' iCurrencySpendID))  			break;  	}  	Bot.GetInfoFromCommonResponse (true);  }  catch (System.Exception e1) {  	ConsoleLog.WriteLine ("Donate - error" + e1.ToString ());  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,WorkerDonateMoney,The following statement contains a magic number: for (int i = 0; i < 5; i++) {  	ConsoleLog.WriteLine ("Donate money to " + botinfo ["login"] + "' try " + (i + 1).ToString ());  	if (Bot.Bot.DonateMoney (Convert.ToInt32 ((uint)botinfo ["citizen_id"])' dHowMuch' iCurrencySpendID))  		break;  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,WorkerConvertMoney,The following statement contains a magic number: if (args.Length != 8) {  	ConsoleLog.WriteLine ("Usage: convertmoney group how_much curr_for_sell_id curr_for_buy_id max_rate exp_from exp_to");  	return;  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,WorkerConvertMoney,The following statement contains a magic number: double.TryParse (args [2]' out dHowMuch);  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,WorkerConvertMoney,The following statement contains a magic number: int.TryParse (args [3]' out iCurrencySpendID);  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,WorkerConvertMoney,The following statement contains a magic number: int.TryParse (args [4]' out iCurrencyBuyID);  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,WorkerConvertMoney,The following statement contains a magic number: double.TryParse (args [5]' out fMaxRate);  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,WorkerConvertMoney,The following statement contains a magic number: int.TryParse (args [6]' out iExpFrom);  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,WorkerConvertMoney,The following statement contains a magic number: int.TryParse (args [7]' out iExpTo);  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,WorkerConvertMoney,The following statement contains a magic number: if (iExpTo == 0)  	iExpTo = 99999;  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,WorkerConvertMoney,The following statement contains a magic number: iExpTo = 99999;  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,WorkerConvertMoney,The following statement contains a magic number: lock (Globals.DBLocker) {  	Globals.Database.Reset ();  	if (group.ToLower () != "all")  		Globals.Database.Where ("group"' group);  	Globals.Database.Where ("banned"' 0);  	Globals.Database.Where ("happiness"' 0);  	if (iCurrencySpendID == 62)  		Globals.Database.Where ("(gold >= 1)");  	Globals.Database.Where ("(experience >= " + iExpFrom.ToString () + ")");  	Globals.Database.Where ("(experience <= " + iExpTo.ToString () + ")");  	if (!String.IsNullOrEmpty (Globals.addWhere))  		Globals.Database.Where (Globals.addWhere);  	bots = Globals.Database.Select ("bots");  	Globals.Database.Reset ();  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,WorkerConvertMoney,The following statement contains a magic number: if (iCurrencySpendID == 62)  	Globals.Database.Where ("(gold >= 1)");  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcConvertMoney,The following statement contains a magic number: try {  	NerZul.Core.Utils.ManagedCitizen Bot = new ManagedCitizen ((string)botinfo ["login"]' (string)botinfo ["email"]' (string)botinfo ["password"]' Globals.BotConfig);  	ManagedCitizen.LoginResult loginResult = Bot.Login ();  	if (loginResult == ManagedCitizen.LoginResult.Success) {  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  		int curRemains = 1;  		for (int i = 1; i <= 20; i++) {  			try {  				ConsoleLog.WriteLine ("Convert money' try " + i.ToString ());  				string response;  				string URL;  				int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  				if (tmpRemains == -1)  					continue;  				curRemains = tmpRemains;  				if (curRemains < 0.1) {  					ConsoleLog.WriteLine ("Everything converted");  					break;  				}  				// Открываем страницу ставок ММ' получаем первую нормальную ставку и ее параметры  				ConsoleLog.WriteLine ("Loading rates MM page...");  				URL = "http://www.erepublik.com/en/exchange/listOffers?select_page=select&buy_currency_history_id=buy_currencies=" + iCurrencyBuyID.ToString () + "&sell_currency_history_id=sell_currencies=" + iCurrencySpendID.ToString () + "&account_type=citizen-&action_path=listOffers&page=page=1";  				//ConsoleLog.WriteLine("URL: " + URL);  				response = Bot.Bot.CustomRequest (URL);  				//ConsoleLog.WriteLine(response' "ConvertMoneyLog2.txt");  				if (!response.Contains ("form_amount_accept_")) {  					ConsoleLog.WriteLine ("Error rates MM page");  					continue;  				}  				int iOfferID = 0;  				double dPosRate = 0;  				double dPosAmount = 0;  				int iCorrespondentID = 0;  				for (int rateNum = 1; rateNum <= 10; rateNum++) {  					string sOfferId = CommonUtils.GetStringBetween (response' "\"form_amount_accept_"' "\"");  					string sPosRate = CommonUtils.GetStringBetween (response' "<span class=\"special\" id=\"exchange_value_amount_" + sOfferId + "\">"' "</span>");  					string sPosAmount = CommonUtils.GetStringBetween (response' "<span class=\"special\"  id=\"initial_amount_" + sOfferId + "\">"' "</span>");  					string sCorrespondentID = CommonUtils.GetStringBetween (response' "<a class=\"nameholder dotted\" href=\"/en/citizen/profile/"' "\">");  					ConsoleLog.WriteLine ("Detected position " + rateNum.ToString () + ": OfferId=" + sOfferId + "' PosRate=" + sPosRate + "' PosAmount=" + sPosAmount + "' CorrespondentID=" + sCorrespondentID);  					iOfferID = Convert.ToInt32 (sOfferId);  					dPosRate = Convert.ToDouble (sPosRate);  					dPosAmount = Convert.ToDouble (sPosAmount);  					iCorrespondentID = Convert.ToInt32 (sCorrespondentID);  					if (dPosAmount < 0.01) {  						ConsoleLog.WriteLine ("Position amount less then 0.01' getting next position");  						response = response.Substring (response.IndexOf ("submit_form_accept") + 10);  					}  					else  						break;  				}  				if (dPosRate > fMaxRate) {  					ConsoleLog.WriteLine ("Rate greater then max possible' waiting 10 sec...");  					System.Threading.Thread.Sleep (10000);  					continue;  				}  				//double dToBuy = Math.Min(Math.Truncate(curRemains / dPosRate)' dPosAmount);  				double dToBuy = Math.Min (curRemains / dPosRate - 0.01' dPosAmount);  				dToBuy = Math.Truncate (dToBuy * 100) / 100;  				ConsoleLog.WriteLine ("Buy " + dToBuy.ToString () + " currency");  				if (Bot.Bot.BuyMoney (iOfferID' dToBuy' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  					ConsoleLog.WriteLine ("Buy currency successfull");  				}  				else {  					ConsoleLog.WriteLine ("Buy currency fail");  				}  			}  			catch (System.Exception localE) {  				ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  			}  		}  		Bot.GetInfoFromCommonResponse (true);  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		// Logout  		Bot.Bot.Logout ();  	}  	else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  		botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  		Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  	}  	else {  		//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  		ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  	}  }  catch (System.Exception e) {  	ConsoleLog.WriteLine ("Convert exception: " + e.Message);  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcConvertMoney,The following statement contains a magic number: try {  	NerZul.Core.Utils.ManagedCitizen Bot = new ManagedCitizen ((string)botinfo ["login"]' (string)botinfo ["email"]' (string)botinfo ["password"]' Globals.BotConfig);  	ManagedCitizen.LoginResult loginResult = Bot.Login ();  	if (loginResult == ManagedCitizen.LoginResult.Success) {  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  		int curRemains = 1;  		for (int i = 1; i <= 20; i++) {  			try {  				ConsoleLog.WriteLine ("Convert money' try " + i.ToString ());  				string response;  				string URL;  				int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  				if (tmpRemains == -1)  					continue;  				curRemains = tmpRemains;  				if (curRemains < 0.1) {  					ConsoleLog.WriteLine ("Everything converted");  					break;  				}  				// Открываем страницу ставок ММ' получаем первую нормальную ставку и ее параметры  				ConsoleLog.WriteLine ("Loading rates MM page...");  				URL = "http://www.erepublik.com/en/exchange/listOffers?select_page=select&buy_currency_history_id=buy_currencies=" + iCurrencyBuyID.ToString () + "&sell_currency_history_id=sell_currencies=" + iCurrencySpendID.ToString () + "&account_type=citizen-&action_path=listOffers&page=page=1";  				//ConsoleLog.WriteLine("URL: " + URL);  				response = Bot.Bot.CustomRequest (URL);  				//ConsoleLog.WriteLine(response' "ConvertMoneyLog2.txt");  				if (!response.Contains ("form_amount_accept_")) {  					ConsoleLog.WriteLine ("Error rates MM page");  					continue;  				}  				int iOfferID = 0;  				double dPosRate = 0;  				double dPosAmount = 0;  				int iCorrespondentID = 0;  				for (int rateNum = 1; rateNum <= 10; rateNum++) {  					string sOfferId = CommonUtils.GetStringBetween (response' "\"form_amount_accept_"' "\"");  					string sPosRate = CommonUtils.GetStringBetween (response' "<span class=\"special\" id=\"exchange_value_amount_" + sOfferId + "\">"' "</span>");  					string sPosAmount = CommonUtils.GetStringBetween (response' "<span class=\"special\"  id=\"initial_amount_" + sOfferId + "\">"' "</span>");  					string sCorrespondentID = CommonUtils.GetStringBetween (response' "<a class=\"nameholder dotted\" href=\"/en/citizen/profile/"' "\">");  					ConsoleLog.WriteLine ("Detected position " + rateNum.ToString () + ": OfferId=" + sOfferId + "' PosRate=" + sPosRate + "' PosAmount=" + sPosAmount + "' CorrespondentID=" + sCorrespondentID);  					iOfferID = Convert.ToInt32 (sOfferId);  					dPosRate = Convert.ToDouble (sPosRate);  					dPosAmount = Convert.ToDouble (sPosAmount);  					iCorrespondentID = Convert.ToInt32 (sCorrespondentID);  					if (dPosAmount < 0.01) {  						ConsoleLog.WriteLine ("Position amount less then 0.01' getting next position");  						response = response.Substring (response.IndexOf ("submit_form_accept") + 10);  					}  					else  						break;  				}  				if (dPosRate > fMaxRate) {  					ConsoleLog.WriteLine ("Rate greater then max possible' waiting 10 sec...");  					System.Threading.Thread.Sleep (10000);  					continue;  				}  				//double dToBuy = Math.Min(Math.Truncate(curRemains / dPosRate)' dPosAmount);  				double dToBuy = Math.Min (curRemains / dPosRate - 0.01' dPosAmount);  				dToBuy = Math.Truncate (dToBuy * 100) / 100;  				ConsoleLog.WriteLine ("Buy " + dToBuy.ToString () + " currency");  				if (Bot.Bot.BuyMoney (iOfferID' dToBuy' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  					ConsoleLog.WriteLine ("Buy currency successfull");  				}  				else {  					ConsoleLog.WriteLine ("Buy currency fail");  				}  			}  			catch (System.Exception localE) {  				ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  			}  		}  		Bot.GetInfoFromCommonResponse (true);  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		// Logout  		Bot.Bot.Logout ();  	}  	else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  		botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  		Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  	}  	else {  		//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  		ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  	}  }  catch (System.Exception e) {  	ConsoleLog.WriteLine ("Convert exception: " + e.Message);  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcConvertMoney,The following statement contains a magic number: try {  	NerZul.Core.Utils.ManagedCitizen Bot = new ManagedCitizen ((string)botinfo ["login"]' (string)botinfo ["email"]' (string)botinfo ["password"]' Globals.BotConfig);  	ManagedCitizen.LoginResult loginResult = Bot.Login ();  	if (loginResult == ManagedCitizen.LoginResult.Success) {  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  		int curRemains = 1;  		for (int i = 1; i <= 20; i++) {  			try {  				ConsoleLog.WriteLine ("Convert money' try " + i.ToString ());  				string response;  				string URL;  				int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  				if (tmpRemains == -1)  					continue;  				curRemains = tmpRemains;  				if (curRemains < 0.1) {  					ConsoleLog.WriteLine ("Everything converted");  					break;  				}  				// Открываем страницу ставок ММ' получаем первую нормальную ставку и ее параметры  				ConsoleLog.WriteLine ("Loading rates MM page...");  				URL = "http://www.erepublik.com/en/exchange/listOffers?select_page=select&buy_currency_history_id=buy_currencies=" + iCurrencyBuyID.ToString () + "&sell_currency_history_id=sell_currencies=" + iCurrencySpendID.ToString () + "&account_type=citizen-&action_path=listOffers&page=page=1";  				//ConsoleLog.WriteLine("URL: " + URL);  				response = Bot.Bot.CustomRequest (URL);  				//ConsoleLog.WriteLine(response' "ConvertMoneyLog2.txt");  				if (!response.Contains ("form_amount_accept_")) {  					ConsoleLog.WriteLine ("Error rates MM page");  					continue;  				}  				int iOfferID = 0;  				double dPosRate = 0;  				double dPosAmount = 0;  				int iCorrespondentID = 0;  				for (int rateNum = 1; rateNum <= 10; rateNum++) {  					string sOfferId = CommonUtils.GetStringBetween (response' "\"form_amount_accept_"' "\"");  					string sPosRate = CommonUtils.GetStringBetween (response' "<span class=\"special\" id=\"exchange_value_amount_" + sOfferId + "\">"' "</span>");  					string sPosAmount = CommonUtils.GetStringBetween (response' "<span class=\"special\"  id=\"initial_amount_" + sOfferId + "\">"' "</span>");  					string sCorrespondentID = CommonUtils.GetStringBetween (response' "<a class=\"nameholder dotted\" href=\"/en/citizen/profile/"' "\">");  					ConsoleLog.WriteLine ("Detected position " + rateNum.ToString () + ": OfferId=" + sOfferId + "' PosRate=" + sPosRate + "' PosAmount=" + sPosAmount + "' CorrespondentID=" + sCorrespondentID);  					iOfferID = Convert.ToInt32 (sOfferId);  					dPosRate = Convert.ToDouble (sPosRate);  					dPosAmount = Convert.ToDouble (sPosAmount);  					iCorrespondentID = Convert.ToInt32 (sCorrespondentID);  					if (dPosAmount < 0.01) {  						ConsoleLog.WriteLine ("Position amount less then 0.01' getting next position");  						response = response.Substring (response.IndexOf ("submit_form_accept") + 10);  					}  					else  						break;  				}  				if (dPosRate > fMaxRate) {  					ConsoleLog.WriteLine ("Rate greater then max possible' waiting 10 sec...");  					System.Threading.Thread.Sleep (10000);  					continue;  				}  				//double dToBuy = Math.Min(Math.Truncate(curRemains / dPosRate)' dPosAmount);  				double dToBuy = Math.Min (curRemains / dPosRate - 0.01' dPosAmount);  				dToBuy = Math.Truncate (dToBuy * 100) / 100;  				ConsoleLog.WriteLine ("Buy " + dToBuy.ToString () + " currency");  				if (Bot.Bot.BuyMoney (iOfferID' dToBuy' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  					ConsoleLog.WriteLine ("Buy currency successfull");  				}  				else {  					ConsoleLog.WriteLine ("Buy currency fail");  				}  			}  			catch (System.Exception localE) {  				ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  			}  		}  		Bot.GetInfoFromCommonResponse (true);  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		// Logout  		Bot.Bot.Logout ();  	}  	else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  		botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  		Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  	}  	else {  		//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  		ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  	}  }  catch (System.Exception e) {  	ConsoleLog.WriteLine ("Convert exception: " + e.Message);  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcConvertMoney,The following statement contains a magic number: try {  	NerZul.Core.Utils.ManagedCitizen Bot = new ManagedCitizen ((string)botinfo ["login"]' (string)botinfo ["email"]' (string)botinfo ["password"]' Globals.BotConfig);  	ManagedCitizen.LoginResult loginResult = Bot.Login ();  	if (loginResult == ManagedCitizen.LoginResult.Success) {  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  		int curRemains = 1;  		for (int i = 1; i <= 20; i++) {  			try {  				ConsoleLog.WriteLine ("Convert money' try " + i.ToString ());  				string response;  				string URL;  				int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  				if (tmpRemains == -1)  					continue;  				curRemains = tmpRemains;  				if (curRemains < 0.1) {  					ConsoleLog.WriteLine ("Everything converted");  					break;  				}  				// Открываем страницу ставок ММ' получаем первую нормальную ставку и ее параметры  				ConsoleLog.WriteLine ("Loading rates MM page...");  				URL = "http://www.erepublik.com/en/exchange/listOffers?select_page=select&buy_currency_history_id=buy_currencies=" + iCurrencyBuyID.ToString () + "&sell_currency_history_id=sell_currencies=" + iCurrencySpendID.ToString () + "&account_type=citizen-&action_path=listOffers&page=page=1";  				//ConsoleLog.WriteLine("URL: " + URL);  				response = Bot.Bot.CustomRequest (URL);  				//ConsoleLog.WriteLine(response' "ConvertMoneyLog2.txt");  				if (!response.Contains ("form_amount_accept_")) {  					ConsoleLog.WriteLine ("Error rates MM page");  					continue;  				}  				int iOfferID = 0;  				double dPosRate = 0;  				double dPosAmount = 0;  				int iCorrespondentID = 0;  				for (int rateNum = 1; rateNum <= 10; rateNum++) {  					string sOfferId = CommonUtils.GetStringBetween (response' "\"form_amount_accept_"' "\"");  					string sPosRate = CommonUtils.GetStringBetween (response' "<span class=\"special\" id=\"exchange_value_amount_" + sOfferId + "\">"' "</span>");  					string sPosAmount = CommonUtils.GetStringBetween (response' "<span class=\"special\"  id=\"initial_amount_" + sOfferId + "\">"' "</span>");  					string sCorrespondentID = CommonUtils.GetStringBetween (response' "<a class=\"nameholder dotted\" href=\"/en/citizen/profile/"' "\">");  					ConsoleLog.WriteLine ("Detected position " + rateNum.ToString () + ": OfferId=" + sOfferId + "' PosRate=" + sPosRate + "' PosAmount=" + sPosAmount + "' CorrespondentID=" + sCorrespondentID);  					iOfferID = Convert.ToInt32 (sOfferId);  					dPosRate = Convert.ToDouble (sPosRate);  					dPosAmount = Convert.ToDouble (sPosAmount);  					iCorrespondentID = Convert.ToInt32 (sCorrespondentID);  					if (dPosAmount < 0.01) {  						ConsoleLog.WriteLine ("Position amount less then 0.01' getting next position");  						response = response.Substring (response.IndexOf ("submit_form_accept") + 10);  					}  					else  						break;  				}  				if (dPosRate > fMaxRate) {  					ConsoleLog.WriteLine ("Rate greater then max possible' waiting 10 sec...");  					System.Threading.Thread.Sleep (10000);  					continue;  				}  				//double dToBuy = Math.Min(Math.Truncate(curRemains / dPosRate)' dPosAmount);  				double dToBuy = Math.Min (curRemains / dPosRate - 0.01' dPosAmount);  				dToBuy = Math.Truncate (dToBuy * 100) / 100;  				ConsoleLog.WriteLine ("Buy " + dToBuy.ToString () + " currency");  				if (Bot.Bot.BuyMoney (iOfferID' dToBuy' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  					ConsoleLog.WriteLine ("Buy currency successfull");  				}  				else {  					ConsoleLog.WriteLine ("Buy currency fail");  				}  			}  			catch (System.Exception localE) {  				ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  			}  		}  		Bot.GetInfoFromCommonResponse (true);  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		// Logout  		Bot.Bot.Logout ();  	}  	else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  		botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  		Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  	}  	else {  		//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  		ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  	}  }  catch (System.Exception e) {  	ConsoleLog.WriteLine ("Convert exception: " + e.Message);  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcConvertMoney,The following statement contains a magic number: try {  	NerZul.Core.Utils.ManagedCitizen Bot = new ManagedCitizen ((string)botinfo ["login"]' (string)botinfo ["email"]' (string)botinfo ["password"]' Globals.BotConfig);  	ManagedCitizen.LoginResult loginResult = Bot.Login ();  	if (loginResult == ManagedCitizen.LoginResult.Success) {  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  		int curRemains = 1;  		for (int i = 1; i <= 20; i++) {  			try {  				ConsoleLog.WriteLine ("Convert money' try " + i.ToString ());  				string response;  				string URL;  				int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  				if (tmpRemains == -1)  					continue;  				curRemains = tmpRemains;  				if (curRemains < 0.1) {  					ConsoleLog.WriteLine ("Everything converted");  					break;  				}  				// Открываем страницу ставок ММ' получаем первую нормальную ставку и ее параметры  				ConsoleLog.WriteLine ("Loading rates MM page...");  				URL = "http://www.erepublik.com/en/exchange/listOffers?select_page=select&buy_currency_history_id=buy_currencies=" + iCurrencyBuyID.ToString () + "&sell_currency_history_id=sell_currencies=" + iCurrencySpendID.ToString () + "&account_type=citizen-&action_path=listOffers&page=page=1";  				//ConsoleLog.WriteLine("URL: " + URL);  				response = Bot.Bot.CustomRequest (URL);  				//ConsoleLog.WriteLine(response' "ConvertMoneyLog2.txt");  				if (!response.Contains ("form_amount_accept_")) {  					ConsoleLog.WriteLine ("Error rates MM page");  					continue;  				}  				int iOfferID = 0;  				double dPosRate = 0;  				double dPosAmount = 0;  				int iCorrespondentID = 0;  				for (int rateNum = 1; rateNum <= 10; rateNum++) {  					string sOfferId = CommonUtils.GetStringBetween (response' "\"form_amount_accept_"' "\"");  					string sPosRate = CommonUtils.GetStringBetween (response' "<span class=\"special\" id=\"exchange_value_amount_" + sOfferId + "\">"' "</span>");  					string sPosAmount = CommonUtils.GetStringBetween (response' "<span class=\"special\"  id=\"initial_amount_" + sOfferId + "\">"' "</span>");  					string sCorrespondentID = CommonUtils.GetStringBetween (response' "<a class=\"nameholder dotted\" href=\"/en/citizen/profile/"' "\">");  					ConsoleLog.WriteLine ("Detected position " + rateNum.ToString () + ": OfferId=" + sOfferId + "' PosRate=" + sPosRate + "' PosAmount=" + sPosAmount + "' CorrespondentID=" + sCorrespondentID);  					iOfferID = Convert.ToInt32 (sOfferId);  					dPosRate = Convert.ToDouble (sPosRate);  					dPosAmount = Convert.ToDouble (sPosAmount);  					iCorrespondentID = Convert.ToInt32 (sCorrespondentID);  					if (dPosAmount < 0.01) {  						ConsoleLog.WriteLine ("Position amount less then 0.01' getting next position");  						response = response.Substring (response.IndexOf ("submit_form_accept") + 10);  					}  					else  						break;  				}  				if (dPosRate > fMaxRate) {  					ConsoleLog.WriteLine ("Rate greater then max possible' waiting 10 sec...");  					System.Threading.Thread.Sleep (10000);  					continue;  				}  				//double dToBuy = Math.Min(Math.Truncate(curRemains / dPosRate)' dPosAmount);  				double dToBuy = Math.Min (curRemains / dPosRate - 0.01' dPosAmount);  				dToBuy = Math.Truncate (dToBuy * 100) / 100;  				ConsoleLog.WriteLine ("Buy " + dToBuy.ToString () + " currency");  				if (Bot.Bot.BuyMoney (iOfferID' dToBuy' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  					ConsoleLog.WriteLine ("Buy currency successfull");  				}  				else {  					ConsoleLog.WriteLine ("Buy currency fail");  				}  			}  			catch (System.Exception localE) {  				ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  			}  		}  		Bot.GetInfoFromCommonResponse (true);  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		// Logout  		Bot.Bot.Logout ();  	}  	else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  		botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  		Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  	}  	else {  		//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  		ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  	}  }  catch (System.Exception e) {  	ConsoleLog.WriteLine ("Convert exception: " + e.Message);  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcConvertMoney,The following statement contains a magic number: try {  	NerZul.Core.Utils.ManagedCitizen Bot = new ManagedCitizen ((string)botinfo ["login"]' (string)botinfo ["email"]' (string)botinfo ["password"]' Globals.BotConfig);  	ManagedCitizen.LoginResult loginResult = Bot.Login ();  	if (loginResult == ManagedCitizen.LoginResult.Success) {  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  		int curRemains = 1;  		for (int i = 1; i <= 20; i++) {  			try {  				ConsoleLog.WriteLine ("Convert money' try " + i.ToString ());  				string response;  				string URL;  				int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  				if (tmpRemains == -1)  					continue;  				curRemains = tmpRemains;  				if (curRemains < 0.1) {  					ConsoleLog.WriteLine ("Everything converted");  					break;  				}  				// Открываем страницу ставок ММ' получаем первую нормальную ставку и ее параметры  				ConsoleLog.WriteLine ("Loading rates MM page...");  				URL = "http://www.erepublik.com/en/exchange/listOffers?select_page=select&buy_currency_history_id=buy_currencies=" + iCurrencyBuyID.ToString () + "&sell_currency_history_id=sell_currencies=" + iCurrencySpendID.ToString () + "&account_type=citizen-&action_path=listOffers&page=page=1";  				//ConsoleLog.WriteLine("URL: " + URL);  				response = Bot.Bot.CustomRequest (URL);  				//ConsoleLog.WriteLine(response' "ConvertMoneyLog2.txt");  				if (!response.Contains ("form_amount_accept_")) {  					ConsoleLog.WriteLine ("Error rates MM page");  					continue;  				}  				int iOfferID = 0;  				double dPosRate = 0;  				double dPosAmount = 0;  				int iCorrespondentID = 0;  				for (int rateNum = 1; rateNum <= 10; rateNum++) {  					string sOfferId = CommonUtils.GetStringBetween (response' "\"form_amount_accept_"' "\"");  					string sPosRate = CommonUtils.GetStringBetween (response' "<span class=\"special\" id=\"exchange_value_amount_" + sOfferId + "\">"' "</span>");  					string sPosAmount = CommonUtils.GetStringBetween (response' "<span class=\"special\"  id=\"initial_amount_" + sOfferId + "\">"' "</span>");  					string sCorrespondentID = CommonUtils.GetStringBetween (response' "<a class=\"nameholder dotted\" href=\"/en/citizen/profile/"' "\">");  					ConsoleLog.WriteLine ("Detected position " + rateNum.ToString () + ": OfferId=" + sOfferId + "' PosRate=" + sPosRate + "' PosAmount=" + sPosAmount + "' CorrespondentID=" + sCorrespondentID);  					iOfferID = Convert.ToInt32 (sOfferId);  					dPosRate = Convert.ToDouble (sPosRate);  					dPosAmount = Convert.ToDouble (sPosAmount);  					iCorrespondentID = Convert.ToInt32 (sCorrespondentID);  					if (dPosAmount < 0.01) {  						ConsoleLog.WriteLine ("Position amount less then 0.01' getting next position");  						response = response.Substring (response.IndexOf ("submit_form_accept") + 10);  					}  					else  						break;  				}  				if (dPosRate > fMaxRate) {  					ConsoleLog.WriteLine ("Rate greater then max possible' waiting 10 sec...");  					System.Threading.Thread.Sleep (10000);  					continue;  				}  				//double dToBuy = Math.Min(Math.Truncate(curRemains / dPosRate)' dPosAmount);  				double dToBuy = Math.Min (curRemains / dPosRate - 0.01' dPosAmount);  				dToBuy = Math.Truncate (dToBuy * 100) / 100;  				ConsoleLog.WriteLine ("Buy " + dToBuy.ToString () + " currency");  				if (Bot.Bot.BuyMoney (iOfferID' dToBuy' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  					ConsoleLog.WriteLine ("Buy currency successfull");  				}  				else {  					ConsoleLog.WriteLine ("Buy currency fail");  				}  			}  			catch (System.Exception localE) {  				ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  			}  		}  		Bot.GetInfoFromCommonResponse (true);  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		// Logout  		Bot.Bot.Logout ();  	}  	else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  		botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  		Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  	}  	else {  		//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  		ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  	}  }  catch (System.Exception e) {  	ConsoleLog.WriteLine ("Convert exception: " + e.Message);  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcConvertMoney,The following statement contains a magic number: try {  	NerZul.Core.Utils.ManagedCitizen Bot = new ManagedCitizen ((string)botinfo ["login"]' (string)botinfo ["email"]' (string)botinfo ["password"]' Globals.BotConfig);  	ManagedCitizen.LoginResult loginResult = Bot.Login ();  	if (loginResult == ManagedCitizen.LoginResult.Success) {  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  		int curRemains = 1;  		for (int i = 1; i <= 20; i++) {  			try {  				ConsoleLog.WriteLine ("Convert money' try " + i.ToString ());  				string response;  				string URL;  				int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  				if (tmpRemains == -1)  					continue;  				curRemains = tmpRemains;  				if (curRemains < 0.1) {  					ConsoleLog.WriteLine ("Everything converted");  					break;  				}  				// Открываем страницу ставок ММ' получаем первую нормальную ставку и ее параметры  				ConsoleLog.WriteLine ("Loading rates MM page...");  				URL = "http://www.erepublik.com/en/exchange/listOffers?select_page=select&buy_currency_history_id=buy_currencies=" + iCurrencyBuyID.ToString () + "&sell_currency_history_id=sell_currencies=" + iCurrencySpendID.ToString () + "&account_type=citizen-&action_path=listOffers&page=page=1";  				//ConsoleLog.WriteLine("URL: " + URL);  				response = Bot.Bot.CustomRequest (URL);  				//ConsoleLog.WriteLine(response' "ConvertMoneyLog2.txt");  				if (!response.Contains ("form_amount_accept_")) {  					ConsoleLog.WriteLine ("Error rates MM page");  					continue;  				}  				int iOfferID = 0;  				double dPosRate = 0;  				double dPosAmount = 0;  				int iCorrespondentID = 0;  				for (int rateNum = 1; rateNum <= 10; rateNum++) {  					string sOfferId = CommonUtils.GetStringBetween (response' "\"form_amount_accept_"' "\"");  					string sPosRate = CommonUtils.GetStringBetween (response' "<span class=\"special\" id=\"exchange_value_amount_" + sOfferId + "\">"' "</span>");  					string sPosAmount = CommonUtils.GetStringBetween (response' "<span class=\"special\"  id=\"initial_amount_" + sOfferId + "\">"' "</span>");  					string sCorrespondentID = CommonUtils.GetStringBetween (response' "<a class=\"nameholder dotted\" href=\"/en/citizen/profile/"' "\">");  					ConsoleLog.WriteLine ("Detected position " + rateNum.ToString () + ": OfferId=" + sOfferId + "' PosRate=" + sPosRate + "' PosAmount=" + sPosAmount + "' CorrespondentID=" + sCorrespondentID);  					iOfferID = Convert.ToInt32 (sOfferId);  					dPosRate = Convert.ToDouble (sPosRate);  					dPosAmount = Convert.ToDouble (sPosAmount);  					iCorrespondentID = Convert.ToInt32 (sCorrespondentID);  					if (dPosAmount < 0.01) {  						ConsoleLog.WriteLine ("Position amount less then 0.01' getting next position");  						response = response.Substring (response.IndexOf ("submit_form_accept") + 10);  					}  					else  						break;  				}  				if (dPosRate > fMaxRate) {  					ConsoleLog.WriteLine ("Rate greater then max possible' waiting 10 sec...");  					System.Threading.Thread.Sleep (10000);  					continue;  				}  				//double dToBuy = Math.Min(Math.Truncate(curRemains / dPosRate)' dPosAmount);  				double dToBuy = Math.Min (curRemains / dPosRate - 0.01' dPosAmount);  				dToBuy = Math.Truncate (dToBuy * 100) / 100;  				ConsoleLog.WriteLine ("Buy " + dToBuy.ToString () + " currency");  				if (Bot.Bot.BuyMoney (iOfferID' dToBuy' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  					ConsoleLog.WriteLine ("Buy currency successfull");  				}  				else {  					ConsoleLog.WriteLine ("Buy currency fail");  				}  			}  			catch (System.Exception localE) {  				ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  			}  		}  		Bot.GetInfoFromCommonResponse (true);  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		// Logout  		Bot.Bot.Logout ();  	}  	else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  		botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  		Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  	}  	else {  		//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  		ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  	}  }  catch (System.Exception e) {  	ConsoleLog.WriteLine ("Convert exception: " + e.Message);  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcConvertMoney,The following statement contains a magic number: try {  	NerZul.Core.Utils.ManagedCitizen Bot = new ManagedCitizen ((string)botinfo ["login"]' (string)botinfo ["email"]' (string)botinfo ["password"]' Globals.BotConfig);  	ManagedCitizen.LoginResult loginResult = Bot.Login ();  	if (loginResult == ManagedCitizen.LoginResult.Success) {  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  		int curRemains = 1;  		for (int i = 1; i <= 20; i++) {  			try {  				ConsoleLog.WriteLine ("Convert money' try " + i.ToString ());  				string response;  				string URL;  				int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  				if (tmpRemains == -1)  					continue;  				curRemains = tmpRemains;  				if (curRemains < 0.1) {  					ConsoleLog.WriteLine ("Everything converted");  					break;  				}  				// Открываем страницу ставок ММ' получаем первую нормальную ставку и ее параметры  				ConsoleLog.WriteLine ("Loading rates MM page...");  				URL = "http://www.erepublik.com/en/exchange/listOffers?select_page=select&buy_currency_history_id=buy_currencies=" + iCurrencyBuyID.ToString () + "&sell_currency_history_id=sell_currencies=" + iCurrencySpendID.ToString () + "&account_type=citizen-&action_path=listOffers&page=page=1";  				//ConsoleLog.WriteLine("URL: " + URL);  				response = Bot.Bot.CustomRequest (URL);  				//ConsoleLog.WriteLine(response' "ConvertMoneyLog2.txt");  				if (!response.Contains ("form_amount_accept_")) {  					ConsoleLog.WriteLine ("Error rates MM page");  					continue;  				}  				int iOfferID = 0;  				double dPosRate = 0;  				double dPosAmount = 0;  				int iCorrespondentID = 0;  				for (int rateNum = 1; rateNum <= 10; rateNum++) {  					string sOfferId = CommonUtils.GetStringBetween (response' "\"form_amount_accept_"' "\"");  					string sPosRate = CommonUtils.GetStringBetween (response' "<span class=\"special\" id=\"exchange_value_amount_" + sOfferId + "\">"' "</span>");  					string sPosAmount = CommonUtils.GetStringBetween (response' "<span class=\"special\"  id=\"initial_amount_" + sOfferId + "\">"' "</span>");  					string sCorrespondentID = CommonUtils.GetStringBetween (response' "<a class=\"nameholder dotted\" href=\"/en/citizen/profile/"' "\">");  					ConsoleLog.WriteLine ("Detected position " + rateNum.ToString () + ": OfferId=" + sOfferId + "' PosRate=" + sPosRate + "' PosAmount=" + sPosAmount + "' CorrespondentID=" + sCorrespondentID);  					iOfferID = Convert.ToInt32 (sOfferId);  					dPosRate = Convert.ToDouble (sPosRate);  					dPosAmount = Convert.ToDouble (sPosAmount);  					iCorrespondentID = Convert.ToInt32 (sCorrespondentID);  					if (dPosAmount < 0.01) {  						ConsoleLog.WriteLine ("Position amount less then 0.01' getting next position");  						response = response.Substring (response.IndexOf ("submit_form_accept") + 10);  					}  					else  						break;  				}  				if (dPosRate > fMaxRate) {  					ConsoleLog.WriteLine ("Rate greater then max possible' waiting 10 sec...");  					System.Threading.Thread.Sleep (10000);  					continue;  				}  				//double dToBuy = Math.Min(Math.Truncate(curRemains / dPosRate)' dPosAmount);  				double dToBuy = Math.Min (curRemains / dPosRate - 0.01' dPosAmount);  				dToBuy = Math.Truncate (dToBuy * 100) / 100;  				ConsoleLog.WriteLine ("Buy " + dToBuy.ToString () + " currency");  				if (Bot.Bot.BuyMoney (iOfferID' dToBuy' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  					ConsoleLog.WriteLine ("Buy currency successfull");  				}  				else {  					ConsoleLog.WriteLine ("Buy currency fail");  				}  			}  			catch (System.Exception localE) {  				ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  			}  		}  		Bot.GetInfoFromCommonResponse (true);  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		// Logout  		Bot.Bot.Logout ();  	}  	else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  		botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  		Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  	}  	else {  		//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  		ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  	}  }  catch (System.Exception e) {  	ConsoleLog.WriteLine ("Convert exception: " + e.Message);  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcConvertMoney,The following statement contains a magic number: try {  	NerZul.Core.Utils.ManagedCitizen Bot = new ManagedCitizen ((string)botinfo ["login"]' (string)botinfo ["email"]' (string)botinfo ["password"]' Globals.BotConfig);  	ManagedCitizen.LoginResult loginResult = Bot.Login ();  	if (loginResult == ManagedCitizen.LoginResult.Success) {  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  		int curRemains = 1;  		for (int i = 1; i <= 20; i++) {  			try {  				ConsoleLog.WriteLine ("Convert money' try " + i.ToString ());  				string response;  				string URL;  				int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  				if (tmpRemains == -1)  					continue;  				curRemains = tmpRemains;  				if (curRemains < 0.1) {  					ConsoleLog.WriteLine ("Everything converted");  					break;  				}  				// Открываем страницу ставок ММ' получаем первую нормальную ставку и ее параметры  				ConsoleLog.WriteLine ("Loading rates MM page...");  				URL = "http://www.erepublik.com/en/exchange/listOffers?select_page=select&buy_currency_history_id=buy_currencies=" + iCurrencyBuyID.ToString () + "&sell_currency_history_id=sell_currencies=" + iCurrencySpendID.ToString () + "&account_type=citizen-&action_path=listOffers&page=page=1";  				//ConsoleLog.WriteLine("URL: " + URL);  				response = Bot.Bot.CustomRequest (URL);  				//ConsoleLog.WriteLine(response' "ConvertMoneyLog2.txt");  				if (!response.Contains ("form_amount_accept_")) {  					ConsoleLog.WriteLine ("Error rates MM page");  					continue;  				}  				int iOfferID = 0;  				double dPosRate = 0;  				double dPosAmount = 0;  				int iCorrespondentID = 0;  				for (int rateNum = 1; rateNum <= 10; rateNum++) {  					string sOfferId = CommonUtils.GetStringBetween (response' "\"form_amount_accept_"' "\"");  					string sPosRate = CommonUtils.GetStringBetween (response' "<span class=\"special\" id=\"exchange_value_amount_" + sOfferId + "\">"' "</span>");  					string sPosAmount = CommonUtils.GetStringBetween (response' "<span class=\"special\"  id=\"initial_amount_" + sOfferId + "\">"' "</span>");  					string sCorrespondentID = CommonUtils.GetStringBetween (response' "<a class=\"nameholder dotted\" href=\"/en/citizen/profile/"' "\">");  					ConsoleLog.WriteLine ("Detected position " + rateNum.ToString () + ": OfferId=" + sOfferId + "' PosRate=" + sPosRate + "' PosAmount=" + sPosAmount + "' CorrespondentID=" + sCorrespondentID);  					iOfferID = Convert.ToInt32 (sOfferId);  					dPosRate = Convert.ToDouble (sPosRate);  					dPosAmount = Convert.ToDouble (sPosAmount);  					iCorrespondentID = Convert.ToInt32 (sCorrespondentID);  					if (dPosAmount < 0.01) {  						ConsoleLog.WriteLine ("Position amount less then 0.01' getting next position");  						response = response.Substring (response.IndexOf ("submit_form_accept") + 10);  					}  					else  						break;  				}  				if (dPosRate > fMaxRate) {  					ConsoleLog.WriteLine ("Rate greater then max possible' waiting 10 sec...");  					System.Threading.Thread.Sleep (10000);  					continue;  				}  				//double dToBuy = Math.Min(Math.Truncate(curRemains / dPosRate)' dPosAmount);  				double dToBuy = Math.Min (curRemains / dPosRate - 0.01' dPosAmount);  				dToBuy = Math.Truncate (dToBuy * 100) / 100;  				ConsoleLog.WriteLine ("Buy " + dToBuy.ToString () + " currency");  				if (Bot.Bot.BuyMoney (iOfferID' dToBuy' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  					ConsoleLog.WriteLine ("Buy currency successfull");  				}  				else {  					ConsoleLog.WriteLine ("Buy currency fail");  				}  			}  			catch (System.Exception localE) {  				ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  			}  		}  		Bot.GetInfoFromCommonResponse (true);  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		// Logout  		Bot.Bot.Logout ();  	}  	else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  		botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  		Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  	}  	else {  		//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  		ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  	}  }  catch (System.Exception e) {  	ConsoleLog.WriteLine ("Convert exception: " + e.Message);  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcConvertMoney,The following statement contains a magic number: try {  	NerZul.Core.Utils.ManagedCitizen Bot = new ManagedCitizen ((string)botinfo ["login"]' (string)botinfo ["email"]' (string)botinfo ["password"]' Globals.BotConfig);  	ManagedCitizen.LoginResult loginResult = Bot.Login ();  	if (loginResult == ManagedCitizen.LoginResult.Success) {  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  		int curRemains = 1;  		for (int i = 1; i <= 20; i++) {  			try {  				ConsoleLog.WriteLine ("Convert money' try " + i.ToString ());  				string response;  				string URL;  				int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  				if (tmpRemains == -1)  					continue;  				curRemains = tmpRemains;  				if (curRemains < 0.1) {  					ConsoleLog.WriteLine ("Everything converted");  					break;  				}  				// Открываем страницу ставок ММ' получаем первую нормальную ставку и ее параметры  				ConsoleLog.WriteLine ("Loading rates MM page...");  				URL = "http://www.erepublik.com/en/exchange/listOffers?select_page=select&buy_currency_history_id=buy_currencies=" + iCurrencyBuyID.ToString () + "&sell_currency_history_id=sell_currencies=" + iCurrencySpendID.ToString () + "&account_type=citizen-&action_path=listOffers&page=page=1";  				//ConsoleLog.WriteLine("URL: " + URL);  				response = Bot.Bot.CustomRequest (URL);  				//ConsoleLog.WriteLine(response' "ConvertMoneyLog2.txt");  				if (!response.Contains ("form_amount_accept_")) {  					ConsoleLog.WriteLine ("Error rates MM page");  					continue;  				}  				int iOfferID = 0;  				double dPosRate = 0;  				double dPosAmount = 0;  				int iCorrespondentID = 0;  				for (int rateNum = 1; rateNum <= 10; rateNum++) {  					string sOfferId = CommonUtils.GetStringBetween (response' "\"form_amount_accept_"' "\"");  					string sPosRate = CommonUtils.GetStringBetween (response' "<span class=\"special\" id=\"exchange_value_amount_" + sOfferId + "\">"' "</span>");  					string sPosAmount = CommonUtils.GetStringBetween (response' "<span class=\"special\"  id=\"initial_amount_" + sOfferId + "\">"' "</span>");  					string sCorrespondentID = CommonUtils.GetStringBetween (response' "<a class=\"nameholder dotted\" href=\"/en/citizen/profile/"' "\">");  					ConsoleLog.WriteLine ("Detected position " + rateNum.ToString () + ": OfferId=" + sOfferId + "' PosRate=" + sPosRate + "' PosAmount=" + sPosAmount + "' CorrespondentID=" + sCorrespondentID);  					iOfferID = Convert.ToInt32 (sOfferId);  					dPosRate = Convert.ToDouble (sPosRate);  					dPosAmount = Convert.ToDouble (sPosAmount);  					iCorrespondentID = Convert.ToInt32 (sCorrespondentID);  					if (dPosAmount < 0.01) {  						ConsoleLog.WriteLine ("Position amount less then 0.01' getting next position");  						response = response.Substring (response.IndexOf ("submit_form_accept") + 10);  					}  					else  						break;  				}  				if (dPosRate > fMaxRate) {  					ConsoleLog.WriteLine ("Rate greater then max possible' waiting 10 sec...");  					System.Threading.Thread.Sleep (10000);  					continue;  				}  				//double dToBuy = Math.Min(Math.Truncate(curRemains / dPosRate)' dPosAmount);  				double dToBuy = Math.Min (curRemains / dPosRate - 0.01' dPosAmount);  				dToBuy = Math.Truncate (dToBuy * 100) / 100;  				ConsoleLog.WriteLine ("Buy " + dToBuy.ToString () + " currency");  				if (Bot.Bot.BuyMoney (iOfferID' dToBuy' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  					ConsoleLog.WriteLine ("Buy currency successfull");  				}  				else {  					ConsoleLog.WriteLine ("Buy currency fail");  				}  			}  			catch (System.Exception localE) {  				ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  			}  		}  		Bot.GetInfoFromCommonResponse (true);  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		// Logout  		Bot.Bot.Logout ();  	}  	else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  		botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  		Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  	}  	else {  		//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  		ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  	}  }  catch (System.Exception e) {  	ConsoleLog.WriteLine ("Convert exception: " + e.Message);  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcConvertMoney,The following statement contains a magic number: if (loginResult == ManagedCitizen.LoginResult.Success) {  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  	int curRemains = 1;  	for (int i = 1; i <= 20; i++) {  		try {  			ConsoleLog.WriteLine ("Convert money' try " + i.ToString ());  			string response;  			string URL;  			int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  			if (tmpRemains == -1)  				continue;  			curRemains = tmpRemains;  			if (curRemains < 0.1) {  				ConsoleLog.WriteLine ("Everything converted");  				break;  			}  			// Открываем страницу ставок ММ' получаем первую нормальную ставку и ее параметры  			ConsoleLog.WriteLine ("Loading rates MM page...");  			URL = "http://www.erepublik.com/en/exchange/listOffers?select_page=select&buy_currency_history_id=buy_currencies=" + iCurrencyBuyID.ToString () + "&sell_currency_history_id=sell_currencies=" + iCurrencySpendID.ToString () + "&account_type=citizen-&action_path=listOffers&page=page=1";  			//ConsoleLog.WriteLine("URL: " + URL);  			response = Bot.Bot.CustomRequest (URL);  			//ConsoleLog.WriteLine(response' "ConvertMoneyLog2.txt");  			if (!response.Contains ("form_amount_accept_")) {  				ConsoleLog.WriteLine ("Error rates MM page");  				continue;  			}  			int iOfferID = 0;  			double dPosRate = 0;  			double dPosAmount = 0;  			int iCorrespondentID = 0;  			for (int rateNum = 1; rateNum <= 10; rateNum++) {  				string sOfferId = CommonUtils.GetStringBetween (response' "\"form_amount_accept_"' "\"");  				string sPosRate = CommonUtils.GetStringBetween (response' "<span class=\"special\" id=\"exchange_value_amount_" + sOfferId + "\">"' "</span>");  				string sPosAmount = CommonUtils.GetStringBetween (response' "<span class=\"special\"  id=\"initial_amount_" + sOfferId + "\">"' "</span>");  				string sCorrespondentID = CommonUtils.GetStringBetween (response' "<a class=\"nameholder dotted\" href=\"/en/citizen/profile/"' "\">");  				ConsoleLog.WriteLine ("Detected position " + rateNum.ToString () + ": OfferId=" + sOfferId + "' PosRate=" + sPosRate + "' PosAmount=" + sPosAmount + "' CorrespondentID=" + sCorrespondentID);  				iOfferID = Convert.ToInt32 (sOfferId);  				dPosRate = Convert.ToDouble (sPosRate);  				dPosAmount = Convert.ToDouble (sPosAmount);  				iCorrespondentID = Convert.ToInt32 (sCorrespondentID);  				if (dPosAmount < 0.01) {  					ConsoleLog.WriteLine ("Position amount less then 0.01' getting next position");  					response = response.Substring (response.IndexOf ("submit_form_accept") + 10);  				}  				else  					break;  			}  			if (dPosRate > fMaxRate) {  				ConsoleLog.WriteLine ("Rate greater then max possible' waiting 10 sec...");  				System.Threading.Thread.Sleep (10000);  				continue;  			}  			//double dToBuy = Math.Min(Math.Truncate(curRemains / dPosRate)' dPosAmount);  			double dToBuy = Math.Min (curRemains / dPosRate - 0.01' dPosAmount);  			dToBuy = Math.Truncate (dToBuy * 100) / 100;  			ConsoleLog.WriteLine ("Buy " + dToBuy.ToString () + " currency");  			if (Bot.Bot.BuyMoney (iOfferID' dToBuy' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  				ConsoleLog.WriteLine ("Buy currency successfull");  			}  			else {  				ConsoleLog.WriteLine ("Buy currency fail");  			}  		}  		catch (System.Exception localE) {  			ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  		}  	}  	Bot.GetInfoFromCommonResponse (true);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	// Logout  	Bot.Bot.Logout ();  }  else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcConvertMoney,The following statement contains a magic number: if (loginResult == ManagedCitizen.LoginResult.Success) {  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  	int curRemains = 1;  	for (int i = 1; i <= 20; i++) {  		try {  			ConsoleLog.WriteLine ("Convert money' try " + i.ToString ());  			string response;  			string URL;  			int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  			if (tmpRemains == -1)  				continue;  			curRemains = tmpRemains;  			if (curRemains < 0.1) {  				ConsoleLog.WriteLine ("Everything converted");  				break;  			}  			// Открываем страницу ставок ММ' получаем первую нормальную ставку и ее параметры  			ConsoleLog.WriteLine ("Loading rates MM page...");  			URL = "http://www.erepublik.com/en/exchange/listOffers?select_page=select&buy_currency_history_id=buy_currencies=" + iCurrencyBuyID.ToString () + "&sell_currency_history_id=sell_currencies=" + iCurrencySpendID.ToString () + "&account_type=citizen-&action_path=listOffers&page=page=1";  			//ConsoleLog.WriteLine("URL: " + URL);  			response = Bot.Bot.CustomRequest (URL);  			//ConsoleLog.WriteLine(response' "ConvertMoneyLog2.txt");  			if (!response.Contains ("form_amount_accept_")) {  				ConsoleLog.WriteLine ("Error rates MM page");  				continue;  			}  			int iOfferID = 0;  			double dPosRate = 0;  			double dPosAmount = 0;  			int iCorrespondentID = 0;  			for (int rateNum = 1; rateNum <= 10; rateNum++) {  				string sOfferId = CommonUtils.GetStringBetween (response' "\"form_amount_accept_"' "\"");  				string sPosRate = CommonUtils.GetStringBetween (response' "<span class=\"special\" id=\"exchange_value_amount_" + sOfferId + "\">"' "</span>");  				string sPosAmount = CommonUtils.GetStringBetween (response' "<span class=\"special\"  id=\"initial_amount_" + sOfferId + "\">"' "</span>");  				string sCorrespondentID = CommonUtils.GetStringBetween (response' "<a class=\"nameholder dotted\" href=\"/en/citizen/profile/"' "\">");  				ConsoleLog.WriteLine ("Detected position " + rateNum.ToString () + ": OfferId=" + sOfferId + "' PosRate=" + sPosRate + "' PosAmount=" + sPosAmount + "' CorrespondentID=" + sCorrespondentID);  				iOfferID = Convert.ToInt32 (sOfferId);  				dPosRate = Convert.ToDouble (sPosRate);  				dPosAmount = Convert.ToDouble (sPosAmount);  				iCorrespondentID = Convert.ToInt32 (sCorrespondentID);  				if (dPosAmount < 0.01) {  					ConsoleLog.WriteLine ("Position amount less then 0.01' getting next position");  					response = response.Substring (response.IndexOf ("submit_form_accept") + 10);  				}  				else  					break;  			}  			if (dPosRate > fMaxRate) {  				ConsoleLog.WriteLine ("Rate greater then max possible' waiting 10 sec...");  				System.Threading.Thread.Sleep (10000);  				continue;  			}  			//double dToBuy = Math.Min(Math.Truncate(curRemains / dPosRate)' dPosAmount);  			double dToBuy = Math.Min (curRemains / dPosRate - 0.01' dPosAmount);  			dToBuy = Math.Truncate (dToBuy * 100) / 100;  			ConsoleLog.WriteLine ("Buy " + dToBuy.ToString () + " currency");  			if (Bot.Bot.BuyMoney (iOfferID' dToBuy' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  				ConsoleLog.WriteLine ("Buy currency successfull");  			}  			else {  				ConsoleLog.WriteLine ("Buy currency fail");  			}  		}  		catch (System.Exception localE) {  			ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  		}  	}  	Bot.GetInfoFromCommonResponse (true);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	// Logout  	Bot.Bot.Logout ();  }  else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcConvertMoney,The following statement contains a magic number: if (loginResult == ManagedCitizen.LoginResult.Success) {  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  	int curRemains = 1;  	for (int i = 1; i <= 20; i++) {  		try {  			ConsoleLog.WriteLine ("Convert money' try " + i.ToString ());  			string response;  			string URL;  			int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  			if (tmpRemains == -1)  				continue;  			curRemains = tmpRemains;  			if (curRemains < 0.1) {  				ConsoleLog.WriteLine ("Everything converted");  				break;  			}  			// Открываем страницу ставок ММ' получаем первую нормальную ставку и ее параметры  			ConsoleLog.WriteLine ("Loading rates MM page...");  			URL = "http://www.erepublik.com/en/exchange/listOffers?select_page=select&buy_currency_history_id=buy_currencies=" + iCurrencyBuyID.ToString () + "&sell_currency_history_id=sell_currencies=" + iCurrencySpendID.ToString () + "&account_type=citizen-&action_path=listOffers&page=page=1";  			//ConsoleLog.WriteLine("URL: " + URL);  			response = Bot.Bot.CustomRequest (URL);  			//ConsoleLog.WriteLine(response' "ConvertMoneyLog2.txt");  			if (!response.Contains ("form_amount_accept_")) {  				ConsoleLog.WriteLine ("Error rates MM page");  				continue;  			}  			int iOfferID = 0;  			double dPosRate = 0;  			double dPosAmount = 0;  			int iCorrespondentID = 0;  			for (int rateNum = 1; rateNum <= 10; rateNum++) {  				string sOfferId = CommonUtils.GetStringBetween (response' "\"form_amount_accept_"' "\"");  				string sPosRate = CommonUtils.GetStringBetween (response' "<span class=\"special\" id=\"exchange_value_amount_" + sOfferId + "\">"' "</span>");  				string sPosAmount = CommonUtils.GetStringBetween (response' "<span class=\"special\"  id=\"initial_amount_" + sOfferId + "\">"' "</span>");  				string sCorrespondentID = CommonUtils.GetStringBetween (response' "<a class=\"nameholder dotted\" href=\"/en/citizen/profile/"' "\">");  				ConsoleLog.WriteLine ("Detected position " + rateNum.ToString () + ": OfferId=" + sOfferId + "' PosRate=" + sPosRate + "' PosAmount=" + sPosAmount + "' CorrespondentID=" + sCorrespondentID);  				iOfferID = Convert.ToInt32 (sOfferId);  				dPosRate = Convert.ToDouble (sPosRate);  				dPosAmount = Convert.ToDouble (sPosAmount);  				iCorrespondentID = Convert.ToInt32 (sCorrespondentID);  				if (dPosAmount < 0.01) {  					ConsoleLog.WriteLine ("Position amount less then 0.01' getting next position");  					response = response.Substring (response.IndexOf ("submit_form_accept") + 10);  				}  				else  					break;  			}  			if (dPosRate > fMaxRate) {  				ConsoleLog.WriteLine ("Rate greater then max possible' waiting 10 sec...");  				System.Threading.Thread.Sleep (10000);  				continue;  			}  			//double dToBuy = Math.Min(Math.Truncate(curRemains / dPosRate)' dPosAmount);  			double dToBuy = Math.Min (curRemains / dPosRate - 0.01' dPosAmount);  			dToBuy = Math.Truncate (dToBuy * 100) / 100;  			ConsoleLog.WriteLine ("Buy " + dToBuy.ToString () + " currency");  			if (Bot.Bot.BuyMoney (iOfferID' dToBuy' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  				ConsoleLog.WriteLine ("Buy currency successfull");  			}  			else {  				ConsoleLog.WriteLine ("Buy currency fail");  			}  		}  		catch (System.Exception localE) {  			ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  		}  	}  	Bot.GetInfoFromCommonResponse (true);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	// Logout  	Bot.Bot.Logout ();  }  else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcConvertMoney,The following statement contains a magic number: if (loginResult == ManagedCitizen.LoginResult.Success) {  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  	int curRemains = 1;  	for (int i = 1; i <= 20; i++) {  		try {  			ConsoleLog.WriteLine ("Convert money' try " + i.ToString ());  			string response;  			string URL;  			int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  			if (tmpRemains == -1)  				continue;  			curRemains = tmpRemains;  			if (curRemains < 0.1) {  				ConsoleLog.WriteLine ("Everything converted");  				break;  			}  			// Открываем страницу ставок ММ' получаем первую нормальную ставку и ее параметры  			ConsoleLog.WriteLine ("Loading rates MM page...");  			URL = "http://www.erepublik.com/en/exchange/listOffers?select_page=select&buy_currency_history_id=buy_currencies=" + iCurrencyBuyID.ToString () + "&sell_currency_history_id=sell_currencies=" + iCurrencySpendID.ToString () + "&account_type=citizen-&action_path=listOffers&page=page=1";  			//ConsoleLog.WriteLine("URL: " + URL);  			response = Bot.Bot.CustomRequest (URL);  			//ConsoleLog.WriteLine(response' "ConvertMoneyLog2.txt");  			if (!response.Contains ("form_amount_accept_")) {  				ConsoleLog.WriteLine ("Error rates MM page");  				continue;  			}  			int iOfferID = 0;  			double dPosRate = 0;  			double dPosAmount = 0;  			int iCorrespondentID = 0;  			for (int rateNum = 1; rateNum <= 10; rateNum++) {  				string sOfferId = CommonUtils.GetStringBetween (response' "\"form_amount_accept_"' "\"");  				string sPosRate = CommonUtils.GetStringBetween (response' "<span class=\"special\" id=\"exchange_value_amount_" + sOfferId + "\">"' "</span>");  				string sPosAmount = CommonUtils.GetStringBetween (response' "<span class=\"special\"  id=\"initial_amount_" + sOfferId + "\">"' "</span>");  				string sCorrespondentID = CommonUtils.GetStringBetween (response' "<a class=\"nameholder dotted\" href=\"/en/citizen/profile/"' "\">");  				ConsoleLog.WriteLine ("Detected position " + rateNum.ToString () + ": OfferId=" + sOfferId + "' PosRate=" + sPosRate + "' PosAmount=" + sPosAmount + "' CorrespondentID=" + sCorrespondentID);  				iOfferID = Convert.ToInt32 (sOfferId);  				dPosRate = Convert.ToDouble (sPosRate);  				dPosAmount = Convert.ToDouble (sPosAmount);  				iCorrespondentID = Convert.ToInt32 (sCorrespondentID);  				if (dPosAmount < 0.01) {  					ConsoleLog.WriteLine ("Position amount less then 0.01' getting next position");  					response = response.Substring (response.IndexOf ("submit_form_accept") + 10);  				}  				else  					break;  			}  			if (dPosRate > fMaxRate) {  				ConsoleLog.WriteLine ("Rate greater then max possible' waiting 10 sec...");  				System.Threading.Thread.Sleep (10000);  				continue;  			}  			//double dToBuy = Math.Min(Math.Truncate(curRemains / dPosRate)' dPosAmount);  			double dToBuy = Math.Min (curRemains / dPosRate - 0.01' dPosAmount);  			dToBuy = Math.Truncate (dToBuy * 100) / 100;  			ConsoleLog.WriteLine ("Buy " + dToBuy.ToString () + " currency");  			if (Bot.Bot.BuyMoney (iOfferID' dToBuy' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  				ConsoleLog.WriteLine ("Buy currency successfull");  			}  			else {  				ConsoleLog.WriteLine ("Buy currency fail");  			}  		}  		catch (System.Exception localE) {  			ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  		}  	}  	Bot.GetInfoFromCommonResponse (true);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	// Logout  	Bot.Bot.Logout ();  }  else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcConvertMoney,The following statement contains a magic number: if (loginResult == ManagedCitizen.LoginResult.Success) {  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  	int curRemains = 1;  	for (int i = 1; i <= 20; i++) {  		try {  			ConsoleLog.WriteLine ("Convert money' try " + i.ToString ());  			string response;  			string URL;  			int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  			if (tmpRemains == -1)  				continue;  			curRemains = tmpRemains;  			if (curRemains < 0.1) {  				ConsoleLog.WriteLine ("Everything converted");  				break;  			}  			// Открываем страницу ставок ММ' получаем первую нормальную ставку и ее параметры  			ConsoleLog.WriteLine ("Loading rates MM page...");  			URL = "http://www.erepublik.com/en/exchange/listOffers?select_page=select&buy_currency_history_id=buy_currencies=" + iCurrencyBuyID.ToString () + "&sell_currency_history_id=sell_currencies=" + iCurrencySpendID.ToString () + "&account_type=citizen-&action_path=listOffers&page=page=1";  			//ConsoleLog.WriteLine("URL: " + URL);  			response = Bot.Bot.CustomRequest (URL);  			//ConsoleLog.WriteLine(response' "ConvertMoneyLog2.txt");  			if (!response.Contains ("form_amount_accept_")) {  				ConsoleLog.WriteLine ("Error rates MM page");  				continue;  			}  			int iOfferID = 0;  			double dPosRate = 0;  			double dPosAmount = 0;  			int iCorrespondentID = 0;  			for (int rateNum = 1; rateNum <= 10; rateNum++) {  				string sOfferId = CommonUtils.GetStringBetween (response' "\"form_amount_accept_"' "\"");  				string sPosRate = CommonUtils.GetStringBetween (response' "<span class=\"special\" id=\"exchange_value_amount_" + sOfferId + "\">"' "</span>");  				string sPosAmount = CommonUtils.GetStringBetween (response' "<span class=\"special\"  id=\"initial_amount_" + sOfferId + "\">"' "</span>");  				string sCorrespondentID = CommonUtils.GetStringBetween (response' "<a class=\"nameholder dotted\" href=\"/en/citizen/profile/"' "\">");  				ConsoleLog.WriteLine ("Detected position " + rateNum.ToString () + ": OfferId=" + sOfferId + "' PosRate=" + sPosRate + "' PosAmount=" + sPosAmount + "' CorrespondentID=" + sCorrespondentID);  				iOfferID = Convert.ToInt32 (sOfferId);  				dPosRate = Convert.ToDouble (sPosRate);  				dPosAmount = Convert.ToDouble (sPosAmount);  				iCorrespondentID = Convert.ToInt32 (sCorrespondentID);  				if (dPosAmount < 0.01) {  					ConsoleLog.WriteLine ("Position amount less then 0.01' getting next position");  					response = response.Substring (response.IndexOf ("submit_form_accept") + 10);  				}  				else  					break;  			}  			if (dPosRate > fMaxRate) {  				ConsoleLog.WriteLine ("Rate greater then max possible' waiting 10 sec...");  				System.Threading.Thread.Sleep (10000);  				continue;  			}  			//double dToBuy = Math.Min(Math.Truncate(curRemains / dPosRate)' dPosAmount);  			double dToBuy = Math.Min (curRemains / dPosRate - 0.01' dPosAmount);  			dToBuy = Math.Truncate (dToBuy * 100) / 100;  			ConsoleLog.WriteLine ("Buy " + dToBuy.ToString () + " currency");  			if (Bot.Bot.BuyMoney (iOfferID' dToBuy' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  				ConsoleLog.WriteLine ("Buy currency successfull");  			}  			else {  				ConsoleLog.WriteLine ("Buy currency fail");  			}  		}  		catch (System.Exception localE) {  			ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  		}  	}  	Bot.GetInfoFromCommonResponse (true);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	// Logout  	Bot.Bot.Logout ();  }  else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcConvertMoney,The following statement contains a magic number: if (loginResult == ManagedCitizen.LoginResult.Success) {  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  	int curRemains = 1;  	for (int i = 1; i <= 20; i++) {  		try {  			ConsoleLog.WriteLine ("Convert money' try " + i.ToString ());  			string response;  			string URL;  			int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  			if (tmpRemains == -1)  				continue;  			curRemains = tmpRemains;  			if (curRemains < 0.1) {  				ConsoleLog.WriteLine ("Everything converted");  				break;  			}  			// Открываем страницу ставок ММ' получаем первую нормальную ставку и ее параметры  			ConsoleLog.WriteLine ("Loading rates MM page...");  			URL = "http://www.erepublik.com/en/exchange/listOffers?select_page=select&buy_currency_history_id=buy_currencies=" + iCurrencyBuyID.ToString () + "&sell_currency_history_id=sell_currencies=" + iCurrencySpendID.ToString () + "&account_type=citizen-&action_path=listOffers&page=page=1";  			//ConsoleLog.WriteLine("URL: " + URL);  			response = Bot.Bot.CustomRequest (URL);  			//ConsoleLog.WriteLine(response' "ConvertMoneyLog2.txt");  			if (!response.Contains ("form_amount_accept_")) {  				ConsoleLog.WriteLine ("Error rates MM page");  				continue;  			}  			int iOfferID = 0;  			double dPosRate = 0;  			double dPosAmount = 0;  			int iCorrespondentID = 0;  			for (int rateNum = 1; rateNum <= 10; rateNum++) {  				string sOfferId = CommonUtils.GetStringBetween (response' "\"form_amount_accept_"' "\"");  				string sPosRate = CommonUtils.GetStringBetween (response' "<span class=\"special\" id=\"exchange_value_amount_" + sOfferId + "\">"' "</span>");  				string sPosAmount = CommonUtils.GetStringBetween (response' "<span class=\"special\"  id=\"initial_amount_" + sOfferId + "\">"' "</span>");  				string sCorrespondentID = CommonUtils.GetStringBetween (response' "<a class=\"nameholder dotted\" href=\"/en/citizen/profile/"' "\">");  				ConsoleLog.WriteLine ("Detected position " + rateNum.ToString () + ": OfferId=" + sOfferId + "' PosRate=" + sPosRate + "' PosAmount=" + sPosAmount + "' CorrespondentID=" + sCorrespondentID);  				iOfferID = Convert.ToInt32 (sOfferId);  				dPosRate = Convert.ToDouble (sPosRate);  				dPosAmount = Convert.ToDouble (sPosAmount);  				iCorrespondentID = Convert.ToInt32 (sCorrespondentID);  				if (dPosAmount < 0.01) {  					ConsoleLog.WriteLine ("Position amount less then 0.01' getting next position");  					response = response.Substring (response.IndexOf ("submit_form_accept") + 10);  				}  				else  					break;  			}  			if (dPosRate > fMaxRate) {  				ConsoleLog.WriteLine ("Rate greater then max possible' waiting 10 sec...");  				System.Threading.Thread.Sleep (10000);  				continue;  			}  			//double dToBuy = Math.Min(Math.Truncate(curRemains / dPosRate)' dPosAmount);  			double dToBuy = Math.Min (curRemains / dPosRate - 0.01' dPosAmount);  			dToBuy = Math.Truncate (dToBuy * 100) / 100;  			ConsoleLog.WriteLine ("Buy " + dToBuy.ToString () + " currency");  			if (Bot.Bot.BuyMoney (iOfferID' dToBuy' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  				ConsoleLog.WriteLine ("Buy currency successfull");  			}  			else {  				ConsoleLog.WriteLine ("Buy currency fail");  			}  		}  		catch (System.Exception localE) {  			ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  		}  	}  	Bot.GetInfoFromCommonResponse (true);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	// Logout  	Bot.Bot.Logout ();  }  else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcConvertMoney,The following statement contains a magic number: if (loginResult == ManagedCitizen.LoginResult.Success) {  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  	int curRemains = 1;  	for (int i = 1; i <= 20; i++) {  		try {  			ConsoleLog.WriteLine ("Convert money' try " + i.ToString ());  			string response;  			string URL;  			int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  			if (tmpRemains == -1)  				continue;  			curRemains = tmpRemains;  			if (curRemains < 0.1) {  				ConsoleLog.WriteLine ("Everything converted");  				break;  			}  			// Открываем страницу ставок ММ' получаем первую нормальную ставку и ее параметры  			ConsoleLog.WriteLine ("Loading rates MM page...");  			URL = "http://www.erepublik.com/en/exchange/listOffers?select_page=select&buy_currency_history_id=buy_currencies=" + iCurrencyBuyID.ToString () + "&sell_currency_history_id=sell_currencies=" + iCurrencySpendID.ToString () + "&account_type=citizen-&action_path=listOffers&page=page=1";  			//ConsoleLog.WriteLine("URL: " + URL);  			response = Bot.Bot.CustomRequest (URL);  			//ConsoleLog.WriteLine(response' "ConvertMoneyLog2.txt");  			if (!response.Contains ("form_amount_accept_")) {  				ConsoleLog.WriteLine ("Error rates MM page");  				continue;  			}  			int iOfferID = 0;  			double dPosRate = 0;  			double dPosAmount = 0;  			int iCorrespondentID = 0;  			for (int rateNum = 1; rateNum <= 10; rateNum++) {  				string sOfferId = CommonUtils.GetStringBetween (response' "\"form_amount_accept_"' "\"");  				string sPosRate = CommonUtils.GetStringBetween (response' "<span class=\"special\" id=\"exchange_value_amount_" + sOfferId + "\">"' "</span>");  				string sPosAmount = CommonUtils.GetStringBetween (response' "<span class=\"special\"  id=\"initial_amount_" + sOfferId + "\">"' "</span>");  				string sCorrespondentID = CommonUtils.GetStringBetween (response' "<a class=\"nameholder dotted\" href=\"/en/citizen/profile/"' "\">");  				ConsoleLog.WriteLine ("Detected position " + rateNum.ToString () + ": OfferId=" + sOfferId + "' PosRate=" + sPosRate + "' PosAmount=" + sPosAmount + "' CorrespondentID=" + sCorrespondentID);  				iOfferID = Convert.ToInt32 (sOfferId);  				dPosRate = Convert.ToDouble (sPosRate);  				dPosAmount = Convert.ToDouble (sPosAmount);  				iCorrespondentID = Convert.ToInt32 (sCorrespondentID);  				if (dPosAmount < 0.01) {  					ConsoleLog.WriteLine ("Position amount less then 0.01' getting next position");  					response = response.Substring (response.IndexOf ("submit_form_accept") + 10);  				}  				else  					break;  			}  			if (dPosRate > fMaxRate) {  				ConsoleLog.WriteLine ("Rate greater then max possible' waiting 10 sec...");  				System.Threading.Thread.Sleep (10000);  				continue;  			}  			//double dToBuy = Math.Min(Math.Truncate(curRemains / dPosRate)' dPosAmount);  			double dToBuy = Math.Min (curRemains / dPosRate - 0.01' dPosAmount);  			dToBuy = Math.Truncate (dToBuy * 100) / 100;  			ConsoleLog.WriteLine ("Buy " + dToBuy.ToString () + " currency");  			if (Bot.Bot.BuyMoney (iOfferID' dToBuy' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  				ConsoleLog.WriteLine ("Buy currency successfull");  			}  			else {  				ConsoleLog.WriteLine ("Buy currency fail");  			}  		}  		catch (System.Exception localE) {  			ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  		}  	}  	Bot.GetInfoFromCommonResponse (true);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	// Logout  	Bot.Bot.Logout ();  }  else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcConvertMoney,The following statement contains a magic number: if (loginResult == ManagedCitizen.LoginResult.Success) {  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  	int curRemains = 1;  	for (int i = 1; i <= 20; i++) {  		try {  			ConsoleLog.WriteLine ("Convert money' try " + i.ToString ());  			string response;  			string URL;  			int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  			if (tmpRemains == -1)  				continue;  			curRemains = tmpRemains;  			if (curRemains < 0.1) {  				ConsoleLog.WriteLine ("Everything converted");  				break;  			}  			// Открываем страницу ставок ММ' получаем первую нормальную ставку и ее параметры  			ConsoleLog.WriteLine ("Loading rates MM page...");  			URL = "http://www.erepublik.com/en/exchange/listOffers?select_page=select&buy_currency_history_id=buy_currencies=" + iCurrencyBuyID.ToString () + "&sell_currency_history_id=sell_currencies=" + iCurrencySpendID.ToString () + "&account_type=citizen-&action_path=listOffers&page=page=1";  			//ConsoleLog.WriteLine("URL: " + URL);  			response = Bot.Bot.CustomRequest (URL);  			//ConsoleLog.WriteLine(response' "ConvertMoneyLog2.txt");  			if (!response.Contains ("form_amount_accept_")) {  				ConsoleLog.WriteLine ("Error rates MM page");  				continue;  			}  			int iOfferID = 0;  			double dPosRate = 0;  			double dPosAmount = 0;  			int iCorrespondentID = 0;  			for (int rateNum = 1; rateNum <= 10; rateNum++) {  				string sOfferId = CommonUtils.GetStringBetween (response' "\"form_amount_accept_"' "\"");  				string sPosRate = CommonUtils.GetStringBetween (response' "<span class=\"special\" id=\"exchange_value_amount_" + sOfferId + "\">"' "</span>");  				string sPosAmount = CommonUtils.GetStringBetween (response' "<span class=\"special\"  id=\"initial_amount_" + sOfferId + "\">"' "</span>");  				string sCorrespondentID = CommonUtils.GetStringBetween (response' "<a class=\"nameholder dotted\" href=\"/en/citizen/profile/"' "\">");  				ConsoleLog.WriteLine ("Detected position " + rateNum.ToString () + ": OfferId=" + sOfferId + "' PosRate=" + sPosRate + "' PosAmount=" + sPosAmount + "' CorrespondentID=" + sCorrespondentID);  				iOfferID = Convert.ToInt32 (sOfferId);  				dPosRate = Convert.ToDouble (sPosRate);  				dPosAmount = Convert.ToDouble (sPosAmount);  				iCorrespondentID = Convert.ToInt32 (sCorrespondentID);  				if (dPosAmount < 0.01) {  					ConsoleLog.WriteLine ("Position amount less then 0.01' getting next position");  					response = response.Substring (response.IndexOf ("submit_form_accept") + 10);  				}  				else  					break;  			}  			if (dPosRate > fMaxRate) {  				ConsoleLog.WriteLine ("Rate greater then max possible' waiting 10 sec...");  				System.Threading.Thread.Sleep (10000);  				continue;  			}  			//double dToBuy = Math.Min(Math.Truncate(curRemains / dPosRate)' dPosAmount);  			double dToBuy = Math.Min (curRemains / dPosRate - 0.01' dPosAmount);  			dToBuy = Math.Truncate (dToBuy * 100) / 100;  			ConsoleLog.WriteLine ("Buy " + dToBuy.ToString () + " currency");  			if (Bot.Bot.BuyMoney (iOfferID' dToBuy' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  				ConsoleLog.WriteLine ("Buy currency successfull");  			}  			else {  				ConsoleLog.WriteLine ("Buy currency fail");  			}  		}  		catch (System.Exception localE) {  			ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  		}  	}  	Bot.GetInfoFromCommonResponse (true);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	// Logout  	Bot.Bot.Logout ();  }  else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcConvertMoney,The following statement contains a magic number: if (loginResult == ManagedCitizen.LoginResult.Success) {  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  	int curRemains = 1;  	for (int i = 1; i <= 20; i++) {  		try {  			ConsoleLog.WriteLine ("Convert money' try " + i.ToString ());  			string response;  			string URL;  			int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  			if (tmpRemains == -1)  				continue;  			curRemains = tmpRemains;  			if (curRemains < 0.1) {  				ConsoleLog.WriteLine ("Everything converted");  				break;  			}  			// Открываем страницу ставок ММ' получаем первую нормальную ставку и ее параметры  			ConsoleLog.WriteLine ("Loading rates MM page...");  			URL = "http://www.erepublik.com/en/exchange/listOffers?select_page=select&buy_currency_history_id=buy_currencies=" + iCurrencyBuyID.ToString () + "&sell_currency_history_id=sell_currencies=" + iCurrencySpendID.ToString () + "&account_type=citizen-&action_path=listOffers&page=page=1";  			//ConsoleLog.WriteLine("URL: " + URL);  			response = Bot.Bot.CustomRequest (URL);  			//ConsoleLog.WriteLine(response' "ConvertMoneyLog2.txt");  			if (!response.Contains ("form_amount_accept_")) {  				ConsoleLog.WriteLine ("Error rates MM page");  				continue;  			}  			int iOfferID = 0;  			double dPosRate = 0;  			double dPosAmount = 0;  			int iCorrespondentID = 0;  			for (int rateNum = 1; rateNum <= 10; rateNum++) {  				string sOfferId = CommonUtils.GetStringBetween (response' "\"form_amount_accept_"' "\"");  				string sPosRate = CommonUtils.GetStringBetween (response' "<span class=\"special\" id=\"exchange_value_amount_" + sOfferId + "\">"' "</span>");  				string sPosAmount = CommonUtils.GetStringBetween (response' "<span class=\"special\"  id=\"initial_amount_" + sOfferId + "\">"' "</span>");  				string sCorrespondentID = CommonUtils.GetStringBetween (response' "<a class=\"nameholder dotted\" href=\"/en/citizen/profile/"' "\">");  				ConsoleLog.WriteLine ("Detected position " + rateNum.ToString () + ": OfferId=" + sOfferId + "' PosRate=" + sPosRate + "' PosAmount=" + sPosAmount + "' CorrespondentID=" + sCorrespondentID);  				iOfferID = Convert.ToInt32 (sOfferId);  				dPosRate = Convert.ToDouble (sPosRate);  				dPosAmount = Convert.ToDouble (sPosAmount);  				iCorrespondentID = Convert.ToInt32 (sCorrespondentID);  				if (dPosAmount < 0.01) {  					ConsoleLog.WriteLine ("Position amount less then 0.01' getting next position");  					response = response.Substring (response.IndexOf ("submit_form_accept") + 10);  				}  				else  					break;  			}  			if (dPosRate > fMaxRate) {  				ConsoleLog.WriteLine ("Rate greater then max possible' waiting 10 sec...");  				System.Threading.Thread.Sleep (10000);  				continue;  			}  			//double dToBuy = Math.Min(Math.Truncate(curRemains / dPosRate)' dPosAmount);  			double dToBuy = Math.Min (curRemains / dPosRate - 0.01' dPosAmount);  			dToBuy = Math.Truncate (dToBuy * 100) / 100;  			ConsoleLog.WriteLine ("Buy " + dToBuy.ToString () + " currency");  			if (Bot.Bot.BuyMoney (iOfferID' dToBuy' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  				ConsoleLog.WriteLine ("Buy currency successfull");  			}  			else {  				ConsoleLog.WriteLine ("Buy currency fail");  			}  		}  		catch (System.Exception localE) {  			ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  		}  	}  	Bot.GetInfoFromCommonResponse (true);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	// Logout  	Bot.Bot.Logout ();  }  else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcConvertMoney,The following statement contains a magic number: if (loginResult == ManagedCitizen.LoginResult.Success) {  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  	int curRemains = 1;  	for (int i = 1; i <= 20; i++) {  		try {  			ConsoleLog.WriteLine ("Convert money' try " + i.ToString ());  			string response;  			string URL;  			int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  			if (tmpRemains == -1)  				continue;  			curRemains = tmpRemains;  			if (curRemains < 0.1) {  				ConsoleLog.WriteLine ("Everything converted");  				break;  			}  			// Открываем страницу ставок ММ' получаем первую нормальную ставку и ее параметры  			ConsoleLog.WriteLine ("Loading rates MM page...");  			URL = "http://www.erepublik.com/en/exchange/listOffers?select_page=select&buy_currency_history_id=buy_currencies=" + iCurrencyBuyID.ToString () + "&sell_currency_history_id=sell_currencies=" + iCurrencySpendID.ToString () + "&account_type=citizen-&action_path=listOffers&page=page=1";  			//ConsoleLog.WriteLine("URL: " + URL);  			response = Bot.Bot.CustomRequest (URL);  			//ConsoleLog.WriteLine(response' "ConvertMoneyLog2.txt");  			if (!response.Contains ("form_amount_accept_")) {  				ConsoleLog.WriteLine ("Error rates MM page");  				continue;  			}  			int iOfferID = 0;  			double dPosRate = 0;  			double dPosAmount = 0;  			int iCorrespondentID = 0;  			for (int rateNum = 1; rateNum <= 10; rateNum++) {  				string sOfferId = CommonUtils.GetStringBetween (response' "\"form_amount_accept_"' "\"");  				string sPosRate = CommonUtils.GetStringBetween (response' "<span class=\"special\" id=\"exchange_value_amount_" + sOfferId + "\">"' "</span>");  				string sPosAmount = CommonUtils.GetStringBetween (response' "<span class=\"special\"  id=\"initial_amount_" + sOfferId + "\">"' "</span>");  				string sCorrespondentID = CommonUtils.GetStringBetween (response' "<a class=\"nameholder dotted\" href=\"/en/citizen/profile/"' "\">");  				ConsoleLog.WriteLine ("Detected position " + rateNum.ToString () + ": OfferId=" + sOfferId + "' PosRate=" + sPosRate + "' PosAmount=" + sPosAmount + "' CorrespondentID=" + sCorrespondentID);  				iOfferID = Convert.ToInt32 (sOfferId);  				dPosRate = Convert.ToDouble (sPosRate);  				dPosAmount = Convert.ToDouble (sPosAmount);  				iCorrespondentID = Convert.ToInt32 (sCorrespondentID);  				if (dPosAmount < 0.01) {  					ConsoleLog.WriteLine ("Position amount less then 0.01' getting next position");  					response = response.Substring (response.IndexOf ("submit_form_accept") + 10);  				}  				else  					break;  			}  			if (dPosRate > fMaxRate) {  				ConsoleLog.WriteLine ("Rate greater then max possible' waiting 10 sec...");  				System.Threading.Thread.Sleep (10000);  				continue;  			}  			//double dToBuy = Math.Min(Math.Truncate(curRemains / dPosRate)' dPosAmount);  			double dToBuy = Math.Min (curRemains / dPosRate - 0.01' dPosAmount);  			dToBuy = Math.Truncate (dToBuy * 100) / 100;  			ConsoleLog.WriteLine ("Buy " + dToBuy.ToString () + " currency");  			if (Bot.Bot.BuyMoney (iOfferID' dToBuy' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  				ConsoleLog.WriteLine ("Buy currency successfull");  			}  			else {  				ConsoleLog.WriteLine ("Buy currency fail");  			}  		}  		catch (System.Exception localE) {  			ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  		}  	}  	Bot.GetInfoFromCommonResponse (true);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	// Logout  	Bot.Bot.Logout ();  }  else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcConvertMoney,The following statement contains a magic number: for (int i = 1; i <= 20; i++) {  	try {  		ConsoleLog.WriteLine ("Convert money' try " + i.ToString ());  		string response;  		string URL;  		int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  		if (tmpRemains == -1)  			continue;  		curRemains = tmpRemains;  		if (curRemains < 0.1) {  			ConsoleLog.WriteLine ("Everything converted");  			break;  		}  		// Открываем страницу ставок ММ' получаем первую нормальную ставку и ее параметры  		ConsoleLog.WriteLine ("Loading rates MM page...");  		URL = "http://www.erepublik.com/en/exchange/listOffers?select_page=select&buy_currency_history_id=buy_currencies=" + iCurrencyBuyID.ToString () + "&sell_currency_history_id=sell_currencies=" + iCurrencySpendID.ToString () + "&account_type=citizen-&action_path=listOffers&page=page=1";  		//ConsoleLog.WriteLine("URL: " + URL);  		response = Bot.Bot.CustomRequest (URL);  		//ConsoleLog.WriteLine(response' "ConvertMoneyLog2.txt");  		if (!response.Contains ("form_amount_accept_")) {  			ConsoleLog.WriteLine ("Error rates MM page");  			continue;  		}  		int iOfferID = 0;  		double dPosRate = 0;  		double dPosAmount = 0;  		int iCorrespondentID = 0;  		for (int rateNum = 1; rateNum <= 10; rateNum++) {  			string sOfferId = CommonUtils.GetStringBetween (response' "\"form_amount_accept_"' "\"");  			string sPosRate = CommonUtils.GetStringBetween (response' "<span class=\"special\" id=\"exchange_value_amount_" + sOfferId + "\">"' "</span>");  			string sPosAmount = CommonUtils.GetStringBetween (response' "<span class=\"special\"  id=\"initial_amount_" + sOfferId + "\">"' "</span>");  			string sCorrespondentID = CommonUtils.GetStringBetween (response' "<a class=\"nameholder dotted\" href=\"/en/citizen/profile/"' "\">");  			ConsoleLog.WriteLine ("Detected position " + rateNum.ToString () + ": OfferId=" + sOfferId + "' PosRate=" + sPosRate + "' PosAmount=" + sPosAmount + "' CorrespondentID=" + sCorrespondentID);  			iOfferID = Convert.ToInt32 (sOfferId);  			dPosRate = Convert.ToDouble (sPosRate);  			dPosAmount = Convert.ToDouble (sPosAmount);  			iCorrespondentID = Convert.ToInt32 (sCorrespondentID);  			if (dPosAmount < 0.01) {  				ConsoleLog.WriteLine ("Position amount less then 0.01' getting next position");  				response = response.Substring (response.IndexOf ("submit_form_accept") + 10);  			}  			else  				break;  		}  		if (dPosRate > fMaxRate) {  			ConsoleLog.WriteLine ("Rate greater then max possible' waiting 10 sec...");  			System.Threading.Thread.Sleep (10000);  			continue;  		}  		//double dToBuy = Math.Min(Math.Truncate(curRemains / dPosRate)' dPosAmount);  		double dToBuy = Math.Min (curRemains / dPosRate - 0.01' dPosAmount);  		dToBuy = Math.Truncate (dToBuy * 100) / 100;  		ConsoleLog.WriteLine ("Buy " + dToBuy.ToString () + " currency");  		if (Bot.Bot.BuyMoney (iOfferID' dToBuy' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  			ConsoleLog.WriteLine ("Buy currency successfull");  		}  		else {  			ConsoleLog.WriteLine ("Buy currency fail");  		}  	}  	catch (System.Exception localE) {  		ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  	}  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcConvertMoney,The following statement contains a magic number: for (int i = 1; i <= 20; i++) {  	try {  		ConsoleLog.WriteLine ("Convert money' try " + i.ToString ());  		string response;  		string URL;  		int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  		if (tmpRemains == -1)  			continue;  		curRemains = tmpRemains;  		if (curRemains < 0.1) {  			ConsoleLog.WriteLine ("Everything converted");  			break;  		}  		// Открываем страницу ставок ММ' получаем первую нормальную ставку и ее параметры  		ConsoleLog.WriteLine ("Loading rates MM page...");  		URL = "http://www.erepublik.com/en/exchange/listOffers?select_page=select&buy_currency_history_id=buy_currencies=" + iCurrencyBuyID.ToString () + "&sell_currency_history_id=sell_currencies=" + iCurrencySpendID.ToString () + "&account_type=citizen-&action_path=listOffers&page=page=1";  		//ConsoleLog.WriteLine("URL: " + URL);  		response = Bot.Bot.CustomRequest (URL);  		//ConsoleLog.WriteLine(response' "ConvertMoneyLog2.txt");  		if (!response.Contains ("form_amount_accept_")) {  			ConsoleLog.WriteLine ("Error rates MM page");  			continue;  		}  		int iOfferID = 0;  		double dPosRate = 0;  		double dPosAmount = 0;  		int iCorrespondentID = 0;  		for (int rateNum = 1; rateNum <= 10; rateNum++) {  			string sOfferId = CommonUtils.GetStringBetween (response' "\"form_amount_accept_"' "\"");  			string sPosRate = CommonUtils.GetStringBetween (response' "<span class=\"special\" id=\"exchange_value_amount_" + sOfferId + "\">"' "</span>");  			string sPosAmount = CommonUtils.GetStringBetween (response' "<span class=\"special\"  id=\"initial_amount_" + sOfferId + "\">"' "</span>");  			string sCorrespondentID = CommonUtils.GetStringBetween (response' "<a class=\"nameholder dotted\" href=\"/en/citizen/profile/"' "\">");  			ConsoleLog.WriteLine ("Detected position " + rateNum.ToString () + ": OfferId=" + sOfferId + "' PosRate=" + sPosRate + "' PosAmount=" + sPosAmount + "' CorrespondentID=" + sCorrespondentID);  			iOfferID = Convert.ToInt32 (sOfferId);  			dPosRate = Convert.ToDouble (sPosRate);  			dPosAmount = Convert.ToDouble (sPosAmount);  			iCorrespondentID = Convert.ToInt32 (sCorrespondentID);  			if (dPosAmount < 0.01) {  				ConsoleLog.WriteLine ("Position amount less then 0.01' getting next position");  				response = response.Substring (response.IndexOf ("submit_form_accept") + 10);  			}  			else  				break;  		}  		if (dPosRate > fMaxRate) {  			ConsoleLog.WriteLine ("Rate greater then max possible' waiting 10 sec...");  			System.Threading.Thread.Sleep (10000);  			continue;  		}  		//double dToBuy = Math.Min(Math.Truncate(curRemains / dPosRate)' dPosAmount);  		double dToBuy = Math.Min (curRemains / dPosRate - 0.01' dPosAmount);  		dToBuy = Math.Truncate (dToBuy * 100) / 100;  		ConsoleLog.WriteLine ("Buy " + dToBuy.ToString () + " currency");  		if (Bot.Bot.BuyMoney (iOfferID' dToBuy' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  			ConsoleLog.WriteLine ("Buy currency successfull");  		}  		else {  			ConsoleLog.WriteLine ("Buy currency fail");  		}  	}  	catch (System.Exception localE) {  		ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  	}  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcConvertMoney,The following statement contains a magic number: for (int i = 1; i <= 20; i++) {  	try {  		ConsoleLog.WriteLine ("Convert money' try " + i.ToString ());  		string response;  		string URL;  		int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  		if (tmpRemains == -1)  			continue;  		curRemains = tmpRemains;  		if (curRemains < 0.1) {  			ConsoleLog.WriteLine ("Everything converted");  			break;  		}  		// Открываем страницу ставок ММ' получаем первую нормальную ставку и ее параметры  		ConsoleLog.WriteLine ("Loading rates MM page...");  		URL = "http://www.erepublik.com/en/exchange/listOffers?select_page=select&buy_currency_history_id=buy_currencies=" + iCurrencyBuyID.ToString () + "&sell_currency_history_id=sell_currencies=" + iCurrencySpendID.ToString () + "&account_type=citizen-&action_path=listOffers&page=page=1";  		//ConsoleLog.WriteLine("URL: " + URL);  		response = Bot.Bot.CustomRequest (URL);  		//ConsoleLog.WriteLine(response' "ConvertMoneyLog2.txt");  		if (!response.Contains ("form_amount_accept_")) {  			ConsoleLog.WriteLine ("Error rates MM page");  			continue;  		}  		int iOfferID = 0;  		double dPosRate = 0;  		double dPosAmount = 0;  		int iCorrespondentID = 0;  		for (int rateNum = 1; rateNum <= 10; rateNum++) {  			string sOfferId = CommonUtils.GetStringBetween (response' "\"form_amount_accept_"' "\"");  			string sPosRate = CommonUtils.GetStringBetween (response' "<span class=\"special\" id=\"exchange_value_amount_" + sOfferId + "\">"' "</span>");  			string sPosAmount = CommonUtils.GetStringBetween (response' "<span class=\"special\"  id=\"initial_amount_" + sOfferId + "\">"' "</span>");  			string sCorrespondentID = CommonUtils.GetStringBetween (response' "<a class=\"nameholder dotted\" href=\"/en/citizen/profile/"' "\">");  			ConsoleLog.WriteLine ("Detected position " + rateNum.ToString () + ": OfferId=" + sOfferId + "' PosRate=" + sPosRate + "' PosAmount=" + sPosAmount + "' CorrespondentID=" + sCorrespondentID);  			iOfferID = Convert.ToInt32 (sOfferId);  			dPosRate = Convert.ToDouble (sPosRate);  			dPosAmount = Convert.ToDouble (sPosAmount);  			iCorrespondentID = Convert.ToInt32 (sCorrespondentID);  			if (dPosAmount < 0.01) {  				ConsoleLog.WriteLine ("Position amount less then 0.01' getting next position");  				response = response.Substring (response.IndexOf ("submit_form_accept") + 10);  			}  			else  				break;  		}  		if (dPosRate > fMaxRate) {  			ConsoleLog.WriteLine ("Rate greater then max possible' waiting 10 sec...");  			System.Threading.Thread.Sleep (10000);  			continue;  		}  		//double dToBuy = Math.Min(Math.Truncate(curRemains / dPosRate)' dPosAmount);  		double dToBuy = Math.Min (curRemains / dPosRate - 0.01' dPosAmount);  		dToBuy = Math.Truncate (dToBuy * 100) / 100;  		ConsoleLog.WriteLine ("Buy " + dToBuy.ToString () + " currency");  		if (Bot.Bot.BuyMoney (iOfferID' dToBuy' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  			ConsoleLog.WriteLine ("Buy currency successfull");  		}  		else {  			ConsoleLog.WriteLine ("Buy currency fail");  		}  	}  	catch (System.Exception localE) {  		ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  	}  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcConvertMoney,The following statement contains a magic number: for (int i = 1; i <= 20; i++) {  	try {  		ConsoleLog.WriteLine ("Convert money' try " + i.ToString ());  		string response;  		string URL;  		int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  		if (tmpRemains == -1)  			continue;  		curRemains = tmpRemains;  		if (curRemains < 0.1) {  			ConsoleLog.WriteLine ("Everything converted");  			break;  		}  		// Открываем страницу ставок ММ' получаем первую нормальную ставку и ее параметры  		ConsoleLog.WriteLine ("Loading rates MM page...");  		URL = "http://www.erepublik.com/en/exchange/listOffers?select_page=select&buy_currency_history_id=buy_currencies=" + iCurrencyBuyID.ToString () + "&sell_currency_history_id=sell_currencies=" + iCurrencySpendID.ToString () + "&account_type=citizen-&action_path=listOffers&page=page=1";  		//ConsoleLog.WriteLine("URL: " + URL);  		response = Bot.Bot.CustomRequest (URL);  		//ConsoleLog.WriteLine(response' "ConvertMoneyLog2.txt");  		if (!response.Contains ("form_amount_accept_")) {  			ConsoleLog.WriteLine ("Error rates MM page");  			continue;  		}  		int iOfferID = 0;  		double dPosRate = 0;  		double dPosAmount = 0;  		int iCorrespondentID = 0;  		for (int rateNum = 1; rateNum <= 10; rateNum++) {  			string sOfferId = CommonUtils.GetStringBetween (response' "\"form_amount_accept_"' "\"");  			string sPosRate = CommonUtils.GetStringBetween (response' "<span class=\"special\" id=\"exchange_value_amount_" + sOfferId + "\">"' "</span>");  			string sPosAmount = CommonUtils.GetStringBetween (response' "<span class=\"special\"  id=\"initial_amount_" + sOfferId + "\">"' "</span>");  			string sCorrespondentID = CommonUtils.GetStringBetween (response' "<a class=\"nameholder dotted\" href=\"/en/citizen/profile/"' "\">");  			ConsoleLog.WriteLine ("Detected position " + rateNum.ToString () + ": OfferId=" + sOfferId + "' PosRate=" + sPosRate + "' PosAmount=" + sPosAmount + "' CorrespondentID=" + sCorrespondentID);  			iOfferID = Convert.ToInt32 (sOfferId);  			dPosRate = Convert.ToDouble (sPosRate);  			dPosAmount = Convert.ToDouble (sPosAmount);  			iCorrespondentID = Convert.ToInt32 (sCorrespondentID);  			if (dPosAmount < 0.01) {  				ConsoleLog.WriteLine ("Position amount less then 0.01' getting next position");  				response = response.Substring (response.IndexOf ("submit_form_accept") + 10);  			}  			else  				break;  		}  		if (dPosRate > fMaxRate) {  			ConsoleLog.WriteLine ("Rate greater then max possible' waiting 10 sec...");  			System.Threading.Thread.Sleep (10000);  			continue;  		}  		//double dToBuy = Math.Min(Math.Truncate(curRemains / dPosRate)' dPosAmount);  		double dToBuy = Math.Min (curRemains / dPosRate - 0.01' dPosAmount);  		dToBuy = Math.Truncate (dToBuy * 100) / 100;  		ConsoleLog.WriteLine ("Buy " + dToBuy.ToString () + " currency");  		if (Bot.Bot.BuyMoney (iOfferID' dToBuy' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  			ConsoleLog.WriteLine ("Buy currency successfull");  		}  		else {  			ConsoleLog.WriteLine ("Buy currency fail");  		}  	}  	catch (System.Exception localE) {  		ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  	}  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcConvertMoney,The following statement contains a magic number: for (int i = 1; i <= 20; i++) {  	try {  		ConsoleLog.WriteLine ("Convert money' try " + i.ToString ());  		string response;  		string URL;  		int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  		if (tmpRemains == -1)  			continue;  		curRemains = tmpRemains;  		if (curRemains < 0.1) {  			ConsoleLog.WriteLine ("Everything converted");  			break;  		}  		// Открываем страницу ставок ММ' получаем первую нормальную ставку и ее параметры  		ConsoleLog.WriteLine ("Loading rates MM page...");  		URL = "http://www.erepublik.com/en/exchange/listOffers?select_page=select&buy_currency_history_id=buy_currencies=" + iCurrencyBuyID.ToString () + "&sell_currency_history_id=sell_currencies=" + iCurrencySpendID.ToString () + "&account_type=citizen-&action_path=listOffers&page=page=1";  		//ConsoleLog.WriteLine("URL: " + URL);  		response = Bot.Bot.CustomRequest (URL);  		//ConsoleLog.WriteLine(response' "ConvertMoneyLog2.txt");  		if (!response.Contains ("form_amount_accept_")) {  			ConsoleLog.WriteLine ("Error rates MM page");  			continue;  		}  		int iOfferID = 0;  		double dPosRate = 0;  		double dPosAmount = 0;  		int iCorrespondentID = 0;  		for (int rateNum = 1; rateNum <= 10; rateNum++) {  			string sOfferId = CommonUtils.GetStringBetween (response' "\"form_amount_accept_"' "\"");  			string sPosRate = CommonUtils.GetStringBetween (response' "<span class=\"special\" id=\"exchange_value_amount_" + sOfferId + "\">"' "</span>");  			string sPosAmount = CommonUtils.GetStringBetween (response' "<span class=\"special\"  id=\"initial_amount_" + sOfferId + "\">"' "</span>");  			string sCorrespondentID = CommonUtils.GetStringBetween (response' "<a class=\"nameholder dotted\" href=\"/en/citizen/profile/"' "\">");  			ConsoleLog.WriteLine ("Detected position " + rateNum.ToString () + ": OfferId=" + sOfferId + "' PosRate=" + sPosRate + "' PosAmount=" + sPosAmount + "' CorrespondentID=" + sCorrespondentID);  			iOfferID = Convert.ToInt32 (sOfferId);  			dPosRate = Convert.ToDouble (sPosRate);  			dPosAmount = Convert.ToDouble (sPosAmount);  			iCorrespondentID = Convert.ToInt32 (sCorrespondentID);  			if (dPosAmount < 0.01) {  				ConsoleLog.WriteLine ("Position amount less then 0.01' getting next position");  				response = response.Substring (response.IndexOf ("submit_form_accept") + 10);  			}  			else  				break;  		}  		if (dPosRate > fMaxRate) {  			ConsoleLog.WriteLine ("Rate greater then max possible' waiting 10 sec...");  			System.Threading.Thread.Sleep (10000);  			continue;  		}  		//double dToBuy = Math.Min(Math.Truncate(curRemains / dPosRate)' dPosAmount);  		double dToBuy = Math.Min (curRemains / dPosRate - 0.01' dPosAmount);  		dToBuy = Math.Truncate (dToBuy * 100) / 100;  		ConsoleLog.WriteLine ("Buy " + dToBuy.ToString () + " currency");  		if (Bot.Bot.BuyMoney (iOfferID' dToBuy' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  			ConsoleLog.WriteLine ("Buy currency successfull");  		}  		else {  			ConsoleLog.WriteLine ("Buy currency fail");  		}  	}  	catch (System.Exception localE) {  		ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  	}  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcConvertMoney,The following statement contains a magic number: for (int i = 1; i <= 20; i++) {  	try {  		ConsoleLog.WriteLine ("Convert money' try " + i.ToString ());  		string response;  		string URL;  		int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  		if (tmpRemains == -1)  			continue;  		curRemains = tmpRemains;  		if (curRemains < 0.1) {  			ConsoleLog.WriteLine ("Everything converted");  			break;  		}  		// Открываем страницу ставок ММ' получаем первую нормальную ставку и ее параметры  		ConsoleLog.WriteLine ("Loading rates MM page...");  		URL = "http://www.erepublik.com/en/exchange/listOffers?select_page=select&buy_currency_history_id=buy_currencies=" + iCurrencyBuyID.ToString () + "&sell_currency_history_id=sell_currencies=" + iCurrencySpendID.ToString () + "&account_type=citizen-&action_path=listOffers&page=page=1";  		//ConsoleLog.WriteLine("URL: " + URL);  		response = Bot.Bot.CustomRequest (URL);  		//ConsoleLog.WriteLine(response' "ConvertMoneyLog2.txt");  		if (!response.Contains ("form_amount_accept_")) {  			ConsoleLog.WriteLine ("Error rates MM page");  			continue;  		}  		int iOfferID = 0;  		double dPosRate = 0;  		double dPosAmount = 0;  		int iCorrespondentID = 0;  		for (int rateNum = 1; rateNum <= 10; rateNum++) {  			string sOfferId = CommonUtils.GetStringBetween (response' "\"form_amount_accept_"' "\"");  			string sPosRate = CommonUtils.GetStringBetween (response' "<span class=\"special\" id=\"exchange_value_amount_" + sOfferId + "\">"' "</span>");  			string sPosAmount = CommonUtils.GetStringBetween (response' "<span class=\"special\"  id=\"initial_amount_" + sOfferId + "\">"' "</span>");  			string sCorrespondentID = CommonUtils.GetStringBetween (response' "<a class=\"nameholder dotted\" href=\"/en/citizen/profile/"' "\">");  			ConsoleLog.WriteLine ("Detected position " + rateNum.ToString () + ": OfferId=" + sOfferId + "' PosRate=" + sPosRate + "' PosAmount=" + sPosAmount + "' CorrespondentID=" + sCorrespondentID);  			iOfferID = Convert.ToInt32 (sOfferId);  			dPosRate = Convert.ToDouble (sPosRate);  			dPosAmount = Convert.ToDouble (sPosAmount);  			iCorrespondentID = Convert.ToInt32 (sCorrespondentID);  			if (dPosAmount < 0.01) {  				ConsoleLog.WriteLine ("Position amount less then 0.01' getting next position");  				response = response.Substring (response.IndexOf ("submit_form_accept") + 10);  			}  			else  				break;  		}  		if (dPosRate > fMaxRate) {  			ConsoleLog.WriteLine ("Rate greater then max possible' waiting 10 sec...");  			System.Threading.Thread.Sleep (10000);  			continue;  		}  		//double dToBuy = Math.Min(Math.Truncate(curRemains / dPosRate)' dPosAmount);  		double dToBuy = Math.Min (curRemains / dPosRate - 0.01' dPosAmount);  		dToBuy = Math.Truncate (dToBuy * 100) / 100;  		ConsoleLog.WriteLine ("Buy " + dToBuy.ToString () + " currency");  		if (Bot.Bot.BuyMoney (iOfferID' dToBuy' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  			ConsoleLog.WriteLine ("Buy currency successfull");  		}  		else {  			ConsoleLog.WriteLine ("Buy currency fail");  		}  	}  	catch (System.Exception localE) {  		ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  	}  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcConvertMoney,The following statement contains a magic number: for (int i = 1; i <= 20; i++) {  	try {  		ConsoleLog.WriteLine ("Convert money' try " + i.ToString ());  		string response;  		string URL;  		int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  		if (tmpRemains == -1)  			continue;  		curRemains = tmpRemains;  		if (curRemains < 0.1) {  			ConsoleLog.WriteLine ("Everything converted");  			break;  		}  		// Открываем страницу ставок ММ' получаем первую нормальную ставку и ее параметры  		ConsoleLog.WriteLine ("Loading rates MM page...");  		URL = "http://www.erepublik.com/en/exchange/listOffers?select_page=select&buy_currency_history_id=buy_currencies=" + iCurrencyBuyID.ToString () + "&sell_currency_history_id=sell_currencies=" + iCurrencySpendID.ToString () + "&account_type=citizen-&action_path=listOffers&page=page=1";  		//ConsoleLog.WriteLine("URL: " + URL);  		response = Bot.Bot.CustomRequest (URL);  		//ConsoleLog.WriteLine(response' "ConvertMoneyLog2.txt");  		if (!response.Contains ("form_amount_accept_")) {  			ConsoleLog.WriteLine ("Error rates MM page");  			continue;  		}  		int iOfferID = 0;  		double dPosRate = 0;  		double dPosAmount = 0;  		int iCorrespondentID = 0;  		for (int rateNum = 1; rateNum <= 10; rateNum++) {  			string sOfferId = CommonUtils.GetStringBetween (response' "\"form_amount_accept_"' "\"");  			string sPosRate = CommonUtils.GetStringBetween (response' "<span class=\"special\" id=\"exchange_value_amount_" + sOfferId + "\">"' "</span>");  			string sPosAmount = CommonUtils.GetStringBetween (response' "<span class=\"special\"  id=\"initial_amount_" + sOfferId + "\">"' "</span>");  			string sCorrespondentID = CommonUtils.GetStringBetween (response' "<a class=\"nameholder dotted\" href=\"/en/citizen/profile/"' "\">");  			ConsoleLog.WriteLine ("Detected position " + rateNum.ToString () + ": OfferId=" + sOfferId + "' PosRate=" + sPosRate + "' PosAmount=" + sPosAmount + "' CorrespondentID=" + sCorrespondentID);  			iOfferID = Convert.ToInt32 (sOfferId);  			dPosRate = Convert.ToDouble (sPosRate);  			dPosAmount = Convert.ToDouble (sPosAmount);  			iCorrespondentID = Convert.ToInt32 (sCorrespondentID);  			if (dPosAmount < 0.01) {  				ConsoleLog.WriteLine ("Position amount less then 0.01' getting next position");  				response = response.Substring (response.IndexOf ("submit_form_accept") + 10);  			}  			else  				break;  		}  		if (dPosRate > fMaxRate) {  			ConsoleLog.WriteLine ("Rate greater then max possible' waiting 10 sec...");  			System.Threading.Thread.Sleep (10000);  			continue;  		}  		//double dToBuy = Math.Min(Math.Truncate(curRemains / dPosRate)' dPosAmount);  		double dToBuy = Math.Min (curRemains / dPosRate - 0.01' dPosAmount);  		dToBuy = Math.Truncate (dToBuy * 100) / 100;  		ConsoleLog.WriteLine ("Buy " + dToBuy.ToString () + " currency");  		if (Bot.Bot.BuyMoney (iOfferID' dToBuy' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  			ConsoleLog.WriteLine ("Buy currency successfull");  		}  		else {  			ConsoleLog.WriteLine ("Buy currency fail");  		}  	}  	catch (System.Exception localE) {  		ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  	}  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcConvertMoney,The following statement contains a magic number: for (int i = 1; i <= 20; i++) {  	try {  		ConsoleLog.WriteLine ("Convert money' try " + i.ToString ());  		string response;  		string URL;  		int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  		if (tmpRemains == -1)  			continue;  		curRemains = tmpRemains;  		if (curRemains < 0.1) {  			ConsoleLog.WriteLine ("Everything converted");  			break;  		}  		// Открываем страницу ставок ММ' получаем первую нормальную ставку и ее параметры  		ConsoleLog.WriteLine ("Loading rates MM page...");  		URL = "http://www.erepublik.com/en/exchange/listOffers?select_page=select&buy_currency_history_id=buy_currencies=" + iCurrencyBuyID.ToString () + "&sell_currency_history_id=sell_currencies=" + iCurrencySpendID.ToString () + "&account_type=citizen-&action_path=listOffers&page=page=1";  		//ConsoleLog.WriteLine("URL: " + URL);  		response = Bot.Bot.CustomRequest (URL);  		//ConsoleLog.WriteLine(response' "ConvertMoneyLog2.txt");  		if (!response.Contains ("form_amount_accept_")) {  			ConsoleLog.WriteLine ("Error rates MM page");  			continue;  		}  		int iOfferID = 0;  		double dPosRate = 0;  		double dPosAmount = 0;  		int iCorrespondentID = 0;  		for (int rateNum = 1; rateNum <= 10; rateNum++) {  			string sOfferId = CommonUtils.GetStringBetween (response' "\"form_amount_accept_"' "\"");  			string sPosRate = CommonUtils.GetStringBetween (response' "<span class=\"special\" id=\"exchange_value_amount_" + sOfferId + "\">"' "</span>");  			string sPosAmount = CommonUtils.GetStringBetween (response' "<span class=\"special\"  id=\"initial_amount_" + sOfferId + "\">"' "</span>");  			string sCorrespondentID = CommonUtils.GetStringBetween (response' "<a class=\"nameholder dotted\" href=\"/en/citizen/profile/"' "\">");  			ConsoleLog.WriteLine ("Detected position " + rateNum.ToString () + ": OfferId=" + sOfferId + "' PosRate=" + sPosRate + "' PosAmount=" + sPosAmount + "' CorrespondentID=" + sCorrespondentID);  			iOfferID = Convert.ToInt32 (sOfferId);  			dPosRate = Convert.ToDouble (sPosRate);  			dPosAmount = Convert.ToDouble (sPosAmount);  			iCorrespondentID = Convert.ToInt32 (sCorrespondentID);  			if (dPosAmount < 0.01) {  				ConsoleLog.WriteLine ("Position amount less then 0.01' getting next position");  				response = response.Substring (response.IndexOf ("submit_form_accept") + 10);  			}  			else  				break;  		}  		if (dPosRate > fMaxRate) {  			ConsoleLog.WriteLine ("Rate greater then max possible' waiting 10 sec...");  			System.Threading.Thread.Sleep (10000);  			continue;  		}  		//double dToBuy = Math.Min(Math.Truncate(curRemains / dPosRate)' dPosAmount);  		double dToBuy = Math.Min (curRemains / dPosRate - 0.01' dPosAmount);  		dToBuy = Math.Truncate (dToBuy * 100) / 100;  		ConsoleLog.WriteLine ("Buy " + dToBuy.ToString () + " currency");  		if (Bot.Bot.BuyMoney (iOfferID' dToBuy' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  			ConsoleLog.WriteLine ("Buy currency successfull");  		}  		else {  			ConsoleLog.WriteLine ("Buy currency fail");  		}  	}  	catch (System.Exception localE) {  		ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  	}  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcConvertMoney,The following statement contains a magic number: for (int i = 1; i <= 20; i++) {  	try {  		ConsoleLog.WriteLine ("Convert money' try " + i.ToString ());  		string response;  		string URL;  		int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  		if (tmpRemains == -1)  			continue;  		curRemains = tmpRemains;  		if (curRemains < 0.1) {  			ConsoleLog.WriteLine ("Everything converted");  			break;  		}  		// Открываем страницу ставок ММ' получаем первую нормальную ставку и ее параметры  		ConsoleLog.WriteLine ("Loading rates MM page...");  		URL = "http://www.erepublik.com/en/exchange/listOffers?select_page=select&buy_currency_history_id=buy_currencies=" + iCurrencyBuyID.ToString () + "&sell_currency_history_id=sell_currencies=" + iCurrencySpendID.ToString () + "&account_type=citizen-&action_path=listOffers&page=page=1";  		//ConsoleLog.WriteLine("URL: " + URL);  		response = Bot.Bot.CustomRequest (URL);  		//ConsoleLog.WriteLine(response' "ConvertMoneyLog2.txt");  		if (!response.Contains ("form_amount_accept_")) {  			ConsoleLog.WriteLine ("Error rates MM page");  			continue;  		}  		int iOfferID = 0;  		double dPosRate = 0;  		double dPosAmount = 0;  		int iCorrespondentID = 0;  		for (int rateNum = 1; rateNum <= 10; rateNum++) {  			string sOfferId = CommonUtils.GetStringBetween (response' "\"form_amount_accept_"' "\"");  			string sPosRate = CommonUtils.GetStringBetween (response' "<span class=\"special\" id=\"exchange_value_amount_" + sOfferId + "\">"' "</span>");  			string sPosAmount = CommonUtils.GetStringBetween (response' "<span class=\"special\"  id=\"initial_amount_" + sOfferId + "\">"' "</span>");  			string sCorrespondentID = CommonUtils.GetStringBetween (response' "<a class=\"nameholder dotted\" href=\"/en/citizen/profile/"' "\">");  			ConsoleLog.WriteLine ("Detected position " + rateNum.ToString () + ": OfferId=" + sOfferId + "' PosRate=" + sPosRate + "' PosAmount=" + sPosAmount + "' CorrespondentID=" + sCorrespondentID);  			iOfferID = Convert.ToInt32 (sOfferId);  			dPosRate = Convert.ToDouble (sPosRate);  			dPosAmount = Convert.ToDouble (sPosAmount);  			iCorrespondentID = Convert.ToInt32 (sCorrespondentID);  			if (dPosAmount < 0.01) {  				ConsoleLog.WriteLine ("Position amount less then 0.01' getting next position");  				response = response.Substring (response.IndexOf ("submit_form_accept") + 10);  			}  			else  				break;  		}  		if (dPosRate > fMaxRate) {  			ConsoleLog.WriteLine ("Rate greater then max possible' waiting 10 sec...");  			System.Threading.Thread.Sleep (10000);  			continue;  		}  		//double dToBuy = Math.Min(Math.Truncate(curRemains / dPosRate)' dPosAmount);  		double dToBuy = Math.Min (curRemains / dPosRate - 0.01' dPosAmount);  		dToBuy = Math.Truncate (dToBuy * 100) / 100;  		ConsoleLog.WriteLine ("Buy " + dToBuy.ToString () + " currency");  		if (Bot.Bot.BuyMoney (iOfferID' dToBuy' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  			ConsoleLog.WriteLine ("Buy currency successfull");  		}  		else {  			ConsoleLog.WriteLine ("Buy currency fail");  		}  	}  	catch (System.Exception localE) {  		ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  	}  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcConvertMoney,The following statement contains a magic number: try {  	ConsoleLog.WriteLine ("Convert money' try " + i.ToString ());  	string response;  	string URL;  	int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  	if (tmpRemains == -1)  		continue;  	curRemains = tmpRemains;  	if (curRemains < 0.1) {  		ConsoleLog.WriteLine ("Everything converted");  		break;  	}  	// Открываем страницу ставок ММ' получаем первую нормальную ставку и ее параметры  	ConsoleLog.WriteLine ("Loading rates MM page...");  	URL = "http://www.erepublik.com/en/exchange/listOffers?select_page=select&buy_currency_history_id=buy_currencies=" + iCurrencyBuyID.ToString () + "&sell_currency_history_id=sell_currencies=" + iCurrencySpendID.ToString () + "&account_type=citizen-&action_path=listOffers&page=page=1";  	//ConsoleLog.WriteLine("URL: " + URL);  	response = Bot.Bot.CustomRequest (URL);  	//ConsoleLog.WriteLine(response' "ConvertMoneyLog2.txt");  	if (!response.Contains ("form_amount_accept_")) {  		ConsoleLog.WriteLine ("Error rates MM page");  		continue;  	}  	int iOfferID = 0;  	double dPosRate = 0;  	double dPosAmount = 0;  	int iCorrespondentID = 0;  	for (int rateNum = 1; rateNum <= 10; rateNum++) {  		string sOfferId = CommonUtils.GetStringBetween (response' "\"form_amount_accept_"' "\"");  		string sPosRate = CommonUtils.GetStringBetween (response' "<span class=\"special\" id=\"exchange_value_amount_" + sOfferId + "\">"' "</span>");  		string sPosAmount = CommonUtils.GetStringBetween (response' "<span class=\"special\"  id=\"initial_amount_" + sOfferId + "\">"' "</span>");  		string sCorrespondentID = CommonUtils.GetStringBetween (response' "<a class=\"nameholder dotted\" href=\"/en/citizen/profile/"' "\">");  		ConsoleLog.WriteLine ("Detected position " + rateNum.ToString () + ": OfferId=" + sOfferId + "' PosRate=" + sPosRate + "' PosAmount=" + sPosAmount + "' CorrespondentID=" + sCorrespondentID);  		iOfferID = Convert.ToInt32 (sOfferId);  		dPosRate = Convert.ToDouble (sPosRate);  		dPosAmount = Convert.ToDouble (sPosAmount);  		iCorrespondentID = Convert.ToInt32 (sCorrespondentID);  		if (dPosAmount < 0.01) {  			ConsoleLog.WriteLine ("Position amount less then 0.01' getting next position");  			response = response.Substring (response.IndexOf ("submit_form_accept") + 10);  		}  		else  			break;  	}  	if (dPosRate > fMaxRate) {  		ConsoleLog.WriteLine ("Rate greater then max possible' waiting 10 sec...");  		System.Threading.Thread.Sleep (10000);  		continue;  	}  	//double dToBuy = Math.Min(Math.Truncate(curRemains / dPosRate)' dPosAmount);  	double dToBuy = Math.Min (curRemains / dPosRate - 0.01' dPosAmount);  	dToBuy = Math.Truncate (dToBuy * 100) / 100;  	ConsoleLog.WriteLine ("Buy " + dToBuy.ToString () + " currency");  	if (Bot.Bot.BuyMoney (iOfferID' dToBuy' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  		ConsoleLog.WriteLine ("Buy currency successfull");  	}  	else {  		ConsoleLog.WriteLine ("Buy currency fail");  	}  }  catch (System.Exception localE) {  	ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcConvertMoney,The following statement contains a magic number: try {  	ConsoleLog.WriteLine ("Convert money' try " + i.ToString ());  	string response;  	string URL;  	int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  	if (tmpRemains == -1)  		continue;  	curRemains = tmpRemains;  	if (curRemains < 0.1) {  		ConsoleLog.WriteLine ("Everything converted");  		break;  	}  	// Открываем страницу ставок ММ' получаем первую нормальную ставку и ее параметры  	ConsoleLog.WriteLine ("Loading rates MM page...");  	URL = "http://www.erepublik.com/en/exchange/listOffers?select_page=select&buy_currency_history_id=buy_currencies=" + iCurrencyBuyID.ToString () + "&sell_currency_history_id=sell_currencies=" + iCurrencySpendID.ToString () + "&account_type=citizen-&action_path=listOffers&page=page=1";  	//ConsoleLog.WriteLine("URL: " + URL);  	response = Bot.Bot.CustomRequest (URL);  	//ConsoleLog.WriteLine(response' "ConvertMoneyLog2.txt");  	if (!response.Contains ("form_amount_accept_")) {  		ConsoleLog.WriteLine ("Error rates MM page");  		continue;  	}  	int iOfferID = 0;  	double dPosRate = 0;  	double dPosAmount = 0;  	int iCorrespondentID = 0;  	for (int rateNum = 1; rateNum <= 10; rateNum++) {  		string sOfferId = CommonUtils.GetStringBetween (response' "\"form_amount_accept_"' "\"");  		string sPosRate = CommonUtils.GetStringBetween (response' "<span class=\"special\" id=\"exchange_value_amount_" + sOfferId + "\">"' "</span>");  		string sPosAmount = CommonUtils.GetStringBetween (response' "<span class=\"special\"  id=\"initial_amount_" + sOfferId + "\">"' "</span>");  		string sCorrespondentID = CommonUtils.GetStringBetween (response' "<a class=\"nameholder dotted\" href=\"/en/citizen/profile/"' "\">");  		ConsoleLog.WriteLine ("Detected position " + rateNum.ToString () + ": OfferId=" + sOfferId + "' PosRate=" + sPosRate + "' PosAmount=" + sPosAmount + "' CorrespondentID=" + sCorrespondentID);  		iOfferID = Convert.ToInt32 (sOfferId);  		dPosRate = Convert.ToDouble (sPosRate);  		dPosAmount = Convert.ToDouble (sPosAmount);  		iCorrespondentID = Convert.ToInt32 (sCorrespondentID);  		if (dPosAmount < 0.01) {  			ConsoleLog.WriteLine ("Position amount less then 0.01' getting next position");  			response = response.Substring (response.IndexOf ("submit_form_accept") + 10);  		}  		else  			break;  	}  	if (dPosRate > fMaxRate) {  		ConsoleLog.WriteLine ("Rate greater then max possible' waiting 10 sec...");  		System.Threading.Thread.Sleep (10000);  		continue;  	}  	//double dToBuy = Math.Min(Math.Truncate(curRemains / dPosRate)' dPosAmount);  	double dToBuy = Math.Min (curRemains / dPosRate - 0.01' dPosAmount);  	dToBuy = Math.Truncate (dToBuy * 100) / 100;  	ConsoleLog.WriteLine ("Buy " + dToBuy.ToString () + " currency");  	if (Bot.Bot.BuyMoney (iOfferID' dToBuy' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  		ConsoleLog.WriteLine ("Buy currency successfull");  	}  	else {  		ConsoleLog.WriteLine ("Buy currency fail");  	}  }  catch (System.Exception localE) {  	ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcConvertMoney,The following statement contains a magic number: try {  	ConsoleLog.WriteLine ("Convert money' try " + i.ToString ());  	string response;  	string URL;  	int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  	if (tmpRemains == -1)  		continue;  	curRemains = tmpRemains;  	if (curRemains < 0.1) {  		ConsoleLog.WriteLine ("Everything converted");  		break;  	}  	// Открываем страницу ставок ММ' получаем первую нормальную ставку и ее параметры  	ConsoleLog.WriteLine ("Loading rates MM page...");  	URL = "http://www.erepublik.com/en/exchange/listOffers?select_page=select&buy_currency_history_id=buy_currencies=" + iCurrencyBuyID.ToString () + "&sell_currency_history_id=sell_currencies=" + iCurrencySpendID.ToString () + "&account_type=citizen-&action_path=listOffers&page=page=1";  	//ConsoleLog.WriteLine("URL: " + URL);  	response = Bot.Bot.CustomRequest (URL);  	//ConsoleLog.WriteLine(response' "ConvertMoneyLog2.txt");  	if (!response.Contains ("form_amount_accept_")) {  		ConsoleLog.WriteLine ("Error rates MM page");  		continue;  	}  	int iOfferID = 0;  	double dPosRate = 0;  	double dPosAmount = 0;  	int iCorrespondentID = 0;  	for (int rateNum = 1; rateNum <= 10; rateNum++) {  		string sOfferId = CommonUtils.GetStringBetween (response' "\"form_amount_accept_"' "\"");  		string sPosRate = CommonUtils.GetStringBetween (response' "<span class=\"special\" id=\"exchange_value_amount_" + sOfferId + "\">"' "</span>");  		string sPosAmount = CommonUtils.GetStringBetween (response' "<span class=\"special\"  id=\"initial_amount_" + sOfferId + "\">"' "</span>");  		string sCorrespondentID = CommonUtils.GetStringBetween (response' "<a class=\"nameholder dotted\" href=\"/en/citizen/profile/"' "\">");  		ConsoleLog.WriteLine ("Detected position " + rateNum.ToString () + ": OfferId=" + sOfferId + "' PosRate=" + sPosRate + "' PosAmount=" + sPosAmount + "' CorrespondentID=" + sCorrespondentID);  		iOfferID = Convert.ToInt32 (sOfferId);  		dPosRate = Convert.ToDouble (sPosRate);  		dPosAmount = Convert.ToDouble (sPosAmount);  		iCorrespondentID = Convert.ToInt32 (sCorrespondentID);  		if (dPosAmount < 0.01) {  			ConsoleLog.WriteLine ("Position amount less then 0.01' getting next position");  			response = response.Substring (response.IndexOf ("submit_form_accept") + 10);  		}  		else  			break;  	}  	if (dPosRate > fMaxRate) {  		ConsoleLog.WriteLine ("Rate greater then max possible' waiting 10 sec...");  		System.Threading.Thread.Sleep (10000);  		continue;  	}  	//double dToBuy = Math.Min(Math.Truncate(curRemains / dPosRate)' dPosAmount);  	double dToBuy = Math.Min (curRemains / dPosRate - 0.01' dPosAmount);  	dToBuy = Math.Truncate (dToBuy * 100) / 100;  	ConsoleLog.WriteLine ("Buy " + dToBuy.ToString () + " currency");  	if (Bot.Bot.BuyMoney (iOfferID' dToBuy' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  		ConsoleLog.WriteLine ("Buy currency successfull");  	}  	else {  		ConsoleLog.WriteLine ("Buy currency fail");  	}  }  catch (System.Exception localE) {  	ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcConvertMoney,The following statement contains a magic number: try {  	ConsoleLog.WriteLine ("Convert money' try " + i.ToString ());  	string response;  	string URL;  	int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  	if (tmpRemains == -1)  		continue;  	curRemains = tmpRemains;  	if (curRemains < 0.1) {  		ConsoleLog.WriteLine ("Everything converted");  		break;  	}  	// Открываем страницу ставок ММ' получаем первую нормальную ставку и ее параметры  	ConsoleLog.WriteLine ("Loading rates MM page...");  	URL = "http://www.erepublik.com/en/exchange/listOffers?select_page=select&buy_currency_history_id=buy_currencies=" + iCurrencyBuyID.ToString () + "&sell_currency_history_id=sell_currencies=" + iCurrencySpendID.ToString () + "&account_type=citizen-&action_path=listOffers&page=page=1";  	//ConsoleLog.WriteLine("URL: " + URL);  	response = Bot.Bot.CustomRequest (URL);  	//ConsoleLog.WriteLine(response' "ConvertMoneyLog2.txt");  	if (!response.Contains ("form_amount_accept_")) {  		ConsoleLog.WriteLine ("Error rates MM page");  		continue;  	}  	int iOfferID = 0;  	double dPosRate = 0;  	double dPosAmount = 0;  	int iCorrespondentID = 0;  	for (int rateNum = 1; rateNum <= 10; rateNum++) {  		string sOfferId = CommonUtils.GetStringBetween (response' "\"form_amount_accept_"' "\"");  		string sPosRate = CommonUtils.GetStringBetween (response' "<span class=\"special\" id=\"exchange_value_amount_" + sOfferId + "\">"' "</span>");  		string sPosAmount = CommonUtils.GetStringBetween (response' "<span class=\"special\"  id=\"initial_amount_" + sOfferId + "\">"' "</span>");  		string sCorrespondentID = CommonUtils.GetStringBetween (response' "<a class=\"nameholder dotted\" href=\"/en/citizen/profile/"' "\">");  		ConsoleLog.WriteLine ("Detected position " + rateNum.ToString () + ": OfferId=" + sOfferId + "' PosRate=" + sPosRate + "' PosAmount=" + sPosAmount + "' CorrespondentID=" + sCorrespondentID);  		iOfferID = Convert.ToInt32 (sOfferId);  		dPosRate = Convert.ToDouble (sPosRate);  		dPosAmount = Convert.ToDouble (sPosAmount);  		iCorrespondentID = Convert.ToInt32 (sCorrespondentID);  		if (dPosAmount < 0.01) {  			ConsoleLog.WriteLine ("Position amount less then 0.01' getting next position");  			response = response.Substring (response.IndexOf ("submit_form_accept") + 10);  		}  		else  			break;  	}  	if (dPosRate > fMaxRate) {  		ConsoleLog.WriteLine ("Rate greater then max possible' waiting 10 sec...");  		System.Threading.Thread.Sleep (10000);  		continue;  	}  	//double dToBuy = Math.Min(Math.Truncate(curRemains / dPosRate)' dPosAmount);  	double dToBuy = Math.Min (curRemains / dPosRate - 0.01' dPosAmount);  	dToBuy = Math.Truncate (dToBuy * 100) / 100;  	ConsoleLog.WriteLine ("Buy " + dToBuy.ToString () + " currency");  	if (Bot.Bot.BuyMoney (iOfferID' dToBuy' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  		ConsoleLog.WriteLine ("Buy currency successfull");  	}  	else {  		ConsoleLog.WriteLine ("Buy currency fail");  	}  }  catch (System.Exception localE) {  	ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcConvertMoney,The following statement contains a magic number: try {  	ConsoleLog.WriteLine ("Convert money' try " + i.ToString ());  	string response;  	string URL;  	int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  	if (tmpRemains == -1)  		continue;  	curRemains = tmpRemains;  	if (curRemains < 0.1) {  		ConsoleLog.WriteLine ("Everything converted");  		break;  	}  	// Открываем страницу ставок ММ' получаем первую нормальную ставку и ее параметры  	ConsoleLog.WriteLine ("Loading rates MM page...");  	URL = "http://www.erepublik.com/en/exchange/listOffers?select_page=select&buy_currency_history_id=buy_currencies=" + iCurrencyBuyID.ToString () + "&sell_currency_history_id=sell_currencies=" + iCurrencySpendID.ToString () + "&account_type=citizen-&action_path=listOffers&page=page=1";  	//ConsoleLog.WriteLine("URL: " + URL);  	response = Bot.Bot.CustomRequest (URL);  	//ConsoleLog.WriteLine(response' "ConvertMoneyLog2.txt");  	if (!response.Contains ("form_amount_accept_")) {  		ConsoleLog.WriteLine ("Error rates MM page");  		continue;  	}  	int iOfferID = 0;  	double dPosRate = 0;  	double dPosAmount = 0;  	int iCorrespondentID = 0;  	for (int rateNum = 1; rateNum <= 10; rateNum++) {  		string sOfferId = CommonUtils.GetStringBetween (response' "\"form_amount_accept_"' "\"");  		string sPosRate = CommonUtils.GetStringBetween (response' "<span class=\"special\" id=\"exchange_value_amount_" + sOfferId + "\">"' "</span>");  		string sPosAmount = CommonUtils.GetStringBetween (response' "<span class=\"special\"  id=\"initial_amount_" + sOfferId + "\">"' "</span>");  		string sCorrespondentID = CommonUtils.GetStringBetween (response' "<a class=\"nameholder dotted\" href=\"/en/citizen/profile/"' "\">");  		ConsoleLog.WriteLine ("Detected position " + rateNum.ToString () + ": OfferId=" + sOfferId + "' PosRate=" + sPosRate + "' PosAmount=" + sPosAmount + "' CorrespondentID=" + sCorrespondentID);  		iOfferID = Convert.ToInt32 (sOfferId);  		dPosRate = Convert.ToDouble (sPosRate);  		dPosAmount = Convert.ToDouble (sPosAmount);  		iCorrespondentID = Convert.ToInt32 (sCorrespondentID);  		if (dPosAmount < 0.01) {  			ConsoleLog.WriteLine ("Position amount less then 0.01' getting next position");  			response = response.Substring (response.IndexOf ("submit_form_accept") + 10);  		}  		else  			break;  	}  	if (dPosRate > fMaxRate) {  		ConsoleLog.WriteLine ("Rate greater then max possible' waiting 10 sec...");  		System.Threading.Thread.Sleep (10000);  		continue;  	}  	//double dToBuy = Math.Min(Math.Truncate(curRemains / dPosRate)' dPosAmount);  	double dToBuy = Math.Min (curRemains / dPosRate - 0.01' dPosAmount);  	dToBuy = Math.Truncate (dToBuy * 100) / 100;  	ConsoleLog.WriteLine ("Buy " + dToBuy.ToString () + " currency");  	if (Bot.Bot.BuyMoney (iOfferID' dToBuy' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  		ConsoleLog.WriteLine ("Buy currency successfull");  	}  	else {  		ConsoleLog.WriteLine ("Buy currency fail");  	}  }  catch (System.Exception localE) {  	ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcConvertMoney,The following statement contains a magic number: try {  	ConsoleLog.WriteLine ("Convert money' try " + i.ToString ());  	string response;  	string URL;  	int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  	if (tmpRemains == -1)  		continue;  	curRemains = tmpRemains;  	if (curRemains < 0.1) {  		ConsoleLog.WriteLine ("Everything converted");  		break;  	}  	// Открываем страницу ставок ММ' получаем первую нормальную ставку и ее параметры  	ConsoleLog.WriteLine ("Loading rates MM page...");  	URL = "http://www.erepublik.com/en/exchange/listOffers?select_page=select&buy_currency_history_id=buy_currencies=" + iCurrencyBuyID.ToString () + "&sell_currency_history_id=sell_currencies=" + iCurrencySpendID.ToString () + "&account_type=citizen-&action_path=listOffers&page=page=1";  	//ConsoleLog.WriteLine("URL: " + URL);  	response = Bot.Bot.CustomRequest (URL);  	//ConsoleLog.WriteLine(response' "ConvertMoneyLog2.txt");  	if (!response.Contains ("form_amount_accept_")) {  		ConsoleLog.WriteLine ("Error rates MM page");  		continue;  	}  	int iOfferID = 0;  	double dPosRate = 0;  	double dPosAmount = 0;  	int iCorrespondentID = 0;  	for (int rateNum = 1; rateNum <= 10; rateNum++) {  		string sOfferId = CommonUtils.GetStringBetween (response' "\"form_amount_accept_"' "\"");  		string sPosRate = CommonUtils.GetStringBetween (response' "<span class=\"special\" id=\"exchange_value_amount_" + sOfferId + "\">"' "</span>");  		string sPosAmount = CommonUtils.GetStringBetween (response' "<span class=\"special\"  id=\"initial_amount_" + sOfferId + "\">"' "</span>");  		string sCorrespondentID = CommonUtils.GetStringBetween (response' "<a class=\"nameholder dotted\" href=\"/en/citizen/profile/"' "\">");  		ConsoleLog.WriteLine ("Detected position " + rateNum.ToString () + ": OfferId=" + sOfferId + "' PosRate=" + sPosRate + "' PosAmount=" + sPosAmount + "' CorrespondentID=" + sCorrespondentID);  		iOfferID = Convert.ToInt32 (sOfferId);  		dPosRate = Convert.ToDouble (sPosRate);  		dPosAmount = Convert.ToDouble (sPosAmount);  		iCorrespondentID = Convert.ToInt32 (sCorrespondentID);  		if (dPosAmount < 0.01) {  			ConsoleLog.WriteLine ("Position amount less then 0.01' getting next position");  			response = response.Substring (response.IndexOf ("submit_form_accept") + 10);  		}  		else  			break;  	}  	if (dPosRate > fMaxRate) {  		ConsoleLog.WriteLine ("Rate greater then max possible' waiting 10 sec...");  		System.Threading.Thread.Sleep (10000);  		continue;  	}  	//double dToBuy = Math.Min(Math.Truncate(curRemains / dPosRate)' dPosAmount);  	double dToBuy = Math.Min (curRemains / dPosRate - 0.01' dPosAmount);  	dToBuy = Math.Truncate (dToBuy * 100) / 100;  	ConsoleLog.WriteLine ("Buy " + dToBuy.ToString () + " currency");  	if (Bot.Bot.BuyMoney (iOfferID' dToBuy' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  		ConsoleLog.WriteLine ("Buy currency successfull");  	}  	else {  		ConsoleLog.WriteLine ("Buy currency fail");  	}  }  catch (System.Exception localE) {  	ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcConvertMoney,The following statement contains a magic number: try {  	ConsoleLog.WriteLine ("Convert money' try " + i.ToString ());  	string response;  	string URL;  	int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  	if (tmpRemains == -1)  		continue;  	curRemains = tmpRemains;  	if (curRemains < 0.1) {  		ConsoleLog.WriteLine ("Everything converted");  		break;  	}  	// Открываем страницу ставок ММ' получаем первую нормальную ставку и ее параметры  	ConsoleLog.WriteLine ("Loading rates MM page...");  	URL = "http://www.erepublik.com/en/exchange/listOffers?select_page=select&buy_currency_history_id=buy_currencies=" + iCurrencyBuyID.ToString () + "&sell_currency_history_id=sell_currencies=" + iCurrencySpendID.ToString () + "&account_type=citizen-&action_path=listOffers&page=page=1";  	//ConsoleLog.WriteLine("URL: " + URL);  	response = Bot.Bot.CustomRequest (URL);  	//ConsoleLog.WriteLine(response' "ConvertMoneyLog2.txt");  	if (!response.Contains ("form_amount_accept_")) {  		ConsoleLog.WriteLine ("Error rates MM page");  		continue;  	}  	int iOfferID = 0;  	double dPosRate = 0;  	double dPosAmount = 0;  	int iCorrespondentID = 0;  	for (int rateNum = 1; rateNum <= 10; rateNum++) {  		string sOfferId = CommonUtils.GetStringBetween (response' "\"form_amount_accept_"' "\"");  		string sPosRate = CommonUtils.GetStringBetween (response' "<span class=\"special\" id=\"exchange_value_amount_" + sOfferId + "\">"' "</span>");  		string sPosAmount = CommonUtils.GetStringBetween (response' "<span class=\"special\"  id=\"initial_amount_" + sOfferId + "\">"' "</span>");  		string sCorrespondentID = CommonUtils.GetStringBetween (response' "<a class=\"nameholder dotted\" href=\"/en/citizen/profile/"' "\">");  		ConsoleLog.WriteLine ("Detected position " + rateNum.ToString () + ": OfferId=" + sOfferId + "' PosRate=" + sPosRate + "' PosAmount=" + sPosAmount + "' CorrespondentID=" + sCorrespondentID);  		iOfferID = Convert.ToInt32 (sOfferId);  		dPosRate = Convert.ToDouble (sPosRate);  		dPosAmount = Convert.ToDouble (sPosAmount);  		iCorrespondentID = Convert.ToInt32 (sCorrespondentID);  		if (dPosAmount < 0.01) {  			ConsoleLog.WriteLine ("Position amount less then 0.01' getting next position");  			response = response.Substring (response.IndexOf ("submit_form_accept") + 10);  		}  		else  			break;  	}  	if (dPosRate > fMaxRate) {  		ConsoleLog.WriteLine ("Rate greater then max possible' waiting 10 sec...");  		System.Threading.Thread.Sleep (10000);  		continue;  	}  	//double dToBuy = Math.Min(Math.Truncate(curRemains / dPosRate)' dPosAmount);  	double dToBuy = Math.Min (curRemains / dPosRate - 0.01' dPosAmount);  	dToBuy = Math.Truncate (dToBuy * 100) / 100;  	ConsoleLog.WriteLine ("Buy " + dToBuy.ToString () + " currency");  	if (Bot.Bot.BuyMoney (iOfferID' dToBuy' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  		ConsoleLog.WriteLine ("Buy currency successfull");  	}  	else {  		ConsoleLog.WriteLine ("Buy currency fail");  	}  }  catch (System.Exception localE) {  	ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcConvertMoney,The following statement contains a magic number: try {  	ConsoleLog.WriteLine ("Convert money' try " + i.ToString ());  	string response;  	string URL;  	int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' iCurrencyBuyID);  	if (tmpRemains == -1)  		continue;  	curRemains = tmpRemains;  	if (curRemains < 0.1) {  		ConsoleLog.WriteLine ("Everything converted");  		break;  	}  	// Открываем страницу ставок ММ' получаем первую нормальную ставку и ее параметры  	ConsoleLog.WriteLine ("Loading rates MM page...");  	URL = "http://www.erepublik.com/en/exchange/listOffers?select_page=select&buy_currency_history_id=buy_currencies=" + iCurrencyBuyID.ToString () + "&sell_currency_history_id=sell_currencies=" + iCurrencySpendID.ToString () + "&account_type=citizen-&action_path=listOffers&page=page=1";  	//ConsoleLog.WriteLine("URL: " + URL);  	response = Bot.Bot.CustomRequest (URL);  	//ConsoleLog.WriteLine(response' "ConvertMoneyLog2.txt");  	if (!response.Contains ("form_amount_accept_")) {  		ConsoleLog.WriteLine ("Error rates MM page");  		continue;  	}  	int iOfferID = 0;  	double dPosRate = 0;  	double dPosAmount = 0;  	int iCorrespondentID = 0;  	for (int rateNum = 1; rateNum <= 10; rateNum++) {  		string sOfferId = CommonUtils.GetStringBetween (response' "\"form_amount_accept_"' "\"");  		string sPosRate = CommonUtils.GetStringBetween (response' "<span class=\"special\" id=\"exchange_value_amount_" + sOfferId + "\">"' "</span>");  		string sPosAmount = CommonUtils.GetStringBetween (response' "<span class=\"special\"  id=\"initial_amount_" + sOfferId + "\">"' "</span>");  		string sCorrespondentID = CommonUtils.GetStringBetween (response' "<a class=\"nameholder dotted\" href=\"/en/citizen/profile/"' "\">");  		ConsoleLog.WriteLine ("Detected position " + rateNum.ToString () + ": OfferId=" + sOfferId + "' PosRate=" + sPosRate + "' PosAmount=" + sPosAmount + "' CorrespondentID=" + sCorrespondentID);  		iOfferID = Convert.ToInt32 (sOfferId);  		dPosRate = Convert.ToDouble (sPosRate);  		dPosAmount = Convert.ToDouble (sPosAmount);  		iCorrespondentID = Convert.ToInt32 (sCorrespondentID);  		if (dPosAmount < 0.01) {  			ConsoleLog.WriteLine ("Position amount less then 0.01' getting next position");  			response = response.Substring (response.IndexOf ("submit_form_accept") + 10);  		}  		else  			break;  	}  	if (dPosRate > fMaxRate) {  		ConsoleLog.WriteLine ("Rate greater then max possible' waiting 10 sec...");  		System.Threading.Thread.Sleep (10000);  		continue;  	}  	//double dToBuy = Math.Min(Math.Truncate(curRemains / dPosRate)' dPosAmount);  	double dToBuy = Math.Min (curRemains / dPosRate - 0.01' dPosAmount);  	dToBuy = Math.Truncate (dToBuy * 100) / 100;  	ConsoleLog.WriteLine ("Buy " + dToBuy.ToString () + " currency");  	if (Bot.Bot.BuyMoney (iOfferID' dToBuy' iCurrencySpendID' iCorrespondentID' iCurrencyBuyID)) {  		ConsoleLog.WriteLine ("Buy currency successfull");  	}  	else {  		ConsoleLog.WriteLine ("Buy currency fail");  	}  }  catch (System.Exception localE) {  	ConsoleLog.WriteLine ("Local convert exception: " + localE.Message);  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcConvertMoney,The following statement contains a magic number: if (curRemains < 0.1) {  	ConsoleLog.WriteLine ("Everything converted");  	break;  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcConvertMoney,The following statement contains a magic number: for (int rateNum = 1; rateNum <= 10; rateNum++) {  	string sOfferId = CommonUtils.GetStringBetween (response' "\"form_amount_accept_"' "\"");  	string sPosRate = CommonUtils.GetStringBetween (response' "<span class=\"special\" id=\"exchange_value_amount_" + sOfferId + "\">"' "</span>");  	string sPosAmount = CommonUtils.GetStringBetween (response' "<span class=\"special\"  id=\"initial_amount_" + sOfferId + "\">"' "</span>");  	string sCorrespondentID = CommonUtils.GetStringBetween (response' "<a class=\"nameholder dotted\" href=\"/en/citizen/profile/"' "\">");  	ConsoleLog.WriteLine ("Detected position " + rateNum.ToString () + ": OfferId=" + sOfferId + "' PosRate=" + sPosRate + "' PosAmount=" + sPosAmount + "' CorrespondentID=" + sCorrespondentID);  	iOfferID = Convert.ToInt32 (sOfferId);  	dPosRate = Convert.ToDouble (sPosRate);  	dPosAmount = Convert.ToDouble (sPosAmount);  	iCorrespondentID = Convert.ToInt32 (sCorrespondentID);  	if (dPosAmount < 0.01) {  		ConsoleLog.WriteLine ("Position amount less then 0.01' getting next position");  		response = response.Substring (response.IndexOf ("submit_form_accept") + 10);  	}  	else  		break;  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcConvertMoney,The following statement contains a magic number: for (int rateNum = 1; rateNum <= 10; rateNum++) {  	string sOfferId = CommonUtils.GetStringBetween (response' "\"form_amount_accept_"' "\"");  	string sPosRate = CommonUtils.GetStringBetween (response' "<span class=\"special\" id=\"exchange_value_amount_" + sOfferId + "\">"' "</span>");  	string sPosAmount = CommonUtils.GetStringBetween (response' "<span class=\"special\"  id=\"initial_amount_" + sOfferId + "\">"' "</span>");  	string sCorrespondentID = CommonUtils.GetStringBetween (response' "<a class=\"nameholder dotted\" href=\"/en/citizen/profile/"' "\">");  	ConsoleLog.WriteLine ("Detected position " + rateNum.ToString () + ": OfferId=" + sOfferId + "' PosRate=" + sPosRate + "' PosAmount=" + sPosAmount + "' CorrespondentID=" + sCorrespondentID);  	iOfferID = Convert.ToInt32 (sOfferId);  	dPosRate = Convert.ToDouble (sPosRate);  	dPosAmount = Convert.ToDouble (sPosAmount);  	iCorrespondentID = Convert.ToInt32 (sCorrespondentID);  	if (dPosAmount < 0.01) {  		ConsoleLog.WriteLine ("Position amount less then 0.01' getting next position");  		response = response.Substring (response.IndexOf ("submit_form_accept") + 10);  	}  	else  		break;  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcConvertMoney,The following statement contains a magic number: for (int rateNum = 1; rateNum <= 10; rateNum++) {  	string sOfferId = CommonUtils.GetStringBetween (response' "\"form_amount_accept_"' "\"");  	string sPosRate = CommonUtils.GetStringBetween (response' "<span class=\"special\" id=\"exchange_value_amount_" + sOfferId + "\">"' "</span>");  	string sPosAmount = CommonUtils.GetStringBetween (response' "<span class=\"special\"  id=\"initial_amount_" + sOfferId + "\">"' "</span>");  	string sCorrespondentID = CommonUtils.GetStringBetween (response' "<a class=\"nameholder dotted\" href=\"/en/citizen/profile/"' "\">");  	ConsoleLog.WriteLine ("Detected position " + rateNum.ToString () + ": OfferId=" + sOfferId + "' PosRate=" + sPosRate + "' PosAmount=" + sPosAmount + "' CorrespondentID=" + sCorrespondentID);  	iOfferID = Convert.ToInt32 (sOfferId);  	dPosRate = Convert.ToDouble (sPosRate);  	dPosAmount = Convert.ToDouble (sPosAmount);  	iCorrespondentID = Convert.ToInt32 (sCorrespondentID);  	if (dPosAmount < 0.01) {  		ConsoleLog.WriteLine ("Position amount less then 0.01' getting next position");  		response = response.Substring (response.IndexOf ("submit_form_accept") + 10);  	}  	else  		break;  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcConvertMoney,The following statement contains a magic number: if (dPosAmount < 0.01) {  	ConsoleLog.WriteLine ("Position amount less then 0.01' getting next position");  	response = response.Substring (response.IndexOf ("submit_form_accept") + 10);  }  else  	break;  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcConvertMoney,The following statement contains a magic number: if (dPosAmount < 0.01) {  	ConsoleLog.WriteLine ("Position amount less then 0.01' getting next position");  	response = response.Substring (response.IndexOf ("submit_form_accept") + 10);  }  else  	break;  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcConvertMoney,The following statement contains a magic number: response = response.Substring (response.IndexOf ("submit_form_accept") + 10);  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcConvertMoney,The following statement contains a magic number: if (dPosRate > fMaxRate) {  	ConsoleLog.WriteLine ("Rate greater then max possible' waiting 10 sec...");  	System.Threading.Thread.Sleep (10000);  	continue;  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcConvertMoney,The following statement contains a magic number: System.Threading.Thread.Sleep (10000);  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcConvertMoney,The following statement contains a magic number: dToBuy = Math.Truncate (dToBuy * 100) / 100;  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcConvertMoney,The following statement contains a magic number: dToBuy = Math.Truncate (dToBuy * 100) / 100;  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcConvertMoney,The following statement contains a magic number: if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcConvertMoney,The following statement contains a magic number: botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,WorkerCollectMoneyToCountry,The following statement contains a magic number: if (args.Length != 6) {  	ConsoleLog.WriteLine ("Usage: collectmoneytocountry group dest_country curr_for_donate_id exp_from exp_to");  	return;  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,WorkerCollectMoneyToCountry,The following statement contains a magic number: sDestinationCountry = args [2];  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,WorkerCollectMoneyToCountry,The following statement contains a magic number: int.TryParse (args [3]' out iCurrencySpendID);  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,WorkerCollectMoneyToCountry,The following statement contains a magic number: int.TryParse (args [4]' out iExpFrom);  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,WorkerCollectMoneyToCountry,The following statement contains a magic number: int.TryParse (args [5]' out iExpTo);  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,WorkerCollectMoneyToCountry,The following statement contains a magic number: if (iExpTo == 0)  	iExpTo = 99999;  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,WorkerCollectMoneyToCountry,The following statement contains a magic number: iExpTo = 99999;  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,WorkerCollectMoneyToCountry,The following statement contains a magic number: lock (Globals.DBLocker) {  	Globals.Database.Reset ();  	if (group.ToLower () != "all")  		Globals.Database.Where ("group"' group);  	Globals.Database.Where ("banned"' 0);  	Globals.Database.Where ("happiness"' 0);  	if (iCurrencySpendID == 62)  		Globals.Database.Where ("(gold > 0)");  	Globals.Database.Where ("(experience >= " + iExpFrom.ToString () + ")");  	Globals.Database.Where ("(experience <= " + iExpTo.ToString () + ")");  	if (!String.IsNullOrEmpty (Globals.addWhere))  		Globals.Database.Where (Globals.addWhere);  	bots = Globals.Database.Select ("bots");  	Globals.Database.Reset ();  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,WorkerCollectMoneyToCountry,The following statement contains a magic number: if (iCurrencySpendID == 62)  	Globals.Database.Where ("(gold > 0)");  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcCollectmoneyToCountry,The following statement contains a magic number: if (loginResult == ManagedCitizen.LoginResult.Success) {  	ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	int curRemains = 1;  	for (int i = 1; i <= 20; i++) {  		try {  			ConsoleLog.WriteLine ("Collect money to country' try " + i.ToString ());  			int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' 0);  			if (tmpRemains == -1)  				continue;  			curRemains = tmpRemains;  			if (curRemains < 0.1) {  				ConsoleLog.WriteLine ("Everything collected");  				break;  			}  			if (Bot.Bot.DonateMoneyToCountry (sDestinationCountry' curRemains - 0.01' iCurrencySpendID)) {  				ConsoleLog.WriteLine ("Collect money to country successfull");  			}  			else {  				ConsoleLog.WriteLine ("Collect money to country fail");  			}  		}  		catch (System.Exception e1) {  			ConsoleLog.WriteLine ("Collect money to country - error" + e1.ToString ());  		}  		Bot.GetInfoFromCommonResponse (true);  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		// Logout  		Bot.Bot.Logout ();  	}  }  else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcCollectmoneyToCountry,The following statement contains a magic number: if (loginResult == ManagedCitizen.LoginResult.Success) {  	ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	int curRemains = 1;  	for (int i = 1; i <= 20; i++) {  		try {  			ConsoleLog.WriteLine ("Collect money to country' try " + i.ToString ());  			int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' 0);  			if (tmpRemains == -1)  				continue;  			curRemains = tmpRemains;  			if (curRemains < 0.1) {  				ConsoleLog.WriteLine ("Everything collected");  				break;  			}  			if (Bot.Bot.DonateMoneyToCountry (sDestinationCountry' curRemains - 0.01' iCurrencySpendID)) {  				ConsoleLog.WriteLine ("Collect money to country successfull");  			}  			else {  				ConsoleLog.WriteLine ("Collect money to country fail");  			}  		}  		catch (System.Exception e1) {  			ConsoleLog.WriteLine ("Collect money to country - error" + e1.ToString ());  		}  		Bot.GetInfoFromCommonResponse (true);  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		// Logout  		Bot.Bot.Logout ();  	}  }  else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcCollectmoneyToCountry,The following statement contains a magic number: if (loginResult == ManagedCitizen.LoginResult.Success) {  	ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	int curRemains = 1;  	for (int i = 1; i <= 20; i++) {  		try {  			ConsoleLog.WriteLine ("Collect money to country' try " + i.ToString ());  			int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' 0);  			if (tmpRemains == -1)  				continue;  			curRemains = tmpRemains;  			if (curRemains < 0.1) {  				ConsoleLog.WriteLine ("Everything collected");  				break;  			}  			if (Bot.Bot.DonateMoneyToCountry (sDestinationCountry' curRemains - 0.01' iCurrencySpendID)) {  				ConsoleLog.WriteLine ("Collect money to country successfull");  			}  			else {  				ConsoleLog.WriteLine ("Collect money to country fail");  			}  		}  		catch (System.Exception e1) {  			ConsoleLog.WriteLine ("Collect money to country - error" + e1.ToString ());  		}  		Bot.GetInfoFromCommonResponse (true);  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		// Logout  		Bot.Bot.Logout ();  	}  }  else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcCollectmoneyToCountry,The following statement contains a magic number: if (loginResult == ManagedCitizen.LoginResult.Success) {  	ConsoleLog.WriteLine ("Logged in - " + botinfo ["login"]);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	int curRemains = 1;  	for (int i = 1; i <= 20; i++) {  		try {  			ConsoleLog.WriteLine ("Collect money to country' try " + i.ToString ());  			int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' 0);  			if (tmpRemains == -1)  				continue;  			curRemains = tmpRemains;  			if (curRemains < 0.1) {  				ConsoleLog.WriteLine ("Everything collected");  				break;  			}  			if (Bot.Bot.DonateMoneyToCountry (sDestinationCountry' curRemains - 0.01' iCurrencySpendID)) {  				ConsoleLog.WriteLine ("Collect money to country successfull");  			}  			else {  				ConsoleLog.WriteLine ("Collect money to country fail");  			}  		}  		catch (System.Exception e1) {  			ConsoleLog.WriteLine ("Collect money to country - error" + e1.ToString ());  		}  		Bot.GetInfoFromCommonResponse (true);  		botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  		// Logout  		Bot.Bot.Logout ();  	}  }  else if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcCollectmoneyToCountry,The following statement contains a magic number: for (int i = 1; i <= 20; i++) {  	try {  		ConsoleLog.WriteLine ("Collect money to country' try " + i.ToString ());  		int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' 0);  		if (tmpRemains == -1)  			continue;  		curRemains = tmpRemains;  		if (curRemains < 0.1) {  			ConsoleLog.WriteLine ("Everything collected");  			break;  		}  		if (Bot.Bot.DonateMoneyToCountry (sDestinationCountry' curRemains - 0.01' iCurrencySpendID)) {  			ConsoleLog.WriteLine ("Collect money to country successfull");  		}  		else {  			ConsoleLog.WriteLine ("Collect money to country fail");  		}  	}  	catch (System.Exception e1) {  		ConsoleLog.WriteLine ("Collect money to country - error" + e1.ToString ());  	}  	Bot.GetInfoFromCommonResponse (true);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	// Logout  	Bot.Bot.Logout ();  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcCollectmoneyToCountry,The following statement contains a magic number: for (int i = 1; i <= 20; i++) {  	try {  		ConsoleLog.WriteLine ("Collect money to country' try " + i.ToString ());  		int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' 0);  		if (tmpRemains == -1)  			continue;  		curRemains = tmpRemains;  		if (curRemains < 0.1) {  			ConsoleLog.WriteLine ("Everything collected");  			break;  		}  		if (Bot.Bot.DonateMoneyToCountry (sDestinationCountry' curRemains - 0.01' iCurrencySpendID)) {  			ConsoleLog.WriteLine ("Collect money to country successfull");  		}  		else {  			ConsoleLog.WriteLine ("Collect money to country fail");  		}  	}  	catch (System.Exception e1) {  		ConsoleLog.WriteLine ("Collect money to country - error" + e1.ToString ());  	}  	Bot.GetInfoFromCommonResponse (true);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	// Logout  	Bot.Bot.Logout ();  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcCollectmoneyToCountry,The following statement contains a magic number: for (int i = 1; i <= 20; i++) {  	try {  		ConsoleLog.WriteLine ("Collect money to country' try " + i.ToString ());  		int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' 0);  		if (tmpRemains == -1)  			continue;  		curRemains = tmpRemains;  		if (curRemains < 0.1) {  			ConsoleLog.WriteLine ("Everything collected");  			break;  		}  		if (Bot.Bot.DonateMoneyToCountry (sDestinationCountry' curRemains - 0.01' iCurrencySpendID)) {  			ConsoleLog.WriteLine ("Collect money to country successfull");  		}  		else {  			ConsoleLog.WriteLine ("Collect money to country fail");  		}  	}  	catch (System.Exception e1) {  		ConsoleLog.WriteLine ("Collect money to country - error" + e1.ToString ());  	}  	Bot.GetInfoFromCommonResponse (true);  	botinfo = Utils.TryToUpdateDbWithBasicInfo (botinfo' Bot);  	// Logout  	Bot.Bot.Logout ();  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcCollectmoneyToCountry,The following statement contains a magic number: try {  	ConsoleLog.WriteLine ("Collect money to country' try " + i.ToString ());  	int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' 0);  	if (tmpRemains == -1)  		continue;  	curRemains = tmpRemains;  	if (curRemains < 0.1) {  		ConsoleLog.WriteLine ("Everything collected");  		break;  	}  	if (Bot.Bot.DonateMoneyToCountry (sDestinationCountry' curRemains - 0.01' iCurrencySpendID)) {  		ConsoleLog.WriteLine ("Collect money to country successfull");  	}  	else {  		ConsoleLog.WriteLine ("Collect money to country fail");  	}  }  catch (System.Exception e1) {  	ConsoleLog.WriteLine ("Collect money to country - error" + e1.ToString ());  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcCollectmoneyToCountry,The following statement contains a magic number: try {  	ConsoleLog.WriteLine ("Collect money to country' try " + i.ToString ());  	int tmpRemains = GetCurrencyAmount (Bot' iCurrencySpendID' 0);  	if (tmpRemains == -1)  		continue;  	curRemains = tmpRemains;  	if (curRemains < 0.1) {  		ConsoleLog.WriteLine ("Everything collected");  		break;  	}  	if (Bot.Bot.DonateMoneyToCountry (sDestinationCountry' curRemains - 0.01' iCurrencySpendID)) {  		ConsoleLog.WriteLine ("Collect money to country successfull");  	}  	else {  		ConsoleLog.WriteLine ("Collect money to country fail");  	}  }  catch (System.Exception e1) {  	ConsoleLog.WriteLine ("Collect money to country - error" + e1.ToString ());  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcCollectmoneyToCountry,The following statement contains a magic number: if (curRemains < 0.1) {  	ConsoleLog.WriteLine ("Everything collected");  	break;  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcCollectmoneyToCountry,The following statement contains a magic number: if (Bot.Bot.DonateMoneyToCountry (sDestinationCountry' curRemains - 0.01' iCurrencySpendID)) {  	ConsoleLog.WriteLine ("Collect money to country successfull");  }  else {  	ConsoleLog.WriteLine ("Collect money to country fail");  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcCollectmoneyToCountry,The following statement contains a magic number: if ((loginResult == ManagedCitizen.LoginResult.Banned) || (loginResult == ManagedCitizen.LoginResult.Banned2)) {  	botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  	Utils.UpdateDbWithCustomBotInfo (botinfo' "banned");  }  else {  	//ConsoleLog.WriteLine(Bot.Bot.GetLastResponse()' "LoginLog.txt");  	ConsoleLog.WriteLine (botinfo ["login"].ToString () + ": Possibly dead' see LoginLog.txt");  }  
Magic Number,Engine,MoneyProcessor,C:\repos\sasha237_NorthCitadel\Engine\MoneyProcessor.cs,BotProcCollectmoneyToCountry,The following statement contains a magic number: botinfo ["banned"] = (loginResult == ManagedCitizen.LoginResult.Banned) ? 1 : 2;  
Magic Number,Engine,RegBots,C:\repos\sasha237_NorthCitadel\Engine\RegBots.cs,Worker,The following statement contains a magic number: if (args.Length < 2) {  	ConsoleLog.WriteLine ("regbots/regactbots reg_type(gmail|domain|maillist) ...");  	return;  }  
Magic Number,Engine,RegBots,C:\repos\sasha237_NorthCitadel\Engine\RegBots.cs,Worker,The following statement contains a magic number: if (!activate && args.Length != 10) {  	ConsoleLog.WriteLine ("regbots reg_type(gmail|domain|maillist) " + errorHelp + " count_bots count_threads country_id region_id group_name nicknames(manual|dictionary|web) delay");  	return;  }  
Magic Number,Engine,RegBots,C:\repos\sasha237_NorthCitadel\Engine\RegBots.cs,Worker,The following statement contains a magic number: if (activate && args.Length != 13) {  	ConsoleLog.WriteLine ("regactbots reg_type(gmail|domain) " + errorHelp + " count_bots count_threads country_id region_id group_name nicknames(manual|dictionary|web) delay pop_server mail_login mail_password");  	return;  }  
Magic Number,Engine,RegBots,C:\repos\sasha237_NorthCitadel\Engine\RegBots.cs,Worker,The following statement contains a magic number: mail_parameter = args [2];  
Magic Number,Engine,RegBots,C:\repos\sasha237_NorthCitadel\Engine\RegBots.cs,Worker,The following statement contains a magic number: Needed = int.Parse (args [3]);  
Magic Number,Engine,RegBots,C:\repos\sasha237_NorthCitadel\Engine\RegBots.cs,Worker,The following statement contains a magic number: country = int.Parse (args [5]);  
Magic Number,Engine,RegBots,C:\repos\sasha237_NorthCitadel\Engine\RegBots.cs,Worker,The following statement contains a magic number: region = int.Parse (args [6]);  
Magic Number,Engine,RegBots,C:\repos\sasha237_NorthCitadel\Engine\RegBots.cs,Worker,The following statement contains a magic number: m_sGroup = args [7];  
Magic Number,Engine,RegBots,C:\repos\sasha237_NorthCitadel\Engine\RegBots.cs,Worker,The following statement contains a magic number: nameType = args [8];  
Magic Number,Engine,RegBots,C:\repos\sasha237_NorthCitadel\Engine\RegBots.cs,Worker,The following statement contains a magic number: delay = int.Parse (args [9]);  
Magic Number,Engine,RegBots,C:\repos\sasha237_NorthCitadel\Engine\RegBots.cs,Worker,The following statement contains a magic number: if (activate) {  	Globals.threadCount = 1;  	popServer = args [10];  	mailLogin = args [11];  	mailPassword = args [12];  }  
Magic Number,Engine,RegBots,C:\repos\sasha237_NorthCitadel\Engine\RegBots.cs,Worker,The following statement contains a magic number: if (activate) {  	Globals.threadCount = 1;  	popServer = args [10];  	mailLogin = args [11];  	mailPassword = args [12];  }  
Magic Number,Engine,RegBots,C:\repos\sasha237_NorthCitadel\Engine\RegBots.cs,Worker,The following statement contains a magic number: if (activate) {  	Globals.threadCount = 1;  	popServer = args [10];  	mailLogin = args [11];  	mailPassword = args [12];  }  
Magic Number,Engine,RegBots,C:\repos\sasha237_NorthCitadel\Engine\RegBots.cs,Worker,The following statement contains a magic number: popServer = args [10];  
Magic Number,Engine,RegBots,C:\repos\sasha237_NorthCitadel\Engine\RegBots.cs,Worker,The following statement contains a magic number: mailLogin = args [11];  
Magic Number,Engine,RegBots,C:\repos\sasha237_NorthCitadel\Engine\RegBots.cs,Worker,The following statement contains a magic number: mailPassword = args [12];  
Magic Number,Engine,RegBots,C:\repos\sasha237_NorthCitadel\Engine\RegBots.cs,Worker,The following statement contains a magic number: for (int c = 0; c < threadCount; c++) {  	System.Threading.Thread thread = new System.Threading.Thread (RegisterProc);  	thread.Start ();  	System.Threading.Thread.Sleep (5000);  }  
Magic Number,Engine,RegBots,C:\repos\sasha237_NorthCitadel\Engine\RegBots.cs,Worker,The following statement contains a magic number: System.Threading.Thread.Sleep (5000);  
Magic Number,Engine,RegBots,C:\repos\sasha237_NorthCitadel\Engine\RegBots.cs,Worker,The following statement contains a magic number: while (true) {  	System.Threading.Thread.Sleep (1000);  	//ConsoleLog.WriteLine("Type 'quit' to exit");  	//if(Console.ReadLine()=="quit")  	//System.Diagnostics.Process.GetCurrentProcess().Kill();  }  
Magic Number,Engine,RegBots,C:\repos\sasha237_NorthCitadel\Engine\RegBots.cs,Worker,The following statement contains a magic number: System.Threading.Thread.Sleep (1000);  
Magic Number,Engine,RegBots,C:\repos\sasha237_NorthCitadel\Engine\RegBots.cs,RegisterProc,The following statement contains a magic number: while (true) {  	string NickName = "";  	if (nameType == NameType.Manual) {  		lock (lockable) {  			Console.WriteLine ("Enter the name for a new bot: ");  			NickName = Console.ReadLine ();  		}  	}  	else  		NickName = generator.GenerateNick ();  	string Password = generator.GeneratePassword ();  	string Mail = "";  	if (regType == RegType.GMail)  		Mail = generator.GenerateGMail (mail_parameter);  	if (regType == RegType.Domain)  		Mail = generator.GenerateDomain (NickName' mail_parameter);  	if (regType == RegType.MailList)  		Mail = generator.GenerateMailList (mail_parameter);  	ConsoleLog.WriteLine ("Mail: " + Mail);  	RegResult regResult = RegResult.UnknownFail;  	try {  		regResult = RegisterBot (NickName' Password' Mail' 192' out Response);  	}  	catch (Exception e) {  		ConsoleLog.WriteLine ("Exception! " + e.Message);  	}  	;  	if (regResult == RegResult.Success) {  		ConsoleLog.WriteLine (count.ToString () + ": " + NickName + " ready");  		if (regType == RegType.MailList) {  			generator.FixBoxReg (Mail);  		}  		if (activate) {  			try {  				ActivateMail.Worker (new string[] {  					"activatemail"'  					popServer'  					mailLogin'  					mailPassword  				});  			}  			catch (Exception e) {  				ConsoleLog.WriteLine ("Activation failed. Error: " + e.Message);  			}  		}  		WriteToDB (NickName' Password' Mail);  		if (delay > 0)  			System.Threading.Thread.Sleep (delay * 1000);  	}  	else {  		ConsoleLog.WriteLine (count.ToString () + ": " + NickName + " registration failed. " + regResult.ToString ());  		//ConsoleLog.WriteLine(count.ToString() + ": " + NickName + " registration failed"' "RegisterLog.txt");  		//ConsoleLog.WriteLine(Response' "RegisterLog.txt");  		if ((regResult == RegResult.EmailExist) && (regType == RegType.MailList)) {  			generator.FixBoxReg (Mail);  		}  	}  }  
Magic Number,Engine,RegBots,C:\repos\sasha237_NorthCitadel\Engine\RegBots.cs,RegisterProc,The following statement contains a magic number: while (true) {  	string NickName = "";  	if (nameType == NameType.Manual) {  		lock (lockable) {  			Console.WriteLine ("Enter the name for a new bot: ");  			NickName = Console.ReadLine ();  		}  	}  	else  		NickName = generator.GenerateNick ();  	string Password = generator.GeneratePassword ();  	string Mail = "";  	if (regType == RegType.GMail)  		Mail = generator.GenerateGMail (mail_parameter);  	if (regType == RegType.Domain)  		Mail = generator.GenerateDomain (NickName' mail_parameter);  	if (regType == RegType.MailList)  		Mail = generator.GenerateMailList (mail_parameter);  	ConsoleLog.WriteLine ("Mail: " + Mail);  	RegResult regResult = RegResult.UnknownFail;  	try {  		regResult = RegisterBot (NickName' Password' Mail' 192' out Response);  	}  	catch (Exception e) {  		ConsoleLog.WriteLine ("Exception! " + e.Message);  	}  	;  	if (regResult == RegResult.Success) {  		ConsoleLog.WriteLine (count.ToString () + ": " + NickName + " ready");  		if (regType == RegType.MailList) {  			generator.FixBoxReg (Mail);  		}  		if (activate) {  			try {  				ActivateMail.Worker (new string[] {  					"activatemail"'  					popServer'  					mailLogin'  					mailPassword  				});  			}  			catch (Exception e) {  				ConsoleLog.WriteLine ("Activation failed. Error: " + e.Message);  			}  		}  		WriteToDB (NickName' Password' Mail);  		if (delay > 0)  			System.Threading.Thread.Sleep (delay * 1000);  	}  	else {  		ConsoleLog.WriteLine (count.ToString () + ": " + NickName + " registration failed. " + regResult.ToString ());  		//ConsoleLog.WriteLine(count.ToString() + ": " + NickName + " registration failed"' "RegisterLog.txt");  		//ConsoleLog.WriteLine(Response' "RegisterLog.txt");  		if ((regResult == RegResult.EmailExist) && (regType == RegType.MailList)) {  			generator.FixBoxReg (Mail);  		}  	}  }  
Magic Number,Engine,RegBots,C:\repos\sasha237_NorthCitadel\Engine\RegBots.cs,RegisterProc,The following statement contains a magic number: try {  	regResult = RegisterBot (NickName' Password' Mail' 192' out Response);  }  catch (Exception e) {  	ConsoleLog.WriteLine ("Exception! " + e.Message);  }  
Magic Number,Engine,RegBots,C:\repos\sasha237_NorthCitadel\Engine\RegBots.cs,RegisterProc,The following statement contains a magic number: regResult = RegisterBot (NickName' Password' Mail' 192' out Response);  
Magic Number,Engine,RegBots,C:\repos\sasha237_NorthCitadel\Engine\RegBots.cs,RegisterProc,The following statement contains a magic number: if (regResult == RegResult.Success) {  	ConsoleLog.WriteLine (count.ToString () + ": " + NickName + " ready");  	if (regType == RegType.MailList) {  		generator.FixBoxReg (Mail);  	}  	if (activate) {  		try {  			ActivateMail.Worker (new string[] {  				"activatemail"'  				popServer'  				mailLogin'  				mailPassword  			});  		}  		catch (Exception e) {  			ConsoleLog.WriteLine ("Activation failed. Error: " + e.Message);  		}  	}  	WriteToDB (NickName' Password' Mail);  	if (delay > 0)  		System.Threading.Thread.Sleep (delay * 1000);  }  else {  	ConsoleLog.WriteLine (count.ToString () + ": " + NickName + " registration failed. " + regResult.ToString ());  	//ConsoleLog.WriteLine(count.ToString() + ": " + NickName + " registration failed"' "RegisterLog.txt");  	//ConsoleLog.WriteLine(Response' "RegisterLog.txt");  	if ((regResult == RegResult.EmailExist) && (regType == RegType.MailList)) {  		generator.FixBoxReg (Mail);  	}  }  
Magic Number,Engine,RegBots,C:\repos\sasha237_NorthCitadel\Engine\RegBots.cs,RegisterProc,The following statement contains a magic number: if (delay > 0)  	System.Threading.Thread.Sleep (delay * 1000);  
Magic Number,Engine,RegBots,C:\repos\sasha237_NorthCitadel\Engine\RegBots.cs,RegisterProc,The following statement contains a magic number: System.Threading.Thread.Sleep (delay * 1000);  
Magic Number,Engine,RegBots,C:\repos\sasha237_NorthCitadel\Engine\RegBots.cs,RegisterBot,The following statement contains a magic number: for (int attempt = 0; attempt < 3; attempt++) {  	captcha = CaptchaProvider.GetResolvedCaptcha ();  	PostData = "_token=" + Token + "&recaptcha_challenge_field=" + captcha.ChallengeID + "&recaptcha_response_field=" + captcha.CaptchaText;  	Response = client.UploadString ("http://www.erepublik.com/ajax_captcha"' PostData);  	if (Response.Contains ("success")) {  		ok = true;  		break;  	}  }  
Magic Number,Engine,RegBots,C:\repos\sasha237_NorthCitadel\Engine\RegBots.cs,RegisterBot,The following statement contains a magic number: return RegisterBot (NickName' Password' Nationality' EMail' m_Random.Next (1' 29)' m_Random.Next (1' 13)' m_Random.Next (1970' 1995)' (m_Random.Next (0' 2) > 0)' out Response);  
Magic Number,Engine,RegBots,C:\repos\sasha237_NorthCitadel\Engine\RegBots.cs,RegisterBot,The following statement contains a magic number: return RegisterBot (NickName' Password' Nationality' EMail' m_Random.Next (1' 29)' m_Random.Next (1' 13)' m_Random.Next (1970' 1995)' (m_Random.Next (0' 2) > 0)' out Response);  
Magic Number,Engine,RegBots,C:\repos\sasha237_NorthCitadel\Engine\RegBots.cs,RegisterBot,The following statement contains a magic number: return RegisterBot (NickName' Password' Nationality' EMail' m_Random.Next (1' 29)' m_Random.Next (1' 13)' m_Random.Next (1970' 1995)' (m_Random.Next (0' 2) > 0)' out Response);  
Magic Number,Engine,RegBots,C:\repos\sasha237_NorthCitadel\Engine\RegBots.cs,RegisterBot,The following statement contains a magic number: return RegisterBot (NickName' Password' Nationality' EMail' m_Random.Next (1' 29)' m_Random.Next (1' 13)' m_Random.Next (1970' 1995)' (m_Random.Next (0' 2) > 0)' out Response);  
Magic Number,Engine,RegBots,C:\repos\sasha237_NorthCitadel\Engine\RegBots.cs,RegisterBot,The following statement contains a magic number: return RegisterBot (NickName' Password' Nationality' EMail' m_Random.Next (1' 29)' m_Random.Next (1' 13)' m_Random.Next (1970' 1995)' (m_Random.Next (0' 2) > 0)' out Response);  
Magic Number,Engine,ReportAll,C:\repos\sasha237_NorthCitadel\Engine\ReportAll.cs,Worker,The following statement contains a magic number: if (args.Length != 6) {  	PrintUsage ();  	return;  }  
Magic Number,Engine,ReportAll,C:\repos\sasha237_NorthCitadel\Engine\ReportAll.cs,Worker,The following statement contains a magic number: int.TryParse (args [2]' out iId);  
Magic Number,Engine,ReportAll,C:\repos\sasha237_NorthCitadel\Engine\ReportAll.cs,Worker,The following statement contains a magic number: int.TryParse (args [3]' out iType);  
Magic Number,Engine,ReportAll,C:\repos\sasha237_NorthCitadel\Engine\ReportAll.cs,Worker,The following statement contains a magic number: lang = args [4];  
Magic Number,Engine,ReportAll,C:\repos\sasha237_NorthCitadel\Engine\ReportAll.cs,Worker,The following statement contains a magic number: stype = args [5];  
Magic Number,Engine,Subscribe,C:\repos\sasha237_NorthCitadel\Engine\Subscribe.cs,Worker,The following statement contains a magic number: if (args.Length != 3) {  	PrintUsage ();  	return;  }  
Magic Number,Engine,Subscribe,C:\repos\sasha237_NorthCitadel\Engine\Subscribe.cs,Worker,The following statement contains a magic number: int.TryParse (args [2]' out id);  
Magic Number,Engine,Utils,C:\repos\sasha237_NorthCitadel\Engine\Utils.cs,UpdateDbWithCustomBotInfo,The following statement contains a magic number: lock (Globals.DBLocker) {  	Globals.Database.Reset ();  	Globals.Database.Where ("id"' (uint)info ["id"]);  	object[] args = new object[fields.Length * 2];  	for (int i = 0; i < fields.Length; i++) {  		args [i * 2] = fields [i];  		args [i * 2 + 1] = info [fields [i]];  	}  	Globals.Database.Update ("bots"' args);  }  
Magic Number,Engine,Utils,C:\repos\sasha237_NorthCitadel\Engine\Utils.cs,UpdateDbWithCustomBotInfo,The following statement contains a magic number: lock (Globals.DBLocker) {  	Globals.Database.Reset ();  	Globals.Database.Where ("id"' (uint)info ["id"]);  	object[] args = new object[fields.Length * 2];  	for (int i = 0; i < fields.Length; i++) {  		args [i * 2] = fields [i];  		args [i * 2 + 1] = info [fields [i]];  	}  	Globals.Database.Update ("bots"' args);  }  
Magic Number,Engine,Utils,C:\repos\sasha237_NorthCitadel\Engine\Utils.cs,UpdateDbWithCustomBotInfo,The following statement contains a magic number: lock (Globals.DBLocker) {  	Globals.Database.Reset ();  	Globals.Database.Where ("id"' (uint)info ["id"]);  	object[] args = new object[fields.Length * 2];  	for (int i = 0; i < fields.Length; i++) {  		args [i * 2] = fields [i];  		args [i * 2 + 1] = info [fields [i]];  	}  	Globals.Database.Update ("bots"' args);  }  
Magic Number,Engine,Utils,C:\repos\sasha237_NorthCitadel\Engine\Utils.cs,UpdateDbWithCustomBotInfo,The following statement contains a magic number: for (int i = 0; i < fields.Length; i++) {  	args [i * 2] = fields [i];  	args [i * 2 + 1] = info [fields [i]];  }  
Magic Number,Engine,Utils,C:\repos\sasha237_NorthCitadel\Engine\Utils.cs,UpdateDbWithCustomBotInfo,The following statement contains a magic number: for (int i = 0; i < fields.Length; i++) {  	args [i * 2] = fields [i];  	args [i * 2 + 1] = info [fields [i]];  }  
Magic Number,Engine,Utils,C:\repos\sasha237_NorthCitadel\Engine\Utils.cs,UpdateDbWithCustomBotInfo,The following statement contains a magic number: args [i * 2] = fields [i];  
Magic Number,Engine,Utils,C:\repos\sasha237_NorthCitadel\Engine\Utils.cs,UpdateDbWithCustomBotInfo,The following statement contains a magic number: args [i * 2 + 1] = info [fields [i]];  
Magic Number,Engine,FireAll,C:\repos\sasha237_NorthCitadel\Engine\FireAll.cs,Worker,The following statement contains a magic number: if (args.Length != 4) {  	ConsoleLog.WriteLine ("Usage: fire_all login(email) password company");  	return;  }  
Magic Number,Engine,FireAll,C:\repos\sasha237_NorthCitadel\Engine\FireAll.cs,Worker,The following statement contains a magic number: while (true) {  	System.Text.RegularExpressions.Match m = System.Text.RegularExpressions.Regex.Match (scan' @"/en/fire-employee/company-\w+-employee-\w+");  	if (m.Groups [0].Value.Length == 0)  		break;  	ConsoleLog.WriteLine ("Found: " + m.Groups [0].Value);  	System.Threading.Thread.Sleep (3000);  	scan = bot.CustomRequest ("http://www.erepublik.com" + m.Groups [0].Value);  }  
Magic Number,Engine,FireAll,C:\repos\sasha237_NorthCitadel\Engine\FireAll.cs,Worker,The following statement contains a magic number: System.Threading.Thread.Sleep (3000);  
Magic Number,Engine,Elections,C:\repos\sasha237_NorthCitadel\Engine\Elections.cs,Worker,The following statement contains a magic number: if (args.Length != 7) {  	ConsoleLog.WriteLine ("Usage: " + args [0] + " operation(join|leave|vote) group party election_type electionid candidate");  	return;  }  
Magic Number,Engine,Elections,C:\repos\sasha237_NorthCitadel\Engine\Elections.cs,Worker,The following statement contains a magic number: group = args [2];  
Magic Number,Engine,Elections,C:\repos\sasha237_NorthCitadel\Engine\Elections.cs,Worker,The following statement contains a magic number: party = args [3];  
Magic Number,Engine,Elections,C:\repos\sasha237_NorthCitadel\Engine\Elections.cs,Worker,The following statement contains a magic number: electiontype = args [4];  
Magic Number,Engine,Elections,C:\repos\sasha237_NorthCitadel\Engine\Elections.cs,Worker,The following statement contains a magic number: int.TryParse (args [5]' out electionid);  
Magic Number,Engine,Elections,C:\repos\sasha237_NorthCitadel\Engine\Elections.cs,Worker,The following statement contains a magic number: candidate = args [6];  
Magic Number,Engine,Elections,C:\repos\sasha237_NorthCitadel\Engine\Elections.cs,Worker,The following statement contains a magic number: foreach (var botnfo in bots) {  	while (true) {  		bool found = false;  		for (int i = 0; i < pool.Length; i++) {  			if ((pool [i] == null) || (pool [i].IsAlive == false)) {  				pool [i] = new System.Threading.Thread (BotProcWrap);  				pool [i].Start (botnfo);  				found = true;  				break;  			}  		}  		if (found)  			break;  		System.Threading.Thread.Sleep (1000);  	}  }  
Magic Number,Engine,Elections,C:\repos\sasha237_NorthCitadel\Engine\Elections.cs,Worker,The following statement contains a magic number: while (true) {  	bool found = false;  	for (int i = 0; i < pool.Length; i++) {  		if ((pool [i] == null) || (pool [i].IsAlive == false)) {  			pool [i] = new System.Threading.Thread (BotProcWrap);  			pool [i].Start (botnfo);  			found = true;  			break;  		}  	}  	if (found)  		break;  	System.Threading.Thread.Sleep (1000);  }  
Magic Number,Engine,Elections,C:\repos\sasha237_NorthCitadel\Engine\Elections.cs,Worker,The following statement contains a magic number: System.Threading.Thread.Sleep (1000);  
Magic Number,Engine,Elections,C:\repos\sasha237_NorthCitadel\Engine\Elections.cs,Worker,The following statement contains a magic number: while (true) {  	bool found = false;  	for (int i = 0; i < pool.Length; i++) {  		if ((pool [i] != null) && (pool [i].IsAlive)) {  			found = true;  			break;  		}  	}  	if (!found)  		break;  	System.Threading.Thread.Sleep (1000);  }  
Magic Number,Engine,Elections,C:\repos\sasha237_NorthCitadel\Engine\Elections.cs,Worker,The following statement contains a magic number: System.Threading.Thread.Sleep (1000);  
Magic Number,Engine,VoteArticle,C:\repos\sasha237_NorthCitadel\Engine\VoteArticle.cs,Worker,The following statement contains a magic number: if (args.Length != 3) {  	PrintUsage ();  	return;  }  
Magic Number,Engine,VoteArticle,C:\repos\sasha237_NorthCitadel\Engine\VoteArticle.cs,Worker,The following statement contains a magic number: int.TryParse (args [2]' out id);  
Magic Number,Pop3,Pop3Client,C:\repos\sasha237_NorthCitadel\Engine\POP3\Pop3Client.cs,Connect,The following statement contains a magic number: if (response.Substring (0' 3) != "+OK") {  	throw new Pop3Exception (response);  }  else {  	SendCommand (String.Format (CultureInfo.InvariantCulture' "USER {0}"' username));  	SendCommand (String.Format (CultureInfo.InvariantCulture' "PASS {0}"' password));  }  
Magic Number,Pop3,Pop3Client,C:\repos\sasha237_NorthCitadel\Engine\POP3\Pop3Client.cs,SendCommand,The following statement contains a magic number: if (response.Substring (0' 3) != "+OK")  	throw new Pop3Exception (response);  
Magic Number,Pop3,Pop3Client,C:\repos\sasha237_NorthCitadel\Engine\POP3\Pop3Client.cs,Response,The following statement contains a magic number: while (true) {  	byte[] buff = new Byte[2];  	int bytes = stream.Read (buff' 0' 1);  	if (bytes == 1) {  		serverBuffer [count] = buff [0];  		count++;  		if (buff [0] == '\n')  			break;  	}  	else {  		break;  	}  }  
Magic Number,Pop3,Pop3Message,C:\repos\sasha237_NorthCitadel\Engine\POP3\Pop3Message.cs,GetHeader,The following statement contains a magic number: if (index == -1) {  	result = null;  }  else {  	result = result.Remove (0' (index + headerName.Length + 2));  	result = result.Remove (result.IndexOf ('\r')' (result.Length - result.IndexOf ('\r'))).Replace ("\n"' String.Empty).Trim ();  }  
Magic Number,Pop3,Pop3Message,C:\repos\sasha237_NorthCitadel\Engine\POP3\Pop3Message.cs,GetHeader,The following statement contains a magic number: result = result.Remove (0' (index + headerName.Length + 2));  
Missing Default,Engine,Daily,C:\repos\sasha237_NorthCitadel\Engine\Daily.cs,BotProc,The following switch statement is missing a default case: switch (e.Current) {  case 1:  	// Работа  	for (int i = 1; i <= 3; i++) {  		try {  			Daily.BotWork (botinfo' Bot' rnd);  			break;  		}  		catch (System.Exception e1) {  			ConsoleLog.WriteLine ("Bot work error: " + e1.Message);  		}  	}  	break;  case 2:  	// Тренька  	for (int i = 1; i <= 3; i++) {  		try {  			Daily.BotTrain (botinfo' Bot' rnd);  			break;  		}  		catch (System.Exception e1) {  			ConsoleLog.WriteLine ("Bot train error: " + e1.Message);  		}  	}  	break;  case 3:  	// Аллерты  	try {  		Bot.Bot.LookAlerts ();  	}  	catch (System.Exception e1) {  		ConsoleLog.WriteLine ("Bot look alerts error: " + e1.Message);  	}  	break;  case 4:  	// Статьи  	try {  		Bot.Bot.ReadRandomTopArticle ();  		//if (!Globals.BotConfig.useTOR) System.Threading.Thread.Sleep(rnd.Next(15000' 20000));  		Bot.Bot.ReadRandomTopArticle ();  	}  	catch (System.Exception e1) {  		ConsoleLog.WriteLine ("Bot read article error: " + e1.Message);  	}  	break;  }  
