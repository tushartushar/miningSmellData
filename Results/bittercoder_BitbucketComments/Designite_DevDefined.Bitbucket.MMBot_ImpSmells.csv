Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,DevDefined.Bitbucket.MMBot.ApprovalScanner,CommitApprovalScanner,C:\repos\bittercoder_BitbucketComments\src\DevDefined.Bitbucket.MMBot\ApprovalScanner\CommitApprovalScanner.cs,Scan,The method has 6 parameters.
Long Parameter List,DevDefined.Bitbucket.MMBot.ApprovalScanner,CommitApprovalScanner,C:\repos\bittercoder_BitbucketComments\src\DevDefined.Bitbucket.MMBot\ApprovalScanner\CommitApprovalScanner.cs,CalculateStatistics,The method has 10 parameters.
Long Parameter List,DevDefined.Bitbucket.MMBot.ApprovalScanner,CommitApprovalScanner,C:\repos\bittercoder_BitbucketComments\src\DevDefined.Bitbucket.MMBot\ApprovalScanner\CommitApprovalScanner.cs,ReadCommitDetails,The method has 5 parameters.
Long Parameter List,DevDefined.Bitbucket.MMBot.ApprovalScanner,CommitApprovalScanner,C:\repos\bittercoder_BitbucketComments\src\DevDefined.Bitbucket.MMBot\ApprovalScanner\CommitApprovalScanner.cs,CheckForNewApprovers,The method has 6 parameters.
Long Parameter List,DevDefined.Bitbucket.MMBot.ApprovalScanner,CallbackCommitApprovalMetaStore,C:\repos\bittercoder_BitbucketComments\src\DevDefined.Bitbucket.MMBot\ApprovalScanner\CallbackCommitApprovalMetaStore.cs,CallbackCommitApprovalMetaStore,The method has 7 parameters.
Long Parameter List,DevDefined.Bitbucket.MMBot.Scripts,BitbucketComments,C:\repos\bittercoder_BitbucketComments\src\DevDefined.Bitbucket.MMBot\Scripts\BitbucketComments.cs,Register,The method has 9 parameters.
Long Parameter List,DevDefined.Bitbucket.MMBot.Scripts,BitbucketComments,C:\repos\bittercoder_BitbucketComments\src\DevDefined.Bitbucket.MMBot\Scripts\BitbucketComments.cs,CreateCommentMetaStore,The method has 7 parameters.
Long Parameter List,DevDefined.Bitbucket.MMBot.Scripts,BitbucketComments,C:\repos\bittercoder_BitbucketComments\src\DevDefined.Bitbucket.MMBot\Scripts\BitbucketComments.cs,CreateCommitApprovalMetaStore,The method has 7 parameters.
Long Parameter List,DevDefined.Bitbucket.MMBot.Scripts,BitbucketComments,C:\repos\bittercoder_BitbucketComments\src\DevDefined.Bitbucket.MMBot\Scripts\BitbucketComments.cs,RenderApprovalStatistics,The method has 5 parameters.
Long Parameter List,DevDefined.Bitbucket.MMBot.ChangeScanner,CallbackCommentMetaStore,C:\repos\bittercoder_BitbucketComments\src\DevDefined.Bitbucket.MMBot\ChangeScanner\CallbackCommentMetaStore.cs,CallbackCommentMetaStore,The method has 7 parameters.
Long Parameter List,DevDefined.Bitbucket.MMBot.ChangeScanner,CommentChangeScanner,C:\repos\bittercoder_BitbucketComments\src\DevDefined.Bitbucket.MMBot\ChangeScanner\CommentChangeScanner.cs,ScanForNewComments,The method has 5 parameters.
Long Statement,DevDefined.Bitbucket.MMBot.ApprovalScanner,CommitApprovalScanner,C:\repos\bittercoder_BitbucketComments\src\DevDefined.Bitbucket.MMBot\ApprovalScanner\CommitApprovalScanner.cs,CalculateStatistics,The length of the statement  "		TotalApprovalsByUser = distinctUsers.Select (x => Tuple.Create (x' users.Count (u => u.UserName == x.UserName))).OrderBy (x => x.Item2).ToList () " is 145.
Long Statement,DevDefined.Bitbucket.MMBot.ApprovalScanner,CommitApprovalScanner,C:\repos\bittercoder_BitbucketComments\src\DevDefined.Bitbucket.MMBot\ApprovalScanner\CommitApprovalScanner.cs,ReadCommitDetails,The length of the statement  "	Task.WaitAll (commits.Select (commit => _client.GetDetailsForCommit (commit).ContinueWith (response => commitDetails.Enqueue (response.Result))).ToArray ()); " is 157.
Long Statement,DevDefined.Bitbucket.MMBot.ApprovalScanner,CommitApprovalScanner,C:\repos\bittercoder_BitbucketComments\src\DevDefined.Bitbucket.MMBot\ApprovalScanner\CommitApprovalScanner.cs,CheckForNewApprovers,The length of the statement  "	User[] newApprovers = details.Participants.Where (x => x.Approved == true && previous.Approvers.All (u => u != x.User.UserName)).Select (x => x.User).ToArray (); " is 161.
Long Statement,DevDefined.Bitbucket.MMBot.Client,BitbucketApiClient,C:\repos\bittercoder_BitbucketComments\src\DevDefined.Bitbucket.MMBot\Client\BitbucketApiClient.cs,BasicAuth,The length of the statement  "	return new AuthenticationHeaderValue ("Basic"' Convert.ToBase64String (Encoding.ASCII.GetBytes (string.Format ("{0}:{1}"' username' password)))); " is 145.
Long Statement,DevDefined.Bitbucket.MMBot.Scripts,BitbucketComments,C:\repos\bittercoder_BitbucketComments\src\DevDefined.Bitbucket.MMBot\Scripts\BitbucketComments.cs,Register,The length of the statement  "	bool useFormatting = (robot.GetConfigVariable ("MMBOT_BITBUCKET_USEHIPCHATFORMATTING") ?? "False").Equals ("true"' StringComparison.OrdinalIgnoreCase); " is 151.
Long Statement,DevDefined.Bitbucket.MMBot.Scripts,BitbucketComments,C:\repos\bittercoder_BitbucketComments\src\DevDefined.Bitbucket.MMBot\Scripts\BitbucketComments.cs,Register,The length of the statement  "		IEnumerable<CommentView> comments = scanner.ScanForNewComments (TimeSpan.FromDays (daysToCheckForComments)' owner' repoSlug); " is 125.
Long Statement,DevDefined.Bitbucket.MMBot.Scripts,BitbucketComments,C:\repos\bittercoder_BitbucketComments\src\DevDefined.Bitbucket.MMBot\Scripts\BitbucketComments.cs,Register,The length of the statement  "		foreach (var message in comments.OrderByDescending (x => x.Comment.UpdatedOn).Select (c => RenderCommentMessage (c' repoSlug' useHipchatFormatSpecifiers))) { " is 157.
Long Statement,DevDefined.Bitbucket.MMBot.Scripts,BitbucketComments,C:\repos\bittercoder_BitbucketComments\src\DevDefined.Bitbucket.MMBot\Scripts\BitbucketComments.cs,Register,The length of the statement  "		foreach (var message in changes.ApprovedCommits.SelectMany (c => RenderApprovedCommitMessages (c' repoSlug' useHipchatFormatSpecifiers))) { " is 139.
Long Statement,DevDefined.Bitbucket.MMBot.Scripts,BitbucketComments,C:\repos\bittercoder_BitbucketComments\src\DevDefined.Bitbucket.MMBot\Scripts\BitbucketComments.cs,Register,The length of the statement  "		int daysToCheckForApprovals = Convert.ToInt32 (robot.GetConfigVariable ("MMBOT_BITBUCKET_DAYSFORAWAITINGAPPROVALS") ?? "7"); " is 124.
Long Statement,DevDefined.Bitbucket.MMBot.Scripts,BitbucketComments,C:\repos\bittercoder_BitbucketComments\src\DevDefined.Bitbucket.MMBot\Scripts\BitbucketComments.cs,Register,The length of the statement  "		foreach (var message in changes.CommitsAwaitingApproval.Select (c => RenderCommitAwaitingApproval (c' repoSlug' useHipchatFormatSpecifiers))) { " is 143.
Long Statement,DevDefined.Bitbucket.MMBot.Scripts,BitbucketComments,C:\repos\bittercoder_BitbucketComments\src\DevDefined.Bitbucket.MMBot\Scripts\BitbucketComments.cs,CreateCommentMetaStore,The length of the statement  "	var metaStore = new CallbackCommentMetaStore (id => robot.Brain.Get<CommentMeta> (keyFunc (id)).Result' (id' meta) => robot.Brain.Set (keyFunc (id)' meta).Wait ()); " is 164.
Long Statement,DevDefined.Bitbucket.MMBot.Scripts,BitbucketComments,C:\repos\bittercoder_BitbucketComments\src\DevDefined.Bitbucket.MMBot\Scripts\BitbucketComments.cs,CreateCommitApprovalMetaStore,The length of the statement  "	var metaStore = new CallbackCommitApprovalMetaStore (hash => robot.Brain.Get<ApprovalMeta> (keyFunc (hash)).Result' (hash' meta) => robot.Brain.Set (keyFunc (hash)' meta).Wait ()); " is 180.
Long Statement,DevDefined.Bitbucket.MMBot.Scripts,BitbucketComments,C:\repos\bittercoder_BitbucketComments\src\DevDefined.Bitbucket.MMBot\Scripts\BitbucketComments.cs,GetHelp,The length of the statement  "	yield return "mmbot bitbucket comments check <owner> <repoSlug> - Will check for new and updated comments in bitbucket and display links to them."; " is 147.
Long Statement,DevDefined.Bitbucket.MMBot.Scripts,BitbucketComments,C:\repos\bittercoder_BitbucketComments\src\DevDefined.Bitbucket.MMBot\Scripts\BitbucketComments.cs,GetHelp,The length of the statement  "	yield return "mmbot bitbucket approvals new <owner> <repoSlug> - Will return commits which have recently been approved by a user."; " is 131.
Long Statement,DevDefined.Bitbucket.MMBot.Scripts,BitbucketComments,C:\repos\bittercoder_BitbucketComments\src\DevDefined.Bitbucket.MMBot\Scripts\BitbucketComments.cs,GetHelp,The length of the statement  "	yield return "mmbot bitbucket approvals awaiting <owner> <repoSlug> - Will return a list of commits still requiring approval/review."; " is 134.
Long Statement,DevDefined.Bitbucket.MMBot.Scripts,BitbucketComments,C:\repos\bittercoder_BitbucketComments\src\DevDefined.Bitbucket.MMBot\Scripts\BitbucketComments.cs,GetHelp,The length of the statement  "	yield return "mmbot bitbucket approvals total <owner> <repoSlug> - Will return a list of how many approvals each user has made."; " is 129.
Long Statement,DevDefined.Bitbucket.MMBot.Scripts,BitbucketComments,C:\repos\bittercoder_BitbucketComments\src\DevDefined.Bitbucket.MMBot\Scripts\BitbucketComments.cs,RenderApprovedCommitMessages,The length of the statement  "		yield return string.Format ("{0}{1} has approved (bitbucket) commit #{2} (successful)\r\n\r\n{3}\r\n\r\n{4}\r\n\r\ncommit author:{5}\r\nrepository: {6}"' formatSpecifiers' Mention (user)' commit.Hash' commit.Message' commit.Links ["html"].Href' Mention (commit.Author.User)' repoSlug); " is 285.
Long Statement,DevDefined.Bitbucket.MMBot.Scripts,BitbucketComments,C:\repos\bittercoder_BitbucketComments\src\DevDefined.Bitbucket.MMBot\Scripts\BitbucketComments.cs,RenderCommentMessage,The length of the statement  "	string formatSpecifiers = (useHipchatFormatSpecifiers ? (commentView.IsUpdate ? "::purple ::notify ::from bitbucket " : "::green ::notify ::from bitbucket ") : ""); " is 164.
Long Statement,DevDefined.Bitbucket.MMBot.Scripts,BitbucketComments,C:\repos\bittercoder_BitbucketComments\src\DevDefined.Bitbucket.MMBot\Scripts\BitbucketComments.cs,RenderCommentMessage,The length of the statement  "	return string.Format ("{6}{0} {5} (bitbucket) commit #{1}\r\n\r\n{2}\r\n\r\n{3}\r\n\r\n\r\n\r\ncommit author: {7}\r\nrepository: {4}"' Mention (commentView.Comment.User)' commentView.Hash.Substring (0' 10)' commentView.Comment.Content.Raw.TruncateWithEllipsis (256)' commentView.Comment.Links ["html"].Href' repoSlug' sentiment' formatSpecifiers' Mention (commentView.CommitAuthor)); " is 383.
Long Statement,DevDefined.Bitbucket.MMBot.Scripts,BitbucketComments,C:\repos\bittercoder_BitbucketComments\src\DevDefined.Bitbucket.MMBot\Scripts\BitbucketComments.cs,RenderApprovalStatistics,The length of the statement  "		builder.AppendFormat ("\r\n<b>{0}</b>: approved {1} commits in the last {2} days"' name' stat.Item2' (int)span.TotalDays); " is 122.
Long Statement,DevDefined.Bitbucket.MMBot.Scripts,BitbucketComments,C:\repos\bittercoder_BitbucketComments\src\DevDefined.Bitbucket.MMBot\Scripts\BitbucketComments.cs,RenderCommitAwaitingApproval,The length of the statement  "	return string.Format ("{0}(bitbucket) commit #{1} has not been approved yet (philosoraptor)\r\n\r\n{2}\r\n\r\n{3}\r\n\r\ncommit author: {4}\r\nrepository: {5}"' formatSpecifiers' commit.Hash' commit.Message.TruncateWithEllipsis (256)' commit.Links ["html"].Href' Mention (commit.Author.User)' repoSlug); " is 303.
Long Statement,DevDefined.Bitbucket.MMBot.ChangeScanner,FileCommentMetaStore,C:\repos\bittercoder_BitbucketComments\src\DevDefined.Bitbucket.MMBot\ChangeScanner\FileCommentMetaStore.cs,ReadFile,The length of the statement  "		_meta = JsonConvert.DeserializeObject<ConcurrentDictionary<string' CommentMeta>> (File.ReadAllText (_fileName)) ?? new ConcurrentDictionary<string' CommentMeta> (); " is 164.
Magic Number,DevDefined.Bitbucket.MMBot.ApprovalScanner,CallbackCommitApprovalMetaStore,C:\repos\bittercoder_BitbucketComments\src\DevDefined.Bitbucket.MMBot\ApprovalScanner\CallbackCommitApprovalMetaStore.cs,SleepAwhile,The following statement contains a magic number: Thread.Sleep (10 + (int)(random.NextDouble () * 50));  
Magic Number,DevDefined.Bitbucket.MMBot.ApprovalScanner,CallbackCommitApprovalMetaStore,C:\repos\bittercoder_BitbucketComments\src\DevDefined.Bitbucket.MMBot\ApprovalScanner\CallbackCommitApprovalMetaStore.cs,SleepAwhile,The following statement contains a magic number: Thread.Sleep (10 + (int)(random.NextDouble () * 50));  
Magic Number,DevDefined.Bitbucket.MMBot.Scripts,BitbucketComments,C:\repos\bittercoder_BitbucketComments\src\DevDefined.Bitbucket.MMBot\Scripts\BitbucketComments.cs,Register,The following statement contains a magic number: robot.Respond ("bitbucket comments check (.*) (.*)"' msg =>  {  	var bucketClient = CreateClient (robot' msg);  	if (bucketClient == null)  		return;  	string owner = msg.Match [1];  	string repoSlug = msg.Match [2];  	int daysToCheckForComments = Convert.ToInt32 (robot.GetConfigVariable ("MMBOT_BITBUCKET_DAYSFORCOMMENTS") ?? "14");  	var metaStore = CreateCommentMetaStore (robot' owner' repoSlug);  	var scanner = new CommentChangeScanner (bucketClient' metaStore);  	IEnumerable<CommentView> comments = scanner.ScanForNewComments (TimeSpan.FromDays (daysToCheckForComments)' owner' repoSlug);  	foreach (var message in comments.OrderByDescending (x => x.Comment.UpdatedOn).Select (c => RenderCommentMessage (c' repoSlug' useHipchatFormatSpecifiers))) {  		msg.Send (message);  	}  });  
Magic Number,DevDefined.Bitbucket.MMBot.Scripts,BitbucketComments,C:\repos\bittercoder_BitbucketComments\src\DevDefined.Bitbucket.MMBot\Scripts\BitbucketComments.cs,Register,The following statement contains a magic number: robot.Respond ("bitbucket approvals new (.*) (.*)"' msg =>  {  	var bucketClient = CreateClient (robot' msg);  	if (bucketClient == null)  		return;  	string owner = msg.Match [1];  	string repoSlug = msg.Match [2];  	int daysToCheckForApprovals = Convert.ToInt32 (robot.GetConfigVariable ("MMBOT_BITBUCKET_DAYSFORAPPROVALS") ?? "14");  	var metaStore = CreateCommitApprovalMetaStore (robot' owner' repoSlug);  	var scanner = new CommitApprovalScanner (bucketClient' metaStore);  	var changes = scanner.Scan (TimeSpan.FromDays (daysToCheckForApprovals)' owner' repoSlug);  	foreach (var message in changes.ApprovedCommits.SelectMany (c => RenderApprovedCommitMessages (c' repoSlug' useHipchatFormatSpecifiers))) {  		msg.Send (message);  	}  });  
Magic Number,DevDefined.Bitbucket.MMBot.Scripts,BitbucketComments,C:\repos\bittercoder_BitbucketComments\src\DevDefined.Bitbucket.MMBot\Scripts\BitbucketComments.cs,Register,The following statement contains a magic number: robot.Respond ("bitbucket approvals awaiting (.*) (.*)"' msg =>  {  	var bucketClient = CreateClient (robot' msg);  	if (bucketClient == null)  		return;  	string owner = msg.Match [1];  	string repoSlug = msg.Match [2];  	int daysToCheckForApprovals = Convert.ToInt32 (robot.GetConfigVariable ("MMBOT_BITBUCKET_DAYSFORAWAITINGAPPROVALS") ?? "7");  	var metaStore = CreateCommitApprovalMetaStore (robot' owner' repoSlug);  	var scanner = new CommitApprovalScanner (bucketClient' metaStore);  	var changes = scanner.Scan (TimeSpan.FromDays (daysToCheckForApprovals)' owner' repoSlug);  	foreach (var message in changes.CommitsAwaitingApproval.Select (c => RenderCommitAwaitingApproval (c' repoSlug' useHipchatFormatSpecifiers))) {  		msg.Send (message);  	}  });  
Magic Number,DevDefined.Bitbucket.MMBot.Scripts,BitbucketComments,C:\repos\bittercoder_BitbucketComments\src\DevDefined.Bitbucket.MMBot\Scripts\BitbucketComments.cs,Register,The following statement contains a magic number: robot.Respond ("bitbucket approvals total (.*) (.*)"' msg =>  {  	var bucketClient = CreateClient (robot' msg);  	if (bucketClient == null)  		return;  	string owner = msg.Match [1];  	string repoSlug = msg.Match [2];  	int daysToDoSummaryFor = Convert.ToInt32 (robot.GetConfigVariable ("MMBOT_BITBUCKET_DAYSFORAPPROVALSUMMARY") ?? "30");  	var metaStore = CreateCommitApprovalMetaStore (robot' owner' repoSlug);  	var scanner = new CommitApprovalScanner (bucketClient' metaStore);  	var timespan = TimeSpan.FromDays (daysToDoSummaryFor);  	var statistics = scanner.CalculateStatistics (timespan' owner' repoSlug);  	var message = RenderApprovalStatistics (statistics' repoSlug' timespan' useHipchatFormatSpecifiers);  	msg.Send (message);  });  
Magic Number,DevDefined.Bitbucket.MMBot.Scripts,BitbucketComments,C:\repos\bittercoder_BitbucketComments\src\DevDefined.Bitbucket.MMBot\Scripts\BitbucketComments.cs,RenderCommentMessage,The following statement contains a magic number: return string.Format ("{6}{0} {5} (bitbucket) commit #{1}\r\n\r\n{2}\r\n\r\n{3}\r\n\r\n\r\n\r\ncommit author: {7}\r\nrepository: {4}"' Mention (commentView.Comment.User)' commentView.Hash.Substring (0' 10)' commentView.Comment.Content.Raw.TruncateWithEllipsis (256)' commentView.Comment.Links ["html"].Href' repoSlug' sentiment' formatSpecifiers' Mention (commentView.CommitAuthor));  
Magic Number,DevDefined.Bitbucket.MMBot.Scripts,BitbucketComments,C:\repos\bittercoder_BitbucketComments\src\DevDefined.Bitbucket.MMBot\Scripts\BitbucketComments.cs,RenderCommentMessage,The following statement contains a magic number: return string.Format ("{6}{0} {5} (bitbucket) commit #{1}\r\n\r\n{2}\r\n\r\n{3}\r\n\r\n\r\n\r\ncommit author: {7}\r\nrepository: {4}"' Mention (commentView.Comment.User)' commentView.Hash.Substring (0' 10)' commentView.Comment.Content.Raw.TruncateWithEllipsis (256)' commentView.Comment.Links ["html"].Href' repoSlug' sentiment' formatSpecifiers' Mention (commentView.CommitAuthor));  
Magic Number,DevDefined.Bitbucket.MMBot.Scripts,BitbucketComments,C:\repos\bittercoder_BitbucketComments\src\DevDefined.Bitbucket.MMBot\Scripts\BitbucketComments.cs,RenderCommitAwaitingApproval,The following statement contains a magic number: return string.Format ("{0}(bitbucket) commit #{1} has not been approved yet (philosoraptor)\r\n\r\n{2}\r\n\r\n{3}\r\n\r\ncommit author: {4}\r\nrepository: {5}"' formatSpecifiers' commit.Hash' commit.Message.TruncateWithEllipsis (256)' commit.Links ["html"].Href' Mention (commit.Author.User)' repoSlug);  
Magic Number,DevDefined.Bitbucket.MMBot.ChangeScanner,CallbackCommentMetaStore,C:\repos\bittercoder_BitbucketComments\src\DevDefined.Bitbucket.MMBot\ChangeScanner\CallbackCommentMetaStore.cs,SleepAwhile,The following statement contains a magic number: Thread.Sleep (10 + (int)(random.NextDouble () * 50));  
Magic Number,DevDefined.Bitbucket.MMBot.ChangeScanner,CallbackCommentMetaStore,C:\repos\bittercoder_BitbucketComments\src\DevDefined.Bitbucket.MMBot\ChangeScanner\CallbackCommentMetaStore.cs,SleepAwhile,The following statement contains a magic number: Thread.Sleep (10 + (int)(random.NextDouble () * 50));  
