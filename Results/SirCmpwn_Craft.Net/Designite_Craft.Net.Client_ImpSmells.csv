Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Craft.Net.Client,MinecraftClient,C:\repos\SirCmpwn_Craft.Net\source\Craft.Net.Client\MinecraftClient.cs,NetworkWorker,Cyclomatic complexity of the method is 8
Long Parameter List,Craft.Net.Client.Handlers,WorldHandlers,C:\repos\SirCmpwn_Craft.Net\source\Craft.Net.Client\Handlers\WorldHandlers.cs,AddChunk,The method has 8 parameters. Parameters: client' x' z' primaryBitMap' addBitMap' lightIncluded' groundUp' data
Long Statement,Craft.Net.Client,DotMinecraft,C:\repos\SirCmpwn_Craft.Net\source\Craft.Net.Client\DotMinecraft.cs,GetDotMinecraftPath,The length of the statement  "                return Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Personal)' "Library"' "Application Support"' ".minecraft"); " is 131.
Long Statement,Craft.Net.Client.Handlers,WorldHandlers,C:\repos\SirCmpwn_Craft.Net\source\Craft.Net.Client\Handlers\WorldHandlers.cs,MapChunkBulk,The length of the statement  "                AddChunk(client' metadata.ChunkX' metadata.ChunkZ' metadata.PrimaryBitMap' metadata.AddBitMap' packet.LightIncluded' true' chunkData); " is 134.
Long Statement,Craft.Net.Client.Handlers,EntityHandlers,C:\repos\SirCmpwn_Craft.Net\source\Craft.Net.Client\Handlers\EntityHandlers.cs,PlayerPositionAndLook,The length of the statement  "            client.SendPacket(new PlayerPositionPacket(client.Position.X' client.Position.Y' client.Position.Z' client.Position.Y - 1.62' true)); " is 133.
Empty Catch Block,Craft.Net.Client,MinecraftClient,C:\repos\SirCmpwn_Craft.Net\source\Craft.Net.Client\MinecraftClient.cs,Disconnect,The method has an empty catch block.
Empty Catch Block,Craft.Net.Client,MinecraftClient,C:\repos\SirCmpwn_Craft.Net\source\Craft.Net.Client\MinecraftClient.cs,PhysicsWorker,The method has an empty catch block.
Empty Catch Block,Craft.Net.Client,MinecraftClient,C:\repos\SirCmpwn_Craft.Net\source\Craft.Net.Client\MinecraftClient.cs,NetworkWorker,The method has an empty catch block.
Magic Number,Craft.Net.Client,PKCSKeyGenerator,C:\repos\SirCmpwn_Craft.Net\source\Craft.Net.Client\PKCSKeyGenerator.cs,Generate,The following statement contains a magic number: int hashLength = 16;
Magic Number,Craft.Net.Client,PKCSKeyGenerator,C:\repos\SirCmpwn_Craft.Net\source\Craft.Net.Client\PKCSKeyGenerator.cs,Generate,The following statement contains a magic number: Array.Copy(keyMaterial' 0' this.key' 0' 8);
Magic Number,Craft.Net.Client,PKCSKeyGenerator,C:\repos\SirCmpwn_Craft.Net\source\Craft.Net.Client\PKCSKeyGenerator.cs,Generate,The following statement contains a magic number: Array.Copy(keyMaterial' 8' this.iv' 0' 8);
Magic Number,Craft.Net.Client,PKCSKeyGenerator,C:\repos\SirCmpwn_Craft.Net\source\Craft.Net.Client\PKCSKeyGenerator.cs,Generate,The following statement contains a magic number: Array.Copy(keyMaterial' 8' this.iv' 0' 8);
Magic Number,Craft.Net.Client,LastLogin,C:\repos\SirCmpwn_Craft.Net\source\Craft.Net.Client\LastLogin.cs,GetLastLogin,The following statement contains a magic number: try              {                  byte[] encryptedLogin = File.ReadAllBytes(lastLoginFile);                  PKCSKeyGenerator crypto = new PKCSKeyGenerator(LastLoginPassword' LastLoginSalt' 5' 1);                  ICryptoTransform cryptoTransform = crypto.Decryptor;                  byte[] decrypted = cryptoTransform.TransformFinalBlock(encryptedLogin' 0' encryptedLogin.Length);                  short userLength = IPAddress.HostToNetworkOrder(BitConverter.ToInt16(decrypted' 0));                  byte[] user = decrypted.Skip(2).Take(userLength).ToArray();                  byte[] password = decrypted.Skip(4 + userLength).ToArray();                  LastLogin result = new LastLogin();                  result.Username = System.Text.Encoding.UTF8.GetString(user);                  result.Password = System.Text.Encoding.UTF8.GetString(password);                  return result;              }              catch              {                  return null;              }
Magic Number,Craft.Net.Client,LastLogin,C:\repos\SirCmpwn_Craft.Net\source\Craft.Net.Client\LastLogin.cs,GetLastLogin,The following statement contains a magic number: try              {                  byte[] encryptedLogin = File.ReadAllBytes(lastLoginFile);                  PKCSKeyGenerator crypto = new PKCSKeyGenerator(LastLoginPassword' LastLoginSalt' 5' 1);                  ICryptoTransform cryptoTransform = crypto.Decryptor;                  byte[] decrypted = cryptoTransform.TransformFinalBlock(encryptedLogin' 0' encryptedLogin.Length);                  short userLength = IPAddress.HostToNetworkOrder(BitConverter.ToInt16(decrypted' 0));                  byte[] user = decrypted.Skip(2).Take(userLength).ToArray();                  byte[] password = decrypted.Skip(4 + userLength).ToArray();                  LastLogin result = new LastLogin();                  result.Username = System.Text.Encoding.UTF8.GetString(user);                  result.Password = System.Text.Encoding.UTF8.GetString(password);                  return result;              }              catch              {                  return null;              }
Magic Number,Craft.Net.Client,LastLogin,C:\repos\SirCmpwn_Craft.Net\source\Craft.Net.Client\LastLogin.cs,GetLastLogin,The following statement contains a magic number: try              {                  byte[] encryptedLogin = File.ReadAllBytes(lastLoginFile);                  PKCSKeyGenerator crypto = new PKCSKeyGenerator(LastLoginPassword' LastLoginSalt' 5' 1);                  ICryptoTransform cryptoTransform = crypto.Decryptor;                  byte[] decrypted = cryptoTransform.TransformFinalBlock(encryptedLogin' 0' encryptedLogin.Length);                  short userLength = IPAddress.HostToNetworkOrder(BitConverter.ToInt16(decrypted' 0));                  byte[] user = decrypted.Skip(2).Take(userLength).ToArray();                  byte[] password = decrypted.Skip(4 + userLength).ToArray();                  LastLogin result = new LastLogin();                  result.Username = System.Text.Encoding.UTF8.GetString(user);                  result.Password = System.Text.Encoding.UTF8.GetString(password);                  return result;              }              catch              {                  return null;              }
Magic Number,Craft.Net.Client,LastLogin,C:\repos\SirCmpwn_Craft.Net\source\Craft.Net.Client\LastLogin.cs,SetLastLogin,The following statement contains a magic number: PKCSKeyGenerator crypto = new PKCSKeyGenerator(LastLoginPassword' LastLoginSalt' 5' 1);
Magic Number,Craft.Net.Client,MinecraftClient,C:\repos\SirCmpwn_Craft.Net\source\Craft.Net.Client\MinecraftClient.cs,PhysicsWorker,The following statement contains a magic number: while (NetworkWorkerThread.IsAlive)              {                  if (nextPhysicsUpdate < DateTime.Now)                  {                      //We need to wait for a login packet to initialize the physics subsystem                      if (World != null && engine == null)                      {                          // 50 ms / update for 20 ticks per second                          engine = new PhysicsEngine(World.World' Block.PhysicsProvider' 50);                          engine.AddEntity(this);                      }                      nextPhysicsUpdate = DateTime.Now.AddMilliseconds(50);                      try                      {                          engine.Update();                      }                      catch (Exception)                      {                          // Sometimes the world hasn't loaded yet' so the Phyics update can't properly read blocks and                          // throws an exception.                      }                  }                  else                  {                      var sleepTime = (nextPhysicsUpdate - DateTime.Now).Milliseconds;                      if (sleepTime > 0)                      {                          Thread.Sleep(sleepTime);                      }                  }              }
Magic Number,Craft.Net.Client,MinecraftClient,C:\repos\SirCmpwn_Craft.Net\source\Craft.Net.Client\MinecraftClient.cs,PhysicsWorker,The following statement contains a magic number: while (NetworkWorkerThread.IsAlive)              {                  if (nextPhysicsUpdate < DateTime.Now)                  {                      //We need to wait for a login packet to initialize the physics subsystem                      if (World != null && engine == null)                      {                          // 50 ms / update for 20 ticks per second                          engine = new PhysicsEngine(World.World' Block.PhysicsProvider' 50);                          engine.AddEntity(this);                      }                      nextPhysicsUpdate = DateTime.Now.AddMilliseconds(50);                      try                      {                          engine.Update();                      }                      catch (Exception)                      {                          // Sometimes the world hasn't loaded yet' so the Phyics update can't properly read blocks and                          // throws an exception.                      }                  }                  else                  {                      var sleepTime = (nextPhysicsUpdate - DateTime.Now).Milliseconds;                      if (sleepTime > 0)                      {                          Thread.Sleep(sleepTime);                      }                  }              }
Magic Number,Craft.Net.Client,MinecraftClient,C:\repos\SirCmpwn_Craft.Net\source\Craft.Net.Client\MinecraftClient.cs,NetworkWorker,The following statement contains a magic number: while (true)              {                  if (IsSpawned && nextPlayerUpdate < DateTime.Now)                  {                      nextPlayerUpdate = DateTime.Now.AddMilliseconds(100);                      lock (_positionLock)                      {                          SendPacket(new PlayerPacket(OnGround));                            if (_positionChanged)                          {                              SendPacket(new PlayerPositionPacket(                                  Position.X'                                  Position.Y'                                  Position.Z'                                  Position.Y - 1.62'                                  OnGround                              ));                              _positionChanged = false;                          }                      }                  }                  // Send queued packets                  while (PacketQueue.Count != 0)                  {                      IPacket packet;                      if (PacketQueue.TryDequeue(out packet))                      {                          try                          {                              // Write packet                              NetworkManager.WritePacket(packet' PacketDirection.Serverbound);                              if (packet is DisconnectPacket)                                  return;                          }                          catch { /* TODO */ }                      }                  }                  // Read incoming packets                  var readTimeout = DateTime.Now.AddMilliseconds(20); // Maximum read time given to server per iteration                  while (NetworkStream.DataAvailable && DateTime.Now < readTimeout)                  {                      try                      {                          var packet = NetworkManager.ReadPacket(PacketDirection.Clientbound);                          HandlePacket(packet);                          if (packet is DisconnectPacket)                          {                              Console.WriteLine(((DisconnectPacket)packet).Reason);                              return;                          }                      }                      catch (Exception e)                       {                           // TODO: OnNetworkException or something                          Console.WriteLine(e);                      }                  }                  NetworkingReset.Set();                  NetworkingReset.Reset();                  Thread.Sleep(1);              }
Magic Number,Craft.Net.Client,MinecraftClient,C:\repos\SirCmpwn_Craft.Net\source\Craft.Net.Client\MinecraftClient.cs,NetworkWorker,The following statement contains a magic number: while (true)              {                  if (IsSpawned && nextPlayerUpdate < DateTime.Now)                  {                      nextPlayerUpdate = DateTime.Now.AddMilliseconds(100);                      lock (_positionLock)                      {                          SendPacket(new PlayerPacket(OnGround));                            if (_positionChanged)                          {                              SendPacket(new PlayerPositionPacket(                                  Position.X'                                  Position.Y'                                  Position.Z'                                  Position.Y - 1.62'                                  OnGround                              ));                              _positionChanged = false;                          }                      }                  }                  // Send queued packets                  while (PacketQueue.Count != 0)                  {                      IPacket packet;                      if (PacketQueue.TryDequeue(out packet))                      {                          try                          {                              // Write packet                              NetworkManager.WritePacket(packet' PacketDirection.Serverbound);                              if (packet is DisconnectPacket)                                  return;                          }                          catch { /* TODO */ }                      }                  }                  // Read incoming packets                  var readTimeout = DateTime.Now.AddMilliseconds(20); // Maximum read time given to server per iteration                  while (NetworkStream.DataAvailable && DateTime.Now < readTimeout)                  {                      try                      {                          var packet = NetworkManager.ReadPacket(PacketDirection.Clientbound);                          HandlePacket(packet);                          if (packet is DisconnectPacket)                          {                              Console.WriteLine(((DisconnectPacket)packet).Reason);                              return;                          }                      }                      catch (Exception e)                       {                           // TODO: OnNetworkException or something                          Console.WriteLine(e);                      }                  }                  NetworkingReset.Set();                  NetworkingReset.Reset();                  Thread.Sleep(1);              }
Magic Number,Craft.Net.Client,MinecraftClient,C:\repos\SirCmpwn_Craft.Net\source\Craft.Net.Client\MinecraftClient.cs,NetworkWorker,The following statement contains a magic number: while (true)              {                  if (IsSpawned && nextPlayerUpdate < DateTime.Now)                  {                      nextPlayerUpdate = DateTime.Now.AddMilliseconds(100);                      lock (_positionLock)                      {                          SendPacket(new PlayerPacket(OnGround));                            if (_positionChanged)                          {                              SendPacket(new PlayerPositionPacket(                                  Position.X'                                  Position.Y'                                  Position.Z'                                  Position.Y - 1.62'                                  OnGround                              ));                              _positionChanged = false;                          }                      }                  }                  // Send queued packets                  while (PacketQueue.Count != 0)                  {                      IPacket packet;                      if (PacketQueue.TryDequeue(out packet))                      {                          try                          {                              // Write packet                              NetworkManager.WritePacket(packet' PacketDirection.Serverbound);                              if (packet is DisconnectPacket)                                  return;                          }                          catch { /* TODO */ }                      }                  }                  // Read incoming packets                  var readTimeout = DateTime.Now.AddMilliseconds(20); // Maximum read time given to server per iteration                  while (NetworkStream.DataAvailable && DateTime.Now < readTimeout)                  {                      try                      {                          var packet = NetworkManager.ReadPacket(PacketDirection.Clientbound);                          HandlePacket(packet);                          if (packet is DisconnectPacket)                          {                              Console.WriteLine(((DisconnectPacket)packet).Reason);                              return;                          }                      }                      catch (Exception e)                       {                           // TODO: OnNetworkException or something                          Console.WriteLine(e);                      }                  }                  NetworkingReset.Set();                  NetworkingReset.Reset();                  Thread.Sleep(1);              }
Magic Number,Craft.Net.Client,MinecraftClient,C:\repos\SirCmpwn_Craft.Net\source\Craft.Net.Client\MinecraftClient.cs,LookAt,The following statement contains a magic number: var delta = position - new Vector3(this.Position.X' this.Position.Y + 1.62' this.Position.Z);
Magic Number,Craft.Net.Client,MinecraftClient,C:\repos\SirCmpwn_Craft.Net\source\Craft.Net.Client\MinecraftClient.cs,Move,The following statement contains a magic number: CurrentMoveTask = Task.Factory.StartNew(() =>                                                      {                  var pos = this.Position + new Vector3(distanceX' 0' distanceZ);                    int xDirection = 1;                  int zDirection = 1;                  if (distanceX < 0)                  {                      xDirection = -1;                      distanceX *= -1;                  }                  if (distanceZ < 0)                  {                      zDirection = -1;                      distanceZ *= -1;                  }                    int maxMove = Math.Max(distanceX' distanceZ);                  for (int i = 0; i < maxMove; i++)                  {                      int newX = 0' newZ = 0;                      if (i < distanceX)                           newX = xDirection;                      if (i < distanceZ)                          newZ = zDirection;                        this.Position += new Vector3(newX' 0' newZ);                      this.LookAt(pos + new Vector3(0' 1.62' 0));                        Thread.Sleep(100);                        if (TaskCancellationToken.IsCancellationRequested)                          return pos;                  }                    return pos;              }' TaskCancellationToken.Token);
Magic Number,Craft.Net.Client,MinecraftClient,C:\repos\SirCmpwn_Craft.Net\source\Craft.Net.Client\MinecraftClient.cs,Move,The following statement contains a magic number: CurrentMoveTask = Task.Factory.StartNew(() =>                                                      {                  var pos = this.Position + new Vector3(distanceX' 0' distanceZ);                    int xDirection = 1;                  int zDirection = 1;                  if (distanceX < 0)                  {                      xDirection = -1;                      distanceX *= -1;                  }                  if (distanceZ < 0)                  {                      zDirection = -1;                      distanceZ *= -1;                  }                    int maxMove = Math.Max(distanceX' distanceZ);                  for (int i = 0; i < maxMove; i++)                  {                      int newX = 0' newZ = 0;                      if (i < distanceX)                           newX = xDirection;                      if (i < distanceZ)                          newZ = zDirection;                        this.Position += new Vector3(newX' 0' newZ);                      this.LookAt(pos + new Vector3(0' 1.62' 0));                        Thread.Sleep(100);                        if (TaskCancellationToken.IsCancellationRequested)                          return pos;                  }                    return pos;              }' TaskCancellationToken.Token);
Magic Number,Craft.Net.Client.Handlers,LoginHandlers,C:\repos\SirCmpwn_Craft.Net\source\Craft.Net.Client\Handlers\LoginHandlers.cs,EncryptionKeyRequest,The following statement contains a magic number: client.SharedSecret = new byte[16];
Magic Number,Craft.Net.Client.Handlers,WorldHandlers,C:\repos\SirCmpwn_Craft.Net\source\Craft.Net.Client\Handlers\WorldHandlers.cs,GetSectionCount,The following statement contains a magic number: for (int y = 0; y < 16; y++)              {                  if ((bitMap & (1 << y)) > 0)                      sectionCount++;              }
Magic Number,Craft.Net.Client.Handlers,WorldHandlers,C:\repos\SirCmpwn_Craft.Net\source\Craft.Net.Client\Handlers\WorldHandlers.cs,AddChunk,The following statement contains a magic number: for (int y = 0; y < 16; y++)              {                  if ((primaryBitMap & (1 << y)) > 0)                  {                      // Blocks                      Array.Copy(data' y * BlockDataLength' chunk.Sections[y].Blocks' 0' BlockDataLength);                      // Metadata                      Array.Copy(data' (BlockDataLength * sectionCount) + (y * NibbleDataLength)'                          chunk.Sections[y].Metadata.Data' 0' NibbleDataLength);                      // Light                      Array.Copy(data' ((BlockDataLength + NibbleDataLength) * sectionCount) + (y * NibbleDataLength)'                          chunk.Sections[y].BlockLight.Data' 0' NibbleDataLength);                      // Sky light                      if (lightIncluded)                      {                          Array.Copy(data' ((BlockDataLength + NibbleDataLength + NibbleDataLength) * sectionCount) + (y * NibbleDataLength)'                              chunk.Sections[y].SkyLight.Data' 0' NibbleDataLength);                      }                  }              }
Magic Number,Craft.Net.Client.Handlers,WorldHandlers,C:\repos\SirCmpwn_Craft.Net\source\Craft.Net.Client\Handlers\WorldHandlers.cs,MapChunkBulk,The following statement contains a magic number: foreach (var metadata in packet.ChunkMetadata)              {                  var chunkLength = (BlockDataLength + (NibbleDataLength * 2) + (packet.LightIncluded ? NibbleDataLength : 0)) *                      GetSectionCount(metadata.PrimaryBitMap) +                          NibbleDataLength * GetSectionCount(metadata.AddBitMap) + (Chunk.Width * Chunk.Depth);                    var chunkData = new byte[chunkLength];                  Array.Copy(data' offset' chunkData' 0' chunkLength);                  AddChunk(client' metadata.ChunkX' metadata.ChunkZ' metadata.PrimaryBitMap' metadata.AddBitMap' packet.LightIncluded' true' chunkData);                    offset += chunkLength;              }
Magic Number,Craft.Net.Client.Handlers,WorldHandlers,C:\repos\SirCmpwn_Craft.Net\source\Craft.Net.Client\Handlers\WorldHandlers.cs,GetRelativeChunkPosition,The following statement contains a magic number: return new Coordinates2D(coordinates.X - regionX * 32' coordinates.Z - regionZ * 32);
Magic Number,Craft.Net.Client.Handlers,WorldHandlers,C:\repos\SirCmpwn_Craft.Net\source\Craft.Net.Client\Handlers\WorldHandlers.cs,GetRelativeChunkPosition,The following statement contains a magic number: return new Coordinates2D(coordinates.X - regionX * 32' coordinates.Z - regionZ * 32);
Magic Number,Craft.Net.Client.Handlers,EntityHandlers,C:\repos\SirCmpwn_Craft.Net\source\Craft.Net.Client\Handlers\EntityHandlers.cs,PlayerPositionAndLook,The following statement contains a magic number: if (Math.Abs(packet.X) < 0.01 && Math.Abs(packet.X) > 0)                  return;
Magic Number,Craft.Net.Client.Handlers,EntityHandlers,C:\repos\SirCmpwn_Craft.Net\source\Craft.Net.Client\Handlers\EntityHandlers.cs,PlayerPositionAndLook,The following statement contains a magic number: client.SendPacket(new PlayerPositionPacket(client.Position.X' client.Position.Y' client.Position.Z' client.Position.Y - 1.62' true));
