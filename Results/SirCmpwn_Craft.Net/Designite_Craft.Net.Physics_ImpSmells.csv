Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Craft.Net.Physics,PhysicsEngine,C:\repos\SirCmpwn_Craft.Net\source\Craft.Net.Physics\PhysicsEngine.cs,CheckWithTerrain,Cyclomatic complexity of the method is 8
Complex Method,Craft.Net.Physics,PhysicsEngine,C:\repos\SirCmpwn_Craft.Net\source\Craft.Net.Physics\PhysicsEngine.cs,AdjustVelocityX,Cyclomatic complexity of the method is 12
Complex Method,Craft.Net.Physics,PhysicsEngine,C:\repos\SirCmpwn_Craft.Net\source\Craft.Net.Physics\PhysicsEngine.cs,AdjustVelocityY,Cyclomatic complexity of the method is 16
Complex Method,Craft.Net.Physics,PhysicsEngine,C:\repos\SirCmpwn_Craft.Net\source\Craft.Net.Physics\PhysicsEngine.cs,AdjustVelocityZ,Cyclomatic complexity of the method is 12
Long Statement,Craft.Net.Physics,PhysicsEngine,C:\repos\SirCmpwn_Craft.Net\source\Craft.Net.Physics\PhysicsEngine.cs,CheckWithTerrain,The length of the statement  "            if (entity.Position.Y + entity.Velocity.Y >= 0 && entity.Position.Y + entity.Velocity.Y <= 255) // Don't do checks outside the map " is 130.
Long Statement,Craft.Net.Physics,PhysicsEngine,C:\repos\SirCmpwn_Craft.Net\source\Craft.Net.Physics\PhysicsEngine.cs,AdjustVelocityX,The length of the statement  "                    new Vector3(entity.BoundingBox.Min.X + entity.Velocity.X' entity.BoundingBox.Min.Y' entity.BoundingBox.Min.Z) - (entity.Size / 2)' " is 130.
Long Statement,Craft.Net.Physics,PhysicsEngine,C:\repos\SirCmpwn_Craft.Net\source\Craft.Net.Physics\PhysicsEngine.cs,AdjustVelocityY,The length of the statement  "                    new Vector3(entity.BoundingBox.Min.X' entity.BoundingBox.Min.Y + entity.Velocity.Y' entity.BoundingBox.Min.Z) - (entity.Size / 2)' " is 130.
Long Statement,Craft.Net.Physics,PhysicsEngine,C:\repos\SirCmpwn_Craft.Net\source\Craft.Net.Physics\PhysicsEngine.cs,AdjustVelocityZ,The length of the statement  "                    new Vector3(entity.BoundingBox.Min.X' entity.BoundingBox.Min.Y' entity.BoundingBox.Min.Z + entity.Velocity.Z) - (entity.Size / 2)' " is 130.
Magic Number,Craft.Net.Physics,PhysicsEngine,C:\repos\SirCmpwn_Craft.Net\source\Craft.Net.Physics\PhysicsEngine.cs,CheckWithTerrain,The following statement contains a magic number: if (entity.Position.Y + entity.Velocity.Y >= 0 && entity.Position.Y + entity.Velocity.Y <= 255) // Don't do checks outside the map              {                  bool fireEvent = entity.Velocity != Vector3.Zero;                  // Do terrain collisions                  if (AdjustVelocityX(entity' world' out collisionPoint' out collisionDirection))                  {                      if (fireEvent)                          entity.TerrainCollision(this' collisionPoint' collisionDirection);                  }                  if (AdjustVelocityY(entity' world' out collisionPoint' out collisionDirection))                  {                      entity.Velocity *= new Vector3(0.2' 1' 0.2); // TODO: More sophisticated friction                      if (fireEvent)                          entity.TerrainCollision(this' collisionPoint' collisionDirection);                  }                  if (AdjustVelocityZ(entity' world' out collisionPoint' out collisionDirection))                  {                      if (fireEvent)                          entity.TerrainCollision(this' collisionPoint' collisionDirection);                  }              }
Magic Number,Craft.Net.Physics,PhysicsEngine,C:\repos\SirCmpwn_Craft.Net\source\Craft.Net.Physics\PhysicsEngine.cs,CheckWithTerrain,The following statement contains a magic number: if (entity.Position.Y + entity.Velocity.Y >= 0 && entity.Position.Y + entity.Velocity.Y <= 255) // Don't do checks outside the map              {                  bool fireEvent = entity.Velocity != Vector3.Zero;                  // Do terrain collisions                  if (AdjustVelocityX(entity' world' out collisionPoint' out collisionDirection))                  {                      if (fireEvent)                          entity.TerrainCollision(this' collisionPoint' collisionDirection);                  }                  if (AdjustVelocityY(entity' world' out collisionPoint' out collisionDirection))                  {                      entity.Velocity *= new Vector3(0.2' 1' 0.2); // TODO: More sophisticated friction                      if (fireEvent)                          entity.TerrainCollision(this' collisionPoint' collisionDirection);                  }                  if (AdjustVelocityZ(entity' world' out collisionPoint' out collisionDirection))                  {                      if (fireEvent)                          entity.TerrainCollision(this' collisionPoint' collisionDirection);                  }              }
Magic Number,Craft.Net.Physics,PhysicsEngine,C:\repos\SirCmpwn_Craft.Net\source\Craft.Net.Physics\PhysicsEngine.cs,CheckWithTerrain,The following statement contains a magic number: if (entity.Position.Y + entity.Velocity.Y >= 0 && entity.Position.Y + entity.Velocity.Y <= 255) // Don't do checks outside the map              {                  bool fireEvent = entity.Velocity != Vector3.Zero;                  // Do terrain collisions                  if (AdjustVelocityX(entity' world' out collisionPoint' out collisionDirection))                  {                      if (fireEvent)                          entity.TerrainCollision(this' collisionPoint' collisionDirection);                  }                  if (AdjustVelocityY(entity' world' out collisionPoint' out collisionDirection))                  {                      entity.Velocity *= new Vector3(0.2' 1' 0.2); // TODO: More sophisticated friction                      if (fireEvent)                          entity.TerrainCollision(this' collisionPoint' collisionDirection);                  }                  if (AdjustVelocityZ(entity' world' out collisionPoint' out collisionDirection))                  {                      if (fireEvent)                          entity.TerrainCollision(this' collisionPoint' collisionDirection);                  }              }
Magic Number,Craft.Net.Physics,PhysicsEngine,C:\repos\SirCmpwn_Craft.Net\source\Craft.Net.Physics\PhysicsEngine.cs,AdjustVelocityX,The following statement contains a magic number: if (entity.Velocity.X < 0)              {                  TempBoundingBox = new BoundingBox(                      new Vector3(entity.BoundingBox.Min.X + entity.Velocity.X' entity.BoundingBox.Min.Y' entity.BoundingBox.Min.Z) - (entity.Size / 2)'                      new Vector3(entity.BoundingBox.Max.X' entity.BoundingBox.Max.Y' entity.BoundingBox.Max.Z) - (entity.Size / 2)                  );                    maxX = (int)(TempBoundingBox.Max.X);                  minX = (int)(TempBoundingBox.Min.X + entity.Velocity.X);              }              else              {                  TempBoundingBox = new BoundingBox(                      entity.BoundingBox.Min - (entity.Size / 2)'                      new Vector3(                      entity.BoundingBox.Max.X + entity.Velocity.X' entity.BoundingBox.Max.Y' entity.BoundingBox.Max.Z) - (entity.Size / 2)                  );                  minX = (int)(entity.BoundingBox.Min.X);                  maxX = (int)(entity.BoundingBox.Max.X + entity.Velocity.X);              }
Magic Number,Craft.Net.Physics,PhysicsEngine,C:\repos\SirCmpwn_Craft.Net\source\Craft.Net.Physics\PhysicsEngine.cs,AdjustVelocityX,The following statement contains a magic number: if (entity.Velocity.X < 0)              {                  TempBoundingBox = new BoundingBox(                      new Vector3(entity.BoundingBox.Min.X + entity.Velocity.X' entity.BoundingBox.Min.Y' entity.BoundingBox.Min.Z) - (entity.Size / 2)'                      new Vector3(entity.BoundingBox.Max.X' entity.BoundingBox.Max.Y' entity.BoundingBox.Max.Z) - (entity.Size / 2)                  );                    maxX = (int)(TempBoundingBox.Max.X);                  minX = (int)(TempBoundingBox.Min.X + entity.Velocity.X);              }              else              {                  TempBoundingBox = new BoundingBox(                      entity.BoundingBox.Min - (entity.Size / 2)'                      new Vector3(                      entity.BoundingBox.Max.X + entity.Velocity.X' entity.BoundingBox.Max.Y' entity.BoundingBox.Max.Z) - (entity.Size / 2)                  );                  minX = (int)(entity.BoundingBox.Min.X);                  maxX = (int)(entity.BoundingBox.Max.X + entity.Velocity.X);              }
Magic Number,Craft.Net.Physics,PhysicsEngine,C:\repos\SirCmpwn_Craft.Net\source\Craft.Net.Physics\PhysicsEngine.cs,AdjustVelocityX,The following statement contains a magic number: if (entity.Velocity.X < 0)              {                  TempBoundingBox = new BoundingBox(                      new Vector3(entity.BoundingBox.Min.X + entity.Velocity.X' entity.BoundingBox.Min.Y' entity.BoundingBox.Min.Z) - (entity.Size / 2)'                      new Vector3(entity.BoundingBox.Max.X' entity.BoundingBox.Max.Y' entity.BoundingBox.Max.Z) - (entity.Size / 2)                  );                    maxX = (int)(TempBoundingBox.Max.X);                  minX = (int)(TempBoundingBox.Min.X + entity.Velocity.X);              }              else              {                  TempBoundingBox = new BoundingBox(                      entity.BoundingBox.Min - (entity.Size / 2)'                      new Vector3(                      entity.BoundingBox.Max.X + entity.Velocity.X' entity.BoundingBox.Max.Y' entity.BoundingBox.Max.Z) - (entity.Size / 2)                  );                  minX = (int)(entity.BoundingBox.Min.X);                  maxX = (int)(entity.BoundingBox.Max.X + entity.Velocity.X);              }
Magic Number,Craft.Net.Physics,PhysicsEngine,C:\repos\SirCmpwn_Craft.Net\source\Craft.Net.Physics\PhysicsEngine.cs,AdjustVelocityX,The following statement contains a magic number: if (entity.Velocity.X < 0)              {                  TempBoundingBox = new BoundingBox(                      new Vector3(entity.BoundingBox.Min.X + entity.Velocity.X' entity.BoundingBox.Min.Y' entity.BoundingBox.Min.Z) - (entity.Size / 2)'                      new Vector3(entity.BoundingBox.Max.X' entity.BoundingBox.Max.Y' entity.BoundingBox.Max.Z) - (entity.Size / 2)                  );                    maxX = (int)(TempBoundingBox.Max.X);                  minX = (int)(TempBoundingBox.Min.X + entity.Velocity.X);              }              else              {                  TempBoundingBox = new BoundingBox(                      entity.BoundingBox.Min - (entity.Size / 2)'                      new Vector3(                      entity.BoundingBox.Max.X + entity.Velocity.X' entity.BoundingBox.Max.Y' entity.BoundingBox.Max.Z) - (entity.Size / 2)                  );                  minX = (int)(entity.BoundingBox.Min.X);                  maxX = (int)(entity.BoundingBox.Max.X + entity.Velocity.X);              }
Magic Number,Craft.Net.Physics,PhysicsEngine,C:\repos\SirCmpwn_Craft.Net\source\Craft.Net.Physics\PhysicsEngine.cs,AdjustVelocityY,The following statement contains a magic number: if (entity.Velocity.Y < 0)              {                  TempBoundingBox = new BoundingBox(                      new Vector3(entity.BoundingBox.Min.X' entity.BoundingBox.Min.Y + entity.Velocity.Y' entity.BoundingBox.Min.Z) - (entity.Size / 2)'                      new Vector3(entity.BoundingBox.Max.X' entity.BoundingBox.Max.Y' entity.BoundingBox.Max.Z) - (entity.Size / 2)                  );                    maxY = (int)(TempBoundingBox.Max.Y);                  minY = (int)(TempBoundingBox.Min.Y + entity.Velocity.Y);              }              else              {                  TempBoundingBox = new BoundingBox(                      entity.BoundingBox.Min - (entity.Size / 2)'                      new Vector3(                      entity.BoundingBox.Max.X' entity.BoundingBox.Max.Y + entity.Velocity.Y' entity.BoundingBox.Max.Z) - (entity.Size / 2)                  );                  minY = (int)(entity.BoundingBox.Min.Y);                  maxY = (int)(entity.BoundingBox.Max.Y + entity.Velocity.Y);              }
Magic Number,Craft.Net.Physics,PhysicsEngine,C:\repos\SirCmpwn_Craft.Net\source\Craft.Net.Physics\PhysicsEngine.cs,AdjustVelocityY,The following statement contains a magic number: if (entity.Velocity.Y < 0)              {                  TempBoundingBox = new BoundingBox(                      new Vector3(entity.BoundingBox.Min.X' entity.BoundingBox.Min.Y + entity.Velocity.Y' entity.BoundingBox.Min.Z) - (entity.Size / 2)'                      new Vector3(entity.BoundingBox.Max.X' entity.BoundingBox.Max.Y' entity.BoundingBox.Max.Z) - (entity.Size / 2)                  );                    maxY = (int)(TempBoundingBox.Max.Y);                  minY = (int)(TempBoundingBox.Min.Y + entity.Velocity.Y);              }              else              {                  TempBoundingBox = new BoundingBox(                      entity.BoundingBox.Min - (entity.Size / 2)'                      new Vector3(                      entity.BoundingBox.Max.X' entity.BoundingBox.Max.Y + entity.Velocity.Y' entity.BoundingBox.Max.Z) - (entity.Size / 2)                  );                  minY = (int)(entity.BoundingBox.Min.Y);                  maxY = (int)(entity.BoundingBox.Max.Y + entity.Velocity.Y);              }
Magic Number,Craft.Net.Physics,PhysicsEngine,C:\repos\SirCmpwn_Craft.Net\source\Craft.Net.Physics\PhysicsEngine.cs,AdjustVelocityY,The following statement contains a magic number: if (entity.Velocity.Y < 0)              {                  TempBoundingBox = new BoundingBox(                      new Vector3(entity.BoundingBox.Min.X' entity.BoundingBox.Min.Y + entity.Velocity.Y' entity.BoundingBox.Min.Z) - (entity.Size / 2)'                      new Vector3(entity.BoundingBox.Max.X' entity.BoundingBox.Max.Y' entity.BoundingBox.Max.Z) - (entity.Size / 2)                  );                    maxY = (int)(TempBoundingBox.Max.Y);                  minY = (int)(TempBoundingBox.Min.Y + entity.Velocity.Y);              }              else              {                  TempBoundingBox = new BoundingBox(                      entity.BoundingBox.Min - (entity.Size / 2)'                      new Vector3(                      entity.BoundingBox.Max.X' entity.BoundingBox.Max.Y + entity.Velocity.Y' entity.BoundingBox.Max.Z) - (entity.Size / 2)                  );                  minY = (int)(entity.BoundingBox.Min.Y);                  maxY = (int)(entity.BoundingBox.Max.Y + entity.Velocity.Y);              }
Magic Number,Craft.Net.Physics,PhysicsEngine,C:\repos\SirCmpwn_Craft.Net\source\Craft.Net.Physics\PhysicsEngine.cs,AdjustVelocityY,The following statement contains a magic number: if (entity.Velocity.Y < 0)              {                  TempBoundingBox = new BoundingBox(                      new Vector3(entity.BoundingBox.Min.X' entity.BoundingBox.Min.Y + entity.Velocity.Y' entity.BoundingBox.Min.Z) - (entity.Size / 2)'                      new Vector3(entity.BoundingBox.Max.X' entity.BoundingBox.Max.Y' entity.BoundingBox.Max.Z) - (entity.Size / 2)                  );                    maxY = (int)(TempBoundingBox.Max.Y);                  minY = (int)(TempBoundingBox.Min.Y + entity.Velocity.Y);              }              else              {                  TempBoundingBox = new BoundingBox(                      entity.BoundingBox.Min - (entity.Size / 2)'                      new Vector3(                      entity.BoundingBox.Max.X' entity.BoundingBox.Max.Y + entity.Velocity.Y' entity.BoundingBox.Max.Z) - (entity.Size / 2)                  );                  minY = (int)(entity.BoundingBox.Min.Y);                  maxY = (int)(entity.BoundingBox.Max.Y + entity.Velocity.Y);              }
Magic Number,Craft.Net.Physics,PhysicsEngine,C:\repos\SirCmpwn_Craft.Net\source\Craft.Net.Physics\PhysicsEngine.cs,AdjustVelocityZ,The following statement contains a magic number: if (entity.Velocity.Z < 0)              {                  TempBoundingBox = new BoundingBox(                      new Vector3(entity.BoundingBox.Min.X' entity.BoundingBox.Min.Y' entity.BoundingBox.Min.Z + entity.Velocity.Z) - (entity.Size / 2)'                      new Vector3(entity.BoundingBox.Max.X' entity.BoundingBox.Max.Y' entity.BoundingBox.Max.Z) - (entity.Size / 2)                  );                    maxZ = (int)(TempBoundingBox.Max.Z);                  minZ = (int)(TempBoundingBox.Min.Z + entity.Velocity.Z);              }              else              {                  TempBoundingBox = new BoundingBox(                      entity.BoundingBox.Min - (entity.Size / 2)'                      new Vector3(                      entity.BoundingBox.Max.X' entity.BoundingBox.Max.Y' entity.BoundingBox.Max.Z + entity.Velocity.Z) - (entity.Size / 2)                  );                  minZ = (int)(entity.BoundingBox.Min.Z);                  maxZ = (int)(entity.BoundingBox.Max.Z + entity.Velocity.Z);              }
Magic Number,Craft.Net.Physics,PhysicsEngine,C:\repos\SirCmpwn_Craft.Net\source\Craft.Net.Physics\PhysicsEngine.cs,AdjustVelocityZ,The following statement contains a magic number: if (entity.Velocity.Z < 0)              {                  TempBoundingBox = new BoundingBox(                      new Vector3(entity.BoundingBox.Min.X' entity.BoundingBox.Min.Y' entity.BoundingBox.Min.Z + entity.Velocity.Z) - (entity.Size / 2)'                      new Vector3(entity.BoundingBox.Max.X' entity.BoundingBox.Max.Y' entity.BoundingBox.Max.Z) - (entity.Size / 2)                  );                    maxZ = (int)(TempBoundingBox.Max.Z);                  minZ = (int)(TempBoundingBox.Min.Z + entity.Velocity.Z);              }              else              {                  TempBoundingBox = new BoundingBox(                      entity.BoundingBox.Min - (entity.Size / 2)'                      new Vector3(                      entity.BoundingBox.Max.X' entity.BoundingBox.Max.Y' entity.BoundingBox.Max.Z + entity.Velocity.Z) - (entity.Size / 2)                  );                  minZ = (int)(entity.BoundingBox.Min.Z);                  maxZ = (int)(entity.BoundingBox.Max.Z + entity.Velocity.Z);              }
Magic Number,Craft.Net.Physics,PhysicsEngine,C:\repos\SirCmpwn_Craft.Net\source\Craft.Net.Physics\PhysicsEngine.cs,AdjustVelocityZ,The following statement contains a magic number: if (entity.Velocity.Z < 0)              {                  TempBoundingBox = new BoundingBox(                      new Vector3(entity.BoundingBox.Min.X' entity.BoundingBox.Min.Y' entity.BoundingBox.Min.Z + entity.Velocity.Z) - (entity.Size / 2)'                      new Vector3(entity.BoundingBox.Max.X' entity.BoundingBox.Max.Y' entity.BoundingBox.Max.Z) - (entity.Size / 2)                  );                    maxZ = (int)(TempBoundingBox.Max.Z);                  minZ = (int)(TempBoundingBox.Min.Z + entity.Velocity.Z);              }              else              {                  TempBoundingBox = new BoundingBox(                      entity.BoundingBox.Min - (entity.Size / 2)'                      new Vector3(                      entity.BoundingBox.Max.X' entity.BoundingBox.Max.Y' entity.BoundingBox.Max.Z + entity.Velocity.Z) - (entity.Size / 2)                  );                  minZ = (int)(entity.BoundingBox.Min.Z);                  maxZ = (int)(entity.BoundingBox.Max.Z + entity.Velocity.Z);              }
Magic Number,Craft.Net.Physics,PhysicsEngine,C:\repos\SirCmpwn_Craft.Net\source\Craft.Net.Physics\PhysicsEngine.cs,AdjustVelocityZ,The following statement contains a magic number: if (entity.Velocity.Z < 0)              {                  TempBoundingBox = new BoundingBox(                      new Vector3(entity.BoundingBox.Min.X' entity.BoundingBox.Min.Y' entity.BoundingBox.Min.Z + entity.Velocity.Z) - (entity.Size / 2)'                      new Vector3(entity.BoundingBox.Max.X' entity.BoundingBox.Max.Y' entity.BoundingBox.Max.Z) - (entity.Size / 2)                  );                    maxZ = (int)(TempBoundingBox.Max.Z);                  minZ = (int)(TempBoundingBox.Min.Z + entity.Velocity.Z);              }              else              {                  TempBoundingBox = new BoundingBox(                      entity.BoundingBox.Min - (entity.Size / 2)'                      new Vector3(                      entity.BoundingBox.Max.X' entity.BoundingBox.Max.Y' entity.BoundingBox.Max.Z + entity.Velocity.Z) - (entity.Size / 2)                  );                  minZ = (int)(entity.BoundingBox.Min.Z);                  maxZ = (int)(entity.BoundingBox.Max.Z + entity.Velocity.Z);              }
