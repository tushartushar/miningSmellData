Implementation smell,Namespace,Class,File,Method,Description
Complex Method,APIComparer.Backend.Tests,StatsCollector,C:\research\architectureSmells\repos\Particular_APIComparer\APIComparer.Backend.Tests\TopXNugets.cs,Report,Cyclomatic complexity of the method is 9
Long Statement,APIComparer.Backend.Tests,StatsCollector,C:\research\architectureSmells\repos\Particular_APIComparer\APIComparer.Backend.Tests\TopXNugets.cs,Report,The length of the statement  "                    var minor = versions.Last(p => p.Version.Version.Major == latest.Version.Version.Major && p.Version.Version.Minor == latest.Version.Version.Minor); " is 147.
Long Statement,APIComparer.Backend.Tests,VersionReport,C:\research\architectureSmells\repos\Particular_APIComparer\APIComparer.Backend.Tests\TopXNugets.cs,Report,The length of the statement  "                    return $"<a title=\"Comparing {Version}...{Current}\" href=\"http://apicomparer.particular.net/Compare/{PackageId}/{Version}...{Current}\">{Diff.BreakingChanges}</a>"; " is 167.
Magic Number,APIComparer.Backend.Tests,TopXNugets,C:\research\architectureSmells\repos\Particular_APIComparer\APIComparer.Backend.Tests\TopXNugets.cs,Should_calculate_stats_for_top_25_packages,The following statement contains a magic number: var packages = repo.Search(String.Empty' Frameworks' false)                  .Take(50)                  .ToList();
Magic Number,APIComparer.Backend.Tests,TopXNugets,C:\research\architectureSmells\repos\Particular_APIComparer\APIComparer.Backend.Tests\TopXNugets.cs,Should_calculate_stats_for_top_25_packages,The following statement contains a magic number: statCollector.Limit = 25;
Magic Number,APIComparer.Backend.Tests,TopXNugets,C:\research\architectureSmells\repos\Particular_APIComparer\APIComparer.Backend.Tests\TopXNugets.cs,Should_calculate_stats_for_NServiceBus_packages,The following statement contains a magic number: var packages = repo.Search("NServiceBus"' Frameworks' false)                  .Take(50)                  .ToList()                  .Where(p => p.Authors.Contains("NServiceBus Ltd"))                  .OrderByDescending(p => p.DownloadCount)                  .ToList();
