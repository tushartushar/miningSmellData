Implementation smell,Namespace,Class,File,Method,Description
Long Statement,APIComparer.Backend,CompareSetReporter,C:\repos\Particular_APIComparer\APIComparer.Backend\CompareSetReporter.cs,ReportFailure,The length of the statement  "            File.WriteAllText(resultPath' $"{packageDescription.PackageId} comparison between {packageDescription.Versions.LeftVersion} and {packageDescription.Versions.RightVersion} has failed with the following error: {exception.Message}"); " is 230.
Long Statement,APIComparer.Backend,CompareSetReporter,C:\repos\Particular_APIComparer\APIComparer.Backend\CompareSetReporter.cs,DetermineAndCreateResultPathIfNotExistant,The length of the statement  "            var resultFile = $"{description.PackageId}-{description.Versions.LeftVersion}...{description.Versions.RightVersion}.html"; " is 122.
Long Statement,APIComparer.Backend,CompareSetReporter,C:\repos\Particular_APIComparer\APIComparer.Backend\CompareSetReporter.cs,DetermineAndCreateResultPathIfNotExistant,The length of the statement  "                throw new Exception("No root path could be found. If in development please set the `APICOMPARER_WWWROOT` env variable to the root folder of the webproject"); " is 157.
Long Statement,APIComparer.Backend,ComparisonHandler,C:\repos\Particular_APIComparer\APIComparer.Backend\ComparisonHandler.cs,Handle,The length of the statement  "            log.Info($"Received request to handle comparison for '{message.PackageId}' versions '{message.LeftVersion}' and '{message.RightVersion}'"); " is 139.
Long Statement,APIComparer.Backend,ComparisonHandler,C:\repos\Particular_APIComparer\APIComparer.Backend\ComparisonHandler.cs,Handle,The length of the statement  "                log.Info($"Failed to process request to handle comparison for '{message.PackageId}' versions '{message.LeftVersion}' and '{message.RightVersion}'"); " is 148.
Long Statement,APIComparer.Backend,NuGetDownloader,C:\repos\Particular_APIComparer\APIComparer.Backend\NuGetDownloader.cs,DownloadAndExtractVersion,The length of the statement  "            var pkg = PackageRepositoryHelper.ResolvePackage(packageManager.SourceRepository' packageManager.LocalRepository' package' semVer' false); " is 138.
Magic Number,APIComparer.Backend.Reporting,ViewModelBuilder,C:\repos\Particular_APIComparer\APIComparer.Backend\Reporting\ViewModelBuilder.cs,BuildTargets,The following statement contains a magic number: return                  from diffedSet in diffedCompareSets                  let diff = diffedSet.Diff                  let set = diffedSet.Set                  let removedPublicTypes = BuildRemovedPublicTypes(diff)                  let typesMadeInternal = BuildTypesMadeInternal(diff)                  let typeDifferences = BuildTypeDifferences(diff)                  let hasChanges = removedPublicTypes.Any() || typesMadeInternal.Any() || typeDifferences.Any()                  let count = setCount++                  select new TargetReport                  {                      Name = set.Name'                      ShortName = diffedCompareSets.Length < 5 ? set.Name : "Set #" + count'                      ComparedTo = !string.IsNullOrEmpty(set.ComparedTo) ? $" (Compared To {set.ComparedTo})" : null'                      noLongerSupported = diff is EmptyDiff'                      hasRemovedPublicTypes = removedPublicTypes.Any()'                      removedPublicTypes = removedPublicTypes'                      hasTypesMadeInternal = typesMadeInternal.Any()'                      typesMadeInternal = typesMadeInternal'                      hasTypeDifferences = typeDifferences.Any()'                      typeDifferences = typeDifferences'                      hasChanges = hasChanges                  };
