Implementation smell,Namespace,Class,File,Method,Description
Long Method,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,Parse,The method has 298 lines of code.
Long Method,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The method has 764 lines of code.
Long Method,HtmlAgilityPack,HtmlNode,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNode.cs,WriteTo,The method has 124 lines of code.
Long Method,HtmlAgilityPack,HtmlWeb,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlWeb.cs,Get,The method has 130 lines of code.
Complex Method,AniWrap,PostSender,C:\repos\diantahoc_AniWrap\AniWrap\PostSender.cs,SendReply,Cyclomatic complexity of the method is 9
Complex Method,AniWrap,PostSender,C:\repos\diantahoc_AniWrap\AniWrap\PostSender.cs,MakeThread,Cyclomatic complexity of the method is 9
Complex Method,AniWrap,PostSender,C:\repos\diantahoc_AniWrap\AniWrap\PostSender.cs,work,Cyclomatic complexity of the method is 14
Complex Method,AniWrap,PostSenderResponse,C:\repos\diantahoc_AniWrap\AniWrap\PostSender.cs,get_status,Cyclomatic complexity of the method is 15
Complex Method,AniWrap,AniWrap,C:\repos\diantahoc_AniWrap\AniWrap\AniWrap.cs,GetCatalog,Cyclomatic complexity of the method is 11
Complex Method,AniWrap,AniWrap,C:\repos\diantahoc_AniWrap\AniWrap\AniWrap.cs,GetPage,Cyclomatic complexity of the method is 12
Complex Method,AniWrap,AniWrap,C:\repos\diantahoc_AniWrap\AniWrap\AniWrap.cs,GetThreadData,Cyclomatic complexity of the method is 11
Complex Method,AniWrap,AniWrap,C:\repos\diantahoc_AniWrap\AniWrap\AniWrap.cs,GetBoardThreadsID,Cyclomatic complexity of the method is 11
Complex Method,AniWrap,AniWrap,C:\repos\diantahoc_AniWrap\AniWrap\AniWrap.cs,ParseThread,Cyclomatic complexity of the method is 12
Complex Method,AniWrap,AniWrap,C:\repos\diantahoc_AniWrap\AniWrap\AniWrap.cs,ParseReply,Cyclomatic complexity of the method is 9
Complex Method,AniWrap,AniWrap,C:\repos\diantahoc_AniWrap\AniWrap\AniWrap.cs,parse_tag,Cyclomatic complexity of the method is 8
Complex Method,AniWrap,AniWrap,C:\repos\diantahoc_AniWrap\AniWrap\AniWrap.cs,ReportPost,Cyclomatic complexity of the method is 23
Complex Method,AniWrap,AniWrap,C:\repos\diantahoc_AniWrap\AniWrap\AniWrap.cs,DeletePost,Cyclomatic complexity of the method is 19
Complex Method,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,Load,Cyclomatic complexity of the method is 11
Complex Method,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,CloseCurrentNode,Cyclomatic complexity of the method is 16
Complex Method,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,NewCheck,Cyclomatic complexity of the method is 18
Complex Method,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,Parse,Cyclomatic complexity of the method is 138
Complex Method,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,PushNodeEnd,Cyclomatic complexity of the method is 11
Complex Method,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,ReadDocumentEncoding,Cyclomatic complexity of the method is 8
Complex Method,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,DeEntitize,Cyclomatic complexity of the method is 8
Complex Method,HtmlAgilityPack,HtmlNode,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNode.cs,HtmlNode,Cyclomatic complexity of the method is 15
Complex Method,HtmlAgilityPack,HtmlNode,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNode.cs,CloneNode,Cyclomatic complexity of the method is 11
Complex Method,HtmlAgilityPack,HtmlNode,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNode.cs,WriteTo,Cyclomatic complexity of the method is 45
Complex Method,HtmlAgilityPack,HtmlNode,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNode.cs,WriteTo,Cyclomatic complexity of the method is 24
Complex Method,HtmlAgilityPack,HtmlNode,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNode.cs,CloseNode,Cyclomatic complexity of the method is 8
Complex Method,HtmlAgilityPack,HtmlNode,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNode.cs,WriteAttribute,Cyclomatic complexity of the method is 9
Complex Method,HtmlAgilityPack,HtmlNode,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNode.cs,WriteAttributes,Cyclomatic complexity of the method is 14
Complex Method,HtmlAgilityPack,HtmlNodeNavigator,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNodeNavigator.cs,InternalTrace,Cyclomatic complexity of the method is 14
Complex Method,HtmlAgilityPack,HtmlWeb,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlWeb.cs,GetExtensionForContentType,Cyclomatic complexity of the method is 9
Complex Method,HtmlAgilityPack,HtmlWeb,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlWeb.cs,Get,Cyclomatic complexity of the method is 23
Complex Method,HtmlAgilityPack,MixedCodeDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\MixedCodeDocument.cs,Parse,Cyclomatic complexity of the method is 11
Long Parameter List,AniWrap,PostSender,C:\repos\diantahoc_AniWrap\AniWrap\PostSender.cs,work,The method has 5 parameters.
Long Parameter List,AniWrap,AniWrap,C:\repos\diantahoc_AniWrap\AniWrap\AniWrap.cs,DeletePost,The method has 5 parameters.
Long Parameter List,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,AddError,The method has 6 parameters.
Long Parameter List,HtmlAgilityPack,HtmlParseError,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlParseError.cs,HtmlParseError,The method has 6 parameters.
Long Parameter List,HtmlAgilityPack,HtmlWeb,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlWeb.cs,CreateInstance,The method has 5 parameters.
Long Parameter List,HtmlAgilityPack,HtmlWeb,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlWeb.cs,Get,The method has 5 parameters.
Long Parameter List,HtmlAgilityPack,HtmlWeb,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlWeb.cs,Load,The method has 5 parameters.
Long Parameter List,HtmlAgilityPack,HtmlWeb,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlWeb.cs,LoadHtmlAsXml,The method has 5 parameters.
Long Parameter List,HtmlAgilityPack,HtmlWeb,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlWeb.cs,Get,The method has 6 parameters.
Long Identifier,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,Load,The length of the parameter detectEncodingFromByteOrderMarks is 32.
Long Identifier,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,Load,The length of the parameter detectEncodingFromByteOrderMarks is 32.
Long Identifier,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,Load,The length of the parameter detectEncodingFromByteOrderMarks is 32.
Long Identifier,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,Load,The length of the parameter detectEncodingFromByteOrderMarks is 32.
Long Identifier,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,Load,The length of the parameter detectEncodingFromByteOrderMarks is 32.
Long Identifier,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,Load,The length of the parameter detectEncodingFromByteOrderMarks is 32.
Long Identifier,HtmlAgilityPack,HtmlNodeNavigator,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNodeNavigator.cs,HtmlNodeNavigator,The length of the parameter detectEncodingFromByteOrderMarks is 32.
Long Identifier,HtmlAgilityPack,HtmlNodeNavigator,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNodeNavigator.cs,HtmlNodeNavigator,The length of the parameter detectEncodingFromByteOrderMarks is 32.
Long Identifier,HtmlAgilityPack,HtmlNodeNavigator,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNodeNavigator.cs,HtmlNodeNavigator,The length of the parameter detectEncodingFromByteOrderMarks is 32.
Long Identifier,HtmlAgilityPack,HtmlNodeNavigator,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNodeNavigator.cs,HtmlNodeNavigator,The length of the parameter detectEncodingFromByteOrderMarks is 32.
Long Identifier,HtmlAgilityPack,HtmlNodeNavigator,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNodeNavigator.cs,HtmlNodeNavigator,The length of the parameter detectEncodingFromByteOrderMarks is 32.
Long Identifier,HtmlAgilityPack,HtmlNodeNavigator,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNodeNavigator.cs,HtmlNodeNavigator,The length of the parameter detectEncodingFromByteOrderMarks is 32.
Long Identifier,HtmlAgilityPack,MixedCodeDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\MixedCodeDocument.cs,Load,The length of the parameter detectEncodingFromByteOrderMarks is 32.
Long Identifier,HtmlAgilityPack,MixedCodeDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\MixedCodeDocument.cs,Load,The length of the parameter detectEncodingFromByteOrderMarks is 32.
Long Identifier,HtmlAgilityPack,MixedCodeDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\MixedCodeDocument.cs,Load,The length of the parameter detectEncodingFromByteOrderMarks is 32.
Long Identifier,HtmlAgilityPack,MixedCodeDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\MixedCodeDocument.cs,Load,The length of the parameter detectEncodingFromByteOrderMarks is 32.
Long Identifier,HtmlAgilityPack,MixedCodeDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\MixedCodeDocument.cs,Load,The length of the parameter detectEncodingFromByteOrderMarks is 32.
Long Identifier,HtmlAgilityPack,MixedCodeDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\MixedCodeDocument.cs,Load,The length of the parameter detectEncodingFromByteOrderMarks is 32.
Long Statement,AniWrap,PostSender,C:\repos\diantahoc_AniWrap\AniWrap\PostSender.cs,bg_r_DoWork,The length of the statement  "			PostSenderResponse psr = SendReply ((string)data [0]' (int)data [1]' (PostSenderData)data [2]' (SolvedCaptcha)data [3]); " is 120.
Long Statement,AniWrap,PostSender,C:\repos\diantahoc_AniWrap\AniWrap\PostSender.cs,work,The length of the statement  "			buffer = Encoding.ASCII.GetBytes (string.Format ("Content-Disposition: form-data; name=\"{0}\"{1}{1}"' name' Environment.NewLine)); " is 131.
Long Statement,AniWrap,PostSender,C:\repos\diantahoc_AniWrap\AniWrap\PostSender.cs,work,The length of the statement  "			buffer = Encoding.UTF8.GetBytes (string.Format ("Content-Disposition: form-data; name=\"{0}\"; filename=\"{1}\"{2}"' file.Name' file.Filename' Environment.NewLine)); " is 165.
Long Statement,AniWrap,PostSenderResponse,C:\repos\diantahoc_AniWrap\AniWrap\PostSender.cs,get_status,The length of the statement  "	if (str.IndexOf ("verification") != -1 || str.IndexOf ("expired") != -1 || str.IndexOf ("You forgot to solve the CAPTCHA") != -1) { " is 131.
Long Statement,AniWrap,AniWrap,C:\repos\diantahoc_AniWrap\AniWrap\AniWrap.cs,GetCatalog,The length of the statement  "		List<Dictionary<string' object>> list = JsonConvert.DeserializeObject<List<Dictionary<string' object>>> (response.Data); " is 120.
Long Statement,AniWrap,AniWrap,C:\repos\diantahoc_AniWrap\AniWrap\AniWrap.cs,ReportPost,The length of the statement  "	string url = String.Format (@"https://sys.4chan.org/{0}/imgboard.php?mode=report&no={1}"' board.ToLower ()' post_id.ToString ()); " is 129.
Long Statement,AniWrap,AniWrap,C:\repos\diantahoc_AniWrap\AniWrap\AniWrap.cs,DeletePost,The length of the statement  "		if (response_text.Contains ("updating index...") || response_text.Contains ("please delete posts less often!") || response_text.Contains (string.Format ("<meta http-equiv=\"refresh\" content=\"0;url=http://boards.4chan.org/{0}/res/{1}#p{1}\">"' board' thread_id))) { " is 266.
Long Statement,AniWrap,AniWrap,C:\repos\diantahoc_AniWrap\AniWrap\AniWrap.cs,GetCaptchaChallenge,The length of the statement  "	string html = nc.DownloadString (@"http://www.google.com/recaptcha/api/noscript?k=6Ldp2bsSAAAAAAJ5uyx_lx34lJeEpTLVkP5k04qc"); " is 125.
Long Statement,AniWrap,Common,C:\repos\diantahoc_AniWrap\AniWrap\Helpers\Common.cs,GetBoardMaximumFileSize,The length of the statement  "	if (board == "gd" || board == "hm" || board == "hr" || board == "po" || board == "r" || board == "s" || board == "trv" || board == "tg") { " is 138.
Long Statement,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,GetXmlName,The length of the statement  "		if (((name [i] >= 'a') && (name [i] <= 'z')) || ((name [i] >= '0') && (name [i] <= '9')) || //					(name[i]==':') || (name[i]=='_') || (name[i]=='-') || (name[i]=='.')) // these are bads in fact " is 194.
Long Statement,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,Load,The length of the statement  "			AddError (HtmlParseErrorCode.TagNotClosed' node._line' node._lineposition' node._streamposition' html' "End tag </" + node.Name + "> was not found"); " is 149.
Long Statement,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,CloseCurrentNode,The length of the statement  "					AddError (HtmlParseErrorCode.EndTagNotRequired' _currentnode._line' _currentnode._lineposition' _currentnode._streamposition' _currentnode.OuterHtml' "End tag </" + _currentnode.Name + "> is not required"); " is 206.
Long Statement,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,CloseCurrentNode,The length of the statement  "					AddError (HtmlParseErrorCode.TagNotOpened' _currentnode._line' _currentnode._lineposition' _currentnode._streamposition' _currentnode.OuterHtml' "Start tag <" + _currentnode.Name + "> was not found"); " is 200.
Long Statement,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,CloseCurrentNode,The length of the statement  "				AddError (HtmlParseErrorCode.EndTagInvalidHere' _currentnode._line' _currentnode._lineposition' _currentnode._streamposition' _currentnode.OuterHtml' "End tag </" + _currentnode.Name + "> invalid here"); " is 203.
Long Statement,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,PushNodeEnd,The length of the statement  "		if ((OptionStopperNodeName != null) && (_remainder == null) && (string.Compare (_currentnode.Name' OptionStopperNodeName' true) == 0)) { " is 136.
Long Statement,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,ReadDocumentEncoding,The length of the statement  "			// The following check fixes the the bug described at: http://htmlagilitypack.codeplex.com/WorkItem/View.aspx?WorkItemId=25273 " is 126.
Long Statement,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,ReadDocumentEncoding,The length of the statement  "					AddError (HtmlParseErrorCode.CharsetMismatch' _line' _lineposition' _index' node.OuterHtml' "Encoding mismatch between StreamEncoding: " + _streamencoding.WebName + " and DeclaredEncoding: " + _declaredencoding.WebName); " is 220.
Long Statement,HtmlAgilityPack,HtmlNode,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNode.cs,WriteTo,The length of the statement  "		writer.WriteProcessingInstruction ("xml"' "version=\"1.0\" encoding=\"" + _ownerdocument.GetOutEncoding ().BodyName + "\""); " is 124.
Long Statement,HtmlAgilityPack,HtmlNode,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNode.cs,WriteAttribute,The length of the statement  "			if ((att.Name [0] == '<') && (att.Name [1] == '%') && (att.Name [att.Name.Length - 1] == '>') && (att.Name [att.Name.Length - 2] == '%')) { " is 139.
Long Statement,HtmlAgilityPack,HtmlNodeNavigator,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNodeNavigator.cs,InternalTrace,The length of the statement  "	System.Diagnostics.Trace.WriteLine (string.Format ("oid={0}'n={1}'a={2}'v={3}'{4}"' GetHashCode ()' nodename' _attindex' nodevalue' traceValue)' "N!" + name); " is 158.
Long Statement,HtmlAgilityPack,HtmlWeb,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlWeb.cs,Get,The length of the statement  "		//						HtmlLibrary.Trace("Cookie " + cookie.Name + "=" + cookie.Value + " path=" + cookie.Path + " domain=" + cookie.Domain); " is 126.
Long Statement,HtmlAgilityPack,HtmlWeb,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlWeb.cs,GetCacheHeader,The length of the statement  "	XmlNode node = doc.SelectSingleNode ("//h[translate(@n' 'abcdefghijklmnopqrstuvwxyz'''ABCDEFGHIJKLMNOPQRSTUVWXYZ')='" + name.ToUpper () + "']"); " is 144.
Long Statement,HtmlAgilityPack,NameValuePairList,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\NameValuePairList.cs,Parse,The length of the statement  "		KeyValuePair<string' string> nvp = new KeyValuePair<string' string> (onep [0].Trim ().ToLower ()' onep.Length < 2 ? "" : onep [1]); " is 131.
Complex Conditional,AniWrap,Common,C:\repos\diantahoc_AniWrap\AniWrap\Helpers\Common.cs,GetBoardMaximumFileSize,The conditional expression  "board == "gd" || board == "hm" || board == "hr" || board == "po" || board == "r" || board == "s" || board == "trv" || board == "tg""  is complex.
Complex Conditional,AniWrap,Common,C:\repos\diantahoc_AniWrap\AniWrap\Helpers\Common.cs,GetBoardMaximumFileSize,The conditional expression  "board == "out" || board == "p" || board == "w" || board == "wg""  is complex.
Complex Conditional,AniWrap,Common,C:\repos\diantahoc_AniWrap\AniWrap\Helpers\Common.cs,GetBoardMaximumFileSize,The conditional expression  "board == "gif" || board == "soc" || board == "sp" || board == "wsg""  is complex.
Complex Conditional,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,GetXmlName,The conditional expression  "((name [i] >= 'a') && (name [i] <= 'z')) || ((name [i] >= '0') && (name [i] <= '9')) || //					(name[i]==':') || (name[i]=='_') || (name[i]=='-') || (name[i]=='.')) // these are bads in fact  (name [i] == '_') || (name [i] == '-') || (name [i] == '.')"  is complex.
Complex Conditional,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,IsWhiteSpace,The conditional expression  "(c == 10) || (c == 13) || (c == 32) || (c == 9)"  is complex.
Complex Conditional,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,Entitize,The conditional expression  "(code > 127) || (entitizeQuotAmpAndLtGt && ((code == 34) || (code == 38) || (code == 60) || (code == 62)))"  is complex.
Complex Conditional,HtmlAgilityPack,HtmlNode,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNode.cs,WriteAttribute,The conditional expression  "(att.Name [0] == '<') && (att.Name [1] == '%') && (att.Name [att.Name.Length - 1] == '>') && (att.Name [att.Name.Length - 2] == '%')"  is complex.
Empty Catch Block,HtmlAgilityPack,HtmlCmdLine,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlCmdLine.cs,GetIntArg,The method has an empty catch block.
Empty Catch Block,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,Load,The method has an empty catch block.
Magic Number,AniWrap,PostSender,C:\repos\diantahoc_AniWrap\AniWrap\PostSender.cs,bg_r_DoWork,The following statement contains a magic number: if (e.Argument.GetType () == typeof(object[])) {  	object[] data = (object[])e.Argument;  	try {  		PostSenderResponse psr = SendReply ((string)data [0]' (int)data [1]' (PostSenderData)data [2]' (SolvedCaptcha)data [3]);  		e.Result = psr;  		return;  	}  	catch (Exception ex) {  		e.Result = ex;  		e.Cancel = true;  		return;  	}  }  
Magic Number,AniWrap,PostSender,C:\repos\diantahoc_AniWrap\AniWrap\PostSender.cs,bg_r_DoWork,The following statement contains a magic number: if (e.Argument.GetType () == typeof(object[])) {  	object[] data = (object[])e.Argument;  	try {  		PostSenderResponse psr = SendReply ((string)data [0]' (int)data [1]' (PostSenderData)data [2]' (SolvedCaptcha)data [3]);  		e.Result = psr;  		return;  	}  	catch (Exception ex) {  		e.Result = ex;  		e.Cancel = true;  		return;  	}  }  
Magic Number,AniWrap,PostSender,C:\repos\diantahoc_AniWrap\AniWrap\PostSender.cs,bg_r_DoWork,The following statement contains a magic number: try {  	PostSenderResponse psr = SendReply ((string)data [0]' (int)data [1]' (PostSenderData)data [2]' (SolvedCaptcha)data [3]);  	e.Result = psr;  	return;  }  catch (Exception ex) {  	e.Result = ex;  	e.Cancel = true;  	return;  }  
Magic Number,AniWrap,PostSender,C:\repos\diantahoc_AniWrap\AniWrap\PostSender.cs,bg_r_DoWork,The following statement contains a magic number: try {  	PostSenderResponse psr = SendReply ((string)data [0]' (int)data [1]' (PostSenderData)data [2]' (SolvedCaptcha)data [3]);  	e.Result = psr;  	return;  }  catch (Exception ex) {  	e.Result = ex;  	e.Cancel = true;  	return;  }  
Magic Number,AniWrap,PostSender,C:\repos\diantahoc_AniWrap\AniWrap\PostSender.cs,bg_t_DoWork,The following statement contains a magic number: if (e.Argument.GetType () == typeof(object[])) {  	object[] data = (object[])e.Argument;  	try {  		PostSenderResponse psr = MakeThread ((string)data [0]' (PostSenderData)data [1]' (SolvedCaptcha)data [2]);  		e.Result = psr;  		return;  	}  	catch (Exception ex) {  		e.Result = ex;  		e.Cancel = true;  		return;  	}  }  
Magic Number,AniWrap,PostSender,C:\repos\diantahoc_AniWrap\AniWrap\PostSender.cs,bg_t_DoWork,The following statement contains a magic number: try {  	PostSenderResponse psr = MakeThread ((string)data [0]' (PostSenderData)data [1]' (SolvedCaptcha)data [2]);  	e.Result = psr;  	return;  }  catch (Exception ex) {  	e.Result = ex;  	e.Cancel = true;  	return;  }  
Magic Number,AniWrap,PostSender,C:\repos\diantahoc_AniWrap\AniWrap\PostSender.cs,SendReply,The following statement contains a magic number: if (data != null) {  	if (String.IsNullOrEmpty (data.Comment) && String.IsNullOrEmpty (data.FileName)) {  		throw new Exception ("Blank posts are not allowed");  	}  	if (data.Comment.Length > 1500) {  		throw new Exception ("Comment is too long");  	}  	if (!data.Is4chanPass && (captcha == null)) {  		throw new ArgumentNullException ("Captcha is null");  	}  	if (!data.Is4chanPass && (captcha != null)) {  		if (string.IsNullOrEmpty (captcha.ResponseField)) {  			throw new ArgumentNullException ("The captcha is unsolved");  		}  	}  }  else {  	throw new ArgumentNullException ("Post data is null");  }  
Magic Number,AniWrap,PostSender,C:\repos\diantahoc_AniWrap\AniWrap\PostSender.cs,SendReply,The following statement contains a magic number: if (data.Comment.Length > 1500) {  	throw new Exception ("Comment is too long");  }  
Magic Number,AniWrap,PostSender,C:\repos\diantahoc_AniWrap\AniWrap\PostSender.cs,MakeThread,The following statement contains a magic number: if (data != null) {  	if (!String.IsNullOrEmpty (data.FilePath)) {  		if (!System.IO.File.Exists (data.FilePath)) {  			throw new ArgumentException ("The provided file path lead to a non-existing file");  		}  	}  	if (data.Comment.Length > 1500) {  		throw new Exception ("Comment is too long");  	}  	if (!data.Is4chanPass && (captcha == null)) {  		throw new ArgumentNullException ("Captcha is null");  	}  	if (!data.Is4chanPass && (captcha != null)) {  		if (string.IsNullOrEmpty (captcha.ResponseField)) {  			throw new ArgumentNullException ("The captcha is unsolved");  		}  	}  }  else {  	throw new ArgumentNullException ("Post data is null");  }  
Magic Number,AniWrap,PostSender,C:\repos\diantahoc_AniWrap\AniWrap\PostSender.cs,MakeThread,The following statement contains a magic number: if (data.Comment.Length > 1500) {  	throw new Exception ("Comment is too long");  }  
Magic Number,AniWrap,PostSender,C:\repos\diantahoc_AniWrap\AniWrap\PostSender.cs,work,The following statement contains a magic number: values.Add ("MAX_FILE_SIZE"' Convert.ToString (Common.GetBoardMaximumFileSize (board) * 1024 * 1024));  
Magic Number,AniWrap,PostSender,C:\repos\diantahoc_AniWrap\AniWrap\PostSender.cs,work,The following statement contains a magic number: values.Add ("MAX_FILE_SIZE"' Convert.ToString (Common.GetBoardMaximumFileSize (board) * 1024 * 1024));  
Magic Number,AniWrap,AniWrap,C:\repos\diantahoc_AniWrap\AniWrap\AniWrap.cs,LoadAPI,The following statement contains a magic number: if (File.Exists (file_path)) {  	d = parse_datetime (File.ReadAllText (file_path));  }  else {  	d = DateTime.UtcNow.Subtract (new TimeSpan (365' 0' 0' 0' 0));  }  
Magic Number,AniWrap,AniWrap,C:\repos\diantahoc_AniWrap\AniWrap\AniWrap.cs,LoadAPI,The following statement contains a magic number: d = DateTime.UtcNow.Subtract (new TimeSpan (365' 0' 0' 0' 0));  
Magic Number,AniWrap,AniWrap,C:\repos\diantahoc_AniWrap\AniWrap\AniWrap.cs,LoadAPI,The following statement contains a magic number: try {  	wbr = wr.GetResponse ();  	byte[] data;  	Stream s = wbr.GetResponseStream ();  	string content_length = wbr.Headers ["Content-Length"];  	//int totalLength = Int32.Parse(content_length);  	int iByteSize = 0;  	byte[] byteBuffer = new byte[1024];  	MemoryStream MemIo = new MemoryStream ();  	int total_processed = 0;  	while ((iByteSize = s.Read (byteBuffer' 0' 1024)) > 0) {  		MemIo.Write (byteBuffer' 0' iByteSize);  		total_processed += iByteSize;  		/*   if (callback != null)                        {                            double dIndex = Convert.ToDouble(total_processed);                             double dTotal = Convert.ToDouble(totalLength);                             int p = Convert.ToInt32((dIndex / dTotal) * 100);                             callback(p);                        }*/}  	byteBuffer = null;  	s.Close ();  	data = MemIo.ToArray ();  	MemIo.Close ();  	MemIo.Dispose ();  	//MemoryStream s = new MemoryStream();  	//using (var a = wbr.GetResponseStream()){a.CopyTo(s);}  	string text = System.Text.Encoding.UTF8.GetString (data.ToArray ());  	//s.Close();  	//Dictionary<string' object> dic = new Dictionary<string' object>();  	//foreach (string q in wbr.Headers.AllKeys)   	//{   	//    dic.Add(q' wbr.Headers[q]);  	//}  	string lm = wbr.Headers ["Last-Modified"];  	DateTime lmm = DateTime.Parse (lm);  	File.WriteAllText (file_path' datetime_tostring (lmm));  	File.WriteAllText (file_path_data' text);  	result = new APIResponse (text' APIResponse.ErrorType.NoError);  }  catch (WebException wex) {  	HttpWebResponse httpResponse = wex.Response as HttpWebResponse;  	if (httpResponse != null) {  		if (httpResponse.StatusCode == HttpStatusCode.NotModified) {  			bool data_file_exist = File.Exists (file_path_data);  			if (data_file_exist) {  				result = new APIResponse (File.ReadAllText (file_path_data)' APIResponse.ErrorType.NoError);  			}  			else {  				delete_file (file_path);  				delete_file (file_path_data);  				return LoadAPI (url);  				//retry fetch  				//throw new Exception("Reference to a cached file was not found");  			}  		}  		else if (httpResponse.StatusCode == HttpStatusCode.NotFound) {  			result = new APIResponse (null' APIResponse.ErrorType.NotFound);  		}  		else {  			result = new APIResponse (wex.Message' APIResponse.ErrorType.Other);  			throw wex;  		}  	}  	else {  		result = new APIResponse (wex.Message' APIResponse.ErrorType.Other);  		throw wex;  	}  }  
Magic Number,AniWrap,AniWrap,C:\repos\diantahoc_AniWrap\AniWrap\AniWrap.cs,LoadAPI,The following statement contains a magic number: try {  	wbr = wr.GetResponse ();  	byte[] data;  	Stream s = wbr.GetResponseStream ();  	string content_length = wbr.Headers ["Content-Length"];  	//int totalLength = Int32.Parse(content_length);  	int iByteSize = 0;  	byte[] byteBuffer = new byte[1024];  	MemoryStream MemIo = new MemoryStream ();  	int total_processed = 0;  	while ((iByteSize = s.Read (byteBuffer' 0' 1024)) > 0) {  		MemIo.Write (byteBuffer' 0' iByteSize);  		total_processed += iByteSize;  		/*   if (callback != null)                        {                            double dIndex = Convert.ToDouble(total_processed);                             double dTotal = Convert.ToDouble(totalLength);                             int p = Convert.ToInt32((dIndex / dTotal) * 100);                             callback(p);                        }*/}  	byteBuffer = null;  	s.Close ();  	data = MemIo.ToArray ();  	MemIo.Close ();  	MemIo.Dispose ();  	//MemoryStream s = new MemoryStream();  	//using (var a = wbr.GetResponseStream()){a.CopyTo(s);}  	string text = System.Text.Encoding.UTF8.GetString (data.ToArray ());  	//s.Close();  	//Dictionary<string' object> dic = new Dictionary<string' object>();  	//foreach (string q in wbr.Headers.AllKeys)   	//{   	//    dic.Add(q' wbr.Headers[q]);  	//}  	string lm = wbr.Headers ["Last-Modified"];  	DateTime lmm = DateTime.Parse (lm);  	File.WriteAllText (file_path' datetime_tostring (lmm));  	File.WriteAllText (file_path_data' text);  	result = new APIResponse (text' APIResponse.ErrorType.NoError);  }  catch (WebException wex) {  	HttpWebResponse httpResponse = wex.Response as HttpWebResponse;  	if (httpResponse != null) {  		if (httpResponse.StatusCode == HttpStatusCode.NotModified) {  			bool data_file_exist = File.Exists (file_path_data);  			if (data_file_exist) {  				result = new APIResponse (File.ReadAllText (file_path_data)' APIResponse.ErrorType.NoError);  			}  			else {  				delete_file (file_path);  				delete_file (file_path_data);  				return LoadAPI (url);  				//retry fetch  				//throw new Exception("Reference to a cached file was not found");  			}  		}  		else if (httpResponse.StatusCode == HttpStatusCode.NotFound) {  			result = new APIResponse (null' APIResponse.ErrorType.NotFound);  		}  		else {  			result = new APIResponse (wex.Message' APIResponse.ErrorType.Other);  			throw wex;  		}  	}  	else {  		result = new APIResponse (wex.Message' APIResponse.ErrorType.Other);  		throw wex;  	}  }  
Magic Number,AniWrap,AniWrap,C:\repos\diantahoc_AniWrap\AniWrap\AniWrap.cs,LoadAPI,The following statement contains a magic number: while ((iByteSize = s.Read (byteBuffer' 0' 1024)) > 0) {  	MemIo.Write (byteBuffer' 0' iByteSize);  	total_processed += iByteSize;  	/*   if (callback != null)                        {                            double dIndex = Convert.ToDouble(total_processed);                             double dTotal = Convert.ToDouble(totalLength);                             int p = Convert.ToInt32((dIndex / dTotal) * 100);                             callback(p);                        }*/}  
Magic Number,AniWrap,Common,C:\repos\diantahoc_AniWrap\AniWrap\Helpers\Common.cs,format_size_string,The following statement contains a magic number: if (size < KB) {  	return size.ToString () + " B";  }  else if (size > KB & size < MB) {  	return Math.Round (Convert.ToDouble (size / KB)' 2).ToString () + " KB";  }  else if (size > MB & size < GB) {  	return Math.Round (Convert.ToDouble (size / MB)' 2).ToString () + " MB";  }  else if (size > GB) {  	return Math.Round (Convert.ToDouble (size / GB)' 2).ToString () + " GB";  }  else {  	return Convert.ToString (size);  }  
Magic Number,AniWrap,Common,C:\repos\diantahoc_AniWrap\AniWrap\Helpers\Common.cs,format_size_string,The following statement contains a magic number: if (size < KB) {  	return size.ToString () + " B";  }  else if (size > KB & size < MB) {  	return Math.Round (Convert.ToDouble (size / KB)' 2).ToString () + " KB";  }  else if (size > MB & size < GB) {  	return Math.Round (Convert.ToDouble (size / MB)' 2).ToString () + " MB";  }  else if (size > GB) {  	return Math.Round (Convert.ToDouble (size / GB)' 2).ToString () + " GB";  }  else {  	return Convert.ToString (size);  }  
Magic Number,AniWrap,Common,C:\repos\diantahoc_AniWrap\AniWrap\Helpers\Common.cs,format_size_string,The following statement contains a magic number: if (size < KB) {  	return size.ToString () + " B";  }  else if (size > KB & size < MB) {  	return Math.Round (Convert.ToDouble (size / KB)' 2).ToString () + " KB";  }  else if (size > MB & size < GB) {  	return Math.Round (Convert.ToDouble (size / MB)' 2).ToString () + " MB";  }  else if (size > GB) {  	return Math.Round (Convert.ToDouble (size / GB)' 2).ToString () + " GB";  }  else {  	return Convert.ToString (size);  }  
Magic Number,AniWrap,Common,C:\repos\diantahoc_AniWrap\AniWrap\Helpers\Common.cs,format_size_string,The following statement contains a magic number: if (size > KB & size < MB) {  	return Math.Round (Convert.ToDouble (size / KB)' 2).ToString () + " KB";  }  else if (size > MB & size < GB) {  	return Math.Round (Convert.ToDouble (size / MB)' 2).ToString () + " MB";  }  else if (size > GB) {  	return Math.Round (Convert.ToDouble (size / GB)' 2).ToString () + " GB";  }  else {  	return Convert.ToString (size);  }  
Magic Number,AniWrap,Common,C:\repos\diantahoc_AniWrap\AniWrap\Helpers\Common.cs,format_size_string,The following statement contains a magic number: if (size > KB & size < MB) {  	return Math.Round (Convert.ToDouble (size / KB)' 2).ToString () + " KB";  }  else if (size > MB & size < GB) {  	return Math.Round (Convert.ToDouble (size / MB)' 2).ToString () + " MB";  }  else if (size > GB) {  	return Math.Round (Convert.ToDouble (size / GB)' 2).ToString () + " GB";  }  else {  	return Convert.ToString (size);  }  
Magic Number,AniWrap,Common,C:\repos\diantahoc_AniWrap\AniWrap\Helpers\Common.cs,format_size_string,The following statement contains a magic number: if (size > KB & size < MB) {  	return Math.Round (Convert.ToDouble (size / KB)' 2).ToString () + " KB";  }  else if (size > MB & size < GB) {  	return Math.Round (Convert.ToDouble (size / MB)' 2).ToString () + " MB";  }  else if (size > GB) {  	return Math.Round (Convert.ToDouble (size / GB)' 2).ToString () + " GB";  }  else {  	return Convert.ToString (size);  }  
Magic Number,AniWrap,Common,C:\repos\diantahoc_AniWrap\AniWrap\Helpers\Common.cs,format_size_string,The following statement contains a magic number: return Math.Round (Convert.ToDouble (size / KB)' 2).ToString () + " KB";  
Magic Number,AniWrap,Common,C:\repos\diantahoc_AniWrap\AniWrap\Helpers\Common.cs,format_size_string,The following statement contains a magic number: if (size > MB & size < GB) {  	return Math.Round (Convert.ToDouble (size / MB)' 2).ToString () + " MB";  }  else if (size > GB) {  	return Math.Round (Convert.ToDouble (size / GB)' 2).ToString () + " GB";  }  else {  	return Convert.ToString (size);  }  
Magic Number,AniWrap,Common,C:\repos\diantahoc_AniWrap\AniWrap\Helpers\Common.cs,format_size_string,The following statement contains a magic number: if (size > MB & size < GB) {  	return Math.Round (Convert.ToDouble (size / MB)' 2).ToString () + " MB";  }  else if (size > GB) {  	return Math.Round (Convert.ToDouble (size / GB)' 2).ToString () + " GB";  }  else {  	return Convert.ToString (size);  }  
Magic Number,AniWrap,Common,C:\repos\diantahoc_AniWrap\AniWrap\Helpers\Common.cs,format_size_string,The following statement contains a magic number: return Math.Round (Convert.ToDouble (size / MB)' 2).ToString () + " MB";  
Magic Number,AniWrap,Common,C:\repos\diantahoc_AniWrap\AniWrap\Helpers\Common.cs,format_size_string,The following statement contains a magic number: if (size > GB) {  	return Math.Round (Convert.ToDouble (size / GB)' 2).ToString () + " GB";  }  else {  	return Convert.ToString (size);  }  
Magic Number,AniWrap,Common,C:\repos\diantahoc_AniWrap\AniWrap\Helpers\Common.cs,format_size_string,The following statement contains a magic number: return Math.Round (Convert.ToDouble (size / GB)' 2).ToString () + " GB";  
Magic Number,AniWrap,Common,C:\repos\diantahoc_AniWrap\AniWrap\Helpers\Common.cs,GetBoardMaximumFileSize,The following statement contains a magic number: if (board == "b" || board == "s4s" || board == "r9k") {  	return 2;  }  
Magic Number,AniWrap,Common,C:\repos\diantahoc_AniWrap\AniWrap\Helpers\Common.cs,GetBoardMaximumFileSize,The following statement contains a magic number: return 2;  
Magic Number,AniWrap,Common,C:\repos\diantahoc_AniWrap\AniWrap\Helpers\Common.cs,GetBoardMaximumFileSize,The following statement contains a magic number: if (board == "gd" || board == "hm" || board == "hr" || board == "po" || board == "r" || board == "s" || board == "trv" || board == "tg") {  	return 8;  }  
Magic Number,AniWrap,Common,C:\repos\diantahoc_AniWrap\AniWrap\Helpers\Common.cs,GetBoardMaximumFileSize,The following statement contains a magic number: return 8;  
Magic Number,AniWrap,Common,C:\repos\diantahoc_AniWrap\AniWrap\Helpers\Common.cs,GetBoardMaximumFileSize,The following statement contains a magic number: if (board == "out" || board == "p" || board == "w" || board == "wg") {  	return 5;  }  
Magic Number,AniWrap,Common,C:\repos\diantahoc_AniWrap\AniWrap\Helpers\Common.cs,GetBoardMaximumFileSize,The following statement contains a magic number: return 5;  
Magic Number,AniWrap,Common,C:\repos\diantahoc_AniWrap\AniWrap\Helpers\Common.cs,GetBoardMaximumFileSize,The following statement contains a magic number: if (board == "gif" || board == "soc" || board == "sp" || board == "wsg") {  	return 4;  }  
Magic Number,AniWrap,Common,C:\repos\diantahoc_AniWrap\AniWrap\Helpers\Common.cs,GetBoardMaximumFileSize,The following statement contains a magic number: return 4;  
Magic Number,AniWrap,Common,C:\repos\diantahoc_AniWrap\AniWrap\Helpers\Common.cs,GetBoardMaximumFileSize,The following statement contains a magic number: return 3;  
Magic Number,AniWrap.Helpers,ThreadHelper,C:\repos\diantahoc_AniWrap\AniWrap\Helpers\ThreadHelper.cs,Guess_Post_Title,The following statement contains a magic number: if (String.IsNullOrEmpty (t.Subject)) {  	if (String.IsNullOrEmpty (t.Comment)) {  		return t.ID.ToString ();  	}  	else {  		string comment = "";  		HtmlAgilityPack.HtmlDocument d = new HtmlAgilityPack.HtmlDocument ();  		d.LoadHtml (t.Comment);  		comment = HttpUtility.HtmlDecode (d.DocumentNode.InnerText);  		if (comment.Length > 25) {  			return comment.Remove (24) + "...";  		}  		else {  			return comment;  		}  	}  }  else {  	return HttpUtility.HtmlDecode (t.Subject);  }  
Magic Number,AniWrap.Helpers,ThreadHelper,C:\repos\diantahoc_AniWrap\AniWrap\Helpers\ThreadHelper.cs,Guess_Post_Title,The following statement contains a magic number: if (String.IsNullOrEmpty (t.Subject)) {  	if (String.IsNullOrEmpty (t.Comment)) {  		return t.ID.ToString ();  	}  	else {  		string comment = "";  		HtmlAgilityPack.HtmlDocument d = new HtmlAgilityPack.HtmlDocument ();  		d.LoadHtml (t.Comment);  		comment = HttpUtility.HtmlDecode (d.DocumentNode.InnerText);  		if (comment.Length > 25) {  			return comment.Remove (24) + "...";  		}  		else {  			return comment;  		}  	}  }  else {  	return HttpUtility.HtmlDecode (t.Subject);  }  
Magic Number,AniWrap.Helpers,ThreadHelper,C:\repos\diantahoc_AniWrap\AniWrap\Helpers\ThreadHelper.cs,Guess_Post_Title,The following statement contains a magic number: if (String.IsNullOrEmpty (t.Comment)) {  	return t.ID.ToString ();  }  else {  	string comment = "";  	HtmlAgilityPack.HtmlDocument d = new HtmlAgilityPack.HtmlDocument ();  	d.LoadHtml (t.Comment);  	comment = HttpUtility.HtmlDecode (d.DocumentNode.InnerText);  	if (comment.Length > 25) {  		return comment.Remove (24) + "...";  	}  	else {  		return comment;  	}  }  
Magic Number,AniWrap.Helpers,ThreadHelper,C:\repos\diantahoc_AniWrap\AniWrap\Helpers\ThreadHelper.cs,Guess_Post_Title,The following statement contains a magic number: if (String.IsNullOrEmpty (t.Comment)) {  	return t.ID.ToString ();  }  else {  	string comment = "";  	HtmlAgilityPack.HtmlDocument d = new HtmlAgilityPack.HtmlDocument ();  	d.LoadHtml (t.Comment);  	comment = HttpUtility.HtmlDecode (d.DocumentNode.InnerText);  	if (comment.Length > 25) {  		return comment.Remove (24) + "...";  	}  	else {  		return comment;  	}  }  
Magic Number,AniWrap.Helpers,ThreadHelper,C:\repos\diantahoc_AniWrap\AniWrap\Helpers\ThreadHelper.cs,Guess_Post_Title,The following statement contains a magic number: if (comment.Length > 25) {  	return comment.Remove (24) + "...";  }  else {  	return comment;  }  
Magic Number,AniWrap.Helpers,ThreadHelper,C:\repos\diantahoc_AniWrap\AniWrap\Helpers\ThreadHelper.cs,Guess_Post_Title,The following statement contains a magic number: if (comment.Length > 25) {  	return comment.Remove (24) + "...";  }  else {  	return comment;  }  
Magic Number,AniWrap.Helpers,ThreadHelper,C:\repos\diantahoc_AniWrap\AniWrap\Helpers\ThreadHelper.cs,Guess_Post_Title,The following statement contains a magic number: return comment.Remove (24) + "...";  
Magic Number,HtmlAgilityPack,Crc32,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\crc32.cs,CRC32String,The following statement contains a magic number: for (int i = 0; len > 0; i++) {  	--len;  	uCharVal = text [len];  	unchecked {  		lowByte = (byte)(uCharVal & 0x00ff);  		hiByte = (byte)(uCharVal >> 8);  	}  	oldcrc32 = UPDC32 (hiByte' oldcrc32);  	oldcrc32 = UPDC32 (lowByte' oldcrc32);  }  
Magic Number,HtmlAgilityPack,Crc32,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\crc32.cs,CRC32String,The following statement contains a magic number: unchecked {  	lowByte = (byte)(uCharVal & 0x00ff);  	hiByte = (byte)(uCharVal >> 8);  }  
Magic Number,HtmlAgilityPack,Crc32,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\crc32.cs,CRC32String,The following statement contains a magic number: hiByte = (byte)(uCharVal >> 8);  
Magic Number,HtmlAgilityPack,Crc32,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\crc32.cs,AddToCRC32,The following statement contains a magic number: hiByte = (byte)(c >> 8);  
Magic Number,HtmlAgilityPack,Crc32,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\crc32.cs,UPDC32,The following statement contains a magic number: return (crc_32_tab [((crc) ^ (octet)) & 0xff] ^ ((crc) >> 8));  
Magic Number,HtmlAgilityPack,HtmlCmdLine,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlCmdLine.cs,GetIntArg,The following statement contains a magic number: if (Arg.Length < (Name.Length + 3))  	// -name:12 is 3 more than name  	return;  
Magic Number,HtmlAgilityPack,HtmlCmdLine,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlCmdLine.cs,GetIntArg,The following statement contains a magic number: if (Arg.Substring (1' Name.Length).ToLower () == Name.ToLower ()) {  	try {  		ArgValue = Convert.ToInt32 (Arg.Substring (Name.Length + 2' Arg.Length - Name.Length - 2));  	}  	catch {  	}  }  
Magic Number,HtmlAgilityPack,HtmlCmdLine,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlCmdLine.cs,GetIntArg,The following statement contains a magic number: if (Arg.Substring (1' Name.Length).ToLower () == Name.ToLower ()) {  	try {  		ArgValue = Convert.ToInt32 (Arg.Substring (Name.Length + 2' Arg.Length - Name.Length - 2));  	}  	catch {  	}  }  
Magic Number,HtmlAgilityPack,HtmlCmdLine,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlCmdLine.cs,GetIntArg,The following statement contains a magic number: try {  	ArgValue = Convert.ToInt32 (Arg.Substring (Name.Length + 2' Arg.Length - Name.Length - 2));  }  catch {  }  
Magic Number,HtmlAgilityPack,HtmlCmdLine,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlCmdLine.cs,GetIntArg,The following statement contains a magic number: try {  	ArgValue = Convert.ToInt32 (Arg.Substring (Name.Length + 2' Arg.Length - Name.Length - 2));  }  catch {  }  
Magic Number,HtmlAgilityPack,HtmlCmdLine,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlCmdLine.cs,GetIntArg,The following statement contains a magic number: ArgValue = Convert.ToInt32 (Arg.Substring (Name.Length + 2' Arg.Length - Name.Length - 2));  
Magic Number,HtmlAgilityPack,HtmlCmdLine,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlCmdLine.cs,GetIntArg,The following statement contains a magic number: ArgValue = Convert.ToInt32 (Arg.Substring (Name.Length + 2' Arg.Length - Name.Length - 2));  
Magic Number,HtmlAgilityPack,HtmlCmdLine,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlCmdLine.cs,GetStringArg,The following statement contains a magic number: if (Arg.Length < (Name.Length + 3))  	// -name:x is 3 more than name  	return;  
Magic Number,HtmlAgilityPack,HtmlCmdLine,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlCmdLine.cs,GetStringArg,The following statement contains a magic number: if (Arg.Substring (1' Name.Length).ToLower () == Name.ToLower ())  	ArgValue = Arg.Substring (Name.Length + 2' Arg.Length - Name.Length - 2);  
Magic Number,HtmlAgilityPack,HtmlCmdLine,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlCmdLine.cs,GetStringArg,The following statement contains a magic number: if (Arg.Substring (1' Name.Length).ToLower () == Name.ToLower ())  	ArgValue = Arg.Substring (Name.Length + 2' Arg.Length - Name.Length - 2);  
Magic Number,HtmlAgilityPack,HtmlCmdLine,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlCmdLine.cs,GetStringArg,The following statement contains a magic number: ArgValue = Arg.Substring (Name.Length + 2' Arg.Length - Name.Length - 2);  
Magic Number,HtmlAgilityPack,HtmlCmdLine,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlCmdLine.cs,GetStringArg,The following statement contains a magic number: ArgValue = Arg.Substring (Name.Length + 2' Arg.Length - Name.Length - 2);  
Magic Number,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,IsWhiteSpace,The following statement contains a magic number: if ((c == 10) || (c == 13) || (c == 32) || (c == 9)) {  	return true;  }  
Magic Number,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,IsWhiteSpace,The following statement contains a magic number: if ((c == 10) || (c == 13) || (c == 32) || (c == 9)) {  	return true;  }  
Magic Number,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,IsWhiteSpace,The following statement contains a magic number: if ((c == 10) || (c == 13) || (c == 32) || (c == 9)) {  	return true;  }  
Magic Number,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,IsWhiteSpace,The following statement contains a magic number: if ((c == 10) || (c == 13) || (c == 32) || (c == 9)) {  	return true;  }  
Magic Number,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,IncrementPosition,The following statement contains a magic number: if (_c == 10) {  	_lineposition = 1;  	_line++;  }  else {  	_lineposition++;  }  
Magic Number,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,NewCheck,The following statement contains a magic number: if ((_index - 1) <= (_text.Length - 2)) {  	if (_text [_index] == '!') {  		PushNodeStart (HtmlNodeType.Comment' _index - 1);  		PushNodeNameStart (true' _index);  		PushNodeNameEnd (_index + 1);  		_state = ParseState.Comment;  		if (_index < (_text.Length - 2)) {  			if ((_text [_index + 1] == '-') && (_text [_index + 2] == '-')) {  				_fullcomment = true;  			}  			else {  				_fullcomment = false;  			}  		}  		return true;  	}  }  
Magic Number,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,NewCheck,The following statement contains a magic number: if ((_index - 1) <= (_text.Length - 2)) {  	if (_text [_index] == '!') {  		PushNodeStart (HtmlNodeType.Comment' _index - 1);  		PushNodeNameStart (true' _index);  		PushNodeNameEnd (_index + 1);  		_state = ParseState.Comment;  		if (_index < (_text.Length - 2)) {  			if ((_text [_index + 1] == '-') && (_text [_index + 2] == '-')) {  				_fullcomment = true;  			}  			else {  				_fullcomment = false;  			}  		}  		return true;  	}  }  
Magic Number,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,NewCheck,The following statement contains a magic number: if ((_index - 1) <= (_text.Length - 2)) {  	if (_text [_index] == '!') {  		PushNodeStart (HtmlNodeType.Comment' _index - 1);  		PushNodeNameStart (true' _index);  		PushNodeNameEnd (_index + 1);  		_state = ParseState.Comment;  		if (_index < (_text.Length - 2)) {  			if ((_text [_index + 1] == '-') && (_text [_index + 2] == '-')) {  				_fullcomment = true;  			}  			else {  				_fullcomment = false;  			}  		}  		return true;  	}  }  
Magic Number,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,NewCheck,The following statement contains a magic number: if (_text [_index] == '!') {  	PushNodeStart (HtmlNodeType.Comment' _index - 1);  	PushNodeNameStart (true' _index);  	PushNodeNameEnd (_index + 1);  	_state = ParseState.Comment;  	if (_index < (_text.Length - 2)) {  		if ((_text [_index + 1] == '-') && (_text [_index + 2] == '-')) {  			_fullcomment = true;  		}  		else {  			_fullcomment = false;  		}  	}  	return true;  }  
Magic Number,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,NewCheck,The following statement contains a magic number: if (_text [_index] == '!') {  	PushNodeStart (HtmlNodeType.Comment' _index - 1);  	PushNodeNameStart (true' _index);  	PushNodeNameEnd (_index + 1);  	_state = ParseState.Comment;  	if (_index < (_text.Length - 2)) {  		if ((_text [_index + 1] == '-') && (_text [_index + 2] == '-')) {  			_fullcomment = true;  		}  		else {  			_fullcomment = false;  		}  	}  	return true;  }  
Magic Number,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,NewCheck,The following statement contains a magic number: if (_index < (_text.Length - 2)) {  	if ((_text [_index + 1] == '-') && (_text [_index + 2] == '-')) {  		_fullcomment = true;  	}  	else {  		_fullcomment = false;  	}  }  
Magic Number,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,NewCheck,The following statement contains a magic number: if (_index < (_text.Length - 2)) {  	if ((_text [_index + 1] == '-') && (_text [_index + 2] == '-')) {  		_fullcomment = true;  	}  	else {  		_fullcomment = false;  	}  }  
Magic Number,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,NewCheck,The following statement contains a magic number: if ((_text [_index + 1] == '-') && (_text [_index + 2] == '-')) {  	_fullcomment = true;  }  else {  	_fullcomment = false;  }  
Magic Number,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,Parse,The following statement contains a magic number: while (_index < _text.Length) {  	_c = _text [_index];  	IncrementPosition ();  	switch (_state) {  	case ParseState.Text:  		if (NewCheck ())  			continue;  		break;  	case ParseState.WhichTag:  		if (NewCheck ())  			continue;  		if (_c == '/') {  			PushNodeNameStart (false' _index);  		}  		else {  			PushNodeNameStart (true' _index - 1);  			DecrementPosition ();  		}  		_state = ParseState.Tag;  		break;  	case ParseState.Tag:  		if (NewCheck ())  			continue;  		if (IsWhiteSpace (_c)) {  			PushNodeNameEnd (_index - 1);  			if (_state != ParseState.Tag)  				continue;  			_state = ParseState.BetweenAttributes;  			continue;  		}  		if (_c == '/') {  			PushNodeNameEnd (_index - 1);  			if (_state != ParseState.Tag)  				continue;  			_state = ParseState.EmptyTag;  			continue;  		}  		if (_c == '>') {  			PushNodeNameEnd (_index - 1);  			if (_state != ParseState.Tag)  				continue;  			if (!PushNodeEnd (_index' false)) {  				// stop parsing  				_index = _text.Length;  				break;  			}  			if (_state != ParseState.Tag)  				continue;  			_state = ParseState.Text;  			PushNodeStart (HtmlNodeType.Text' _index);  		}  		break;  	case ParseState.BetweenAttributes:  		if (NewCheck ())  			continue;  		if (IsWhiteSpace (_c))  			continue;  		if ((_c == '/') || (_c == '?')) {  			_state = ParseState.EmptyTag;  			continue;  		}  		if (_c == '>') {  			if (!PushNodeEnd (_index' false)) {  				// stop parsing  				_index = _text.Length;  				break;  			}  			if (_state != ParseState.BetweenAttributes)  				continue;  			_state = ParseState.Text;  			PushNodeStart (HtmlNodeType.Text' _index);  			continue;  		}  		PushAttributeNameStart (_index - 1);  		_state = ParseState.AttributeName;  		break;  	case ParseState.EmptyTag:  		if (NewCheck ())  			continue;  		if (_c == '>') {  			if (!PushNodeEnd (_index' true)) {  				// stop parsing  				_index = _text.Length;  				break;  			}  			if (_state != ParseState.EmptyTag)  				continue;  			_state = ParseState.Text;  			PushNodeStart (HtmlNodeType.Text' _index);  			continue;  		}  		_state = ParseState.BetweenAttributes;  		break;  	case ParseState.AttributeName:  		if (NewCheck ())  			continue;  		if (IsWhiteSpace (_c)) {  			PushAttributeNameEnd (_index - 1);  			_state = ParseState.AttributeBeforeEquals;  			continue;  		}  		if (_c == '=') {  			PushAttributeNameEnd (_index - 1);  			_state = ParseState.AttributeAfterEquals;  			continue;  		}  		if (_c == '>') {  			PushAttributeNameEnd (_index - 1);  			if (!PushNodeEnd (_index' false)) {  				// stop parsing  				_index = _text.Length;  				break;  			}  			if (_state != ParseState.AttributeName)  				continue;  			_state = ParseState.Text;  			PushNodeStart (HtmlNodeType.Text' _index);  			continue;  		}  		break;  	case ParseState.AttributeBeforeEquals:  		if (NewCheck ())  			continue;  		if (IsWhiteSpace (_c))  			continue;  		if (_c == '>') {  			if (!PushNodeEnd (_index' false)) {  				// stop parsing  				_index = _text.Length;  				break;  			}  			if (_state != ParseState.AttributeBeforeEquals)  				continue;  			_state = ParseState.Text;  			PushNodeStart (HtmlNodeType.Text' _index);  			continue;  		}  		if (_c == '=') {  			_state = ParseState.AttributeAfterEquals;  			continue;  		}  		// no equals' no whitespace' it's a new attrribute starting  		_state = ParseState.BetweenAttributes;  		DecrementPosition ();  		break;  	case ParseState.AttributeAfterEquals:  		if (NewCheck ())  			continue;  		if (IsWhiteSpace (_c))  			continue;  		if ((_c == '\'') || (_c == '"')) {  			_state = ParseState.QuotedAttributeValue;  			PushAttributeValueStart (_index' _c);  			lastquote = _c;  			continue;  		}  		if (_c == '>') {  			if (!PushNodeEnd (_index' false)) {  				// stop parsing  				_index = _text.Length;  				break;  			}  			if (_state != ParseState.AttributeAfterEquals)  				continue;  			_state = ParseState.Text;  			PushNodeStart (HtmlNodeType.Text' _index);  			continue;  		}  		PushAttributeValueStart (_index - 1);  		_state = ParseState.AttributeValue;  		break;  	case ParseState.AttributeValue:  		if (NewCheck ())  			continue;  		if (IsWhiteSpace (_c)) {  			PushAttributeValueEnd (_index - 1);  			_state = ParseState.BetweenAttributes;  			continue;  		}  		if (_c == '>') {  			PushAttributeValueEnd (_index - 1);  			if (!PushNodeEnd (_index' false)) {  				// stop parsing  				_index = _text.Length;  				break;  			}  			if (_state != ParseState.AttributeValue)  				continue;  			_state = ParseState.Text;  			PushNodeStart (HtmlNodeType.Text' _index);  			continue;  		}  		break;  	case ParseState.QuotedAttributeValue:  		if (_c == lastquote) {  			PushAttributeValueEnd (_index - 1);  			_state = ParseState.BetweenAttributes;  			continue;  		}  		if (_c == '<') {  			if (_index < _text.Length) {  				if (_text [_index] == '%') {  					_oldstate = _state;  					_state = ParseState.ServerSideCode;  					continue;  				}  			}  		}  		break;  	case ParseState.Comment:  		if (_c == '>') {  			if (_fullcomment) {  				if ((_text [_index - 2] != '-') || (_text [_index - 3] != '-')) {  					continue;  				}  			}  			if (!PushNodeEnd (_index' false)) {  				// stop parsing  				_index = _text.Length;  				break;  			}  			_state = ParseState.Text;  			PushNodeStart (HtmlNodeType.Text' _index);  			continue;  		}  		break;  	case ParseState.ServerSideCode:  		if (_c == '%') {  			if (_index < _text.Length) {  				if (_text [_index] == '>') {  					switch (_oldstate) {  					case ParseState.AttributeAfterEquals:  						_state = ParseState.AttributeValue;  						break;  					case ParseState.BetweenAttributes:  						PushAttributeNameEnd (_index + 1);  						_state = ParseState.BetweenAttributes;  						break;  					default:  						_state = _oldstate;  						break;  					}  					IncrementPosition ();  				}  			}  		}  		break;  	case ParseState.PcData:  		// look for </tag + 1 char  		// check buffer end  		if ((_currentnode._namelength + 3) <= (_text.Length - (_index - 1))) {  			if (string.Compare (_text.Substring (_index - 1' _currentnode._namelength + 2)' "</" + _currentnode.Name' true) == 0) {  				int c = _text [_index - 1 + 2 + _currentnode.Name.Length];  				if ((c == '>') || (IsWhiteSpace (c))) {  					// add the script as a text node  					HtmlNode script = CreateNode (HtmlNodeType.Text' _currentnode._outerstartindex + _currentnode._outerlength);  					script._outerlength = _index - 1 - script._outerstartindex;  					_currentnode.AppendChild (script);  					PushNodeStart (HtmlNodeType.Element' _index - 1);  					PushNodeNameStart (false' _index - 1 + 2);  					_state = ParseState.Tag;  					IncrementPosition ();  				}  			}  		}  		break;  	}  }  
Magic Number,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,Parse,The following statement contains a magic number: while (_index < _text.Length) {  	_c = _text [_index];  	IncrementPosition ();  	switch (_state) {  	case ParseState.Text:  		if (NewCheck ())  			continue;  		break;  	case ParseState.WhichTag:  		if (NewCheck ())  			continue;  		if (_c == '/') {  			PushNodeNameStart (false' _index);  		}  		else {  			PushNodeNameStart (true' _index - 1);  			DecrementPosition ();  		}  		_state = ParseState.Tag;  		break;  	case ParseState.Tag:  		if (NewCheck ())  			continue;  		if (IsWhiteSpace (_c)) {  			PushNodeNameEnd (_index - 1);  			if (_state != ParseState.Tag)  				continue;  			_state = ParseState.BetweenAttributes;  			continue;  		}  		if (_c == '/') {  			PushNodeNameEnd (_index - 1);  			if (_state != ParseState.Tag)  				continue;  			_state = ParseState.EmptyTag;  			continue;  		}  		if (_c == '>') {  			PushNodeNameEnd (_index - 1);  			if (_state != ParseState.Tag)  				continue;  			if (!PushNodeEnd (_index' false)) {  				// stop parsing  				_index = _text.Length;  				break;  			}  			if (_state != ParseState.Tag)  				continue;  			_state = ParseState.Text;  			PushNodeStart (HtmlNodeType.Text' _index);  		}  		break;  	case ParseState.BetweenAttributes:  		if (NewCheck ())  			continue;  		if (IsWhiteSpace (_c))  			continue;  		if ((_c == '/') || (_c == '?')) {  			_state = ParseState.EmptyTag;  			continue;  		}  		if (_c == '>') {  			if (!PushNodeEnd (_index' false)) {  				// stop parsing  				_index = _text.Length;  				break;  			}  			if (_state != ParseState.BetweenAttributes)  				continue;  			_state = ParseState.Text;  			PushNodeStart (HtmlNodeType.Text' _index);  			continue;  		}  		PushAttributeNameStart (_index - 1);  		_state = ParseState.AttributeName;  		break;  	case ParseState.EmptyTag:  		if (NewCheck ())  			continue;  		if (_c == '>') {  			if (!PushNodeEnd (_index' true)) {  				// stop parsing  				_index = _text.Length;  				break;  			}  			if (_state != ParseState.EmptyTag)  				continue;  			_state = ParseState.Text;  			PushNodeStart (HtmlNodeType.Text' _index);  			continue;  		}  		_state = ParseState.BetweenAttributes;  		break;  	case ParseState.AttributeName:  		if (NewCheck ())  			continue;  		if (IsWhiteSpace (_c)) {  			PushAttributeNameEnd (_index - 1);  			_state = ParseState.AttributeBeforeEquals;  			continue;  		}  		if (_c == '=') {  			PushAttributeNameEnd (_index - 1);  			_state = ParseState.AttributeAfterEquals;  			continue;  		}  		if (_c == '>') {  			PushAttributeNameEnd (_index - 1);  			if (!PushNodeEnd (_index' false)) {  				// stop parsing  				_index = _text.Length;  				break;  			}  			if (_state != ParseState.AttributeName)  				continue;  			_state = ParseState.Text;  			PushNodeStart (HtmlNodeType.Text' _index);  			continue;  		}  		break;  	case ParseState.AttributeBeforeEquals:  		if (NewCheck ())  			continue;  		if (IsWhiteSpace (_c))  			continue;  		if (_c == '>') {  			if (!PushNodeEnd (_index' false)) {  				// stop parsing  				_index = _text.Length;  				break;  			}  			if (_state != ParseState.AttributeBeforeEquals)  				continue;  			_state = ParseState.Text;  			PushNodeStart (HtmlNodeType.Text' _index);  			continue;  		}  		if (_c == '=') {  			_state = ParseState.AttributeAfterEquals;  			continue;  		}  		// no equals' no whitespace' it's a new attrribute starting  		_state = ParseState.BetweenAttributes;  		DecrementPosition ();  		break;  	case ParseState.AttributeAfterEquals:  		if (NewCheck ())  			continue;  		if (IsWhiteSpace (_c))  			continue;  		if ((_c == '\'') || (_c == '"')) {  			_state = ParseState.QuotedAttributeValue;  			PushAttributeValueStart (_index' _c);  			lastquote = _c;  			continue;  		}  		if (_c == '>') {  			if (!PushNodeEnd (_index' false)) {  				// stop parsing  				_index = _text.Length;  				break;  			}  			if (_state != ParseState.AttributeAfterEquals)  				continue;  			_state = ParseState.Text;  			PushNodeStart (HtmlNodeType.Text' _index);  			continue;  		}  		PushAttributeValueStart (_index - 1);  		_state = ParseState.AttributeValue;  		break;  	case ParseState.AttributeValue:  		if (NewCheck ())  			continue;  		if (IsWhiteSpace (_c)) {  			PushAttributeValueEnd (_index - 1);  			_state = ParseState.BetweenAttributes;  			continue;  		}  		if (_c == '>') {  			PushAttributeValueEnd (_index - 1);  			if (!PushNodeEnd (_index' false)) {  				// stop parsing  				_index = _text.Length;  				break;  			}  			if (_state != ParseState.AttributeValue)  				continue;  			_state = ParseState.Text;  			PushNodeStart (HtmlNodeType.Text' _index);  			continue;  		}  		break;  	case ParseState.QuotedAttributeValue:  		if (_c == lastquote) {  			PushAttributeValueEnd (_index - 1);  			_state = ParseState.BetweenAttributes;  			continue;  		}  		if (_c == '<') {  			if (_index < _text.Length) {  				if (_text [_index] == '%') {  					_oldstate = _state;  					_state = ParseState.ServerSideCode;  					continue;  				}  			}  		}  		break;  	case ParseState.Comment:  		if (_c == '>') {  			if (_fullcomment) {  				if ((_text [_index - 2] != '-') || (_text [_index - 3] != '-')) {  					continue;  				}  			}  			if (!PushNodeEnd (_index' false)) {  				// stop parsing  				_index = _text.Length;  				break;  			}  			_state = ParseState.Text;  			PushNodeStart (HtmlNodeType.Text' _index);  			continue;  		}  		break;  	case ParseState.ServerSideCode:  		if (_c == '%') {  			if (_index < _text.Length) {  				if (_text [_index] == '>') {  					switch (_oldstate) {  					case ParseState.AttributeAfterEquals:  						_state = ParseState.AttributeValue;  						break;  					case ParseState.BetweenAttributes:  						PushAttributeNameEnd (_index + 1);  						_state = ParseState.BetweenAttributes;  						break;  					default:  						_state = _oldstate;  						break;  					}  					IncrementPosition ();  				}  			}  		}  		break;  	case ParseState.PcData:  		// look for </tag + 1 char  		// check buffer end  		if ((_currentnode._namelength + 3) <= (_text.Length - (_index - 1))) {  			if (string.Compare (_text.Substring (_index - 1' _currentnode._namelength + 2)' "</" + _currentnode.Name' true) == 0) {  				int c = _text [_index - 1 + 2 + _currentnode.Name.Length];  				if ((c == '>') || (IsWhiteSpace (c))) {  					// add the script as a text node  					HtmlNode script = CreateNode (HtmlNodeType.Text' _currentnode._outerstartindex + _currentnode._outerlength);  					script._outerlength = _index - 1 - script._outerstartindex;  					_currentnode.AppendChild (script);  					PushNodeStart (HtmlNodeType.Element' _index - 1);  					PushNodeNameStart (false' _index - 1 + 2);  					_state = ParseState.Tag;  					IncrementPosition ();  				}  			}  		}  		break;  	}  }  
Magic Number,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,Parse,The following statement contains a magic number: while (_index < _text.Length) {  	_c = _text [_index];  	IncrementPosition ();  	switch (_state) {  	case ParseState.Text:  		if (NewCheck ())  			continue;  		break;  	case ParseState.WhichTag:  		if (NewCheck ())  			continue;  		if (_c == '/') {  			PushNodeNameStart (false' _index);  		}  		else {  			PushNodeNameStart (true' _index - 1);  			DecrementPosition ();  		}  		_state = ParseState.Tag;  		break;  	case ParseState.Tag:  		if (NewCheck ())  			continue;  		if (IsWhiteSpace (_c)) {  			PushNodeNameEnd (_index - 1);  			if (_state != ParseState.Tag)  				continue;  			_state = ParseState.BetweenAttributes;  			continue;  		}  		if (_c == '/') {  			PushNodeNameEnd (_index - 1);  			if (_state != ParseState.Tag)  				continue;  			_state = ParseState.EmptyTag;  			continue;  		}  		if (_c == '>') {  			PushNodeNameEnd (_index - 1);  			if (_state != ParseState.Tag)  				continue;  			if (!PushNodeEnd (_index' false)) {  				// stop parsing  				_index = _text.Length;  				break;  			}  			if (_state != ParseState.Tag)  				continue;  			_state = ParseState.Text;  			PushNodeStart (HtmlNodeType.Text' _index);  		}  		break;  	case ParseState.BetweenAttributes:  		if (NewCheck ())  			continue;  		if (IsWhiteSpace (_c))  			continue;  		if ((_c == '/') || (_c == '?')) {  			_state = ParseState.EmptyTag;  			continue;  		}  		if (_c == '>') {  			if (!PushNodeEnd (_index' false)) {  				// stop parsing  				_index = _text.Length;  				break;  			}  			if (_state != ParseState.BetweenAttributes)  				continue;  			_state = ParseState.Text;  			PushNodeStart (HtmlNodeType.Text' _index);  			continue;  		}  		PushAttributeNameStart (_index - 1);  		_state = ParseState.AttributeName;  		break;  	case ParseState.EmptyTag:  		if (NewCheck ())  			continue;  		if (_c == '>') {  			if (!PushNodeEnd (_index' true)) {  				// stop parsing  				_index = _text.Length;  				break;  			}  			if (_state != ParseState.EmptyTag)  				continue;  			_state = ParseState.Text;  			PushNodeStart (HtmlNodeType.Text' _index);  			continue;  		}  		_state = ParseState.BetweenAttributes;  		break;  	case ParseState.AttributeName:  		if (NewCheck ())  			continue;  		if (IsWhiteSpace (_c)) {  			PushAttributeNameEnd (_index - 1);  			_state = ParseState.AttributeBeforeEquals;  			continue;  		}  		if (_c == '=') {  			PushAttributeNameEnd (_index - 1);  			_state = ParseState.AttributeAfterEquals;  			continue;  		}  		if (_c == '>') {  			PushAttributeNameEnd (_index - 1);  			if (!PushNodeEnd (_index' false)) {  				// stop parsing  				_index = _text.Length;  				break;  			}  			if (_state != ParseState.AttributeName)  				continue;  			_state = ParseState.Text;  			PushNodeStart (HtmlNodeType.Text' _index);  			continue;  		}  		break;  	case ParseState.AttributeBeforeEquals:  		if (NewCheck ())  			continue;  		if (IsWhiteSpace (_c))  			continue;  		if (_c == '>') {  			if (!PushNodeEnd (_index' false)) {  				// stop parsing  				_index = _text.Length;  				break;  			}  			if (_state != ParseState.AttributeBeforeEquals)  				continue;  			_state = ParseState.Text;  			PushNodeStart (HtmlNodeType.Text' _index);  			continue;  		}  		if (_c == '=') {  			_state = ParseState.AttributeAfterEquals;  			continue;  		}  		// no equals' no whitespace' it's a new attrribute starting  		_state = ParseState.BetweenAttributes;  		DecrementPosition ();  		break;  	case ParseState.AttributeAfterEquals:  		if (NewCheck ())  			continue;  		if (IsWhiteSpace (_c))  			continue;  		if ((_c == '\'') || (_c == '"')) {  			_state = ParseState.QuotedAttributeValue;  			PushAttributeValueStart (_index' _c);  			lastquote = _c;  			continue;  		}  		if (_c == '>') {  			if (!PushNodeEnd (_index' false)) {  				// stop parsing  				_index = _text.Length;  				break;  			}  			if (_state != ParseState.AttributeAfterEquals)  				continue;  			_state = ParseState.Text;  			PushNodeStart (HtmlNodeType.Text' _index);  			continue;  		}  		PushAttributeValueStart (_index - 1);  		_state = ParseState.AttributeValue;  		break;  	case ParseState.AttributeValue:  		if (NewCheck ())  			continue;  		if (IsWhiteSpace (_c)) {  			PushAttributeValueEnd (_index - 1);  			_state = ParseState.BetweenAttributes;  			continue;  		}  		if (_c == '>') {  			PushAttributeValueEnd (_index - 1);  			if (!PushNodeEnd (_index' false)) {  				// stop parsing  				_index = _text.Length;  				break;  			}  			if (_state != ParseState.AttributeValue)  				continue;  			_state = ParseState.Text;  			PushNodeStart (HtmlNodeType.Text' _index);  			continue;  		}  		break;  	case ParseState.QuotedAttributeValue:  		if (_c == lastquote) {  			PushAttributeValueEnd (_index - 1);  			_state = ParseState.BetweenAttributes;  			continue;  		}  		if (_c == '<') {  			if (_index < _text.Length) {  				if (_text [_index] == '%') {  					_oldstate = _state;  					_state = ParseState.ServerSideCode;  					continue;  				}  			}  		}  		break;  	case ParseState.Comment:  		if (_c == '>') {  			if (_fullcomment) {  				if ((_text [_index - 2] != '-') || (_text [_index - 3] != '-')) {  					continue;  				}  			}  			if (!PushNodeEnd (_index' false)) {  				// stop parsing  				_index = _text.Length;  				break;  			}  			_state = ParseState.Text;  			PushNodeStart (HtmlNodeType.Text' _index);  			continue;  		}  		break;  	case ParseState.ServerSideCode:  		if (_c == '%') {  			if (_index < _text.Length) {  				if (_text [_index] == '>') {  					switch (_oldstate) {  					case ParseState.AttributeAfterEquals:  						_state = ParseState.AttributeValue;  						break;  					case ParseState.BetweenAttributes:  						PushAttributeNameEnd (_index + 1);  						_state = ParseState.BetweenAttributes;  						break;  					default:  						_state = _oldstate;  						break;  					}  					IncrementPosition ();  				}  			}  		}  		break;  	case ParseState.PcData:  		// look for </tag + 1 char  		// check buffer end  		if ((_currentnode._namelength + 3) <= (_text.Length - (_index - 1))) {  			if (string.Compare (_text.Substring (_index - 1' _currentnode._namelength + 2)' "</" + _currentnode.Name' true) == 0) {  				int c = _text [_index - 1 + 2 + _currentnode.Name.Length];  				if ((c == '>') || (IsWhiteSpace (c))) {  					// add the script as a text node  					HtmlNode script = CreateNode (HtmlNodeType.Text' _currentnode._outerstartindex + _currentnode._outerlength);  					script._outerlength = _index - 1 - script._outerstartindex;  					_currentnode.AppendChild (script);  					PushNodeStart (HtmlNodeType.Element' _index - 1);  					PushNodeNameStart (false' _index - 1 + 2);  					_state = ParseState.Tag;  					IncrementPosition ();  				}  			}  		}  		break;  	}  }  
Magic Number,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,Parse,The following statement contains a magic number: while (_index < _text.Length) {  	_c = _text [_index];  	IncrementPosition ();  	switch (_state) {  	case ParseState.Text:  		if (NewCheck ())  			continue;  		break;  	case ParseState.WhichTag:  		if (NewCheck ())  			continue;  		if (_c == '/') {  			PushNodeNameStart (false' _index);  		}  		else {  			PushNodeNameStart (true' _index - 1);  			DecrementPosition ();  		}  		_state = ParseState.Tag;  		break;  	case ParseState.Tag:  		if (NewCheck ())  			continue;  		if (IsWhiteSpace (_c)) {  			PushNodeNameEnd (_index - 1);  			if (_state != ParseState.Tag)  				continue;  			_state = ParseState.BetweenAttributes;  			continue;  		}  		if (_c == '/') {  			PushNodeNameEnd (_index - 1);  			if (_state != ParseState.Tag)  				continue;  			_state = ParseState.EmptyTag;  			continue;  		}  		if (_c == '>') {  			PushNodeNameEnd (_index - 1);  			if (_state != ParseState.Tag)  				continue;  			if (!PushNodeEnd (_index' false)) {  				// stop parsing  				_index = _text.Length;  				break;  			}  			if (_state != ParseState.Tag)  				continue;  			_state = ParseState.Text;  			PushNodeStart (HtmlNodeType.Text' _index);  		}  		break;  	case ParseState.BetweenAttributes:  		if (NewCheck ())  			continue;  		if (IsWhiteSpace (_c))  			continue;  		if ((_c == '/') || (_c == '?')) {  			_state = ParseState.EmptyTag;  			continue;  		}  		if (_c == '>') {  			if (!PushNodeEnd (_index' false)) {  				// stop parsing  				_index = _text.Length;  				break;  			}  			if (_state != ParseState.BetweenAttributes)  				continue;  			_state = ParseState.Text;  			PushNodeStart (HtmlNodeType.Text' _index);  			continue;  		}  		PushAttributeNameStart (_index - 1);  		_state = ParseState.AttributeName;  		break;  	case ParseState.EmptyTag:  		if (NewCheck ())  			continue;  		if (_c == '>') {  			if (!PushNodeEnd (_index' true)) {  				// stop parsing  				_index = _text.Length;  				break;  			}  			if (_state != ParseState.EmptyTag)  				continue;  			_state = ParseState.Text;  			PushNodeStart (HtmlNodeType.Text' _index);  			continue;  		}  		_state = ParseState.BetweenAttributes;  		break;  	case ParseState.AttributeName:  		if (NewCheck ())  			continue;  		if (IsWhiteSpace (_c)) {  			PushAttributeNameEnd (_index - 1);  			_state = ParseState.AttributeBeforeEquals;  			continue;  		}  		if (_c == '=') {  			PushAttributeNameEnd (_index - 1);  			_state = ParseState.AttributeAfterEquals;  			continue;  		}  		if (_c == '>') {  			PushAttributeNameEnd (_index - 1);  			if (!PushNodeEnd (_index' false)) {  				// stop parsing  				_index = _text.Length;  				break;  			}  			if (_state != ParseState.AttributeName)  				continue;  			_state = ParseState.Text;  			PushNodeStart (HtmlNodeType.Text' _index);  			continue;  		}  		break;  	case ParseState.AttributeBeforeEquals:  		if (NewCheck ())  			continue;  		if (IsWhiteSpace (_c))  			continue;  		if (_c == '>') {  			if (!PushNodeEnd (_index' false)) {  				// stop parsing  				_index = _text.Length;  				break;  			}  			if (_state != ParseState.AttributeBeforeEquals)  				continue;  			_state = ParseState.Text;  			PushNodeStart (HtmlNodeType.Text' _index);  			continue;  		}  		if (_c == '=') {  			_state = ParseState.AttributeAfterEquals;  			continue;  		}  		// no equals' no whitespace' it's a new attrribute starting  		_state = ParseState.BetweenAttributes;  		DecrementPosition ();  		break;  	case ParseState.AttributeAfterEquals:  		if (NewCheck ())  			continue;  		if (IsWhiteSpace (_c))  			continue;  		if ((_c == '\'') || (_c == '"')) {  			_state = ParseState.QuotedAttributeValue;  			PushAttributeValueStart (_index' _c);  			lastquote = _c;  			continue;  		}  		if (_c == '>') {  			if (!PushNodeEnd (_index' false)) {  				// stop parsing  				_index = _text.Length;  				break;  			}  			if (_state != ParseState.AttributeAfterEquals)  				continue;  			_state = ParseState.Text;  			PushNodeStart (HtmlNodeType.Text' _index);  			continue;  		}  		PushAttributeValueStart (_index - 1);  		_state = ParseState.AttributeValue;  		break;  	case ParseState.AttributeValue:  		if (NewCheck ())  			continue;  		if (IsWhiteSpace (_c)) {  			PushAttributeValueEnd (_index - 1);  			_state = ParseState.BetweenAttributes;  			continue;  		}  		if (_c == '>') {  			PushAttributeValueEnd (_index - 1);  			if (!PushNodeEnd (_index' false)) {  				// stop parsing  				_index = _text.Length;  				break;  			}  			if (_state != ParseState.AttributeValue)  				continue;  			_state = ParseState.Text;  			PushNodeStart (HtmlNodeType.Text' _index);  			continue;  		}  		break;  	case ParseState.QuotedAttributeValue:  		if (_c == lastquote) {  			PushAttributeValueEnd (_index - 1);  			_state = ParseState.BetweenAttributes;  			continue;  		}  		if (_c == '<') {  			if (_index < _text.Length) {  				if (_text [_index] == '%') {  					_oldstate = _state;  					_state = ParseState.ServerSideCode;  					continue;  				}  			}  		}  		break;  	case ParseState.Comment:  		if (_c == '>') {  			if (_fullcomment) {  				if ((_text [_index - 2] != '-') || (_text [_index - 3] != '-')) {  					continue;  				}  			}  			if (!PushNodeEnd (_index' false)) {  				// stop parsing  				_index = _text.Length;  				break;  			}  			_state = ParseState.Text;  			PushNodeStart (HtmlNodeType.Text' _index);  			continue;  		}  		break;  	case ParseState.ServerSideCode:  		if (_c == '%') {  			if (_index < _text.Length) {  				if (_text [_index] == '>') {  					switch (_oldstate) {  					case ParseState.AttributeAfterEquals:  						_state = ParseState.AttributeValue;  						break;  					case ParseState.BetweenAttributes:  						PushAttributeNameEnd (_index + 1);  						_state = ParseState.BetweenAttributes;  						break;  					default:  						_state = _oldstate;  						break;  					}  					IncrementPosition ();  				}  			}  		}  		break;  	case ParseState.PcData:  		// look for </tag + 1 char  		// check buffer end  		if ((_currentnode._namelength + 3) <= (_text.Length - (_index - 1))) {  			if (string.Compare (_text.Substring (_index - 1' _currentnode._namelength + 2)' "</" + _currentnode.Name' true) == 0) {  				int c = _text [_index - 1 + 2 + _currentnode.Name.Length];  				if ((c == '>') || (IsWhiteSpace (c))) {  					// add the script as a text node  					HtmlNode script = CreateNode (HtmlNodeType.Text' _currentnode._outerstartindex + _currentnode._outerlength);  					script._outerlength = _index - 1 - script._outerstartindex;  					_currentnode.AppendChild (script);  					PushNodeStart (HtmlNodeType.Element' _index - 1);  					PushNodeNameStart (false' _index - 1 + 2);  					_state = ParseState.Tag;  					IncrementPosition ();  				}  			}  		}  		break;  	}  }  
Magic Number,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,Parse,The following statement contains a magic number: while (_index < _text.Length) {  	_c = _text [_index];  	IncrementPosition ();  	switch (_state) {  	case ParseState.Text:  		if (NewCheck ())  			continue;  		break;  	case ParseState.WhichTag:  		if (NewCheck ())  			continue;  		if (_c == '/') {  			PushNodeNameStart (false' _index);  		}  		else {  			PushNodeNameStart (true' _index - 1);  			DecrementPosition ();  		}  		_state = ParseState.Tag;  		break;  	case ParseState.Tag:  		if (NewCheck ())  			continue;  		if (IsWhiteSpace (_c)) {  			PushNodeNameEnd (_index - 1);  			if (_state != ParseState.Tag)  				continue;  			_state = ParseState.BetweenAttributes;  			continue;  		}  		if (_c == '/') {  			PushNodeNameEnd (_index - 1);  			if (_state != ParseState.Tag)  				continue;  			_state = ParseState.EmptyTag;  			continue;  		}  		if (_c == '>') {  			PushNodeNameEnd (_index - 1);  			if (_state != ParseState.Tag)  				continue;  			if (!PushNodeEnd (_index' false)) {  				// stop parsing  				_index = _text.Length;  				break;  			}  			if (_state != ParseState.Tag)  				continue;  			_state = ParseState.Text;  			PushNodeStart (HtmlNodeType.Text' _index);  		}  		break;  	case ParseState.BetweenAttributes:  		if (NewCheck ())  			continue;  		if (IsWhiteSpace (_c))  			continue;  		if ((_c == '/') || (_c == '?')) {  			_state = ParseState.EmptyTag;  			continue;  		}  		if (_c == '>') {  			if (!PushNodeEnd (_index' false)) {  				// stop parsing  				_index = _text.Length;  				break;  			}  			if (_state != ParseState.BetweenAttributes)  				continue;  			_state = ParseState.Text;  			PushNodeStart (HtmlNodeType.Text' _index);  			continue;  		}  		PushAttributeNameStart (_index - 1);  		_state = ParseState.AttributeName;  		break;  	case ParseState.EmptyTag:  		if (NewCheck ())  			continue;  		if (_c == '>') {  			if (!PushNodeEnd (_index' true)) {  				// stop parsing  				_index = _text.Length;  				break;  			}  			if (_state != ParseState.EmptyTag)  				continue;  			_state = ParseState.Text;  			PushNodeStart (HtmlNodeType.Text' _index);  			continue;  		}  		_state = ParseState.BetweenAttributes;  		break;  	case ParseState.AttributeName:  		if (NewCheck ())  			continue;  		if (IsWhiteSpace (_c)) {  			PushAttributeNameEnd (_index - 1);  			_state = ParseState.AttributeBeforeEquals;  			continue;  		}  		if (_c == '=') {  			PushAttributeNameEnd (_index - 1);  			_state = ParseState.AttributeAfterEquals;  			continue;  		}  		if (_c == '>') {  			PushAttributeNameEnd (_index - 1);  			if (!PushNodeEnd (_index' false)) {  				// stop parsing  				_index = _text.Length;  				break;  			}  			if (_state != ParseState.AttributeName)  				continue;  			_state = ParseState.Text;  			PushNodeStart (HtmlNodeType.Text' _index);  			continue;  		}  		break;  	case ParseState.AttributeBeforeEquals:  		if (NewCheck ())  			continue;  		if (IsWhiteSpace (_c))  			continue;  		if (_c == '>') {  			if (!PushNodeEnd (_index' false)) {  				// stop parsing  				_index = _text.Length;  				break;  			}  			if (_state != ParseState.AttributeBeforeEquals)  				continue;  			_state = ParseState.Text;  			PushNodeStart (HtmlNodeType.Text' _index);  			continue;  		}  		if (_c == '=') {  			_state = ParseState.AttributeAfterEquals;  			continue;  		}  		// no equals' no whitespace' it's a new attrribute starting  		_state = ParseState.BetweenAttributes;  		DecrementPosition ();  		break;  	case ParseState.AttributeAfterEquals:  		if (NewCheck ())  			continue;  		if (IsWhiteSpace (_c))  			continue;  		if ((_c == '\'') || (_c == '"')) {  			_state = ParseState.QuotedAttributeValue;  			PushAttributeValueStart (_index' _c);  			lastquote = _c;  			continue;  		}  		if (_c == '>') {  			if (!PushNodeEnd (_index' false)) {  				// stop parsing  				_index = _text.Length;  				break;  			}  			if (_state != ParseState.AttributeAfterEquals)  				continue;  			_state = ParseState.Text;  			PushNodeStart (HtmlNodeType.Text' _index);  			continue;  		}  		PushAttributeValueStart (_index - 1);  		_state = ParseState.AttributeValue;  		break;  	case ParseState.AttributeValue:  		if (NewCheck ())  			continue;  		if (IsWhiteSpace (_c)) {  			PushAttributeValueEnd (_index - 1);  			_state = ParseState.BetweenAttributes;  			continue;  		}  		if (_c == '>') {  			PushAttributeValueEnd (_index - 1);  			if (!PushNodeEnd (_index' false)) {  				// stop parsing  				_index = _text.Length;  				break;  			}  			if (_state != ParseState.AttributeValue)  				continue;  			_state = ParseState.Text;  			PushNodeStart (HtmlNodeType.Text' _index);  			continue;  		}  		break;  	case ParseState.QuotedAttributeValue:  		if (_c == lastquote) {  			PushAttributeValueEnd (_index - 1);  			_state = ParseState.BetweenAttributes;  			continue;  		}  		if (_c == '<') {  			if (_index < _text.Length) {  				if (_text [_index] == '%') {  					_oldstate = _state;  					_state = ParseState.ServerSideCode;  					continue;  				}  			}  		}  		break;  	case ParseState.Comment:  		if (_c == '>') {  			if (_fullcomment) {  				if ((_text [_index - 2] != '-') || (_text [_index - 3] != '-')) {  					continue;  				}  			}  			if (!PushNodeEnd (_index' false)) {  				// stop parsing  				_index = _text.Length;  				break;  			}  			_state = ParseState.Text;  			PushNodeStart (HtmlNodeType.Text' _index);  			continue;  		}  		break;  	case ParseState.ServerSideCode:  		if (_c == '%') {  			if (_index < _text.Length) {  				if (_text [_index] == '>') {  					switch (_oldstate) {  					case ParseState.AttributeAfterEquals:  						_state = ParseState.AttributeValue;  						break;  					case ParseState.BetweenAttributes:  						PushAttributeNameEnd (_index + 1);  						_state = ParseState.BetweenAttributes;  						break;  					default:  						_state = _oldstate;  						break;  					}  					IncrementPosition ();  				}  			}  		}  		break;  	case ParseState.PcData:  		// look for </tag + 1 char  		// check buffer end  		if ((_currentnode._namelength + 3) <= (_text.Length - (_index - 1))) {  			if (string.Compare (_text.Substring (_index - 1' _currentnode._namelength + 2)' "</" + _currentnode.Name' true) == 0) {  				int c = _text [_index - 1 + 2 + _currentnode.Name.Length];  				if ((c == '>') || (IsWhiteSpace (c))) {  					// add the script as a text node  					HtmlNode script = CreateNode (HtmlNodeType.Text' _currentnode._outerstartindex + _currentnode._outerlength);  					script._outerlength = _index - 1 - script._outerstartindex;  					_currentnode.AppendChild (script);  					PushNodeStart (HtmlNodeType.Element' _index - 1);  					PushNodeNameStart (false' _index - 1 + 2);  					_state = ParseState.Tag;  					IncrementPosition ();  				}  			}  		}  		break;  	}  }  
Magic Number,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,Parse,The following statement contains a magic number: while (_index < _text.Length) {  	_c = _text [_index];  	IncrementPosition ();  	switch (_state) {  	case ParseState.Text:  		if (NewCheck ())  			continue;  		break;  	case ParseState.WhichTag:  		if (NewCheck ())  			continue;  		if (_c == '/') {  			PushNodeNameStart (false' _index);  		}  		else {  			PushNodeNameStart (true' _index - 1);  			DecrementPosition ();  		}  		_state = ParseState.Tag;  		break;  	case ParseState.Tag:  		if (NewCheck ())  			continue;  		if (IsWhiteSpace (_c)) {  			PushNodeNameEnd (_index - 1);  			if (_state != ParseState.Tag)  				continue;  			_state = ParseState.BetweenAttributes;  			continue;  		}  		if (_c == '/') {  			PushNodeNameEnd (_index - 1);  			if (_state != ParseState.Tag)  				continue;  			_state = ParseState.EmptyTag;  			continue;  		}  		if (_c == '>') {  			PushNodeNameEnd (_index - 1);  			if (_state != ParseState.Tag)  				continue;  			if (!PushNodeEnd (_index' false)) {  				// stop parsing  				_index = _text.Length;  				break;  			}  			if (_state != ParseState.Tag)  				continue;  			_state = ParseState.Text;  			PushNodeStart (HtmlNodeType.Text' _index);  		}  		break;  	case ParseState.BetweenAttributes:  		if (NewCheck ())  			continue;  		if (IsWhiteSpace (_c))  			continue;  		if ((_c == '/') || (_c == '?')) {  			_state = ParseState.EmptyTag;  			continue;  		}  		if (_c == '>') {  			if (!PushNodeEnd (_index' false)) {  				// stop parsing  				_index = _text.Length;  				break;  			}  			if (_state != ParseState.BetweenAttributes)  				continue;  			_state = ParseState.Text;  			PushNodeStart (HtmlNodeType.Text' _index);  			continue;  		}  		PushAttributeNameStart (_index - 1);  		_state = ParseState.AttributeName;  		break;  	case ParseState.EmptyTag:  		if (NewCheck ())  			continue;  		if (_c == '>') {  			if (!PushNodeEnd (_index' true)) {  				// stop parsing  				_index = _text.Length;  				break;  			}  			if (_state != ParseState.EmptyTag)  				continue;  			_state = ParseState.Text;  			PushNodeStart (HtmlNodeType.Text' _index);  			continue;  		}  		_state = ParseState.BetweenAttributes;  		break;  	case ParseState.AttributeName:  		if (NewCheck ())  			continue;  		if (IsWhiteSpace (_c)) {  			PushAttributeNameEnd (_index - 1);  			_state = ParseState.AttributeBeforeEquals;  			continue;  		}  		if (_c == '=') {  			PushAttributeNameEnd (_index - 1);  			_state = ParseState.AttributeAfterEquals;  			continue;  		}  		if (_c == '>') {  			PushAttributeNameEnd (_index - 1);  			if (!PushNodeEnd (_index' false)) {  				// stop parsing  				_index = _text.Length;  				break;  			}  			if (_state != ParseState.AttributeName)  				continue;  			_state = ParseState.Text;  			PushNodeStart (HtmlNodeType.Text' _index);  			continue;  		}  		break;  	case ParseState.AttributeBeforeEquals:  		if (NewCheck ())  			continue;  		if (IsWhiteSpace (_c))  			continue;  		if (_c == '>') {  			if (!PushNodeEnd (_index' false)) {  				// stop parsing  				_index = _text.Length;  				break;  			}  			if (_state != ParseState.AttributeBeforeEquals)  				continue;  			_state = ParseState.Text;  			PushNodeStart (HtmlNodeType.Text' _index);  			continue;  		}  		if (_c == '=') {  			_state = ParseState.AttributeAfterEquals;  			continue;  		}  		// no equals' no whitespace' it's a new attrribute starting  		_state = ParseState.BetweenAttributes;  		DecrementPosition ();  		break;  	case ParseState.AttributeAfterEquals:  		if (NewCheck ())  			continue;  		if (IsWhiteSpace (_c))  			continue;  		if ((_c == '\'') || (_c == '"')) {  			_state = ParseState.QuotedAttributeValue;  			PushAttributeValueStart (_index' _c);  			lastquote = _c;  			continue;  		}  		if (_c == '>') {  			if (!PushNodeEnd (_index' false)) {  				// stop parsing  				_index = _text.Length;  				break;  			}  			if (_state != ParseState.AttributeAfterEquals)  				continue;  			_state = ParseState.Text;  			PushNodeStart (HtmlNodeType.Text' _index);  			continue;  		}  		PushAttributeValueStart (_index - 1);  		_state = ParseState.AttributeValue;  		break;  	case ParseState.AttributeValue:  		if (NewCheck ())  			continue;  		if (IsWhiteSpace (_c)) {  			PushAttributeValueEnd (_index - 1);  			_state = ParseState.BetweenAttributes;  			continue;  		}  		if (_c == '>') {  			PushAttributeValueEnd (_index - 1);  			if (!PushNodeEnd (_index' false)) {  				// stop parsing  				_index = _text.Length;  				break;  			}  			if (_state != ParseState.AttributeValue)  				continue;  			_state = ParseState.Text;  			PushNodeStart (HtmlNodeType.Text' _index);  			continue;  		}  		break;  	case ParseState.QuotedAttributeValue:  		if (_c == lastquote) {  			PushAttributeValueEnd (_index - 1);  			_state = ParseState.BetweenAttributes;  			continue;  		}  		if (_c == '<') {  			if (_index < _text.Length) {  				if (_text [_index] == '%') {  					_oldstate = _state;  					_state = ParseState.ServerSideCode;  					continue;  				}  			}  		}  		break;  	case ParseState.Comment:  		if (_c == '>') {  			if (_fullcomment) {  				if ((_text [_index - 2] != '-') || (_text [_index - 3] != '-')) {  					continue;  				}  			}  			if (!PushNodeEnd (_index' false)) {  				// stop parsing  				_index = _text.Length;  				break;  			}  			_state = ParseState.Text;  			PushNodeStart (HtmlNodeType.Text' _index);  			continue;  		}  		break;  	case ParseState.ServerSideCode:  		if (_c == '%') {  			if (_index < _text.Length) {  				if (_text [_index] == '>') {  					switch (_oldstate) {  					case ParseState.AttributeAfterEquals:  						_state = ParseState.AttributeValue;  						break;  					case ParseState.BetweenAttributes:  						PushAttributeNameEnd (_index + 1);  						_state = ParseState.BetweenAttributes;  						break;  					default:  						_state = _oldstate;  						break;  					}  					IncrementPosition ();  				}  			}  		}  		break;  	case ParseState.PcData:  		// look for </tag + 1 char  		// check buffer end  		if ((_currentnode._namelength + 3) <= (_text.Length - (_index - 1))) {  			if (string.Compare (_text.Substring (_index - 1' _currentnode._namelength + 2)' "</" + _currentnode.Name' true) == 0) {  				int c = _text [_index - 1 + 2 + _currentnode.Name.Length];  				if ((c == '>') || (IsWhiteSpace (c))) {  					// add the script as a text node  					HtmlNode script = CreateNode (HtmlNodeType.Text' _currentnode._outerstartindex + _currentnode._outerlength);  					script._outerlength = _index - 1 - script._outerstartindex;  					_currentnode.AppendChild (script);  					PushNodeStart (HtmlNodeType.Element' _index - 1);  					PushNodeNameStart (false' _index - 1 + 2);  					_state = ParseState.Tag;  					IncrementPosition ();  				}  			}  		}  		break;  	}  }  
Magic Number,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,Parse,The following statement contains a magic number: switch (_state) {  case ParseState.Text:  	if (NewCheck ())  		continue;  	break;  case ParseState.WhichTag:  	if (NewCheck ())  		continue;  	if (_c == '/') {  		PushNodeNameStart (false' _index);  	}  	else {  		PushNodeNameStart (true' _index - 1);  		DecrementPosition ();  	}  	_state = ParseState.Tag;  	break;  case ParseState.Tag:  	if (NewCheck ())  		continue;  	if (IsWhiteSpace (_c)) {  		PushNodeNameEnd (_index - 1);  		if (_state != ParseState.Tag)  			continue;  		_state = ParseState.BetweenAttributes;  		continue;  	}  	if (_c == '/') {  		PushNodeNameEnd (_index - 1);  		if (_state != ParseState.Tag)  			continue;  		_state = ParseState.EmptyTag;  		continue;  	}  	if (_c == '>') {  		PushNodeNameEnd (_index - 1);  		if (_state != ParseState.Tag)  			continue;  		if (!PushNodeEnd (_index' false)) {  			// stop parsing  			_index = _text.Length;  			break;  		}  		if (_state != ParseState.Tag)  			continue;  		_state = ParseState.Text;  		PushNodeStart (HtmlNodeType.Text' _index);  	}  	break;  case ParseState.BetweenAttributes:  	if (NewCheck ())  		continue;  	if (IsWhiteSpace (_c))  		continue;  	if ((_c == '/') || (_c == '?')) {  		_state = ParseState.EmptyTag;  		continue;  	}  	if (_c == '>') {  		if (!PushNodeEnd (_index' false)) {  			// stop parsing  			_index = _text.Length;  			break;  		}  		if (_state != ParseState.BetweenAttributes)  			continue;  		_state = ParseState.Text;  		PushNodeStart (HtmlNodeType.Text' _index);  		continue;  	}  	PushAttributeNameStart (_index - 1);  	_state = ParseState.AttributeName;  	break;  case ParseState.EmptyTag:  	if (NewCheck ())  		continue;  	if (_c == '>') {  		if (!PushNodeEnd (_index' true)) {  			// stop parsing  			_index = _text.Length;  			break;  		}  		if (_state != ParseState.EmptyTag)  			continue;  		_state = ParseState.Text;  		PushNodeStart (HtmlNodeType.Text' _index);  		continue;  	}  	_state = ParseState.BetweenAttributes;  	break;  case ParseState.AttributeName:  	if (NewCheck ())  		continue;  	if (IsWhiteSpace (_c)) {  		PushAttributeNameEnd (_index - 1);  		_state = ParseState.AttributeBeforeEquals;  		continue;  	}  	if (_c == '=') {  		PushAttributeNameEnd (_index - 1);  		_state = ParseState.AttributeAfterEquals;  		continue;  	}  	if (_c == '>') {  		PushAttributeNameEnd (_index - 1);  		if (!PushNodeEnd (_index' false)) {  			// stop parsing  			_index = _text.Length;  			break;  		}  		if (_state != ParseState.AttributeName)  			continue;  		_state = ParseState.Text;  		PushNodeStart (HtmlNodeType.Text' _index);  		continue;  	}  	break;  case ParseState.AttributeBeforeEquals:  	if (NewCheck ())  		continue;  	if (IsWhiteSpace (_c))  		continue;  	if (_c == '>') {  		if (!PushNodeEnd (_index' false)) {  			// stop parsing  			_index = _text.Length;  			break;  		}  		if (_state != ParseState.AttributeBeforeEquals)  			continue;  		_state = ParseState.Text;  		PushNodeStart (HtmlNodeType.Text' _index);  		continue;  	}  	if (_c == '=') {  		_state = ParseState.AttributeAfterEquals;  		continue;  	}  	// no equals' no whitespace' it's a new attrribute starting  	_state = ParseState.BetweenAttributes;  	DecrementPosition ();  	break;  case ParseState.AttributeAfterEquals:  	if (NewCheck ())  		continue;  	if (IsWhiteSpace (_c))  		continue;  	if ((_c == '\'') || (_c == '"')) {  		_state = ParseState.QuotedAttributeValue;  		PushAttributeValueStart (_index' _c);  		lastquote = _c;  		continue;  	}  	if (_c == '>') {  		if (!PushNodeEnd (_index' false)) {  			// stop parsing  			_index = _text.Length;  			break;  		}  		if (_state != ParseState.AttributeAfterEquals)  			continue;  		_state = ParseState.Text;  		PushNodeStart (HtmlNodeType.Text' _index);  		continue;  	}  	PushAttributeValueStart (_index - 1);  	_state = ParseState.AttributeValue;  	break;  case ParseState.AttributeValue:  	if (NewCheck ())  		continue;  	if (IsWhiteSpace (_c)) {  		PushAttributeValueEnd (_index - 1);  		_state = ParseState.BetweenAttributes;  		continue;  	}  	if (_c == '>') {  		PushAttributeValueEnd (_index - 1);  		if (!PushNodeEnd (_index' false)) {  			// stop parsing  			_index = _text.Length;  			break;  		}  		if (_state != ParseState.AttributeValue)  			continue;  		_state = ParseState.Text;  		PushNodeStart (HtmlNodeType.Text' _index);  		continue;  	}  	break;  case ParseState.QuotedAttributeValue:  	if (_c == lastquote) {  		PushAttributeValueEnd (_index - 1);  		_state = ParseState.BetweenAttributes;  		continue;  	}  	if (_c == '<') {  		if (_index < _text.Length) {  			if (_text [_index] == '%') {  				_oldstate = _state;  				_state = ParseState.ServerSideCode;  				continue;  			}  		}  	}  	break;  case ParseState.Comment:  	if (_c == '>') {  		if (_fullcomment) {  			if ((_text [_index - 2] != '-') || (_text [_index - 3] != '-')) {  				continue;  			}  		}  		if (!PushNodeEnd (_index' false)) {  			// stop parsing  			_index = _text.Length;  			break;  		}  		_state = ParseState.Text;  		PushNodeStart (HtmlNodeType.Text' _index);  		continue;  	}  	break;  case ParseState.ServerSideCode:  	if (_c == '%') {  		if (_index < _text.Length) {  			if (_text [_index] == '>') {  				switch (_oldstate) {  				case ParseState.AttributeAfterEquals:  					_state = ParseState.AttributeValue;  					break;  				case ParseState.BetweenAttributes:  					PushAttributeNameEnd (_index + 1);  					_state = ParseState.BetweenAttributes;  					break;  				default:  					_state = _oldstate;  					break;  				}  				IncrementPosition ();  			}  		}  	}  	break;  case ParseState.PcData:  	// look for </tag + 1 char  	// check buffer end  	if ((_currentnode._namelength + 3) <= (_text.Length - (_index - 1))) {  		if (string.Compare (_text.Substring (_index - 1' _currentnode._namelength + 2)' "</" + _currentnode.Name' true) == 0) {  			int c = _text [_index - 1 + 2 + _currentnode.Name.Length];  			if ((c == '>') || (IsWhiteSpace (c))) {  				// add the script as a text node  				HtmlNode script = CreateNode (HtmlNodeType.Text' _currentnode._outerstartindex + _currentnode._outerlength);  				script._outerlength = _index - 1 - script._outerstartindex;  				_currentnode.AppendChild (script);  				PushNodeStart (HtmlNodeType.Element' _index - 1);  				PushNodeNameStart (false' _index - 1 + 2);  				_state = ParseState.Tag;  				IncrementPosition ();  			}  		}  	}  	break;  }  
Magic Number,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,Parse,The following statement contains a magic number: switch (_state) {  case ParseState.Text:  	if (NewCheck ())  		continue;  	break;  case ParseState.WhichTag:  	if (NewCheck ())  		continue;  	if (_c == '/') {  		PushNodeNameStart (false' _index);  	}  	else {  		PushNodeNameStart (true' _index - 1);  		DecrementPosition ();  	}  	_state = ParseState.Tag;  	break;  case ParseState.Tag:  	if (NewCheck ())  		continue;  	if (IsWhiteSpace (_c)) {  		PushNodeNameEnd (_index - 1);  		if (_state != ParseState.Tag)  			continue;  		_state = ParseState.BetweenAttributes;  		continue;  	}  	if (_c == '/') {  		PushNodeNameEnd (_index - 1);  		if (_state != ParseState.Tag)  			continue;  		_state = ParseState.EmptyTag;  		continue;  	}  	if (_c == '>') {  		PushNodeNameEnd (_index - 1);  		if (_state != ParseState.Tag)  			continue;  		if (!PushNodeEnd (_index' false)) {  			// stop parsing  			_index = _text.Length;  			break;  		}  		if (_state != ParseState.Tag)  			continue;  		_state = ParseState.Text;  		PushNodeStart (HtmlNodeType.Text' _index);  	}  	break;  case ParseState.BetweenAttributes:  	if (NewCheck ())  		continue;  	if (IsWhiteSpace (_c))  		continue;  	if ((_c == '/') || (_c == '?')) {  		_state = ParseState.EmptyTag;  		continue;  	}  	if (_c == '>') {  		if (!PushNodeEnd (_index' false)) {  			// stop parsing  			_index = _text.Length;  			break;  		}  		if (_state != ParseState.BetweenAttributes)  			continue;  		_state = ParseState.Text;  		PushNodeStart (HtmlNodeType.Text' _index);  		continue;  	}  	PushAttributeNameStart (_index - 1);  	_state = ParseState.AttributeName;  	break;  case ParseState.EmptyTag:  	if (NewCheck ())  		continue;  	if (_c == '>') {  		if (!PushNodeEnd (_index' true)) {  			// stop parsing  			_index = _text.Length;  			break;  		}  		if (_state != ParseState.EmptyTag)  			continue;  		_state = ParseState.Text;  		PushNodeStart (HtmlNodeType.Text' _index);  		continue;  	}  	_state = ParseState.BetweenAttributes;  	break;  case ParseState.AttributeName:  	if (NewCheck ())  		continue;  	if (IsWhiteSpace (_c)) {  		PushAttributeNameEnd (_index - 1);  		_state = ParseState.AttributeBeforeEquals;  		continue;  	}  	if (_c == '=') {  		PushAttributeNameEnd (_index - 1);  		_state = ParseState.AttributeAfterEquals;  		continue;  	}  	if (_c == '>') {  		PushAttributeNameEnd (_index - 1);  		if (!PushNodeEnd (_index' false)) {  			// stop parsing  			_index = _text.Length;  			break;  		}  		if (_state != ParseState.AttributeName)  			continue;  		_state = ParseState.Text;  		PushNodeStart (HtmlNodeType.Text' _index);  		continue;  	}  	break;  case ParseState.AttributeBeforeEquals:  	if (NewCheck ())  		continue;  	if (IsWhiteSpace (_c))  		continue;  	if (_c == '>') {  		if (!PushNodeEnd (_index' false)) {  			// stop parsing  			_index = _text.Length;  			break;  		}  		if (_state != ParseState.AttributeBeforeEquals)  			continue;  		_state = ParseState.Text;  		PushNodeStart (HtmlNodeType.Text' _index);  		continue;  	}  	if (_c == '=') {  		_state = ParseState.AttributeAfterEquals;  		continue;  	}  	// no equals' no whitespace' it's a new attrribute starting  	_state = ParseState.BetweenAttributes;  	DecrementPosition ();  	break;  case ParseState.AttributeAfterEquals:  	if (NewCheck ())  		continue;  	if (IsWhiteSpace (_c))  		continue;  	if ((_c == '\'') || (_c == '"')) {  		_state = ParseState.QuotedAttributeValue;  		PushAttributeValueStart (_index' _c);  		lastquote = _c;  		continue;  	}  	if (_c == '>') {  		if (!PushNodeEnd (_index' false)) {  			// stop parsing  			_index = _text.Length;  			break;  		}  		if (_state != ParseState.AttributeAfterEquals)  			continue;  		_state = ParseState.Text;  		PushNodeStart (HtmlNodeType.Text' _index);  		continue;  	}  	PushAttributeValueStart (_index - 1);  	_state = ParseState.AttributeValue;  	break;  case ParseState.AttributeValue:  	if (NewCheck ())  		continue;  	if (IsWhiteSpace (_c)) {  		PushAttributeValueEnd (_index - 1);  		_state = ParseState.BetweenAttributes;  		continue;  	}  	if (_c == '>') {  		PushAttributeValueEnd (_index - 1);  		if (!PushNodeEnd (_index' false)) {  			// stop parsing  			_index = _text.Length;  			break;  		}  		if (_state != ParseState.AttributeValue)  			continue;  		_state = ParseState.Text;  		PushNodeStart (HtmlNodeType.Text' _index);  		continue;  	}  	break;  case ParseState.QuotedAttributeValue:  	if (_c == lastquote) {  		PushAttributeValueEnd (_index - 1);  		_state = ParseState.BetweenAttributes;  		continue;  	}  	if (_c == '<') {  		if (_index < _text.Length) {  			if (_text [_index] == '%') {  				_oldstate = _state;  				_state = ParseState.ServerSideCode;  				continue;  			}  		}  	}  	break;  case ParseState.Comment:  	if (_c == '>') {  		if (_fullcomment) {  			if ((_text [_index - 2] != '-') || (_text [_index - 3] != '-')) {  				continue;  			}  		}  		if (!PushNodeEnd (_index' false)) {  			// stop parsing  			_index = _text.Length;  			break;  		}  		_state = ParseState.Text;  		PushNodeStart (HtmlNodeType.Text' _index);  		continue;  	}  	break;  case ParseState.ServerSideCode:  	if (_c == '%') {  		if (_index < _text.Length) {  			if (_text [_index] == '>') {  				switch (_oldstate) {  				case ParseState.AttributeAfterEquals:  					_state = ParseState.AttributeValue;  					break;  				case ParseState.BetweenAttributes:  					PushAttributeNameEnd (_index + 1);  					_state = ParseState.BetweenAttributes;  					break;  				default:  					_state = _oldstate;  					break;  				}  				IncrementPosition ();  			}  		}  	}  	break;  case ParseState.PcData:  	// look for </tag + 1 char  	// check buffer end  	if ((_currentnode._namelength + 3) <= (_text.Length - (_index - 1))) {  		if (string.Compare (_text.Substring (_index - 1' _currentnode._namelength + 2)' "</" + _currentnode.Name' true) == 0) {  			int c = _text [_index - 1 + 2 + _currentnode.Name.Length];  			if ((c == '>') || (IsWhiteSpace (c))) {  				// add the script as a text node  				HtmlNode script = CreateNode (HtmlNodeType.Text' _currentnode._outerstartindex + _currentnode._outerlength);  				script._outerlength = _index - 1 - script._outerstartindex;  				_currentnode.AppendChild (script);  				PushNodeStart (HtmlNodeType.Element' _index - 1);  				PushNodeNameStart (false' _index - 1 + 2);  				_state = ParseState.Tag;  				IncrementPosition ();  			}  		}  	}  	break;  }  
Magic Number,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,Parse,The following statement contains a magic number: switch (_state) {  case ParseState.Text:  	if (NewCheck ())  		continue;  	break;  case ParseState.WhichTag:  	if (NewCheck ())  		continue;  	if (_c == '/') {  		PushNodeNameStart (false' _index);  	}  	else {  		PushNodeNameStart (true' _index - 1);  		DecrementPosition ();  	}  	_state = ParseState.Tag;  	break;  case ParseState.Tag:  	if (NewCheck ())  		continue;  	if (IsWhiteSpace (_c)) {  		PushNodeNameEnd (_index - 1);  		if (_state != ParseState.Tag)  			continue;  		_state = ParseState.BetweenAttributes;  		continue;  	}  	if (_c == '/') {  		PushNodeNameEnd (_index - 1);  		if (_state != ParseState.Tag)  			continue;  		_state = ParseState.EmptyTag;  		continue;  	}  	if (_c == '>') {  		PushNodeNameEnd (_index - 1);  		if (_state != ParseState.Tag)  			continue;  		if (!PushNodeEnd (_index' false)) {  			// stop parsing  			_index = _text.Length;  			break;  		}  		if (_state != ParseState.Tag)  			continue;  		_state = ParseState.Text;  		PushNodeStart (HtmlNodeType.Text' _index);  	}  	break;  case ParseState.BetweenAttributes:  	if (NewCheck ())  		continue;  	if (IsWhiteSpace (_c))  		continue;  	if ((_c == '/') || (_c == '?')) {  		_state = ParseState.EmptyTag;  		continue;  	}  	if (_c == '>') {  		if (!PushNodeEnd (_index' false)) {  			// stop parsing  			_index = _text.Length;  			break;  		}  		if (_state != ParseState.BetweenAttributes)  			continue;  		_state = ParseState.Text;  		PushNodeStart (HtmlNodeType.Text' _index);  		continue;  	}  	PushAttributeNameStart (_index - 1);  	_state = ParseState.AttributeName;  	break;  case ParseState.EmptyTag:  	if (NewCheck ())  		continue;  	if (_c == '>') {  		if (!PushNodeEnd (_index' true)) {  			// stop parsing  			_index = _text.Length;  			break;  		}  		if (_state != ParseState.EmptyTag)  			continue;  		_state = ParseState.Text;  		PushNodeStart (HtmlNodeType.Text' _index);  		continue;  	}  	_state = ParseState.BetweenAttributes;  	break;  case ParseState.AttributeName:  	if (NewCheck ())  		continue;  	if (IsWhiteSpace (_c)) {  		PushAttributeNameEnd (_index - 1);  		_state = ParseState.AttributeBeforeEquals;  		continue;  	}  	if (_c == '=') {  		PushAttributeNameEnd (_index - 1);  		_state = ParseState.AttributeAfterEquals;  		continue;  	}  	if (_c == '>') {  		PushAttributeNameEnd (_index - 1);  		if (!PushNodeEnd (_index' false)) {  			// stop parsing  			_index = _text.Length;  			break;  		}  		if (_state != ParseState.AttributeName)  			continue;  		_state = ParseState.Text;  		PushNodeStart (HtmlNodeType.Text' _index);  		continue;  	}  	break;  case ParseState.AttributeBeforeEquals:  	if (NewCheck ())  		continue;  	if (IsWhiteSpace (_c))  		continue;  	if (_c == '>') {  		if (!PushNodeEnd (_index' false)) {  			// stop parsing  			_index = _text.Length;  			break;  		}  		if (_state != ParseState.AttributeBeforeEquals)  			continue;  		_state = ParseState.Text;  		PushNodeStart (HtmlNodeType.Text' _index);  		continue;  	}  	if (_c == '=') {  		_state = ParseState.AttributeAfterEquals;  		continue;  	}  	// no equals' no whitespace' it's a new attrribute starting  	_state = ParseState.BetweenAttributes;  	DecrementPosition ();  	break;  case ParseState.AttributeAfterEquals:  	if (NewCheck ())  		continue;  	if (IsWhiteSpace (_c))  		continue;  	if ((_c == '\'') || (_c == '"')) {  		_state = ParseState.QuotedAttributeValue;  		PushAttributeValueStart (_index' _c);  		lastquote = _c;  		continue;  	}  	if (_c == '>') {  		if (!PushNodeEnd (_index' false)) {  			// stop parsing  			_index = _text.Length;  			break;  		}  		if (_state != ParseState.AttributeAfterEquals)  			continue;  		_state = ParseState.Text;  		PushNodeStart (HtmlNodeType.Text' _index);  		continue;  	}  	PushAttributeValueStart (_index - 1);  	_state = ParseState.AttributeValue;  	break;  case ParseState.AttributeValue:  	if (NewCheck ())  		continue;  	if (IsWhiteSpace (_c)) {  		PushAttributeValueEnd (_index - 1);  		_state = ParseState.BetweenAttributes;  		continue;  	}  	if (_c == '>') {  		PushAttributeValueEnd (_index - 1);  		if (!PushNodeEnd (_index' false)) {  			// stop parsing  			_index = _text.Length;  			break;  		}  		if (_state != ParseState.AttributeValue)  			continue;  		_state = ParseState.Text;  		PushNodeStart (HtmlNodeType.Text' _index);  		continue;  	}  	break;  case ParseState.QuotedAttributeValue:  	if (_c == lastquote) {  		PushAttributeValueEnd (_index - 1);  		_state = ParseState.BetweenAttributes;  		continue;  	}  	if (_c == '<') {  		if (_index < _text.Length) {  			if (_text [_index] == '%') {  				_oldstate = _state;  				_state = ParseState.ServerSideCode;  				continue;  			}  		}  	}  	break;  case ParseState.Comment:  	if (_c == '>') {  		if (_fullcomment) {  			if ((_text [_index - 2] != '-') || (_text [_index - 3] != '-')) {  				continue;  			}  		}  		if (!PushNodeEnd (_index' false)) {  			// stop parsing  			_index = _text.Length;  			break;  		}  		_state = ParseState.Text;  		PushNodeStart (HtmlNodeType.Text' _index);  		continue;  	}  	break;  case ParseState.ServerSideCode:  	if (_c == '%') {  		if (_index < _text.Length) {  			if (_text [_index] == '>') {  				switch (_oldstate) {  				case ParseState.AttributeAfterEquals:  					_state = ParseState.AttributeValue;  					break;  				case ParseState.BetweenAttributes:  					PushAttributeNameEnd (_index + 1);  					_state = ParseState.BetweenAttributes;  					break;  				default:  					_state = _oldstate;  					break;  				}  				IncrementPosition ();  			}  		}  	}  	break;  case ParseState.PcData:  	// look for </tag + 1 char  	// check buffer end  	if ((_currentnode._namelength + 3) <= (_text.Length - (_index - 1))) {  		if (string.Compare (_text.Substring (_index - 1' _currentnode._namelength + 2)' "</" + _currentnode.Name' true) == 0) {  			int c = _text [_index - 1 + 2 + _currentnode.Name.Length];  			if ((c == '>') || (IsWhiteSpace (c))) {  				// add the script as a text node  				HtmlNode script = CreateNode (HtmlNodeType.Text' _currentnode._outerstartindex + _currentnode._outerlength);  				script._outerlength = _index - 1 - script._outerstartindex;  				_currentnode.AppendChild (script);  				PushNodeStart (HtmlNodeType.Element' _index - 1);  				PushNodeNameStart (false' _index - 1 + 2);  				_state = ParseState.Tag;  				IncrementPosition ();  			}  		}  	}  	break;  }  
Magic Number,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,Parse,The following statement contains a magic number: switch (_state) {  case ParseState.Text:  	if (NewCheck ())  		continue;  	break;  case ParseState.WhichTag:  	if (NewCheck ())  		continue;  	if (_c == '/') {  		PushNodeNameStart (false' _index);  	}  	else {  		PushNodeNameStart (true' _index - 1);  		DecrementPosition ();  	}  	_state = ParseState.Tag;  	break;  case ParseState.Tag:  	if (NewCheck ())  		continue;  	if (IsWhiteSpace (_c)) {  		PushNodeNameEnd (_index - 1);  		if (_state != ParseState.Tag)  			continue;  		_state = ParseState.BetweenAttributes;  		continue;  	}  	if (_c == '/') {  		PushNodeNameEnd (_index - 1);  		if (_state != ParseState.Tag)  			continue;  		_state = ParseState.EmptyTag;  		continue;  	}  	if (_c == '>') {  		PushNodeNameEnd (_index - 1);  		if (_state != ParseState.Tag)  			continue;  		if (!PushNodeEnd (_index' false)) {  			// stop parsing  			_index = _text.Length;  			break;  		}  		if (_state != ParseState.Tag)  			continue;  		_state = ParseState.Text;  		PushNodeStart (HtmlNodeType.Text' _index);  	}  	break;  case ParseState.BetweenAttributes:  	if (NewCheck ())  		continue;  	if (IsWhiteSpace (_c))  		continue;  	if ((_c == '/') || (_c == '?')) {  		_state = ParseState.EmptyTag;  		continue;  	}  	if (_c == '>') {  		if (!PushNodeEnd (_index' false)) {  			// stop parsing  			_index = _text.Length;  			break;  		}  		if (_state != ParseState.BetweenAttributes)  			continue;  		_state = ParseState.Text;  		PushNodeStart (HtmlNodeType.Text' _index);  		continue;  	}  	PushAttributeNameStart (_index - 1);  	_state = ParseState.AttributeName;  	break;  case ParseState.EmptyTag:  	if (NewCheck ())  		continue;  	if (_c == '>') {  		if (!PushNodeEnd (_index' true)) {  			// stop parsing  			_index = _text.Length;  			break;  		}  		if (_state != ParseState.EmptyTag)  			continue;  		_state = ParseState.Text;  		PushNodeStart (HtmlNodeType.Text' _index);  		continue;  	}  	_state = ParseState.BetweenAttributes;  	break;  case ParseState.AttributeName:  	if (NewCheck ())  		continue;  	if (IsWhiteSpace (_c)) {  		PushAttributeNameEnd (_index - 1);  		_state = ParseState.AttributeBeforeEquals;  		continue;  	}  	if (_c == '=') {  		PushAttributeNameEnd (_index - 1);  		_state = ParseState.AttributeAfterEquals;  		continue;  	}  	if (_c == '>') {  		PushAttributeNameEnd (_index - 1);  		if (!PushNodeEnd (_index' false)) {  			// stop parsing  			_index = _text.Length;  			break;  		}  		if (_state != ParseState.AttributeName)  			continue;  		_state = ParseState.Text;  		PushNodeStart (HtmlNodeType.Text' _index);  		continue;  	}  	break;  case ParseState.AttributeBeforeEquals:  	if (NewCheck ())  		continue;  	if (IsWhiteSpace (_c))  		continue;  	if (_c == '>') {  		if (!PushNodeEnd (_index' false)) {  			// stop parsing  			_index = _text.Length;  			break;  		}  		if (_state != ParseState.AttributeBeforeEquals)  			continue;  		_state = ParseState.Text;  		PushNodeStart (HtmlNodeType.Text' _index);  		continue;  	}  	if (_c == '=') {  		_state = ParseState.AttributeAfterEquals;  		continue;  	}  	// no equals' no whitespace' it's a new attrribute starting  	_state = ParseState.BetweenAttributes;  	DecrementPosition ();  	break;  case ParseState.AttributeAfterEquals:  	if (NewCheck ())  		continue;  	if (IsWhiteSpace (_c))  		continue;  	if ((_c == '\'') || (_c == '"')) {  		_state = ParseState.QuotedAttributeValue;  		PushAttributeValueStart (_index' _c);  		lastquote = _c;  		continue;  	}  	if (_c == '>') {  		if (!PushNodeEnd (_index' false)) {  			// stop parsing  			_index = _text.Length;  			break;  		}  		if (_state != ParseState.AttributeAfterEquals)  			continue;  		_state = ParseState.Text;  		PushNodeStart (HtmlNodeType.Text' _index);  		continue;  	}  	PushAttributeValueStart (_index - 1);  	_state = ParseState.AttributeValue;  	break;  case ParseState.AttributeValue:  	if (NewCheck ())  		continue;  	if (IsWhiteSpace (_c)) {  		PushAttributeValueEnd (_index - 1);  		_state = ParseState.BetweenAttributes;  		continue;  	}  	if (_c == '>') {  		PushAttributeValueEnd (_index - 1);  		if (!PushNodeEnd (_index' false)) {  			// stop parsing  			_index = _text.Length;  			break;  		}  		if (_state != ParseState.AttributeValue)  			continue;  		_state = ParseState.Text;  		PushNodeStart (HtmlNodeType.Text' _index);  		continue;  	}  	break;  case ParseState.QuotedAttributeValue:  	if (_c == lastquote) {  		PushAttributeValueEnd (_index - 1);  		_state = ParseState.BetweenAttributes;  		continue;  	}  	if (_c == '<') {  		if (_index < _text.Length) {  			if (_text [_index] == '%') {  				_oldstate = _state;  				_state = ParseState.ServerSideCode;  				continue;  			}  		}  	}  	break;  case ParseState.Comment:  	if (_c == '>') {  		if (_fullcomment) {  			if ((_text [_index - 2] != '-') || (_text [_index - 3] != '-')) {  				continue;  			}  		}  		if (!PushNodeEnd (_index' false)) {  			// stop parsing  			_index = _text.Length;  			break;  		}  		_state = ParseState.Text;  		PushNodeStart (HtmlNodeType.Text' _index);  		continue;  	}  	break;  case ParseState.ServerSideCode:  	if (_c == '%') {  		if (_index < _text.Length) {  			if (_text [_index] == '>') {  				switch (_oldstate) {  				case ParseState.AttributeAfterEquals:  					_state = ParseState.AttributeValue;  					break;  				case ParseState.BetweenAttributes:  					PushAttributeNameEnd (_index + 1);  					_state = ParseState.BetweenAttributes;  					break;  				default:  					_state = _oldstate;  					break;  				}  				IncrementPosition ();  			}  		}  	}  	break;  case ParseState.PcData:  	// look for </tag + 1 char  	// check buffer end  	if ((_currentnode._namelength + 3) <= (_text.Length - (_index - 1))) {  		if (string.Compare (_text.Substring (_index - 1' _currentnode._namelength + 2)' "</" + _currentnode.Name' true) == 0) {  			int c = _text [_index - 1 + 2 + _currentnode.Name.Length];  			if ((c == '>') || (IsWhiteSpace (c))) {  				// add the script as a text node  				HtmlNode script = CreateNode (HtmlNodeType.Text' _currentnode._outerstartindex + _currentnode._outerlength);  				script._outerlength = _index - 1 - script._outerstartindex;  				_currentnode.AppendChild (script);  				PushNodeStart (HtmlNodeType.Element' _index - 1);  				PushNodeNameStart (false' _index - 1 + 2);  				_state = ParseState.Tag;  				IncrementPosition ();  			}  		}  	}  	break;  }  
Magic Number,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,Parse,The following statement contains a magic number: switch (_state) {  case ParseState.Text:  	if (NewCheck ())  		continue;  	break;  case ParseState.WhichTag:  	if (NewCheck ())  		continue;  	if (_c == '/') {  		PushNodeNameStart (false' _index);  	}  	else {  		PushNodeNameStart (true' _index - 1);  		DecrementPosition ();  	}  	_state = ParseState.Tag;  	break;  case ParseState.Tag:  	if (NewCheck ())  		continue;  	if (IsWhiteSpace (_c)) {  		PushNodeNameEnd (_index - 1);  		if (_state != ParseState.Tag)  			continue;  		_state = ParseState.BetweenAttributes;  		continue;  	}  	if (_c == '/') {  		PushNodeNameEnd (_index - 1);  		if (_state != ParseState.Tag)  			continue;  		_state = ParseState.EmptyTag;  		continue;  	}  	if (_c == '>') {  		PushNodeNameEnd (_index - 1);  		if (_state != ParseState.Tag)  			continue;  		if (!PushNodeEnd (_index' false)) {  			// stop parsing  			_index = _text.Length;  			break;  		}  		if (_state != ParseState.Tag)  			continue;  		_state = ParseState.Text;  		PushNodeStart (HtmlNodeType.Text' _index);  	}  	break;  case ParseState.BetweenAttributes:  	if (NewCheck ())  		continue;  	if (IsWhiteSpace (_c))  		continue;  	if ((_c == '/') || (_c == '?')) {  		_state = ParseState.EmptyTag;  		continue;  	}  	if (_c == '>') {  		if (!PushNodeEnd (_index' false)) {  			// stop parsing  			_index = _text.Length;  			break;  		}  		if (_state != ParseState.BetweenAttributes)  			continue;  		_state = ParseState.Text;  		PushNodeStart (HtmlNodeType.Text' _index);  		continue;  	}  	PushAttributeNameStart (_index - 1);  	_state = ParseState.AttributeName;  	break;  case ParseState.EmptyTag:  	if (NewCheck ())  		continue;  	if (_c == '>') {  		if (!PushNodeEnd (_index' true)) {  			// stop parsing  			_index = _text.Length;  			break;  		}  		if (_state != ParseState.EmptyTag)  			continue;  		_state = ParseState.Text;  		PushNodeStart (HtmlNodeType.Text' _index);  		continue;  	}  	_state = ParseState.BetweenAttributes;  	break;  case ParseState.AttributeName:  	if (NewCheck ())  		continue;  	if (IsWhiteSpace (_c)) {  		PushAttributeNameEnd (_index - 1);  		_state = ParseState.AttributeBeforeEquals;  		continue;  	}  	if (_c == '=') {  		PushAttributeNameEnd (_index - 1);  		_state = ParseState.AttributeAfterEquals;  		continue;  	}  	if (_c == '>') {  		PushAttributeNameEnd (_index - 1);  		if (!PushNodeEnd (_index' false)) {  			// stop parsing  			_index = _text.Length;  			break;  		}  		if (_state != ParseState.AttributeName)  			continue;  		_state = ParseState.Text;  		PushNodeStart (HtmlNodeType.Text' _index);  		continue;  	}  	break;  case ParseState.AttributeBeforeEquals:  	if (NewCheck ())  		continue;  	if (IsWhiteSpace (_c))  		continue;  	if (_c == '>') {  		if (!PushNodeEnd (_index' false)) {  			// stop parsing  			_index = _text.Length;  			break;  		}  		if (_state != ParseState.AttributeBeforeEquals)  			continue;  		_state = ParseState.Text;  		PushNodeStart (HtmlNodeType.Text' _index);  		continue;  	}  	if (_c == '=') {  		_state = ParseState.AttributeAfterEquals;  		continue;  	}  	// no equals' no whitespace' it's a new attrribute starting  	_state = ParseState.BetweenAttributes;  	DecrementPosition ();  	break;  case ParseState.AttributeAfterEquals:  	if (NewCheck ())  		continue;  	if (IsWhiteSpace (_c))  		continue;  	if ((_c == '\'') || (_c == '"')) {  		_state = ParseState.QuotedAttributeValue;  		PushAttributeValueStart (_index' _c);  		lastquote = _c;  		continue;  	}  	if (_c == '>') {  		if (!PushNodeEnd (_index' false)) {  			// stop parsing  			_index = _text.Length;  			break;  		}  		if (_state != ParseState.AttributeAfterEquals)  			continue;  		_state = ParseState.Text;  		PushNodeStart (HtmlNodeType.Text' _index);  		continue;  	}  	PushAttributeValueStart (_index - 1);  	_state = ParseState.AttributeValue;  	break;  case ParseState.AttributeValue:  	if (NewCheck ())  		continue;  	if (IsWhiteSpace (_c)) {  		PushAttributeValueEnd (_index - 1);  		_state = ParseState.BetweenAttributes;  		continue;  	}  	if (_c == '>') {  		PushAttributeValueEnd (_index - 1);  		if (!PushNodeEnd (_index' false)) {  			// stop parsing  			_index = _text.Length;  			break;  		}  		if (_state != ParseState.AttributeValue)  			continue;  		_state = ParseState.Text;  		PushNodeStart (HtmlNodeType.Text' _index);  		continue;  	}  	break;  case ParseState.QuotedAttributeValue:  	if (_c == lastquote) {  		PushAttributeValueEnd (_index - 1);  		_state = ParseState.BetweenAttributes;  		continue;  	}  	if (_c == '<') {  		if (_index < _text.Length) {  			if (_text [_index] == '%') {  				_oldstate = _state;  				_state = ParseState.ServerSideCode;  				continue;  			}  		}  	}  	break;  case ParseState.Comment:  	if (_c == '>') {  		if (_fullcomment) {  			if ((_text [_index - 2] != '-') || (_text [_index - 3] != '-')) {  				continue;  			}  		}  		if (!PushNodeEnd (_index' false)) {  			// stop parsing  			_index = _text.Length;  			break;  		}  		_state = ParseState.Text;  		PushNodeStart (HtmlNodeType.Text' _index);  		continue;  	}  	break;  case ParseState.ServerSideCode:  	if (_c == '%') {  		if (_index < _text.Length) {  			if (_text [_index] == '>') {  				switch (_oldstate) {  				case ParseState.AttributeAfterEquals:  					_state = ParseState.AttributeValue;  					break;  				case ParseState.BetweenAttributes:  					PushAttributeNameEnd (_index + 1);  					_state = ParseState.BetweenAttributes;  					break;  				default:  					_state = _oldstate;  					break;  				}  				IncrementPosition ();  			}  		}  	}  	break;  case ParseState.PcData:  	// look for </tag + 1 char  	// check buffer end  	if ((_currentnode._namelength + 3) <= (_text.Length - (_index - 1))) {  		if (string.Compare (_text.Substring (_index - 1' _currentnode._namelength + 2)' "</" + _currentnode.Name' true) == 0) {  			int c = _text [_index - 1 + 2 + _currentnode.Name.Length];  			if ((c == '>') || (IsWhiteSpace (c))) {  				// add the script as a text node  				HtmlNode script = CreateNode (HtmlNodeType.Text' _currentnode._outerstartindex + _currentnode._outerlength);  				script._outerlength = _index - 1 - script._outerstartindex;  				_currentnode.AppendChild (script);  				PushNodeStart (HtmlNodeType.Element' _index - 1);  				PushNodeNameStart (false' _index - 1 + 2);  				_state = ParseState.Tag;  				IncrementPosition ();  			}  		}  	}  	break;  }  
Magic Number,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,Parse,The following statement contains a magic number: switch (_state) {  case ParseState.Text:  	if (NewCheck ())  		continue;  	break;  case ParseState.WhichTag:  	if (NewCheck ())  		continue;  	if (_c == '/') {  		PushNodeNameStart (false' _index);  	}  	else {  		PushNodeNameStart (true' _index - 1);  		DecrementPosition ();  	}  	_state = ParseState.Tag;  	break;  case ParseState.Tag:  	if (NewCheck ())  		continue;  	if (IsWhiteSpace (_c)) {  		PushNodeNameEnd (_index - 1);  		if (_state != ParseState.Tag)  			continue;  		_state = ParseState.BetweenAttributes;  		continue;  	}  	if (_c == '/') {  		PushNodeNameEnd (_index - 1);  		if (_state != ParseState.Tag)  			continue;  		_state = ParseState.EmptyTag;  		continue;  	}  	if (_c == '>') {  		PushNodeNameEnd (_index - 1);  		if (_state != ParseState.Tag)  			continue;  		if (!PushNodeEnd (_index' false)) {  			// stop parsing  			_index = _text.Length;  			break;  		}  		if (_state != ParseState.Tag)  			continue;  		_state = ParseState.Text;  		PushNodeStart (HtmlNodeType.Text' _index);  	}  	break;  case ParseState.BetweenAttributes:  	if (NewCheck ())  		continue;  	if (IsWhiteSpace (_c))  		continue;  	if ((_c == '/') || (_c == '?')) {  		_state = ParseState.EmptyTag;  		continue;  	}  	if (_c == '>') {  		if (!PushNodeEnd (_index' false)) {  			// stop parsing  			_index = _text.Length;  			break;  		}  		if (_state != ParseState.BetweenAttributes)  			continue;  		_state = ParseState.Text;  		PushNodeStart (HtmlNodeType.Text' _index);  		continue;  	}  	PushAttributeNameStart (_index - 1);  	_state = ParseState.AttributeName;  	break;  case ParseState.EmptyTag:  	if (NewCheck ())  		continue;  	if (_c == '>') {  		if (!PushNodeEnd (_index' true)) {  			// stop parsing  			_index = _text.Length;  			break;  		}  		if (_state != ParseState.EmptyTag)  			continue;  		_state = ParseState.Text;  		PushNodeStart (HtmlNodeType.Text' _index);  		continue;  	}  	_state = ParseState.BetweenAttributes;  	break;  case ParseState.AttributeName:  	if (NewCheck ())  		continue;  	if (IsWhiteSpace (_c)) {  		PushAttributeNameEnd (_index - 1);  		_state = ParseState.AttributeBeforeEquals;  		continue;  	}  	if (_c == '=') {  		PushAttributeNameEnd (_index - 1);  		_state = ParseState.AttributeAfterEquals;  		continue;  	}  	if (_c == '>') {  		PushAttributeNameEnd (_index - 1);  		if (!PushNodeEnd (_index' false)) {  			// stop parsing  			_index = _text.Length;  			break;  		}  		if (_state != ParseState.AttributeName)  			continue;  		_state = ParseState.Text;  		PushNodeStart (HtmlNodeType.Text' _index);  		continue;  	}  	break;  case ParseState.AttributeBeforeEquals:  	if (NewCheck ())  		continue;  	if (IsWhiteSpace (_c))  		continue;  	if (_c == '>') {  		if (!PushNodeEnd (_index' false)) {  			// stop parsing  			_index = _text.Length;  			break;  		}  		if (_state != ParseState.AttributeBeforeEquals)  			continue;  		_state = ParseState.Text;  		PushNodeStart (HtmlNodeType.Text' _index);  		continue;  	}  	if (_c == '=') {  		_state = ParseState.AttributeAfterEquals;  		continue;  	}  	// no equals' no whitespace' it's a new attrribute starting  	_state = ParseState.BetweenAttributes;  	DecrementPosition ();  	break;  case ParseState.AttributeAfterEquals:  	if (NewCheck ())  		continue;  	if (IsWhiteSpace (_c))  		continue;  	if ((_c == '\'') || (_c == '"')) {  		_state = ParseState.QuotedAttributeValue;  		PushAttributeValueStart (_index' _c);  		lastquote = _c;  		continue;  	}  	if (_c == '>') {  		if (!PushNodeEnd (_index' false)) {  			// stop parsing  			_index = _text.Length;  			break;  		}  		if (_state != ParseState.AttributeAfterEquals)  			continue;  		_state = ParseState.Text;  		PushNodeStart (HtmlNodeType.Text' _index);  		continue;  	}  	PushAttributeValueStart (_index - 1);  	_state = ParseState.AttributeValue;  	break;  case ParseState.AttributeValue:  	if (NewCheck ())  		continue;  	if (IsWhiteSpace (_c)) {  		PushAttributeValueEnd (_index - 1);  		_state = ParseState.BetweenAttributes;  		continue;  	}  	if (_c == '>') {  		PushAttributeValueEnd (_index - 1);  		if (!PushNodeEnd (_index' false)) {  			// stop parsing  			_index = _text.Length;  			break;  		}  		if (_state != ParseState.AttributeValue)  			continue;  		_state = ParseState.Text;  		PushNodeStart (HtmlNodeType.Text' _index);  		continue;  	}  	break;  case ParseState.QuotedAttributeValue:  	if (_c == lastquote) {  		PushAttributeValueEnd (_index - 1);  		_state = ParseState.BetweenAttributes;  		continue;  	}  	if (_c == '<') {  		if (_index < _text.Length) {  			if (_text [_index] == '%') {  				_oldstate = _state;  				_state = ParseState.ServerSideCode;  				continue;  			}  		}  	}  	break;  case ParseState.Comment:  	if (_c == '>') {  		if (_fullcomment) {  			if ((_text [_index - 2] != '-') || (_text [_index - 3] != '-')) {  				continue;  			}  		}  		if (!PushNodeEnd (_index' false)) {  			// stop parsing  			_index = _text.Length;  			break;  		}  		_state = ParseState.Text;  		PushNodeStart (HtmlNodeType.Text' _index);  		continue;  	}  	break;  case ParseState.ServerSideCode:  	if (_c == '%') {  		if (_index < _text.Length) {  			if (_text [_index] == '>') {  				switch (_oldstate) {  				case ParseState.AttributeAfterEquals:  					_state = ParseState.AttributeValue;  					break;  				case ParseState.BetweenAttributes:  					PushAttributeNameEnd (_index + 1);  					_state = ParseState.BetweenAttributes;  					break;  				default:  					_state = _oldstate;  					break;  				}  				IncrementPosition ();  			}  		}  	}  	break;  case ParseState.PcData:  	// look for </tag + 1 char  	// check buffer end  	if ((_currentnode._namelength + 3) <= (_text.Length - (_index - 1))) {  		if (string.Compare (_text.Substring (_index - 1' _currentnode._namelength + 2)' "</" + _currentnode.Name' true) == 0) {  			int c = _text [_index - 1 + 2 + _currentnode.Name.Length];  			if ((c == '>') || (IsWhiteSpace (c))) {  				// add the script as a text node  				HtmlNode script = CreateNode (HtmlNodeType.Text' _currentnode._outerstartindex + _currentnode._outerlength);  				script._outerlength = _index - 1 - script._outerstartindex;  				_currentnode.AppendChild (script);  				PushNodeStart (HtmlNodeType.Element' _index - 1);  				PushNodeNameStart (false' _index - 1 + 2);  				_state = ParseState.Tag;  				IncrementPosition ();  			}  		}  	}  	break;  }  
Magic Number,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,Parse,The following statement contains a magic number: if (_c == '>') {  	if (_fullcomment) {  		if ((_text [_index - 2] != '-') || (_text [_index - 3] != '-')) {  			continue;  		}  	}  	if (!PushNodeEnd (_index' false)) {  		// stop parsing  		_index = _text.Length;  		break;  	}  	_state = ParseState.Text;  	PushNodeStart (HtmlNodeType.Text' _index);  	continue;  }  
Magic Number,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,Parse,The following statement contains a magic number: if (_c == '>') {  	if (_fullcomment) {  		if ((_text [_index - 2] != '-') || (_text [_index - 3] != '-')) {  			continue;  		}  	}  	if (!PushNodeEnd (_index' false)) {  		// stop parsing  		_index = _text.Length;  		break;  	}  	_state = ParseState.Text;  	PushNodeStart (HtmlNodeType.Text' _index);  	continue;  }  
Magic Number,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,Parse,The following statement contains a magic number: if (_fullcomment) {  	if ((_text [_index - 2] != '-') || (_text [_index - 3] != '-')) {  		continue;  	}  }  
Magic Number,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,Parse,The following statement contains a magic number: if (_fullcomment) {  	if ((_text [_index - 2] != '-') || (_text [_index - 3] != '-')) {  		continue;  	}  }  
Magic Number,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,Parse,The following statement contains a magic number: if ((_text [_index - 2] != '-') || (_text [_index - 3] != '-')) {  	continue;  }  
Magic Number,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,Parse,The following statement contains a magic number: if ((_text [_index - 2] != '-') || (_text [_index - 3] != '-')) {  	continue;  }  
Magic Number,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,Parse,The following statement contains a magic number: if ((_currentnode._namelength + 3) <= (_text.Length - (_index - 1))) {  	if (string.Compare (_text.Substring (_index - 1' _currentnode._namelength + 2)' "</" + _currentnode.Name' true) == 0) {  		int c = _text [_index - 1 + 2 + _currentnode.Name.Length];  		if ((c == '>') || (IsWhiteSpace (c))) {  			// add the script as a text node  			HtmlNode script = CreateNode (HtmlNodeType.Text' _currentnode._outerstartindex + _currentnode._outerlength);  			script._outerlength = _index - 1 - script._outerstartindex;  			_currentnode.AppendChild (script);  			PushNodeStart (HtmlNodeType.Element' _index - 1);  			PushNodeNameStart (false' _index - 1 + 2);  			_state = ParseState.Tag;  			IncrementPosition ();  		}  	}  }  
Magic Number,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,Parse,The following statement contains a magic number: if ((_currentnode._namelength + 3) <= (_text.Length - (_index - 1))) {  	if (string.Compare (_text.Substring (_index - 1' _currentnode._namelength + 2)' "</" + _currentnode.Name' true) == 0) {  		int c = _text [_index - 1 + 2 + _currentnode.Name.Length];  		if ((c == '>') || (IsWhiteSpace (c))) {  			// add the script as a text node  			HtmlNode script = CreateNode (HtmlNodeType.Text' _currentnode._outerstartindex + _currentnode._outerlength);  			script._outerlength = _index - 1 - script._outerstartindex;  			_currentnode.AppendChild (script);  			PushNodeStart (HtmlNodeType.Element' _index - 1);  			PushNodeNameStart (false' _index - 1 + 2);  			_state = ParseState.Tag;  			IncrementPosition ();  		}  	}  }  
Magic Number,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,Parse,The following statement contains a magic number: if ((_currentnode._namelength + 3) <= (_text.Length - (_index - 1))) {  	if (string.Compare (_text.Substring (_index - 1' _currentnode._namelength + 2)' "</" + _currentnode.Name' true) == 0) {  		int c = _text [_index - 1 + 2 + _currentnode.Name.Length];  		if ((c == '>') || (IsWhiteSpace (c))) {  			// add the script as a text node  			HtmlNode script = CreateNode (HtmlNodeType.Text' _currentnode._outerstartindex + _currentnode._outerlength);  			script._outerlength = _index - 1 - script._outerstartindex;  			_currentnode.AppendChild (script);  			PushNodeStart (HtmlNodeType.Element' _index - 1);  			PushNodeNameStart (false' _index - 1 + 2);  			_state = ParseState.Tag;  			IncrementPosition ();  		}  	}  }  
Magic Number,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,Parse,The following statement contains a magic number: if ((_currentnode._namelength + 3) <= (_text.Length - (_index - 1))) {  	if (string.Compare (_text.Substring (_index - 1' _currentnode._namelength + 2)' "</" + _currentnode.Name' true) == 0) {  		int c = _text [_index - 1 + 2 + _currentnode.Name.Length];  		if ((c == '>') || (IsWhiteSpace (c))) {  			// add the script as a text node  			HtmlNode script = CreateNode (HtmlNodeType.Text' _currentnode._outerstartindex + _currentnode._outerlength);  			script._outerlength = _index - 1 - script._outerstartindex;  			_currentnode.AppendChild (script);  			PushNodeStart (HtmlNodeType.Element' _index - 1);  			PushNodeNameStart (false' _index - 1 + 2);  			_state = ParseState.Tag;  			IncrementPosition ();  		}  	}  }  
Magic Number,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,Parse,The following statement contains a magic number: if (string.Compare (_text.Substring (_index - 1' _currentnode._namelength + 2)' "</" + _currentnode.Name' true) == 0) {  	int c = _text [_index - 1 + 2 + _currentnode.Name.Length];  	if ((c == '>') || (IsWhiteSpace (c))) {  		// add the script as a text node  		HtmlNode script = CreateNode (HtmlNodeType.Text' _currentnode._outerstartindex + _currentnode._outerlength);  		script._outerlength = _index - 1 - script._outerstartindex;  		_currentnode.AppendChild (script);  		PushNodeStart (HtmlNodeType.Element' _index - 1);  		PushNodeNameStart (false' _index - 1 + 2);  		_state = ParseState.Tag;  		IncrementPosition ();  	}  }  
Magic Number,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,Parse,The following statement contains a magic number: if (string.Compare (_text.Substring (_index - 1' _currentnode._namelength + 2)' "</" + _currentnode.Name' true) == 0) {  	int c = _text [_index - 1 + 2 + _currentnode.Name.Length];  	if ((c == '>') || (IsWhiteSpace (c))) {  		// add the script as a text node  		HtmlNode script = CreateNode (HtmlNodeType.Text' _currentnode._outerstartindex + _currentnode._outerlength);  		script._outerlength = _index - 1 - script._outerstartindex;  		_currentnode.AppendChild (script);  		PushNodeStart (HtmlNodeType.Element' _index - 1);  		PushNodeNameStart (false' _index - 1 + 2);  		_state = ParseState.Tag;  		IncrementPosition ();  	}  }  
Magic Number,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,Parse,The following statement contains a magic number: if (string.Compare (_text.Substring (_index - 1' _currentnode._namelength + 2)' "</" + _currentnode.Name' true) == 0) {  	int c = _text [_index - 1 + 2 + _currentnode.Name.Length];  	if ((c == '>') || (IsWhiteSpace (c))) {  		// add the script as a text node  		HtmlNode script = CreateNode (HtmlNodeType.Text' _currentnode._outerstartindex + _currentnode._outerlength);  		script._outerlength = _index - 1 - script._outerstartindex;  		_currentnode.AppendChild (script);  		PushNodeStart (HtmlNodeType.Element' _index - 1);  		PushNodeNameStart (false' _index - 1 + 2);  		_state = ParseState.Tag;  		IncrementPosition ();  	}  }  
Magic Number,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,Parse,The following statement contains a magic number: if ((c == '>') || (IsWhiteSpace (c))) {  	// add the script as a text node  	HtmlNode script = CreateNode (HtmlNodeType.Text' _currentnode._outerstartindex + _currentnode._outerlength);  	script._outerlength = _index - 1 - script._outerstartindex;  	_currentnode.AppendChild (script);  	PushNodeStart (HtmlNodeType.Element' _index - 1);  	PushNodeNameStart (false' _index - 1 + 2);  	_state = ParseState.Tag;  	IncrementPosition ();  }  
Magic Number,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,Parse,The following statement contains a magic number: PushNodeNameStart (false' _index - 1 + 2);  
Magic Number,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,ReadDocumentEncoding,The following statement contains a magic number: if (node._namelength != 4)  	// quick check' avoids string alloc  	return;  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("nbsp"' 160);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (160' "nbsp");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("iexcl"' 161);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (161' "iexcl");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("cent"' 162);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (162' "cent");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("pound"' 163);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (163' "pound");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("curren"' 164);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (164' "curren");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("yen"' 165);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (165' "yen");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("brvbar"' 166);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (166' "brvbar");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("sect"' 167);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (167' "sect");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("uml"' 168);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (168' "uml");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("copy"' 169);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (169' "copy");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("ordf"' 170);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (170' "ordf");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("laquo"' 171);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (171' "laquo");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("not"' 172);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (172' "not");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("shy"' 173);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (173' "shy");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("reg"' 174);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (174' "reg");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("macr"' 175);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (175' "macr");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("deg"' 176);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (176' "deg");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("plusmn"' 177);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (177' "plusmn");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("sup2"' 178);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (178' "sup2");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("sup3"' 179);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (179' "sup3");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("acute"' 180);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (180' "acute");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("micro"' 181);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (181' "micro");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("para"' 182);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (182' "para");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("middot"' 183);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (183' "middot");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("cedil"' 184);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (184' "cedil");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("sup1"' 185);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (185' "sup1");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("ordm"' 186);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (186' "ordm");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("raquo"' 187);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (187' "raquo");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("frac14"' 188);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (188' "frac14");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("frac12"' 189);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (189' "frac12");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("frac34"' 190);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (190' "frac34");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("iquest"' 191);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (191' "iquest");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("Agrave"' 192);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (192' "Agrave");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("Aacute"' 193);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (193' "Aacute");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("Acirc"' 194);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (194' "Acirc");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("Atilde"' 195);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (195' "Atilde");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("Auml"' 196);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (196' "Auml");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("Aring"' 197);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (197' "Aring");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("AElig"' 198);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (198' "AElig");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("Ccedil"' 199);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (199' "Ccedil");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("Egrave"' 200);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (200' "Egrave");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("Eacute"' 201);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (201' "Eacute");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("Ecirc"' 202);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (202' "Ecirc");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("Euml"' 203);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (203' "Euml");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("Igrave"' 204);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (204' "Igrave");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("Iacute"' 205);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (205' "Iacute");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("Icirc"' 206);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (206' "Icirc");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("Iuml"' 207);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (207' "Iuml");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("ETH"' 208);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (208' "ETH");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("Ntilde"' 209);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (209' "Ntilde");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("Ograve"' 210);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (210' "Ograve");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("Oacute"' 211);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (211' "Oacute");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("Ocirc"' 212);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (212' "Ocirc");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("Otilde"' 213);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (213' "Otilde");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("Ouml"' 214);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (214' "Ouml");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("times"' 215);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (215' "times");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("Oslash"' 216);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (216' "Oslash");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("Ugrave"' 217);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (217' "Ugrave");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("Uacute"' 218);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (218' "Uacute");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("Ucirc"' 219);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (219' "Ucirc");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("Uuml"' 220);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (220' "Uuml");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("Yacute"' 221);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (221' "Yacute");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("THORN"' 222);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (222' "THORN");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("szlig"' 223);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (223' "szlig");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("agrave"' 224);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (224' "agrave");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("aacute"' 225);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (225' "aacute");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("acirc"' 226);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (226' "acirc");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("atilde"' 227);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (227' "atilde");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("auml"' 228);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (228' "auml");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("aring"' 229);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (229' "aring");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("aelig"' 230);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (230' "aelig");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("ccedil"' 231);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (231' "ccedil");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("egrave"' 232);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (232' "egrave");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("eacute"' 233);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (233' "eacute");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("ecirc"' 234);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (234' "ecirc");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("euml"' 235);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (235' "euml");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("igrave"' 236);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (236' "igrave");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("iacute"' 237);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (237' "iacute");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("icirc"' 238);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (238' "icirc");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("iuml"' 239);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (239' "iuml");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("eth"' 240);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (240' "eth");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("ntilde"' 241);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (241' "ntilde");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("ograve"' 242);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (242' "ograve");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("oacute"' 243);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (243' "oacute");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("ocirc"' 244);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (244' "ocirc");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("otilde"' 245);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (245' "otilde");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("ouml"' 246);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (246' "ouml");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("divide"' 247);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (247' "divide");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("oslash"' 248);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (248' "oslash");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("ugrave"' 249);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (249' "ugrave");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("uacute"' 250);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (250' "uacute");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("ucirc"' 251);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (251' "ucirc");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("uuml"' 252);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (252' "uuml");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("yacute"' 253);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (253' "yacute");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("thorn"' 254);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (254' "thorn");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("yuml"' 255);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (255' "yuml");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("fnof"' 402);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (402' "fnof");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("Alpha"' 913);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (913' "Alpha");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("Beta"' 914);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (914' "Beta");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("Gamma"' 915);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (915' "Gamma");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("Delta"' 916);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (916' "Delta");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("Epsilon"' 917);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (917' "Epsilon");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("Zeta"' 918);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (918' "Zeta");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("Eta"' 919);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (919' "Eta");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("Theta"' 920);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (920' "Theta");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("Iota"' 921);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (921' "Iota");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("Kappa"' 922);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (922' "Kappa");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("Lambda"' 923);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (923' "Lambda");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("Mu"' 924);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (924' "Mu");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("Nu"' 925);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (925' "Nu");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("Xi"' 926);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (926' "Xi");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("Omicron"' 927);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (927' "Omicron");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("Pi"' 928);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (928' "Pi");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("Rho"' 929);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (929' "Rho");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("Sigma"' 931);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (931' "Sigma");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("Tau"' 932);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (932' "Tau");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("Upsilon"' 933);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (933' "Upsilon");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("Phi"' 934);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (934' "Phi");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("Chi"' 935);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (935' "Chi");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("Psi"' 936);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (936' "Psi");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("Omega"' 937);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (937' "Omega");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("alpha"' 945);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (945' "alpha");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("beta"' 946);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (946' "beta");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("gamma"' 947);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (947' "gamma");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("delta"' 948);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (948' "delta");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("epsilon"' 949);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (949' "epsilon");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("zeta"' 950);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (950' "zeta");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("eta"' 951);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (951' "eta");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("theta"' 952);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (952' "theta");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("iota"' 953);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (953' "iota");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("kappa"' 954);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (954' "kappa");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("lambda"' 955);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (955' "lambda");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("mu"' 956);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (956' "mu");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("nu"' 957);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (957' "nu");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("xi"' 958);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (958' "xi");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("omicron"' 959);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (959' "omicron");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("pi"' 960);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (960' "pi");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("rho"' 961);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (961' "rho");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("sigmaf"' 962);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (962' "sigmaf");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("sigma"' 963);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (963' "sigma");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("tau"' 964);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (964' "tau");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("upsilon"' 965);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (965' "upsilon");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("phi"' 966);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (966' "phi");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("chi"' 967);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (967' "chi");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("psi"' 968);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (968' "psi");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("omega"' 969);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (969' "omega");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("thetasym"' 977);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (977' "thetasym");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("upsih"' 978);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (978' "upsih");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("piv"' 982);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (982' "piv");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("bull"' 8226);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8226' "bull");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("hellip"' 8230);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8230' "hellip");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("prime"' 8242);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8242' "prime");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("Prime"' 8243);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8243' "Prime");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("oline"' 8254);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8254' "oline");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("frasl"' 8260);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8260' "frasl");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("weierp"' 8472);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8472' "weierp");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("image"' 8465);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8465' "image");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("real"' 8476);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8476' "real");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("trade"' 8482);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8482' "trade");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("alefsym"' 8501);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8501' "alefsym");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("larr"' 8592);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8592' "larr");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("uarr"' 8593);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8593' "uarr");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("rarr"' 8594);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8594' "rarr");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("darr"' 8595);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8595' "darr");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("harr"' 8596);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8596' "harr");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("crarr"' 8629);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8629' "crarr");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("lArr"' 8656);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8656' "lArr");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("uArr"' 8657);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8657' "uArr");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("rArr"' 8658);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8658' "rArr");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("dArr"' 8659);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8659' "dArr");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("hArr"' 8660);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8660' "hArr");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("forall"' 8704);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8704' "forall");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("part"' 8706);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8706' "part");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("exist"' 8707);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8707' "exist");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("empty"' 8709);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8709' "empty");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("nabla"' 8711);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8711' "nabla");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("isin"' 8712);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8712' "isin");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("notin"' 8713);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8713' "notin");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("ni"' 8715);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8715' "ni");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("prod"' 8719);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8719' "prod");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("sum"' 8721);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8721' "sum");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("minus"' 8722);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8722' "minus");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("lowast"' 8727);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8727' "lowast");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("radic"' 8730);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8730' "radic");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("prop"' 8733);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8733' "prop");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("infin"' 8734);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8734' "infin");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("ang"' 8736);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8736' "ang");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("and"' 8743);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8743' "and");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("or"' 8744);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8744' "or");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("cap"' 8745);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8745' "cap");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("cup"' 8746);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8746' "cup");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("int"' 8747);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8747' "int");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("there4"' 8756);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8756' "there4");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("sim"' 8764);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8764' "sim");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("cong"' 8773);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8773' "cong");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("asymp"' 8776);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8776' "asymp");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("ne"' 8800);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8800' "ne");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("equiv"' 8801);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8801' "equiv");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("le"' 8804);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8804' "le");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("ge"' 8805);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8805' "ge");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("sub"' 8834);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8834' "sub");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("sup"' 8835);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8835' "sup");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("nsub"' 8836);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8836' "nsub");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("sube"' 8838);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8838' "sube");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("supe"' 8839);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8839' "supe");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("oplus"' 8853);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8853' "oplus");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("otimes"' 8855);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8855' "otimes");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("perp"' 8869);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8869' "perp");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("sdot"' 8901);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8901' "sdot");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("lceil"' 8968);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8968' "lceil");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("rceil"' 8969);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8969' "rceil");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("lfloor"' 8970);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8970' "lfloor");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("rfloor"' 8971);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8971' "rfloor");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("lang"' 9001);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (9001' "lang");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("rang"' 9002);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (9002' "rang");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("loz"' 9674);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (9674' "loz");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("spades"' 9824);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (9824' "spades");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("clubs"' 9827);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (9827' "clubs");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("hearts"' 9829);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (9829' "hearts");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("diams"' 9830);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (9830' "diams");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("quot"' 34);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (34' "quot");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("amp"' 38);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (38' "amp");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("lt"' 60);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (60' "lt");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("gt"' 62);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (62' "gt");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("OElig"' 338);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (338' "OElig");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("oelig"' 339);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (339' "oelig");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("Scaron"' 352);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (352' "Scaron");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("scaron"' 353);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (353' "scaron");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("Yuml"' 376);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (376' "Yuml");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("circ"' 710);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (710' "circ");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("tilde"' 732);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (732' "tilde");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("ensp"' 8194);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8194' "ensp");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("emsp"' 8195);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8195' "emsp");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("thinsp"' 8201);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8201' "thinsp");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("zwnj"' 8204);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8204' "zwnj");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("zwj"' 8205);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8205' "zwj");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("lrm"' 8206);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8206' "lrm");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("rlm"' 8207);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8207' "rlm");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("ndash"' 8211);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8211' "ndash");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("mdash"' 8212);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8212' "mdash");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("lsquo"' 8216);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8216' "lsquo");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("rsquo"' 8217);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8217' "rsquo");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("sbquo"' 8218);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8218' "sbquo");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("ldquo"' 8220);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8220' "ldquo");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("rdquo"' 8221);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8221' "rdquo");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("bdquo"' 8222);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8222' "bdquo");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("dagger"' 8224);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8224' "dagger");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("Dagger"' 8225);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8225' "Dagger");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("permil"' 8240);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8240' "permil");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("lsaquo"' 8249);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8249' "lsaquo");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("rsaquo"' 8250);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8250' "rsaquo");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityValue.Add ("euro"' 8364);  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _entityName.Add (8364' "euro");  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,HtmlEntity,The following statement contains a magic number: _maxEntitySize = 8 + 1;  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,DeEntitize,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	switch (state) {  	case ParseState.Text:  		switch (text [i]) {  		case '&':  			state = ParseState.EntityStart;  			break;  		default:  			sb.Append (text [i]);  			break;  		}  		break;  	case ParseState.EntityStart:  		switch (text [i]) {  		case ';':  			if (entity.Length == 0) {  				sb.Append ("&;");  			}  			else {  				if (entity [0] == '#') {  					string e = entity.ToString ();  					try {  						string codeStr = e.Substring (1).Trim ().ToLower ();  						int fromBase;  						if (codeStr.StartsWith ("x")) {  							fromBase = 16;  							codeStr = codeStr.Substring (1);  						}  						else {  							fromBase = 10;  						}  						int code = Convert.ToInt32 (codeStr' fromBase);  						sb.Append (Convert.ToChar (code));  					}  					catch {  						sb.Append ("&#" + e + ";");  					}  				}  				else {  					// named entity?  					int code;  					object o = _entityValue [entity.ToString ()];  					if (o == null) {  						// nope  						sb.Append ("&" + entity + ";");  					}  					else {  						// we found one  						code = (int)o;  						sb.Append (Convert.ToChar (code));  					}  				}  				entity.Remove (0' entity.Length);  			}  			state = ParseState.Text;  			break;  		case '&':  			// new entity start without end' it was not an entity...  			sb.Append ("&" + entity);  			entity.Remove (0' entity.Length);  			break;  		default:  			entity.Append (text [i]);  			if (entity.Length > _maxEntitySize) {  				// unknown stuff' just don't touch it  				state = ParseState.Text;  				sb.Append ("&" + entity);  				entity.Remove (0' entity.Length);  			}  			break;  		}  		break;  	}  }  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,DeEntitize,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	switch (state) {  	case ParseState.Text:  		switch (text [i]) {  		case '&':  			state = ParseState.EntityStart;  			break;  		default:  			sb.Append (text [i]);  			break;  		}  		break;  	case ParseState.EntityStart:  		switch (text [i]) {  		case ';':  			if (entity.Length == 0) {  				sb.Append ("&;");  			}  			else {  				if (entity [0] == '#') {  					string e = entity.ToString ();  					try {  						string codeStr = e.Substring (1).Trim ().ToLower ();  						int fromBase;  						if (codeStr.StartsWith ("x")) {  							fromBase = 16;  							codeStr = codeStr.Substring (1);  						}  						else {  							fromBase = 10;  						}  						int code = Convert.ToInt32 (codeStr' fromBase);  						sb.Append (Convert.ToChar (code));  					}  					catch {  						sb.Append ("&#" + e + ";");  					}  				}  				else {  					// named entity?  					int code;  					object o = _entityValue [entity.ToString ()];  					if (o == null) {  						// nope  						sb.Append ("&" + entity + ";");  					}  					else {  						// we found one  						code = (int)o;  						sb.Append (Convert.ToChar (code));  					}  				}  				entity.Remove (0' entity.Length);  			}  			state = ParseState.Text;  			break;  		case '&':  			// new entity start without end' it was not an entity...  			sb.Append ("&" + entity);  			entity.Remove (0' entity.Length);  			break;  		default:  			entity.Append (text [i]);  			if (entity.Length > _maxEntitySize) {  				// unknown stuff' just don't touch it  				state = ParseState.Text;  				sb.Append ("&" + entity);  				entity.Remove (0' entity.Length);  			}  			break;  		}  		break;  	}  }  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,DeEntitize,The following statement contains a magic number: switch (state) {  case ParseState.Text:  	switch (text [i]) {  	case '&':  		state = ParseState.EntityStart;  		break;  	default:  		sb.Append (text [i]);  		break;  	}  	break;  case ParseState.EntityStart:  	switch (text [i]) {  	case ';':  		if (entity.Length == 0) {  			sb.Append ("&;");  		}  		else {  			if (entity [0] == '#') {  				string e = entity.ToString ();  				try {  					string codeStr = e.Substring (1).Trim ().ToLower ();  					int fromBase;  					if (codeStr.StartsWith ("x")) {  						fromBase = 16;  						codeStr = codeStr.Substring (1);  					}  					else {  						fromBase = 10;  					}  					int code = Convert.ToInt32 (codeStr' fromBase);  					sb.Append (Convert.ToChar (code));  				}  				catch {  					sb.Append ("&#" + e + ";");  				}  			}  			else {  				// named entity?  				int code;  				object o = _entityValue [entity.ToString ()];  				if (o == null) {  					// nope  					sb.Append ("&" + entity + ";");  				}  				else {  					// we found one  					code = (int)o;  					sb.Append (Convert.ToChar (code));  				}  			}  			entity.Remove (0' entity.Length);  		}  		state = ParseState.Text;  		break;  	case '&':  		// new entity start without end' it was not an entity...  		sb.Append ("&" + entity);  		entity.Remove (0' entity.Length);  		break;  	default:  		entity.Append (text [i]);  		if (entity.Length > _maxEntitySize) {  			// unknown stuff' just don't touch it  			state = ParseState.Text;  			sb.Append ("&" + entity);  			entity.Remove (0' entity.Length);  		}  		break;  	}  	break;  }  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,DeEntitize,The following statement contains a magic number: switch (state) {  case ParseState.Text:  	switch (text [i]) {  	case '&':  		state = ParseState.EntityStart;  		break;  	default:  		sb.Append (text [i]);  		break;  	}  	break;  case ParseState.EntityStart:  	switch (text [i]) {  	case ';':  		if (entity.Length == 0) {  			sb.Append ("&;");  		}  		else {  			if (entity [0] == '#') {  				string e = entity.ToString ();  				try {  					string codeStr = e.Substring (1).Trim ().ToLower ();  					int fromBase;  					if (codeStr.StartsWith ("x")) {  						fromBase = 16;  						codeStr = codeStr.Substring (1);  					}  					else {  						fromBase = 10;  					}  					int code = Convert.ToInt32 (codeStr' fromBase);  					sb.Append (Convert.ToChar (code));  				}  				catch {  					sb.Append ("&#" + e + ";");  				}  			}  			else {  				// named entity?  				int code;  				object o = _entityValue [entity.ToString ()];  				if (o == null) {  					// nope  					sb.Append ("&" + entity + ";");  				}  				else {  					// we found one  					code = (int)o;  					sb.Append (Convert.ToChar (code));  				}  			}  			entity.Remove (0' entity.Length);  		}  		state = ParseState.Text;  		break;  	case '&':  		// new entity start without end' it was not an entity...  		sb.Append ("&" + entity);  		entity.Remove (0' entity.Length);  		break;  	default:  		entity.Append (text [i]);  		if (entity.Length > _maxEntitySize) {  			// unknown stuff' just don't touch it  			state = ParseState.Text;  			sb.Append ("&" + entity);  			entity.Remove (0' entity.Length);  		}  		break;  	}  	break;  }  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,DeEntitize,The following statement contains a magic number: switch (text [i]) {  case ';':  	if (entity.Length == 0) {  		sb.Append ("&;");  	}  	else {  		if (entity [0] == '#') {  			string e = entity.ToString ();  			try {  				string codeStr = e.Substring (1).Trim ().ToLower ();  				int fromBase;  				if (codeStr.StartsWith ("x")) {  					fromBase = 16;  					codeStr = codeStr.Substring (1);  				}  				else {  					fromBase = 10;  				}  				int code = Convert.ToInt32 (codeStr' fromBase);  				sb.Append (Convert.ToChar (code));  			}  			catch {  				sb.Append ("&#" + e + ";");  			}  		}  		else {  			// named entity?  			int code;  			object o = _entityValue [entity.ToString ()];  			if (o == null) {  				// nope  				sb.Append ("&" + entity + ";");  			}  			else {  				// we found one  				code = (int)o;  				sb.Append (Convert.ToChar (code));  			}  		}  		entity.Remove (0' entity.Length);  	}  	state = ParseState.Text;  	break;  case '&':  	// new entity start without end' it was not an entity...  	sb.Append ("&" + entity);  	entity.Remove (0' entity.Length);  	break;  default:  	entity.Append (text [i]);  	if (entity.Length > _maxEntitySize) {  		// unknown stuff' just don't touch it  		state = ParseState.Text;  		sb.Append ("&" + entity);  		entity.Remove (0' entity.Length);  	}  	break;  }  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,DeEntitize,The following statement contains a magic number: switch (text [i]) {  case ';':  	if (entity.Length == 0) {  		sb.Append ("&;");  	}  	else {  		if (entity [0] == '#') {  			string e = entity.ToString ();  			try {  				string codeStr = e.Substring (1).Trim ().ToLower ();  				int fromBase;  				if (codeStr.StartsWith ("x")) {  					fromBase = 16;  					codeStr = codeStr.Substring (1);  				}  				else {  					fromBase = 10;  				}  				int code = Convert.ToInt32 (codeStr' fromBase);  				sb.Append (Convert.ToChar (code));  			}  			catch {  				sb.Append ("&#" + e + ";");  			}  		}  		else {  			// named entity?  			int code;  			object o = _entityValue [entity.ToString ()];  			if (o == null) {  				// nope  				sb.Append ("&" + entity + ";");  			}  			else {  				// we found one  				code = (int)o;  				sb.Append (Convert.ToChar (code));  			}  		}  		entity.Remove (0' entity.Length);  	}  	state = ParseState.Text;  	break;  case '&':  	// new entity start without end' it was not an entity...  	sb.Append ("&" + entity);  	entity.Remove (0' entity.Length);  	break;  default:  	entity.Append (text [i]);  	if (entity.Length > _maxEntitySize) {  		// unknown stuff' just don't touch it  		state = ParseState.Text;  		sb.Append ("&" + entity);  		entity.Remove (0' entity.Length);  	}  	break;  }  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,DeEntitize,The following statement contains a magic number: if (entity.Length == 0) {  	sb.Append ("&;");  }  else {  	if (entity [0] == '#') {  		string e = entity.ToString ();  		try {  			string codeStr = e.Substring (1).Trim ().ToLower ();  			int fromBase;  			if (codeStr.StartsWith ("x")) {  				fromBase = 16;  				codeStr = codeStr.Substring (1);  			}  			else {  				fromBase = 10;  			}  			int code = Convert.ToInt32 (codeStr' fromBase);  			sb.Append (Convert.ToChar (code));  		}  		catch {  			sb.Append ("&#" + e + ";");  		}  	}  	else {  		// named entity?  		int code;  		object o = _entityValue [entity.ToString ()];  		if (o == null) {  			// nope  			sb.Append ("&" + entity + ";");  		}  		else {  			// we found one  			code = (int)o;  			sb.Append (Convert.ToChar (code));  		}  	}  	entity.Remove (0' entity.Length);  }  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,DeEntitize,The following statement contains a magic number: if (entity.Length == 0) {  	sb.Append ("&;");  }  else {  	if (entity [0] == '#') {  		string e = entity.ToString ();  		try {  			string codeStr = e.Substring (1).Trim ().ToLower ();  			int fromBase;  			if (codeStr.StartsWith ("x")) {  				fromBase = 16;  				codeStr = codeStr.Substring (1);  			}  			else {  				fromBase = 10;  			}  			int code = Convert.ToInt32 (codeStr' fromBase);  			sb.Append (Convert.ToChar (code));  		}  		catch {  			sb.Append ("&#" + e + ";");  		}  	}  	else {  		// named entity?  		int code;  		object o = _entityValue [entity.ToString ()];  		if (o == null) {  			// nope  			sb.Append ("&" + entity + ";");  		}  		else {  			// we found one  			code = (int)o;  			sb.Append (Convert.ToChar (code));  		}  	}  	entity.Remove (0' entity.Length);  }  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,DeEntitize,The following statement contains a magic number: if (entity [0] == '#') {  	string e = entity.ToString ();  	try {  		string codeStr = e.Substring (1).Trim ().ToLower ();  		int fromBase;  		if (codeStr.StartsWith ("x")) {  			fromBase = 16;  			codeStr = codeStr.Substring (1);  		}  		else {  			fromBase = 10;  		}  		int code = Convert.ToInt32 (codeStr' fromBase);  		sb.Append (Convert.ToChar (code));  	}  	catch {  		sb.Append ("&#" + e + ";");  	}  }  else {  	// named entity?  	int code;  	object o = _entityValue [entity.ToString ()];  	if (o == null) {  		// nope  		sb.Append ("&" + entity + ";");  	}  	else {  		// we found one  		code = (int)o;  		sb.Append (Convert.ToChar (code));  	}  }  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,DeEntitize,The following statement contains a magic number: if (entity [0] == '#') {  	string e = entity.ToString ();  	try {  		string codeStr = e.Substring (1).Trim ().ToLower ();  		int fromBase;  		if (codeStr.StartsWith ("x")) {  			fromBase = 16;  			codeStr = codeStr.Substring (1);  		}  		else {  			fromBase = 10;  		}  		int code = Convert.ToInt32 (codeStr' fromBase);  		sb.Append (Convert.ToChar (code));  	}  	catch {  		sb.Append ("&#" + e + ";");  	}  }  else {  	// named entity?  	int code;  	object o = _entityValue [entity.ToString ()];  	if (o == null) {  		// nope  		sb.Append ("&" + entity + ";");  	}  	else {  		// we found one  		code = (int)o;  		sb.Append (Convert.ToChar (code));  	}  }  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,DeEntitize,The following statement contains a magic number: try {  	string codeStr = e.Substring (1).Trim ().ToLower ();  	int fromBase;  	if (codeStr.StartsWith ("x")) {  		fromBase = 16;  		codeStr = codeStr.Substring (1);  	}  	else {  		fromBase = 10;  	}  	int code = Convert.ToInt32 (codeStr' fromBase);  	sb.Append (Convert.ToChar (code));  }  catch {  	sb.Append ("&#" + e + ";");  }  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,DeEntitize,The following statement contains a magic number: try {  	string codeStr = e.Substring (1).Trim ().ToLower ();  	int fromBase;  	if (codeStr.StartsWith ("x")) {  		fromBase = 16;  		codeStr = codeStr.Substring (1);  	}  	else {  		fromBase = 10;  	}  	int code = Convert.ToInt32 (codeStr' fromBase);  	sb.Append (Convert.ToChar (code));  }  catch {  	sb.Append ("&#" + e + ";");  }  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,DeEntitize,The following statement contains a magic number: if (codeStr.StartsWith ("x")) {  	fromBase = 16;  	codeStr = codeStr.Substring (1);  }  else {  	fromBase = 10;  }  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,DeEntitize,The following statement contains a magic number: if (codeStr.StartsWith ("x")) {  	fromBase = 16;  	codeStr = codeStr.Substring (1);  }  else {  	fromBase = 10;  }  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,DeEntitize,The following statement contains a magic number: fromBase = 16;  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,DeEntitize,The following statement contains a magic number: fromBase = 10;  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,Entitize,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	int code = text [i];  	if ((code > 127) || (entitizeQuotAmpAndLtGt && ((code == 34) || (code == 38) || (code == 60) || (code == 62)))) {  		string entity = _entityName [code] as string;  		if ((entity == null) || (!useNames)) {  			sb.Append ("&#" + code + ";");  		}  		else {  			sb.Append ("&" + entity + ";");  		}  	}  	else {  		sb.Append (text [i]);  	}  }  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,Entitize,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	int code = text [i];  	if ((code > 127) || (entitizeQuotAmpAndLtGt && ((code == 34) || (code == 38) || (code == 60) || (code == 62)))) {  		string entity = _entityName [code] as string;  		if ((entity == null) || (!useNames)) {  			sb.Append ("&#" + code + ";");  		}  		else {  			sb.Append ("&" + entity + ";");  		}  	}  	else {  		sb.Append (text [i]);  	}  }  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,Entitize,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	int code = text [i];  	if ((code > 127) || (entitizeQuotAmpAndLtGt && ((code == 34) || (code == 38) || (code == 60) || (code == 62)))) {  		string entity = _entityName [code] as string;  		if ((entity == null) || (!useNames)) {  			sb.Append ("&#" + code + ";");  		}  		else {  			sb.Append ("&" + entity + ";");  		}  	}  	else {  		sb.Append (text [i]);  	}  }  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,Entitize,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	int code = text [i];  	if ((code > 127) || (entitizeQuotAmpAndLtGt && ((code == 34) || (code == 38) || (code == 60) || (code == 62)))) {  		string entity = _entityName [code] as string;  		if ((entity == null) || (!useNames)) {  			sb.Append ("&#" + code + ";");  		}  		else {  			sb.Append ("&" + entity + ";");  		}  	}  	else {  		sb.Append (text [i]);  	}  }  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,Entitize,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	int code = text [i];  	if ((code > 127) || (entitizeQuotAmpAndLtGt && ((code == 34) || (code == 38) || (code == 60) || (code == 62)))) {  		string entity = _entityName [code] as string;  		if ((entity == null) || (!useNames)) {  			sb.Append ("&#" + code + ";");  		}  		else {  			sb.Append ("&" + entity + ";");  		}  	}  	else {  		sb.Append (text [i]);  	}  }  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,Entitize,The following statement contains a magic number: if ((code > 127) || (entitizeQuotAmpAndLtGt && ((code == 34) || (code == 38) || (code == 60) || (code == 62)))) {  	string entity = _entityName [code] as string;  	if ((entity == null) || (!useNames)) {  		sb.Append ("&#" + code + ";");  	}  	else {  		sb.Append ("&" + entity + ";");  	}  }  else {  	sb.Append (text [i]);  }  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,Entitize,The following statement contains a magic number: if ((code > 127) || (entitizeQuotAmpAndLtGt && ((code == 34) || (code == 38) || (code == 60) || (code == 62)))) {  	string entity = _entityName [code] as string;  	if ((entity == null) || (!useNames)) {  		sb.Append ("&#" + code + ";");  	}  	else {  		sb.Append ("&" + entity + ";");  	}  }  else {  	sb.Append (text [i]);  }  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,Entitize,The following statement contains a magic number: if ((code > 127) || (entitizeQuotAmpAndLtGt && ((code == 34) || (code == 38) || (code == 60) || (code == 62)))) {  	string entity = _entityName [code] as string;  	if ((entity == null) || (!useNames)) {  		sb.Append ("&#" + code + ";");  	}  	else {  		sb.Append ("&" + entity + ";");  	}  }  else {  	sb.Append (text [i]);  }  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,Entitize,The following statement contains a magic number: if ((code > 127) || (entitizeQuotAmpAndLtGt && ((code == 34) || (code == 38) || (code == 60) || (code == 62)))) {  	string entity = _entityName [code] as string;  	if ((entity == null) || (!useNames)) {  		sb.Append ("&#" + code + ";");  	}  	else {  		sb.Append ("&" + entity + ";");  	}  }  else {  	sb.Append (text [i]);  }  
Magic Number,HtmlAgilityPack,HtmlEntity,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlEntity.cs,Entitize,The following statement contains a magic number: if ((code > 127) || (entitizeQuotAmpAndLtGt && ((code == 34) || (code == 38) || (code == 60) || (code == 62)))) {  	string entity = _entityName [code] as string;  	if ((entity == null) || (!useNames)) {  		sb.Append ("&#" + code + ";");  	}  	else {  		sb.Append ("&" + entity + ";");  	}  }  else {  	sb.Append (text [i]);  }  
Magic Number,HtmlAgilityPack,HtmlNode,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNode.cs,IsOverlappedClosingElement,The following statement contains a magic number: if (text.Length <= 4)  	return false;  
Magic Number,HtmlAgilityPack,HtmlNode,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNode.cs,GetXmlComment,The following statement contains a magic number: return s.Substring (4' s.Length - 7).Replace ("--"' " - -");  
Magic Number,HtmlAgilityPack,HtmlNode,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNode.cs,GetXmlComment,The following statement contains a magic number: return s.Substring (4' s.Length - 7).Replace ("--"' " - -");  
Magic Number,HtmlAgilityPack,HtmlNode,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNode.cs,WriteAttribute,The following statement contains a magic number: if (_ownerdocument.OptionOutputAsXml) {  	if (_ownerdocument.OptionOutputUpperCase) {  		name = att.XmlName.ToUpper ();  	}  	else {  		name = att.XmlName;  	}  	if (_ownerdocument.OptionOutputOriginalCase)  		name = att.OriginalName;  	outText.Write (" " + name + "=" + quote + HtmlDocument.HtmlEncode (att.XmlValue) + quote);  }  else {  	if (_ownerdocument.OptionOutputUpperCase) {  		name = att.Name.ToUpper ();  	}  	else {  		name = att.Name;  	}  	if (att.Name.Length >= 4) {  		if ((att.Name [0] == '<') && (att.Name [1] == '%') && (att.Name [att.Name.Length - 1] == '>') && (att.Name [att.Name.Length - 2] == '%')) {  			outText.Write (" " + name);  			return;  		}  	}  	if (_ownerdocument.OptionOutputOptimizeAttributeValues) {  		if (att.Value.IndexOfAny (new Char[] {  			(char)10'  			(char)13'  			(char)9'  			' '  		}) < 0) {  			outText.Write (" " + name + "=" + att.Value);  		}  		else {  			outText.Write (" " + name + "=" + quote + att.Value + quote);  		}  	}  	else {  		outText.Write (" " + name + "=" + quote + att.Value + quote);  	}  }  
Magic Number,HtmlAgilityPack,HtmlNode,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNode.cs,WriteAttribute,The following statement contains a magic number: if (_ownerdocument.OptionOutputAsXml) {  	if (_ownerdocument.OptionOutputUpperCase) {  		name = att.XmlName.ToUpper ();  	}  	else {  		name = att.XmlName;  	}  	if (_ownerdocument.OptionOutputOriginalCase)  		name = att.OriginalName;  	outText.Write (" " + name + "=" + quote + HtmlDocument.HtmlEncode (att.XmlValue) + quote);  }  else {  	if (_ownerdocument.OptionOutputUpperCase) {  		name = att.Name.ToUpper ();  	}  	else {  		name = att.Name;  	}  	if (att.Name.Length >= 4) {  		if ((att.Name [0] == '<') && (att.Name [1] == '%') && (att.Name [att.Name.Length - 1] == '>') && (att.Name [att.Name.Length - 2] == '%')) {  			outText.Write (" " + name);  			return;  		}  	}  	if (_ownerdocument.OptionOutputOptimizeAttributeValues) {  		if (att.Value.IndexOfAny (new Char[] {  			(char)10'  			(char)13'  			(char)9'  			' '  		}) < 0) {  			outText.Write (" " + name + "=" + att.Value);  		}  		else {  			outText.Write (" " + name + "=" + quote + att.Value + quote);  		}  	}  	else {  		outText.Write (" " + name + "=" + quote + att.Value + quote);  	}  }  
Magic Number,HtmlAgilityPack,HtmlNode,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNode.cs,WriteAttribute,The following statement contains a magic number: if (_ownerdocument.OptionOutputAsXml) {  	if (_ownerdocument.OptionOutputUpperCase) {  		name = att.XmlName.ToUpper ();  	}  	else {  		name = att.XmlName;  	}  	if (_ownerdocument.OptionOutputOriginalCase)  		name = att.OriginalName;  	outText.Write (" " + name + "=" + quote + HtmlDocument.HtmlEncode (att.XmlValue) + quote);  }  else {  	if (_ownerdocument.OptionOutputUpperCase) {  		name = att.Name.ToUpper ();  	}  	else {  		name = att.Name;  	}  	if (att.Name.Length >= 4) {  		if ((att.Name [0] == '<') && (att.Name [1] == '%') && (att.Name [att.Name.Length - 1] == '>') && (att.Name [att.Name.Length - 2] == '%')) {  			outText.Write (" " + name);  			return;  		}  	}  	if (_ownerdocument.OptionOutputOptimizeAttributeValues) {  		if (att.Value.IndexOfAny (new Char[] {  			(char)10'  			(char)13'  			(char)9'  			' '  		}) < 0) {  			outText.Write (" " + name + "=" + att.Value);  		}  		else {  			outText.Write (" " + name + "=" + quote + att.Value + quote);  		}  	}  	else {  		outText.Write (" " + name + "=" + quote + att.Value + quote);  	}  }  
Magic Number,HtmlAgilityPack,HtmlNode,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNode.cs,WriteAttribute,The following statement contains a magic number: if (_ownerdocument.OptionOutputAsXml) {  	if (_ownerdocument.OptionOutputUpperCase) {  		name = att.XmlName.ToUpper ();  	}  	else {  		name = att.XmlName;  	}  	if (_ownerdocument.OptionOutputOriginalCase)  		name = att.OriginalName;  	outText.Write (" " + name + "=" + quote + HtmlDocument.HtmlEncode (att.XmlValue) + quote);  }  else {  	if (_ownerdocument.OptionOutputUpperCase) {  		name = att.Name.ToUpper ();  	}  	else {  		name = att.Name;  	}  	if (att.Name.Length >= 4) {  		if ((att.Name [0] == '<') && (att.Name [1] == '%') && (att.Name [att.Name.Length - 1] == '>') && (att.Name [att.Name.Length - 2] == '%')) {  			outText.Write (" " + name);  			return;  		}  	}  	if (_ownerdocument.OptionOutputOptimizeAttributeValues) {  		if (att.Value.IndexOfAny (new Char[] {  			(char)10'  			(char)13'  			(char)9'  			' '  		}) < 0) {  			outText.Write (" " + name + "=" + att.Value);  		}  		else {  			outText.Write (" " + name + "=" + quote + att.Value + quote);  		}  	}  	else {  		outText.Write (" " + name + "=" + quote + att.Value + quote);  	}  }  
Magic Number,HtmlAgilityPack,HtmlNode,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNode.cs,WriteAttribute,The following statement contains a magic number: if (_ownerdocument.OptionOutputAsXml) {  	if (_ownerdocument.OptionOutputUpperCase) {  		name = att.XmlName.ToUpper ();  	}  	else {  		name = att.XmlName;  	}  	if (_ownerdocument.OptionOutputOriginalCase)  		name = att.OriginalName;  	outText.Write (" " + name + "=" + quote + HtmlDocument.HtmlEncode (att.XmlValue) + quote);  }  else {  	if (_ownerdocument.OptionOutputUpperCase) {  		name = att.Name.ToUpper ();  	}  	else {  		name = att.Name;  	}  	if (att.Name.Length >= 4) {  		if ((att.Name [0] == '<') && (att.Name [1] == '%') && (att.Name [att.Name.Length - 1] == '>') && (att.Name [att.Name.Length - 2] == '%')) {  			outText.Write (" " + name);  			return;  		}  	}  	if (_ownerdocument.OptionOutputOptimizeAttributeValues) {  		if (att.Value.IndexOfAny (new Char[] {  			(char)10'  			(char)13'  			(char)9'  			' '  		}) < 0) {  			outText.Write (" " + name + "=" + att.Value);  		}  		else {  			outText.Write (" " + name + "=" + quote + att.Value + quote);  		}  	}  	else {  		outText.Write (" " + name + "=" + quote + att.Value + quote);  	}  }  
Magic Number,HtmlAgilityPack,HtmlNode,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNode.cs,WriteAttribute,The following statement contains a magic number: if (att.Name.Length >= 4) {  	if ((att.Name [0] == '<') && (att.Name [1] == '%') && (att.Name [att.Name.Length - 1] == '>') && (att.Name [att.Name.Length - 2] == '%')) {  		outText.Write (" " + name);  		return;  	}  }  
Magic Number,HtmlAgilityPack,HtmlNode,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNode.cs,WriteAttribute,The following statement contains a magic number: if (att.Name.Length >= 4) {  	if ((att.Name [0] == '<') && (att.Name [1] == '%') && (att.Name [att.Name.Length - 1] == '>') && (att.Name [att.Name.Length - 2] == '%')) {  		outText.Write (" " + name);  		return;  	}  }  
Magic Number,HtmlAgilityPack,HtmlNode,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNode.cs,WriteAttribute,The following statement contains a magic number: if ((att.Name [0] == '<') && (att.Name [1] == '%') && (att.Name [att.Name.Length - 1] == '>') && (att.Name [att.Name.Length - 2] == '%')) {  	outText.Write (" " + name);  	return;  }  
Magic Number,HtmlAgilityPack,HtmlNode,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNode.cs,WriteAttribute,The following statement contains a magic number: if (_ownerdocument.OptionOutputOptimizeAttributeValues) {  	if (att.Value.IndexOfAny (new Char[] {  		(char)10'  		(char)13'  		(char)9'  		' '  	}) < 0) {  		outText.Write (" " + name + "=" + att.Value);  	}  	else {  		outText.Write (" " + name + "=" + quote + att.Value + quote);  	}  }  else {  	outText.Write (" " + name + "=" + quote + att.Value + quote);  }  
Magic Number,HtmlAgilityPack,HtmlNode,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNode.cs,WriteAttribute,The following statement contains a magic number: if (_ownerdocument.OptionOutputOptimizeAttributeValues) {  	if (att.Value.IndexOfAny (new Char[] {  		(char)10'  		(char)13'  		(char)9'  		' '  	}) < 0) {  		outText.Write (" " + name + "=" + att.Value);  	}  	else {  		outText.Write (" " + name + "=" + quote + att.Value + quote);  	}  }  else {  	outText.Write (" " + name + "=" + quote + att.Value + quote);  }  
Magic Number,HtmlAgilityPack,HtmlNode,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNode.cs,WriteAttribute,The following statement contains a magic number: if (_ownerdocument.OptionOutputOptimizeAttributeValues) {  	if (att.Value.IndexOfAny (new Char[] {  		(char)10'  		(char)13'  		(char)9'  		' '  	}) < 0) {  		outText.Write (" " + name + "=" + att.Value);  	}  	else {  		outText.Write (" " + name + "=" + quote + att.Value + quote);  	}  }  else {  	outText.Write (" " + name + "=" + quote + att.Value + quote);  }  
Magic Number,HtmlAgilityPack,HtmlNode,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNode.cs,WriteAttribute,The following statement contains a magic number: if (att.Value.IndexOfAny (new Char[] {  	(char)10'  	(char)13'  	(char)9'  	' '  }) < 0) {  	outText.Write (" " + name + "=" + att.Value);  }  else {  	outText.Write (" " + name + "=" + quote + att.Value + quote);  }  
Magic Number,HtmlAgilityPack,HtmlNode,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNode.cs,WriteAttribute,The following statement contains a magic number: if (att.Value.IndexOfAny (new Char[] {  	(char)10'  	(char)13'  	(char)9'  	' '  }) < 0) {  	outText.Write (" " + name + "=" + att.Value);  }  else {  	outText.Write (" " + name + "=" + quote + att.Value + quote);  }  
Magic Number,HtmlAgilityPack,HtmlNode,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNode.cs,WriteAttribute,The following statement contains a magic number: if (att.Value.IndexOfAny (new Char[] {  	(char)10'  	(char)13'  	(char)9'  	' '  }) < 0) {  	outText.Write (" " + name + "=" + att.Value);  }  else {  	outText.Write (" " + name + "=" + quote + att.Value + quote);  }  
Magic Number,HtmlAgilityPack,MixedCodeDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\MixedCodeDocument.cs,IncrementPosition,The following statement contains a magic number: if (_c == 10) {  	_lineposition = 1;  	_line++;  }  else  	_lineposition++;  
Magic Number,HtmlAgilityPack,NameValuePairList,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\NameValuePairList.cs,Parse,The following statement contains a magic number: foreach (string pv in p) {  	if (pv.Length == 0)  		continue;  	string[] onep = pv.Split (new[] {  		'='  	}' 2);  	if (onep.Length == 0)  		continue;  	KeyValuePair<string' string> nvp = new KeyValuePair<string' string> (onep [0].Trim ().ToLower ()' onep.Length < 2 ? "" : onep [1]);  	_allPairs.Add (nvp);  	// index by name  	List<KeyValuePair<string' string>> al;  	if (!_pairsWithName.ContainsKey (nvp.Key)) {  		al = new List<KeyValuePair<string' string>> ();  		_pairsWithName [nvp.Key] = al;  	}  	else  		al = _pairsWithName [nvp.Key];  	al.Add (nvp);  }  
Magic Number,HtmlAgilityPack,NameValuePairList,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\NameValuePairList.cs,Parse,The following statement contains a magic number: foreach (string pv in p) {  	if (pv.Length == 0)  		continue;  	string[] onep = pv.Split (new[] {  		'='  	}' 2);  	if (onep.Length == 0)  		continue;  	KeyValuePair<string' string> nvp = new KeyValuePair<string' string> (onep [0].Trim ().ToLower ()' onep.Length < 2 ? "" : onep [1]);  	_allPairs.Add (nvp);  	// index by name  	List<KeyValuePair<string' string>> al;  	if (!_pairsWithName.ContainsKey (nvp.Key)) {  		al = new List<KeyValuePair<string' string>> ();  		_pairsWithName [nvp.Key] = al;  	}  	else  		al = _pairsWithName [nvp.Key];  	al.Add (nvp);  }  
Missing Default,HtmlAgilityPack,HtmlDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlDocument.cs,NewCheck,The following switch statement is missing a default case: switch (_state) {  case ParseState.AttributeAfterEquals:  	PushAttributeValueStart (_index - 1);  	break;  case ParseState.BetweenAttributes:  	PushAttributeNameStart (_index - 1);  	break;  case ParseState.WhichTag:  	PushNodeNameStart (true' _index - 1);  	_state = ParseState.Tag;  	break;  }  
Missing Default,HtmlAgilityPack,HtmlNode,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNode.cs,HtmlNode,The following switch statement is missing a default case: switch (type) {  case HtmlNodeType.Comment:  	Name = HtmlNodeTypeNameComment;  	_endnode = this;  	break;  case HtmlNodeType.Document:  	Name = HtmlNodeTypeNameDocument;  	_endnode = this;  	break;  case HtmlNodeType.Text:  	Name = HtmlNodeTypeNameText;  	_endnode = this;  	break;  }  
Missing Default,HtmlAgilityPack,HtmlNode,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNode.cs,CloneNode,The following switch statement is missing a default case: switch (_nodetype) {  case HtmlNodeType.Comment:  	((HtmlCommentNode)node).Comment = ((HtmlCommentNode)this).Comment;  	return node;  case HtmlNodeType.Text:  	((HtmlTextNode)node).Text = ((HtmlTextNode)this).Text;  	return node;  }  
Missing Default,HtmlAgilityPack,HtmlNode,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNode.cs,WriteTo,The following switch statement is missing a default case: switch (_nodetype) {  case HtmlNodeType.Comment:  	html = ((HtmlCommentNode)this).Comment;  	if (_ownerdocument.OptionOutputAsXml) {  		outText.Write ("<!--" + GetXmlComment ((HtmlCommentNode)this) + " -->");  	}  	else {  		outText.Write (html);  	}  	break;  case HtmlNodeType.Document:  	if (_ownerdocument.OptionOutputAsXml) {  		outText.Write ("<?xml version=\"1.0\" encoding=\"" + _ownerdocument.GetOutEncoding ().BodyName + "\"?>");  		// check there is a root element  		if (_ownerdocument.DocumentNode.HasChildNodes) {  			int rootnodes = _ownerdocument.DocumentNode._childnodes.Count;  			if (rootnodes > 0) {  				HtmlNode xml = _ownerdocument.GetXmlDeclaration ();  				if (xml != null) {  					rootnodes--;  				}  				if (rootnodes > 1) {  					if (_ownerdocument.OptionOutputUpperCase) {  						outText.Write ("<SPAN>");  						WriteContentTo (outText);  						outText.Write ("</SPAN>");  					}  					else {  						outText.Write ("<span>");  						WriteContentTo (outText);  						outText.Write ("</span>");  					}  					break;  				}  			}  		}  	}  	WriteContentTo (outText);  	break;  case HtmlNodeType.Text:  	html = ((HtmlTextNode)this).Text;  	if (_ownerdocument.OptionOutputAsXml) {  		outText.Write (HtmlDocument.HtmlEncode (html));  	}  	else {  		outText.Write (html);  	}  	break;  case HtmlNodeType.Element:  	string name;  	if (_ownerdocument.OptionOutputUpperCase) {  		name = Name.ToUpper ();  	}  	else {  		name = Name;  	}  	if (_ownerdocument.OptionOutputOriginalCase)  		name = OriginalName;  	if (_ownerdocument.OptionOutputAsXml) {  		if (name.Length > 0) {  			if (name [0] == '?') {  				// forget this one' it's been done at the document level  				break;  			}  			if (name.Trim ().Length == 0) {  				break;  			}  			name = HtmlDocument.GetXmlName (name);  		}  		else {  			break;  		}  	}  	outText.Write ("<" + name);  	WriteAttributes (outText' false);  	if (!HasChildNodes) {  		if (IsEmptyElement (Name)) {  			if ((_ownerdocument.OptionWriteEmptyNodes) || (_ownerdocument.OptionOutputAsXml)) {  				outText.Write (" />");  			}  			else {  				if (Name.Length > 0) {  					if (Name [0] == '?') {  						outText.Write ("?");  					}  				}  				outText.Write (">");  			}  		}  		else {  			outText.Write ("></" + name + ">");  		}  	}  	else {  		outText.Write (">");  		bool cdata = false;  		if (_ownerdocument.OptionOutputAsXml) {  			if (IsCDataElement (Name)) {  				// this code and the following tries to output things as nicely as possible for old browsers.  				cdata = true;  				outText.Write ("\r\n//<![CDATA[\r\n");  			}  		}  		if (cdata) {  			if (HasChildNodes) {  				// child must be a text  				ChildNodes [0].WriteTo (outText);  			}  			outText.Write ("\r\n//]]>//\r\n");  		}  		else {  			WriteContentTo (outText);  		}  		outText.Write ("</" + name);  		if (!_ownerdocument.OptionOutputAsXml) {  			WriteAttributes (outText' true);  		}  		outText.Write (">");  	}  	break;  }  
Missing Default,HtmlAgilityPack,HtmlNode,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\HtmlNode.cs,WriteTo,The following switch statement is missing a default case: switch (_nodetype) {  case HtmlNodeType.Comment:  	writer.WriteComment (GetXmlComment ((HtmlCommentNode)this));  	break;  case HtmlNodeType.Document:  	writer.WriteProcessingInstruction ("xml"' "version=\"1.0\" encoding=\"" + _ownerdocument.GetOutEncoding ().BodyName + "\"");  	if (HasChildNodes) {  		foreach (HtmlNode subnode in ChildNodes) {  			subnode.WriteTo (writer);  		}  	}  	break;  case HtmlNodeType.Text:  	string html = ((HtmlTextNode)this).Text;  	writer.WriteString (html);  	break;  case HtmlNodeType.Element:  	string name = _ownerdocument.OptionOutputUpperCase ? Name.ToUpper () : Name;  	if (_ownerdocument.OptionOutputOriginalCase)  		name = OriginalName;  	writer.WriteStartElement (name);  	WriteAttributes (writer' this);  	if (HasChildNodes) {  		foreach (HtmlNode subnode in ChildNodes) {  			subnode.WriteTo (writer);  		}  	}  	writer.WriteEndElement ();  	break;  }  
Missing Default,HtmlAgilityPack,MixedCodeDocument,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\MixedCodeDocument.cs,Parse,The following switch statement is missing a default case: switch (_state) {  case ParseState.Text:  	if (_index + TokenCodeStart.Length < _text.Length) {  		if (_text.Substring (_index - 1' TokenCodeStart.Length) == TokenCodeStart) {  			_state = ParseState.Code;  			_currentfragment.Length = _index - 1 - _currentfragment.Index;  			_currentfragment = CreateFragment (MixedCodeDocumentFragmentType.Code);  			SetPosition ();  			continue;  		}  	}  	break;  case ParseState.Code:  	if (_index + TokenCodeEnd.Length < _text.Length) {  		if (_text.Substring (_index - 1' TokenCodeEnd.Length) == TokenCodeEnd) {  			_state = ParseState.Text;  			_currentfragment.Length = _index + TokenCodeEnd.Length - _currentfragment.Index;  			_index += TokenCodeEnd.Length;  			_lineposition += TokenCodeEnd.Length;  			_currentfragment = CreateFragment (MixedCodeDocumentFragmentType.Text);  			SetPosition ();  			continue;  		}  	}  	break;  }  
Missing Default,HtmlAgilityPack,MixedCodeDocumentFragment,C:\repos\diantahoc_AniWrap\AniWrap\libs\hap\1_4_0\HtmlAgilityPack\MixedCodeDocumentFragment.cs,MixedCodeDocumentFragment,The following switch statement is missing a default case: switch (type) {  case MixedCodeDocumentFragmentType.Text:  	Doc._textfragments.Append (this);  	break;  case MixedCodeDocumentFragmentType.Code:  	Doc._codefragments.Append (this);  	break;  }  
