Implementation smell,Namespace,Class,File,Method,Description
Long Method,Tempest,ObjectSerializer,D:\research\architectureSmells\repos\ermau_Tempest\Tempest\ObjectSerializer.cs,GetSerializerAction,The method has 109 lines of code.
Complex Method,Tempest,MessageFactory,D:\research\architectureSmells\repos\ermau_Tempest\Tempest\MessageFactory.cs,RegisterTypesWithCtors,Cyclomatic complexity of the method is 9
Complex Method,Tempest,ObjectSerializer,D:\research\architectureSmells\repos\ermau_Tempest\Tempest\ObjectSerializer.cs,GetDeserializer,Cyclomatic complexity of the method is 18
Complex Method,Tempest,ObjectSerializer,D:\research\architectureSmells\repos\ermau_Tempest\Tempest\ObjectSerializer.cs,GetSerializerAction,Cyclomatic complexity of the method is 18
Long Statement,Tempest,ContextExtensions,D:\research\architectureSmells\repos\ermau_Tempest\Tempest\IContext.cs,RegisterMessageHandler,The length of the statement  "			self.RegisterMessageHandler (msg.Protocol' msg.MessageType' e => handler (new MessageEventArgs<T> (e.Connection' (T)e.Message))); " is 129.
Long Statement,Tempest,MessageFactory,D:\research\architectureSmells\repos\ermau_Tempest\Tempest\MessageFactory.cs,RegisterTypesWithCtors,The length of the statement  "					throw new ArgumentException (String.Format ("{0} is a generic type which is unsupported"' kvp.Key.Name)' "messageTypes"); " is 121.
Long Statement,Tempest,MessageFactory,D:\research\architectureSmells\repos\ermau_Tempest\Tempest\MessageFactory.cs,RegisterTypesWithCtors,The length of the statement  "					throw new ArgumentException (String.Format ("A message of type {0} has already been registered."' m.MessageType)' "messageTypes"); " is 130.
Long Statement,Tempest,ObjectSerializer,D:\research\architectureSmells\repos\ermau_Tempest\Tempest\ObjectSerializer.cs,LoadCtor,The length of the statement  "			this.ctor = t.GetConstructor (BindingFlags.Instance | BindingFlags.NonPublic | BindingFlags.Public' null' new[] { typeof (ISerializationContext)' typeof (IValueReader) }' null) " is 176.
Long Statement,Tempest,ObjectSerializer,D:\research\architectureSmells\repos\ermau_Tempest\Tempest\ObjectSerializer.cs,LoadCtor,The length of the statement  "						?? t.GetConstructor (BindingFlags.Instance | BindingFlags.NonPublic | BindingFlags.Public' null' Type.EmptyTypes' null); " is 120.
Long Statement,Tempest,StreamValueWriter,D:\research\architectureSmells\repos\ermau_Tempest\Tempest\StreamValueWriter.cs,WriteBytes,The length of the statement  "				throw new ArgumentOutOfRangeException ("length"' "length can not be negative or combined with offset longer than the array"); " is 125.
Long Statement,Tempest,TempestClient,D:\research\architectureSmells\repos\ermau_Tempest\Tempest\TempestClient.cs,OnConnectionConnected,The length of the statement  "			Task newRunner = Task.Factory.StartNew (MessageRunner' new AutoResetEvent (false)' CancellationToken.None' TaskCreationOptions.LongRunning' TaskScheduler.Default); " is 163.
Long Statement,Tempest,TempestServer,D:\research\architectureSmells\repos\ermau_Tempest\Tempest\TempestServer.cs,Start,The length of the statement  "						this.messageRunnerTask = Task.Factory.StartNew (() => MessageRunner (this.cancelSource.Token)' this.cancelSource.Token' TaskCreationOptions.LongRunning' TaskScheduler.Default); " is 176.
Magic Number,Tempest,MessageType,D:\research\architectureSmells\repos\ermau_Tempest\Tempest\MessageHandler.cs,GetHashCode,The following statement contains a magic number: return (this.protocol.GetHashCode() * 397) ^ this.messageType.GetHashCode();
Magic Number,Tempest,ObjectSerializer,D:\research\architectureSmells\repos\ermau_Tempest\Tempest\ObjectSerializer.cs,LoadCtor,The following statement contains a magic number: this.deserializingConstructor = this.ctor.GetParameters().Length == 2;
Magic Number,Tempest,SerializerExtensions,D:\research\architectureSmells\repos\ermau_Tempest\Tempest\SerializerExtensions.cs,Write7BitEncodedInt,The following statement contains a magic number: writer.WriteByte ((byte) (v | 128));
Magic Number,Tempest,SerializerExtensions,D:\research\architectureSmells\repos\ermau_Tempest\Tempest\SerializerExtensions.cs,Write7BitEncodedInt,The following statement contains a magic number: v >>= 7;
Magic Number,Tempest,SerializerExtensions,D:\research\architectureSmells\repos\ermau_Tempest\Tempest\SerializerExtensions.cs,Write7BitEncodedInt,The following statement contains a magic number: v >= 128
Magic Number,Tempest,SerializerExtensions,D:\research\architectureSmells\repos\ermau_Tempest\Tempest\SerializerExtensions.cs,Read7BitEncodedInt,The following statement contains a magic number: count |= (b & 127) << shift;
Magic Number,Tempest,SerializerExtensions,D:\research\architectureSmells\repos\ermau_Tempest\Tempest\SerializerExtensions.cs,Read7BitEncodedInt,The following statement contains a magic number: shift += 7;
Magic Number,Tempest,Target,D:\research\architectureSmells\repos\ermau_Tempest\Tempest\Target.cs,GetHashCode,The following statement contains a magic number: return (Hostname.GetHashCode() * 397) ^ Port;
Missing Default,Tempest,TempestServer,D:\research\architectureSmells\repos\ermau_Tempest\Tempest\TempestServer.cs,AddConnectionProvider,The following switch statement is missing a default case: switch (mode)  			{  				case ExecutionMode.ConnectionOrder:  					provider.ConnectionMade += OnConnectionMade;    					if (connectionless != null)  						connectionless.ConnectionlessMessageReceived += OnConnectionlessMessageReceived;    					break;    				case ExecutionMode.GlobalOrder:  					var q = this.mqueue;  					if (q == null) {  						q = new ConcurrentQueue<EventArgs>();  						Interlocked.CompareExchange (ref this.mqueue' q' null);  					}    					provider.ConnectionMade += OnConnectionMadeGlobal;    					if (connectionless != null)  						connectionless.ConnectionlessMessageReceived += OnConnectionlessMessageReceivedGlobal;    					break;  			}
