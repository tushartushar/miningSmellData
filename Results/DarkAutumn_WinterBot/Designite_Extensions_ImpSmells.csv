Implementation smell,Namespace,Class,File,Method,Description
Long Statement,WinterExtensions,BettingSystem,C:\repos\DarkAutumn_WinterBot\WinterBot\WinterExtensions\Betting.cs,OpenBetting,The length of the statement  "                sender.SendResponse(Importance.Low' "Betting is currently ongoing.  Use !result to award points' use !cancelbet to cancel the current bet."); " is 141.
Long Statement,WinterExtensions,BettingSystem,C:\repos\DarkAutumn_WinterBot\WinterBot\WinterExtensions\Betting.cs,OpenBetting,The length of the statement  "            sender.SendResponse(Importance.High' "Betting is now OPEN.  Use '!bet [player] [amount]' to bet.  Minimum bet is 1' maximum bet is 500.  You start with 3000 points' you can bet even if you have no points."); " is 207.
Long Statement,WinterExtensions,BettingSystem,C:\repos\DarkAutumn_WinterBot\WinterBot\WinterExtensions\Betting.cs,Result,The length of the statement  "                sender.SendMessage(Importance.High' "'{0}' not a valid player' valid players: {1}"' result' string.Join("' "' m_betting)); " is 122.
Long Statement,WinterExtensions,BettingSystem,C:\repos\DarkAutumn_WinterBot\WinterBot\WinterExtensions\Betting.cs,Result,The length of the statement  "            sender.SendMessage(Importance.High' "Betting complete.  {0} winners and {1} losers.  Point totals can be found here: http://www.darkautumn.net/winter/chat.php?POINTS"' totalWinners' totalLosers); " is 195.
Long Statement,WinterExtensions,ChatMessage,C:\repos\DarkAutumn_WinterBot\WinterBot\WinterExtensions\ChatSaver.cs,ToString,The length of the statement  "            return string.Format("{0}\n{1}{2}{3}\n{4}{5}\n"' m_time.ToSql()' m_user.Name' GetSub()' GetMod()' GetAction()' m_text ?? ""); " is 125.
Long Statement,WinterExtensions,ChatSaver,C:\repos\DarkAutumn_WinterBot\WinterBot\WinterExtensions\ChatSaver.cs,bot_UserTimedOut,The length of the statement  "                m_messages.Add(new ChatMessage(DateTime.Now' user' Action.Timeout' string.Format("BOT TIMEOUT FOR {0} SECONDS"' duration))); " is 124.
Long Statement,WinterExtensions,JukeBox,C:\repos\DarkAutumn_WinterBot\WinterBot\WinterExtensions\JukeBox.cs,JukeBoxCommand,The length of the statement  "                        sender.SendResponse(Importance.High' "The jukebox is shutting down for the night. Please hold your song requests for next time."); " is 130.
Magic Number,WinterExtensions,BetterCommands,C:\repos\DarkAutumn_WinterBot\WinterBot\WinterExtensions\BetterCommands.cs,ListCommands,The following statement contains a magic number: if (m_lastCommandList.Elapsed().TotalSeconds < 15)              {                  WinterBotSource.Log.DenyCommand(user.Name' cmd' "time");                  return;              }
Magic Number,WinterExtensions,BetterCommands,C:\repos\DarkAutumn_WinterBot\WinterBot\WinterExtensions\BetterCommands.cs,CanSendCommand,The following statement contains a magic number: foreach (var item in m_sent)              {                  if (item.Item1.Equals(cmd' StringComparison.CurrentCultureIgnoreCase) && item.Item2.Elapsed().TotalSeconds <= 5)                  {                      WinterBotSource.Log.DenyCommand(user.Name' cmd' "time");                      return false;                  }              }
Magic Number,WinterExtensions,BetterCommands,C:\repos\DarkAutumn_WinterBot\WinterBot\WinterExtensions\BetterCommands.cs,Load,The following statement contains a magic number: if (stream == null)              {                  Thread.Sleep(10000);                  m_http.GetAsync("api.php"' "GETCMDS=1"' Load);                  return;              }
Magic Number,WinterExtensions,BetterCommands,C:\repos\DarkAutumn_WinterBot\WinterBot\WinterExtensions\BetterCommands.cs,Load,The following statement contains a magic number: lock (m_sync)              {                  using (StreamReader reader = new StreamReader(stream))                  {                      string line;                      while ((line = reader.ReadLine()) != null)                      {                          if (string.IsNullOrWhiteSpace(line))                              continue;                            string[] values = line.Split(new char[] { ' ' }' 3);                          if (values.Length != 3)                              continue;                            int access;                          if (!int.TryParse(values[1]' out access))                              continue;                            m_commands[values[0].ToLower()] = new Command((AccessLevel)access' values[2]);                      }                  }              }
Magic Number,WinterExtensions,BetterCommands,C:\repos\DarkAutumn_WinterBot\WinterBot\WinterExtensions\BetterCommands.cs,Load,The following statement contains a magic number: lock (m_sync)              {                  using (StreamReader reader = new StreamReader(stream))                  {                      string line;                      while ((line = reader.ReadLine()) != null)                      {                          if (string.IsNullOrWhiteSpace(line))                              continue;                            string[] values = line.Split(new char[] { ' ' }' 3);                          if (values.Length != 3)                              continue;                            int access;                          if (!int.TryParse(values[1]' out access))                              continue;                            m_commands[values[0].ToLower()] = new Command((AccessLevel)access' values[2]);                      }                  }              }
Magic Number,WinterExtensions,BetterCommands,C:\repos\DarkAutumn_WinterBot\WinterBot\WinterExtensions\BetterCommands.cs,Load,The following statement contains a magic number: lock (m_sync)              {                  using (StreamReader reader = new StreamReader(stream))                  {                      string line;                      while ((line = reader.ReadLine()) != null)                      {                          if (string.IsNullOrWhiteSpace(line))                              continue;                            string[] values = line.Split(new char[] { ' ' }' 3);                          if (values.Length != 3)                              continue;                            int access;                          if (!int.TryParse(values[1]' out access))                              continue;                            m_commands[values[0].ToLower()] = new Command((AccessLevel)access' values[2]);                      }                  }              }
Magic Number,WinterExtensions,BettingSystem,C:\repos\DarkAutumn_WinterBot\WinterBot\WinterExtensions\Betting.cs,OpenBetting,The following statement contains a magic number: int time = args.GetIntFlag("time"' 120' false);
Magic Number,WinterExtensions,BettingSystem,C:\repos\DarkAutumn_WinterBot\WinterBot\WinterExtensions\Betting.cs,OpenBetting,The following statement contains a magic number: if (betting.Count < 2)              {                  sender.SendResponse(Importance.High' "Need at least two people to bet on!");                  return;              }
Magic Number,WinterExtensions,BettingSystem,C:\repos\DarkAutumn_WinterBot\WinterBot\WinterExtensions\Betting.cs,Bet,The following statement contains a magic number: const int max = 500;
Magic Number,WinterExtensions,BettingSystem,C:\repos\DarkAutumn_WinterBot\WinterBot\WinterExtensions\Betting.cs,AddPoints,The following statement contains a magic number: if (!m_points.TryGetValue(user' out curr))                  curr = 3000;
Magic Number,WinterExtensions,BettingSystem,C:\repos\DarkAutumn_WinterBot\WinterBot\WinterExtensions\Betting.cs,SaveProc,The following statement contains a magic number: while (!m_shutdown)              {                  m_event.WaitOne(15000);                    StringBuilder sb;                  lock (m_sync)                  {                      if (m_queue.Count == 0)                          continue;                                            sb = new StringBuilder();                      foreach (var item in m_queue)                          sb.AppendFormat("{0}\n{1}\n"' item.Item1.Name' item.Item2);                        m_queue.Clear();                  }                    Task t = m_http.PostAsync("points.php"' "SET=1"' sb);                  if (m_shutdown)                      t.Wait();              }
Magic Number,WinterExtensions,BettingSystem,C:\repos\DarkAutumn_WinterBot\WinterBot\WinterExtensions\Betting.cs,LoadPoints,The following statement contains a magic number: if (stream == null)              {                  // Try again in ten seconds.  We are on a task so we aren't blocking                  // any main thread.                  Thread.Sleep(10000);                  m_http.GetAsync("points.php"' LoadPoints);                  return;              }
Magic Number,WinterExtensions,BettingSystem,C:\repos\DarkAutumn_WinterBot\WinterBot\WinterExtensions\Betting.cs,LoadPoints,The following statement contains a magic number: lock (m_sync)              {                  using (StreamReader reader = new StreamReader(stream))                  {                      string line;                      while ((line = reader.ReadLine()) != null)                      {                          if (string.IsNullOrWhiteSpace(line))                              continue;                            var arr = line.Split(' ');                          if (arr.Length != 2)                              continue;                            int val;                          if (!int.TryParse(arr[1]' out val))                              continue;                            m_points[m_bot.Users.GetUser(arr[0])] = val;                      }                  }              }
Magic Number,WinterExtensions,BettingSystem,C:\repos\DarkAutumn_WinterBot\WinterBot\WinterExtensions\Betting.cs,SendMessage,The following statement contains a magic number: if (m_lastMessage.Elapsed().Seconds < 20)                  return;
Magic Number,WinterExtensions,HttpManager,C:\repos\DarkAutumn_WinterBot\WinterBot\WinterExtensions\HttpManager.cs,PostAsync,The following statement contains a magic number: HttpPost post = new HttpPost(this' url' data.Length > 512' data);
Magic Number,WinterExtensions,HttpPost,C:\repos\DarkAutumn_WinterBot\WinterBot\WinterExtensions\HttpManager.cs,Go,The following statement contains a magic number: do              {                  try                  {                      HttpWebRequest request = CreatePostRequest(m_url' m_compress);                        Stream requestStream = request.GetRequestStream();                      if (m_compress)                      {                          using (GZipStream gzip = new GZipStream(requestStream' CompressionLevel.Optimal))                          using (StreamWriter stream = new StreamWriter(gzip))                              stream.Write(m_data.ToString());                      }                      else                      {                          using (StreamWriter stream = new StreamWriter(requestStream))                              stream.Write(m_data.ToString());                      }                        string response;                      complete = m_http.ParsePostResult(request' out response);                      WinterSource.Log.PostHttp(m_url' complete ? "ok" : response);                  }                  catch (Exception e)                  {                      WinterSource.Log.PostHttp(m_url' string.Format("Exception: {0} Message: {1}"' e.GetType().Name' e.Message));                  }                    if (!complete)                      Thread.Sleep(10000);              } while (!complete);
Magic Number,WinterExtensions,JukeBox,C:\repos\DarkAutumn_WinterBot\WinterBot\WinterExtensions\JukeBox.cs,bot_Tick,The following statement contains a magic number: if (m_enabled)              {                  if (!sender.IsStreamLive)                  {                      if (!m_streamDead)                      {                          m_streamDead = true;                          m_lastOffline = DateTime.Now;                      }                      else if (m_lastOffline.Elapsed().TotalMinutes >= 10)                      {                          m_enabled = false;                          m_streamDead = false;                          sender.SendResponse(Importance.Med' "Disabling jukebox mode.");                      }                  }                  else                  {                      m_streamDead = false;                  }              }
Magic Number,WinterExtensions,JukeBox,C:\repos\DarkAutumn_WinterBot\WinterBot\WinterExtensions\JukeBox.cs,bot_Tick,The following statement contains a magic number: if (m_enabled && m_lastMessage.Elapsed().TotalMinutes >= 7)                  SendMessage(sender);
Magic Number,WinterExtensions,JukeBox,C:\repos\DarkAutumn_WinterBot\WinterBot\WinterExtensions\JukeBox.cs,JukeBoxCommand,The following statement contains a magic number: if (!m_enabled)              {                  if (!sender.CanUseCommand(user' AccessLevel.Mod))                  {                      if (m_lastMessage.Elapsed().TotalSeconds <= 30)                          return;                        m_lastMessage = DateTime.Now;                      sender.SendResponse(Importance.Low' "The jukebox is CLOSED. No additional requests are being accepted.");                      return;                  }                    value = value.Trim().ToLower();                    if (value == "on")                  {                      m_enabled = true;                      m_lastMessage = DateTime.Now;                      sender.SendResponse(Importance.Med' "Jukebox activated.  Use '!JukeboxMode off' to deactivate.");                  }                  else if (value == "off")                  {                      sender.SendResponse(Importance.Med' "Jukebox mode is off.");                  }                  else                  {                      sender.SendResponse(Importance.Low' "Usage: '!jukebox on' and '!jukebox off'.  Mod only.");                  }              }              else              {                  if (sender.CanUseCommand(user' AccessLevel.Mod))                  {                      if (value == "on")                      {                          sender.SendResponse(Importance.Low' "Jukebox mode is already enabled.");                      }                      else if (value == "off")                      {                          sender.SendResponse(Importance.High' "The jukebox is shutting down for the night. Please hold your song requests for next time.");                          m_enabled = false;                      }                      else                      {                          SendMessage(sender);                      }                  }                  else                  {                      if (m_lastMessage.Elapsed().TotalSeconds <= 10)                          return;                        m_lastMessage = DateTime.Now;                      SendMessage(sender);                  }              }
Magic Number,WinterExtensions,JukeBox,C:\repos\DarkAutumn_WinterBot\WinterBot\WinterExtensions\JukeBox.cs,JukeBoxCommand,The following statement contains a magic number: if (!m_enabled)              {                  if (!sender.CanUseCommand(user' AccessLevel.Mod))                  {                      if (m_lastMessage.Elapsed().TotalSeconds <= 30)                          return;                        m_lastMessage = DateTime.Now;                      sender.SendResponse(Importance.Low' "The jukebox is CLOSED. No additional requests are being accepted.");                      return;                  }                    value = value.Trim().ToLower();                    if (value == "on")                  {                      m_enabled = true;                      m_lastMessage = DateTime.Now;                      sender.SendResponse(Importance.Med' "Jukebox activated.  Use '!JukeboxMode off' to deactivate.");                  }                  else if (value == "off")                  {                      sender.SendResponse(Importance.Med' "Jukebox mode is off.");                  }                  else                  {                      sender.SendResponse(Importance.Low' "Usage: '!jukebox on' and '!jukebox off'.  Mod only.");                  }              }              else              {                  if (sender.CanUseCommand(user' AccessLevel.Mod))                  {                      if (value == "on")                      {                          sender.SendResponse(Importance.Low' "Jukebox mode is already enabled.");                      }                      else if (value == "off")                      {                          sender.SendResponse(Importance.High' "The jukebox is shutting down for the night. Please hold your song requests for next time.");                          m_enabled = false;                      }                      else                      {                          SendMessage(sender);                      }                  }                  else                  {                      if (m_lastMessage.Elapsed().TotalSeconds <= 10)                          return;                        m_lastMessage = DateTime.Now;                      SendMessage(sender);                  }              }
