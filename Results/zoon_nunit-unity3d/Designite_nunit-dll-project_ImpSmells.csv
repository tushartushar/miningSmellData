Implementation smell,Namespace,Class,File,Method,Description
Long Method,NUnit.Framework.Internal,MethodHelper,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Internal\MethodHelper.cs,GetDisplayString,The method has 101 lines of code.
Complex Method,NUnit.Framework,TestCaseAttribute,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Attributes\TestCaseAttribute.cs,GetTestCasesFor,Cyclomatic complexity of the method is 10
Complex Method,NUnit.Framework,TestCaseAttribute,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Attributes\TestCaseAttribute.cs,PerformSpecialConversions,Cyclomatic complexity of the method is 10
Complex Method,NUnit.Framework,TestCaseSourceAttribute,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Attributes\TestCaseSourceAttribute.cs,GetTestCasesFor,Cyclomatic complexity of the method is 10
Complex Method,NUnit.Framework,ValuesAttribute,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Attributes\ValuesAttribute.cs,GetData,Cyclomatic complexity of the method is 10
Complex Method,NUnit.Framework.Constraints,CollectionOrderedConstraint,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Constraints\CollectionOrderedConstraint.cs,doMatch,Cyclomatic complexity of the method is 8
Complex Method,NUnit.Framework.Constraints,MsgUtils,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Constraints\MsgUtils.cs,EscapeControlChars,Cyclomatic complexity of the method is 13
Complex Method,NUnit.Framework.Constraints,Numerics,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Constraints\Numerics.cs,IsFixedPointNumeric,Cyclomatic complexity of the method is 11
Complex Method,NUnit.Framework.Constraints,Numerics,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Constraints\Numerics.cs,AreEqual,Cyclomatic complexity of the method is 8
Complex Method,NUnit.Framework.Constraints,Numerics,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Constraints\Numerics.cs,AreEqual,Cyclomatic complexity of the method is 9
Complex Method,NUnit.Framework.Constraints,Numerics,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Constraints\Numerics.cs,AreEqual,Cyclomatic complexity of the method is 9
Complex Method,NUnit.Framework.Constraints,NUnitComparer,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Constraints\NUnitComparer.cs,Compare,Cyclomatic complexity of the method is 8
Complex Method,NUnit.Framework.Constraints,NUnitEqualityComparer,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Constraints\NUnitEqualityComparer.cs,AreEqual,Cyclomatic complexity of the method is 14
Complex Method,NUnit.Framework.Constraints,NUnitEqualityComparer,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Constraints\NUnitEqualityComparer.cs,StreamsEqual,Cyclomatic complexity of the method is 10
Complex Method,NUnit.Framework.Internal,MethodHelper,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Internal\MethodHelper.cs,GetDisplayString,Cyclomatic complexity of the method is 30
Complex Method,NUnit.Framework.Internal,MethodHelper,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Internal\MethodHelper.cs,EscapeControlChar,Cyclomatic complexity of the method is 13
Complex Method,NUnit.Framework.Internal,PlatformHelper,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Internal\PlatformHelper.cs,IsPlatformSupported,Cyclomatic complexity of the method is 25
Complex Method,NUnit.Framework.Internal,TestResult,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Internal\Results\TestResult.cs,AddToXml,Cyclomatic complexity of the method is 8
Complex Method,NUnit.Framework.Internal,TestSuiteResult,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Internal\Results\TestSuiteResult.cs,AddResult,Cyclomatic complexity of the method is 10
Complex Method,NUnit.Framework.Internal,TestFilter,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Internal\TestFilter.cs,FromXml,Cyclomatic complexity of the method is 9
Complex Method,NUnit.Framework.Internal,TextMessageWriter,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Internal\TextMessageWriter.cs,WriteValue,Cyclomatic complexity of the method is 11
Complex Method,NUnit.Framework.Internal,TextMessageWriter,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Internal\TextMessageWriter.cs,WriteArray,Cyclomatic complexity of the method is 9
Complex Method,NUnit.Framework.Internal,TypeHelper,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Internal\TypeHelper.cs,GetDisplayName,Cyclomatic complexity of the method is 8
Complex Method,NUnit.Framework.Internal,TypeHelper,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Internal\TypeHelper.cs,GetDisplayName,Cyclomatic complexity of the method is 10
Complex Method,NUnit.Framework.Internal,TypeHelper,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Internal\TypeHelper.cs,BestCommonType,Cyclomatic complexity of the method is 27
Complex Method,NUnit.Framework.Internal,TypeHelper,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Internal\TypeHelper.cs,ConvertArgumentList,Cyclomatic complexity of the method is 9
Complex Method,NUnit.Framework.Internal,TypeHelper,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Internal\TypeHelper.cs,CanDeduceTypeArgsFromArgs,Cyclomatic complexity of the method is 8
Complex Method,NUnit.Framework.Builders,NUnitTestCaseBuilder,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Internal\Builders\NUnitTestCaseBuilder.cs,BuildSingleTestMethod,Cyclomatic complexity of the method is 10
Complex Method,NUnit.Framework.Builders,NUnitTestCaseBuilder,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Internal\Builders\NUnitTestCaseBuilder.cs,CheckTestMethodSignature,Cyclomatic complexity of the method is 14
Complex Method,NUnit.Framework.Builders,NUnitTestFixtureBuilder,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Internal\Builders\NUnitTestFixtureBuilder.cs,GetTestFixtureAttributes,Cyclomatic complexity of the method is 8
Complex Method,NUnit.Framework.Builders,PairwiseTestCaseGenerator,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Internal\Builders\PairwiseStrategy.cs,ExtendTupleSet,Cyclomatic complexity of the method is 9
Complex Method,NUnit.Framework.Builders,PairwiseTestCaseGenerator,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Internal\Builders\PairwiseStrategy.cs,MaximizeCoverage,Cyclomatic complexity of the method is 10
Complex Method,NUnitLite.Runner,CommandLineOptions,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Runner\CommandLineOptions.cs,ProcessOption,Cyclomatic complexity of the method is 10
Long Parameter List,NUnit.Framework,Assert,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Assert.cs,AreEqual,The method has 5 parameters. Parameters: expected' actual' delta' message' args
Long Parameter List,NUnit.Framework,Assert,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Assert.cs,AreEqual,The method has 5 parameters. Parameters: expected' actual' delta' message' args
Long Parameter List,NUnit.Framework,Assert,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Assert.cs,AssertDoublesAreEqual,The method has 5 parameters. Parameters: expected' actual' delta' message' args
Long Parameter List,NUnit.Framework.Constraints,ComparisonConstraint,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Constraints\ComparisonConstraint.cs,ComparisonConstraint,The method has 5 parameters. Parameters: value' lessComparisonResult' equalComparisonResult' greaterComparisonResult' predicate
Long Parameter List,NUnit.Framework.Constraints,EqualConstraint,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Constraints\EqualConstraint.cs,DisplayFailurePoint,The method has 5 parameters. Parameters: writer' expected' actual' failurePoint' indent
Long Parameter List,NUnit.Framework.Constraints,MessageWriter,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Constraints\MessageWriter.cs,DisplayStringDifferences,The method has 5 parameters. Parameters: expected' actual' mismatch' ignoreCase' clipping
Long Parameter List,NUnit.Framework.Internal,TextMessageWriter,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Internal\TextMessageWriter.cs,DisplayStringDifferences,The method has 5 parameters. Parameters: expected' actual' mismatch' ignoreCase' clipping
Long Statement,NUnit.Framework.Constraints,AttributeConstraint,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Constraints\AttributeConstraint.cs,Matches,The length of the statement  "                throw new ArgumentException(string.Format("Actual value {0} does not implement ICustomAttributeProvider"' actual)' "actual"); " is 125.
Long Statement,NUnit.Framework.Constraints,AttributeExistsConstraint,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Constraints\AttributeExistsConstraint.cs,Matches,The length of the statement  "                throw new ArgumentException(string.Format("Actual value {0} does not implement ICustomAttributeProvider"' actual)' "actual"); " is 125.
Long Statement,NUnit.Framework.Constraints,ComparisonConstraint,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Constraints\ComparisonConstraint.cs,Matches,The length of the statement  "            return icomp < 0 && greaterComparisonResult || icomp == 0 && equalComparisonResult || icomp > 0 && lessComparisonResult; " is 120.
Long Statement,NUnit.Framework.Constraints,EmptyConstraint,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Constraints\EmptyConstraint.cs,Matches,The length of the statement  "                throw new System.ArgumentException("The actual value must be a non-null string' IEnumerable or DirectoryInfo"' "actual"); " is 121.
Long Statement,NUnit.Framework.Internal,TestResult,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Internal\Results\TestResult.cs,AddToXml,The length of the statement  "            XmlHelper.AddAttribute(thisNode' "time"' this.Time.ToString("0.000"' System.Globalization.CultureInfo.InvariantCulture)); " is 121.
Long Statement,NUnit.Framework.Internal.Commands,ExpectedExceptionCommand,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Internal\Commands\ExpectedExceptionCommand.cs,NoExceptionMessage,The length of the statement  "            string expectedType = exceptionData.ExpectedExceptionName == null ? "An Exception" : exceptionData.ExpectedExceptionName; " is 121.
Long Statement,NUnitLite.Runner,NUnitStreamUI,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitStreamUI.cs,PrintNotRunResults,The length of the statement  "            else if (result.ResultState == ResultState.Ignored || result.ResultState == ResultState.NotRunnable || result.ResultState == ResultState.Skipped) " is 145.
Complex Conditional,NUnit.Framework.Constraints,NUnitEqualityComparer,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Constraints\NUnitEqualityComparer.cs,AreEqual,The conditional expression  "x is IEnumerable && y is IEnumerable && !(x is string && y is string)"  is complex.
Complex Conditional,NUnit.Framework.Internal,TestFixture,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Internal\Tests\TestFixture.cs,GetSetUpTearDownMethods,The conditional expression  "method.IsAbstract ||                       !method.IsPublic && !method.IsFamily ||                       method.GetParameters().Length > 0 ||                       !method.ReturnType.Equals(typeof(void))"  is complex.
Complex Conditional,NUnit.Framework.Builders,NUnitTestCaseBuilder,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Internal\Builders\NUnitTestCaseBuilder.cs,CheckTestMethodSignature,The conditional expression  "!testMethod.Method.ReturnType.Equals(typeof(void)) &&                  (parms == null || !parms.HasExpectedResult && !parms.ExceptionExpected)"  is complex.
Complex Conditional,NUnit.Framework.Internal.Filters,NotFilter,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Internal\Filters\NotFilter.cs,MatchDescendant,The conditional expression  "!test.HasChildren || test.Tests == null || topLevel && test.RunState == RunState.Explicit"  is complex.
Empty Catch Block,NUnitLite.Runner,NUnitStreamUI,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitStreamUI.cs,Execute,The method has an empty catch block.
Magic Number,NUnit.Framework,CategoryAttribute,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Attributes\CategoryAttribute.cs,CategoryAttribute,The following statement contains a magic number: categoryName = categoryName.Substring( 0' categoryName.Length - 9 );
Magic Number,NUnit.Framework,PropertyAttribute,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Attributes\PropertyAttribute.cs,PropertyAttribute,The following statement contains a magic number: propertyName = propertyName.Substring( 0' propertyName.Length - 9 );
Magic Number,NUnit.Framework,RangeAttribute,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Attributes\RangeAttribute.cs,RangeAttribute,The following statement contains a magic number: double tol = step / 1000;
Magic Number,NUnit.Framework,RangeAttribute,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Attributes\RangeAttribute.cs,RangeAttribute,The following statement contains a magic number: float tol = step / 1000;
Magic Number,NUnit.Framework.Constraints,Constraint,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Constraints\Constraint.cs,Constraint,The following statement contains a magic number: argcnt = 2;
Magic Number,NUnit.Framework.Constraints,Constraint,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Constraints\Constraint.cs,GetStringRepresentation,The following statement contains a magic number: switch (argcnt)              {                  default:                  case 0:                      return string.Format("<{0}>"' DisplayName);                  case 1:                      return string.Format("<{0} {1}>"' DisplayName' _displayable(arg1));                  case 2:                      return string.Format("<{0} {1} {2}>"' DisplayName' _displayable(arg1)' _displayable(arg2));              }
Magic Number,NUnit.Framework.Constraints,FloatingPointNumerics,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Constraints\FloatingPointNumerics.cs,AreAlmostEqualUlps,The following statement contains a magic number: uint leftSignMask = (leftUnion.UInt >> 31);
Magic Number,NUnit.Framework.Constraints,FloatingPointNumerics,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Constraints\FloatingPointNumerics.cs,AreAlmostEqualUlps,The following statement contains a magic number: uint rightSignMask = (rightUnion.UInt >> 31);
Magic Number,NUnit.Framework.Constraints,FloatingPointNumerics,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Constraints\FloatingPointNumerics.cs,AreAlmostEqualUlps,The following statement contains a magic number: ulong leftSignMask = (leftUnion.ULong >> 63);
Magic Number,NUnit.Framework.Constraints,FloatingPointNumerics,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Constraints\FloatingPointNumerics.cs,AreAlmostEqualUlps,The following statement contains a magic number: ulong rightSignMask = (rightUnion.ULong >> 63);
Magic Number,NUnit.Framework.Constraints,MsgUtils,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Constraints\MsgUtils.cs,ClipExpectedAndActual,The following statement contains a magic number: clipStart = Math.Max(0' mismatch - clipLength / 2);
Magic Number,NUnit.Framework.Constraints,Numerics,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Constraints\Numerics.cs,AreEqual,The following statement contains a magic number: switch (tolerance.Mode)              {                  case ToleranceMode.None:                      return expected.Equals(actual);                    case ToleranceMode.Linear:                      return Math.Abs(expected - actual) <= Convert.ToDouble(tolerance.Value);                    case ToleranceMode.Percent:                      if (expected == 0.0)                          return expected.Equals(actual);                        double relativeError = Math.Abs((expected - actual) / expected);                      return (relativeError <= Convert.ToDouble(tolerance.Value) / 100.0);  #if !NETCF_1_0                  case ToleranceMode.Ulps:                      return FloatingPointNumerics.AreAlmostEqualUlps(                          expected' actual' Convert.ToInt64(tolerance.Value));  #endif                  default:                      throw new ArgumentException("Unknown tolerance mode specified"' "mode");              }
Magic Number,NUnit.Framework.Constraints,Numerics,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Constraints\Numerics.cs,AreEqual,The following statement contains a magic number: switch (tolerance.Mode)              {                  case ToleranceMode.None:                      return expected.Equals(actual);                    case ToleranceMode.Linear:                      return Math.Abs(expected - actual) <= Convert.ToDouble(tolerance.Value);                    case ToleranceMode.Percent:                      if (expected == 0.0f)                          return expected.Equals(actual);                      float relativeError = Math.Abs((expected - actual) / expected);                      return (relativeError <= Convert.ToSingle(tolerance.Value) / 100.0f);  #if !NETCF_1_0                  case ToleranceMode.Ulps:                      return FloatingPointNumerics.AreAlmostEqualUlps(                          expected' actual' Convert.ToInt32(tolerance.Value));  #endif                  default:                      throw new ArgumentException("Unknown tolerance mode specified"' "mode");              }
Magic Number,NUnit.Framework.Constraints,Numerics,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Constraints\Numerics.cs,AreEqual,The following statement contains a magic number: switch (tolerance.Mode)              {                  case ToleranceMode.None:                      return expected.Equals(actual);                    case ToleranceMode.Linear:                      decimal decimalTolerance = Convert.ToDecimal(tolerance.Value);                      if (decimalTolerance > 0m)                          return Math.Abs(expected - actual) <= decimalTolerance;                        return expected.Equals(actual);                    case ToleranceMode.Percent:                      if (expected == 0m)                          return expected.Equals(actual);                        double relativeError = Math.Abs(                          (double)(expected - actual) / (double)expected);                      return (relativeError <= Convert.ToDouble(tolerance.Value) / 100.0);                    default:                      throw new ArgumentException("Unknown tolerance mode specified"' "mode");              }
Magic Number,NUnit.Framework.Constraints,Numerics,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Constraints\Numerics.cs,AreEqual,The following statement contains a magic number: switch (tolerance.Mode)              {                  case ToleranceMode.None:                      return expected.Equals(actual);                    case ToleranceMode.Linear:                      ulong ulongTolerance = Convert.ToUInt64(tolerance.Value);                      if (ulongTolerance > 0ul)                      {                          ulong diff = expected >= actual ? expected - actual : actual - expected;                          return diff <= ulongTolerance;                      }                        return expected.Equals(actual);                    case ToleranceMode.Percent:                      if (expected == 0ul)                          return expected.Equals(actual);                        // Can't do a simple Math.Abs() here since it's unsigned                      ulong difference = Math.Max(expected' actual) - Math.Min(expected' actual);                      double relativeError = Math.Abs((double)difference / (double)expected);                      return (relativeError <= Convert.ToDouble(tolerance.Value) / 100.0);                    default:                      throw new ArgumentException("Unknown tolerance mode specified"' "mode");              }
Magic Number,NUnit.Framework.Constraints,Numerics,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Constraints\Numerics.cs,AreEqual,The following statement contains a magic number: switch (tolerance.Mode)              {                  case ToleranceMode.None:                      return expected.Equals(actual);                    case ToleranceMode.Linear:                      long longTolerance = Convert.ToInt64(tolerance.Value);                      if (longTolerance > 0L)                          return Math.Abs(expected - actual) <= longTolerance;                        return expected.Equals(actual);                    case ToleranceMode.Percent:                      if (expected == 0L)                          return expected.Equals(actual);                        double relativeError = Math.Abs(                          (double)(expected - actual) / (double)expected);                      return (relativeError <= Convert.ToDouble(tolerance.Value) / 100.0);                    default:                      throw new ArgumentException("Unknown tolerance mode specified"' "mode");              }
Magic Number,NUnit.Framework.Constraints,Numerics,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Constraints\Numerics.cs,AreEqual,The following statement contains a magic number: switch (tolerance.Mode)              {                  case ToleranceMode.None:                      return expected.Equals(actual);                    case ToleranceMode.Linear:                      uint uintTolerance = Convert.ToUInt32(tolerance.Value);                      if (uintTolerance > 0)                      {                          uint diff = expected >= actual ? expected - actual : actual - expected;                          return diff <= uintTolerance;                      }                        return expected.Equals(actual);                    case ToleranceMode.Percent:                      if (expected == 0u)                          return expected.Equals(actual);                        // Can't do a simple Math.Abs() here since it's unsigned                      uint difference = Math.Max(expected' actual) - Math.Min(expected' actual);                      double relativeError = Math.Abs((double)difference / (double)expected);                      return (relativeError <= Convert.ToDouble(tolerance.Value) / 100.0);                    default:                      throw new ArgumentException("Unknown tolerance mode specified"' "mode");              }
Magic Number,NUnit.Framework.Constraints,Numerics,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Constraints\Numerics.cs,AreEqual,The following statement contains a magic number: switch (tolerance.Mode)              {                  case ToleranceMode.None:                      return expected.Equals(actual);                    case ToleranceMode.Linear:                      int intTolerance = Convert.ToInt32(tolerance.Value);                      if (intTolerance > 0)                          return Math.Abs(expected - actual) <= intTolerance;                        return expected.Equals(actual);                    case ToleranceMode.Percent:                      if (expected == 0)                          return expected.Equals(actual);                        double relativeError = Math.Abs(                          (double)(expected - actual) / (double)expected);                      return (relativeError <= Convert.ToDouble(tolerance.Value) / 100.0);                    default:                      throw new ArgumentException("Unknown tolerance mode specified"' "mode");              }
Magic Number,NUnit.Framework.Constraints,AndOperator,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Constraints\Operators\AndOperator.cs,AndOperator,The following statement contains a magic number: this.left_precedence = this.right_precedence = 2;
Magic Number,NUnit.Framework.Constraints,CollectionOperator,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Constraints\Operators\CollectionOperator.cs,CollectionOperator,The following statement contains a magic number: this.right_precedence = 10;
Magic Number,NUnit.Framework.Constraints,OrOperator,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Constraints\Operators\OrOperator.cs,OrOperator,The following statement contains a magic number: this.left_precedence = this.right_precedence = 3;
Magic Number,NUnit.Framework.Constraints,ThrowsOperator,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Constraints\Operators\ThrowsOperator.cs,ThrowsOperator,The following statement contains a magic number: this.right_precedence = 100;
Magic Number,NUnit.Framework.Constraints,WithOperator,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Constraints\Operators\WithOperator.cs,WithOperator,The following statement contains a magic number: this.right_precedence = 4;
Magic Number,NUnit.Framework.Constraints,StartsWithConstraint,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Constraints\StartsWithConstraint.cs,WriteDescriptionTo,The following statement contains a magic number: writer.WriteExpectedValue(MsgUtils.ClipString(expected' writer.MaxLineLength - 40' 0));
Magic Number,NUnit.Framework.Internal,AssemblyHelper,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Internal\AssemblyHelper.cs,GetAssemblyPath,The following statement contains a magic number: path[start] == '/' && path[start + 2] == ':'
Magic Number,NUnit.Framework.Internal,PlatformHelper,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Internal\PlatformHelper.cs,IsRuntimeSupported,The following statement contains a magic number: parts.Length == 2
Magic Number,NUnit.Framework.Internal,RuntimeFramework,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Internal\RuntimeFramework.cs,RuntimeFramework,The following statement contains a magic number: this.clrVersion = new Version(2' 0' 50727);
Magic Number,NUnit.Framework.Internal,RuntimeFramework,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Internal\RuntimeFramework.cs,RuntimeFramework,The following statement contains a magic number: this.clrVersion = new Version(2' 0' 50727);
Magic Number,NUnit.Framework.Internal,RuntimeFramework,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Internal\RuntimeFramework.cs,RuntimeFramework,The following statement contains a magic number: version.Major == 3
Magic Number,NUnit.Framework.Internal,RuntimeFramework,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Internal\RuntimeFramework.cs,InitFromFrameworkVersion,The following statement contains a magic number: this.clrVersion = new Version(1' 1' 4322);
Magic Number,NUnit.Framework.Internal,RuntimeFramework,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Internal\RuntimeFramework.cs,Parse,The following statement contains a magic number: parts.Length == 2
Magic Number,NUnit.Framework.Internal,RuntimeFramework,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Internal\RuntimeFramework.cs,AppendMonoFramework,The following statement contains a magic number: RuntimeFramework framework = new RuntimeFramework(RuntimeType.Mono' new Version(1' 1' 4322));
Magic Number,NUnit.Framework.Internal,RuntimeFramework,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Internal\RuntimeFramework.cs,AppendMonoFramework,The following statement contains a magic number: RuntimeFramework framework = new RuntimeFramework(RuntimeType.Mono' new Version(2' 0' 50727));
Magic Number,NUnit.Framework.Internal,RuntimeFramework,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Internal\RuntimeFramework.cs,AppendMonoFramework,The following statement contains a magic number: RuntimeFramework framework = new RuntimeFramework(RuntimeType.Mono' new Version(2' 0' 50727));
Magic Number,NUnit.Framework.Internal,RuntimeFramework,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Internal\RuntimeFramework.cs,AppendMonoFramework,The following statement contains a magic number: RuntimeFramework framework = new RuntimeFramework(RuntimeType.Mono' new Version(4' 0' 30319));
Magic Number,NUnit.Framework.Internal,RuntimeFramework,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Internal\RuntimeFramework.cs,AppendMonoFramework,The following statement contains a magic number: RuntimeFramework framework = new RuntimeFramework(RuntimeType.Mono' new Version(4' 0' 30319));
Magic Number,NUnit.Framework.Internal,TextMessageWriter,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Internal\TextMessageWriter.cs,DisplayStringDifferences,The following statement contains a magic number: int maxDisplayLength = MaxLineLength                  - PrefixLength   // Allow for prefix                  - 2;
Magic Number,NUnit.Framework.Internal,TextMessageWriter,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Internal\TextMessageWriter.cs,WriteCaretLine,The following statement contains a magic number: WriteLine("  {0}^"' new string('-'' PrefixLength + mismatch - 2 + 1));
Magic Number,NUnit.Framework.Builders,CombinatorialTestCaseProvider,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Internal\Builders\CombinatorialTestCaseProvider.cs,GetStrategy,The following statement contains a magic number: method.IsDefined(typeof(NUnit.Framework.PairwiseAttribute)' false) &&                  method.GetParameters().Length > 2
Magic Number,NUnit.Framework.Builders,FleaRand,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Internal\Builders\PairwiseStrategy.cs,FleaRand,The following statement contains a magic number: i < 10
Magic Number,NUnit.Framework.Builders,FleaRand,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Internal\Builders\PairwiseStrategy.cs,Batch,The following statement contains a magic number: d = (c << 19) + (c >> 13) + b;
Magic Number,NUnit.Framework.Builders,FleaRand,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Internal\Builders\PairwiseStrategy.cs,Batch,The following statement contains a magic number: d = (c << 19) + (c >> 13) + b;
Magic Number,NUnit.Framework.Builders,PairwiseTestCaseGenerator,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Internal\Builders\PairwiseStrategy.cs,FindGoodTestCase,The following statement contains a magic number: i < 5
Magic Number,NUnit.Framework.Internal.Commands,MaxTimeCommand,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Internal\Commands\MaxTimeCommand.cs,Execute,The following statement contains a magic number: int elapsedTime = (int)Math.Round(testResult.Time * 1000.0);
Missing Default,NUnit.Framework,TestCaseSourceAttribute,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Attributes\TestCaseSourceAttribute.cs,GetTestCaseSource,The following switch statement is missing a default case: switch (member.MemberType)                  {                      case MemberTypes.Field:                          FieldInfo field = member as FieldInfo;                          source = (IEnumerable)field.GetValue(sourceobject);                          break;                      case MemberTypes.Property:                          PropertyInfo property = member as PropertyInfo;                          source = (IEnumerable)property.GetValue(sourceobject' null);                          break;                      case MemberTypes.Method:                          MethodInfo m = member as MethodInfo;                          source = (IEnumerable)m.Invoke(sourceobject' null);                          break;                  }
Missing Default,NUnit.Framework,ValueSourceAttribute,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Attributes\ValueSourceAttribute.cs,GetDataSource,The following switch statement is missing a default case: switch (member.MemberType)                  {                      case MemberTypes.Field:                          FieldInfo field = member as FieldInfo;                          source = (IEnumerable)field.GetValue(sourceobject);                          break;                      case MemberTypes.Property:                          PropertyInfo property = member as PropertyInfo;                          source = (IEnumerable)property.GetValue(sourceobject' null);                          break;                      case MemberTypes.Method:                          MethodInfo m = member as MethodInfo;                          source = (IEnumerable)m.Invoke(sourceobject' null);                          break;                  }
Missing Default,NUnit.Framework.Internal,TestResult,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Internal\Results\TestResult.cs,AddToXml,The following switch statement is missing a default case: switch (ResultState.Status)              {                  case TestStatus.Failed:                      AddFailureElement(thisNode);                      break;                  case TestStatus.Skipped:                      AddReasonElement(thisNode);                      break;                  case TestStatus.Passed:                      break;                  case TestStatus.Inconclusive:                      break;              }
Missing Default,NUnit.Framework.Internal,TestSuiteResult,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitLite-0.7.0\Internal\Results\TestSuiteResult.cs,RecordException,The following switch statement is missing a default case: switch (ResultState.Status)                  {                      case TestStatus.Skipped:                          this.skipCount = this.test.TestCaseCount;                          break;                        case TestStatus.Failed:                          this.failCount = this.test.TestCaseCount;                          break;                  }
Missing Default,NUnitLite.Runner,NUnitStreamUI,D:\research\architectureSmells\repos\zoon_nunit-unity3d\Assets\Plugins\NUnitLite\NUnitStreamUI.cs,PrintAllResults,The following switch statement is missing a default case: switch (result.ResultState.Status)              {                  case TestStatus.Failed:                      status = "FAIL";                      break;                  case TestStatus.Skipped:                      status = "SKIP";                      break;                  case TestStatus.Inconclusive:                      status = "INC ";                      break;                  case TestStatus.Passed:                      status = "OK  ";                      break;              }
