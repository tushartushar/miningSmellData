Implementation smell,Namespace,Class,File,Method,Description
Long Method,Meridian.Controls,PlayerControl,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\PlayerControl.xaml.cs,Connect,The method has 100 lines of code.
Long Method,Meridian.Services,DataService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\DataService.cs,GetNewsAudio,The method has 104 lines of code.
Long Method,Meridian.Services,DataService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\DataService.cs,GetWallAudio,The method has 110 lines of code.
Long Method,Meridian.Services,DataService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\DataService.cs,GetFavoritesAudio,The method has 100 lines of code.
Long Method,SQLite,TableQuery<T>,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\SQLite.cs,CompileExpr,The method has 159 lines of code.
Long Method,Meridian.ViewModel,MainViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\MainViewModel.cs,InitializeCommands,The method has 171 lines of code.
Long Method,Meridian.ViewModel,SettingsViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\SettingsViewModel.cs,SettingsViewModel,The method has 132 lines of code.
Long Method,Meridian.ViewModel,SettingsViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\SettingsViewModel.cs,SaveSettings,The method has 221 lines of code.
Complex Method,Meridian.Behaviours,TransitionBehaviour,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Behaviours\TransitionBehaviour.cs,ItemContainerGenerator_StatusChanged,Cyclomatic complexity of the method is 8
Complex Method,Meridian.Behaviours,TransitionBehaviour,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Behaviours\TransitionBehaviour.cs,GetTargets,Cyclomatic complexity of the method is 9
Complex Method,Meridian.Controls,PlayerControl,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\PlayerControl.xaml.cs,Connect,Cyclomatic complexity of the method is 13
Complex Method,Meridian.Controls,VirtualizingWrapPanel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\VirtualizingWrapPanel.cs,MeasureOverride,Cyclomatic complexity of the method is 11
Complex Method,Meridian.Converters,SearchResultTemplateSelector,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Converters\SearchResultTemplateSelector.cs,SelectTemplate,Cyclomatic complexity of the method is 8
Complex Method,Meridian.Helpers,ArtistImageHelper,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Helpers\ArtistImageHelper.cs,StartQueueProcessing,Cyclomatic complexity of the method is 8
Complex Method,Meridian.Helpers,AlbumCoversHelper,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Helpers\AlbumCoversHelper.cs,StartQueueProcessing,Cyclomatic complexity of the method is 8
Complex Method,Meridian.Helpers,HotKeyManager,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Helpers\HotKeyManager.cs,HotKeyPressed,Cyclomatic complexity of the method is 8
Complex Method,Meridian.RemotePlay,SimpleWebServer,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\RemotePlay\SimpleWebServer.cs,Listen,Cyclomatic complexity of the method is 11
Complex Method,Meridian.RemotePlay,RemotePlayService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\RemotePlay\RemotePlayService.cs,OnReceveData,Cyclomatic complexity of the method is 16
Complex Method,Meridian.Services,AudioService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\Media\AudioService.cs,PlayInternal,Cyclomatic complexity of the method is 11
Complex Method,Meridian.Services,AudioService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\Media\AudioService.cs,Prev,Cyclomatic complexity of the method is 8
Complex Method,Meridian.Services,AudioService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\Media\AudioService.cs,MediaPlayerOnMediaFailed,Cyclomatic complexity of the method is 8
Complex Method,Meridian.Services,DataService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\DataService.cs,GetArtistImage,Cyclomatic complexity of the method is 9
Complex Method,Meridian.Services,DataService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\DataService.cs,GetTrackImage,Cyclomatic complexity of the method is 10
Complex Method,Meridian.Services,DataService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\DataService.cs,GetNewsAudio,Cyclomatic complexity of the method is 18
Complex Method,Meridian.Services,DataService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\DataService.cs,GetWallAudio,Cyclomatic complexity of the method is 19
Complex Method,Meridian.Services,DataService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\DataService.cs,GetFavoritesAudio,Cyclomatic complexity of the method is 17
Complex Method,Meridian.Services,DataService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\DataService.cs,GetAdvancedRecommendations,Cyclomatic complexity of the method is 11
Complex Method,Meridian.Services,UpdateService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\UpdateService.cs,Unpack,Cyclomatic complexity of the method is 8
Complex Method,SQLite,SQLiteConnection,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\SQLite.cs,CreateTable,Cyclomatic complexity of the method is 9
Complex Method,SQLite,Orm,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\SQLite.cs,SqlType,Cyclomatic complexity of the method is 12
Complex Method,SQLite,SQLiteCommand,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\SQLite.cs,BindParameter,Cyclomatic complexity of the method is 15
Complex Method,SQLite,SQLiteCommand,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\SQLite.cs,ReadCol,Cyclomatic complexity of the method is 21
Complex Method,SQLite,PreparedSqlLiteInsertCommand,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\SQLite.cs,ExecuteNonQuery,Cyclomatic complexity of the method is 8
Complex Method,SQLite,TableQuery<T>,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\SQLite.cs,CompileExpr,Cyclomatic complexity of the method is 27
Complex Method,SQLite,TableQuery<T>,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\SQLite.cs,GetSqlName,Cyclomatic complexity of the method is 11
Complex Method,Meridian.ViewModel.Local,LocalMusicViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Local\LocalMusicViewModel.cs,Refresh,Cyclomatic complexity of the method is 8
Complex Method,Meridian.ViewModel.Local,LocalMusicViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Local\LocalMusicViewModel.cs,LoadSelectedArtist,Cyclomatic complexity of the method is 8
Complex Method,Meridian.ViewModel.Main,FeedViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Main\FeedViewModel.cs,LoadFeed,Cyclomatic complexity of the method is 11
Complex Method,Meridian.ViewModel.Main,MusicViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Main\MusicViewModel.cs,LoadNewsAudios,Cyclomatic complexity of the method is 9
Complex Method,Meridian.ViewModel.Main,MusicViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Main\MusicViewModel.cs,LoadWallAudios,Cyclomatic complexity of the method is 8
Complex Method,Meridian.ViewModel.Main,MusicViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Main\MusicViewModel.cs,LoadFavoritesAudios,Cyclomatic complexity of the method is 8
Complex Method,Meridian.ViewModel.Main,MusicViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Main\MusicViewModel.cs,Drop,Cyclomatic complexity of the method is 13
Complex Method,Meridian.ViewModel.Main,NowPlayingViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Main\NowPlayingViewModel.cs,GetArtistImage,Cyclomatic complexity of the method is 9
Complex Method,Meridian.ViewModel.Main,RecommendationsViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Main\RecommendationsViewModel.cs,LoadGeneralRecommendations,Cyclomatic complexity of the method is 9
Complex Method,Meridian.ViewModel.Search,AlbumViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Search\AlbumViewModel.cs,Save,Cyclomatic complexity of the method is 9
Complex Method,Meridian.ViewModel.Search,SearchViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Search\SearchViewModel.cs,SearchTracks,Cyclomatic complexity of the method is 9
Complex Method,Meridian.ViewModel.Search,SearchViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Search\SearchViewModel.cs,SearchLocalArtists,Cyclomatic complexity of the method is 9
Complex Method,Meridian.ViewModel.Flyouts,ShareViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Flyouts\ShareViewModel.cs,Share,Cyclomatic complexity of the method is 13
Complex Method,Meridian.ViewModel.Flyouts,ShareViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Flyouts\ShareViewModel.cs,GetAudioList,Cyclomatic complexity of the method is 8
Complex Method,Meridian.ViewModel.People,FriendAudioViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\People\FriendAudioViewModel.cs,LoadWallAudios,Cyclomatic complexity of the method is 8
Complex Method,Meridian.ViewModel.People,SocietyAudioViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\People\SocietyAudioViewModel.cs,LoadWallAudios,Cyclomatic complexity of the method is 8
Complex Method,Meridian.ViewModel,MainViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\MainViewModel.cs,OnNavigateToPage,Cyclomatic complexity of the method is 8
Complex Method,Meridian.ViewModel,MainViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\MainViewModel.cs,OnPlayerPositionChanged,Cyclomatic complexity of the method is 8
Complex Method,Meridian.ViewModel,MainViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\MainViewModel.cs,GetArtistImage,Cyclomatic complexity of the method is 8
Complex Method,Meridian.ViewModel,MainViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\MainViewModel.cs,GetTrackImage,Cyclomatic complexity of the method is 11
Complex Method,Meridian.ViewModel,MainViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\MainViewModel.cs,SwitchUIMode,Cyclomatic complexity of the method is 9
Complex Method,Meridian.ViewModel,SettingsViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\SettingsViewModel.cs,SaveSettings,Cyclomatic complexity of the method is 41
Complex Method,Meridian.View.Flyouts,CreateRadioStationView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\CreateRadioStationView.xaml.cs,Connect,Cyclomatic complexity of the method is 8
Complex Method,Meridian,App,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\App.xaml.cs,App_OnStartup,Cyclomatic complexity of the method is 8
Long Parameter List,Meridian.Extensions,SocketExtensions,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Extensions\SocketExtensions.cs,ReceiveAsync,The method has 5 parameters. Parameters: socket' buffer' offset' size' socketFlags
Long Parameter List,Meridian.Services,DataService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\DataService.cs,GetAlbumInfo,The method has 5 parameters. Parameters: id' name' artist' loadTracks' autoCorrent
Long Parameter List,Meridian.Services,DataService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\DataService.cs,EditAudio,The method has 5 parameters. Parameters: audioId' ownerId' title' artist' lyrics
Long Parameter List,SQLite,SQLite3,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\SQLite.cs,Prepare2,The method has 5 parameters. Parameters: db' sql' numBytes' stmt' pzTail
Long Parameter List,SQLite,SQLite3,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\SQLite.cs,BindText,The method has 5 parameters. Parameters: stmt' index' val' n' free
Long Parameter List,SQLite,SQLite3,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\SQLite.cs,BindBlob,The method has 5 parameters. Parameters: stmt' index' val' n' free
Long Identifier,Meridian.Controls,NotificationControl,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\NotificationControl.xaml.cs,,The length of the parameter StatusTextBlockRenderTransform is 30.
Long Statement,Meridian.Behaviours,TransitionBehaviour,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Behaviours\TransitionBehaviour.cs,ItemContainerGenerator_StatusChanged,The length of the statement  "                        Transition.Children[i].BeginTime = TimeSpan.FromMilliseconds(TransitionDelay * (transitionIndex != 0 ? transitionIndex : index)); " is 129.
Long Statement,Meridian.Behaviours,TransitionBehaviour,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Behaviours\TransitionBehaviour.cs,AssociatedObject_Loaded,The length of the statement  "                    Transition.Children[i].BeginTime = TimeSpan.FromMilliseconds(TransitionDelay * (transitionIndex != 0 ? transitionIndex : index)); " is 129.
Long Statement,Meridian.Controls,ContentTransitionControl,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\ContentTransitionControl.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Meridian;component/controls/contenttransitioncontrol.xaml"' System.UriKind.Relative); " is 131.
Long Statement,Meridian.Controls,FlyoutContent,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\FlyoutContent.cs,Close,The length of the statement  "            var flyout = Application.Current.MainWindow.GetVisualDescendents().FirstOrDefault(c => c is FlyoutControl) as FlyoutControl; " is 124.
Long Statement,Meridian.Controls,FlyoutControl,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\FlyoutControl.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Meridian;component/controls/flyoutcontrol.xaml"' System.UriKind.Relative); " is 120.
Long Statement,Meridian.Controls,ImageTransitionControl,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\ImageTransitionControl.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Meridian;component/controls/imagetransitioncontrol.xaml"' System.UriKind.Relative); " is 129.
Long Statement,Meridian.Controls,LocalSearchControl,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\LocalSearchControl.xaml.cs,GetForCurrentView,The length of the statement  "            return (Application.Current.MainWindow.GetVisualDescendents().FirstOrDefault(c => c is LocalSearchControl) as LocalSearchControl); " is 130.
Long Statement,Meridian.Controls,NotificationControl,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\NotificationControl.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Meridian;component/controls/notificationcontrol.xaml"' System.UriKind.Relative); " is 126.
Long Statement,Meridian.Controls,NotificationControl,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\NotificationControl.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Media.Animation.Storyboard)(target)).Completed += new System.EventHandler(this.SwitchInAnim_OnCompleted); " is 122.
Long Statement,Meridian.Controls,NotificationControl,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\NotificationControl.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Media.Animation.Storyboard)(target)).Completed += new System.EventHandler(this.SwitchOutAnim_OnCompleted); " is 123.
Long Statement,Meridian.Controls,PlayerControl,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\PlayerControl.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Meridian;component/controls/playercontrol.xaml"' System.UriKind.Relative); " is 120.
Long Statement,Meridian.Controls,ShareBarControl,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\ShareBarControl.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Meridian;component/controls/sharebarcontrol.xaml"' System.UriKind.Relative); " is 122.
Long Statement,Meridian.Controls,VirtualizingWrapPanel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\VirtualizingWrapPanel.cs,MeasureOverride,The length of the statement  "                for (var itemIndex = layoutInfo.FirstRealizedItemIndex; itemIndex <= layoutInfo.LastRealizedItemIndex; itemIndex++' visualIndex++) " is 130.
Long Statement,Meridian.Controls,VirtualizingWrapPanel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\VirtualizingWrapPanel.cs,GetLayoutInfo,The length of the statement  "            // we need to ensure that there is one realized item prior to the first visible item' and one after the last visible item' " is 122.
Long Statement,Meridian.Controls,VirtualizingWrapPanel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\VirtualizingWrapPanel.cs,GetLayoutInfo,The length of the statement  "            // navigates up' the ListBox selects the previous item' and the scrolls that into view - and this triggers the loading of the rest of the items  " is 143.
Long Statement,Meridian.Controls,VirtualizingWrapPanel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\VirtualizingWrapPanel.cs,GetLayoutInfo,The length of the statement  "            var lastRealizedIndex = Math.Min(firstRealizedIndex + completeRealizedLines * extentInfo.ItemsPerLine + 2' _itemsControl.Items.Count - 1); " is 138.
Long Statement,Meridian.Controls,VolumeControl,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\VolumeControl.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Meridian;component/controls/volumecontrol.xaml"' System.UriKind.Relative); " is 120.
Long Statement,Meridian.Domain,Settings,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Domain\Settings.cs,Save,The length of the statement  "                flyout.FlyoutContent = new CommonErrorView(ErrorResources.AccessDeniedErrorTitle' ErrorResources.AccessDeniedErrorDescription); " is 127.
Long Statement,Meridian.Helpers,DateTimeConverter,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Helpers\DateTimeConverter.cs,FromIso8601FormattedDateTime,The length of the statement  "            return DateTime.ParseExact(iso8601DateTime' Iso8601Format' CultureInfo.InvariantCulture' DateTimeStyles.AssumeUniversal | DateTimeStyles.AdjustToUniversal); " is 156.
Long Statement,Meridian.Helpers,FilesHelper,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Helpers\FilesHelper.cs,GetMusicFiles,The length of the statement  "                    Directory.EnumerateFiles(Environment.GetFolderPath(Environment.SpecialFolder.MyMusic)' "*.*"' SearchOption.AllDirectories) " is 122.
Long Statement,Meridian.Helpers,FilesHelper,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Helpers\FilesHelper.cs,GetDirectoryFiles,The length of the statement  "                        foundFiles = foundFiles.Concat(GetDirectoryFiles(dir' patternMatch' searchOption)); // Add files in subdirectories recursively to the list " is 138.
Long Statement,Meridian.Helpers,FilesHelper,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Helpers\FilesHelper.cs,GetDirectoryFiles,The length of the statement  "                foundFiles = foundFiles.Concat(Directory.EnumerateFiles(rootPath' patternMatch)); // Add files from the current directory to the list " is 133.
Long Statement,Meridian.Helpers,HotKeyManager,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Helpers\HotKeyManager.cs,InitializeHotkeys,The length of the statement  "            RegisterHotkey(Settings.Instance.ShuffleHotKeyModifier' Settings.Instance.ShuffleHotKey' h => ViewModelLocator.Main.Shuffle = !ViewModelLocator.Main.Shuffle); " is 158.
Long Statement,Meridian.Helpers,HotKeyManager,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Helpers\HotKeyManager.cs,InitializeHotkeys,The length of the statement  "            RegisterHotkey(Settings.Instance.RepeatHotKeyModifier' Settings.Instance.RepeatHotKey' h => ViewModelLocator.Main.Repeat = !ViewModelLocator.Main.Repeat); " is 154.
Long Statement,Meridian.Helpers,HotKeyManager,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Helpers\HotKeyManager.cs,InitializeHotkeys,The length of the statement  "            RegisterHotkey(Settings.Instance.IncreaseVolumeHotKeyModifier' Settings.Instance.IncreaseVolumeHotKey' h => ViewModelLocator.Main.Volume += 5); " is 143.
Long Statement,Meridian.Helpers,HotKeyManager,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Helpers\HotKeyManager.cs,InitializeHotkeys,The length of the statement  "            RegisterHotkey(Settings.Instance.DecreaseVolumeHotKeyModifier' Settings.Instance.DecreaseVolumeHotKey' h => ViewModelLocator.Main.Volume -= 5); " is 143.
Long Statement,Meridian.Helpers,HotKeyManager,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Helpers\HotKeyManager.cs,InitializeHotkeys,The length of the statement  "            RegisterHotkey(Settings.Instance.FastForwardHotKeyModifier' Settings.Instance.FastForwardHotKey' h => AudioService.FastForward(7)); " is 131.
Long Statement,Meridian.Layout.Controls,HeaderControl,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Layout\Controls\HeaderControl.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Meridian;component/layout/controls/headercontrol.xaml"' System.UriKind.Relative); " is 127.
Long Statement,Meridian.Model,VkAccount,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Model\Account.cs,Login,The length of the statement  "            var captchaSid = loginParams.AdditionalParams.ContainsKey("captchaSid") ? loginParams.AdditionalParams["captchaSid"] : null; " is 124.
Long Statement,Meridian.Model,VkAccount,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Model\Account.cs,Login,The length of the statement  "            var captchaKey = loginParams.AdditionalParams.ContainsKey("captchaKey") ? loginParams.AdditionalParams["captchaKey"] : null; " is 124.
Long Statement,Meridian.RemotePlay,SimpleWebServer,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\RemotePlay\SimpleWebServer.cs,ApiResponse,The length of the statement  "                        responseText = JsonConvert.SerializeObject(new { response = new { track = ViewModelLocator.Main.CurrentAudio' currentTime = ViewModelLocator.Main.CurrentAudioPositionSeconds' duration = ViewModelLocator.Main.CurrentAudioDuration.TotalSeconds' shuffle = ViewModelLocator.Main.Shuffle' repeat = ViewModelLocator.Main.Repeat } }' Formatting.None' jsonSettings); " is 358.
Long Statement,Meridian.RemotePlay,SimpleWebServer,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\RemotePlay\SimpleWebServer.cs,ApiResponse,The length of the statement  "                        responseText = JsonConvert.SerializeObject(new { response = ViewModelLocator.Main.IsPlaying }' Formatting.None' jsonSettings); " is 126.
Long Statement,Meridian.RemotePlay,SimpleWebServer,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\RemotePlay\SimpleWebServer.cs,ApiResponse,The length of the statement  "                        responseText = JsonConvert.SerializeObject(new { response = ViewModelLocator.Main.Volume }' Formatting.None' jsonSettings); " is 123.
Long Statement,Meridian.RemotePlay,SimpleWebServer,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\RemotePlay\SimpleWebServer.cs,FileResponse,The length of the statement  "            var streamResourceInfo = Application.GetContentStream(new Uri("pack://application:'''/Meridian;component/RemotePlay/web" + target)); " is 132.
Long Statement,Meridian.RemotePlay,RemotePlayService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\RemotePlay\RemotePlayService.cs,Start,The length of the statement  "                await ViewModelLocator.Vkontakte.Storage.Set("remoteServer"' Settings.Instance.RemotePlayAddress + ":" + Settings.Instance.RemotePlayPort); " is 139.
Long Statement,Meridian.Services,AudioService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\Media\AudioService.cs,Load,The length of the statement  "                        var audio = JsonConvert.DeserializeObject<Audio>(o["currentAudio"].ToString()' new JsonSerializerSettings() { TypeNameHandling = TypeNameHandling.Objects }); " is 157.
Long Statement,Meridian.Services,AudioService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\Media\AudioService.cs,Load,The length of the statement  "                        var playlist = JsonConvert.DeserializeObject<List<object>>(o["currentPlaylist"].ToString()' new JsonSerializerSettings() { TypeNameHandling = TypeNameHandling.Objects }); " is 170.
Long Statement,Meridian.Services,AudioService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\Media\AudioService.cs,Save,The length of the statement  "                var json = JsonConvert.SerializeObject(o' new JsonSerializerSettings() { TypeNameHandling = TypeNameHandling.Objects }); " is 120.
Long Statement,Meridian.Services,AudioService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\Media\AudioService.cs,MediaPlayerOnMediaFailed,The length of the statement  "                LoggingService.Log("Media failed " + CurrentAudio.Id + " " + CurrentAudio.Artist + " - " + CurrentAudio.Title + ". " + e); " is 122.
Long Statement,Meridian.Services,AudioService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\Media\AudioService.cs,MediaPlayerOnMediaFailed,The length of the statement  "                flyout.FlyoutContent = new CommonMessageView() { Header = ErrorResources.AudioFailedErrorHeaderCommon' Message = ErrorResources.WmpMissingError }; " is 146.
Long Statement,Meridian.Services,AudioService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\Media\AudioService.cs,MediaPlayerOnMediaFailed,The length of the statement  "                    flyout.FlyoutContent = new CommonMessageView() { Header = ErrorResources.AudioFailedErrorHeaderCommon' Message = ErrorResources.WmpMissingError }; " is 146.
Long Statement,Meridian.Services,DataBaseService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\DataBaseService.cs,GetLocalArtistUnsortedTracks,The length of the statement  "            var tracks = await db.Table<LocalAudio>().Where(track => track.ArtistId == artistId && (track.AlbumId == null || track.AlbumId == string.Empty)).ToListAsync(); " is 159.
Long Statement,Meridian.Services,DataService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\DataService.cs,GetArtistImage,The length of the statement  "            if (artist.Contains("' ") || artist.Contains(" feat "' StringComparison.OrdinalIgnoreCase) || artist.Contains(" ft. "' StringComparison.OrdinalIgnoreCase)) " is 155.
Long Statement,Meridian.Services,DataService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\DataService.cs,GetAudioByArtistAndTitle,The length of the statement  "                var audio = audios.FirstOrDefault(x => (String.Equals(x.Title' title' StringComparison.OrdinalIgnoreCase) && String.Equals(x.Artist' artist' StringComparison.OrdinalIgnoreCase))); " is 179.
Long Statement,Meridian.Services,DataService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\DataService.cs,GetNewsAudio,The length of the statement  "                var vkNews = await _vkontakte.News.Get(sourceIds != null ? string.Join("'"' sourceIds) : null' "post"' count' nextFrom); " is 120.
Long Statement,Meridian.Services,DataService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\DataService.cs,GetNewsAudio,The length of the statement  "                        if ((vkNewsEntry.Attachments == null || vkNewsEntry.Attachments.Count == 0) && (vkNewsEntry.CopyHistory != null && vkNewsEntry.CopyHistory.Count > 0)) " is 150.
Long Statement,Meridian.Services,DataService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\DataService.cs,GetNewsAudio,The length of the statement  "                        if ((vkNewsEntry.Attachments == null || vkNewsEntry.Attachments.Count == 0) && (vkNewsEntry.CopyHistory != null && vkNewsEntry.CopyHistory.Count > 0)) " is 150.
Long Statement,Meridian.Services,DataService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\DataService.cs,GetNewsAudio,The length of the statement  "                        var tracks = audioAttachments.Select(a => audios.FirstOrDefault(audio => audio.Id == a.Id.ToString())).Where(a => a != null).ToList(); " is 134.
Long Statement,Meridian.Services,DataService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\DataService.cs,GetWallAudio,The length of the statement  "                        if ((vkwallPost.Attachments == null || vkwallPost.Attachments.Count == 0) && (vkwallPost.CopyHistory != null && vkwallPost.CopyHistory.Count > 0)) " is 146.
Long Statement,Meridian.Services,DataService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\DataService.cs,GetWallAudio,The length of the statement  "                        if ((vkWallPost.Attachments == null || vkWallPost.Attachments.Count == 0) && (vkWallPost.CopyHistory != null && vkWallPost.CopyHistory.Count > 0)) " is 146.
Long Statement,Meridian.Services,DataService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\DataService.cs,GetWallAudio,The length of the statement  "                        var tracks = audioAttachments.Select(a => audios.FirstOrDefault(audio => audio.Id == a.Id.ToString())).Where(a => a != null).ToList(); " is 134.
Long Statement,Meridian.Services,DataService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\DataService.cs,GetFavoritesAudio,The length of the statement  "                        var tracks = audioAttachments.Select(a => audios.FirstOrDefault(audio => audio.Id == a.Id.ToString())).Where(a => a != null).ToList(); " is 134.
Long Statement,Meridian.Services,DataService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\DataService.cs,AddAudio,The length of the statement  "            var newId = await _vkontakte.Audio.Add(long.Parse(audio.Id)' audio.OwnerId' captchaSid: captchaSid' captchaKey: captchaKey); " is 124.
Long Statement,Meridian.Services,DataService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\DataService.cs,CopyAlbum,The length of the statement  "                        var newAudioId = await ViewModelLocator.Vkontakte.Audio.Add(long.Parse(track.Id)' track.OwnerId' captchaSid: captchaSid' captchaKey: captchaKey); " is 145.
Long Statement,Meridian.Services,UpdateService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\UpdateService.cs,CheckUpdates,The length of the statement  "                var manifestResponse = await httpClient.GetAsync(BASE_URL + (Settings.Instance.InstallDevUpdates ? MANIFEST_PATH_DEV : MANIFEST_PATH)); " is 135.
Long Statement,Meridian.Services,UpdateService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\UpdateService.cs,Unpack,The length of the statement  "                            using (var fileStreamOut = new FileStream(string.Format(@"{0}\{1}"' path' entry.Name)' FileMode.Create' FileAccess.Write)) " is 122.
Long Statement,Meridian.Services.Music,LocalMusicService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\Music\LocalMusicService.cs,ScanMusic,The length of the statement  "                                albums.Add(track.AlbumId' new AudioAlbum() { Id = track.AlbumId' Artist = track.Artist' ArtistId = !string.IsNullOrEmpty(track.Artist) ? Md5Helper.Md5(track.Artist.Trim().ToLower()) : null' Title = StringHelper.ToUtf8(audioFile.Tag.Album)' Year = (int)audioFile.Tag.Year }); " is 274.
Long Statement,Meridian.Services.Music,LocalMusicService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\Music\LocalMusicService.cs,ScanMusic,The length of the statement  "                                if (string.IsNullOrEmpty(albums[track.AlbumId].CoverPath) && audioFile.Tag.Pictures != null && audioFile.Tag.Pictures.Length > 0) " is 129.
Long Statement,Meridian.Services.Music,LocalMusicService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\Music\LocalMusicService.cs,ScanMusic,The length of the statement  "                    LoggingService.Log("Music scan finished. Found " + count + " tracks; " + albums.Count + " albums; " + artists.Count + " artists"); " is 130.
Long Statement,Meridian.Services.Music,LocalMusicService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\Music\LocalMusicService.cs,SearchTracks,The length of the statement  "                var result = tracks.Where(a => a.Title != null && a.Title.StartsWith(query' StringComparison.OrdinalIgnoreCase)).ToList(); " is 122.
Long Statement,Meridian.Services.Music,LocalMusicService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\Music\LocalMusicService.cs,SearchTracks,The length of the statement  "                result.AddRange(tracks.Where(a => a.Artist != null && a.Artist.StartsWith(query' StringComparison.OrdinalIgnoreCase)).ToList()); " is 128.
Long Statement,Meridian.Services.Music,LocalMusicService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\Music\LocalMusicService.cs,SearchTracks,The length of the statement  "                result.AddRange(tracks.Where(a => a.Album != null && a.Album.StartsWith(query' StringComparison.OrdinalIgnoreCase)).ToList()); " is 126.
Long Statement,Meridian.Services.Music,LocalMusicService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\Music\LocalMusicService.cs,SearchAlbums,The length of the statement  "                var result = albums.Where(a => a.Title != null && a.Title.StartsWith(query' StringComparison.OrdinalIgnoreCase)).ToList(); " is 122.
Long Statement,Meridian.Services.Music,LocalMusicService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\Music\LocalMusicService.cs,SearchAlbums,The length of the statement  "                result.AddRange(albums.Where(a => a.Artist != null && a.Artist.StartsWith(query' StringComparison.OrdinalIgnoreCase)).ToList()); " is 128.
Long Statement,Meridian.Services.Music,LocalMusicService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\Music\LocalMusicService.cs,SearchArtists,The length of the statement  "                var result = artists.Where(a => a.Title != null && a.Title.StartsWith(query' StringComparison.OrdinalIgnoreCase)).ToList(); " is 123.
Long Statement,Meridian.Services.Music.Repositories,LocalAlbumsRepository,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\Music\Repositories\LocalAlbumsRepository.cs,GetFromLibrary,The length of the statement  "                            if (string.IsNullOrEmpty(albums[track.AlbumId].CoverPath) && audioFile.Tag.Pictures != null && audioFile.Tag.Pictures.Length > 0) " is 129.
Long Statement,Meridian.Services.Music.Repositories,LocalAlbumsRepository,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\Music\Repositories\LocalAlbumsRepository.cs,AlbumsRepositoryUpdated,The length of the statement  "            LoggingService.Log(string.Format("Local albums database updated. Deleted: {0}' Changed: {1}' Added: {2}"' deleted.Count' changed.Count' added.Count)); " is 150.
Long Statement,Meridian.Services.Music.Repositories,LocalArtistsRepository,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\Music\Repositories\LocalArtistsRepository.cs,ArtistsRepositoryUpdated,The length of the statement  "            LoggingService.Log(string.Format("Local artists database updated. Deleted: {0}' Changed: {1}' Added: {2}"' deleted.Count' changed.Count' added.Count)); " is 151.
Long Statement,Meridian.Services.Music.Repositories,LocalTracksRepository,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\Music\Repositories\LocalTracksRepository.cs,TracksRepositoryUpdated,The length of the statement  "            LoggingService.Log(string.Format("Local tracks database updated. Deleted: {0}' Changed: {1}' Added: {2}"' deleted.Count' changed.Count' added.Count)); " is 150.
Long Statement,SQLite,SQLiteConnection,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\SQLite.cs,Execute,The length of the statement  "				Debug.WriteLine (string.Format ("Finished in {0} ms ({1:0.0} s total)"' _sw.ElapsedMilliseconds' _elapsedMilliseconds / 1000.0)); " is 129.
Long Statement,SQLite,SQLiteConnection,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\SQLite.cs,ExecuteScalar,The length of the statement  "				Debug.WriteLine (string.Format ("Finished in {0} ms ({1:0.0} s total)"' _sw.ElapsedMilliseconds' _elapsedMilliseconds / 1000.0)); " is 129.
Long Statement,SQLite,SQLiteConnection,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\SQLite.cs,DoSavePointExecute,The length of the statement  "			throw new ArgumentException ("savePoint is not valid' and should be the result of a call to SaveTransactionPoint."' "savePoint"); " is 129.
Long Statement,SQLite,SQLiteConnection,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\SQLite.cs,Update,The length of the statement  "				if (ex.Result == SQLite3.Result.Constraint && SQLite3.ExtendedErrCode (this.Handle) == SQLite3.ExtendedResult.ConstraintNotNull) { " is 130.
Long Statement,SQLite,Orm,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\SQLite.cs,SqlType,The length of the statement  "			if (clrType == typeof(Boolean) || clrType == typeof(Byte) || clrType == typeof(UInt16) || clrType == typeof(SByte) || clrType == typeof(Int16) || clrType == typeof(Int32)) { " is 173.
Long Statement,SQLite,PreparedSqlLiteInsertCommand,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\SQLite.cs,ExecuteNonQuery,The length of the statement  "			} else if (r == SQLite3.Result.Constraint && SQLite3.ExtendedErrCode (Connection.Handle) == SQLite3.ExtendedResult.ConstraintNotNull) { " is 135.
Long Statement,SQLite,TableQuery<T>,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\SQLite.cs,GenerateCommand,The length of the statement  "					var t = string.Join ("' "' _orderBys.Select (o => "\"" + o.ColumnName + "\"" + (o.Ascending ? "" : " desc")).ToArray ()); " is 121.
Long Statement,SQLite,TableQuery<T>,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\SQLite.cs,CompileExpr,The length of the statement  "					if (val != null && val is System.Collections.IEnumerable && !(val is string) && !(val is System.Collections.Generic.IEnumerable<byte>)) { " is 137.
Long Statement,Meridian.ViewModel.Local,LocalMusicViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Local\LocalMusicViewModel.cs,InitializeCommands,The length of the statement  "                    AudioService.SetCurrentPlaylist(SelectedArtistAlbums.Where(a => !a.Tracks.IsNullOrEmpty()).SelectMany(a => a.Tracks).ToList()); " is 127.
Long Statement,Meridian.ViewModel.Local,LocalMusicViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Local\LocalMusicViewModel.cs,LoadAlbums,The length of the statement  "                    AlbumGroups = albums.GroupBy(a => a.Artist).Select(g => new AudioArtist() { Title = g.Key' Albums = g.OrderBy(a => a.Year).ToList() }).OrderBy(a => a.Title).ToList(); " is 166.
Long Statement,Meridian.ViewModel.Main,MusicViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Main\MusicViewModel.cs,DragOver,The length of the statement  "                else if (dropInfo.TargetCollection == Albums && (dropInfo.TargetItem is VkAudioAlbum && ((VkAudioAlbum)dropInfo.TargetItem).Id >= -1)) " is 134.
Long Statement,Meridian.ViewModel.Main,NowPlayingViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Main\NowPlayingViewModel.cs,GetArtistImage,The length of the statement  "                var cachedImage = await CacheService.GetCachedImage("artists/" + CacheService.GetSafeFileName(audio.Artist + "_" + imageType + ".jpg")); " is 136.
Long Statement,Meridian.ViewModel.Main,NowPlayingViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Main\NowPlayingViewModel.cs,GetArtistImage,The length of the statement  "                    var lastUpdateTime = FileStorage.GetFileUpdateTime("artists/" + CacheService.GetSafeFileName(audio.Artist + "_" + imageType + ".jpg")); " is 135.
Long Statement,Meridian.ViewModel.Main,NowPlayingViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Main\NowPlayingViewModel.cs,GetArtistImage,The length of the statement  "                        cachedImage = await CacheService.CacheImage(imageUri.OriginalString' "artists/" + CacheService.GetSafeFileName(audio.Artist + "_" + imageType + ".jpg")); " is 153.
Long Statement,Meridian.ViewModel.Search,AlbumViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Search\AlbumViewModel.cs,LoadTracks,The length of the statement  "                    info = await DataService.GetAlbumInfo(Album.Mbid' Album.Name' Album.Artist' true' false); //иногда автокоррекция тупит и альбом не находится' пробуем без нее " is 157.
Long Statement,Meridian.ViewModel.Search,AlbumViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Search\AlbumViewModel.cs,Save,The length of the statement  "                            var newAudioId = await ViewModelLocator.Vkontakte.Audio.Add(long.Parse(vkAudio.Id)' vkAudio.OwnerId' captchaSid: captchaSid' captchaKey: captchaKey); " is 149.
Long Statement,Meridian.ViewModel.Search,ArtistViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Search\ArtistViewModel.cs,GetArtistImage,The length of the statement  "                var cachedImage = await CacheService.GetCachedImage("artists/" + CacheService.GetSafeFileName(Artist.Name + "_big.jpg")); " is 121.
Long Statement,Meridian.ViewModel.Search,ArtistViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Search\ArtistViewModel.cs,GetArtistImage,The length of the statement  "                    cachedImage = await CacheService.CacheImage(imageUri.OriginalString' "artists/" + CacheService.GetSafeFileName(Artist.Name + "_big.jpg")); " is 138.
Long Statement,Meridian.ViewModel.Search,SearchViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Search\SearchViewModel.cs,InitializeCommands,The length of the statement  "                        AudioService.SetCurrentPlaylist(SearchResults.Cast<AudioArtist>().Where(a => a.Albums != null).SelectMany(a => a.Albums).SelectMany(a => a.Tracks).ToList()); " is 157.
Long Statement,Meridian.ViewModel.Search,SearchViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Search\SearchViewModel.cs,SearchArtists,The length of the statement  "                    artists = artists.OrderByDescending(a => a.Name.ToLower() == q).ThenByDescending(a => a.Name.ToLower().StartsWith(q)).ToList(); " is 127.
Long Statement,Meridian.ViewModel.Flyouts,EditAudioViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Flyouts\EditAudioViewModel.cs,Close,The length of the statement  "            var flyout = Application.Current.MainWindow.GetVisualDescendents().FirstOrDefault(c => c is FlyoutControl) as FlyoutControl; " is 124.
Long Statement,Meridian.ViewModel.Flyouts,LoginLastFmViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Flyouts\LoginLastFmViewModel.cs,InitalizeCommands,The length of the statement  "                var flyout = Application.Current.MainWindow.GetVisualDescendents().FirstOrDefault(c => c is FlyoutControl) as FlyoutControl; " is 124.
Long Statement,Meridian.ViewModel.Flyouts,ShareViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Flyouts\ShareViewModel.cs,Close,The length of the statement  "            var flyout = Application.Current.MainWindow.GetVisualDescendents().FirstOrDefault(c => c is FlyoutControl) as FlyoutControl; " is 124.
Long Statement,Meridian.ViewModel.Flyouts,ShareViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Flyouts\ShareViewModel.cs,Share,The length of the statement  "                    var o = await ViewModelLocator.Vkontakte.Photos.UploadWallPhoto(server' Path.GetFileName(ImagePath)' File.OpenRead(ImagePath)); " is 127.
Long Statement,Meridian.ViewModel.Flyouts,ShareViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Flyouts\ShareViewModel.cs,Share,The length of the statement  "                        var photo = await ViewModelLocator.Vkontakte.Photos.SaveWallPhoto(o.Server' o.Photo' o.Hash' ShareToUser ? _selectedFriend.Id : 0' ShareToSociety ? _selectedSociety.Id : 0); " is 173.
Long Statement,Meridian.ViewModel,MainViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\MainViewModel.cs,InitializeCommands,The length of the statement  "            MaximizeWindowCommand = new RelayCommand(() => WindowState = IsWindowMaximized ? WindowState.Normal : WindowState.Maximized); " is 125.
Long Statement,Meridian.ViewModel,MainViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\MainViewModel.cs,InitializeCommands,The length of the statement  "                var frame = Application.Current.MainWindow.GetVisualDescendents().OfType<Frame>().FirstOrDefault(f => f.Name == "RootFrame"); " is 125.
Long Statement,Meridian.ViewModel,MainViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\MainViewModel.cs,UpdateCanGoBack,The length of the statement  "            var frame = Application.Current.MainWindow.GetVisualDescendents().OfType<Frame>().FirstOrDefault(f => f.Name == "RootFrame"); " is 125.
Long Statement,Meridian.ViewModel,MainViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\MainViewModel.cs,GetArtistImage,The length of the statement  "                var cachedImage = await CacheService.GetCachedImage("artists/" + CacheService.GetSafeFileName(CurrentAudio.Artist + "_" + imageType + ".jpg")); " is 143.
Long Statement,Meridian.ViewModel,MainViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\MainViewModel.cs,GetArtistImage,The length of the statement  "                        cachedImage = await CacheService.CacheImage(imageUri.OriginalString' "artists/" + CacheService.GetSafeFileName(CurrentAudio.Artist + "_" + imageType + ".jpg")); " is 160.
Long Statement,Meridian.ViewModel,SettingsViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\SettingsViewModel.cs,SaveSettings,The length of the statement  "                    Application.Current.Resources.MergedDictionaries[1].Source = new Uri(string.Format("/Resources/Themes/{0}.xaml"' SelectedTheme)' UriKind.Relative); " is 147.
Long Statement,Meridian.ViewModel,SettingsViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\SettingsViewModel.cs,SaveSettings,The length of the statement  "                    Application.Current.Resources.MergedDictionaries[0].Source = new Uri(string.Format("/Resources/Themes/Accents/{0}.xaml"' SelectedColorScheme.Name)' UriKind.Relative); " is 166.
Long Statement,Meridian.ViewModel,SettingsViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\SettingsViewModel.cs,SaveSettings,The length of the statement  "                    Application.Current.Resources.MergedDictionaries[0].Source = new Uri("/Resources/Themes/Accents/Blue.xaml"' UriKind.Relative); " is 126.
Long Statement,Meridian.ViewModel,SettingsViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\SettingsViewModel.cs,SaveSettings,The length of the statement  "                ((MainWindow)Application.Current.MainWindow).BackgroundArtControl.Effect = new BlurEffect() { RenderingBias = RenderingBias.Quality' Radius = 35 }; " is 147.
Long Statement,Meridian.ViewModel,SettingsViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\SettingsViewModel.cs,SaveSettings,The length of the statement  "                        if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.NextHotKeyModifier' Domain.Settings.Instance.NextHotKey)) " is 135.
Long Statement,Meridian.ViewModel,SettingsViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\SettingsViewModel.cs,SaveSettings,The length of the statement  "                            ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.NextHotKeyModifier' Domain.Settings.Instance.NextHotKey); " is 135.
Long Statement,Meridian.ViewModel,SettingsViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\SettingsViewModel.cs,SaveSettings,The length of the statement  "                        if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.PrevHotKeyModifier' Domain.Settings.Instance.PrevHotKey)) " is 135.
Long Statement,Meridian.ViewModel,SettingsViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\SettingsViewModel.cs,SaveSettings,The length of the statement  "                            ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.PrevHotKeyModifier' Domain.Settings.Instance.PrevHotKey); " is 135.
Long Statement,Meridian.ViewModel,SettingsViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\SettingsViewModel.cs,SaveSettings,The length of the statement  "                        if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.PlayPauseHotKeyModifier' Domain.Settings.Instance.PlayPauseHotKey)) " is 145.
Long Statement,Meridian.ViewModel,SettingsViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\SettingsViewModel.cs,SaveSettings,The length of the statement  "                            ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.PlayPauseHotKeyModifier' Domain.Settings.Instance.PlayPauseHotKey); " is 145.
Long Statement,Meridian.ViewModel,SettingsViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\SettingsViewModel.cs,SaveSettings,The length of the statement  "                        if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.LikeDislikeHotKeyModifier' Domain.Settings.Instance.LikeDislikeHotKey)) " is 149.
Long Statement,Meridian.ViewModel,SettingsViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\SettingsViewModel.cs,SaveSettings,The length of the statement  "                            ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.LikeDislikeHotKeyModifier' Domain.Settings.Instance.LikeDislikeHotKey); " is 149.
Long Statement,Meridian.ViewModel,SettingsViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\SettingsViewModel.cs,SaveSettings,The length of the statement  "                        if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.ShuffleHotKeyModifier' Domain.Settings.Instance.ShuffleHotKey)) " is 141.
Long Statement,Meridian.ViewModel,SettingsViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\SettingsViewModel.cs,SaveSettings,The length of the statement  "                            ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.ShuffleHotKeyModifier' Domain.Settings.Instance.ShuffleHotKey); " is 141.
Long Statement,Meridian.ViewModel,SettingsViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\SettingsViewModel.cs,SaveSettings,The length of the statement  "                        if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.RepeatHotKeyModifier' Domain.Settings.Instance.RepeatHotKey)) " is 139.
Long Statement,Meridian.ViewModel,SettingsViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\SettingsViewModel.cs,SaveSettings,The length of the statement  "                            ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.RepeatHotKeyModifier' Domain.Settings.Instance.RepeatHotKey); " is 139.
Long Statement,Meridian.ViewModel,SettingsViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\SettingsViewModel.cs,SaveSettings,The length of the statement  "                        if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.IncreaseVolumeHotKeyModifier' Domain.Settings.Instance.IncreaseVolumeHotKey)) " is 155.
Long Statement,Meridian.ViewModel,SettingsViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\SettingsViewModel.cs,SaveSettings,The length of the statement  "                            ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.IncreaseVolumeHotKeyModifier' Domain.Settings.Instance.IncreaseVolumeHotKey); " is 155.
Long Statement,Meridian.ViewModel,SettingsViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\SettingsViewModel.cs,SaveSettings,The length of the statement  "                        if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.DecreaseVolumeHotKeyModifier' Domain.Settings.Instance.DecreaseVolumeHotKey)) " is 155.
Long Statement,Meridian.ViewModel,SettingsViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\SettingsViewModel.cs,SaveSettings,The length of the statement  "                            ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.DecreaseVolumeHotKeyModifier' Domain.Settings.Instance.DecreaseVolumeHotKey); " is 155.
Long Statement,Meridian.ViewModel,SettingsViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\SettingsViewModel.cs,SaveSettings,The length of the statement  "                        if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.ShowHideHotKeyModifier' Domain.Settings.Instance.ShowHideHotKey)) " is 143.
Long Statement,Meridian.ViewModel,SettingsViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\SettingsViewModel.cs,SaveSettings,The length of the statement  "                            ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.ShowHideHotKeyModifier' Domain.Settings.Instance.ShowHideHotKey); " is 143.
Long Statement,Meridian.ViewModel,SettingsViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\SettingsViewModel.cs,SaveSettings,The length of the statement  "                        if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.FastForwardHotKeyModifier' Domain.Settings.Instance.FastForwardHotKey)) " is 149.
Long Statement,Meridian.ViewModel,SettingsViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\SettingsViewModel.cs,SaveSettings,The length of the statement  "                            ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.FastForwardHotKeyModifier' Domain.Settings.Instance.FastForwardHotKey); " is 149.
Long Statement,Meridian.ViewModel,SettingsViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\SettingsViewModel.cs,SaveSettings,The length of the statement  "                        if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.RewindHotKeyModifier' Domain.Settings.Instance.RewindHotKey)) " is 139.
Long Statement,Meridian.ViewModel,SettingsViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\SettingsViewModel.cs,SaveSettings,The length of the statement  "                            ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.RewindHotKeyModifier' Domain.Settings.Instance.RewindHotKey); " is 139.
Long Statement,Meridian.Flyouts,AddSocietyFlyout,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\AddSocietyFlyout.xaml.cs,Close,The length of the statement  "            var flyout = Application.Current.MainWindow.GetVisualDescendents().FirstOrDefault(c => c is FlyoutControl) as FlyoutControl; " is 124.
Long Statement,Meridian.Flyouts,AddSocietyFlyout,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\AddSocietyFlyout.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Meridian;component/view/flyouts/addsocietyflyout.xaml"' System.UriKind.Relative); " is 127.
Long Statement,Meridian.View.Compact,CompactLandscapeView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Compact\CompactLandscapeView.xaml.cs,CompactView_OnLoaded,The length of the statement  "            BackgroundArtControl.Effect = Domain.Settings.Instance.BlurBackground ? new BlurEffect() { RenderingBias = RenderingBias.Quality' Radius = 35 } : null; " is 151.
Long Statement,Meridian.View.Flyouts.Local,MusicScanView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\Local\MusicScanView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Meridian;component/view/flyouts/local/musicscanview.xaml"' System.UriKind.Relative); " is 130.
Long Statement,Meridian.View.Flyouts,WebValidationView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\WebValidationView.xaml.cs,EnableIE11Mode,The length of the statement  "            var browserEmulationKey = Registry.CurrentUser.OpenSubKey("Software\\Microsoft\\Internet Explorer\\Main\\FeatureControl\\FEATURE_BROWSER_EMULATION"' true); " is 155.
Long Statement,Meridian.View.Flyouts,WebValidationView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\WebValidationView.xaml.cs,EnableIE11Mode,The length of the statement  "                browserEmulationKey = Registry.CurrentUser.CreateSubKey("Software\\Microsoft\\Internet Explorer\\Main\\FeatureControl\\FEATURE_BROWSER_EMULATION"); " is 147.
Long Statement,Meridian.View.Flyouts,WebValidationView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\WebValidationView.xaml.cs,Close,The length of the statement  "            var flyout = Application.Current.MainWindow.GetVisualDescendents().FirstOrDefault(c => c is FlyoutControl) as FlyoutControl; " is 124.
Long Statement,Meridian.View.Flyouts,WebValidationView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\WebValidationView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Meridian;component/view/flyouts/webvalidationview.xaml"' System.UriKind.Relative); " is 128.
Long Statement,Meridian.View.Flyouts,WebValidationView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\WebValidationView.xaml.cs,Connect,The length of the statement  "            ((Meridian.View.Flyouts.WebValidationView)(target)).Loaded += new System.Windows.RoutedEventHandler(this.WebValidationView_OnLoaded); " is 133.
Long Statement,Meridian.View.Flyouts,CaptchaRequestView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\CaptchaRequestView.xaml.cs,Close,The length of the statement  "            var flyout = Application.Current.MainWindow.GetVisualDescendents().FirstOrDefault(c => c is FlyoutControl) as FlyoutControl; " is 124.
Long Statement,Meridian.View.Flyouts,CaptchaRequestView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\CaptchaRequestView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Meridian;component/view/flyouts/captcharequestview.xaml"' System.UriKind.Relative); " is 129.
Long Statement,Meridian.View.Flyouts,CaptchaRequestView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\CaptchaRequestView.xaml.cs,Connect,The length of the statement  "            ((Meridian.View.Flyouts.CaptchaRequestView)(target)).Loaded += new System.Windows.RoutedEventHandler(this.CaptchaRequestView_OnLoaded); " is 135.
Long Statement,Meridian.View.Flyouts,CommonErrorView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\CommonErrorView.xaml.cs,Close,The length of the statement  "            var flyout = Application.Current.MainWindow.GetVisualDescendents().FirstOrDefault(c => c is FlyoutControl) as FlyoutControl; " is 124.
Long Statement,Meridian.View.Flyouts,CommonErrorView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\CommonErrorView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Meridian;component/view/flyouts/commonerrorview.xaml"' System.UriKind.Relative); " is 126.
Long Statement,Meridian.View.Flyouts,CreateRadioStationView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\CreateRadioStationView.xaml.cs,Close,The length of the statement  "            var flyout = Application.Current.MainWindow.GetVisualDescendents().FirstOrDefault(c => c is FlyoutControl) as FlyoutControl; " is 124.
Long Statement,Meridian.View.Flyouts,CreateRadioStationView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\CreateRadioStationView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Meridian;component/view/flyouts/createradiostationview.xaml"' System.UriKind.Relative); " is 133.
Long Statement,Meridian.View.Flyouts,EditAlbumView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\EditAlbumView.xaml.cs,Close,The length of the statement  "            var flyout = Application.Current.MainWindow.GetVisualDescendents().FirstOrDefault(c => c is FlyoutControl) as FlyoutControl; " is 124.
Long Statement,Meridian.View.Flyouts,EditAlbumView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\EditAlbumView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Meridian;component/view/flyouts/editalbumview.xaml"' System.UriKind.Relative); " is 124.
Long Statement,Meridian.View.Flyouts,EditAudioView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\EditAudioView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Meridian;component/view/flyouts/editaudioview.xaml"' System.UriKind.Relative); " is 124.
Long Statement,Meridian.View.Flyouts,AddToAlbumView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\AddToAlbumView.xaml.cs,Close,The length of the statement  "            var flyout = Application.Current.MainWindow.GetVisualDescendents().FirstOrDefault(c => c is FlyoutControl) as FlyoutControl; " is 124.
Long Statement,Meridian.View.Flyouts,AddToAlbumView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\AddToAlbumView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Meridian;component/view/flyouts/addtoalbumview.xaml"' System.UriKind.Relative); " is 125.
Long Statement,Meridian.View.Flyouts,CommonMessageView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\CommonMessageView.xaml.cs,Close,The length of the statement  "            var flyout = Application.Current.MainWindow.GetVisualDescendents().FirstOrDefault(c => c is FlyoutControl) as FlyoutControl; " is 124.
Long Statement,Meridian.View.Flyouts,CommonMessageView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\CommonMessageView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Meridian;component/view/flyouts/commonmessageview.xaml"' System.UriKind.Relative); " is 128.
Long Statement,Meridian.View.Flyouts,LoginLastFmMessageView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\LoginLastFmMessageView.xaml.cs,Close,The length of the statement  "            var flyout = Application.Current.MainWindow.GetVisualDescendents().FirstOrDefault(c => c is FlyoutControl) as FlyoutControl; " is 124.
Long Statement,Meridian.View.Flyouts,LoginLastFmMessageView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\LoginLastFmMessageView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Meridian;component/view/flyouts/loginlastfmmessageview.xaml"' System.UriKind.Relative); " is 133.
Long Statement,Meridian.View.Flyouts,LoginLastFmView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\LoginLastFmView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Meridian;component/view/flyouts/loginlastfmview.xaml"' System.UriKind.Relative); " is 126.
Long Statement,Meridian.View.Flyouts,LyricsView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\LyricsView.xaml.cs,Close,The length of the statement  "            var flyout = Application.Current.MainWindow.GetVisualDescendents().FirstOrDefault(c => c is FlyoutControl) as FlyoutControl; " is 124.
Long Statement,Meridian.View.Flyouts,LyricsView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\LyricsView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Meridian;component/view/flyouts/lyricsview.xaml"' System.UriKind.Relative); " is 121.
Long Statement,Meridian.View.Flyouts,ShareView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\ShareView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Meridian;component/view/flyouts/shareview.xaml"' System.UriKind.Relative); " is 120.
Long Statement,Meridian.View.Flyouts,TellFriendsRequestView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\TellFriendsRequestView.xaml.cs,Close,The length of the statement  "            var flyout = Application.Current.MainWindow.GetVisualDescendents().FirstOrDefault(c => c is FlyoutControl) as FlyoutControl; " is 124.
Long Statement,Meridian.View.Flyouts,TellFriendsRequestView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\TellFriendsRequestView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Meridian;component/view/flyouts/tellfriendsrequestview.xaml"' System.UriKind.Relative); " is 133.
Long Statement,Meridian.View.Flyouts,TellResultView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\TellResultView.xaml.cs,Close,The length of the statement  "            var flyout = Application.Current.MainWindow.GetVisualDescendents().FirstOrDefault(c => c is FlyoutControl) as FlyoutControl; " is 124.
Long Statement,Meridian.View.Flyouts,TellResultView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\TellResultView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Meridian;component/view/flyouts/tellresultview.xaml"' System.UriKind.Relative); " is 125.
Long Statement,Meridian.View.Local,LocalAlbumView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Local\LocalAlbumView.xaml.cs,LocalAlbumView_OnLoaded,The length of the statement  "            BackgroundArtControl.Effect = Domain.Settings.Instance.BlurBackground ? new BlurEffect() { RenderingBias = RenderingBias.Quality' Radius = 80 } : null; " is 151.
Long Statement,Meridian.View.Search,ArtistAlbumsView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Search\ArtistAlbumsView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Meridian;component/view/search/artistalbumsview.xaml"' System.UriKind.Relative); " is 126.
Long Statement,Meridian.View.People,FriendsView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\People\FriendsView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Meridian;component/view/people/friendsview.xaml"' System.UriKind.Relative); " is 121.
Long Statement,Meridian.View.People,SocietiesView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\People\SocietiesView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Meridian;component/view/people/societiesview.xaml"' System.UriKind.Relative); " is 123.
Long Statement,Meridian.View.Settings,SettingsAboutView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Settings\SettingsAboutView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Meridian;component/view/settings/settingsaboutview.xaml"' System.UriKind.Relative); " is 129.
Long Statement,Meridian.View.Settings,SettingsAboutView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Settings\SettingsAboutView.xaml.cs,Connect,The length of the statement  "            this.EchonestLink.MouseLeftButtonUp += new System.Windows.Input.MouseButtonEventHandler(this.EchonestLink_OnMouseLeftButtonUp); " is 127.
Long Statement,Meridian.View.Settings,SettingsAboutView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Settings\SettingsAboutView.xaml.cs,Connect,The length of the statement  "            this.LastFmLink.MouseLeftButtonUp += new System.Windows.Input.MouseButtonEventHandler(this.LastFmLink_OnMouseLeftButtonUp); " is 123.
Long Statement,Meridian.View.Settings,SettingsAccountsView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Settings\SettingsAccountsView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Meridian;component/view/settings/settingsaccountsview.xaml"' System.UriKind.Relative); " is 132.
Long Statement,Meridian.View.Settings,SettingsHotkeysView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Settings\SettingsHotkeysView.xaml.cs,HotkeyTextBoxOnPreviewKeyDown,The length of the statement  "            if (e.Key == Key.System || e.Key == Key.LeftAlt || e.Key == Key.LeftCtrl || e.Key == Key.LeftShift || e.Key == Key.RightAlt || e.Key == Key.RightCtrl || e.Key == Key.RightShift " is 176.
Long Statement,Meridian.View.Settings,SettingsHotkeysView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Settings\SettingsHotkeysView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Meridian;component/view/settings/settingshotkeysview.xaml"' System.UriKind.Relative); " is 131.
Long Statement,Meridian.View.Settings,SettingsHotkeysView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Settings\SettingsHotkeysView.xaml.cs,Connect,The length of the statement  "            ((Meridian.View.Settings.SettingsHotkeysView)(target)).DataContextChanged += new System.Windows.DependencyPropertyChangedEventHandler(this.SettingsHotkeysView_OnDataContextChanged); " is 181.
Long Statement,Meridian.View.Settings,SettingsHotkeysView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Settings\SettingsHotkeysView.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.TextBox)(target)).PreviewKeyDown += new System.Windows.Input.KeyEventHandler(this.HotkeyTextBoxOnPreviewKeyDown); " is 139.
Long Statement,Meridian.View.Settings,SettingsUIView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Settings\SettingsUIView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Meridian;component/view/settings/settingsuiview.xaml"' System.UriKind.Relative); " is 126.
Long Statement,Meridian.View.Settings,SettingsRemotePlayView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Settings\SettingsRemotePlayView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Meridian;component/view/settings/settingsremoteplayview.xaml"' System.UriKind.Relative); " is 134.
Long Statement,Meridian.View.Settings,SettingsUpdatesView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Settings\SettingsUpdatesView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Meridian;component/view/settings/settingsupdatesview.xaml"' System.UriKind.Relative); " is 131.
Long Statement,Meridian.View,TrackNotifcationView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\TrackNotifcationView.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Meridian;component/view/tracknotifcationview.xaml"' System.UriKind.Relative); " is 123.
Long Statement,Meridian.View,TrackNotifcationView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\TrackNotifcationView.xaml.cs,Connect,The length of the statement  "            this.rootElement.MouseLeftButtonUp += new System.Windows.Input.MouseButtonEventHandler(this.TrackNotifcationView_OnMouseLeftButtonUp); " is 134.
Long Statement,Meridian,App,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\App.xaml.cs,App_OnStartup,The length of the statement  "            LoggingService.Log("Meridian v" + Assembly.GetExecutingAssembly().GetName().Version + " started. OS: " + Environment.OSVersion); " is 128.
Long Statement,Meridian,App,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\App.xaml.cs,App_OnStartup,The length of the statement  "                    Resources.MergedDictionaries[0].Source = new Uri(string.Format("/Resources/Themes/Accents/{0}.xaml"' Settings.Instance.AccentColor)' UriKind.Relative); " is 151.
Long Statement,Meridian,App,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\App.xaml.cs,App_OnStartup,The length of the statement  "                    Resources.MergedDictionaries[1].Source = new Uri(string.Format("/Resources/Themes/{0}.xaml"' Settings.Instance.Theme)' UriKind.Relative); " is 137.
Long Statement,Meridian,MainWindow,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\MainWindow.xaml.cs,MainWindow_OnLoaded,The length of the statement  "            BackgroundArtControl.Effect = Settings.Instance.BlurBackground ? new BlurEffect() { RenderingBias = RenderingBias.Quality' Radius = 35} : null; " is 143.
Long Statement,XamlGeneratedNamespace,GeneratedInternalTypeHelper,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\obj\Debug\GeneratedInternalTypeHelper.g.cs,CreateInstance,The length of the statement  "            return System.Activator.CreateInstance(type' ((System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)  " is 128.
Complex Conditional,Meridian.Services,DataService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\DataService.cs,GetNewsAudio,The conditional expression  "(vkNewsEntry.Attachments == null || vkNewsEntry.Attachments.Count == 0) && (vkNewsEntry.CopyHistory != null && vkNewsEntry.CopyHistory.Count > 0)"  is complex.
Complex Conditional,Meridian.Services,DataService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\DataService.cs,GetNewsAudio,The conditional expression  "(vkNewsEntry.Attachments == null || vkNewsEntry.Attachments.Count == 0) && (vkNewsEntry.CopyHistory != null && vkNewsEntry.CopyHistory.Count > 0)"  is complex.
Complex Conditional,Meridian.Services,DataService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\DataService.cs,GetWallAudio,The conditional expression  "(vkwallPost.Attachments == null || vkwallPost.Attachments.Count == 0) && (vkwallPost.CopyHistory != null && vkwallPost.CopyHistory.Count > 0)"  is complex.
Complex Conditional,Meridian.Services,DataService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\DataService.cs,GetWallAudio,The conditional expression  "(vkWallPost.Attachments == null || vkWallPost.Attachments.Count == 0) && (vkWallPost.CopyHistory != null && vkWallPost.CopyHistory.Count > 0)"  is complex.
Complex Conditional,SQLite,Column,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\SQLite.cs,Column,The conditional expression  "!Indices.Any()                      && !IsPK                      && ((createFlags & CreateFlags.ImplicitIndex) == CreateFlags.ImplicitIndex)                      && Name.EndsWith (Orm.ImplicitIndexSuffix' StringComparison.OrdinalIgnoreCase)"  is complex.
Complex Conditional,SQLite,Orm,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\SQLite.cs,SqlType,The conditional expression  "clrType == typeof(Boolean) || clrType == typeof(Byte) || clrType == typeof(UInt16) || clrType == typeof(SByte) || clrType == typeof(Int16) || clrType == typeof(Int32)"  is complex.
Complex Conditional,SQLite,SQLiteCommand,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\SQLite.cs,BindParameter,The conditional expression  "value is Byte || value is UInt16 || value is SByte || value is Int16"  is complex.
Complex Conditional,SQLite,TableQuery<T>,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\SQLite.cs,CompileExpr,The conditional expression  "val != null && val is System.Collections.IEnumerable && !(val is string) && !(val is System.Collections.Generic.IEnumerable<byte>)"  is complex.
Complex Conditional,Meridian.View.Settings,SettingsHotkeysView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Settings\SettingsHotkeysView.xaml.cs,HotkeyTextBoxOnPreviewKeyDown,The conditional expression  "e.Key == Key.System || e.Key == Key.LeftAlt || e.Key == Key.LeftCtrl || e.Key == Key.LeftShift || e.Key == Key.RightAlt || e.Key == Key.RightCtrl || e.Key == Key.RightShift                  || e.Key == Key.Escape"  is complex.
Empty Catch Block,Meridian.Helpers,FilesHelper,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Helpers\FilesHelper.cs,GetDirectoryFiles,The method has an empty catch block.
Empty Catch Block,Meridian.Helpers,FilesHelper,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Helpers\FilesHelper.cs,GetDirectoryFiles,The method has an empty catch block.
Empty Catch Block,Meridian.Helpers,HotKey,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Helpers\HotKeyManager.cs,Dispose,The method has an empty catch block.
Empty Catch Block,Meridian.RemotePlay,SimpleWebServer,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\RemotePlay\SimpleWebServer.cs,Listen,The method has an empty catch block.
Magic Number,Meridian.Controls,ContentTransitionControl,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\ContentTransitionControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.LayoutRoot = ((System.Windows.Controls.Grid)(target));              return;              case 2:              this.Control1 = ((System.Windows.Controls.ContentControl)(target));              return;              case 3:              this.Control2 = ((System.Windows.Controls.ContentControl)(target));              return;              }
Magic Number,Meridian.Controls,ContentTransitionControl,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\ContentTransitionControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.LayoutRoot = ((System.Windows.Controls.Grid)(target));              return;              case 2:              this.Control1 = ((System.Windows.Controls.ContentControl)(target));              return;              case 3:              this.Control2 = ((System.Windows.Controls.ContentControl)(target));              return;              }
Magic Number,Meridian.Controls,FlyoutControl,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\FlyoutControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.rootElement = ((Meridian.Controls.FlyoutControl)(target));              return;              case 2:                            #line 11 "..\..\..\Controls\FlyoutControl.xaml"              ((System.Windows.Media.Animation.Storyboard)(target)).Completed += new System.EventHandler(this.CloseAnim_OnCompleted);                            #line default              #line hidden              return;              case 3:              this.content = ((System.Windows.Controls.ContentControl)(target));              return;              }
Magic Number,Meridian.Controls,FlyoutControl,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\FlyoutControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.rootElement = ((Meridian.Controls.FlyoutControl)(target));              return;              case 2:                            #line 11 "..\..\..\Controls\FlyoutControl.xaml"              ((System.Windows.Media.Animation.Storyboard)(target)).Completed += new System.EventHandler(this.CloseAnim_OnCompleted);                            #line default              #line hidden              return;              case 3:              this.content = ((System.Windows.Controls.ContentControl)(target));              return;              }
Magic Number,Meridian.Controls,ImageTransitionControl,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\ImageTransitionControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.rootElement = ((Meridian.Controls.ImageTransitionControl)(target));              return;              case 2:              this.BackgroundRectangle = ((System.Windows.Shapes.Rectangle)(target));              return;              case 3:              this.LayoutRoot = ((System.Windows.Controls.Grid)(target));              return;              case 4:              this.Image1 = ((System.Windows.Controls.Image)(target));              return;              case 5:              this.Image2 = ((System.Windows.Controls.Image)(target));              return;              }
Magic Number,Meridian.Controls,ImageTransitionControl,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\ImageTransitionControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.rootElement = ((Meridian.Controls.ImageTransitionControl)(target));              return;              case 2:              this.BackgroundRectangle = ((System.Windows.Shapes.Rectangle)(target));              return;              case 3:              this.LayoutRoot = ((System.Windows.Controls.Grid)(target));              return;              case 4:              this.Image1 = ((System.Windows.Controls.Image)(target));              return;              case 5:              this.Image2 = ((System.Windows.Controls.Image)(target));              return;              }
Magic Number,Meridian.Controls,ImageTransitionControl,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\ImageTransitionControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.rootElement = ((Meridian.Controls.ImageTransitionControl)(target));              return;              case 2:              this.BackgroundRectangle = ((System.Windows.Shapes.Rectangle)(target));              return;              case 3:              this.LayoutRoot = ((System.Windows.Controls.Grid)(target));              return;              case 4:              this.Image1 = ((System.Windows.Controls.Image)(target));              return;              case 5:              this.Image2 = ((System.Windows.Controls.Image)(target));              return;              }
Magic Number,Meridian.Controls,ImageTransitionControl,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\ImageTransitionControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.rootElement = ((Meridian.Controls.ImageTransitionControl)(target));              return;              case 2:              this.BackgroundRectangle = ((System.Windows.Shapes.Rectangle)(target));              return;              case 3:              this.LayoutRoot = ((System.Windows.Controls.Grid)(target));              return;              case 4:              this.Image1 = ((System.Windows.Controls.Image)(target));              return;              case 5:              this.Image2 = ((System.Windows.Controls.Image)(target));              return;              }
Magic Number,Meridian.Controls,NotificationControl,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\NotificationControl.xaml.cs,ProgressChanged,The following statement contains a magic number: (int)e.NewValue >= 100
Magic Number,Meridian.Controls,NotificationControl,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\NotificationControl.xaml.cs,NotificationControl,The following statement contains a magic number: _timer.Interval = TimeSpan.FromSeconds(3);
Magic Number,Meridian.Controls,NotificationControl,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\NotificationControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.rootElement = ((Meridian.Controls.NotificationControl)(target));              return;              case 2:                            #line 10 "..\..\..\Controls\NotificationControl.xaml"              ((System.Windows.Media.Animation.Storyboard)(target)).Completed += new System.EventHandler(this.SwitchInAnim_OnCompleted);                            #line default              #line hidden              return;              case 3:                            #line 28 "..\..\..\Controls\NotificationControl.xaml"              ((System.Windows.Media.Animation.Storyboard)(target)).Completed += new System.EventHandler(this.SwitchOutAnim_OnCompleted);                            #line default              #line hidden              return;              case 4:              this.ProgressBar = ((System.Windows.Controls.ProgressBar)(target));              return;              case 5:              this.StatusTextBlock = ((System.Windows.Controls.TextBlock)(target));              return;              case 6:              this.StatusTextBlockRenderTransform = ((System.Windows.Media.TranslateTransform)(target));              return;              }
Magic Number,Meridian.Controls,NotificationControl,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\NotificationControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.rootElement = ((Meridian.Controls.NotificationControl)(target));              return;              case 2:                            #line 10 "..\..\..\Controls\NotificationControl.xaml"              ((System.Windows.Media.Animation.Storyboard)(target)).Completed += new System.EventHandler(this.SwitchInAnim_OnCompleted);                            #line default              #line hidden              return;              case 3:                            #line 28 "..\..\..\Controls\NotificationControl.xaml"              ((System.Windows.Media.Animation.Storyboard)(target)).Completed += new System.EventHandler(this.SwitchOutAnim_OnCompleted);                            #line default              #line hidden              return;              case 4:              this.ProgressBar = ((System.Windows.Controls.ProgressBar)(target));              return;              case 5:              this.StatusTextBlock = ((System.Windows.Controls.TextBlock)(target));              return;              case 6:              this.StatusTextBlockRenderTransform = ((System.Windows.Media.TranslateTransform)(target));              return;              }
Magic Number,Meridian.Controls,NotificationControl,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\NotificationControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.rootElement = ((Meridian.Controls.NotificationControl)(target));              return;              case 2:                            #line 10 "..\..\..\Controls\NotificationControl.xaml"              ((System.Windows.Media.Animation.Storyboard)(target)).Completed += new System.EventHandler(this.SwitchInAnim_OnCompleted);                            #line default              #line hidden              return;              case 3:                            #line 28 "..\..\..\Controls\NotificationControl.xaml"              ((System.Windows.Media.Animation.Storyboard)(target)).Completed += new System.EventHandler(this.SwitchOutAnim_OnCompleted);                            #line default              #line hidden              return;              case 4:              this.ProgressBar = ((System.Windows.Controls.ProgressBar)(target));              return;              case 5:              this.StatusTextBlock = ((System.Windows.Controls.TextBlock)(target));              return;              case 6:              this.StatusTextBlockRenderTransform = ((System.Windows.Media.TranslateTransform)(target));              return;              }
Magic Number,Meridian.Controls,NotificationControl,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\NotificationControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.rootElement = ((Meridian.Controls.NotificationControl)(target));              return;              case 2:                            #line 10 "..\..\..\Controls\NotificationControl.xaml"              ((System.Windows.Media.Animation.Storyboard)(target)).Completed += new System.EventHandler(this.SwitchInAnim_OnCompleted);                            #line default              #line hidden              return;              case 3:                            #line 28 "..\..\..\Controls\NotificationControl.xaml"              ((System.Windows.Media.Animation.Storyboard)(target)).Completed += new System.EventHandler(this.SwitchOutAnim_OnCompleted);                            #line default              #line hidden              return;              case 4:              this.ProgressBar = ((System.Windows.Controls.ProgressBar)(target));              return;              case 5:              this.StatusTextBlock = ((System.Windows.Controls.TextBlock)(target));              return;              case 6:              this.StatusTextBlockRenderTransform = ((System.Windows.Media.TranslateTransform)(target));              return;              }
Magic Number,Meridian.Controls,NotificationControl,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\NotificationControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.rootElement = ((Meridian.Controls.NotificationControl)(target));              return;              case 2:                            #line 10 "..\..\..\Controls\NotificationControl.xaml"              ((System.Windows.Media.Animation.Storyboard)(target)).Completed += new System.EventHandler(this.SwitchInAnim_OnCompleted);                            #line default              #line hidden              return;              case 3:                            #line 28 "..\..\..\Controls\NotificationControl.xaml"              ((System.Windows.Media.Animation.Storyboard)(target)).Completed += new System.EventHandler(this.SwitchOutAnim_OnCompleted);                            #line default              #line hidden              return;              case 4:              this.ProgressBar = ((System.Windows.Controls.ProgressBar)(target));              return;              case 5:              this.StatusTextBlock = ((System.Windows.Controls.TextBlock)(target));              return;              case 6:              this.StatusTextBlockRenderTransform = ((System.Windows.Media.TranslateTransform)(target));              return;              }
Magic Number,Meridian.Controls,PlayerControl,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\PlayerControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.CurrentAudioMenuPopup = ((System.Windows.Controls.Primitives.Popup)(target));              return;              case 2:                            #line 59 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 3:                            #line 61 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 4:                            #line 63 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 5:                            #line 65 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 6:                            #line 67 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 7:                            #line 70 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 8:                            #line 72 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 9:                            #line 74 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 10:                            #line 77 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 11:                            #line 79 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 12:                            #line 81 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 13:              this.CurrentAudioMenuButton = ((System.Windows.Controls.Primitives.ToggleButton)(target));              return;              }
Magic Number,Meridian.Controls,PlayerControl,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\PlayerControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.CurrentAudioMenuPopup = ((System.Windows.Controls.Primitives.Popup)(target));              return;              case 2:                            #line 59 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 3:                            #line 61 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 4:                            #line 63 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 5:                            #line 65 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 6:                            #line 67 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 7:                            #line 70 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 8:                            #line 72 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 9:                            #line 74 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 10:                            #line 77 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 11:                            #line 79 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 12:                            #line 81 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 13:              this.CurrentAudioMenuButton = ((System.Windows.Controls.Primitives.ToggleButton)(target));              return;              }
Magic Number,Meridian.Controls,PlayerControl,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\PlayerControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.CurrentAudioMenuPopup = ((System.Windows.Controls.Primitives.Popup)(target));              return;              case 2:                            #line 59 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 3:                            #line 61 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 4:                            #line 63 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 5:                            #line 65 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 6:                            #line 67 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 7:                            #line 70 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 8:                            #line 72 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 9:                            #line 74 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 10:                            #line 77 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 11:                            #line 79 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 12:                            #line 81 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 13:              this.CurrentAudioMenuButton = ((System.Windows.Controls.Primitives.ToggleButton)(target));              return;              }
Magic Number,Meridian.Controls,PlayerControl,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\PlayerControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.CurrentAudioMenuPopup = ((System.Windows.Controls.Primitives.Popup)(target));              return;              case 2:                            #line 59 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 3:                            #line 61 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 4:                            #line 63 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 5:                            #line 65 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 6:                            #line 67 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 7:                            #line 70 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 8:                            #line 72 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 9:                            #line 74 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 10:                            #line 77 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 11:                            #line 79 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 12:                            #line 81 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 13:              this.CurrentAudioMenuButton = ((System.Windows.Controls.Primitives.ToggleButton)(target));              return;              }
Magic Number,Meridian.Controls,PlayerControl,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\PlayerControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.CurrentAudioMenuPopup = ((System.Windows.Controls.Primitives.Popup)(target));              return;              case 2:                            #line 59 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 3:                            #line 61 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 4:                            #line 63 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 5:                            #line 65 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 6:                            #line 67 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 7:                            #line 70 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 8:                            #line 72 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 9:                            #line 74 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 10:                            #line 77 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 11:                            #line 79 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 12:                            #line 81 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 13:              this.CurrentAudioMenuButton = ((System.Windows.Controls.Primitives.ToggleButton)(target));              return;              }
Magic Number,Meridian.Controls,PlayerControl,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\PlayerControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.CurrentAudioMenuPopup = ((System.Windows.Controls.Primitives.Popup)(target));              return;              case 2:                            #line 59 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 3:                            #line 61 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 4:                            #line 63 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 5:                            #line 65 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 6:                            #line 67 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 7:                            #line 70 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 8:                            #line 72 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 9:                            #line 74 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 10:                            #line 77 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 11:                            #line 79 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 12:                            #line 81 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 13:              this.CurrentAudioMenuButton = ((System.Windows.Controls.Primitives.ToggleButton)(target));              return;              }
Magic Number,Meridian.Controls,PlayerControl,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\PlayerControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.CurrentAudioMenuPopup = ((System.Windows.Controls.Primitives.Popup)(target));              return;              case 2:                            #line 59 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 3:                            #line 61 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 4:                            #line 63 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 5:                            #line 65 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 6:                            #line 67 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 7:                            #line 70 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 8:                            #line 72 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 9:                            #line 74 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 10:                            #line 77 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 11:                            #line 79 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 12:                            #line 81 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 13:              this.CurrentAudioMenuButton = ((System.Windows.Controls.Primitives.ToggleButton)(target));              return;              }
Magic Number,Meridian.Controls,PlayerControl,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\PlayerControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.CurrentAudioMenuPopup = ((System.Windows.Controls.Primitives.Popup)(target));              return;              case 2:                            #line 59 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 3:                            #line 61 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 4:                            #line 63 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 5:                            #line 65 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 6:                            #line 67 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 7:                            #line 70 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 8:                            #line 72 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 9:                            #line 74 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 10:                            #line 77 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 11:                            #line 79 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 12:                            #line 81 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 13:              this.CurrentAudioMenuButton = ((System.Windows.Controls.Primitives.ToggleButton)(target));              return;              }
Magic Number,Meridian.Controls,PlayerControl,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\PlayerControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.CurrentAudioMenuPopup = ((System.Windows.Controls.Primitives.Popup)(target));              return;              case 2:                            #line 59 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 3:                            #line 61 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 4:                            #line 63 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 5:                            #line 65 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 6:                            #line 67 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 7:                            #line 70 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 8:                            #line 72 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 9:                            #line 74 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 10:                            #line 77 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 11:                            #line 79 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 12:                            #line 81 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 13:              this.CurrentAudioMenuButton = ((System.Windows.Controls.Primitives.ToggleButton)(target));              return;              }
Magic Number,Meridian.Controls,PlayerControl,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\PlayerControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.CurrentAudioMenuPopup = ((System.Windows.Controls.Primitives.Popup)(target));              return;              case 2:                            #line 59 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 3:                            #line 61 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 4:                            #line 63 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 5:                            #line 65 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 6:                            #line 67 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 7:                            #line 70 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 8:                            #line 72 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 9:                            #line 74 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 10:                            #line 77 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 11:                            #line 79 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 12:                            #line 81 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 13:              this.CurrentAudioMenuButton = ((System.Windows.Controls.Primitives.ToggleButton)(target));              return;              }
Magic Number,Meridian.Controls,PlayerControl,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\PlayerControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.CurrentAudioMenuPopup = ((System.Windows.Controls.Primitives.Popup)(target));              return;              case 2:                            #line 59 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 3:                            #line 61 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 4:                            #line 63 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 5:                            #line 65 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 6:                            #line 67 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 7:                            #line 70 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 8:                            #line 72 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 9:                            #line 74 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 10:                            #line 77 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 11:                            #line 79 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 12:                            #line 81 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 13:              this.CurrentAudioMenuButton = ((System.Windows.Controls.Primitives.ToggleButton)(target));              return;              }
Magic Number,Meridian.Controls,PlayerControl,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\PlayerControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.CurrentAudioMenuPopup = ((System.Windows.Controls.Primitives.Popup)(target));              return;              case 2:                            #line 59 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 3:                            #line 61 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 4:                            #line 63 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 5:                            #line 65 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 6:                            #line 67 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 7:                            #line 70 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 8:                            #line 72 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 9:                            #line 74 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 10:                            #line 77 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 11:                            #line 79 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 12:                            #line 81 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 13:              this.CurrentAudioMenuButton = ((System.Windows.Controls.Primitives.ToggleButton)(target));              return;              }
Magic Number,Meridian.Controls,ShareBarControl,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\ShareBarControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.rootElement = ((Meridian.Controls.ShareBarControl)(target));              return;              case 2:              this.rootGrid = ((System.Windows.Controls.Grid)(target));              return;              }
Magic Number,Meridian.Controls,VirtualizingWrapPanel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\VirtualizingWrapPanel.cs,MeasureOverride,The following statement contains a magic number: currentX + ItemWidth * 2 >= availableSize.Width
Magic Number,Meridian.Controls,VirtualizingWrapPanel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\VirtualizingWrapPanel.cs,MeasureOverride,The following statement contains a magic number: var desiredSize = new Size(double.IsInfinity(availableSize.Width) ? 100 : availableSize.Width'                                         double.IsInfinity(availableSize.Height) ? 100 : availableSize.Height);
Magic Number,Meridian.Controls,VirtualizingWrapPanel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\VirtualizingWrapPanel.cs,MeasureOverride,The following statement contains a magic number: var desiredSize = new Size(double.IsInfinity(availableSize.Width) ? 100 : availableSize.Width'                                         double.IsInfinity(availableSize.Height) ? 100 : availableSize.Height);
Magic Number,Meridian.Controls,VirtualizingWrapPanel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\VirtualizingWrapPanel.cs,GetLayoutInfo,The following statement contains a magic number: var lastRealizedIndex = Math.Min(firstRealizedIndex + completeRealizedLines * extentInfo.ItemsPerLine + 2' _itemsControl.Items.Count - 1);
Magic Number,Meridian.Controls,VolumeControl,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\VolumeControl.xaml.cs,VolumeButton_OnClick,The following statement contains a magic number: Volume = 100;
Magic Number,Meridian.Controls,VolumeControl,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\VolumeControl.xaml.cs,VolumeControl_OnMouseWheel,The following statement contains a magic number: Volume -= 5;
Magic Number,Meridian.Controls,VolumeControl,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\VolumeControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.rootElement = ((Meridian.Controls.VolumeControl)(target));                            #line 9 "..\..\..\Controls\VolumeControl.xaml"              this.rootElement.MouseWheel += new System.Windows.Input.MouseWheelEventHandler(this.VolumeControl_OnMouseWheel);                            #line default              #line hidden              return;              case 2:              this.MinVolumeButton = ((System.Windows.Controls.Button)(target));                            #line 16 "..\..\..\Controls\VolumeControl.xaml"              this.MinVolumeButton.Click += new System.Windows.RoutedEventHandler(this.MuteButton_OnClick);                            #line default              #line hidden              return;              case 3:              this.MaxVolumeButton = ((System.Windows.Controls.Button)(target));                            #line 20 "..\..\..\Controls\VolumeControl.xaml"              this.MaxVolumeButton.Click += new System.Windows.RoutedEventHandler(this.VolumeButton_OnClick);                            #line default              #line hidden              return;              }
Magic Number,Meridian.Controls,VolumeControl,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\VolumeControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.rootElement = ((Meridian.Controls.VolumeControl)(target));                            #line 9 "..\..\..\Controls\VolumeControl.xaml"              this.rootElement.MouseWheel += new System.Windows.Input.MouseWheelEventHandler(this.VolumeControl_OnMouseWheel);                            #line default              #line hidden              return;              case 2:              this.MinVolumeButton = ((System.Windows.Controls.Button)(target));                            #line 16 "..\..\..\Controls\VolumeControl.xaml"              this.MinVolumeButton.Click += new System.Windows.RoutedEventHandler(this.MuteButton_OnClick);                            #line default              #line hidden              return;              case 3:              this.MaxVolumeButton = ((System.Windows.Controls.Button)(target));                            #line 20 "..\..\..\Controls\VolumeControl.xaml"              this.MaxVolumeButton.Click += new System.Windows.RoutedEventHandler(this.VolumeButton_OnClick);                            #line default              #line hidden              return;              }
Magic Number,Meridian.Converters,AlbumListItemContainerStyleSelector,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Converters\AlbumListItemContainerSelector.cs,SelectStyle,The following statement contains a magic number: switch ((int)album.Id)                  {                      case -1:                      case -100:                      case -101:                          return DefaultItemStyle;                        case int.MinValue:                          return SeparatorStyle;                        default:                          return ItemStyle;                  }
Magic Number,Meridian.Converters,AlbumListItemContainerStyleSelector,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Converters\AlbumListItemContainerSelector.cs,SelectStyle,The following statement contains a magic number: switch ((int)album.Id)                  {                      case -1:                      case -100:                      case -101:                          return DefaultItemStyle;                        case int.MinValue:                          return SeparatorStyle;                        default:                          return ItemStyle;                  }
Magic Number,Meridian.Converters,SearchListBoxStyleSelector,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Converters\SearchResultTemplateSelector.cs,Convert,The following statement contains a magic number: switch (index)              {                  case 0:                      return TracksStyle;                  case 1:                      return AlbumsStyle;                  case 2:                      return ArtistsStyle;                  case 3:                      return TracksStyle;                  case 4:                      return AlbumsStyle;                  case 5:                      return LocalArtistsStyle;              }
Magic Number,Meridian.Converters,SearchListBoxStyleSelector,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Converters\SearchResultTemplateSelector.cs,Convert,The following statement contains a magic number: switch (index)              {                  case 0:                      return TracksStyle;                  case 1:                      return AlbumsStyle;                  case 2:                      return ArtistsStyle;                  case 3:                      return TracksStyle;                  case 4:                      return AlbumsStyle;                  case 5:                      return LocalArtistsStyle;              }
Magic Number,Meridian.Converters,SearchListBoxStyleSelector,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Converters\SearchResultTemplateSelector.cs,Convert,The following statement contains a magic number: switch (index)              {                  case 0:                      return TracksStyle;                  case 1:                      return AlbumsStyle;                  case 2:                      return ArtistsStyle;                  case 3:                      return TracksStyle;                  case 4:                      return AlbumsStyle;                  case 5:                      return LocalArtistsStyle;              }
Magic Number,Meridian.Converters,SearchListBoxStyleSelector,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Converters\SearchResultTemplateSelector.cs,Convert,The following statement contains a magic number: switch (index)              {                  case 0:                      return TracksStyle;                  case 1:                      return AlbumsStyle;                  case 2:                      return ArtistsStyle;                  case 3:                      return TracksStyle;                  case 4:                      return AlbumsStyle;                  case 5:                      return LocalArtistsStyle;              }
Magic Number,Meridian.Domain,Settings,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Domain\Settings.cs,Settings,The following statement contains a magic number: Width = 1024;
Magic Number,Meridian.Domain,Settings,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Domain\Settings.cs,Settings,The following statement contains a magic number: Height = 650;
Magic Number,Meridian.Domain,Settings,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Domain\Settings.cs,Settings,The following statement contains a magic number: Left = SystemParameters.PrimaryScreenWidth / 2 - Width / 2;
Magic Number,Meridian.Domain,Settings,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Domain\Settings.cs,Settings,The following statement contains a magic number: Left = SystemParameters.PrimaryScreenWidth / 2 - Width / 2;
Magic Number,Meridian.Domain,Settings,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Domain\Settings.cs,Settings,The following statement contains a magic number: Top = SystemParameters.PrimaryScreenHeight / 2 - Height / 2;
Magic Number,Meridian.Domain,Settings,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Domain\Settings.cs,Settings,The following statement contains a magic number: Top = SystemParameters.PrimaryScreenHeight / 2 - Height / 2;
Magic Number,Meridian.Domain,Settings,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Domain\Settings.cs,Settings,The following statement contains a magic number: CompactLeft = SystemParameters.PrimaryScreenWidth / 2 - 250 / 2;
Magic Number,Meridian.Domain,Settings,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Domain\Settings.cs,Settings,The following statement contains a magic number: CompactLeft = SystemParameters.PrimaryScreenWidth / 2 - 250 / 2;
Magic Number,Meridian.Domain,Settings,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Domain\Settings.cs,Settings,The following statement contains a magic number: CompactLeft = SystemParameters.PrimaryScreenWidth / 2 - 250 / 2;
Magic Number,Meridian.Domain,Settings,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Domain\Settings.cs,Settings,The following statement contains a magic number: CompactTop = SystemParameters.PrimaryScreenHeight / 2 - 160 / 2;
Magic Number,Meridian.Domain,Settings,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Domain\Settings.cs,Settings,The following statement contains a magic number: CompactTop = SystemParameters.PrimaryScreenHeight / 2 - 160 / 2;
Magic Number,Meridian.Domain,Settings,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Domain\Settings.cs,Settings,The following statement contains a magic number: CompactTop = SystemParameters.PrimaryScreenHeight / 2 - 160 / 2;
Magic Number,Meridian.Domain,Settings,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Domain\Settings.cs,Settings,The following statement contains a magic number: Volume = 0.5f;
Magic Number,Meridian.Domain,Settings,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Domain\Settings.cs,Settings,The following statement contains a magic number: RemotePlayPort = 9999;
Magic Number,Meridian.Helpers,ArtistImageHelper,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Helpers\ArtistImageHelper.cs,StartQueueProcessing,The following statement contains a magic number: await Task.Delay(100);
Magic Number,Meridian.Helpers,AlbumCoversHelper,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Helpers\AlbumCoversHelper.cs,StartQueueProcessing,The following statement contains a magic number: await Task.Delay(100);
Magic Number,Meridian.Helpers,HotKeyManager,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Helpers\HotKeyManager.cs,InitializeHotkeys,The following statement contains a magic number: RegisterHotkey(Settings.Instance.IncreaseVolumeHotKeyModifier' Settings.Instance.IncreaseVolumeHotKey' h => ViewModelLocator.Main.Volume += 5);
Magic Number,Meridian.Helpers,HotKeyManager,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Helpers\HotKeyManager.cs,InitializeHotkeys,The following statement contains a magic number: RegisterHotkey(Settings.Instance.DecreaseVolumeHotKeyModifier' Settings.Instance.DecreaseVolumeHotKey' h => ViewModelLocator.Main.Volume -= 5);
Magic Number,Meridian.Helpers,HotKeyManager,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Helpers\HotKeyManager.cs,InitializeHotkeys,The following statement contains a magic number: RegisterHotkey(Settings.Instance.FastForwardHotKeyModifier' Settings.Instance.FastForwardHotKey' h => AudioService.FastForward(7));
Magic Number,Meridian.Helpers,HotKeyManager,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Helpers\HotKeyManager.cs,InitializeHotkeys,The following statement contains a magic number: RegisterHotkey(Settings.Instance.RewindHotKeyModifier' Settings.Instance.RewindHotKey' h => AudioService.Rewind(7));
Magic Number,Meridian.Helpers,NativeMethods,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Helpers\NativeMethods.cs,SizeWindow,The following statement contains a magic number: SendMessage(handle' 274' 61448' IntPtr.Zero);
Magic Number,Meridian.Helpers,NativeMethods,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Helpers\NativeMethods.cs,SizeWindow,The following statement contains a magic number: SendMessage(handle' 274' 61448' IntPtr.Zero);
Magic Number,Meridian.Helpers,NativeMethods,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Helpers\NativeMethods.cs,SizeWindowLeft,The following statement contains a magic number: SendMessage(handle' 274' 61441' IntPtr.Zero);
Magic Number,Meridian.Helpers,NativeMethods,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Helpers\NativeMethods.cs,SizeWindowLeft,The following statement contains a magic number: SendMessage(handle' 274' 61441' IntPtr.Zero);
Magic Number,Meridian.Helpers,NativeMethods,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Helpers\NativeMethods.cs,SizeWindowTop,The following statement contains a magic number: SendMessage(handle' 274' 61443' IntPtr.Zero);
Magic Number,Meridian.Helpers,NativeMethods,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Helpers\NativeMethods.cs,SizeWindowTop,The following statement contains a magic number: SendMessage(handle' 274' 61443' IntPtr.Zero);
Magic Number,Meridian.Helpers,NativeMethods,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Helpers\NativeMethods.cs,SizeWindowBottom,The following statement contains a magic number: SendMessage(handle' 274' 61446' IntPtr.Zero);
Magic Number,Meridian.Helpers,NativeMethods,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Helpers\NativeMethods.cs,SizeWindowBottom,The following statement contains a magic number: SendMessage(handle' 274' 61446' IntPtr.Zero);
Magic Number,Meridian.Helpers,NativeMethods,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Helpers\NativeMethods.cs,SizeWindowRight,The following statement contains a magic number: SendMessage(handle' 274' 61442' IntPtr.Zero);
Magic Number,Meridian.Helpers,NativeMethods,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Helpers\NativeMethods.cs,SizeWindowRight,The following statement contains a magic number: SendMessage(handle' 274' 61442' IntPtr.Zero);
Magic Number,Meridian.Helpers,StringHelper,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Helpers\StringHelper.cs,FormatSize,The following statement contains a magic number: const int scale = 1024;
Magic Number,Meridian.Helpers,StringHelper,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Helpers\StringHelper.cs,ToUtf8,The following statement contains a magic number: return new string(input.ToCharArray().                  Select(x => ((x + 848) >= 'А' && (x + 848) <= 'ё') ? (char)(x + 848) : x).                  ToArray());
Magic Number,Meridian.Helpers,StringHelper,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Helpers\StringHelper.cs,ToUtf8,The following statement contains a magic number: return new string(input.ToCharArray().                  Select(x => ((x + 848) >= 'А' && (x + 848) <= 'ё') ? (char)(x + 848) : x).                  ToArray());
Magic Number,Meridian.Helpers,StringHelper,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Helpers\StringHelper.cs,ToUtf8,The following statement contains a magic number: return new string(input.ToCharArray().                  Select(x => ((x + 848) >= 'А' && (x + 848) <= 'ё') ? (char)(x + 848) : x).                  ToArray());
Magic Number,Meridian.Layout.Controls,HeaderControl,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Layout\Controls\HeaderControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.rootElement = ((Meridian.Layout.Controls.HeaderControl)(target));              return;              case 2:              this.HeaderMenuPopup = ((System.Windows.Controls.Primitives.Popup)(target));              return;              case 3:              this.HeaderButton = ((System.Windows.Controls.Primitives.ToggleButton)(target));              return;              }
Magic Number,Meridian.Layout.Controls,HeaderControl,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Layout\Controls\HeaderControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.rootElement = ((Meridian.Layout.Controls.HeaderControl)(target));              return;              case 2:              this.HeaderMenuPopup = ((System.Windows.Controls.Primitives.Popup)(target));              return;              case 3:              this.HeaderButton = ((System.Windows.Controls.Primitives.ToggleButton)(target));              return;              }
Magic Number,Meridian.Model,GenreRecommendation,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Model\Recommendation.cs,GenreRecommendation,The following statement contains a magic number: GroupOrder = 2;
Magic Number,Meridian.Services,AudioService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\Media\AudioService.cs,AudioService,The following statement contains a magic number: _positionTimer.Interval = TimeSpan.FromMilliseconds(500);
Magic Number,Meridian.Services,AudioService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\Media\AudioService.cs,SkipNext,The following statement contains a magic number: CurrentAudioPosition.TotalSeconds > CurrentAudioDuration.TotalSeconds / 3
Magic Number,Meridian.Services,AudioService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\Media\AudioService.cs,Prev,The following statement contains a magic number: CurrentAudioPosition.TotalSeconds > 3
Magic Number,Meridian.Services,AudioService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\Media\AudioService.cs,MediaPlayerOnMediaFailed,The following statement contains a magic number: _playFailsCount < 5
Magic Number,Meridian.Services,CacheService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\CacheService.cs,SaveStream,The following statement contains a magic number: var buffer = new byte[1024];
Magic Number,Meridian.Services,DataService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\DataService.cs,GetAudioByArtistAndTitle,The following statement contains a magic number: var audios = await SearchAudio(artist + " - " + title' 10' 0);
Magic Number,Meridian.Services,DataService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\DataService.cs,GetNewsAudio,The following statement contains a magic number: int i = 0' j = 99;
Magic Number,Meridian.Services,DataService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\DataService.cs,GetNewsAudio,The following statement contains a magic number: i += 100;
Magic Number,Meridian.Services,DataService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\DataService.cs,GetNewsAudio,The following statement contains a magic number: audioIds.Count >= 100
Magic Number,Meridian.Services,DataService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\DataService.cs,GetWallAudio,The following statement contains a magic number: int i = 0' j = 99;
Magic Number,Meridian.Services,DataService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\DataService.cs,GetWallAudio,The following statement contains a magic number: i += 100;
Magic Number,Meridian.Services,DataService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\DataService.cs,GetWallAudio,The following statement contains a magic number: audioIds.Count >= 100
Magic Number,Meridian.Services,DataService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\DataService.cs,GetFavoritesAudio,The following statement contains a magic number: int i = 0' j = 99;
Magic Number,Meridian.Services,DataService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\DataService.cs,GetFavoritesAudio,The following statement contains a magic number: i += 100;
Magic Number,Meridian.Services,DataService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\DataService.cs,GetFavoritesAudio,The following statement contains a magic number: audioIds.Count >= 100
Magic Number,Meridian.Services,DataService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\DataService.cs,GetAdvancedRecommendations,The following statement contains a magic number: var allTracks = await GetUserTracks(300);
Magic Number,Meridian.Services,DataService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\DataService.cs,GetAdvancedRecommendations,The following statement contains a magic number: checksCount > 19
Magic Number,Meridian.Services,DataService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\DataService.cs,GetAdvancedRecommendations,The following statement contains a magic number: targetArtists.Count == 5
Magic Number,Meridian.Services,DataService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\DataService.cs,GetAdvancedRecommendations,The following statement contains a magic number: var recommendedTracks = await ViewModelLocator.Echonest.Playlist.Basic(artists: targetArtists' count: 100);
Magic Number,Meridian.Services,DataService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\DataService.cs,CopyAlbum,The following statement contains a magic number: int progressStep = (int)(100.0f / audio.Items.Count);
Magic Number,Meridian.Services,DataService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\DataService.cs,CopyAlbum,The following statement contains a magic number: await Task.Delay(1000);
Magic Number,Meridian.Services,NotificationService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\NotificationService.cs,NotifyProgressFinished,The following statement contains a magic number: _control.Progress = 100;
Magic Number,Meridian.Services,RadioService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\RadioService.cs,Next,The following statement contains a magic number: _futureSongs = await ViewModelLocator.Echonest.Playlist.DynamicNext(_sessionId' 5);
Magic Number,Meridian.Services,UpdateService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\UpdateService.cs,CheckUpdates,The following statement contains a magic number: await Task.Delay(2000);
Magic Number,Meridian.Services,UpdateService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\UpdateService.cs,Unpack,The following statement contains a magic number: var buffer = new byte[1024];
Magic Number,Meridian.Services.Media.Core,NaudioMediaPlayer,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\Media\Core\NaudioMediaPlayer.cs,_wavePlayer_PlaybackStopped,The following statement contains a magic number: _outputStream != null && _outputStream.CurrentTime.TotalSeconds > Duration.TotalSeconds / 2
Magic Number,Meridian.Services.Music,LocalMusicService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\Music\LocalMusicService.cs,ScanMusic,The following statement contains a magic number: await Task.Run(async () =>                  {                      var musicFiles = FilesHelper.GetMusicFiles();                        double totalCount = musicFiles.Count;                        //not cool but ¯\_(ツ)_/¯                        var albums = new Dictionary<string' AudioAlbum>();                      var artists = new Dictionary<string' AudioArtist>();                        foreach (var filePath in musicFiles)                      {                          TagLib.File audioFile = null;                            try                          {                              audioFile = TagLib.File.Create(filePath);                          }                          catch (Exception ex)                          {                              LoggingService.Log(ex);                              continue;                          }                            var track = new LocalAudio();                          track.Id = Md5Helper.Md5(filePath);                          if (!string.IsNullOrEmpty(audioFile.Tag.Title))                              track.Title = StringHelper.ToUtf8(audioFile.Tag.Title);                          else                              track.Title = Path.GetFileNameWithoutExtension(filePath);                            var artist = audioFile.Tag.FirstPerformer;                          if (string.IsNullOrEmpty(artist))                              artist = audioFile.Tag.FirstAlbumArtist;                            track.Artist = StringHelper.ToUtf8(artist);                          if (!string.IsNullOrEmpty(track.Artist))                              track.Artist = track.Artist.Trim();                          else                              track.Artist = string.Empty;                            track.Duration = audioFile.Properties.Duration;                          track.Source = filePath;                            if (!string.IsNullOrWhiteSpace(audioFile.Tag.Album))                          {                              track.AlbumId = Md5Helper.Md5(track.Artist.Trim().ToLower() + "_" + StringHelper.ToUtf8(audioFile.Tag.Album).Trim());                              track.Album = StringHelper.ToUtf8(audioFile.Tag.Album).Trim();                              if (!albums.ContainsKey(track.AlbumId))                                  albums.Add(track.AlbumId' new AudioAlbum() { Id = track.AlbumId' Artist = track.Artist' ArtistId = !string.IsNullOrEmpty(track.Artist) ? Md5Helper.Md5(track.Artist.Trim().ToLower()) : null' Title = StringHelper.ToUtf8(audioFile.Tag.Album)' Year = (int)audioFile.Tag.Year });                              else                              {                                  if (string.IsNullOrEmpty(albums[track.AlbumId].CoverPath) && audioFile.Tag.Pictures != null && audioFile.Tag.Pictures.Length > 0)                                  {                                      albums[track.AlbumId].CoverPath = filePath;                                  }                              }                          }                            if (!string.IsNullOrWhiteSpace(track.Artist))                          {                              track.ArtistId = Md5Helper.Md5(track.Artist.Trim().ToLower());                              track.Artist = track.Artist.Trim();                              if (!artists.ContainsKey(track.ArtistId))                                  artists.Add(track.ArtistId' new AudioArtist() { Id = track.ArtistId' Title = track.Artist });                          }                            tracks.Add(track);                            count++;                            progress.Report(count / totalCount * 100);                          audioFile.Dispose();                      }                        await ServiceLocator.DataBaseService.SaveItems(tracks);                      await ServiceLocator.DataBaseService.SaveItems(albums.Values);                      await ServiceLocator.DataBaseService.SaveItems(artists.Values);                        LoggingService.Log("Music scan finished. Found " + count + " tracks; " + albums.Count + " albums; " + artists.Count + " artists");                        tracks.Clear();                      albums.Clear();                      artists.Clear();                    }' _scanCancellationToken.Token);
Magic Number,Meridian.Services.Music.Repositories,LocalAlbumsRepository,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\Music\Repositories\LocalAlbumsRepository.cs,GetFromLibrary,The following statement contains a magic number: return Task.Run(async () =>              {                  var musicFiles = FilesHelper.GetMusicFiles();                    double totalCount = musicFiles.Count;                    var albums = new Dictionary<string' AudioAlbum>();                    foreach (var filePath in musicFiles)                  {                      TagLib.File audioFile = null;                        try                      {                          audioFile = TagLib.File.Create(filePath);                      }                      catch (Exception ex)                      {                          LoggingService.Log(ex);                          continue;                      }                        var track = new LocalAudio();                        if (!string.IsNullOrWhiteSpace(audioFile.Tag.Album))                      {                          string artist = string.Empty;                          if (!string.IsNullOrEmpty(audioFile.Tag.FirstPerformer))                              artist = StringHelper.ToUtf8(audioFile.Tag.FirstPerformer);                          else if (!string.IsNullOrEmpty(audioFile.Tag.FirstAlbumArtist))                              artist = StringHelper.ToUtf8(audioFile.Tag.FirstAlbumArtist);                            track.AlbumId = Md5Helper.Md5(artist.Trim().ToLower() + "_" + StringHelper.ToUtf8(audioFile.Tag.Album).Trim());                          track.Album = StringHelper.ToUtf8(audioFile.Tag.Album).Trim();                          if (!albums.ContainsKey(track.AlbumId))                              albums.Add(track.AlbumId' new AudioAlbum()                              {                                  Id = track.AlbumId'                                  Artist = artist.Trim()'                                  Title = StringHelper.ToUtf8(audioFile.Tag.Album).Trim()'                                  Year = (int)audioFile.Tag.Year'                                  ArtistId = Md5Helper.Md5(artist.Trim().ToLower())                              });                          else                          {                              if (string.IsNullOrEmpty(albums[track.AlbumId].CoverPath) && audioFile.Tag.Pictures != null && audioFile.Tag.Pictures.Length > 0)                              {                                  albums[track.AlbumId].CoverPath = filePath;                              }                          }                      }                      audioFile.Dispose();                        await Task.Delay(50);                  }                    LoggingService.Log("Music scan finished. Found " + albums.Count + " albums");                    return albums.Values.ToList();              });
Magic Number,Meridian.Services.Music.Repositories,LocalArtistsRepository,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\Music\Repositories\LocalArtistsRepository.cs,GetFromLibrary,The following statement contains a magic number: return Task.Run(async () =>              {                  var musicFiles = FilesHelper.GetMusicFiles();                    double totalCount = musicFiles.Count;                    var artists = new Dictionary<string' AudioArtist>();                    foreach (var filePath in musicFiles)                  {                      TagLib.File audioFile = null;                        try                      {                          audioFile = TagLib.File.Create(filePath);                      }                      catch (Exception ex)                      {                          LoggingService.Log(ex);                          continue;                      }                        var track = new LocalAudio();                      string artist = string.Empty;                      if (!string.IsNullOrWhiteSpace(audioFile.Tag.FirstPerformer))                          artist = audioFile.Tag.FirstPerformer;                      else if (!string.IsNullOrWhiteSpace(audioFile.Tag.FirstAlbumArtist))                          artist = audioFile.Tag.FirstAlbumArtist;                        if (!string.IsNullOrWhiteSpace(artist))                      {                          track.ArtistId = Md5Helper.Md5(StringHelper.ToUtf8(artist).Trim().ToLower());                          track.Artist = StringHelper.ToUtf8(artist).Trim();                          if (!artists.ContainsKey(track.ArtistId))                              artists.Add(track.ArtistId' new AudioArtist() { Id = track.ArtistId' Title = track.Artist });                      }                        audioFile.Dispose();                        await Task.Delay(50);                  }                    LoggingService.Log("Music scan finished. Found " + artists.Count + " artists");                    return artists.Values.ToList();              });
Magic Number,Meridian.Services.Music.Repositories,LocalTracksRepository,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Services\Music\Repositories\LocalTracksRepository.cs,GetFromLibrary,The following statement contains a magic number: return Task.Run(async () =>              {                  var musicFiles = FilesHelper.GetMusicFiles();                    double totalCount = musicFiles.Count;                    var tracks = new List<LocalAudio>();                    foreach (var filePath in musicFiles)                  {                      TagLib.File audioFile = null;                        try                      {                          audioFile = TagLib.File.Create(filePath);                      }                      catch (Exception ex)                      {                          LoggingService.Log(ex);                          continue;                      }                        var track = new LocalAudio();                      track.Id = Md5Helper.Md5(filePath);                      if (!string.IsNullOrEmpty(audioFile.Tag.Title))                          track.Title = StringHelper.ToUtf8(audioFile.Tag.Title);                      else                          track.Title = Path.GetFileNameWithoutExtension(filePath);                        var artist = audioFile.Tag.FirstPerformer;                      if (string.IsNullOrEmpty(artist))                          artist = audioFile.Tag.FirstAlbumArtist;                        track.Artist = StringHelper.ToUtf8(artist);                        if (!string.IsNullOrEmpty(track.Artist))                      {                          track.Artist = track.Artist.Trim();                          track.ArtistId = Md5Helper.Md5(track.Artist.Trim().ToLower());                      }                      else                          track.Artist = string.Empty;                        track.Duration = audioFile.Properties.Duration;                      track.Source = filePath;                        if (!string.IsNullOrWhiteSpace(audioFile.Tag.Album))                      {                          track.AlbumId = Md5Helper.Md5(track.Artist.Trim().ToLower() + "_" + StringHelper.ToUtf8(audioFile.Tag.Album).Trim());                          track.Album = StringHelper.ToUtf8(audioFile.Tag.Album).Trim();                      }                        tracks.Add(track);                      audioFile.Dispose();                        await Task.Delay(50);                  }                    LoggingService.Log("Music scan finished. Found " + tracks.Count + " tracks");                    return tracks;              });
Magic Number,SQLite,SQLiteConnection,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\SQLite.cs,SQLiteConnection,The following statement contains a magic number: BusyTimeout = TimeSpan.FromSeconds (0.1);
Magic Number,SQLite,SQLiteConnection,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\SQLite.cs,Execute,The following statement contains a magic number: Debug.WriteLine (string.Format ("Finished in {0} ms ({1:0.0} s total)"' _sw.ElapsedMilliseconds' _elapsedMilliseconds / 1000.0));
Magic Number,SQLite,SQLiteConnection,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\SQLite.cs,ExecuteScalar,The following statement contains a magic number: Debug.WriteLine (string.Format ("Finished in {0} ms ({1:0.0} s total)"' _sw.ElapsedMilliseconds' _elapsedMilliseconds / 1000.0));
Magic Number,SQLite,SQLiteConnection,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\SQLite.cs,DoSavePointExecute,The following statement contains a magic number: firstLen >= 2 && savepoint.Length > firstLen + 1
Magic Number,Meridian.ViewModel.Local,LocalMusicViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Local\LocalMusicViewModel.cs,Refresh,The following statement contains a magic number: switch (SelectedTabIndex)              {                  case 0:                      LoadTracks();                      break;                  case 1:                      LoadAlbums();                      break;                    case 2:                      LoadArtists();                      break;              }
Magic Number,Meridian.ViewModel.Main,FeedViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Main\FeedViewModel.cs,LoadFeed,The following statement contains a magic number: int count = 150;
Magic Number,Meridian.ViewModel.Main,FeedViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Main\FeedViewModel.cs,LoadFeed,The following statement contains a magic number: await Task.Delay(1000);
Magic Number,Meridian.ViewModel.Main,FeedViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Main\FeedViewModel.cs,LoadFeed,The following statement contains a magic number: requestsCount >= 2
Magic Number,Meridian.ViewModel.Main,MusicViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Main\MusicViewModel.cs,InitializeCommands,The following statement contains a magic number: PlayAudioCommand = new RelayCommand<Audio>(audio =>              {                  AudioService.Play(audio);                    switch (SelectedTabIndex)                  {                      case 0:                          var searchControl = LocalSearchControl.GetForCurrentView();                          if (searchControl != null && searchControl.IsFiltering)                          {                              AudioService.SetCurrentPlaylist((searchControl.Source.View).Cast<Audio>());                          }                          else                              AudioService.SetCurrentPlaylist(Tracks);                          break;                        case 1:                          if (SelectedArtist != null)                              AudioService.SetCurrentPlaylist(SelectedArtist.Tracks);                          break;                        case 2:                          AudioService.SetCurrentPlaylist(NewsTracks);                          break;                        case 3:                          AudioService.SetCurrentPlaylist(WallTracks);                          break;                        case 4:                          AudioService.SetCurrentPlaylist(FavoritesTracks);                          break;                  }              });
Magic Number,Meridian.ViewModel.Main,MusicViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Main\MusicViewModel.cs,InitializeCommands,The following statement contains a magic number: PlayAudioCommand = new RelayCommand<Audio>(audio =>              {                  AudioService.Play(audio);                    switch (SelectedTabIndex)                  {                      case 0:                          var searchControl = LocalSearchControl.GetForCurrentView();                          if (searchControl != null && searchControl.IsFiltering)                          {                              AudioService.SetCurrentPlaylist((searchControl.Source.View).Cast<Audio>());                          }                          else                              AudioService.SetCurrentPlaylist(Tracks);                          break;                        case 1:                          if (SelectedArtist != null)                              AudioService.SetCurrentPlaylist(SelectedArtist.Tracks);                          break;                        case 2:                          AudioService.SetCurrentPlaylist(NewsTracks);                          break;                        case 3:                          AudioService.SetCurrentPlaylist(WallTracks);                          break;                        case 4:                          AudioService.SetCurrentPlaylist(FavoritesTracks);                          break;                  }              });
Magic Number,Meridian.ViewModel.Main,MusicViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Main\MusicViewModel.cs,InitializeCommands,The following statement contains a magic number: PlayAudioCommand = new RelayCommand<Audio>(audio =>              {                  AudioService.Play(audio);                    switch (SelectedTabIndex)                  {                      case 0:                          var searchControl = LocalSearchControl.GetForCurrentView();                          if (searchControl != null && searchControl.IsFiltering)                          {                              AudioService.SetCurrentPlaylist((searchControl.Source.View).Cast<Audio>());                          }                          else                              AudioService.SetCurrentPlaylist(Tracks);                          break;                        case 1:                          if (SelectedArtist != null)                              AudioService.SetCurrentPlaylist(SelectedArtist.Tracks);                          break;                        case 2:                          AudioService.SetCurrentPlaylist(NewsTracks);                          break;                        case 3:                          AudioService.SetCurrentPlaylist(WallTracks);                          break;                        case 4:                          AudioService.SetCurrentPlaylist(FavoritesTracks);                          break;                  }              });
Magic Number,Meridian.ViewModel.Main,MusicViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Main\MusicViewModel.cs,LoadMoreAlbums,The following statement contains a magic number: Albums == null || Albums.Count - 5 >= _totalAlbumsCount
Magic Number,Meridian.ViewModel.Main,MusicViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Main\MusicViewModel.cs,LoadMoreAlbums,The following statement contains a magic number: var response = await DataService.GetUserAlbums(0' Albums.Count - 5);
Magic Number,Meridian.ViewModel.Main,MusicViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Main\MusicViewModel.cs,LoadNewsAudios,The following statement contains a magic number: int count = 150;
Magic Number,Meridian.ViewModel.Main,MusicViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Main\MusicViewModel.cs,LoadNewsAudios,The following statement contains a magic number: await Task.Delay(1000);
Magic Number,Meridian.ViewModel.Main,MusicViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Main\MusicViewModel.cs,LoadNewsAudios,The following statement contains a magic number: requestsCount >= 2
Magic Number,Meridian.ViewModel.Main,MusicViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Main\MusicViewModel.cs,LoadWallAudios,The following statement contains a magic number: int count = 50;
Magic Number,Meridian.ViewModel.Main,MusicViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Main\MusicViewModel.cs,LoadWallAudios,The following statement contains a magic number: await Task.Delay(1000);
Magic Number,Meridian.ViewModel.Main,MusicViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Main\MusicViewModel.cs,LoadWallAudios,The following statement contains a magic number: requestsCount >= 2
Magic Number,Meridian.ViewModel.Main,MusicViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Main\MusicViewModel.cs,LoadFavoritesAudios,The following statement contains a magic number: int count = 50;
Magic Number,Meridian.ViewModel.Main,MusicViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Main\MusicViewModel.cs,LoadFavoritesAudios,The following statement contains a magic number: await Task.Delay(1000);
Magic Number,Meridian.ViewModel.Main,MusicViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Main\MusicViewModel.cs,LoadFavoritesAudios,The following statement contains a magic number: requestsCount >= 2
Magic Number,Meridian.ViewModel.Main,MusicViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Main\MusicViewModel.cs,AddNewAlbum,The following statement contains a magic number: Albums.Insert(5' album);
Magic Number,Meridian.ViewModel.Main,NowPlayingViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Main\NowPlayingViewModel.cs,OnPlayerPositionChanged,The following statement contains a magic number: message.NewPosition.TotalSeconds >= 3
Magic Number,Meridian.ViewModel.Main,NowPlayingViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Main\NowPlayingViewModel.cs,GetArtistImage,The following statement contains a magic number: (DateTime.Now - lastUpdateTime).TotalDays < 14
Magic Number,Meridian.ViewModel.Main,RecommendationsViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Main\RecommendationsViewModel.cs,LoadGeneralRecommendations,The following statement contains a magic number: const int count = 50;
Magic Number,Meridian.ViewModel.Main,RecommendationsViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Main\RecommendationsViewModel.cs,LoadGeneralRecommendations,The following statement contains a magic number: await Task.Delay(1000);
Magic Number,Meridian.ViewModel.Main,RecommendationsViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Main\RecommendationsViewModel.cs,LoadGeneralRecommendations,The following statement contains a magic number: requestsCount >= 2
Magic Number,Meridian.ViewModel.Main,RecommendationsViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Main\RecommendationsViewModel.cs,LoadAdvancedRecommendations,The following statement contains a magic number: var recommendations = await DataService.GetAdvancedRecommendations(100' token);
Magic Number,Meridian.ViewModel.Main,RecommendationsViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Main\RecommendationsViewModel.cs,LoadRecommendationsByTag,The following statement contains a magic number: var a = await DataService.GetTagTopTracks(tag' 150);
Magic Number,Meridian.ViewModel.Search,AlbumViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Search\AlbumViewModel.cs,InitializeCommands,The following statement contains a magic number: ShareCommand = new RelayCommand(() =>              {                  var shareViewModel = new ShareViewModel();                  if (Tracks != null && Tracks.Count > 0)                  {                      foreach (var track in Tracks.Take(15))                      {                          shareViewModel.Tracks.Add(track);                        }                  }                    if (File.Exists(App.Root + "/Cache/artists/" + Album.Artist + ".jpg"))                  {                      shareViewModel.ImagePath = App.Root + "/Cache/artists/" + Album.Artist + ".jpg";                      shareViewModel.Image = new BitmapImage(new Uri(shareViewModel.ImagePath));                  }                    var flyout = new FlyoutControl();                  flyout.FlyoutContent = new ShareView() { DataContext = shareViewModel };                  flyout.Show();                    shareViewModel.Activate();              });
Magic Number,Meridian.ViewModel.Search,AlbumViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Search\AlbumViewModel.cs,LoadArtistInfo,The following statement contains a magic number: var topAlbums = await DataService.GetArtistAlbums(null' Album.Artist' 10);
Magic Number,Meridian.ViewModel.Search,AlbumViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Search\AlbumViewModel.cs,Save,The following statement contains a magic number: var progress = new Progress<int>(p => NotificationService.NotifyProgressChanged((int)(p / 2.0f)));
Magic Number,Meridian.ViewModel.Search,AlbumViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Search\AlbumViewModel.cs,Save,The following statement contains a magic number: int progressStep = (int)(100.0f / (audios.Count + 1));
Magic Number,Meridian.ViewModel.Search,AlbumViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Search\AlbumViewModel.cs,Save,The following statement contains a magic number: NotificationService.NotifyProgressChanged((int)(progressStep / 2.0f));
Magic Number,Meridian.ViewModel.Search,AlbumViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Search\AlbumViewModel.cs,Save,The following statement contains a magic number: await Task.Delay(1000);
Magic Number,Meridian.ViewModel.Search,AlbumViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Search\AlbumViewModel.cs,Save,The following statement contains a magic number: requestsCount >= 2
Magic Number,Meridian.ViewModel.Search,AlbumViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Search\AlbumViewModel.cs,GetAudioList,The following statement contains a magic number: int progressStep = (int)(100.0f / Tracks.Count);
Magic Number,Meridian.ViewModel.Search,AlbumViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Search\AlbumViewModel.cs,GetAudioList,The following statement contains a magic number: await Task.Delay(1000);
Magic Number,Meridian.ViewModel.Search,AlbumViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Search\AlbumViewModel.cs,GetAudioList,The following statement contains a magic number: requestsCount >= 2
Magic Number,Meridian.ViewModel.Search,ArtistViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Search\ArtistViewModel.cs,InitializeCommands,The following statement contains a magic number: ShareCommand = new RelayCommand(() =>              {                  var shareViewModel = new ShareViewModel();                  if (Tracks != null && Tracks.Count > 0)                  {                      foreach (var track in AllTracks.Take(15))                      {                          shareViewModel.Tracks.Add(track);                      }                  }                    if (File.Exists(App.Root + "/Cache/artists/" + Artist.Name + ".jpg"))                  {                      shareViewModel.ImagePath = App.Root + "/Cache/artists/" + Artist.Name + ".jpg";                      shareViewModel.Image = new BitmapImage(new Uri(shareViewModel.ImagePath));                  }                    var flyout = new FlyoutControl();                  flyout.FlyoutContent = new ShareView() { DataContext = shareViewModel };                  flyout.Show();                    shareViewModel.Activate();              });
Magic Number,Meridian.ViewModel.Search,ArtistViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Search\ArtistViewModel.cs,LoadTopTracks,The following statement contains a magic number: Tracks = tracks.Take(5).ToList();
Magic Number,Meridian.ViewModel.Search,ArtistViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Search\ArtistViewModel.cs,LoadAlbums,The following statement contains a magic number: Albums = _allAlbums.Take(10).ToList();
Magic Number,Meridian.ViewModel.Search,SearchViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Search\SearchViewModel.cs,InitializeCommands,The following statement contains a magic number: PlayAudioCommand = new RelayCommand<Audio>(audio =>              {                  AudioService.Play(audio);                  switch (SelectedSectionIndex)                  {                      //tracks                      case 0:                          AudioService.SetCurrentPlaylist(SearchResults.Cast<Audio>());                          break;                        //local artists                      case 5:                          AudioService.SetCurrentPlaylist(SearchResults.Cast<AudioArtist>().Where(a => a.Albums != null).SelectMany(a => a.Albums).SelectMany(a => a.Tracks).ToList());                          break;                  }              });
Magic Number,Meridian.ViewModel.Search,SearchViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Search\SearchViewModel.cs,Search,The following statement contains a magic number: switch (_selectedSectionIndex)              {                  case 0:                      SearchTracks(_cancellationToken.Token);                      break;                    case 1:                      SearchAlbums(_cancellationToken.Token);                      break;                    case 2:                      SearchArtists(_cancellationToken.Token);                      break;                    case 3:                      SearchLocalTracks(_cancellationToken.Token);                      break;                    case 4:                      SearchLocalAlbums(_cancellationToken.Token);                      break;                    case 5:                      SearchLocalArtists(_cancellationToken.Token);                      break;              }
Magic Number,Meridian.ViewModel.Search,SearchViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Search\SearchViewModel.cs,Search,The following statement contains a magic number: switch (_selectedSectionIndex)              {                  case 0:                      SearchTracks(_cancellationToken.Token);                      break;                    case 1:                      SearchAlbums(_cancellationToken.Token);                      break;                    case 2:                      SearchArtists(_cancellationToken.Token);                      break;                    case 3:                      SearchLocalTracks(_cancellationToken.Token);                      break;                    case 4:                      SearchLocalAlbums(_cancellationToken.Token);                      break;                    case 5:                      SearchLocalArtists(_cancellationToken.Token);                      break;              }
Magic Number,Meridian.ViewModel.Search,SearchViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Search\SearchViewModel.cs,Search,The following statement contains a magic number: switch (_selectedSectionIndex)              {                  case 0:                      SearchTracks(_cancellationToken.Token);                      break;                    case 1:                      SearchAlbums(_cancellationToken.Token);                      break;                    case 2:                      SearchArtists(_cancellationToken.Token);                      break;                    case 3:                      SearchLocalTracks(_cancellationToken.Token);                      break;                    case 4:                      SearchLocalAlbums(_cancellationToken.Token);                      break;                    case 5:                      SearchLocalArtists(_cancellationToken.Token);                      break;              }
Magic Number,Meridian.ViewModel.Search,SearchViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Search\SearchViewModel.cs,Search,The following statement contains a magic number: switch (_selectedSectionIndex)              {                  case 0:                      SearchTracks(_cancellationToken.Token);                      break;                    case 1:                      SearchAlbums(_cancellationToken.Token);                      break;                    case 2:                      SearchArtists(_cancellationToken.Token);                      break;                    case 3:                      SearchLocalTracks(_cancellationToken.Token);                      break;                    case 4:                      SearchLocalAlbums(_cancellationToken.Token);                      break;                    case 5:                      SearchLocalArtists(_cancellationToken.Token);                      break;              }
Magic Number,Meridian.ViewModel.Search,SearchViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Search\SearchViewModel.cs,SearchTracks,The following statement contains a magic number: const int count = 100;
Magic Number,Meridian.ViewModel.Search,SearchViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Search\SearchViewModel.cs,SearchTracks,The following statement contains a magic number: await Task.Delay(1000);
Magic Number,Meridian.ViewModel.Search,SearchViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Search\SearchViewModel.cs,SearchTracks,The following statement contains a magic number: requestsCount >= 2
Magic Number,Meridian.ViewModel.Flyouts,ShareViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Flyouts\ShareViewModel.cs,DragOver,The following statement contains a magic number: dropInfo.Data is Audio && Tracks.Count < 15 && Tracks.All(t => t.Id != ((Audio)dropInfo.Data).Id)
Magic Number,Meridian.ViewModel.Flyouts,ShareViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Flyouts\ShareViewModel.cs,Drop,The following statement contains a magic number: dropInfo.Data is Audio && Tracks.Count < 15 && Tracks.All(t => t.Id != ((Audio)dropInfo.Data).Id)
Magic Number,Meridian.ViewModel.Flyouts,ShareViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Flyouts\ShareViewModel.cs,GetAudioList,The following statement contains a magic number: await Task.Delay(1000);
Magic Number,Meridian.ViewModel.Flyouts,ShareViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Flyouts\ShareViewModel.cs,GetAudioList,The following statement contains a magic number: requestsCount >= 2
Magic Number,Meridian.ViewModel.People,FriendAudioViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\People\FriendAudioViewModel.cs,LoadAlbums,The following statement contains a magic number: albums.Insert(1' new VkAudioAlbum() { Id = -101' Title = MainResources.MyMusicWall });
Magic Number,Meridian.ViewModel.People,FriendAudioViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\People\FriendAudioViewModel.cs,LoadAlbums,The following statement contains a magic number: albums.Insert(2' new VkAudioAlbum() { Id = int.MinValue });
Magic Number,Meridian.ViewModel.People,FriendAudioViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\People\FriendAudioViewModel.cs,LoadMoreAlbums,The following statement contains a magic number: Albums == null || Albums.Count - 3 >= _totalAlbumsCount
Magic Number,Meridian.ViewModel.People,FriendAudioViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\People\FriendAudioViewModel.cs,LoadMoreAlbums,The following statement contains a magic number: var response = await DataService.GetUserAlbums(0' Albums.Count - 3' SelectedFriend.Id);
Magic Number,Meridian.ViewModel.People,FriendAudioViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\People\FriendAudioViewModel.cs,LoadWallAudios,The following statement contains a magic number: int count = 50;
Magic Number,Meridian.ViewModel.People,FriendAudioViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\People\FriendAudioViewModel.cs,LoadWallAudios,The following statement contains a magic number: await Task.Delay(1000' token);
Magic Number,Meridian.ViewModel.People,FriendAudioViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\People\FriendAudioViewModel.cs,LoadWallAudios,The following statement contains a magic number: requestsCount >= 2
Magic Number,Meridian.ViewModel.People,SocietyAudioViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\People\SocietyAudioViewModel.cs,LoadAlbums,The following statement contains a magic number: albums.Insert(1' new VkAudioAlbum() { Id = -101' Title = MainResources.MyMusicWall });
Magic Number,Meridian.ViewModel.People,SocietyAudioViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\People\SocietyAudioViewModel.cs,LoadAlbums,The following statement contains a magic number: albums.Insert(2' new VkAudioAlbum() { Id = int.MinValue });
Magic Number,Meridian.ViewModel.People,SocietyAudioViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\People\SocietyAudioViewModel.cs,LoadMoreAlbums,The following statement contains a magic number: Albums == null || Albums.Count - 3 >= _totalAlbumsCount
Magic Number,Meridian.ViewModel.People,SocietyAudioViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\People\SocietyAudioViewModel.cs,LoadMoreAlbums,The following statement contains a magic number: var response = await DataService.GetUserAlbums(0' Albums.Count - 3' -SelectedSociety.Id);
Magic Number,Meridian.ViewModel.People,SocietyAudioViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\People\SocietyAudioViewModel.cs,LoadWallAudios,The following statement contains a magic number: int count = 50;
Magic Number,Meridian.ViewModel.People,SocietyAudioViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\People\SocietyAudioViewModel.cs,LoadWallAudios,The following statement contains a magic number: await Task.Delay(1000' token);
Magic Number,Meridian.ViewModel.People,SocietyAudioViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\People\SocietyAudioViewModel.cs,LoadWallAudios,The following statement contains a magic number: requestsCount >= 2
Magic Number,Meridian.ViewModel,MainViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\MainViewModel.cs,OnPlayerPositionChanged,The following statement contains a magic number: message.NewPosition.TotalSeconds >= 3
Magic Number,Meridian.ViewModel,MainViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\MainViewModel.cs,OnPlayerPositionChanged,The following statement contains a magic number: CurrentAudio != null && message.NewPosition.TotalSeconds >= CurrentAudio.Duration.TotalSeconds / 3
Magic Number,Meridian.ViewModel,SettingsViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\SettingsViewModel.cs,SaveSettings,The following statement contains a magic number: ((MainWindow)Application.Current.MainWindow).BackgroundArtControl.Effect = new BlurEffect() { RenderingBias = RenderingBias.Quality' Radius = 35 };
Magic Number,Meridian.ViewModel,SettingsViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\SettingsViewModel.cs,SaveSettings,The following statement contains a magic number: switch (settingsHotkey.Id)                  {                      case "Next":                          if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.NextHotKeyModifier' Domain.Settings.Instance.NextHotKey))                          {                              ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.NextHotKeyModifier' Domain.Settings.Instance.NextHotKey);                          }                            Domain.Settings.Instance.NextHotKey = key;                          Domain.Settings.Instance.NextHotKeyModifier = modifier;                            if (key != Key.None)                              ViewModelLocator.Main.HotKeyManager.RegisterHotkey(modifier' key' h => AudioService.SkipNext());                              break;                        case "Prev":                          if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.PrevHotKeyModifier' Domain.Settings.Instance.PrevHotKey))                          {                              ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.PrevHotKeyModifier' Domain.Settings.Instance.PrevHotKey);                          }                            Domain.Settings.Instance.PrevHotKey = key;                          Domain.Settings.Instance.PrevHotKeyModifier = modifier;                            if (key != Key.None)                              ViewModelLocator.Main.HotKeyManager.RegisterHotkey(modifier' key' h => AudioService.Prev());                          break;                        case "PlayPause":                          if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.PlayPauseHotKeyModifier' Domain.Settings.Instance.PlayPauseHotKey))                          {                              ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.PlayPauseHotKeyModifier' Domain.Settings.Instance.PlayPauseHotKey);                          }                            Domain.Settings.Instance.PlayPauseHotKey = key;                          Domain.Settings.Instance.PlayPauseHotKeyModifier = modifier;                            if (key != Key.None)                              ViewModelLocator.Main.HotKeyManager.RegisterHotkey(modifier' key' h =>                              {                                  if (AudioService.IsPlaying)                                      AudioService.Pause();                                  else AudioService.Play();                              });                          break;                        case "LikeDislike":                          if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.LikeDislikeHotKeyModifier' Domain.Settings.Instance.LikeDislikeHotKey))                          {                              ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.LikeDislikeHotKeyModifier' Domain.Settings.Instance.LikeDislikeHotKey);                          }                            Domain.Settings.Instance.LikeDislikeHotKey = key;                          Domain.Settings.Instance.LikeDislikeHotKeyModifier = modifier;                            if (key != Key.None)                              ViewModelLocator.Main.HotKeyManager.RegisterHotkey(modifier' key' h =>                              {                                  if (AudioService.CurrentAudio is VkAudio)                                  {                                      ((VkAudio)AudioService.CurrentAudio).IsAddedByCurrentUser =                                          !((VkAudio)AudioService.CurrentAudio).IsAddedByCurrentUser;                                      ViewModelLocator.Main.AddRemoveAudioCommand.Execute(AudioService.CurrentAudio);                                  }                              });                          break;                        case "Shuffle":                          if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.ShuffleHotKeyModifier' Domain.Settings.Instance.ShuffleHotKey))                          {                              ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.ShuffleHotKeyModifier' Domain.Settings.Instance.ShuffleHotKey);                          }                            Domain.Settings.Instance.ShuffleHotKey = key;                          Domain.Settings.Instance.ShuffleHotKeyModifier = modifier;                            if (key != Key.None)                              ViewModelLocator.Main.HotKeyManager.RegisterHotkey(modifier' key' h =>                              {                                  ViewModelLocator.Main.Shuffle = !ViewModelLocator.Main.Shuffle;                              });                          break;                          case "Repeat":                          if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.RepeatHotKeyModifier' Domain.Settings.Instance.RepeatHotKey))                          {                              ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.RepeatHotKeyModifier' Domain.Settings.Instance.RepeatHotKey);                          }                            Domain.Settings.Instance.RepeatHotKey = key;                          Domain.Settings.Instance.RepeatHotKeyModifier = modifier;                            if (key != Key.None)                              ViewModelLocator.Main.HotKeyManager.RegisterHotkey(modifier' key' h =>                              {                                  ViewModelLocator.Main.Repeat = !ViewModelLocator.Main.Repeat;                              });                          break;                        case "IncreaseVolume":                          if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.IncreaseVolumeHotKeyModifier' Domain.Settings.Instance.IncreaseVolumeHotKey))                          {                              ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.IncreaseVolumeHotKeyModifier' Domain.Settings.Instance.IncreaseVolumeHotKey);                          }                            Domain.Settings.Instance.IncreaseVolumeHotKey = key;                          Domain.Settings.Instance.IncreaseVolumeHotKeyModifier = modifier;                            if (key != Key.None)                              ViewModelLocator.Main.HotKeyManager.RegisterHotkey(modifier' key' h =>                              {                                  ViewModelLocator.Main.Volume += 5;                              });                          break;                        case "DecreaseVolume":                          if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.DecreaseVolumeHotKeyModifier' Domain.Settings.Instance.DecreaseVolumeHotKey))                          {                              ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.DecreaseVolumeHotKeyModifier' Domain.Settings.Instance.DecreaseVolumeHotKey);                          }                            Domain.Settings.Instance.DecreaseVolumeHotKey = key;                          Domain.Settings.Instance.DecreaseVolumeHotKeyModifier = modifier;                            if (key != Key.None)                              ViewModelLocator.Main.HotKeyManager.RegisterHotkey(modifier' key' h =>                              {                                  ViewModelLocator.Main.Volume -= 5;                              });                          break;                        case "ShowHide":                          if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.ShowHideHotKeyModifier' Domain.Settings.Instance.ShowHideHotKey))                          {                              ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.ShowHideHotKeyModifier' Domain.Settings.Instance.ShowHideHotKey);                          }                            Domain.Settings.Instance.ShowHideHotKey = key;                          Domain.Settings.Instance.ShowHideHotKeyModifier = modifier;                            if (key != Key.None)                              ViewModelLocator.Main.HotKeyManager.RegisterHotkey(modifier' key' h =>                              {                                  if (Application.Current.MainWindow.WindowState != WindowState.Minimized)                                      Application.Current.MainWindow.WindowState = WindowState.Minimized;                                  else                                      Application.Current.MainWindow.WindowState = WindowState.Normal;                              });                          break;                        case "FastForward":                          if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.FastForwardHotKeyModifier' Domain.Settings.Instance.FastForwardHotKey))                          {                              ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.FastForwardHotKeyModifier' Domain.Settings.Instance.FastForwardHotKey);                          }                            Domain.Settings.Instance.FastForwardHotKey = key;                          Domain.Settings.Instance.FastForwardHotKeyModifier = modifier;                            if (key != Key.None)                              ViewModelLocator.Main.HotKeyManager.RegisterHotkey(modifier' key' h => AudioService.FastForward(7));                          break;                        case "Rewind":                          if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.RewindHotKeyModifier' Domain.Settings.Instance.RewindHotKey))                          {                              ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.RewindHotKeyModifier' Domain.Settings.Instance.RewindHotKey);                          }                            Domain.Settings.Instance.RewindHotKey = key;                          Domain.Settings.Instance.RewindHotKeyModifier = modifier;                            if (key != Key.None)                              ViewModelLocator.Main.HotKeyManager.RegisterHotkey(modifier' key' h => AudioService.Rewind(7));                          break;                  }
Magic Number,Meridian.ViewModel,SettingsViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\SettingsViewModel.cs,SaveSettings,The following statement contains a magic number: switch (settingsHotkey.Id)                  {                      case "Next":                          if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.NextHotKeyModifier' Domain.Settings.Instance.NextHotKey))                          {                              ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.NextHotKeyModifier' Domain.Settings.Instance.NextHotKey);                          }                            Domain.Settings.Instance.NextHotKey = key;                          Domain.Settings.Instance.NextHotKeyModifier = modifier;                            if (key != Key.None)                              ViewModelLocator.Main.HotKeyManager.RegisterHotkey(modifier' key' h => AudioService.SkipNext());                              break;                        case "Prev":                          if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.PrevHotKeyModifier' Domain.Settings.Instance.PrevHotKey))                          {                              ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.PrevHotKeyModifier' Domain.Settings.Instance.PrevHotKey);                          }                            Domain.Settings.Instance.PrevHotKey = key;                          Domain.Settings.Instance.PrevHotKeyModifier = modifier;                            if (key != Key.None)                              ViewModelLocator.Main.HotKeyManager.RegisterHotkey(modifier' key' h => AudioService.Prev());                          break;                        case "PlayPause":                          if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.PlayPauseHotKeyModifier' Domain.Settings.Instance.PlayPauseHotKey))                          {                              ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.PlayPauseHotKeyModifier' Domain.Settings.Instance.PlayPauseHotKey);                          }                            Domain.Settings.Instance.PlayPauseHotKey = key;                          Domain.Settings.Instance.PlayPauseHotKeyModifier = modifier;                            if (key != Key.None)                              ViewModelLocator.Main.HotKeyManager.RegisterHotkey(modifier' key' h =>                              {                                  if (AudioService.IsPlaying)                                      AudioService.Pause();                                  else AudioService.Play();                              });                          break;                        case "LikeDislike":                          if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.LikeDislikeHotKeyModifier' Domain.Settings.Instance.LikeDislikeHotKey))                          {                              ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.LikeDislikeHotKeyModifier' Domain.Settings.Instance.LikeDislikeHotKey);                          }                            Domain.Settings.Instance.LikeDislikeHotKey = key;                          Domain.Settings.Instance.LikeDislikeHotKeyModifier = modifier;                            if (key != Key.None)                              ViewModelLocator.Main.HotKeyManager.RegisterHotkey(modifier' key' h =>                              {                                  if (AudioService.CurrentAudio is VkAudio)                                  {                                      ((VkAudio)AudioService.CurrentAudio).IsAddedByCurrentUser =                                          !((VkAudio)AudioService.CurrentAudio).IsAddedByCurrentUser;                                      ViewModelLocator.Main.AddRemoveAudioCommand.Execute(AudioService.CurrentAudio);                                  }                              });                          break;                        case "Shuffle":                          if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.ShuffleHotKeyModifier' Domain.Settings.Instance.ShuffleHotKey))                          {                              ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.ShuffleHotKeyModifier' Domain.Settings.Instance.ShuffleHotKey);                          }                            Domain.Settings.Instance.ShuffleHotKey = key;                          Domain.Settings.Instance.ShuffleHotKeyModifier = modifier;                            if (key != Key.None)                              ViewModelLocator.Main.HotKeyManager.RegisterHotkey(modifier' key' h =>                              {                                  ViewModelLocator.Main.Shuffle = !ViewModelLocator.Main.Shuffle;                              });                          break;                          case "Repeat":                          if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.RepeatHotKeyModifier' Domain.Settings.Instance.RepeatHotKey))                          {                              ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.RepeatHotKeyModifier' Domain.Settings.Instance.RepeatHotKey);                          }                            Domain.Settings.Instance.RepeatHotKey = key;                          Domain.Settings.Instance.RepeatHotKeyModifier = modifier;                            if (key != Key.None)                              ViewModelLocator.Main.HotKeyManager.RegisterHotkey(modifier' key' h =>                              {                                  ViewModelLocator.Main.Repeat = !ViewModelLocator.Main.Repeat;                              });                          break;                        case "IncreaseVolume":                          if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.IncreaseVolumeHotKeyModifier' Domain.Settings.Instance.IncreaseVolumeHotKey))                          {                              ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.IncreaseVolumeHotKeyModifier' Domain.Settings.Instance.IncreaseVolumeHotKey);                          }                            Domain.Settings.Instance.IncreaseVolumeHotKey = key;                          Domain.Settings.Instance.IncreaseVolumeHotKeyModifier = modifier;                            if (key != Key.None)                              ViewModelLocator.Main.HotKeyManager.RegisterHotkey(modifier' key' h =>                              {                                  ViewModelLocator.Main.Volume += 5;                              });                          break;                        case "DecreaseVolume":                          if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.DecreaseVolumeHotKeyModifier' Domain.Settings.Instance.DecreaseVolumeHotKey))                          {                              ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.DecreaseVolumeHotKeyModifier' Domain.Settings.Instance.DecreaseVolumeHotKey);                          }                            Domain.Settings.Instance.DecreaseVolumeHotKey = key;                          Domain.Settings.Instance.DecreaseVolumeHotKeyModifier = modifier;                            if (key != Key.None)                              ViewModelLocator.Main.HotKeyManager.RegisterHotkey(modifier' key' h =>                              {                                  ViewModelLocator.Main.Volume -= 5;                              });                          break;                        case "ShowHide":                          if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.ShowHideHotKeyModifier' Domain.Settings.Instance.ShowHideHotKey))                          {                              ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.ShowHideHotKeyModifier' Domain.Settings.Instance.ShowHideHotKey);                          }                            Domain.Settings.Instance.ShowHideHotKey = key;                          Domain.Settings.Instance.ShowHideHotKeyModifier = modifier;                            if (key != Key.None)                              ViewModelLocator.Main.HotKeyManager.RegisterHotkey(modifier' key' h =>                              {                                  if (Application.Current.MainWindow.WindowState != WindowState.Minimized)                                      Application.Current.MainWindow.WindowState = WindowState.Minimized;                                  else                                      Application.Current.MainWindow.WindowState = WindowState.Normal;                              });                          break;                        case "FastForward":                          if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.FastForwardHotKeyModifier' Domain.Settings.Instance.FastForwardHotKey))                          {                              ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.FastForwardHotKeyModifier' Domain.Settings.Instance.FastForwardHotKey);                          }                            Domain.Settings.Instance.FastForwardHotKey = key;                          Domain.Settings.Instance.FastForwardHotKeyModifier = modifier;                            if (key != Key.None)                              ViewModelLocator.Main.HotKeyManager.RegisterHotkey(modifier' key' h => AudioService.FastForward(7));                          break;                        case "Rewind":                          if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.RewindHotKeyModifier' Domain.Settings.Instance.RewindHotKey))                          {                              ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.RewindHotKeyModifier' Domain.Settings.Instance.RewindHotKey);                          }                            Domain.Settings.Instance.RewindHotKey = key;                          Domain.Settings.Instance.RewindHotKeyModifier = modifier;                            if (key != Key.None)                              ViewModelLocator.Main.HotKeyManager.RegisterHotkey(modifier' key' h => AudioService.Rewind(7));                          break;                  }
Magic Number,Meridian.ViewModel,SettingsViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\SettingsViewModel.cs,SaveSettings,The following statement contains a magic number: switch (settingsHotkey.Id)                  {                      case "Next":                          if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.NextHotKeyModifier' Domain.Settings.Instance.NextHotKey))                          {                              ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.NextHotKeyModifier' Domain.Settings.Instance.NextHotKey);                          }                            Domain.Settings.Instance.NextHotKey = key;                          Domain.Settings.Instance.NextHotKeyModifier = modifier;                            if (key != Key.None)                              ViewModelLocator.Main.HotKeyManager.RegisterHotkey(modifier' key' h => AudioService.SkipNext());                              break;                        case "Prev":                          if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.PrevHotKeyModifier' Domain.Settings.Instance.PrevHotKey))                          {                              ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.PrevHotKeyModifier' Domain.Settings.Instance.PrevHotKey);                          }                            Domain.Settings.Instance.PrevHotKey = key;                          Domain.Settings.Instance.PrevHotKeyModifier = modifier;                            if (key != Key.None)                              ViewModelLocator.Main.HotKeyManager.RegisterHotkey(modifier' key' h => AudioService.Prev());                          break;                        case "PlayPause":                          if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.PlayPauseHotKeyModifier' Domain.Settings.Instance.PlayPauseHotKey))                          {                              ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.PlayPauseHotKeyModifier' Domain.Settings.Instance.PlayPauseHotKey);                          }                            Domain.Settings.Instance.PlayPauseHotKey = key;                          Domain.Settings.Instance.PlayPauseHotKeyModifier = modifier;                            if (key != Key.None)                              ViewModelLocator.Main.HotKeyManager.RegisterHotkey(modifier' key' h =>                              {                                  if (AudioService.IsPlaying)                                      AudioService.Pause();                                  else AudioService.Play();                              });                          break;                        case "LikeDislike":                          if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.LikeDislikeHotKeyModifier' Domain.Settings.Instance.LikeDislikeHotKey))                          {                              ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.LikeDislikeHotKeyModifier' Domain.Settings.Instance.LikeDislikeHotKey);                          }                            Domain.Settings.Instance.LikeDislikeHotKey = key;                          Domain.Settings.Instance.LikeDislikeHotKeyModifier = modifier;                            if (key != Key.None)                              ViewModelLocator.Main.HotKeyManager.RegisterHotkey(modifier' key' h =>                              {                                  if (AudioService.CurrentAudio is VkAudio)                                  {                                      ((VkAudio)AudioService.CurrentAudio).IsAddedByCurrentUser =                                          !((VkAudio)AudioService.CurrentAudio).IsAddedByCurrentUser;                                      ViewModelLocator.Main.AddRemoveAudioCommand.Execute(AudioService.CurrentAudio);                                  }                              });                          break;                        case "Shuffle":                          if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.ShuffleHotKeyModifier' Domain.Settings.Instance.ShuffleHotKey))                          {                              ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.ShuffleHotKeyModifier' Domain.Settings.Instance.ShuffleHotKey);                          }                            Domain.Settings.Instance.ShuffleHotKey = key;                          Domain.Settings.Instance.ShuffleHotKeyModifier = modifier;                            if (key != Key.None)                              ViewModelLocator.Main.HotKeyManager.RegisterHotkey(modifier' key' h =>                              {                                  ViewModelLocator.Main.Shuffle = !ViewModelLocator.Main.Shuffle;                              });                          break;                          case "Repeat":                          if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.RepeatHotKeyModifier' Domain.Settings.Instance.RepeatHotKey))                          {                              ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.RepeatHotKeyModifier' Domain.Settings.Instance.RepeatHotKey);                          }                            Domain.Settings.Instance.RepeatHotKey = key;                          Domain.Settings.Instance.RepeatHotKeyModifier = modifier;                            if (key != Key.None)                              ViewModelLocator.Main.HotKeyManager.RegisterHotkey(modifier' key' h =>                              {                                  ViewModelLocator.Main.Repeat = !ViewModelLocator.Main.Repeat;                              });                          break;                        case "IncreaseVolume":                          if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.IncreaseVolumeHotKeyModifier' Domain.Settings.Instance.IncreaseVolumeHotKey))                          {                              ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.IncreaseVolumeHotKeyModifier' Domain.Settings.Instance.IncreaseVolumeHotKey);                          }                            Domain.Settings.Instance.IncreaseVolumeHotKey = key;                          Domain.Settings.Instance.IncreaseVolumeHotKeyModifier = modifier;                            if (key != Key.None)                              ViewModelLocator.Main.HotKeyManager.RegisterHotkey(modifier' key' h =>                              {                                  ViewModelLocator.Main.Volume += 5;                              });                          break;                        case "DecreaseVolume":                          if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.DecreaseVolumeHotKeyModifier' Domain.Settings.Instance.DecreaseVolumeHotKey))                          {                              ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.DecreaseVolumeHotKeyModifier' Domain.Settings.Instance.DecreaseVolumeHotKey);                          }                            Domain.Settings.Instance.DecreaseVolumeHotKey = key;                          Domain.Settings.Instance.DecreaseVolumeHotKeyModifier = modifier;                            if (key != Key.None)                              ViewModelLocator.Main.HotKeyManager.RegisterHotkey(modifier' key' h =>                              {                                  ViewModelLocator.Main.Volume -= 5;                              });                          break;                        case "ShowHide":                          if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.ShowHideHotKeyModifier' Domain.Settings.Instance.ShowHideHotKey))                          {                              ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.ShowHideHotKeyModifier' Domain.Settings.Instance.ShowHideHotKey);                          }                            Domain.Settings.Instance.ShowHideHotKey = key;                          Domain.Settings.Instance.ShowHideHotKeyModifier = modifier;                            if (key != Key.None)                              ViewModelLocator.Main.HotKeyManager.RegisterHotkey(modifier' key' h =>                              {                                  if (Application.Current.MainWindow.WindowState != WindowState.Minimized)                                      Application.Current.MainWindow.WindowState = WindowState.Minimized;                                  else                                      Application.Current.MainWindow.WindowState = WindowState.Normal;                              });                          break;                        case "FastForward":                          if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.FastForwardHotKeyModifier' Domain.Settings.Instance.FastForwardHotKey))                          {                              ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.FastForwardHotKeyModifier' Domain.Settings.Instance.FastForwardHotKey);                          }                            Domain.Settings.Instance.FastForwardHotKey = key;                          Domain.Settings.Instance.FastForwardHotKeyModifier = modifier;                            if (key != Key.None)                              ViewModelLocator.Main.HotKeyManager.RegisterHotkey(modifier' key' h => AudioService.FastForward(7));                          break;                        case "Rewind":                          if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.RewindHotKeyModifier' Domain.Settings.Instance.RewindHotKey))                          {                              ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.RewindHotKeyModifier' Domain.Settings.Instance.RewindHotKey);                          }                            Domain.Settings.Instance.RewindHotKey = key;                          Domain.Settings.Instance.RewindHotKeyModifier = modifier;                            if (key != Key.None)                              ViewModelLocator.Main.HotKeyManager.RegisterHotkey(modifier' key' h => AudioService.Rewind(7));                          break;                  }
Magic Number,Meridian.ViewModel,SettingsViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\SettingsViewModel.cs,SaveSettings,The following statement contains a magic number: switch (settingsHotkey.Id)                  {                      case "Next":                          if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.NextHotKeyModifier' Domain.Settings.Instance.NextHotKey))                          {                              ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.NextHotKeyModifier' Domain.Settings.Instance.NextHotKey);                          }                            Domain.Settings.Instance.NextHotKey = key;                          Domain.Settings.Instance.NextHotKeyModifier = modifier;                            if (key != Key.None)                              ViewModelLocator.Main.HotKeyManager.RegisterHotkey(modifier' key' h => AudioService.SkipNext());                              break;                        case "Prev":                          if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.PrevHotKeyModifier' Domain.Settings.Instance.PrevHotKey))                          {                              ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.PrevHotKeyModifier' Domain.Settings.Instance.PrevHotKey);                          }                            Domain.Settings.Instance.PrevHotKey = key;                          Domain.Settings.Instance.PrevHotKeyModifier = modifier;                            if (key != Key.None)                              ViewModelLocator.Main.HotKeyManager.RegisterHotkey(modifier' key' h => AudioService.Prev());                          break;                        case "PlayPause":                          if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.PlayPauseHotKeyModifier' Domain.Settings.Instance.PlayPauseHotKey))                          {                              ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.PlayPauseHotKeyModifier' Domain.Settings.Instance.PlayPauseHotKey);                          }                            Domain.Settings.Instance.PlayPauseHotKey = key;                          Domain.Settings.Instance.PlayPauseHotKeyModifier = modifier;                            if (key != Key.None)                              ViewModelLocator.Main.HotKeyManager.RegisterHotkey(modifier' key' h =>                              {                                  if (AudioService.IsPlaying)                                      AudioService.Pause();                                  else AudioService.Play();                              });                          break;                        case "LikeDislike":                          if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.LikeDislikeHotKeyModifier' Domain.Settings.Instance.LikeDislikeHotKey))                          {                              ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.LikeDislikeHotKeyModifier' Domain.Settings.Instance.LikeDislikeHotKey);                          }                            Domain.Settings.Instance.LikeDislikeHotKey = key;                          Domain.Settings.Instance.LikeDislikeHotKeyModifier = modifier;                            if (key != Key.None)                              ViewModelLocator.Main.HotKeyManager.RegisterHotkey(modifier' key' h =>                              {                                  if (AudioService.CurrentAudio is VkAudio)                                  {                                      ((VkAudio)AudioService.CurrentAudio).IsAddedByCurrentUser =                                          !((VkAudio)AudioService.CurrentAudio).IsAddedByCurrentUser;                                      ViewModelLocator.Main.AddRemoveAudioCommand.Execute(AudioService.CurrentAudio);                                  }                              });                          break;                        case "Shuffle":                          if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.ShuffleHotKeyModifier' Domain.Settings.Instance.ShuffleHotKey))                          {                              ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.ShuffleHotKeyModifier' Domain.Settings.Instance.ShuffleHotKey);                          }                            Domain.Settings.Instance.ShuffleHotKey = key;                          Domain.Settings.Instance.ShuffleHotKeyModifier = modifier;                            if (key != Key.None)                              ViewModelLocator.Main.HotKeyManager.RegisterHotkey(modifier' key' h =>                              {                                  ViewModelLocator.Main.Shuffle = !ViewModelLocator.Main.Shuffle;                              });                          break;                          case "Repeat":                          if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.RepeatHotKeyModifier' Domain.Settings.Instance.RepeatHotKey))                          {                              ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.RepeatHotKeyModifier' Domain.Settings.Instance.RepeatHotKey);                          }                            Domain.Settings.Instance.RepeatHotKey = key;                          Domain.Settings.Instance.RepeatHotKeyModifier = modifier;                            if (key != Key.None)                              ViewModelLocator.Main.HotKeyManager.RegisterHotkey(modifier' key' h =>                              {                                  ViewModelLocator.Main.Repeat = !ViewModelLocator.Main.Repeat;                              });                          break;                        case "IncreaseVolume":                          if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.IncreaseVolumeHotKeyModifier' Domain.Settings.Instance.IncreaseVolumeHotKey))                          {                              ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.IncreaseVolumeHotKeyModifier' Domain.Settings.Instance.IncreaseVolumeHotKey);                          }                            Domain.Settings.Instance.IncreaseVolumeHotKey = key;                          Domain.Settings.Instance.IncreaseVolumeHotKeyModifier = modifier;                            if (key != Key.None)                              ViewModelLocator.Main.HotKeyManager.RegisterHotkey(modifier' key' h =>                              {                                  ViewModelLocator.Main.Volume += 5;                              });                          break;                        case "DecreaseVolume":                          if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.DecreaseVolumeHotKeyModifier' Domain.Settings.Instance.DecreaseVolumeHotKey))                          {                              ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.DecreaseVolumeHotKeyModifier' Domain.Settings.Instance.DecreaseVolumeHotKey);                          }                            Domain.Settings.Instance.DecreaseVolumeHotKey = key;                          Domain.Settings.Instance.DecreaseVolumeHotKeyModifier = modifier;                            if (key != Key.None)                              ViewModelLocator.Main.HotKeyManager.RegisterHotkey(modifier' key' h =>                              {                                  ViewModelLocator.Main.Volume -= 5;                              });                          break;                        case "ShowHide":                          if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.ShowHideHotKeyModifier' Domain.Settings.Instance.ShowHideHotKey))                          {                              ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.ShowHideHotKeyModifier' Domain.Settings.Instance.ShowHideHotKey);                          }                            Domain.Settings.Instance.ShowHideHotKey = key;                          Domain.Settings.Instance.ShowHideHotKeyModifier = modifier;                            if (key != Key.None)                              ViewModelLocator.Main.HotKeyManager.RegisterHotkey(modifier' key' h =>                              {                                  if (Application.Current.MainWindow.WindowState != WindowState.Minimized)                                      Application.Current.MainWindow.WindowState = WindowState.Minimized;                                  else                                      Application.Current.MainWindow.WindowState = WindowState.Normal;                              });                          break;                        case "FastForward":                          if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.FastForwardHotKeyModifier' Domain.Settings.Instance.FastForwardHotKey))                          {                              ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.FastForwardHotKeyModifier' Domain.Settings.Instance.FastForwardHotKey);                          }                            Domain.Settings.Instance.FastForwardHotKey = key;                          Domain.Settings.Instance.FastForwardHotKeyModifier = modifier;                            if (key != Key.None)                              ViewModelLocator.Main.HotKeyManager.RegisterHotkey(modifier' key' h => AudioService.FastForward(7));                          break;                        case "Rewind":                          if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.RewindHotKeyModifier' Domain.Settings.Instance.RewindHotKey))                          {                              ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.RewindHotKeyModifier' Domain.Settings.Instance.RewindHotKey);                          }                            Domain.Settings.Instance.RewindHotKey = key;                          Domain.Settings.Instance.RewindHotKeyModifier = modifier;                            if (key != Key.None)                              ViewModelLocator.Main.HotKeyManager.RegisterHotkey(modifier' key' h => AudioService.Rewind(7));                          break;                  }
Magic Number,Meridian.Flyouts,AddSocietyFlyout,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\AddSocietyFlyout.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.rootElement = ((Meridian.Flyouts.AddSocietyFlyout)(target));              return;              case 2:              this.Title = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:                            #line 60 "..\..\..\..\View\Flyouts\AddSocietyFlyout.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CloseButtonClick);                            #line default              #line hidden              return;              }
Magic Number,Meridian.Flyouts,AddSocietyFlyout,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\AddSocietyFlyout.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.rootElement = ((Meridian.Flyouts.AddSocietyFlyout)(target));              return;              case 2:              this.Title = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:                            #line 60 "..\..\..\..\View\Flyouts\AddSocietyFlyout.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CloseButtonClick);                            #line default              #line hidden              return;              }
Magic Number,Meridian.View.Compact,CompactLandscapeView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Compact\CompactLandscapeView.xaml.cs,CompactView_OnMouseMove,The following statement contains a magic number: e.LeftButton == MouseButtonState.Pressed && e.GetPosition(this).Y < 30
Magic Number,Meridian.View.Compact,CompactLandscapeView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Compact\CompactLandscapeView.xaml.cs,CompactView_OnLoaded,The following statement contains a magic number: BackgroundArtControl.Effect = Domain.Settings.Instance.BlurBackground ? new BlurEffect() { RenderingBias = RenderingBias.Quality' Radius = 35 } : null;
Magic Number,Meridian.View.Compact,CompactLandscapeView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Compact\CompactLandscapeView.xaml.cs,UIElement_OnMouseWheel,The following statement contains a magic number: ViewModelLocator.Main.Volume -= 5;
Magic Number,Meridian.View.Compact,CompactView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Compact\CompactView.xaml.cs,CompactView_OnMouseMove,The following statement contains a magic number: e.LeftButton == MouseButtonState.Pressed && e.GetPosition(this).Y < 30
Magic Number,Meridian.View.Compact,CompactView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Compact\CompactView.xaml.cs,UIElement_OnMouseWheel,The following statement contains a magic number: ViewModelLocator.Main.Volume -= 5;
Magic Number,Meridian.View.Flyouts,WebValidationView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\WebValidationView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 10 "..\..\..\..\View\Flyouts\WebValidationView.xaml"              ((Meridian.View.Flyouts.WebValidationView)(target)).Loaded += new System.Windows.RoutedEventHandler(this.WebValidationView_OnLoaded);                            #line default              #line hidden              return;              case 2:              this.Browser = ((System.Windows.Controls.WebBrowser)(target));                            #line 16 "..\..\..\..\View\Flyouts\WebValidationView.xaml"              this.Browser.Navigating += new System.Windows.Navigation.NavigatingCancelEventHandler(this.Browser_OnNavigating);                            #line default              #line hidden                            #line 16 "..\..\..\..\View\Flyouts\WebValidationView.xaml"              this.Browser.Navigated += new System.Windows.Navigation.NavigatedEventHandler(this.Browser_OnNavigated);                            #line default              #line hidden              return;              case 3:              this.ProgressBar = ((System.Windows.Controls.ProgressBar)(target));              return;              case 4:                            #line 20 "..\..\..\..\View\Flyouts\WebValidationView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.ButtonBase_OnClick);                            #line default              #line hidden              return;              }
Magic Number,Meridian.View.Flyouts,WebValidationView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\WebValidationView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 10 "..\..\..\..\View\Flyouts\WebValidationView.xaml"              ((Meridian.View.Flyouts.WebValidationView)(target)).Loaded += new System.Windows.RoutedEventHandler(this.WebValidationView_OnLoaded);                            #line default              #line hidden              return;              case 2:              this.Browser = ((System.Windows.Controls.WebBrowser)(target));                            #line 16 "..\..\..\..\View\Flyouts\WebValidationView.xaml"              this.Browser.Navigating += new System.Windows.Navigation.NavigatingCancelEventHandler(this.Browser_OnNavigating);                            #line default              #line hidden                            #line 16 "..\..\..\..\View\Flyouts\WebValidationView.xaml"              this.Browser.Navigated += new System.Windows.Navigation.NavigatedEventHandler(this.Browser_OnNavigated);                            #line default              #line hidden              return;              case 3:              this.ProgressBar = ((System.Windows.Controls.ProgressBar)(target));              return;              case 4:                            #line 20 "..\..\..\..\View\Flyouts\WebValidationView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.ButtonBase_OnClick);                            #line default              #line hidden              return;              }
Magic Number,Meridian.View.Flyouts,WebValidationView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\WebValidationView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 10 "..\..\..\..\View\Flyouts\WebValidationView.xaml"              ((Meridian.View.Flyouts.WebValidationView)(target)).Loaded += new System.Windows.RoutedEventHandler(this.WebValidationView_OnLoaded);                            #line default              #line hidden              return;              case 2:              this.Browser = ((System.Windows.Controls.WebBrowser)(target));                            #line 16 "..\..\..\..\View\Flyouts\WebValidationView.xaml"              this.Browser.Navigating += new System.Windows.Navigation.NavigatingCancelEventHandler(this.Browser_OnNavigating);                            #line default              #line hidden                            #line 16 "..\..\..\..\View\Flyouts\WebValidationView.xaml"              this.Browser.Navigated += new System.Windows.Navigation.NavigatedEventHandler(this.Browser_OnNavigated);                            #line default              #line hidden              return;              case 3:              this.ProgressBar = ((System.Windows.Controls.ProgressBar)(target));              return;              case 4:                            #line 20 "..\..\..\..\View\Flyouts\WebValidationView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.ButtonBase_OnClick);                            #line default              #line hidden              return;              }
Magic Number,Meridian.View.Flyouts,CaptchaRequestView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\CaptchaRequestView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 10 "..\..\..\..\View\Flyouts\CaptchaRequestView.xaml"              ((Meridian.View.Flyouts.CaptchaRequestView)(target)).Loaded += new System.Windows.RoutedEventHandler(this.CaptchaRequestView_OnLoaded);                            #line default              #line hidden              return;              case 2:              this.Image = ((System.Windows.Controls.Image)(target));              return;              case 3:              this.CaptchaTextBox = ((System.Windows.Controls.TextBox)(target));                            #line 20 "..\..\..\..\View\Flyouts\CaptchaRequestView.xaml"              this.CaptchaTextBox.KeyUp += new System.Windows.Input.KeyEventHandler(this.CaptchaTextBox_OnKeyUp);                            #line default              #line hidden              return;              case 4:                            #line 24 "..\..\..\..\View\Flyouts\CaptchaRequestView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SaveButtonClick);                            #line default              #line hidden              return;              case 5:                            #line 25 "..\..\..\..\View\Flyouts\CaptchaRequestView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CloseButtonClick);                            #line default              #line hidden              return;              }
Magic Number,Meridian.View.Flyouts,CaptchaRequestView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\CaptchaRequestView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 10 "..\..\..\..\View\Flyouts\CaptchaRequestView.xaml"              ((Meridian.View.Flyouts.CaptchaRequestView)(target)).Loaded += new System.Windows.RoutedEventHandler(this.CaptchaRequestView_OnLoaded);                            #line default              #line hidden              return;              case 2:              this.Image = ((System.Windows.Controls.Image)(target));              return;              case 3:              this.CaptchaTextBox = ((System.Windows.Controls.TextBox)(target));                            #line 20 "..\..\..\..\View\Flyouts\CaptchaRequestView.xaml"              this.CaptchaTextBox.KeyUp += new System.Windows.Input.KeyEventHandler(this.CaptchaTextBox_OnKeyUp);                            #line default              #line hidden              return;              case 4:                            #line 24 "..\..\..\..\View\Flyouts\CaptchaRequestView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SaveButtonClick);                            #line default              #line hidden              return;              case 5:                            #line 25 "..\..\..\..\View\Flyouts\CaptchaRequestView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CloseButtonClick);                            #line default              #line hidden              return;              }
Magic Number,Meridian.View.Flyouts,CaptchaRequestView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\CaptchaRequestView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 10 "..\..\..\..\View\Flyouts\CaptchaRequestView.xaml"              ((Meridian.View.Flyouts.CaptchaRequestView)(target)).Loaded += new System.Windows.RoutedEventHandler(this.CaptchaRequestView_OnLoaded);                            #line default              #line hidden              return;              case 2:              this.Image = ((System.Windows.Controls.Image)(target));              return;              case 3:              this.CaptchaTextBox = ((System.Windows.Controls.TextBox)(target));                            #line 20 "..\..\..\..\View\Flyouts\CaptchaRequestView.xaml"              this.CaptchaTextBox.KeyUp += new System.Windows.Input.KeyEventHandler(this.CaptchaTextBox_OnKeyUp);                            #line default              #line hidden              return;              case 4:                            #line 24 "..\..\..\..\View\Flyouts\CaptchaRequestView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SaveButtonClick);                            #line default              #line hidden              return;              case 5:                            #line 25 "..\..\..\..\View\Flyouts\CaptchaRequestView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CloseButtonClick);                            #line default              #line hidden              return;              }
Magic Number,Meridian.View.Flyouts,CaptchaRequestView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\CaptchaRequestView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 10 "..\..\..\..\View\Flyouts\CaptchaRequestView.xaml"              ((Meridian.View.Flyouts.CaptchaRequestView)(target)).Loaded += new System.Windows.RoutedEventHandler(this.CaptchaRequestView_OnLoaded);                            #line default              #line hidden              return;              case 2:              this.Image = ((System.Windows.Controls.Image)(target));              return;              case 3:              this.CaptchaTextBox = ((System.Windows.Controls.TextBox)(target));                            #line 20 "..\..\..\..\View\Flyouts\CaptchaRequestView.xaml"              this.CaptchaTextBox.KeyUp += new System.Windows.Input.KeyEventHandler(this.CaptchaTextBox_OnKeyUp);                            #line default              #line hidden              return;              case 4:                            #line 24 "..\..\..\..\View\Flyouts\CaptchaRequestView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SaveButtonClick);                            #line default              #line hidden              return;              case 5:                            #line 25 "..\..\..\..\View\Flyouts\CaptchaRequestView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CloseButtonClick);                            #line default              #line hidden              return;              }
Magic Number,Meridian.View.Flyouts,CommonErrorView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\CommonErrorView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.TitleTextBlock = ((System.Windows.Controls.TextBlock)(target));              return;              case 2:              this.DescriptionTextBlock = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.RestartButton = ((System.Windows.Controls.Button)(target));                            #line 19 "..\..\..\..\View\Flyouts\CommonErrorView.xaml"              this.RestartButton.Click += new System.Windows.RoutedEventHandler(this.RestartButton_OnClick);                            #line default              #line hidden              return;              case 4:              this.CloseButton = ((System.Windows.Controls.Button)(target));                            #line 21 "..\..\..\..\View\Flyouts\CommonErrorView.xaml"              this.CloseButton.Click += new System.Windows.RoutedEventHandler(this.CloseButton_OnClick);                            #line default              #line hidden              return;              }
Magic Number,Meridian.View.Flyouts,CommonErrorView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\CommonErrorView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.TitleTextBlock = ((System.Windows.Controls.TextBlock)(target));              return;              case 2:              this.DescriptionTextBlock = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.RestartButton = ((System.Windows.Controls.Button)(target));                            #line 19 "..\..\..\..\View\Flyouts\CommonErrorView.xaml"              this.RestartButton.Click += new System.Windows.RoutedEventHandler(this.RestartButton_OnClick);                            #line default              #line hidden              return;              case 4:              this.CloseButton = ((System.Windows.Controls.Button)(target));                            #line 21 "..\..\..\..\View\Flyouts\CommonErrorView.xaml"              this.CloseButton.Click += new System.Windows.RoutedEventHandler(this.CloseButton_OnClick);                            #line default              #line hidden              return;              }
Magic Number,Meridian.View.Flyouts,CommonErrorView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\CommonErrorView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.TitleTextBlock = ((System.Windows.Controls.TextBlock)(target));              return;              case 2:              this.DescriptionTextBlock = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.RestartButton = ((System.Windows.Controls.Button)(target));                            #line 19 "..\..\..\..\View\Flyouts\CommonErrorView.xaml"              this.RestartButton.Click += new System.Windows.RoutedEventHandler(this.RestartButton_OnClick);                            #line default              #line hidden              return;              case 4:              this.CloseButton = ((System.Windows.Controls.Button)(target));                            #line 21 "..\..\..\..\View\Flyouts\CommonErrorView.xaml"              this.CloseButton.Click += new System.Windows.RoutedEventHandler(this.CloseButton_OnClick);                            #line default              #line hidden              return;              }
Magic Number,Meridian.View.Flyouts,CreateRadioStationView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\CreateRadioStationView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.rootElement = ((Meridian.View.Flyouts.CreateRadioStationView)(target));                            #line 10 "..\..\..\..\View\Flyouts\CreateRadioStationView.xaml"              this.rootElement.Loaded += new System.Windows.RoutedEventHandler(this.CreateRadioStationView_OnLoaded);                            #line default              #line hidden              return;              case 2:              this.Title = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.TitleTextBox = ((System.Windows.Controls.TextBox)(target));                            #line 27 "..\..\..\..\View\Flyouts\CreateRadioStationView.xaml"              this.TitleTextBox.KeyUp += new System.Windows.Input.KeyEventHandler(this.TitleTextBox_OnKeyUp);                            #line default              #line hidden              return;              case 4:                            #line 28 "..\..\..\..\View\Flyouts\CreateRadioStationView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.AddButton_Click);                            #line default              #line hidden              return;              case 5:                            #line 52 "..\..\..\..\View\Flyouts\CreateRadioStationView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SaveButtonClick);                            #line default              #line hidden              return;              case 6:                            #line 53 "..\..\..\..\View\Flyouts\CreateRadioStationView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CloseButtonClick);                            #line default              #line hidden              return;              case 7:              this.ProgressGrid = ((System.Windows.Controls.Grid)(target));              return;              case 8:              this.ProgressBar = ((System.Windows.Controls.ProgressBar)(target));              return;              }
Magic Number,Meridian.View.Flyouts,CreateRadioStationView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\CreateRadioStationView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.rootElement = ((Meridian.View.Flyouts.CreateRadioStationView)(target));                            #line 10 "..\..\..\..\View\Flyouts\CreateRadioStationView.xaml"              this.rootElement.Loaded += new System.Windows.RoutedEventHandler(this.CreateRadioStationView_OnLoaded);                            #line default              #line hidden              return;              case 2:              this.Title = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.TitleTextBox = ((System.Windows.Controls.TextBox)(target));                            #line 27 "..\..\..\..\View\Flyouts\CreateRadioStationView.xaml"              this.TitleTextBox.KeyUp += new System.Windows.Input.KeyEventHandler(this.TitleTextBox_OnKeyUp);                            #line default              #line hidden              return;              case 4:                            #line 28 "..\..\..\..\View\Flyouts\CreateRadioStationView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.AddButton_Click);                            #line default              #line hidden              return;              case 5:                            #line 52 "..\..\..\..\View\Flyouts\CreateRadioStationView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SaveButtonClick);                            #line default              #line hidden              return;              case 6:                            #line 53 "..\..\..\..\View\Flyouts\CreateRadioStationView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CloseButtonClick);                            #line default              #line hidden              return;              case 7:              this.ProgressGrid = ((System.Windows.Controls.Grid)(target));              return;              case 8:              this.ProgressBar = ((System.Windows.Controls.ProgressBar)(target));              return;              }
Magic Number,Meridian.View.Flyouts,CreateRadioStationView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\CreateRadioStationView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.rootElement = ((Meridian.View.Flyouts.CreateRadioStationView)(target));                            #line 10 "..\..\..\..\View\Flyouts\CreateRadioStationView.xaml"              this.rootElement.Loaded += new System.Windows.RoutedEventHandler(this.CreateRadioStationView_OnLoaded);                            #line default              #line hidden              return;              case 2:              this.Title = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.TitleTextBox = ((System.Windows.Controls.TextBox)(target));                            #line 27 "..\..\..\..\View\Flyouts\CreateRadioStationView.xaml"              this.TitleTextBox.KeyUp += new System.Windows.Input.KeyEventHandler(this.TitleTextBox_OnKeyUp);                            #line default              #line hidden              return;              case 4:                            #line 28 "..\..\..\..\View\Flyouts\CreateRadioStationView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.AddButton_Click);                            #line default              #line hidden              return;              case 5:                            #line 52 "..\..\..\..\View\Flyouts\CreateRadioStationView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SaveButtonClick);                            #line default              #line hidden              return;              case 6:                            #line 53 "..\..\..\..\View\Flyouts\CreateRadioStationView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CloseButtonClick);                            #line default              #line hidden              return;              case 7:              this.ProgressGrid = ((System.Windows.Controls.Grid)(target));              return;              case 8:              this.ProgressBar = ((System.Windows.Controls.ProgressBar)(target));              return;              }
Magic Number,Meridian.View.Flyouts,CreateRadioStationView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\CreateRadioStationView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.rootElement = ((Meridian.View.Flyouts.CreateRadioStationView)(target));                            #line 10 "..\..\..\..\View\Flyouts\CreateRadioStationView.xaml"              this.rootElement.Loaded += new System.Windows.RoutedEventHandler(this.CreateRadioStationView_OnLoaded);                            #line default              #line hidden              return;              case 2:              this.Title = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.TitleTextBox = ((System.Windows.Controls.TextBox)(target));                            #line 27 "..\..\..\..\View\Flyouts\CreateRadioStationView.xaml"              this.TitleTextBox.KeyUp += new System.Windows.Input.KeyEventHandler(this.TitleTextBox_OnKeyUp);                            #line default              #line hidden              return;              case 4:                            #line 28 "..\..\..\..\View\Flyouts\CreateRadioStationView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.AddButton_Click);                            #line default              #line hidden              return;              case 5:                            #line 52 "..\..\..\..\View\Flyouts\CreateRadioStationView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SaveButtonClick);                            #line default              #line hidden              return;              case 6:                            #line 53 "..\..\..\..\View\Flyouts\CreateRadioStationView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CloseButtonClick);                            #line default              #line hidden              return;              case 7:              this.ProgressGrid = ((System.Windows.Controls.Grid)(target));              return;              case 8:              this.ProgressBar = ((System.Windows.Controls.ProgressBar)(target));              return;              }
Magic Number,Meridian.View.Flyouts,CreateRadioStationView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\CreateRadioStationView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.rootElement = ((Meridian.View.Flyouts.CreateRadioStationView)(target));                            #line 10 "..\..\..\..\View\Flyouts\CreateRadioStationView.xaml"              this.rootElement.Loaded += new System.Windows.RoutedEventHandler(this.CreateRadioStationView_OnLoaded);                            #line default              #line hidden              return;              case 2:              this.Title = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.TitleTextBox = ((System.Windows.Controls.TextBox)(target));                            #line 27 "..\..\..\..\View\Flyouts\CreateRadioStationView.xaml"              this.TitleTextBox.KeyUp += new System.Windows.Input.KeyEventHandler(this.TitleTextBox_OnKeyUp);                            #line default              #line hidden              return;              case 4:                            #line 28 "..\..\..\..\View\Flyouts\CreateRadioStationView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.AddButton_Click);                            #line default              #line hidden              return;              case 5:                            #line 52 "..\..\..\..\View\Flyouts\CreateRadioStationView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SaveButtonClick);                            #line default              #line hidden              return;              case 6:                            #line 53 "..\..\..\..\View\Flyouts\CreateRadioStationView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CloseButtonClick);                            #line default              #line hidden              return;              case 7:              this.ProgressGrid = ((System.Windows.Controls.Grid)(target));              return;              case 8:              this.ProgressBar = ((System.Windows.Controls.ProgressBar)(target));              return;              }
Magic Number,Meridian.View.Flyouts,CreateRadioStationView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\CreateRadioStationView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.rootElement = ((Meridian.View.Flyouts.CreateRadioStationView)(target));                            #line 10 "..\..\..\..\View\Flyouts\CreateRadioStationView.xaml"              this.rootElement.Loaded += new System.Windows.RoutedEventHandler(this.CreateRadioStationView_OnLoaded);                            #line default              #line hidden              return;              case 2:              this.Title = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.TitleTextBox = ((System.Windows.Controls.TextBox)(target));                            #line 27 "..\..\..\..\View\Flyouts\CreateRadioStationView.xaml"              this.TitleTextBox.KeyUp += new System.Windows.Input.KeyEventHandler(this.TitleTextBox_OnKeyUp);                            #line default              #line hidden              return;              case 4:                            #line 28 "..\..\..\..\View\Flyouts\CreateRadioStationView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.AddButton_Click);                            #line default              #line hidden              return;              case 5:                            #line 52 "..\..\..\..\View\Flyouts\CreateRadioStationView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SaveButtonClick);                            #line default              #line hidden              return;              case 6:                            #line 53 "..\..\..\..\View\Flyouts\CreateRadioStationView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CloseButtonClick);                            #line default              #line hidden              return;              case 7:              this.ProgressGrid = ((System.Windows.Controls.Grid)(target));              return;              case 8:              this.ProgressBar = ((System.Windows.Controls.ProgressBar)(target));              return;              }
Magic Number,Meridian.View.Flyouts,CreateRadioStationView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\CreateRadioStationView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.rootElement = ((Meridian.View.Flyouts.CreateRadioStationView)(target));                            #line 10 "..\..\..\..\View\Flyouts\CreateRadioStationView.xaml"              this.rootElement.Loaded += new System.Windows.RoutedEventHandler(this.CreateRadioStationView_OnLoaded);                            #line default              #line hidden              return;              case 2:              this.Title = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.TitleTextBox = ((System.Windows.Controls.TextBox)(target));                            #line 27 "..\..\..\..\View\Flyouts\CreateRadioStationView.xaml"              this.TitleTextBox.KeyUp += new System.Windows.Input.KeyEventHandler(this.TitleTextBox_OnKeyUp);                            #line default              #line hidden              return;              case 4:                            #line 28 "..\..\..\..\View\Flyouts\CreateRadioStationView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.AddButton_Click);                            #line default              #line hidden              return;              case 5:                            #line 52 "..\..\..\..\View\Flyouts\CreateRadioStationView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SaveButtonClick);                            #line default              #line hidden              return;              case 6:                            #line 53 "..\..\..\..\View\Flyouts\CreateRadioStationView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CloseButtonClick);                            #line default              #line hidden              return;              case 7:              this.ProgressGrid = ((System.Windows.Controls.Grid)(target));              return;              case 8:              this.ProgressBar = ((System.Windows.Controls.ProgressBar)(target));              return;              }
Magic Number,Meridian.View.Flyouts,EditAlbumView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\EditAlbumView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Title = ((System.Windows.Controls.TextBlock)(target));              return;              case 2:              this.TitleTextBox = ((System.Windows.Controls.TextBox)(target));              return;              case 3:                            #line 23 "..\..\..\..\View\Flyouts\EditAlbumView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SaveButtonClick);                            #line default              #line hidden              return;              case 4:                            #line 24 "..\..\..\..\View\Flyouts\EditAlbumView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CloseButtonClick);                            #line default              #line hidden              return;              }
Magic Number,Meridian.View.Flyouts,EditAlbumView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\EditAlbumView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Title = ((System.Windows.Controls.TextBlock)(target));              return;              case 2:              this.TitleTextBox = ((System.Windows.Controls.TextBox)(target));              return;              case 3:                            #line 23 "..\..\..\..\View\Flyouts\EditAlbumView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SaveButtonClick);                            #line default              #line hidden              return;              case 4:                            #line 24 "..\..\..\..\View\Flyouts\EditAlbumView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CloseButtonClick);                            #line default              #line hidden              return;              }
Magic Number,Meridian.View.Flyouts,EditAlbumView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\EditAlbumView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Title = ((System.Windows.Controls.TextBlock)(target));              return;              case 2:              this.TitleTextBox = ((System.Windows.Controls.TextBox)(target));              return;              case 3:                            #line 23 "..\..\..\..\View\Flyouts\EditAlbumView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SaveButtonClick);                            #line default              #line hidden              return;              case 4:                            #line 24 "..\..\..\..\View\Flyouts\EditAlbumView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CloseButtonClick);                            #line default              #line hidden              return;              }
Magic Number,Meridian.View.Flyouts,AddToAlbumView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\AddToAlbumView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.rootElement = ((Meridian.View.Flyouts.AddToAlbumView)(target));                            #line 10 "..\..\..\..\View\Flyouts\AddToAlbumView.xaml"              this.rootElement.Loaded += new System.Windows.RoutedEventHandler(this.AddToAlbumView_OnLoaded);                            #line default              #line hidden              return;              case 2:              this.Title = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.AlbumsComboBox = ((System.Windows.Controls.ComboBox)(target));              return;              case 4:                            #line 24 "..\..\..\..\View\Flyouts\AddToAlbumView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.AddButtonClick);                            #line default              #line hidden              return;              case 5:                            #line 25 "..\..\..\..\View\Flyouts\AddToAlbumView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CloseButtonClick);                            #line default              #line hidden              return;              }
Magic Number,Meridian.View.Flyouts,AddToAlbumView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\AddToAlbumView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.rootElement = ((Meridian.View.Flyouts.AddToAlbumView)(target));                            #line 10 "..\..\..\..\View\Flyouts\AddToAlbumView.xaml"              this.rootElement.Loaded += new System.Windows.RoutedEventHandler(this.AddToAlbumView_OnLoaded);                            #line default              #line hidden              return;              case 2:              this.Title = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.AlbumsComboBox = ((System.Windows.Controls.ComboBox)(target));              return;              case 4:                            #line 24 "..\..\..\..\View\Flyouts\AddToAlbumView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.AddButtonClick);                            #line default              #line hidden              return;              case 5:                            #line 25 "..\..\..\..\View\Flyouts\AddToAlbumView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CloseButtonClick);                            #line default              #line hidden              return;              }
Magic Number,Meridian.View.Flyouts,AddToAlbumView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\AddToAlbumView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.rootElement = ((Meridian.View.Flyouts.AddToAlbumView)(target));                            #line 10 "..\..\..\..\View\Flyouts\AddToAlbumView.xaml"              this.rootElement.Loaded += new System.Windows.RoutedEventHandler(this.AddToAlbumView_OnLoaded);                            #line default              #line hidden              return;              case 2:              this.Title = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.AlbumsComboBox = ((System.Windows.Controls.ComboBox)(target));              return;              case 4:                            #line 24 "..\..\..\..\View\Flyouts\AddToAlbumView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.AddButtonClick);                            #line default              #line hidden              return;              case 5:                            #line 25 "..\..\..\..\View\Flyouts\AddToAlbumView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CloseButtonClick);                            #line default              #line hidden              return;              }
Magic Number,Meridian.View.Flyouts,AddToAlbumView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\AddToAlbumView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.rootElement = ((Meridian.View.Flyouts.AddToAlbumView)(target));                            #line 10 "..\..\..\..\View\Flyouts\AddToAlbumView.xaml"              this.rootElement.Loaded += new System.Windows.RoutedEventHandler(this.AddToAlbumView_OnLoaded);                            #line default              #line hidden              return;              case 2:              this.Title = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.AlbumsComboBox = ((System.Windows.Controls.ComboBox)(target));              return;              case 4:                            #line 24 "..\..\..\..\View\Flyouts\AddToAlbumView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.AddButtonClick);                            #line default              #line hidden              return;              case 5:                            #line 25 "..\..\..\..\View\Flyouts\AddToAlbumView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CloseButtonClick);                            #line default              #line hidden              return;              }
Magic Number,Meridian.View.Flyouts,CommonMessageView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\CommonMessageView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.rootElement = ((Meridian.View.Flyouts.CommonMessageView)(target));              return;              case 2:              this.OkButton = ((System.Windows.Controls.Button)(target));                            #line 20 "..\..\..\..\View\Flyouts\CommonMessageView.xaml"              this.OkButton.Click += new System.Windows.RoutedEventHandler(this.OkButton_OnClick);                            #line default              #line hidden              return;              }
Magic Number,Meridian.View.Flyouts,LoginLastFmMessageView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\LoginLastFmMessageView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 19 "..\..\..\..\View\Flyouts\LoginLastFmMessageView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SettingsButtonClick);                            #line default              #line hidden              return;              case 2:                            #line 20 "..\..\..\..\View\Flyouts\LoginLastFmMessageView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CancelButtonClick);                            #line default              #line hidden              return;              }
Magic Number,Meridian.View.Flyouts,LoginLastFmView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\LoginLastFmView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.LoginTextBox = ((System.Windows.Controls.TextBox)(target));                            #line 16 "..\..\..\..\View\Flyouts\LoginLastFmView.xaml"              this.LoginTextBox.KeyUp += new System.Windows.Input.KeyEventHandler(this.LoginTextBox_OnKeyUp);                            #line default              #line hidden              return;              case 2:              this.PasswordBox = ((Meridian.Controls.BindablePasswordBox)(target));              return;              }
Magic Number,Meridian.View.Flyouts,ShareView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\ShareView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.rootElement = ((Meridian.View.Flyouts.ShareView)(target));              return;              case 2:              this.ShareToUserCheckbox = ((System.Windows.Controls.RadioButton)(target));              return;              case 3:              this.ShareToSocietyCheckbox = ((System.Windows.Controls.RadioButton)(target));              return;              case 4:              this.ShareAsSocietyCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              }
Magic Number,Meridian.View.Flyouts,ShareView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\ShareView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.rootElement = ((Meridian.View.Flyouts.ShareView)(target));              return;              case 2:              this.ShareToUserCheckbox = ((System.Windows.Controls.RadioButton)(target));              return;              case 3:              this.ShareToSocietyCheckbox = ((System.Windows.Controls.RadioButton)(target));              return;              case 4:              this.ShareAsSocietyCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              }
Magic Number,Meridian.View.Flyouts,ShareView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\ShareView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.rootElement = ((Meridian.View.Flyouts.ShareView)(target));              return;              case 2:              this.ShareToUserCheckbox = ((System.Windows.Controls.RadioButton)(target));              return;              case 3:              this.ShareToSocietyCheckbox = ((System.Windows.Controls.RadioButton)(target));              return;              case 4:              this.ShareAsSocietyCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              }
Magic Number,Meridian.View.Flyouts,TellFriendsRequestView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\TellFriendsRequestView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.TellButton = ((System.Windows.Controls.Button)(target));                            #line 18 "..\..\..\..\View\Flyouts\TellFriendsRequestView.xaml"              this.TellButton.Click += new System.Windows.RoutedEventHandler(this.TellButton_OnClick);                            #line default              #line hidden              return;              case 2:              this.CancelButton = ((System.Windows.Controls.Button)(target));                            #line 20 "..\..\..\..\View\Flyouts\TellFriendsRequestView.xaml"              this.CancelButton.Click += new System.Windows.RoutedEventHandler(this.CancelButton_OnClick);                            #line default              #line hidden              return;              }
Magic Number,Meridian.View.Flyouts,TellResultView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\TellResultView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.GoToPostButton = ((System.Windows.Controls.Button)(target));                            #line 16 "..\..\..\..\View\Flyouts\TellResultView.xaml"              this.GoToPostButton.Click += new System.Windows.RoutedEventHandler(this.GoToPostButton_OnClick);                            #line default              #line hidden              return;              case 2:              this.CancelButton = ((System.Windows.Controls.Button)(target));                            #line 18 "..\..\..\..\View\Flyouts\TellResultView.xaml"              this.CancelButton.Click += new System.Windows.RoutedEventHandler(this.CancelButton_OnClick);                            #line default              #line hidden              return;              }
Magic Number,Meridian.View.Local,LocalAlbumView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Local\LocalAlbumView.xaml.cs,LocalAlbumView_OnLoaded,The following statement contains a magic number: BackgroundArtControl.Effect = Domain.Settings.Instance.BlurBackground ? new BlurEffect() { RenderingBias = RenderingBias.Quality' Radius = 80 } : null;
Magic Number,Meridian.View.Main,RadioView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Main\RadioView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.pageRoot = ((Meridian.View.Main.RadioView)(target));              return;              case 2:              this.RadioList = ((System.Windows.Controls.ListBox)(target));              return;              }
Magic Number,Meridian.View.Search,ArtistAlbumsView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Search\ArtistAlbumsView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.pageRoot = ((Meridian.View.Search.ArtistAlbumsView)(target));              return;              case 2:              this.HeaderMenuPopup = ((System.Windows.Controls.Primitives.Popup)(target));              return;              case 3:                            #line 38 "..\..\..\..\View\Search\ArtistAlbumsView.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 4:              this.HeaderButton = ((System.Windows.Controls.Primitives.ToggleButton)(target));              return;              }
Magic Number,Meridian.View.Search,ArtistAlbumsView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Search\ArtistAlbumsView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.pageRoot = ((Meridian.View.Search.ArtistAlbumsView)(target));              return;              case 2:              this.HeaderMenuPopup = ((System.Windows.Controls.Primitives.Popup)(target));              return;              case 3:                            #line 38 "..\..\..\..\View\Search\ArtistAlbumsView.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 4:              this.HeaderButton = ((System.Windows.Controls.Primitives.ToggleButton)(target));              return;              }
Magic Number,Meridian.View.Search,ArtistAlbumsView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Search\ArtistAlbumsView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.pageRoot = ((Meridian.View.Search.ArtistAlbumsView)(target));              return;              case 2:              this.HeaderMenuPopup = ((System.Windows.Controls.Primitives.Popup)(target));              return;              case 3:                            #line 38 "..\..\..\..\View\Search\ArtistAlbumsView.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 4:              this.HeaderButton = ((System.Windows.Controls.Primitives.ToggleButton)(target));              return;              }
Magic Number,Meridian.View.People,FriendsView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\People\FriendsView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.pageRoot = ((Meridian.View.People.FriendsView)(target));              return;              case 2:              this.LocalSearchItem = ((System.Windows.Controls.MenuItem)(target));                            #line 23 "..\..\..\..\View\People\FriendsView.xaml"              this.LocalSearchItem.Click += new System.Windows.RoutedEventHandler(this.LocalSearchItem_OnClick);                            #line default              #line hidden              return;              case 3:              this.LocalSearchBox = ((Meridian.Controls.LocalSearchControl)(target));              return;              }
Magic Number,Meridian.View.People,FriendsView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\People\FriendsView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.pageRoot = ((Meridian.View.People.FriendsView)(target));              return;              case 2:              this.LocalSearchItem = ((System.Windows.Controls.MenuItem)(target));                            #line 23 "..\..\..\..\View\People\FriendsView.xaml"              this.LocalSearchItem.Click += new System.Windows.RoutedEventHandler(this.LocalSearchItem_OnClick);                            #line default              #line hidden              return;              case 3:              this.LocalSearchBox = ((Meridian.Controls.LocalSearchControl)(target));              return;              }
Magic Number,Meridian.View.People,SocietiesView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\People\SocietiesView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.pageRoot = ((Meridian.View.People.SocietiesView)(target));              return;              case 2:              this.LocalSearchItem = ((System.Windows.Controls.MenuItem)(target));                            #line 24 "..\..\..\..\View\People\SocietiesView.xaml"              this.LocalSearchItem.Click += new System.Windows.RoutedEventHandler(this.LocalSearchItem_OnClick);                            #line default              #line hidden              return;              case 3:              this.LocalSearchBox = ((Meridian.Controls.LocalSearchControl)(target));              return;              }
Magic Number,Meridian.View.People,SocietiesView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\People\SocietiesView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.pageRoot = ((Meridian.View.People.SocietiesView)(target));              return;              case 2:              this.LocalSearchItem = ((System.Windows.Controls.MenuItem)(target));                            #line 24 "..\..\..\..\View\People\SocietiesView.xaml"              this.LocalSearchItem.Click += new System.Windows.RoutedEventHandler(this.LocalSearchItem_OnClick);                            #line default              #line hidden              return;              case 3:              this.LocalSearchBox = ((Meridian.Controls.LocalSearchControl)(target));              return;              }
Magic Number,Meridian.View.Settings,SettingsAboutView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Settings\SettingsAboutView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.SiteLink = ((System.Windows.Controls.TextBlock)(target));                            #line 37 "..\..\..\..\View\Settings\SettingsAboutView.xaml"              this.SiteLink.MouseLeftButtonUp += new System.Windows.Input.MouseButtonEventHandler(this.SiteLink_OnMouseLeftButtonUp);                            #line default              #line hidden              return;              case 2:              this.EchonestLink = ((System.Windows.Controls.TextBlock)(target));                            #line 53 "..\..\..\..\View\Settings\SettingsAboutView.xaml"              this.EchonestLink.MouseLeftButtonUp += new System.Windows.Input.MouseButtonEventHandler(this.EchonestLink_OnMouseLeftButtonUp);                            #line default              #line hidden              return;              case 3:              this.LastFmLink = ((System.Windows.Controls.TextBlock)(target));                            #line 70 "..\..\..\..\View\Settings\SettingsAboutView.xaml"              this.LastFmLink.MouseLeftButtonUp += new System.Windows.Input.MouseButtonEventHandler(this.LastFmLink_OnMouseLeftButtonUp);                            #line default              #line hidden              return;              }
Magic Number,Meridian.View.Settings,SettingsAboutView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Settings\SettingsAboutView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.SiteLink = ((System.Windows.Controls.TextBlock)(target));                            #line 37 "..\..\..\..\View\Settings\SettingsAboutView.xaml"              this.SiteLink.MouseLeftButtonUp += new System.Windows.Input.MouseButtonEventHandler(this.SiteLink_OnMouseLeftButtonUp);                            #line default              #line hidden              return;              case 2:              this.EchonestLink = ((System.Windows.Controls.TextBlock)(target));                            #line 53 "..\..\..\..\View\Settings\SettingsAboutView.xaml"              this.EchonestLink.MouseLeftButtonUp += new System.Windows.Input.MouseButtonEventHandler(this.EchonestLink_OnMouseLeftButtonUp);                            #line default              #line hidden              return;              case 3:              this.LastFmLink = ((System.Windows.Controls.TextBlock)(target));                            #line 70 "..\..\..\..\View\Settings\SettingsAboutView.xaml"              this.LastFmLink.MouseLeftButtonUp += new System.Windows.Input.MouseButtonEventHandler(this.LastFmLink_OnMouseLeftButtonUp);                            #line default              #line hidden              return;              }
Magic Number,Meridian.View.Settings,SettingsHotkeysView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Settings\SettingsHotkeysView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 2:                            #line 45 "..\..\..\..\View\Settings\SettingsHotkeysView.xaml"              ((System.Windows.Controls.CheckBox)(target)).Click += new System.Windows.RoutedEventHandler(this.CheckBoxOnClick);                            #line default              #line hidden              break;              case 3:                            #line 46 "..\..\..\..\View\Settings\SettingsHotkeysView.xaml"              ((System.Windows.Controls.CheckBox)(target)).Click += new System.Windows.RoutedEventHandler(this.CheckBoxOnClick);                            #line default              #line hidden              break;              case 4:                            #line 47 "..\..\..\..\View\Settings\SettingsHotkeysView.xaml"              ((System.Windows.Controls.CheckBox)(target)).Click += new System.Windows.RoutedEventHandler(this.CheckBoxOnClick);                            #line default              #line hidden              break;              case 5:                            #line 50 "..\..\..\..\View\Settings\SettingsHotkeysView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewKeyDown += new System.Windows.Input.KeyEventHandler(this.HotkeyTextBoxOnPreviewKeyDown);                            #line default              #line hidden              break;              }
Magic Number,Meridian.View.Settings,SettingsHotkeysView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Settings\SettingsHotkeysView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 2:                            #line 45 "..\..\..\..\View\Settings\SettingsHotkeysView.xaml"              ((System.Windows.Controls.CheckBox)(target)).Click += new System.Windows.RoutedEventHandler(this.CheckBoxOnClick);                            #line default              #line hidden              break;              case 3:                            #line 46 "..\..\..\..\View\Settings\SettingsHotkeysView.xaml"              ((System.Windows.Controls.CheckBox)(target)).Click += new System.Windows.RoutedEventHandler(this.CheckBoxOnClick);                            #line default              #line hidden              break;              case 4:                            #line 47 "..\..\..\..\View\Settings\SettingsHotkeysView.xaml"              ((System.Windows.Controls.CheckBox)(target)).Click += new System.Windows.RoutedEventHandler(this.CheckBoxOnClick);                            #line default              #line hidden              break;              case 5:                            #line 50 "..\..\..\..\View\Settings\SettingsHotkeysView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewKeyDown += new System.Windows.Input.KeyEventHandler(this.HotkeyTextBoxOnPreviewKeyDown);                            #line default              #line hidden              break;              }
Magic Number,Meridian.View.Settings,SettingsHotkeysView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Settings\SettingsHotkeysView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 2:                            #line 45 "..\..\..\..\View\Settings\SettingsHotkeysView.xaml"              ((System.Windows.Controls.CheckBox)(target)).Click += new System.Windows.RoutedEventHandler(this.CheckBoxOnClick);                            #line default              #line hidden              break;              case 3:                            #line 46 "..\..\..\..\View\Settings\SettingsHotkeysView.xaml"              ((System.Windows.Controls.CheckBox)(target)).Click += new System.Windows.RoutedEventHandler(this.CheckBoxOnClick);                            #line default              #line hidden              break;              case 4:                            #line 47 "..\..\..\..\View\Settings\SettingsHotkeysView.xaml"              ((System.Windows.Controls.CheckBox)(target)).Click += new System.Windows.RoutedEventHandler(this.CheckBoxOnClick);                            #line default              #line hidden              break;              case 5:                            #line 50 "..\..\..\..\View\Settings\SettingsHotkeysView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewKeyDown += new System.Windows.Input.KeyEventHandler(this.HotkeyTextBoxOnPreviewKeyDown);                            #line default              #line hidden              break;              }
Magic Number,Meridian.View.Settings,SettingsHotkeysView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Settings\SettingsHotkeysView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 2:                            #line 45 "..\..\..\..\View\Settings\SettingsHotkeysView.xaml"              ((System.Windows.Controls.CheckBox)(target)).Click += new System.Windows.RoutedEventHandler(this.CheckBoxOnClick);                            #line default              #line hidden              break;              case 3:                            #line 46 "..\..\..\..\View\Settings\SettingsHotkeysView.xaml"              ((System.Windows.Controls.CheckBox)(target)).Click += new System.Windows.RoutedEventHandler(this.CheckBoxOnClick);                            #line default              #line hidden              break;              case 4:                            #line 47 "..\..\..\..\View\Settings\SettingsHotkeysView.xaml"              ((System.Windows.Controls.CheckBox)(target)).Click += new System.Windows.RoutedEventHandler(this.CheckBoxOnClick);                            #line default              #line hidden              break;              case 5:                            #line 50 "..\..\..\..\View\Settings\SettingsHotkeysView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewKeyDown += new System.Windows.Input.KeyEventHandler(this.HotkeyTextBoxOnPreviewKeyDown);                            #line default              #line hidden              break;              }
Magic Number,Meridian.View,TrackNotifcationView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\TrackNotifcationView.xaml.cs,TrackNotifcationView,The following statement contains a magic number: _timer.Interval = TimeSpan.FromSeconds(7);
Magic Number,Meridian.View,TrackNotifcationView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\TrackNotifcationView.xaml.cs,TrackNotifcationView_OnSourceInitialized,The following statement contains a magic number: this.Left = SystemParameters.WorkArea.Width - this.Width - 10;
Magic Number,Meridian.View,TrackNotifcationView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\TrackNotifcationView.xaml.cs,TrackNotifcationView_OnSourceInitialized,The following statement contains a magic number: this.Top = SystemParameters.WorkArea.Height - this.Height - 10;
Magic Number,Meridian.View,TrackNotifcationView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\TrackNotifcationView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.rootElement = ((Meridian.View.TrackNotifcationView)(target));                            #line 10 "..\..\..\View\TrackNotifcationView.xaml"              this.rootElement.SourceInitialized += new System.EventHandler(this.TrackNotifcationView_OnSourceInitialized);                            #line default              #line hidden                            #line 10 "..\..\..\View\TrackNotifcationView.xaml"              this.rootElement.MouseLeftButtonUp += new System.Windows.Input.MouseButtonEventHandler(this.TrackNotifcationView_OnMouseLeftButtonUp);                            #line default              #line hidden              return;              case 2:                            #line 35 "..\..\..\View\TrackNotifcationView.xaml"              ((System.Windows.Media.Animation.Storyboard)(target)).Completed += new System.EventHandler(this.CloseAnim_OnCompleted);                            #line default              #line hidden              return;              case 3:                            #line 61 "..\..\..\View\TrackNotifcationView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.ButtonBase_OnClick);                            #line default              #line hidden              return;              }
Magic Number,Meridian.View,TrackNotifcationView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\TrackNotifcationView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.rootElement = ((Meridian.View.TrackNotifcationView)(target));                            #line 10 "..\..\..\View\TrackNotifcationView.xaml"              this.rootElement.SourceInitialized += new System.EventHandler(this.TrackNotifcationView_OnSourceInitialized);                            #line default              #line hidden                            #line 10 "..\..\..\View\TrackNotifcationView.xaml"              this.rootElement.MouseLeftButtonUp += new System.Windows.Input.MouseButtonEventHandler(this.TrackNotifcationView_OnMouseLeftButtonUp);                            #line default              #line hidden              return;              case 2:                            #line 35 "..\..\..\View\TrackNotifcationView.xaml"              ((System.Windows.Media.Animation.Storyboard)(target)).Completed += new System.EventHandler(this.CloseAnim_OnCompleted);                            #line default              #line hidden              return;              case 3:                            #line 61 "..\..\..\View\TrackNotifcationView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.ButtonBase_OnClick);                            #line default              #line hidden              return;              }
Magic Number,Meridian,App,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\App.xaml.cs,AddTrayIcon,The following statement contains a magic number: _trayIcon = new NotifyIcon              {                  Icon = Icon.ExtractAssociatedIcon(Assembly.GetExecutingAssembly().Location)'                  Text = "Meridian " + Assembly.GetExecutingAssembly().GetName().Version.ToString(2)              };
Magic Number,Meridian,MainWindow,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\MainWindow.xaml.cs,MainWindow_OnMouseMove,The following statement contains a magic number: Top = -e.GetPosition(this).Y / 2;
Magic Number,Meridian,MainWindow,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\MainWindow.xaml.cs,MainWindow_OnMouseMove,The following statement contains a magic number: e.LeftButton == MouseButtonState.Pressed && e.GetPosition(this).Y < 30
Magic Number,Meridian,MainWindow,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\MainWindow.xaml.cs,MainWindow_OnLoaded,The following statement contains a magic number: !Settings.Instance.TellRequestShown && (DateTime.Now - Settings.Instance.FirstStart).TotalDays >= 3
Magic Number,Meridian,MainWindow,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\MainWindow.xaml.cs,MainWindow_OnLoaded,The following statement contains a magic number: BackgroundArtControl.Effect = Settings.Instance.BlurBackground ? new BlurEffect() { RenderingBias = RenderingBias.Quality' Radius = 35} : null;
Missing Default,Meridian.Controls,ContentTransitionControl,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\ContentTransitionControl.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.LayoutRoot = ((System.Windows.Controls.Grid)(target));              return;              case 2:              this.Control1 = ((System.Windows.Controls.ContentControl)(target));              return;              case 3:              this.Control2 = ((System.Windows.Controls.ContentControl)(target));              return;              }
Missing Default,Meridian.Controls,FlyoutControl,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\FlyoutControl.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.rootElement = ((Meridian.Controls.FlyoutControl)(target));              return;              case 2:                            #line 11 "..\..\..\Controls\FlyoutControl.xaml"              ((System.Windows.Media.Animation.Storyboard)(target)).Completed += new System.EventHandler(this.CloseAnim_OnCompleted);                            #line default              #line hidden              return;              case 3:              this.content = ((System.Windows.Controls.ContentControl)(target));              return;              }
Missing Default,Meridian.Controls,ImageTransitionControl,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\ImageTransitionControl.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.rootElement = ((Meridian.Controls.ImageTransitionControl)(target));              return;              case 2:              this.BackgroundRectangle = ((System.Windows.Shapes.Rectangle)(target));              return;              case 3:              this.LayoutRoot = ((System.Windows.Controls.Grid)(target));              return;              case 4:              this.Image1 = ((System.Windows.Controls.Image)(target));              return;              case 5:              this.Image2 = ((System.Windows.Controls.Image)(target));              return;              }
Missing Default,Meridian.Controls,NotificationControl,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\NotificationControl.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.rootElement = ((Meridian.Controls.NotificationControl)(target));              return;              case 2:                            #line 10 "..\..\..\Controls\NotificationControl.xaml"              ((System.Windows.Media.Animation.Storyboard)(target)).Completed += new System.EventHandler(this.SwitchInAnim_OnCompleted);                            #line default              #line hidden              return;              case 3:                            #line 28 "..\..\..\Controls\NotificationControl.xaml"              ((System.Windows.Media.Animation.Storyboard)(target)).Completed += new System.EventHandler(this.SwitchOutAnim_OnCompleted);                            #line default              #line hidden              return;              case 4:              this.ProgressBar = ((System.Windows.Controls.ProgressBar)(target));              return;              case 5:              this.StatusTextBlock = ((System.Windows.Controls.TextBlock)(target));              return;              case 6:              this.StatusTextBlockRenderTransform = ((System.Windows.Media.TranslateTransform)(target));              return;              }
Missing Default,Meridian.Controls,PlayerControl,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\PlayerControl.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.CurrentAudioMenuPopup = ((System.Windows.Controls.Primitives.Popup)(target));              return;              case 2:                            #line 59 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 3:                            #line 61 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 4:                            #line 63 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 5:                            #line 65 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 6:                            #line 67 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 7:                            #line 70 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 8:                            #line 72 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 9:                            #line 74 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 10:                            #line 77 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 11:                            #line 79 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 12:                            #line 81 "..\..\..\Controls\PlayerControl.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 13:              this.CurrentAudioMenuButton = ((System.Windows.Controls.Primitives.ToggleButton)(target));              return;              }
Missing Default,Meridian.Controls,ShareBarControl,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\ShareBarControl.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.rootElement = ((Meridian.Controls.ShareBarControl)(target));              return;              case 2:              this.rootGrid = ((System.Windows.Controls.Grid)(target));              return;              }
Missing Default,Meridian.Controls,VolumeControl,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Controls\VolumeControl.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.rootElement = ((Meridian.Controls.VolumeControl)(target));                            #line 9 "..\..\..\Controls\VolumeControl.xaml"              this.rootElement.MouseWheel += new System.Windows.Input.MouseWheelEventHandler(this.VolumeControl_OnMouseWheel);                            #line default              #line hidden              return;              case 2:              this.MinVolumeButton = ((System.Windows.Controls.Button)(target));                            #line 16 "..\..\..\Controls\VolumeControl.xaml"              this.MinVolumeButton.Click += new System.Windows.RoutedEventHandler(this.MuteButton_OnClick);                            #line default              #line hidden              return;              case 3:              this.MaxVolumeButton = ((System.Windows.Controls.Button)(target));                            #line 20 "..\..\..\Controls\VolumeControl.xaml"              this.MaxVolumeButton.Click += new System.Windows.RoutedEventHandler(this.VolumeButton_OnClick);                            #line default              #line hidden              return;              }
Missing Default,Meridian.Converters,SearchListBoxStyleSelector,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Converters\SearchResultTemplateSelector.cs,Convert,The following switch statement is missing a default case: switch (index)              {                  case 0:                      return TracksStyle;                  case 1:                      return AlbumsStyle;                  case 2:                      return ArtistsStyle;                  case 3:                      return TracksStyle;                  case 4:                      return AlbumsStyle;                  case 5:                      return LocalArtistsStyle;              }
Missing Default,Meridian.Helpers,HotKeyManager,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Helpers\HotKeyManager.cs,HotKeyPressed,The following switch statement is missing a default case: switch (obj.Key)              {                  case Key.MediaPlayPause:                      if (AudioService.IsPlaying)                          AudioService.Pause();                      else                          AudioService.Play();                      break;                  case Key.MediaNextTrack:                      AudioService.SkipNext();                      break;                  case Key.MediaPreviousTrack:                      AudioService.Prev();                      break;                  case Key.MediaStop:                      AudioService.Stop();                      break;                  case Key.SelectMedia:                      if (Application.Current.MainWindow.WindowState == WindowState.Minimized)                          Application.Current.MainWindow.WindowState = WindowState.Normal;                      else if (Application.Current.MainWindow.IsActive)                          Application.Current.MainWindow.WindowState = WindowState.Minimized;                      else                      {                          Application.Current.MainWindow.Show();                          Application.Current.MainWindow.Activate();                      }                      break;              }
Missing Default,Meridian.Layout.Controls,HeaderControl,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\Layout\Controls\HeaderControl.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.rootElement = ((Meridian.Layout.Controls.HeaderControl)(target));              return;              case 2:              this.HeaderMenuPopup = ((System.Windows.Controls.Primitives.Popup)(target));              return;              case 3:              this.HeaderButton = ((System.Windows.Controls.Primitives.ToggleButton)(target));              return;              }
Missing Default,Meridian.RemotePlay,SimpleWebServer,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\RemotePlay\SimpleWebServer.cs,ApiResponse,The following switch statement is missing a default case: switch (method)                  {                      case "/api":                          //just return ok                          responseText = JsonConvert.SerializeObject(new { response = 1 });                          break;                        case "/currentTrack":                          //return current track                          responseText = JsonConvert.SerializeObject(new { response = new { track = ViewModelLocator.Main.CurrentAudio' currentTime = ViewModelLocator.Main.CurrentAudioPositionSeconds' duration = ViewModelLocator.Main.CurrentAudioDuration.TotalSeconds' shuffle = ViewModelLocator.Main.Shuffle' repeat = ViewModelLocator.Main.Repeat } }' Formatting.None' jsonSettings);                          break;                        case "/isPlaying":                          //return isPlaying                          responseText = JsonConvert.SerializeObject(new { response = ViewModelLocator.Main.IsPlaying }' Formatting.None' jsonSettings);                          break;                        case "/volume":                          //return volume                          responseText = JsonConvert.SerializeObject(new { response = ViewModelLocator.Main.Volume }' Formatting.None' jsonSettings);                          break;                  }
Missing Default,Meridian.RemotePlay,SimpleWebServer,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\RemotePlay\SimpleWebServer.cs,FileResponse,The following switch statement is missing a default case: switch (extension)                      {                          case ".html":                          case ".htm":                              contentType = "text/html";                              break;                            case ".js":                              contentType = "application/javascript";                              break;                            case ".css":                              contentType = "text/css";                              break;                            case ".png":                              contentType = "image/png";                              break;                            case ".svg":                              contentType = "image/svg+xml";                              break;                      }
Missing Default,Meridian.RemotePlay,RemotePlayService,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\RemotePlay\RemotePlayService.cs,OnReceveData,The following switch statement is missing a default case: switch (json["command"].Value<string>())                      {                          case "play":                              if (!ViewModelLocator.Main.IsPlaying)                                  ViewModelLocator.Main.PlayPauseCommand.Execute(null);                              break;                            case "pause":                              if (ViewModelLocator.Main.IsPlaying)                                  ViewModelLocator.Main.PlayPauseCommand.Execute(null);                              break;                            case "next":                              ViewModelLocator.Main.NextAudioCommand.Execute(null);                              break;                            case "prev":                              ViewModelLocator.Main.PrevAudioCommand.Execute(null);                              break;                            case "seek":                              if (json["commandParam"] != null)                              {                                  ViewModelLocator.Main.CurrentAudioPositionSeconds = json["commandParam"].Value<double>();                              }                              break;                            case "volume":                              if (json["commandParam"] != null)                              {                                  ViewModelLocator.Main.Volume = json["commandParam"].Value<float>();                              }                              break;                            case "shuffle":                              if (json["commandParam"] != null)                              {                                  ViewModelLocator.Main.Shuffle = json["commandParam"].Value<bool>();                              }                              break;                            case "repeat":                              if (json["commandParam"] != null)                              {                                  ViewModelLocator.Main.Repeat = json["commandParam"].Value<bool>();                              }                              break;                      }
Missing Default,SQLite,SQLiteConnection,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\SQLite.cs,BeginTransaction,The following switch statement is missing a default case: switch (sqlExp.Result) {  						case SQLite3.Result.IOError:  						case SQLite3.Result.Full:  						case SQLite3.Result.Busy:  						case SQLite3.Result.NoMem:  						case SQLite3.Result.Interrupt:  							RollbackTo (null' true);  							break;  						}
Missing Default,SQLite,SQLiteConnection,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\SQLite.cs,SaveTransactionPoint,The following switch statement is missing a default case: switch (sqlExp.Result) {  					case SQLite3.Result.IOError:  					case SQLite3.Result.Full:  					case SQLite3.Result.Busy:  					case SQLite3.Result.NoMem:  					case SQLite3.Result.Interrupt:  						RollbackTo (null' true);  						break;  					}
Missing Default,Meridian.ViewModel.Local,LocalMusicViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Local\LocalMusicViewModel.cs,Refresh,The following switch statement is missing a default case: switch (SelectedTabIndex)              {                  case 0:                      LoadTracks();                      break;                  case 1:                      LoadAlbums();                      break;                    case 2:                      LoadArtists();                      break;              }
Missing Default,Meridian.ViewModel.Main,MusicViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Main\MusicViewModel.cs,InitializeCommands,The following switch statement is missing a default case: switch (SelectedTabIndex)                  {                      case 0:                          var searchControl = LocalSearchControl.GetForCurrentView();                          if (searchControl != null && searchControl.IsFiltering)                          {                              AudioService.SetCurrentPlaylist((searchControl.Source.View).Cast<Audio>());                          }                          else                              AudioService.SetCurrentPlaylist(Tracks);                          break;                        case 1:                          if (SelectedArtist != null)                              AudioService.SetCurrentPlaylist(SelectedArtist.Tracks);                          break;                        case 2:                          AudioService.SetCurrentPlaylist(NewsTracks);                          break;                        case 3:                          AudioService.SetCurrentPlaylist(WallTracks);                          break;                        case 4:                          AudioService.SetCurrentPlaylist(FavoritesTracks);                          break;                  }
Missing Default,Meridian.ViewModel.Search,SearchViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Search\SearchViewModel.cs,InitializeCommands,The following switch statement is missing a default case: switch (SelectedSectionIndex)                  {                      //tracks                      case 0:                          AudioService.SetCurrentPlaylist(SearchResults.Cast<Audio>());                          break;                        //local artists                      case 5:                          AudioService.SetCurrentPlaylist(SearchResults.Cast<AudioArtist>().Where(a => a.Albums != null).SelectMany(a => a.Albums).SelectMany(a => a.Tracks).ToList());                          break;                  }
Missing Default,Meridian.ViewModel.Search,SearchViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\Search\SearchViewModel.cs,Search,The following switch statement is missing a default case: switch (_selectedSectionIndex)              {                  case 0:                      SearchTracks(_cancellationToken.Token);                      break;                    case 1:                      SearchAlbums(_cancellationToken.Token);                      break;                    case 2:                      SearchArtists(_cancellationToken.Token);                      break;                    case 3:                      SearchLocalTracks(_cancellationToken.Token);                      break;                    case 4:                      SearchLocalAlbums(_cancellationToken.Token);                      break;                    case 5:                      SearchLocalArtists(_cancellationToken.Token);                      break;              }
Missing Default,Meridian.ViewModel,SettingsViewModel,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\ViewModel\SettingsViewModel.cs,SaveSettings,The following switch statement is missing a default case: switch (settingsHotkey.Id)                  {                      case "Next":                          if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.NextHotKeyModifier' Domain.Settings.Instance.NextHotKey))                          {                              ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.NextHotKeyModifier' Domain.Settings.Instance.NextHotKey);                          }                            Domain.Settings.Instance.NextHotKey = key;                          Domain.Settings.Instance.NextHotKeyModifier = modifier;                            if (key != Key.None)                              ViewModelLocator.Main.HotKeyManager.RegisterHotkey(modifier' key' h => AudioService.SkipNext());                              break;                        case "Prev":                          if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.PrevHotKeyModifier' Domain.Settings.Instance.PrevHotKey))                          {                              ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.PrevHotKeyModifier' Domain.Settings.Instance.PrevHotKey);                          }                            Domain.Settings.Instance.PrevHotKey = key;                          Domain.Settings.Instance.PrevHotKeyModifier = modifier;                            if (key != Key.None)                              ViewModelLocator.Main.HotKeyManager.RegisterHotkey(modifier' key' h => AudioService.Prev());                          break;                        case "PlayPause":                          if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.PlayPauseHotKeyModifier' Domain.Settings.Instance.PlayPauseHotKey))                          {                              ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.PlayPauseHotKeyModifier' Domain.Settings.Instance.PlayPauseHotKey);                          }                            Domain.Settings.Instance.PlayPauseHotKey = key;                          Domain.Settings.Instance.PlayPauseHotKeyModifier = modifier;                            if (key != Key.None)                              ViewModelLocator.Main.HotKeyManager.RegisterHotkey(modifier' key' h =>                              {                                  if (AudioService.IsPlaying)                                      AudioService.Pause();                                  else AudioService.Play();                              });                          break;                        case "LikeDislike":                          if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.LikeDislikeHotKeyModifier' Domain.Settings.Instance.LikeDislikeHotKey))                          {                              ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.LikeDislikeHotKeyModifier' Domain.Settings.Instance.LikeDislikeHotKey);                          }                            Domain.Settings.Instance.LikeDislikeHotKey = key;                          Domain.Settings.Instance.LikeDislikeHotKeyModifier = modifier;                            if (key != Key.None)                              ViewModelLocator.Main.HotKeyManager.RegisterHotkey(modifier' key' h =>                              {                                  if (AudioService.CurrentAudio is VkAudio)                                  {                                      ((VkAudio)AudioService.CurrentAudio).IsAddedByCurrentUser =                                          !((VkAudio)AudioService.CurrentAudio).IsAddedByCurrentUser;                                      ViewModelLocator.Main.AddRemoveAudioCommand.Execute(AudioService.CurrentAudio);                                  }                              });                          break;                        case "Shuffle":                          if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.ShuffleHotKeyModifier' Domain.Settings.Instance.ShuffleHotKey))                          {                              ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.ShuffleHotKeyModifier' Domain.Settings.Instance.ShuffleHotKey);                          }                            Domain.Settings.Instance.ShuffleHotKey = key;                          Domain.Settings.Instance.ShuffleHotKeyModifier = modifier;                            if (key != Key.None)                              ViewModelLocator.Main.HotKeyManager.RegisterHotkey(modifier' key' h =>                              {                                  ViewModelLocator.Main.Shuffle = !ViewModelLocator.Main.Shuffle;                              });                          break;                          case "Repeat":                          if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.RepeatHotKeyModifier' Domain.Settings.Instance.RepeatHotKey))                          {                              ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.RepeatHotKeyModifier' Domain.Settings.Instance.RepeatHotKey);                          }                            Domain.Settings.Instance.RepeatHotKey = key;                          Domain.Settings.Instance.RepeatHotKeyModifier = modifier;                            if (key != Key.None)                              ViewModelLocator.Main.HotKeyManager.RegisterHotkey(modifier' key' h =>                              {                                  ViewModelLocator.Main.Repeat = !ViewModelLocator.Main.Repeat;                              });                          break;                        case "IncreaseVolume":                          if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.IncreaseVolumeHotKeyModifier' Domain.Settings.Instance.IncreaseVolumeHotKey))                          {                              ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.IncreaseVolumeHotKeyModifier' Domain.Settings.Instance.IncreaseVolumeHotKey);                          }                            Domain.Settings.Instance.IncreaseVolumeHotKey = key;                          Domain.Settings.Instance.IncreaseVolumeHotKeyModifier = modifier;                            if (key != Key.None)                              ViewModelLocator.Main.HotKeyManager.RegisterHotkey(modifier' key' h =>                              {                                  ViewModelLocator.Main.Volume += 5;                              });                          break;                        case "DecreaseVolume":                          if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.DecreaseVolumeHotKeyModifier' Domain.Settings.Instance.DecreaseVolumeHotKey))                          {                              ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.DecreaseVolumeHotKeyModifier' Domain.Settings.Instance.DecreaseVolumeHotKey);                          }                            Domain.Settings.Instance.DecreaseVolumeHotKey = key;                          Domain.Settings.Instance.DecreaseVolumeHotKeyModifier = modifier;                            if (key != Key.None)                              ViewModelLocator.Main.HotKeyManager.RegisterHotkey(modifier' key' h =>                              {                                  ViewModelLocator.Main.Volume -= 5;                              });                          break;                        case "ShowHide":                          if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.ShowHideHotKeyModifier' Domain.Settings.Instance.ShowHideHotKey))                          {                              ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.ShowHideHotKeyModifier' Domain.Settings.Instance.ShowHideHotKey);                          }                            Domain.Settings.Instance.ShowHideHotKey = key;                          Domain.Settings.Instance.ShowHideHotKeyModifier = modifier;                            if (key != Key.None)                              ViewModelLocator.Main.HotKeyManager.RegisterHotkey(modifier' key' h =>                              {                                  if (Application.Current.MainWindow.WindowState != WindowState.Minimized)                                      Application.Current.MainWindow.WindowState = WindowState.Minimized;                                  else                                      Application.Current.MainWindow.WindowState = WindowState.Normal;                              });                          break;                        case "FastForward":                          if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.FastForwardHotKeyModifier' Domain.Settings.Instance.FastForwardHotKey))                          {                              ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.FastForwardHotKeyModifier' Domain.Settings.Instance.FastForwardHotKey);                          }                            Domain.Settings.Instance.FastForwardHotKey = key;                          Domain.Settings.Instance.FastForwardHotKeyModifier = modifier;                            if (key != Key.None)                              ViewModelLocator.Main.HotKeyManager.RegisterHotkey(modifier' key' h => AudioService.FastForward(7));                          break;                        case "Rewind":                          if (ViewModelLocator.Main.HotKeyManager.IsRegistered(Domain.Settings.Instance.RewindHotKeyModifier' Domain.Settings.Instance.RewindHotKey))                          {                              ViewModelLocator.Main.HotKeyManager.UnregisterHotkey(Domain.Settings.Instance.RewindHotKeyModifier' Domain.Settings.Instance.RewindHotKey);                          }                            Domain.Settings.Instance.RewindHotKey = key;                          Domain.Settings.Instance.RewindHotKeyModifier = modifier;                            if (key != Key.None)                              ViewModelLocator.Main.HotKeyManager.RegisterHotkey(modifier' key' h => AudioService.Rewind(7));                          break;                  }
Missing Default,Meridian.Flyouts,AddSocietyFlyout,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\AddSocietyFlyout.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.rootElement = ((Meridian.Flyouts.AddSocietyFlyout)(target));              return;              case 2:              this.Title = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:                            #line 60 "..\..\..\..\View\Flyouts\AddSocietyFlyout.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CloseButtonClick);                            #line default              #line hidden              return;              }
Missing Default,Meridian.View.Flyouts.Local,MusicScanView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\Local\MusicScanView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.rootElement = ((Meridian.View.Flyouts.Local.MusicScanView)(target));              return;              }
Missing Default,Meridian.View.Flyouts,WebValidationView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\WebValidationView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 10 "..\..\..\..\View\Flyouts\WebValidationView.xaml"              ((Meridian.View.Flyouts.WebValidationView)(target)).Loaded += new System.Windows.RoutedEventHandler(this.WebValidationView_OnLoaded);                            #line default              #line hidden              return;              case 2:              this.Browser = ((System.Windows.Controls.WebBrowser)(target));                            #line 16 "..\..\..\..\View\Flyouts\WebValidationView.xaml"              this.Browser.Navigating += new System.Windows.Navigation.NavigatingCancelEventHandler(this.Browser_OnNavigating);                            #line default              #line hidden                            #line 16 "..\..\..\..\View\Flyouts\WebValidationView.xaml"              this.Browser.Navigated += new System.Windows.Navigation.NavigatedEventHandler(this.Browser_OnNavigated);                            #line default              #line hidden              return;              case 3:              this.ProgressBar = ((System.Windows.Controls.ProgressBar)(target));              return;              case 4:                            #line 20 "..\..\..\..\View\Flyouts\WebValidationView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.ButtonBase_OnClick);                            #line default              #line hidden              return;              }
Missing Default,Meridian.View.Flyouts,CaptchaRequestView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\CaptchaRequestView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 10 "..\..\..\..\View\Flyouts\CaptchaRequestView.xaml"              ((Meridian.View.Flyouts.CaptchaRequestView)(target)).Loaded += new System.Windows.RoutedEventHandler(this.CaptchaRequestView_OnLoaded);                            #line default              #line hidden              return;              case 2:              this.Image = ((System.Windows.Controls.Image)(target));              return;              case 3:              this.CaptchaTextBox = ((System.Windows.Controls.TextBox)(target));                            #line 20 "..\..\..\..\View\Flyouts\CaptchaRequestView.xaml"              this.CaptchaTextBox.KeyUp += new System.Windows.Input.KeyEventHandler(this.CaptchaTextBox_OnKeyUp);                            #line default              #line hidden              return;              case 4:                            #line 24 "..\..\..\..\View\Flyouts\CaptchaRequestView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SaveButtonClick);                            #line default              #line hidden              return;              case 5:                            #line 25 "..\..\..\..\View\Flyouts\CaptchaRequestView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CloseButtonClick);                            #line default              #line hidden              return;              }
Missing Default,Meridian.View.Flyouts,CommonErrorView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\CommonErrorView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.TitleTextBlock = ((System.Windows.Controls.TextBlock)(target));              return;              case 2:              this.DescriptionTextBlock = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.RestartButton = ((System.Windows.Controls.Button)(target));                            #line 19 "..\..\..\..\View\Flyouts\CommonErrorView.xaml"              this.RestartButton.Click += new System.Windows.RoutedEventHandler(this.RestartButton_OnClick);                            #line default              #line hidden              return;              case 4:              this.CloseButton = ((System.Windows.Controls.Button)(target));                            #line 21 "..\..\..\..\View\Flyouts\CommonErrorView.xaml"              this.CloseButton.Click += new System.Windows.RoutedEventHandler(this.CloseButton_OnClick);                            #line default              #line hidden              return;              }
Missing Default,Meridian.View.Flyouts,CreateRadioStationView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\CreateRadioStationView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.rootElement = ((Meridian.View.Flyouts.CreateRadioStationView)(target));                            #line 10 "..\..\..\..\View\Flyouts\CreateRadioStationView.xaml"              this.rootElement.Loaded += new System.Windows.RoutedEventHandler(this.CreateRadioStationView_OnLoaded);                            #line default              #line hidden              return;              case 2:              this.Title = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.TitleTextBox = ((System.Windows.Controls.TextBox)(target));                            #line 27 "..\..\..\..\View\Flyouts\CreateRadioStationView.xaml"              this.TitleTextBox.KeyUp += new System.Windows.Input.KeyEventHandler(this.TitleTextBox_OnKeyUp);                            #line default              #line hidden              return;              case 4:                            #line 28 "..\..\..\..\View\Flyouts\CreateRadioStationView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.AddButton_Click);                            #line default              #line hidden              return;              case 5:                            #line 52 "..\..\..\..\View\Flyouts\CreateRadioStationView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SaveButtonClick);                            #line default              #line hidden              return;              case 6:                            #line 53 "..\..\..\..\View\Flyouts\CreateRadioStationView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CloseButtonClick);                            #line default              #line hidden              return;              case 7:              this.ProgressGrid = ((System.Windows.Controls.Grid)(target));              return;              case 8:              this.ProgressBar = ((System.Windows.Controls.ProgressBar)(target));              return;              }
Missing Default,Meridian.View.Flyouts,EditAlbumView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\EditAlbumView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.Title = ((System.Windows.Controls.TextBlock)(target));              return;              case 2:              this.TitleTextBox = ((System.Windows.Controls.TextBox)(target));              return;              case 3:                            #line 23 "..\..\..\..\View\Flyouts\EditAlbumView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SaveButtonClick);                            #line default              #line hidden              return;              case 4:                            #line 24 "..\..\..\..\View\Flyouts\EditAlbumView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CloseButtonClick);                            #line default              #line hidden              return;              }
Missing Default,Meridian.View.Flyouts,EditAudioView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\EditAudioView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.TitleTextBox = ((System.Windows.Controls.TextBox)(target));              return;              }
Missing Default,Meridian.View.Flyouts,AddToAlbumView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\AddToAlbumView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.rootElement = ((Meridian.View.Flyouts.AddToAlbumView)(target));                            #line 10 "..\..\..\..\View\Flyouts\AddToAlbumView.xaml"              this.rootElement.Loaded += new System.Windows.RoutedEventHandler(this.AddToAlbumView_OnLoaded);                            #line default              #line hidden              return;              case 2:              this.Title = ((System.Windows.Controls.TextBlock)(target));              return;              case 3:              this.AlbumsComboBox = ((System.Windows.Controls.ComboBox)(target));              return;              case 4:                            #line 24 "..\..\..\..\View\Flyouts\AddToAlbumView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.AddButtonClick);                            #line default              #line hidden              return;              case 5:                            #line 25 "..\..\..\..\View\Flyouts\AddToAlbumView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CloseButtonClick);                            #line default              #line hidden              return;              }
Missing Default,Meridian.View.Flyouts,CommonMessageView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\CommonMessageView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.rootElement = ((Meridian.View.Flyouts.CommonMessageView)(target));              return;              case 2:              this.OkButton = ((System.Windows.Controls.Button)(target));                            #line 20 "..\..\..\..\View\Flyouts\CommonMessageView.xaml"              this.OkButton.Click += new System.Windows.RoutedEventHandler(this.OkButton_OnClick);                            #line default              #line hidden              return;              }
Missing Default,Meridian.View.Flyouts,LoginLastFmMessageView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\LoginLastFmMessageView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 19 "..\..\..\..\View\Flyouts\LoginLastFmMessageView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.SettingsButtonClick);                            #line default              #line hidden              return;              case 2:                            #line 20 "..\..\..\..\View\Flyouts\LoginLastFmMessageView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.CancelButtonClick);                            #line default              #line hidden              return;              }
Missing Default,Meridian.View.Flyouts,LoginLastFmView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\LoginLastFmView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.LoginTextBox = ((System.Windows.Controls.TextBox)(target));                            #line 16 "..\..\..\..\View\Flyouts\LoginLastFmView.xaml"              this.LoginTextBox.KeyUp += new System.Windows.Input.KeyEventHandler(this.LoginTextBox_OnKeyUp);                            #line default              #line hidden              return;              case 2:              this.PasswordBox = ((Meridian.Controls.BindablePasswordBox)(target));              return;              }
Missing Default,Meridian.View.Flyouts,LyricsView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\LyricsView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 28 "..\..\..\..\View\Flyouts\LyricsView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.ButtonBase_OnClick);                            #line default              #line hidden              return;              }
Missing Default,Meridian.View.Flyouts,ShareView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\ShareView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.rootElement = ((Meridian.View.Flyouts.ShareView)(target));              return;              case 2:              this.ShareToUserCheckbox = ((System.Windows.Controls.RadioButton)(target));              return;              case 3:              this.ShareToSocietyCheckbox = ((System.Windows.Controls.RadioButton)(target));              return;              case 4:              this.ShareAsSocietyCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              }
Missing Default,Meridian.View.Flyouts,TellFriendsRequestView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\TellFriendsRequestView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.TellButton = ((System.Windows.Controls.Button)(target));                            #line 18 "..\..\..\..\View\Flyouts\TellFriendsRequestView.xaml"              this.TellButton.Click += new System.Windows.RoutedEventHandler(this.TellButton_OnClick);                            #line default              #line hidden              return;              case 2:              this.CancelButton = ((System.Windows.Controls.Button)(target));                            #line 20 "..\..\..\..\View\Flyouts\TellFriendsRequestView.xaml"              this.CancelButton.Click += new System.Windows.RoutedEventHandler(this.CancelButton_OnClick);                            #line default              #line hidden              return;              }
Missing Default,Meridian.View.Flyouts,TellResultView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Flyouts\TellResultView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.GoToPostButton = ((System.Windows.Controls.Button)(target));                            #line 16 "..\..\..\..\View\Flyouts\TellResultView.xaml"              this.GoToPostButton.Click += new System.Windows.RoutedEventHandler(this.GoToPostButton_OnClick);                            #line default              #line hidden              return;              case 2:              this.CancelButton = ((System.Windows.Controls.Button)(target));                            #line 18 "..\..\..\..\View\Flyouts\TellResultView.xaml"              this.CancelButton.Click += new System.Windows.RoutedEventHandler(this.CancelButton_OnClick);                            #line default              #line hidden              return;              }
Missing Default,Meridian.View.Main,RadioView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Main\RadioView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.pageRoot = ((Meridian.View.Main.RadioView)(target));              return;              case 2:              this.RadioList = ((System.Windows.Controls.ListBox)(target));              return;              }
Missing Default,Meridian.View.Search,ArtistAlbumsView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Search\ArtistAlbumsView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.pageRoot = ((Meridian.View.Search.ArtistAlbumsView)(target));              return;              case 2:              this.HeaderMenuPopup = ((System.Windows.Controls.Primitives.Popup)(target));              return;              case 3:                            #line 38 "..\..\..\..\View\Search\ArtistAlbumsView.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_OnClick);                            #line default              #line hidden              return;              case 4:              this.HeaderButton = ((System.Windows.Controls.Primitives.ToggleButton)(target));              return;              }
Missing Default,Meridian.View.People,FriendsView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\People\FriendsView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.pageRoot = ((Meridian.View.People.FriendsView)(target));              return;              case 2:              this.LocalSearchItem = ((System.Windows.Controls.MenuItem)(target));                            #line 23 "..\..\..\..\View\People\FriendsView.xaml"              this.LocalSearchItem.Click += new System.Windows.RoutedEventHandler(this.LocalSearchItem_OnClick);                            #line default              #line hidden              return;              case 3:              this.LocalSearchBox = ((Meridian.Controls.LocalSearchControl)(target));              return;              }
Missing Default,Meridian.View.People,SocietiesView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\People\SocietiesView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.pageRoot = ((Meridian.View.People.SocietiesView)(target));              return;              case 2:              this.LocalSearchItem = ((System.Windows.Controls.MenuItem)(target));                            #line 24 "..\..\..\..\View\People\SocietiesView.xaml"              this.LocalSearchItem.Click += new System.Windows.RoutedEventHandler(this.LocalSearchItem_OnClick);                            #line default              #line hidden              return;              case 3:              this.LocalSearchBox = ((Meridian.Controls.LocalSearchControl)(target));              return;              }
Missing Default,Meridian.View.Settings,SettingsAboutView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Settings\SettingsAboutView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.SiteLink = ((System.Windows.Controls.TextBlock)(target));                            #line 37 "..\..\..\..\View\Settings\SettingsAboutView.xaml"              this.SiteLink.MouseLeftButtonUp += new System.Windows.Input.MouseButtonEventHandler(this.SiteLink_OnMouseLeftButtonUp);                            #line default              #line hidden              return;              case 2:              this.EchonestLink = ((System.Windows.Controls.TextBlock)(target));                            #line 53 "..\..\..\..\View\Settings\SettingsAboutView.xaml"              this.EchonestLink.MouseLeftButtonUp += new System.Windows.Input.MouseButtonEventHandler(this.EchonestLink_OnMouseLeftButtonUp);                            #line default              #line hidden              return;              case 3:              this.LastFmLink = ((System.Windows.Controls.TextBlock)(target));                            #line 70 "..\..\..\..\View\Settings\SettingsAboutView.xaml"              this.LastFmLink.MouseLeftButtonUp += new System.Windows.Input.MouseButtonEventHandler(this.LastFmLink_OnMouseLeftButtonUp);                            #line default              #line hidden              return;              }
Missing Default,Meridian.View.Settings,SettingsAccountsView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Settings\SettingsAccountsView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.UsernameTextBlock = ((System.Windows.Controls.TextBlock)(target));              return;              }
Missing Default,Meridian.View.Settings,SettingsHotkeysView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Settings\SettingsHotkeysView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 10 "..\..\..\..\View\Settings\SettingsHotkeysView.xaml"              ((Meridian.View.Settings.SettingsHotkeysView)(target)).DataContextChanged += new System.Windows.DependencyPropertyChangedEventHandler(this.SettingsHotkeysView_OnDataContextChanged);                            #line default              #line hidden              return;              }
Missing Default,Meridian.View.Settings,SettingsHotkeysView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\Settings\SettingsHotkeysView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 2:                            #line 45 "..\..\..\..\View\Settings\SettingsHotkeysView.xaml"              ((System.Windows.Controls.CheckBox)(target)).Click += new System.Windows.RoutedEventHandler(this.CheckBoxOnClick);                            #line default              #line hidden              break;              case 3:                            #line 46 "..\..\..\..\View\Settings\SettingsHotkeysView.xaml"              ((System.Windows.Controls.CheckBox)(target)).Click += new System.Windows.RoutedEventHandler(this.CheckBoxOnClick);                            #line default              #line hidden              break;              case 4:                            #line 47 "..\..\..\..\View\Settings\SettingsHotkeysView.xaml"              ((System.Windows.Controls.CheckBox)(target)).Click += new System.Windows.RoutedEventHandler(this.CheckBoxOnClick);                            #line default              #line hidden              break;              case 5:                            #line 50 "..\..\..\..\View\Settings\SettingsHotkeysView.xaml"              ((System.Windows.Controls.TextBox)(target)).PreviewKeyDown += new System.Windows.Input.KeyEventHandler(this.HotkeyTextBoxOnPreviewKeyDown);                            #line default              #line hidden              break;              }
Missing Default,Meridian.View,TrackNotifcationView,D:\research\architectureSmells\repos1\Stealth2012_meridian\Meridian\View\TrackNotifcationView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.rootElement = ((Meridian.View.TrackNotifcationView)(target));                            #line 10 "..\..\..\View\TrackNotifcationView.xaml"              this.rootElement.SourceInitialized += new System.EventHandler(this.TrackNotifcationView_OnSourceInitialized);                            #line default              #line hidden                            #line 10 "..\..\..\View\TrackNotifcationView.xaml"              this.rootElement.MouseLeftButtonUp += new System.Windows.Input.MouseButtonEventHandler(this.TrackNotifcationView_OnMouseLeftButtonUp);                            #line default              #line hidden              return;              case 2:                            #line 35 "..\..\..\View\TrackNotifcationView.xaml"              ((System.Windows.Media.Animation.Storyboard)(target)).Completed += new System.EventHandler(this.CloseAnim_OnCompleted);                            #line default              #line hidden              return;              case 3:                            #line 61 "..\..\..\View\TrackNotifcationView.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.ButtonBase_OnClick);                            #line default              #line hidden              return;              }
