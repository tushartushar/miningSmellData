Implementation smell,Namespace,Class,File,Method,Description
Complex Method,LastFmLib.Core.Album,LastFmAlbum,C:\repos\Stealth2012_meridian\LastFmLibPortable\Trunk\Core\Album\LastFmAlbum.cs,FromJson,Cyclomatic complexity of the method is 13
Complex Method,LastFmLib.Core.Artist,LastFmArtist,C:\repos\Stealth2012_meridian\LastFmLibPortable\Trunk\Core\Artist\LastFmArtist.cs,FromJson,Cyclomatic complexity of the method is 14
Complex Method,LastFmLib.Core.Track,LastFmTrack,C:\repos\Stealth2012_meridian\LastFmLibPortable\Trunk\Core\Track\LastFmTrack.cs,FromJson,Cyclomatic complexity of the method is 13
Long Parameter List,LastFmLib.Core.Artist,LastFmArtistRequest,C:\repos\Stealth2012_meridian\LastFmLibPortable\Trunk\Core\Artist\LastFmArtistRequest.cs,GetImages,The method has 6 parameters. Parameters: artist' mbid' limit' autoCorrect' minWidth' minHeight
Long Parameter List,LastFmLib.Core.Track,LastFmTrackRequest,C:\repos\Stealth2012_meridian\LastFmLibPortable\Trunk\Core\Track\LastFmTrackRequest.cs,UpdateNowPlaying,The method has 7 parameters. Parameters: artist' track' mbid' duration' album' trackNumber' albumArtist
Long Parameter List,LastFmLib.Core.Track,LastFmTrackRequest,C:\repos\Stealth2012_meridian\LastFmLibPortable\Trunk\Core\Track\LastFmTrackRequest.cs,Scrobble,The method has 8 parameters. Parameters: artist' track' timeStamp' mbid' duration' album' trackNumber' albumArtist
Long Statement,LastFmLib.Extensions,CommonExtensions,C:\repos\Stealth2012_meridian\LastFmLibPortable\Trunk\Extensions\CommonExtensions.cs,ConstructQueryString,The length of the statement  "            return string.Join("&"' parameters.Select(pair => pair.Key).Distinct().Select(name => string.Concat(name' "="' WebUtility.HtmlEncode(parameters[name]))).ToArray()); " is 164.
Magic Number,LastFmLib.Extensions,StreamExtensions,C:\repos\Stealth2012_meridian\LastFmLibPortable\Trunk\Extensions\StreamExtensions.cs,CopyStream,The following statement contains a magic number: var buffer = new byte[4096];
Missing Default,LastFmLib.Core.Album,LastFmAlbum,C:\repos\Stealth2012_meridian\LastFmLibPortable\Trunk\Core\Album\LastFmAlbum.cs,FromJson,The following switch statement is missing a default case: switch (image["size"].Value<string>())                      {                          case "small":                              result.ImageSmall = image["#text"].Value<string>();                              break;                          case "medium":                              result.ImageMedium = image["#text"].Value<string>();                              break;                          case "large":                              result.ImageLarge = image["#text"].Value<string>();                              break;                          case "extralarge":                              result.ImageExtraLarge = image["#text"].Value<string>();                              break;                      }
Missing Default,LastFmLib.Core.Artist,LastFmArtist,C:\repos\Stealth2012_meridian\LastFmLibPortable\Trunk\Core\Artist\LastFmArtist.cs,FromJson,The following switch statement is missing a default case: switch (image["size"].Value<string>())                      {                          case "small":                              result.ImageSmall = image["#text"].Value<string>();                              break;                          case "medium":                              result.ImageMedium = image["#text"].Value<string>();                              break;                          case "large":                              result.ImageLarge = image["#text"].Value<string>();                              break;                          case "extralarge":                              result.ImageExtraLarge = image["#text"].Value<string>();                              break;                          case "mega":                              result.ImageMega = image["#text"].Value<string>();                              break;                      }
Missing Default,LastFmLib.Core,LastFmErrorProcessor,C:\repos\Stealth2012_meridian\LastFmLibPortable\Trunk\Core\LastFmErrorProcessor.cs,ProcessError,The following switch statement is missing a default case: switch (response["error"].Value<string>())                  {                      case "9":                      case "4": //login error                          throw new LastFmLoginException();                      case "6": //artist not found                          return false;                  }
Missing Default,LastFmLib.Core.Image,LastFmImage,C:\repos\Stealth2012_meridian\LastFmLibPortable\Trunk\Core\Image\LastFmImage.cs,FromJson,The following switch statement is missing a default case: switch (size["name"].Value<string>())                      {                          case "small":                              result.Small = size["#text"].Value<string>();                              result.Width = Convert.ToDouble(size["width"].Value<string>());                              result.Height = Convert.ToDouble(size["height"].Value<string>());                              break;                          case "medium":                              result.Medium = size["#text"].Value<string>();                              result.Width = Convert.ToDouble(size["width"].Value<string>());                              result.Height = Convert.ToDouble(size["height"].Value<string>());                              break;                          case "large":                              result.Large = size["#text"].Value<string>();                              result.Width = Convert.ToDouble(size["width"].Value<string>());                              result.Height = Convert.ToDouble(size["height"].Value<string>());                              break;                          case "extralarge":                              result.ExtraLarge = size["#text"].Value<string>();                              result.Width = Convert.ToDouble(size["width"].Value<string>());                              result.Height = Convert.ToDouble(size["height"].Value<string>());                              break;                          case "original":                              result.Original = size["#text"].Value<string>();                              result.Width = Convert.ToDouble(size["width"].Value<string>());                              result.Height = Convert.ToDouble(size["height"].Value<string>());                              result.OriginalWidth = Convert.ToDouble(size["width"].Value<string>());                              result.OriginalHeight = Convert.ToDouble(size["height"].Value<string>());                              break;                      }
Missing Default,LastFmLib.Core.Track,LastFmTrack,C:\repos\Stealth2012_meridian\LastFmLibPortable\Trunk\Core\Track\LastFmTrack.cs,FromJson,The following switch statement is missing a default case: switch (image["size"].Value<string>())                          {                              case "small":                                  result.ImageSmall = image["#text"].Value<string>();                                  break;                              case "medium":                                  result.ImageMedium = image["#text"].Value<string>();                                  break;                              case "large":                                  result.ImageLarge = image["#text"].Value<string>();                                  break;                              case "extralarge":                                  result.ImageExtraLarge = image["#text"].Value<string>();                                  break;                          }
Missing Default,LastFmLib.Core.Track,LastFmTrack,C:\repos\Stealth2012_meridian\LastFmLibPortable\Trunk\Core\Track\LastFmTrack.cs,FromJson,The following switch statement is missing a default case: switch (image["size"].Value<string>())                      {                          case "small":                              result.ImageSmall = image["#text"].Value<string>();                              break;                          case "medium":                              result.ImageMedium = image["#text"].Value<string>();                              break;                          case "large":                              result.ImageLarge = image["#text"].Value<string>();                              break;                          case "extralarge":                              result.ImageExtraLarge = image["#text"].Value<string>();                              break;                      }
