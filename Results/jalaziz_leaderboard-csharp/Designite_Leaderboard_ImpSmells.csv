Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Leaderboard,BaseLeaderboard,C:\repos\jalaziz_leaderboard-csharp\Leaderboard\BaseLeaderboard.cs,RankMemberIf,The method has 5 parameters.
Long Parameter List,Leaderboard,ILeaderboard,C:\repos\jalaziz_leaderboard-csharp\Leaderboard\ILeaderboard.cs,RankMemberIf,The method has 5 parameters.
Long Parameter List,Leaderboard.Redis,RedisConnectionManager,C:\repos\jalaziz_leaderboard-csharp\Leaderboard\Redis\RedisConnectionManager.cs,RedisConnectionManager,The method has 7 parameters.
Long Parameter List,Leaderboard.Redis,RedisLeaderboard,C:\repos\jalaziz_leaderboard-csharp\Leaderboard\Redis\RedisLeaderboard.cs,RedisLeaderboard,The method has 5 parameters.
Long Parameter List,Leaderboard.Redis,RedisLeaderboard,C:\repos\jalaziz_leaderboard-csharp\Leaderboard\Redis\RedisLeaderboard.cs,RedisLeaderboard,The method has 6 parameters.
Long Parameter List,Leaderboard.Redis,RedisLeaderboard,C:\repos\jalaziz_leaderboard-csharp\Leaderboard\Redis\RedisLeaderboard.cs,GetMembersInScoreRange,The method has 5 parameters.
Long Parameter List,Leaderboard.Redis,RedisLeaderboard,C:\repos\jalaziz_leaderboard-csharp\Leaderboard\Redis\RedisLeaderboard.cs,GetRankedList,The method has 5 parameters.
Long Parameter List,Leaderboard.Redis,RedisLeaderboard,C:\repos\jalaziz_leaderboard-csharp\Leaderboard\Redis\RedisLeaderboard.cs,GetRankedList,The method has 6 parameters.
Long Parameter List,Leaderboard.Redis,RedisLeaderboard,C:\repos\jalaziz_leaderboard-csharp\Leaderboard\Redis\RedisLeaderboard.cs,GetRankedListInternal,The method has 8 parameters.
Long Statement,Leaderboard.Redis,RedisLeaderboard,C:\repos\jalaziz_leaderboard-csharp\Leaderboard\Redis\RedisLeaderboard.cs,GetRankedList,The length of the statement  "	IEnumerable<Record<string' double' T>> records = memberScores.Select ((ms' i) => new Record<string' double' T> (ms.Key' ms.Value' ++startingRank)); " is 147.
Magic Number,Leaderboard.Redis,RedisLeaderboard,C:\repos\jalaziz_leaderboard-csharp\Leaderboard\Redis\RedisLeaderboard.cs,GetPercentile,The following statement contains a magic number: using (var tran = Connection.CreateTransaction ()) {  	var zc = tran.SortedSets.GetLength (Db' leaderboardName);  	var zr = tran.SortedSets.Rank (Db' leaderboardName' member);  	var exec = tran.Execute ();  	var count = Connection.Wait (zc);  	var rank = Connection.Wait (zr);  	int? percentile;  	if (rank == null) {  		percentile = null;  	}  	else {  		if (Reverse) {  			percentile = (int)Math.Floor ((double)(count - rank - 1) / count * 100);  		}  		else {  			percentile = (int)Math.Floor ((double)rank / count * 100);  		}  	}  	Connection.Wait (exec);  	return percentile;  }  
Magic Number,Leaderboard.Redis,RedisLeaderboard,C:\repos\jalaziz_leaderboard-csharp\Leaderboard\Redis\RedisLeaderboard.cs,GetPercentile,The following statement contains a magic number: using (var tran = Connection.CreateTransaction ()) {  	var zc = tran.SortedSets.GetLength (Db' leaderboardName);  	var zr = tran.SortedSets.Rank (Db' leaderboardName' member);  	var exec = tran.Execute ();  	var count = Connection.Wait (zc);  	var rank = Connection.Wait (zr);  	int? percentile;  	if (rank == null) {  		percentile = null;  	}  	else {  		if (Reverse) {  			percentile = (int)Math.Floor ((double)(count - rank - 1) / count * 100);  		}  		else {  			percentile = (int)Math.Floor ((double)rank / count * 100);  		}  	}  	Connection.Wait (exec);  	return percentile;  }  
Magic Number,Leaderboard.Redis,RedisLeaderboard,C:\repos\jalaziz_leaderboard-csharp\Leaderboard\Redis\RedisLeaderboard.cs,GetPercentile,The following statement contains a magic number: if (rank == null) {  	percentile = null;  }  else {  	if (Reverse) {  		percentile = (int)Math.Floor ((double)(count - rank - 1) / count * 100);  	}  	else {  		percentile = (int)Math.Floor ((double)rank / count * 100);  	}  }  
Magic Number,Leaderboard.Redis,RedisLeaderboard,C:\repos\jalaziz_leaderboard-csharp\Leaderboard\Redis\RedisLeaderboard.cs,GetPercentile,The following statement contains a magic number: if (rank == null) {  	percentile = null;  }  else {  	if (Reverse) {  		percentile = (int)Math.Floor ((double)(count - rank - 1) / count * 100);  	}  	else {  		percentile = (int)Math.Floor ((double)rank / count * 100);  	}  }  
Magic Number,Leaderboard.Redis,RedisLeaderboard,C:\repos\jalaziz_leaderboard-csharp\Leaderboard\Redis\RedisLeaderboard.cs,GetPercentile,The following statement contains a magic number: if (Reverse) {  	percentile = (int)Math.Floor ((double)(count - rank - 1) / count * 100);  }  else {  	percentile = (int)Math.Floor ((double)rank / count * 100);  }  
Magic Number,Leaderboard.Redis,RedisLeaderboard,C:\repos\jalaziz_leaderboard-csharp\Leaderboard\Redis\RedisLeaderboard.cs,GetPercentile,The following statement contains a magic number: if (Reverse) {  	percentile = (int)Math.Floor ((double)(count - rank - 1) / count * 100);  }  else {  	percentile = (int)Math.Floor ((double)rank / count * 100);  }  
Magic Number,Leaderboard.Redis,RedisLeaderboard,C:\repos\jalaziz_leaderboard-csharp\Leaderboard\Redis\RedisLeaderboard.cs,GetPercentile,The following statement contains a magic number: percentile = (int)Math.Floor ((double)(count - rank - 1) / count * 100);  
Magic Number,Leaderboard.Redis,RedisLeaderboard,C:\repos\jalaziz_leaderboard-csharp\Leaderboard\Redis\RedisLeaderboard.cs,GetPercentile,The following statement contains a magic number: percentile = (int)Math.Floor ((double)rank / count * 100);  
Missing Default,Leaderboard.Redis,RedisLeaderboard,C:\repos\jalaziz_leaderboard-csharp\Leaderboard\Redis\RedisLeaderboard.cs,GetRankedListInternal,The following switch statement is missing a default case: switch (options.SortBy) {  case SortBy.Rank:  	rankedMembers = rankedMembers.OrderBy (r => r.Rank);  	break;  case SortBy.Score:  	rankedMembers = rankedMembers.OrderBy (r => r.Score);  	break;  }  
