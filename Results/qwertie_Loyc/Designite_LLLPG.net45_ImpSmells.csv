Implementation smell,Namespace,Class,File,Method,Description
Long Method,Loyc.LLParserGenerator,GenerateCodeVisitor,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\CoreEngine\GenerateCodeVisitor.cs,GenerateCodeForAlts,The method has 114 lines of code.
Long Method,Loyc.LLParserGenerator,AntlrStyleParser,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\ParsersAndMacros\AntlrStyleParserGrammar.out.cs,Rule,The method has 154 lines of code.
Long Method,Loyc.LLParserGenerator,StageTwoParser,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\ParsersAndMacros\StageTwoParser.cs,NodeToPredCore,The method has 102 lines of code.
Long Method,Loyc.LLParserGenerator,LlpgBugsAndSlugs,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\Tests\LlpgBugsAndSlugs.cs,Bug_2017_01_ErrorBranchCausesIncorrectRecognizer,The method has 113 lines of code.
Long Method,Loyc.LLParserGenerator,LlpgGeneralTests,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\Tests\LlpgGeneralTests.cs,HexFloatsWithSynPred,The method has 238 lines of code.
Long Method,Loyc.LLParserGenerator,LlpgCoreTests,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\Tests\LlpgCoreTests.cs,DifferentDefault,The method has 144 lines of code.
Long Method,Loyc.LLParserGenerator,LlpgCoreTests,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\Tests\LlpgCoreTests.cs,SynPred2,The method has 101 lines of code.
Long Method,Loyc.LLParserGenerator,LlpgTestLargerExamples,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\Tests\LlpgTestLargerExamples.cs,ParseEmails,The method has 127 lines of code.
Long Method,Loyc.LLParserGenerator,LlpgTestLargerExamples,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\Tests\LlpgTestLargerExamples.cs,CalculatorLexerLes,The method has 238 lines of code.
Long Method,Loyc.LLParserGenerator,LlpgTestLargerExamples,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\Tests\LlpgTestLargerExamples.cs,CalculatorRunnerLes,The method has 227 lines of code.
Long Method,Loyc.LLParserGenerator,LlpgTestLargerExamples,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\Tests\LlpgTestLargerExamples.cs,ScannerlessExpressionParser,The method has 332 lines of code.
Complex Method,Loyc.LLParserGenerator,CodeGenHelperBase,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\CodeGenHelpers\CodeGenHelperBase.cs,GenerateAndPredCheck,Cyclomatic complexity of the method is 9
Complex Method,Loyc.LLParserGenerator,GeneralCodeGenHelper,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\CodeGenHelpers\GeneralCodeGenHelper.cs,GenerateTest,Cyclomatic complexity of the method is 12
Complex Method,Loyc.LLParserGenerator,IntStreamCodeGenHelper,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\CodeGenHelpers\IntStreamCodeGenHelper.cs,GenerateMatchExpr,Cyclomatic complexity of the method is 9
Complex Method,Loyc.LLParserGenerator,PGIntSet,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\CodeGenHelpers\PGIntSet.cs,GenerateTest,Cyclomatic complexity of the method is 8
Complex Method,Loyc.LLParserGenerator,LLParserGenerator,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\CoreEngine\AnalysisVisitors.cs,Run,Cyclomatic complexity of the method is 11
Complex Method,Loyc.LLParserGenerator,PredictionAnalysisVisitor,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\CoreEngine\AnalysisVisitors.cs,Visit,Cyclomatic complexity of the method is 9
Complex Method,Loyc.LLParserGenerator,PredictionAnalysisVisitor,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\CoreEngine\AnalysisVisitors.cs,ComputeSetForNextBranch,Cyclomatic complexity of the method is 8
Complex Method,Loyc.LLParserGenerator,PrematchAnalysisVisitor,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\CoreEngine\AnalysisVisitors.cs,ScanTree,Cyclomatic complexity of the method is 11
Complex Method,Loyc.LLParserGenerator,GenerateCodeVisitor,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\CoreEngine\GenerateCodeVisitor.cs,GenerateCodeForAlts,Cyclomatic complexity of the method is 21
Complex Method,Loyc.LLParserGenerator,GenerateCodeVisitor,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\CoreEngine\GenerateCodeVisitor.cs,GeneratePredictionTreeCode,Cyclomatic complexity of the method is 13
Complex Method,Loyc.LLParserGenerator,AntlrStyleParser,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\ParsersAndMacros\AntlrStyleParserGrammar.out.cs,Rule,Cyclomatic complexity of the method is 27
Complex Method,Loyc.LLParserGenerator,AntlrStyleParser,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\ParsersAndMacros\AntlrStyleParserGrammar.out.cs,RulesAndStuff,Cyclomatic complexity of the method is 17
Complex Method,Loyc.LLParserGenerator,StageOneParser,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\ParsersAndMacros\StageOneParser.cs,SeqExpr,Cyclomatic complexity of the method is 17
Complex Method,Loyc.LLParserGenerator,StageOneParser,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\ParsersAndMacros\StageOneParser.cs,PrimaryExpr,Cyclomatic complexity of the method is 13
Complex Method,Loyc.LLParserGenerator,StageTwoParser,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\ParsersAndMacros\StageTwoParser.cs,NodeToPredCore,Cyclomatic complexity of the method is 21
Complex Method,Loyc.LLParserGenerator,Alts,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\RuleAndPreds\Predicates.cs,ToString,Cyclomatic complexity of the method is 11
Complex Method,Loyc.LLPG,Macros,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\ParsersAndMacros\Macros.cs,run_LLLPG,Cyclomatic complexity of the method is 12
Complex Method,Loyc.LLPG,Macros,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\ParsersAndMacros\Macros.cs,ApplyOptions,Cyclomatic complexity of the method is 10
Long Parameter List,Loyc.LLParserGenerator,CodeGenHelperBase,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\CodeGenHelpers\CodeGenHelperBase.cs,GenerateSwitch,The method has 5 parameters. Parameters: branchSets' branchCode' casesToInclude' defaultBranch' laVar
Long Parameter List,Loyc.LLParserGenerator,IPGCodeGenHelper,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\CodeGenHelpers\IPGCodeGenHelper.cs,GenerateSwitch,The method has 5 parameters. Parameters: branchSets' branchCode' casesToInclude' defaultBranch' laVar
Long Parameter List,Loyc.LLParserGenerator,PredictionAnalysisVisitor,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\CoreEngine\AnalysisVisitors.cs,AutoAddBranchForAndPred,The method has 5 parameters. Parameters: children' andPred' alts' matched' falsified
Long Parameter List,Loyc.LLParserGenerator,Pred,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\RuleAndPreds\Predicates.cs,Or,The method has 7 parameters. Parameters: a' b' slashJoined' basis' aMode' bMode' sink
Long Parameter List,Loyc.LLParserGenerator,Pred,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\RuleAndPreds\Predicates.cs,Rule,The method has 5 parameters. Parameters: name' pred' isStartingRule' isToken' maximumK
Long Parameter List,Loyc.LLParserGenerator,Alts,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\RuleAndPreds\Predicates.cs,Merge,The method has 7 parameters. Parameters: basis' a' b' slashJoined' aMode' bMode' warnings
Long Parameter List,Loyc.LLParserGenerator,Alts,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\RuleAndPreds\Predicates.cs,TwoArms,The method has 7 parameters. Parameters: basis' a' b' slashJoined' aMode' bMode' warnings
Long Parameter List,Loyc.LLParserGenerator,Alts,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\RuleAndPreds\Predicates.cs,Insert,The method has 6 parameters. Parameters: newBasis' slashJoined' append' b' bMode' warnings
Long Parameter List,Loyc.LLPG,Macros,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\ParsersAndMacros\Macros.cs,LllpgMacro,The method has 5 parameters. Parameters: node' context' expectedCodeGenMode' makeCodeGenHelper' isDefault
Long Statement,Loyc.LLParserGenerator,LLParserGenerator,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\CoreEngine\AnalysisVisitors.cs,PrintVerboseStats,The length of the statement  "			Output(Verbose' null' Localize.Localized("{0} rule(s) are using Token mode. This mode assumes the follow set could be anything."' tokens));" is 139.
Long Statement,Loyc.LLParserGenerator,LLParserGenerator,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\CoreEngine\AnalysisVisitors.cs,PrintVerboseStats,The length of the statement  "			Output(Verbose' null' Localize.Localized("{0} rule(s) are private. Private rules should only be called from other rules."' privates));" is 134.
Long Statement,Loyc.LLParserGenerator,LLParserGenerator,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\CoreEngine\AnalysisVisitors.cs,ShouldReportAmbiguity,The length of the statement  "				if (ks != null && ks.Cases.All(transition => transition.Position.Pred == EndOfToken && transition.PrevPosition == EndOfToken))" is 126.
Long Statement,Loyc.LLParserGenerator,PredictionAnalysisVisitor,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\CoreEngine\AnalysisVisitors.cs,Visit,The length of the statement  "							"It's poor style to put a code block {..} before an and-predicate &{..} because the and-predicate normally runs first.");" is 121.
Long Statement,Loyc.LLParserGenerator,GenerateCodeVisitor,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\CoreEngine\GenerateCodeVisitor.cs,GenerateCodeForAlts,The length of the statement  "					LLPG.Output(Warning' alts' "The error branch will not be used because the other alternatives are exhaustive (cover all cases)");" is 128.
Long Statement,Loyc.LLParserGenerator,GenerateCodeVisitor,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\CoreEngine\GenerateCodeVisitor.cs,GenerateCodeForAlts,The length of the statement  "				bool userDefinedError = needError && !_recognizerMode && alts.ErrorBranch != null && alts.ErrorBranch != DefaultErrorBranch.Value;" is 130.
Long Statement,Loyc.LLParserGenerator,GenerateCodeVisitor,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\CoreEngine\GenerateCodeVisitor.cs,GenerateCodeForAlts,The length of the statement  "					LLPG.Output(Warning' alts' string.Format("Branches {{{0}}} are unreachable."' unreachable.Select(i => alts.AltName(i)).Join("' ")));" is 132.
Long Statement,Loyc.LLParserGenerator,DetermineLocalFollowSets,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\CoreEngine\LLParserGenerator.cs,Visit,The length of the statement  "							alts.Arms.Count == 1 ? "The contents of this loop are nullable; the parser could loop forever without consuming any input."" is 123.
Long Statement,Loyc.LLParserGenerator,DetermineLocalFollowSets,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\CoreEngine\LLParserGenerator.cs,Visit,The length of the statement  "							: string.Format("Arm #{0} of this loop is nullable; the parser could loop forever without consuming any input."' badArm + 1));" is 126.
Long Statement,Loyc.LLParserGenerator,AntlrStyleParser,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\ParsersAndMacros\AntlrStyleParserGrammar.out.cs,Rule,The length of the statement  "				Error(-1' isAntlrThing ? "LLLPG does not support ANTLR rule directives ('scope'' 'throws'' 'options'' etc.)." : "Syntax error (expected ':' to begin the rule)");" is 161.
Long Statement,Loyc.LLParserGenerator,AntlrStyleParser,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\ParsersAndMacros\AntlrStyleParserGrammar.out.cs,Rule,The length of the statement  "			// Line 126: (((TT.Colon|TT.StartColon)) GrammarExpr TT.Semicolon | TT.At TT.LBrace GrammarExpr TT.RBrace (TT.Semicolon)?)" is 122.
Long Statement,Loyc.LLParserGenerator,AntlrStyleParser,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\ParsersAndMacros\AntlrStyleParserGrammar.out.cs,Rule,The length of the statement  "			return LNode.Call((Symbol) "#noLexicalMacros"' LNode.List(LNode.Call(LNode.List(attrs)' rule' LNode.List(retType ?? F.Void' F.Id(ruleName)' LNode.Call(CodeSymbols.AltList' LNode.List(args))' gExpr))));" is 201.
Long Statement,Loyc.LLParserGenerator,AutoValueSaverVisitor,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\ParsersAndMacros\AutoValueSaverVisitor.cs,MaybeCreateVariableFor,The length of the statement  "				_sink.Error(pred' Localize.Localized("The type of this expression is unknown (did you set LLLPG's 'terminalType'  option?)"));" is 126.
Long Statement,Loyc.LLParserGenerator,StageOneParser,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\ParsersAndMacros\StageOneParser.cs,PrimaryExpr,The length of the statement  "			// Line 125: ( TT.Minus PrimaryExpr | TT.Any TT.Id (TT.In GateExpr / {..}) | Atom greedy(TT.Dot Atom | &{a.Range.EndIndex == LT($LI).StartIndex} (TT.LParen TT.RParen | TT.LBrack TT.RBrack))* )" is 192.
Long Statement,Loyc.LLParserGenerator,StageOneParser,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\ParsersAndMacros\StageOneParser.cs,PrimaryExpr,The length of the statement  "				// Line 135: greedy(TT.Dot Atom | &{a.Range.EndIndex == LT($LI).StartIndex} (TT.LParen TT.RParen | TT.LBrack TT.RBrack))*" is 121.
Long Statement,Loyc.LLParserGenerator,StageOneParser,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\ParsersAndMacros\StageOneParser.cs,Atom,The length of the statement  "			// Line 148: ( (TT.Id|TT.In) | TT.Literal | TT.LParen TT.RParen | TT.LBrace TT.RBrace | TT.LBrack TT.RBrack &((TT.QMark|TT.Star)) )" is 131.
Long Statement,Loyc.LLParserGenerator,StageTwoParser,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\ParsersAndMacros\StageTwoParser.cs,NodeToPredCore,The length of the statement  "					if (expr.ArgCount > args.ArgCount) // don't complain about too few args' in case there are default args (I'm too lazy to check)" is 127.
Long Statement,Loyc.LLParserGenerator,Alts,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\RuleAndPreds\Predicates.cs,Insert,The length of the statement  "						this.InsertSingle(ref insertAt' bAlts.ErrorBranch' bAlts.ExitOnError ? BranchMode.ErrorExit : BranchMode.ErrorContinue' warnings);" is 130.
Long Statement,Loyc.LLParserGenerator,Alts,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\RuleAndPreds\Predicates.cs,Warning_ErrorBranchNotLast,The length of the statement  "			warnings.Warning(b' "The error branch should come last to avoid confusion. It is not numbered like the others' e.g. 'c' is considered the second arm in (a | error b | c).");" is 173.
Long Statement,Loyc.LLParserGenerator,LlpgCoreTests,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\Tests\LlpgCoreTests.cs,MatchComplexSet,The length of the statement  "				static readonly HashSet<int> Odd_set0 = NewSetOfRanges('-'' '.'' '1'' '1'' '3'' '3'' '5'' '5'' '7'' '7'' '9'' '9'' 'a'' 'z');" is 125.
Long Statement,Loyc.LLParserGenerator,LlpgCoreTests,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\Tests\LlpgCoreTests.cs,SymbolTest,The length of the statement  "			Rule Stmt = Rule("Stmt"' Sym("Number") + (Sym("print") + Sym("DQString") | Sym("goto") + Sym("Number")) + Sym("Newline"));" is 122.
Long Statement,Loyc.LLParserGenerator,LlpgCoreTests,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\Tests\LlpgCoreTests.cs,SymbolTestEx,The length of the statement  "			Rule BlockStmt2 = Rule("BlockStmt2"' Sym("fixed"' "lock"' "switch"' "using"' "while"' "for"' "if") + Sym("(") + Expr + Sym(")") + Stmt);" is 136.
Long Statement,Loyc.LLParserGenerator,LlpgParserTests,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\Tests\LlpgParserTests.cs,Stage1Les_MoreTests,The length of the statement  "			TestStage1("~(a..b) | (-a)..b.c"' F.Call(S.OrBits' F.Call(S.NotBits' F.Call(S.DotDot' a' b))' F.Call(S.DotDot' F.Call(S.Sub' a)' F.Dot(b' c))));" is 144.
Long Statement,Loyc.LLParserGenerator,LlpgParserTests,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\Tests\LlpgParserTests.cs,Stage1Les_MoreTests,The length of the statement  "			TestStage1("~ a..b  |  -a ..b.c"' F.Call(S.OrBits' F.Call(S.NotBits' F.Call(S.DotDot' a' b))' F.Call(S.DotDot' F.Call(S.Sub' a)' F.Dot(b' c))));" is 144.
Long Statement,Loyc.LLParserGenerator,LlpgTestLargerExamples,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\Tests\LlpgTestLargerExamples.cs,ParseEmails,The length of the statement  "					static readonly HashSet<int> UsernameChars_set0 = LexerSource.NewSetOfRanges('!'' '!'' '#'' '\''' '*'' '+'' '-'' '-'' '/'' '9'' '='' '='' '?'' '?'' 'A'' 'Z'' '^'' '~');" is 168.
Long Statement,Loyc.LLParserGenerator,LlpgTestLargerExamples,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\Tests\LlpgTestLargerExamples.cs,ScannerlessExpressionParser,The length of the statement  "					public ExprParser(IList<StringToken> tokens' ISourceFile file = null) : base(tokens' default(StringToken)' file ?? EmptySourceFile.Unknown)" is 139.
Long Statement,Loyc.LLParserGenerator,LlpgTestLargerExamples,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\Tests\LlpgTestLargerExamples.cs,ScannerlessExpressionParser,The length of the statement  "						// Line 42: greedy( &{prec <= 10} @""="" Expr | &{prec < 20} (@""&&""|@""||"") Expr | &{prec < 30} (@""!=""|@""<""|@""<=""|@""==""|@"">""|@"">="") Expr | &{prec < 40} (@""-""|@""+"") Expr | &{prec < 50} (@""*""|@""/""|@""<<""|@"">>"") Expr | @""("" Expr @"")"" | @""."" Atom )*" is 277.
Long Statement,Loyc.LLPG,Macros,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\ParsersAndMacros\Macros.cs,ApplyOptions,The length of the statement  "								"FullLLk(bool)' Verbosity(0..3)' NoDefaultArm(bool)' DefaultK(1..9)' AddComments(bool)' AddCsLineDirectives(bool)' and PrematchByDefault(bool)");" is 145.
Complex Conditional,Loyc.LLParserGenerator,Pred,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\RuleAndPreds\Predicates.cs,Or,The conditional expression  "a_ != null && b_ != null && aMode == BranchMode.None && bMode == BranchMode.None"  is complex.
Complex Conditional,Loyc.LLParserGenerator,Alts,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\RuleAndPreds\Predicates.cs,ShouldSuppressWarning,The conditional expression  "div.Slash && 					armA.IsInRange(div.Left' div.Right - 1) && 					armB.IsInRange(div.Left' div.Right - 1) && 					(armA < div.Mid) != (armB < div.Mid)"  is complex.
Complex Conditional,Loyc.LLParserGenerator,Alts,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\RuleAndPreds\Predicates.cs,ToString,The conditional expression  "!(prev.Right == d.Mid && prev.Left <= d.Left && (prev.Slash || !d.Slash))"  is complex.
Complex Conditional,Loyc.LLPG,Macros,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\ParsersAndMacros\Macros.cs,LllpgMacro,The conditional expression  "(args.Count == 1 && (codeGenOptions = args[0]).Name == expectedCodeGenMode) 				|| (args.Count == 0 && isDefault)"  is complex.
Virtual Method Call from Constructor,Loyc.LLParserGenerator,Rule,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\RuleAndPreds\Rule.cs,Rule,The constructor "Rule" calls a virtual method "Calls".
Magic Number,Loyc.LLParserGenerator,CodeGenHelperBase,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\CodeGenHelpers\CodeGenHelperBase.cs,VisitInput,The following statement contains a magic number: (stmt.Calls(_alias' 1) || stmt.CallsMin(S.Alias' 1)) && 				(aliasSet = stmt.Args[0]).Calls(S.Assign' 2)
Magic Number,Loyc.LLParserGenerator,CodeGenHelperBase,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\CodeGenHelpers\CodeGenHelperBase.cs,ErrorBranch,The following statement contains a magic number: coveredS = coveredS.Substring(0' 40) + "...";
Magic Number,Loyc.LLParserGenerator,CodeGenHelperBase,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\CodeGenHelpers\CodeGenHelperBase.cs,ErrorBranch,The following statement contains a magic number: coveredS.Length > 45
Magic Number,Loyc.LLParserGenerator,CodeGenHelperBase,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\CodeGenHelpers\CodeGenHelperBase.cs,GetRelativeCostForSwitch,The following statement contains a magic number: return -1000000;
Magic Number,Loyc.LLParserGenerator,CodeGenHelperBase,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\CodeGenHelpers\CodeGenHelperBase.cs,ShouldGenerateSwitch,The following statement contains a magic number: score[maxIndex] = -1000000;
Magic Number,Loyc.LLParserGenerator,CodeGenHelperBase,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\CodeGenHelpers\CodeGenHelperBase.cs,GenerateSwitch,The following statement contains a magic number: ++index > 0 && (index % 4) != 0
Magic Number,Loyc.LLParserGenerator,CodeGenHelperBase,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\CodeGenHelpers\CodeGenHelperBase.cs,GenerateSwitch,The following statement contains a magic number: stmts.Count > 65535
Magic Number,Loyc.LLParserGenerator,CodeGenHelperBase,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\CodeGenHelpers\CodeGenHelperBase.cs,CreateTryWrapperForRecognizer,The following statement contains a magic number: LNode retType = method.Args[0]' name = method.Args[1]' args = method.Args[2];
Magic Number,Loyc.LLParserGenerator,CodeGenHelperBase,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\CodeGenHelpers\CodeGenHelperBase.cs,VarName,The following statement contains a magic number: nameAndInit.Calls(S.Assign' 2)
Magic Number,Loyc.LLParserGenerator,CodeGenHelperBase,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\CodeGenHelpers\CodeGenHelperBase.cs,VarName,The following statement contains a magic number: varStmt.Calls(S.Var' 2)
Magic Number,Loyc.LLParserGenerator,CodeGenHelperBase,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\CodeGenHelpers\CodeGenHelperBase.cs,CallRule,The following statement contains a magic number: int maxArgCount = target.Basis.CallsMin(S.Fn' 3) ? target.Basis.Args[2].ArgCount : 0;
Magic Number,Loyc.LLParserGenerator,CodeGenHelperBase,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\CodeGenHelpers\CodeGenHelperBase.cs,CallRule,The following statement contains a magic number: int maxArgCount = target.Basis.CallsMin(S.Fn' 3) ? target.Basis.Args[2].ArgCount : 0;
Magic Number,Loyc.LLParserGenerator,GeneralCodeGenHelper,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\CodeGenHelpers\GeneralCodeGenHelper.cs,GenerateMatchExpr,The following statement contains a magic number: baseCount <= 4
Magic Number,Loyc.LLParserGenerator,GeneralCodeGenHelper,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\CodeGenHelpers\GeneralCodeGenHelper.cs,GetRelativeCostForSwitch,The following statement contains a magic number: return -1000000;
Magic Number,Loyc.LLParserGenerator,GeneralCodeGenHelper,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\CodeGenHelpers\GeneralCodeGenHelper.cs,GetRelativeCostForSwitch,The following statement contains a magic number: int ifCost = System.Math.Min(set.BaseSet.Count * 4' 32);
Magic Number,Loyc.LLParserGenerator,GeneralCodeGenHelper,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\CodeGenHelpers\GeneralCodeGenHelper.cs,GetRelativeCostForSwitch,The following statement contains a magic number: int ifCost = System.Math.Min(set.BaseSet.Count * 4' 32);
Magic Number,Loyc.LLParserGenerator,PGNodeSet,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\CodeGenHelpers\GeneralCodeGenHelper.cs,ToString,The following statement contains a magic number: var sb = new StringBuilder(40);
Magic Number,Loyc.LLParserGenerator,IntStreamCodeGenHelper,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\CodeGenHelpers\IntStreamCodeGenHelper.cs,ExampleInt,The following statement contains a magic number: int min = set.IsCharSet ? 32 : 0;
Magic Number,Loyc.LLParserGenerator,IntStreamCodeGenHelper,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\CodeGenHelpers\IntStreamCodeGenHelper.cs,GenerateSetDecl,The following statement contains a magic number: args = ranges.SelectMany(r => { 					if (r.Lo >= 32 && r.Hi < 0xFFFC) 						return new object[] { (char)r.Lo' (char)r.Hi }; 					else 						return new object[] { r.Lo' r.Hi }; 				});
Magic Number,Loyc.LLParserGenerator,IntStreamCodeGenHelper,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\CodeGenHelpers\IntStreamCodeGenHelper.cs,GenerateSetDecl,The following statement contains a magic number: ranges.Count * 2 < set.SizeIgnoringInversion
Magic Number,Loyc.LLParserGenerator,IntStreamCodeGenHelper,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\CodeGenHelpers\IntStreamCodeGenHelper.cs,GenerateMatchExpr,The following statement contains a magic number: var type = set.ChooseMatchType(2' 4);
Magic Number,Loyc.LLParserGenerator,IntStreamCodeGenHelper,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\CodeGenHelpers\IntStreamCodeGenHelper.cs,GenerateMatchExpr,The following statement contains a magic number: var type = set.ChooseMatchType(2' 4);
Magic Number,Loyc.LLParserGenerator,IntStreamCodeGenHelper,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\CodeGenHelpers\IntStreamCodeGenHelper.cs,GetRelativeCostForSwitch,The following statement contains a magic number: int switchCost = (int)System.Math.Min(1 + intset.Size' 1000000);
Magic Number,Loyc.LLParserGenerator,IntStreamCodeGenHelper,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\CodeGenHelpers\IntStreamCodeGenHelper.cs,GetRelativeCostForSwitch,The following statement contains a magic number: int ifCost = System.Math.Min(intset.ExprComplexity() * 4' 32);
Magic Number,Loyc.LLParserGenerator,IntStreamCodeGenHelper,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\CodeGenHelpers\IntStreamCodeGenHelper.cs,GetRelativeCostForSwitch,The following statement contains a magic number: int ifCost = System.Math.Min(intset.ExprComplexity() * 4' 32);
Magic Number,Loyc.LLParserGenerator,PGIntSet,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\CodeGenHelpers\PGIntSet.cs,ExprComplexity,The following statement contains a magic number: return _ranges.Select(r => r.Hi != r.Lo ? 2 : 1).Sum();
Magic Number,Loyc.LLParserGenerator,PGIntSet,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\CodeGenHelpers\PGIntSet.cs,ChooseMatchType,The following statement contains a magic number: return ranges * 2 < singles && ranges < maxRanges ? Match.Ranges : Match.Singles;
Magic Number,Loyc.LLParserGenerator,PredictionAnalysisVisitor,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\CoreEngine\AnalysisVisitors.cs,Visit,The following statement contains a magic number: firstSets[i].Alt == -1 || LLPG.Verbosity > 2
Magic Number,Loyc.LLParserGenerator,PredictionAnalysisVisitor,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\CoreEngine\AnalysisVisitors.cs,Visit,The following statement contains a magic number: TEMP.Millisec > 500
Magic Number,Loyc.LLParserGenerator,PredictionAnalysisVisitor,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\CoreEngine\AnalysisVisitors.cs,Visit,The following statement contains a magic number: (LLPG.Verbosity & 2) != 0
Magic Number,Loyc.LLParserGenerator,ApplyPrematchVisitor,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\CoreEngine\AnalysisVisitors.cs,Visit,The following statement contains a magic number: ++_ruleDepth < 10
Magic Number,Loyc.LLParserGenerator,GenerateCodeVisitor,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\CoreEngine\GenerateCodeVisitor.cs,DeduplicateLabels,The following statement contains a magic number: label.Length > 2 && label[label.Length-2] == '_' && label[label.Length-1].IsInRange('a'''y')
Magic Number,Loyc.LLParserGenerator,GenerateCodeVisitor,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\CoreEngine\GenerateCodeVisitor.cs,DeduplicateLabels,The following statement contains a magic number: label.Length > 2 && label[label.Length-2] == '_' && label[label.Length-1].IsInRange('a'''y')
Magic Number,Loyc.LLParserGenerator,GrammarPos,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\CoreEngine\KthSet.cs,GetHashCode,The following statement contains a magic number: hc ^= Return.GetHashCode() * 13;
Magic Number,Loyc.LLParserGenerator,ComputeNext,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\CoreEngine\LLParserGenerator.cs,Visit,The following statement contains a magic number: _stackDepth > 250
Magic Number,Loyc.LLParserGenerator,AntlrStyleParser,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\ParsersAndMacros\AntlrStyleParserGrammar.out.cs,ParseHostReturnType,The following statement contains a magic number: result.Calls(S.Var' 2)
Magic Number,Loyc.LLParserGenerator,AntlrStyleParser,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\ParsersAndMacros\AntlrStyleParserGrammar.out.cs,RulesAndStuff,The following statement contains a magic number: switch ((TT) LA0) { 			case TT.At: case TT.AttrKeyword: case TT.LBrack: 				result.Add(Rule()); 				break; 			case TT.Id: 				{ 					switch ((TT) LA(1)) { 					case TT.Id: case TT.LBrack: 						result.Add(Rule()); 						break; 					case TT.LParen: 						{ 							switch ((TT) LA(3)) { 							case TT.At: case TT.Colon: case TT.Id: case TT.Returns: 							case TT.StartColon: 								result.Add(Rule()); 								break; 							default: 								result.Add(HostCall()); 								break; 							} 						} 						break; 					case TT.At: case TT.Colon: case TT.Returns: case TT.StartColon: 						result.Add(Rule()); 						break; 					default: 						result.Add(HostBlock()); 						break; 					} 				} 				break; 			case TT.LParen: 				result.Add(HostCall()); 				break; 			default: 				result.Add(HostBlock()); 				break; 			}
Magic Number,Loyc.LLParserGenerator,AntlrStyleParser,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\ParsersAndMacros\AntlrStyleParserGrammar.out.cs,RulesAndStuff,The following statement contains a magic number: switch ((TT) LA0) { 				case TT.At: case TT.AttrKeyword: case TT.LBrack: 					result.Add(Rule()); 					break; 				case TT.Id: 					{ 						switch ((TT) LA(1)) { 						case TT.Id: case TT.LBrack: 							result.Add(Rule()); 							break; 						case TT.LParen: 							{ 								switch ((TT) LA(3)) { 								case TT.At: case TT.Colon: case TT.Id: case TT.Returns: 								case TT.StartColon: 									result.Add(Rule()); 									break; 								default: 									result.Add(HostCall()); 									break; 								} 							} 							break; 						case TT.At: case TT.Colon: case TT.Returns: case TT.StartColon: 							result.Add(Rule()); 							break; 						default: 							result.Add(HostBlock()); 							break; 						} 					} 					break; 				case TT.LParen: 					result.Add(HostCall()); 					break; 				case TT.LBrace: 					result.Add(HostBlock()); 					break; 				default: 					goto stop; 				}
Magic Number,Loyc.LLParserGenerator,Alts,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\RuleAndPreds\Predicates.cs,ToString,The following statement contains a magic number: Arms.Count >= 3
Magic Number,Loyc.LLParserGenerator,Rule,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\RuleAndPreds\Rule.cs,Rule,The following statement contains a magic number: basis != null && basis.Calls(S.Fn) && basis.ArgCount >= 3
Magic Number,Loyc.LLParserGenerator,Rule,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\RuleAndPreds\Rule.cs,GetMethodSignature,The following statement contains a magic number: parts.RemoveAt(3);
Magic Number,Loyc.LLParserGenerator,Rule,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\RuleAndPreds\Rule.cs,GetMethodSignature,The following statement contains a magic number: parts.Count == 4
Magic Number,Loyc.LLParserGenerator,Rule,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\RuleAndPreds\Rule.cs,GetMethodSignature,The following statement contains a magic number: Basis != null && Basis.Calls(S.Fn) && Basis.ArgCount.IsInRange(3' 4)
Magic Number,Loyc.LLParserGenerator,Rule,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\RuleAndPreds\Rule.cs,GetMethodSignature,The following statement contains a magic number: Basis != null && Basis.Calls(S.Fn) && Basis.ArgCount.IsInRange(3' 4)
Magic Number,Loyc.LLParserGenerator,Rule,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\RuleAndPreds\Rule.cs,CreateMethod,The following statement contains a magic number: Debug.Assert(parts.Count == 3);
Magic Number,Loyc.LLParserGenerator,LlpgCoreTests,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\Tests\LlpgCoreTests.cs,AddNumbers,The following statement contains a magic number: var stmt = F.Assign(n' F.Call(S.Checked'  					F.Call(S.Add' F.Call(S.Mul' n' F.Literal(10))' 					   F.InParens(F.Call(S.Sub' F.Id("c")' F.Literal('0'))))));
Magic Number,Loyc.LLParserGenerator,LlpgCoreTests,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\Tests\LlpgCoreTests.cs,MLComment,The following statement contains a magic number: Rule MLComment = Rule("MLComment"' C('/') + '*' + Star(AnyCh'false) + '*' + '/'' Token' 2);
Magic Number,Loyc.LLParserGenerator,LlpgCoreTests,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\Tests\LlpgCoreTests.cs,OneAmbiguityExpected,The following statement contains a magic number: var AmbigLL2 = Rule("AmbigLL2"' Opt(Seq("ab")) + 'a' + Opt(C('b'))' Token' 2);
Magic Number,Loyc.LLParserGenerator,LlpgCoreTests,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\Tests\LlpgCoreTests.cs,OneAmbiguityExpected,The following statement contains a magic number: var UnambigLL3 = Rule("UnambigLL3"' Opt(Seq("ab")) + 'a' + Opt(C('b'))' Token' 3);
Magic Number,Loyc.LLParserGenerator,LlpgCoreTests,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\Tests\LlpgCoreTests.cs,LeftRecursive1,The following statement contains a magic number: A.K = 3;
Magic Number,Loyc.LLParserGenerator,LlpgCoreTests,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\Tests\LlpgCoreTests.cs,DifferentDefault,The following statement contains a magic number: star2.DefaultArm = 2;
Magic Number,Loyc.LLParserGenerator,LlpgCoreTests,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\Tests\LlpgCoreTests.cs,SlashWarningTests,The following statement contains a magic number: Rule slashes = Rule("Slashes"' all' Token' 4);
Magic Number,Loyc.LLParserGenerator,LlpgCoreTests,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\Tests\LlpgCoreTests.cs,SlashWarningTests,The following statement contains a magic number: Assert.IsTrue(all.ShouldSuppressWarning(0' 2));
Magic Number,Loyc.LLParserGenerator,LlpgCoreTests,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\Tests\LlpgCoreTests.cs,SlashWarningTests,The following statement contains a magic number: Assert.IsTrue(all.ShouldSuppressWarning(2' 0));
Magic Number,Loyc.LLParserGenerator,LlpgCoreTests,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\Tests\LlpgCoreTests.cs,SlashWarningTests,The following statement contains a magic number: Assert.IsFalse(all.ShouldSuppressWarning(4' 5));
Magic Number,Loyc.LLParserGenerator,LlpgCoreTests,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\Tests\LlpgCoreTests.cs,SlashWarningTests,The following statement contains a magic number: Assert.IsFalse(all.ShouldSuppressWarning(4' 5));
Magic Number,Loyc.LLParserGenerator,LlpgCoreTests,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\Tests\LlpgCoreTests.cs,SlashWarningTests,The following statement contains a magic number: Assert.IsFalse(all.ShouldSuppressWarning(3' 4));
Magic Number,Loyc.LLParserGenerator,LlpgCoreTests,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\Tests\LlpgCoreTests.cs,SlashWarningTests,The following statement contains a magic number: Assert.IsFalse(all.ShouldSuppressWarning(3' 4));
Magic Number,Loyc.LLParserGenerator,LlpgCoreTests,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\Tests\LlpgCoreTests.cs,SlashWarningTests,The following statement contains a magic number: Assert.IsFalse(all.ShouldSuppressWarning(3' 5));
Magic Number,Loyc.LLParserGenerator,LlpgCoreTests,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\Tests\LlpgCoreTests.cs,SlashWarningTests,The following statement contains a magic number: Assert.IsFalse(all.ShouldSuppressWarning(3' 5));
Magic Number,Loyc.LLParserGenerator,LlpgCoreTests,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\Tests\LlpgCoreTests.cs,SlashWarningTests,The following statement contains a magic number: Assert.IsFalse(all.ShouldSuppressWarning(3' 6));
Magic Number,Loyc.LLParserGenerator,LlpgCoreTests,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\Tests\LlpgCoreTests.cs,SlashWarningTests,The following statement contains a magic number: Assert.IsFalse(all.ShouldSuppressWarning(3' 6));
Magic Number,Loyc.LLParserGenerator,LlpgCoreTests,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\Tests\LlpgCoreTests.cs,SlashWarningTests,The following statement contains a magic number: Assert.IsTrue(all.ShouldSuppressWarning(4' 6));
Magic Number,Loyc.LLParserGenerator,LlpgCoreTests,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\Tests\LlpgCoreTests.cs,SlashWarningTests,The following statement contains a magic number: Assert.IsTrue(all.ShouldSuppressWarning(4' 6));
Magic Number,Loyc.LLParserGenerator,LlpgCoreTests,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\Tests\LlpgCoreTests.cs,SlashWarningTests,The following statement contains a magic number: Assert.IsTrue(all.ShouldSuppressWarning(5' 6));
Magic Number,Loyc.LLParserGenerator,LlpgCoreTests,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\Tests\LlpgCoreTests.cs,SlashWarningTests,The following statement contains a magic number: Assert.IsTrue(all.ShouldSuppressWarning(5' 6));
Magic Number,Loyc.LLParserGenerator,LlpgCoreTests,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\Tests\LlpgCoreTests.cs,SlashWarningTests,The following statement contains a magic number: Assert.IsTrue(all.ShouldSuppressWarning(11' 12));
Magic Number,Loyc.LLParserGenerator,LlpgCoreTests,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\Tests\LlpgCoreTests.cs,SlashWarningTests,The following statement contains a magic number: Assert.IsTrue(all.ShouldSuppressWarning(11' 12));
Magic Number,Loyc.LLParserGenerator,LlpgCoreTests,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\Tests\LlpgCoreTests.cs,SlashWarningTests,The following statement contains a magic number: Assert.IsFalse(all.ShouldSuppressWarning(10' 12));
Magic Number,Loyc.LLParserGenerator,LlpgCoreTests,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\Tests\LlpgCoreTests.cs,SlashWarningTests,The following statement contains a magic number: Assert.IsFalse(all.ShouldSuppressWarning(10' 12));
Magic Number,Loyc.LLParserGenerator,LlpgCoreTests,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\Tests\LlpgCoreTests.cs,SlashWarningTests,The following statement contains a magic number: Assert.IsFalse(all.ShouldSuppressWarning(10' 11));
Magic Number,Loyc.LLParserGenerator,LlpgCoreTests,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\Tests\LlpgCoreTests.cs,SlashWarningTests,The following statement contains a magic number: Assert.IsFalse(all.ShouldSuppressWarning(10' 11));
Magic Number,Loyc.LLParserGenerator,LlpgCoreTests,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\Tests\LlpgCoreTests.cs,SlashWarningTests,The following statement contains a magic number: Assert.IsFalse(all.ShouldSuppressWarning(8' 9));
Magic Number,Loyc.LLParserGenerator,LlpgCoreTests,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\Tests\LlpgCoreTests.cs,SlashWarningTests,The following statement contains a magic number: Assert.IsFalse(all.ShouldSuppressWarning(8' 9));
Magic Number,Loyc.LLParserGenerator,LlpgCoreTests,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\Tests\LlpgCoreTests.cs,SlashWarningTests,The following statement contains a magic number: Assert.IsTrue(all.ShouldSuppressWarning(8' 10));
Magic Number,Loyc.LLParserGenerator,LlpgCoreTests,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\Tests\LlpgCoreTests.cs,SlashWarningTests,The following statement contains a magic number: Assert.IsTrue(all.ShouldSuppressWarning(8' 10));
Magic Number,Loyc.LLParserGenerator,LlpgCoreTests,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\Tests\LlpgCoreTests.cs,SlashWarningTests,The following statement contains a magic number: Assert.IsTrue(all.ShouldSuppressWarning(8' 12));
Magic Number,Loyc.LLParserGenerator,LlpgCoreTests,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\Tests\LlpgCoreTests.cs,SlashWarningTests,The following statement contains a magic number: Assert.IsTrue(all.ShouldSuppressWarning(8' 12));
Magic Number,Loyc.LLParserGenerator,LlpgCoreTests,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\Tests\LlpgCoreTests.cs,SlashWarningTests,The following statement contains a magic number: Assert.IsTrue(all.ShouldSuppressWarning(0' 3));
Magic Number,Loyc.LLParserGenerator,LlpgCoreTests,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\Tests\LlpgCoreTests.cs,SlashWarningTests,The following statement contains a magic number: Assert.IsTrue(all.ShouldSuppressWarning(1' 4));
Magic Number,Loyc.LLParserGenerator,LlpgCoreTests,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\Tests\LlpgCoreTests.cs,SlashWarningTests,The following statement contains a magic number: Assert.IsTrue(all.ShouldSuppressWarning(2' 5));
Magic Number,Loyc.LLParserGenerator,LlpgCoreTests,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\Tests\LlpgCoreTests.cs,SlashWarningTests,The following statement contains a magic number: Assert.IsTrue(all.ShouldSuppressWarning(2' 5));
Magic Number,Loyc.LLParserGenerator,LlpgCoreTests,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\Tests\LlpgCoreTests.cs,SlashWarningTests,The following statement contains a magic number: Assert.IsTrue(all.ShouldSuppressWarning(0' 6));
Magic Number,Loyc.LLParserGenerator,LlpgCoreTests,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\Tests\LlpgCoreTests.cs,SlashWarningTests,The following statement contains a magic number: i < 7
Magic Number,Loyc.LLParserGenerator,LlpgCoreTests,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\Tests\LlpgCoreTests.cs,SlashWarningTests,The following statement contains a magic number: Assert.IsTrue(all.ShouldSuppressWarning(7' i));
Magic Number,Loyc.LLParserGenerator,LlpgCoreTests,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\Tests\LlpgCoreTests.cs,SlashWarningTests,The following statement contains a magic number: i < 12
Magic Number,Loyc.LLParserGenerator,LlpgParserTests,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\Tests\LlpgParserTests.cs,Stage1Les_SimpleTests,The following statement contains a magic number: TestStage1("123"' F.Literal(123));
Magic Number,Loyc.LLPG,Macros,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\ParsersAndMacros\Macros.cs,rule,The following statement contains a magic number: sig.Calls(S.Var' 2)
Magic Number,Loyc.LLPG,Macros,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\ParsersAndMacros\Macros.cs,rule,The following statement contains a magic number: sig.Calls(S.ColonColon' 2)
Magic Number,Loyc.LLPG,Macros,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\ParsersAndMacros\Macros.cs,rule,The following statement contains a magic number: (isToken = node.Calls(_token' 2)) || node.Calls(_rule' 2)
Magic Number,Loyc.LLPG,Macros,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\ParsersAndMacros\Macros.cs,rule,The following statement contains a magic number: (isToken = node.Calls(_token' 2)) || node.Calls(_rule' 2)
Magic Number,Loyc.LLPG,Macros,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\ParsersAndMacros\Macros.cs,ECSharpRule,The following statement contains a magic number: !(isProp = node.Calls(S.Property' 4)) && !node.Calls(S.Fn' 4)
Magic Number,Loyc.LLPG,Macros,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\ParsersAndMacros\Macros.cs,ECSharpRule,The following statement contains a magic number: !(isProp = node.Calls(S.Property' 4)) && !node.Calls(S.Fn' 4)
Magic Number,Loyc.LLPG,Macros,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\ParsersAndMacros\Macros.cs,ECSharpRule,The following statement contains a magic number: LNode args = node.Args[2];
Magic Number,Loyc.LLPG,Macros,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\ParsersAndMacros\Macros.cs,run_LLLPG,The following statement contains a magic number: node.ArgCount != 2  				|| (helper = node.Args[0].Value as IPGCodeGenHelper) == null  				|| !(hasBraces = (body = node.Args[1]).Calls(S.Braces))
Magic Number,Loyc.LLPG,Macros,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\ParsersAndMacros\Macros.cs,run_LLLPG,The following statement contains a magic number: (isToken = stmt.Calls(_hash_token' 4)) || stmt.Calls(_hash_rule' 4)
Magic Number,Loyc.LLPG,Macros,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\ParsersAndMacros\Macros.cs,run_LLLPG,The following statement contains a magic number: (isToken = stmt.Calls(_hash_token' 4)) || stmt.Calls(_hash_rule' 4)
Magic Number,Loyc.LLPG,Macros,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\ParsersAndMacros\Macros.cs,ApplyRuleOptions,The following statement contains a magic number: node = node.WithAttrs(node.Attrs.WhereSelect(attr => { 				if (attr.ArgCount > 1) 					return attr; 				LNode key = attr.Target ?? attr; 				object value = null; 				if (attr.ArgCount == 1) 					value = attr.Args[0].Value; 				switch (key.Name.Name) { 					case "fullLLk": case "FullLLk": 						SetOption<bool>(context' key' value ?? G.BoxedTrue' v => rule.FullLLk = v); 						break; 					case "#private": case "private": 						SetOption<bool>(context' key' value ?? G.BoxedTrue' v => rule.IsPrivate = v); 						return attr; // keep attribute 					case "#public": case "#internal": case "#protected": 					case "public": case "internal": case "protected": // this is before macros run' and non-special names are used in LES 						rule.IsPrivate = false; 						return attr; // keep attribute 					case "token": case "Token": 						SetOption<bool>(context' key' value ?? G.BoxedTrue' v => rule.IsToken = v); 						break; 					case "start": case "Start": 						SetOption<bool>(context' key' value ?? G.BoxedTrue' v => rule.IsStartingRule = v); 						break; 					case "#extern": case "extern": case "Extern": 						SetOption<bool>(context' key' value ?? G.BoxedTrue' v => rule.IsExternal = v); 						break; 					case "#inline": case "inline": case "Inline": 					case "#fragment": case "fragment": 						SetOption<bool>(context' key' value ?? G.BoxedTrue' v => rule.IsInline = v); 						break; 					case "k": case "K": case "LL": 						SetOption<int>(context' key' value' k => rule.K = k); 						break; 					case "recognizer": case "Recognizer": 						LNode sig = attr.Args[0' null]; 						if (sig != null) { 							if (sig.Calls(S.Braces' 1)) 								sig = sig.Args[0];  							// Invoke macros here so that LES code like "public fn Foo()::bool" 							// is transformed into a method signature. 							sig = context.PreProcess(sig); 						} 						if (sig != null && sig.CallsMin(S.Fn' 3)) 							rule.MakeRecognizerVersion(sig).TryWrapperNeeded(); 						else 							context.Sink.Error(sig' "'recognizer' expects one parameter' a method signature."); 						break; 					default: 						return attr; 				} 				return NoValue.Value; 			}).ToArray());
Duplicate Code,Loyc.LLParserGenerator,AntlrStyleParser,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\ParsersAndMacros\AntlrStyleParserGrammar.out.cs,RulesAndStuff,The method contains a code clone-set at the following line numbers (starting from the method definition): ((4' 38)' (45' 79))
Missing Default,Loyc.LLParserGenerator,StageOneParser,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\ParsersAndMacros\StageOneParser.cs,AssignExpr,The following switch statement is missing a default case: switch ((TT) LA(1)) { 				case TT.And: case TT.AndNot: case TT.Any: case TT.Id: 				case TT.In: case TT.InvertSet: case TT.LBrace: case TT.LBrack: 				case TT.Literal: case TT.LParen: case TT.Minus: 					{ 						op = MatchAny(); 						var b = AssignExpr(); 						// line 103 						Infix(ref a' (Symbol) op.Value' b); 					} 					break; 				}
Missing Default,Loyc.LLParserGenerator,StageOneParser,C:\research\architectureSmells\repos\qwertie_Loyc\Main\LLLPG\ParsersAndMacros\StageOneParser.cs,RangeExpr,The following switch statement is missing a default case: switch ((TT) LA(1)) { 				case TT.Any: case TT.Id: case TT.In: case TT.LBrace: 				case TT.LBrack: case TT.Literal: case TT.LParen: case TT.Minus: 					{ 						var op = MatchAny(); 						var b = PrimaryExpr(); 						// line 120 						Infix(ref a' (Symbol) op.Value' b); 					} 					break; 				}
