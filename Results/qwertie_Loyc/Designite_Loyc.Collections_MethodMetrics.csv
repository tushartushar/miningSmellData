Method,LOC,CC,PC
AList<T>:AList,1,1,0
AList<T>:AList,1,1,1
AList<T>:AList,1,1,1
AList<T>:AList,1,1,1
AList<T>:AList,1,1,2
AList<T>:AList,1,1,2
AList<T>:AList,1,1,2
AList<T>:NewRootLeaf,3,1,0
AList<T>:AddRange,1,1,1
AList<T>:Add,3,1,1
AList<T>:AddRange,3,1,1
AList<T>:InsertRange,1,1,2
AList<T>:InsertRange,1,1,3
AList<T>:InsertRange,1,1,2
AList<T>:Insert,26,5,2
AList<T>:InsertRange,10,3,2
AList<T>:InsertRange,15,2,2
AList<T>:TrySet,13,5,2
AList<T>:SetHelper,9,3,2
AList<T>:Clone,3,1,1
AList<T>:Clone,3,1,0
AList<T>:Clone,3,1,1
AList<T>:CopySection,3,1,2
AList<T>:cov_RemoveSection,1,1,2
AList<T>:RemoveSection,11,2,2
AList<T>:Swap,3,1,1
AList<T>:Append,1,1,1
AList<T>:Append,1,1,2
AList<T>:Prepend,1,1,1
AList<T>:Prepend,1,1,2
AList<T>:Sort,3,1,0
AList<T>:Sort,3,1,1
AList<T>:Sort,3,1,1
AList<T>:Sort,3,1,3
AList<T>:Sort,27,5,3
AList<T>:SortCore,29,3,3
AList<T>:ForceThaw,16,4,2
AList<T>:TreeSort,24,6,3
AList<T>:TreeQuickSort,85,6,4
AList<T>:SortCopy,18,3,2
AList<T>:MedianOf3,10,3,4
AList<T>:Verify,3,1,1
AListBase<T>:AListBase,1,1,0
AListBase<T>:AListBase,1,1,1
AListBase<T>:AListBase,1,1,2
AListBase<T>:AListBase,1,1,2
AListBase<T>:AListBase,1,1,2
AListBase<T>:SplitRoot,3,1,2
AListBase<T>:GetKey,3,1,1
AListBase<T>:DetectSizeOverflow,3,1,1
AListBase<T>:Add,0,1,1
AListBase<T>:Insert,0,1,2
AListBase<T>:InsertRange,0,1,2
AListBase<T>:TrySet,0,1,2
AListBase<T>:InsertRange,0,1,2
AListBase<T>:BeginInsertRange,12,3,3
AListBase<T>:DoneInsertRange,7,2,1
AListBase<T>:InsertRange,15,3,3
AListBase<T>:AddRange,3,1,1
AListBase<T>:AddRange,3,1,1
AListBase<T>:Resize,6,2,1
AListBase<T>:IndexOf,3,1,1
AListBase<T>:Contains,3,1,1
AListBase<T>:Remove,7,2,1
AListBase<T>:Clone,0,1,1
AListBase<T>:Clone,5,1,0
AListBase<T>:cov_RemoveSection,0,1,2
AListBase<T>:RemoveSection,3,1,2
AListBase<T>:Slice,3,1,2
AListBase<T>:Combine,74,3,3
AListBase<T>:PushFirst,3,1,1
AListBase<T>:PushLast,3,1,1
AListBase<T>:TryPopFirst,8,2,0
AListBase<T>:TryPeekFirst,3,1,0
AListBase<T>:TryPopLast,8,2,0
AListBase<T>:TryPeekLast,3,1,0
AListBase<K;T>:AListBase,4,1,0
AListBase<K;T>:AListBase,2,1,1
AListBase<K;T>:AListBase,8,3,2
AListBase<K;T>:AListBase,12,4,2
AListBase<K;T>:AListBase,10,2,2
AListBase<K;T>:NewRootLeaf,0,1,0
AListBase<K;T>:SplitRoot,0,1,2
AListBase<K;T>:NewEnumerator,3,1,3
AListBase<K;T>:GetKey,0,1,1
AListBase<K;T>:CheckPoint,8,2,0
AListBase<K;T>:AutoThrow,3,2,0
AListBase<K;T>:ThrowFrozen,11,2,0
AListBase<K;T>:CallListChanging,14,2,1
AListBase<K;T>:AutoCreateOrCloneRoot,13,3,0
AListBase<K;T>:AutoSplit,19,4,2
AListBase<K;T>:HandleChangedOrUndersizedRoot,23,5,1
AListBase<K;T>:DoSingleOperation,37,5,1
AListBase<K;T>:OrganizedRetrieve,11,3,1
AListBase<K;T>:RemoveAt,6,2,1
AListBase<K;T>:RemoveRange,10,4,2
AListBase<K;T>:RemoveInternal,24,4,2
AListBase<K;T>:RemoveAll,15,4,1
AListBase<K;T>:Clear,1,1,0
AListBase<K;T>:ClearInternal,13,2,1
AListBase<K;T>:JustClear,13,2,0
AListBase<K;T>:IndexesOf,1,1,1
AListBase<K;T>:IndexesOf,8,2,3
AListBase<K;T>:LinearScanFor,12,3,3
AListBase<K;T>:CopyTo,3,1,2
AListBase<K;T>:GetEnumerator,1,1,0
AListBase<K;T>:GetEnumerator,1,1,0
AListBase<K;T>:GetEnumerator,1,1,0
AListBase<K;T>:GetEnumerator,1,1,1
AListBase<K;T>:GetEnumerator,1,1,2
AListBase<K;T>:GetEnumerator,5,1,3
AListBase<K;T>:GetEnumerator,12,4,3
AListBase<K;T>:TryGet,9,3,2
AListBase<K;T>:Freeze,5,2,0
AListBase<K;T>:CopySectionHelper,5,2,2
AListBase<K;T>:CopySectionHelper,11,4,2
AListBase<K;T>:SwapHelper,23,2,2
AListBase<K;T>:Slice,1,1,2
AListBase<K;T>:Slice,3,1,2
AListBase<K;T>:GetImmutableCount,3,1,0
AListBase<K;T>:AddObserver,22,2,1
AListBase<K;T>:RemoveObserver,20,5,1
Enumerator:Enumerator,15,1,4
Enumerator:PrepareToStart,37,6,0
Enumerator:Enumerator,13,2,1
Enumerator:MoveNext,49,8,1
Enumerator:MovePrevious,48,8,1
Enumerator:MoveNext,5,1,0
Enumerator:MovePrev,5,1,0
Enumerator:Reset,8,3,0
Enumerator:Dispose,1,1,0
Enumerator:LLSetCurrent,6,2,1
Enumerator:UnfreezeCurrentLeaf,33,3,0
Enumerator:Enumerator,1,1,1
Enumerator:MoveNext,1,1,0
Enumerator:Dispose,1,1,0
Enumerator:Reset,1,1,0
Enumerator:Enumerator,1,1,1
Enumerator:Enumerator,1,1,1
Enumerator:MoveNext,8,2,0
Enumerator:Reset,3,1,0
Enumerator:Dispose,1,1,0
Enumerator:Enumerator,1,1,1
Enumerator:Enumerator,1,1,2
Enumerator:Enumerator,1,1,1
Enumerator:Enumerator,8,1,2
Enumerator:MoveNext,19,3,0
Enumerator:Reset,3,1,0
Enumerator:Dispose,2,1,0
AListReverseView:AListReverseView,1,1,1
AListReverseView:TryGet,3,1,2
AListReverseView:GetEnumerator,3,1,0
AListReverseView:GetEnumerator,1,1,0
AListReverseView:GetEnumerator,1,1,0
AListReverseView:Slice,1,1,2
AListReverseView:Slice,1,1,2
AListNode<K;T>:Insert,3,1,4
AListNode<K;T>:InsertRange,3,1,5
AListNode<K;T>:DoSingleOperation,3,1,3
AListNode<K;T>:DoSparseOperation,3,1,4
AListNode<K;T>:SparseGetNearest,3,1,2
AListNode<K;T>:GetLastItem,0,1,0
AListNode<K;T>:SetAt,0,1,3
AListNode<K;T>:RemoveAt,0,1,3
AListNode<K;T>:TakeFromRight,0,1,2
AListNode<K;T>:TakeFromLeft,0,1,2
AListNode<K;T>:Freeze,0,1,0
AListNode<K;T>:DetachedClone,0,1,0
AListNode<K;T>:AutoClone,7,2,3
AListNode<K;T>:Clone,6,2,3
AListNode<K;T>:Verify,1,1,1
AListNode<K;T>:CopySection,0,1,3
AListNode<K;T>:GetObserver,1,1,1
AListNode<K;T>:HasListChanging,1,1,1
AListNode<K;T>:CallListChanging,4,2,2
AListNode<K;T>:GetImmutableCount,0,1,1
AListNode<K;T>:GetRealItemCount,1,1,0
AListSparseOperation:AListSparseOperation,10,1,5
ObserverMgr:ObserverMgr,6,2,3
ObserverMgr:Attach,3,1,2
ObserverMgr:Detach,3,1,0
ObserverMgr:RootChanged,7,2,2
ObserverMgr:ItemAdded,6,2,2
ObserverMgr:ItemRemoved,6,2,2
ObserverMgr:NodeAdded,6,2,2
ObserverMgr:NodeRemoved,6,2,2
ObserverMgr:RemoveAll,6,2,1
ObserverMgr:AddAll,6,2,1
ObserverMgr:IllegalException,2,1,1
ObserverMgr:CheckPoint,4,2,0
ObserverMgr:AddObserver,9,3,1
ObserverMgr:RemoveObserver,8,2,1
BDictionary<K;V>:BDictionary,1,1,0
BDictionary<K;V>:BDictionary,1,1,1
BDictionary<K;V>:BDictionary,1,1,2
BDictionary<K;V>:BDictionary,1,1,1
BDictionary<K;V>:BDictionary,1,1,2
BDictionary<K;V>:BDictionary,1,1,3
BDictionary<K;V>:BDictionary,1,1,2
BDictionary<K;V>:BDictionary,1,1,2
BDictionary<K;V>:NewRootLeaf,3,1,0
BDictionary<K;V>:SplitRoot,3,1,2
BDictionary<K;V>:GetKey,3,1,1
BDictionary<K;V>:CompareToKey,3,1,2
BDictionary<K;V>:DoSingleOperation,6,1,1
BDictionary<K;V>:OrganizedRetrieve,5,1,1
BDictionary<K;V>:Add,6,1,1
BDictionary<K;V>:IndexOf,11,2,1
BDictionary<K;V>:Contains,3,1,1
BDictionary<K;V>:Remove,7,1,1
BDictionary<K;V>:FindLowerBound,4,1,1
BDictionary<K;V>:FindLowerBound,7,1,2
BDictionary<K;V>:FindLowerBound,4,1,1
BDictionary<K;V>:FindLowerBound,10,2,2
BDictionary<K;V>:IndexOf,8,2,1
BDictionary<K;V>:FindUpperBound,10,1,1
BDictionary<K;V>:FindUpperBound,6,2,1
BDictionary<K;V>:AddRange,1,1,1
BDictionary<K;V>:AddRange,4,2,1
BDictionary<K;V>:RemoveRange,7,3,1
BDictionary<K;V>:RemoveRange,7,3,1
BDictionary<K;V>:Add,3,1,2
BDictionary<K;V>:ContainsKey,5,1,1
BDictionary<K;V>:Remove,8,1,1
BDictionary<K;V>:TryGetValue,7,1,2
BDictionary<K;V>:Clone,3,1,0
BDictionary<K;V>:Clone,3,1,1
BDictionary<K;V>:CopySection,3,1,2
BDictionary<K;V>:RemoveSection,8,2,2
BDictionary<K;V>:AddIfNotPresent,7,1,2
BDictionary<K;V>:AddIfNotPresent,3,1,2
BDictionary<K;V>:AddIfNotPresent,12,2,2
BDictionary<K;V>:SetAndGetOldValue,3,1,2
BDictionary<K;V>:SetAndGetOldValue,12,2,2
BDictionary<K;V>:ReplaceIfPresent,7,1,2
BDictionary<K;V>:ReplaceIfPresent,3,1,2
BDictionary<K;V>:ReplaceIfPresent,12,2,2
BList<T>:BList,1,1,0
BList<T>:BList,1,1,1
BList<T>:BList,1,1,2
BList<T>:BList,1,1,1
BList<T>:BList,1,1,2
BList<T>:BList,1,1,3
BList<T>:BList,1,1,2
BList<T>:BList,1,1,2
BList<T>:NewRootLeaf,3,1,0
BList<T>:SplitRoot,3,1,2
BList<T>:GetKey,3,1,1
BList<T>:Add,1,1,1
BList<T>:Add,1,1,1
BList<T>:Add,8,1,1
BList<T>:Remove,3,1,1
BList<T>:RemoveAll,7,1,1
BList<T>:Do,10,1,2
BList<T>:Do,8,1,2
BList<T>:AddRange,1,1,1
BList<T>:AddRange,1,1,1
BList<T>:AddRange,3,1,1
BList<T>:RemoveRange,3,1,1
BList<T>:DoRange,19,2,2
BList<T>:Clone,3,1,0
BList<T>:Clone,3,1,1
BList<T>:CopySection,3,1,2
BList<T>:RemoveSection,11,2,2
BList<T>:IndexOf,11,2,1
BList<T>:Contains,3,1,1
BList<T>:FindLowerBound,4,1,1
BList<T>:FindLowerBound,10,1,2
BList<T>:FindLowerBound,4,1,1
BList<T>:FindLowerBound,13,2,2
BList<T>:FindUpperBound,10,1,1
BList<T>:FindUpperBound,6,2,1
BList<T>:IndexOfExact,18,5,1
BMultiMap<K;V>:BMultiMap,1,1,0
BMultiMap<K;V>:BMultiMap,1,1,1
BMultiMap<K;V>:BMultiMap,4,1,2
BMultiMap<K;V>:BMultiMap,1,1,1
BMultiMap<K;V>:BMultiMap,1,1,2
BMultiMap<K;V>:BMultiMap,1,1,3
BMultiMap<K;V>:BMultiMap,5,1,4
BMultiMap<K;V>:CompareKeyAndValue,6,2,2
BMultiMap<K;V>:CompareKeysOnly,3,1,2
BMultiMap<K;V>:UpperBoundCompare,4,1,2
BMultiMap<K;V>:AddIfUnique,3,1,2
BMultiMap<K;V>:ContainsKey,7,1,1
BMultiMap<K;V>:FirstIndexOf,8,2,1
BMultiMap<K;V>:RemoveAny,7,1,1
BMultiMap<K;V>:Remove,20,3,2
BMultiMap<K;V>:RemoveAll,3,1,1
BMultiMap<K;V>:TryGetValue,5,1,2
BMultiMap<K;V>:Add,3,1,2
BMultiMap<K;V>:FindLowerBound,5,1,1
BMultiMap<K;V>:FindLowerBound,4,1,2
BMultiMap<K;V>:FindLowerBound,3,1,3
BMultiMap<K;V>:FindLowerBound,11,2,3
BMultiMap<K;V>:FindUpperBound,7,1,1
BMultiMap<K;V>:FindLowerBoundExact,22,5,3
BMultiMap<K;V>:IndexOfExact,9,2,1
BMultiMap<K;V>:TryGetValue,4,1,2
BMultiMap<K;V>:GetEnumerator,11,4,0
ValueList:ValueList,4,1,2
ValueList:GetEnumerator,6,2,0
ValueList:GetEnumeratorCore,11,3,1
ValueList:GetEnumerator,3,1,0
ValueList:Add,3,1,1
ValueList:Clear,3,1,0
ValueList:Contains,3,1,1
ValueList:CopyTo,3,1,2
ValueList:Remove,3,1,1
IndexedAList<T>:IndexedAList,1,1,0
IndexedAList<T>:IndexedAList,1,2,1
IndexedAList<T>:IndexedAList,1,1,1
IndexedAList<T>:IndexedAList,1,1,1
IndexedAList<T>:IndexedAList,1,1,1
IndexedAList<T>:IndexedAList,1,1,2
IndexedAList<T>:IndexedAList,1,2,3
IndexedAList<T>:IndexedAList,1,1,2
IndexedAList<T>:IndexedAList,4,2,3
IndexedAList<T>:CreateIndex,5,1,0
IndexedAList<T>:IndexOf,12,3,1
IndexedAList<T>:IndexesOf,7,3,2
IndexedAList<T>:VerifyCorrectness,4,2,0
SparseAList<T>:SparseAList,1,1,0
SparseAList<T>:SparseAList,1,1,1
SparseAList<T>:SparseAList,1,1,1
SparseAList<T>:SparseAList,1,1,1
SparseAList<T>:SparseAList,1,1,1
SparseAList<T>:SparseAList,1,1,2
SparseAList<T>:SparseAList,1,1,2
SparseAList<T>:SparseAList,1,1,2
SparseAList<T>:NewRootLeaf,3,1,0
SparseAList<T>:AddRange,1,1,1
SparseAList<T>:DoSparseOperation,32,6,1
SparseAList<T>:Add,3,1,1
SparseAList<T>:AddRange,3,1,1
SparseAList<T>:Insert,6,1,2
SparseAList<T>:InsertRange,1,1,2
SparseAList<T>:InsertRange,1,1,3
SparseAList<T>:InsertRange,1,1,2
SparseAList<T>:InsertRange,3,1,2
SparseAList<T>:InsertRange,1,1,2
SparseAList<T>:InsertRange,12,2,2
SparseAList<T>:InsertRange,12,2,2
SparseAList<T>:Clone,3,1,1
SparseAList<T>:Clone,3,1,0
SparseAList<T>:Clone,3,1,1
SparseAList<T>:CopySection,3,1,2
SparseAList<T>:cov_RemoveSection,1,1,2
SparseAList<T>:RemoveSection,11,2,2
SparseAList<T>:Swap,3,1,1
SparseAList<T>:Append,1,1,1
SparseAList<T>:Append,1,1,2
SparseAList<T>:Prepend,1,1,1
SparseAList<T>:Prepend,1,1,2
SparseAList<T>:TrySet,14,5,2
SparseAList<T>:ClearSpace,16,4,2
SparseAList<T>:InsertSpace,8,1,2
SparseAList<T>:IsSet,9,2,1
SparseAList<T>:NextHigherItem,9,2,1
SparseAList<T>:NextLowerItem,9,2,1
SparseAList<T>:IndexOf,23,7,1
SparseAList<T>:GetRealImmutableCount,3,1,0
SparseAList<T>:GetRealItemCount,1,1,0
CG:Cache,3,1,1
CG:Cache,5,2,1
CG:Cache,1,1,1
CG:Cache,1,1,1
CG:Cache,1,1,1
CG:Cache,1,1,1
CG:Cache,1,1,1
CG:Cache,3,1,1
ArrayOf4<T>:Insert,18,3,2
ArrayOf4<T>:RemoveAt,11,4,2
Bijection<K1;K2>:Bijection,1,1,0
Bijection<K1;K2>:Bijection,1,1,1
Bijection<K1;K2>:Bijection,1,1,1
Bijection<K1;K2>:Bijection,4,2,2
Bijection<K1;K2>:Bijection,8,3,2
Bijection<K1;K2>:Bijection,4,1,2
Bijection<K1;K2>:Add,10,1,2
Bijection<K1;K2>:ContainsKey,3,1,1
Bijection<K1;K2>:Remove,10,2,1
Bijection<K1;K2>:CheckSync,5,2,0
Bijection<K1;K2>:TryGetValue,3,1,2
Bijection<K1;K2>:Add,3,1,1
Bijection<K1;K2>:Clear,9,1,0
Bijection<K1;K2>:Contains,7,1,1
Bijection<K1;K2>:CopyTo,3,1,2
Bijection<K1;K2>:Remove,5,2,1
Bijection<K1;K2>:GetEnumerator,3,1,0
Bijection<K1;K2>:GetEnumerator,3,1,0
NestedEnumerator:NestedEnumerator,5,1,1
NestedEnumerator:MoveNext,19,5,0
NestedEnumerator:Reset,1,1,0
NestedEnumerator:Dispose,1,1,0
NestedEnumerable:NestedEnumerable,1,1,1
NestedEnumerable:GetEnumerator,1,1,0
NestedEnumerable:GetEnumerator,1,1,0
NestedEnumerable:GetEnumerator,3,1,0
IEnumeratorFrame:MoveNext,0,1,2
EnumeratorFrame<T>:MoveNext,0,1,2
SimpleCache<T>:SimpleCache,1,1,0
SimpleCache<T>:SimpleCache,1,1,1
SimpleCache<T>:SimpleCache,5,1,2
SimpleCache<T>:Cache,65,4,1
SimpleCache<T>:Enlarge,20,2,0
SimpleCache<T>:Clear,6,1,0
SimpleCache<T>:DebugCheck,13,3,0
SimpleCacheTests:TestRandom,21,3,0
SimpleCacheTests:Try,4,1,3
InvertibleSet<T>:With,1,1,1
InvertibleSet<T>:Without,1,1,1
InvertibleSet<T>:InvertibleSet,1,1,2
InvertibleSet<T>:InvertibleSet,1,1,2
InvertibleSet<T>:InvertibleSet,1,1,3
InvertibleSet<T>:Inverted,1,1,0
InvertibleSet<T>:Contains,3,1,1
InvertibleSet<T>:Without,1,1,1
InvertibleSet<T>:With,1,1,1
InvertibleSet<T>:With,6,2,2
InvertibleSet<T>:Union,15,4,1
InvertibleSet<T>:Intersect,1,1,1
InvertibleSet<T>:Intersect,17,4,2
InvertibleSet<T>:Except,4,1,1
InvertibleSet<T>:Xor,3,1,1
InvertibleSet<T>:GetHashCode,4,1,0
InvertibleSet<T>:Equals,3,1,1
InvertibleSet<T>:Equals,1,1,1
InvertibleSet<T>:IsSubsetOf,3,1,1
InvertibleSet<T>:IsSupersetOf,3,1,1
InvertibleSet<T>:Overlaps,3,1,1
InvertibleSet<T>:IsProperSubsetOf,3,1,1
InvertibleSet<T>:IsProperSupersetOf,3,1,1
InvertibleSet<T>:SetEquals,3,1,1
InvertibleSet<T>:GetEnumerator,1,1,0
InvertibleSet<T>:GetEnumerator,1,1,0
InvertibleSetTests:RegressionTests,8,1,0
MapOrMMap<K;V>:MapOrMMap,1,1,0
MapOrMMap<K;V>:MapOrMMap,1,1,1
MapOrMMap<K;V>:MapOrMMap,1,1,1
MapOrMMap<K;V>:MapOrMMap,4,1,2
MapOrMMap<K;V>:MapOrMMap,6,1,3
MapOrMMap<K;V>:Equals,3,1,2
MapOrMMap<K;V>:GetHashCode,3,1,1
MapOrMMap<K;V>:ContainsKey,4,1,1
MapOrMMap<K;V>:TryGetValue,6,1,2
MapOrMMap<K;V>:Contains,6,2,1
MapOrMMap<K;V>:CopyTo,5,2,2
MapOrMMap<K;V>:GetEnumerator,3,1,0
MapOrMMap<K;V>:GetEnumerator,1,1,0
MapOrMMap<K;V>:GetEnumerator,1,1,0
MapOrMMap<K;V>:TryGetValue,3,1,2
MapOrMMap<K;V>:CountMemory,3,1,1
Map<K;V>:Map,1,1,0
Map<K;V>:Map,1,1,1
Map<K;V>:Map,1,1,1
Map<K;V>:Map,1,1,2
Map<K;V>:Map,1,1,3
Map<K;V>:Add,3,1,2
Map<K;V>:Remove,3,1,1
Map<K;V>:Add,3,1,1
Map<K;V>:Clear,3,1,0
Map<K;V>:Remove,3,1,1
Map<K;V>:With,10,3,3
Map<K;V>:Without,8,2,1
Map<K;V>:With,1,1,1
Map<K;V>:Without,7,3,1
Map<K;V>:Union,1,1,1
Map<K;V>:Union,6,1,2
Map<K;V>:Intersect,6,1,1
Map<K;V>:Except,6,1,1
Map<K;V>:Xor,6,1,1
Map<K;V>:AsMutable,3,1,0
MMap<K;V>:MMap,1,1,0
MMap<K;V>:MMap,1,1,1
MMap<K;V>:MMap,1,1,1
MMap<K;V>:MMap,1,1,2
MMap<K;V>:MMap,1,1,3
MMap<K;V>:Add,3,1,2
MMap<K;V>:Remove,4,1,1
MMap<K;V>:Add,7,2,1
MMap<K;V>:Clear,4,1,0
MMap<K;V>:Remove,7,3,1
MMap<K;V>:Clone,3,1,0
MMap<K;V>:AddRange,5,1,2
MMap<K;V>:AddRange,1,1,1
MMap<K;V>:AddRange,1,1,1
MMap<K;V>:AddRange,5,1,2
MMap<K;V>:AddIfNotPresent,4,1,2
MMap<K;V>:AddOrFind,7,2,2
MMap<K;V>:GetAndRemove,9,2,2
MMap<K;V>:GetAndRemove,7,2,1
MMap<K;V>:With,9,3,3
MMap<K;V>:With,1,1,1
MMap<K;V>:Without,7,2,1
MMap<K;V>:Without,7,3,1
MMap<K;V>:Union,1,1,1
MMap<K;V>:Union,5,1,2
MMap<K;V>:Intersect,5,1,1
MMap<K;V>:Except,5,1,1
MMap<K;V>:Xor,5,1,1
MMap<K;V>:AsImmutable,1,1,0
MSet<T>:MSet,1,1,0
MSet<T>:MSet,1,1,1
MSet<T>:MSet,1,1,2
MSet<T>:MSet,1,1,1
MSet<T>:MSet,1,1,2
MSet<T>:MSet,7,1,3
MSet<T>:AddUnique,5,2,1
MSet<T>:Find,3,1,1
MSet<T>:AddOrFind,7,2,2
MSet<T>:Add,3,1,2
MSet<T>:Clone,3,1,0
MSet<T>:Equals,1,1,1
MSet<T>:Equals,3,1,1
MSet<T>:GetHashCode,3,1,0
MSet<T>:Add,3,1,1
MSet<T>:Add,1,1,1
MSet<T>:Add,1,1,1
MSet<T>:AddRange,5,1,1
MSet<T>:Clear,4,1,0
MSet<T>:Contains,3,1,1
MSet<T>:CopyTo,5,2,2
MSet<T>:Remove,1,1,1
MSet<T>:Remove,8,2,1
MSet<T>:GetEnumerator,3,1,0
MSet<T>:GetEnumerator,1,1,0
MSet<T>:GetEnumerator,1,1,0
MSet<T>:UnionWith,1,1,1
MSet<T>:UnionWith,1,1,2
MSet<T>:UnionWith,1,1,2
MSet<T>:UnionWith,1,1,2
MSet<T>:ExceptWith,1,1,1
MSet<T>:ExceptWith,1,1,1
MSet<T>:ExceptWith,1,1,1
MSet<T>:ExceptWith,1,1,1
MSet<T>:IntersectWith,1,1,1
MSet<T>:IntersectWith,7,2,1
MSet<T>:IntersectWith,1,1,1
MSet<T>:IntersectWith,1,1,1
MSet<T>:IntersectWith,1,1,1
MSet<T>:SymmetricExceptWith,1,1,1
MSet<T>:SymmetricExceptWith,1,1,1
MSet<T>:SymmetricExceptWith,1,1,2
MSet<T>:SymmetricExceptWith,1,1,1
MSet<T>:SymmetricExceptWith,1,1,1
MSet<T>:IsSubsetOf,1,1,1
MSet<T>:IsSubsetOf,1,1,1
MSet<T>:IsSubsetOf,1,1,1
MSet<T>:IsSubsetOf,1,1,1
MSet<T>:IsSupersetOf,1,1,1
MSet<T>:IsSupersetOf,1,1,1
MSet<T>:IsSupersetOf,1,1,1
MSet<T>:Overlaps,1,1,1
MSet<T>:Overlaps,1,1,1
MSet<T>:Overlaps,1,1,1
MSet<T>:IsProperSubsetOf,1,1,1
MSet<T>:IsProperSubsetOf,1,1,1
MSet<T>:IsProperSubsetOf,1,1,1
MSet<T>:IsProperSubsetOf,1,1,1
MSet<T>:IsProperSupersetOf,1,1,1
MSet<T>:IsProperSupersetOf,1,1,1
MSet<T>:IsProperSupersetOf,1,1,1
MSet<T>:IsProperSupersetOf,1,1,1
MSet<T>:SetEquals,1,1,1
MSet<T>:SetEquals,1,1,1
MSet<T>:SetEquals,1,1,1
MSet<T>:SetEquals,1,1,1
MSet<T>:With,1,1,1
MSet<T>:Without,1,1,1
MSet<T>:Union,1,1,1
MSet<T>:Intersect,1,1,1
MSet<T>:Except,1,1,1
MSet<T>:Xor,1,1,1
MSet<T>:With,6,2,1
MSet<T>:Without,6,2,1
MSet<T>:Union,1,1,2
MSet<T>:Union,1,1,1
MSet<T>:Union,1,1,2
MSet<T>:Union,5,1,2
MSet<T>:Union,5,1,2
MSet<T>:Intersect,1,1,1
MSet<T>:Intersect,1,1,1
MSet<T>:Intersect,5,1,2
MSet<T>:Intersect,5,1,1
MSet<T>:Except,1,1,1
MSet<T>:Except,1,1,1
MSet<T>:Except,5,1,1
MSet<T>:Except,5,1,1
MSet<T>:Xor,1,1,1
MSet<T>:Xor,1,1,1
MSet<T>:Xor,5,1,1
MSet<T>:Xor,5,1,1
MSet<T>:AsImmutable,3,1,0
MSet<T>:RemoveWhere,9,4,1
MSet<T>:Toggle,8,2,1
MSet<T>:ThawRoot,1,1,0
MSet<T>:CountMemory,3,1,1
Set:Set,1,1,1
Set:Set,1,1,1
Set:Set,13,3,2
Set:Set,1,1,2
Set:Set,7,1,3
Set:Equals,1,1,1
Set:Equals,3,1,1
Set:GetHashCode,3,1,0
Set:Find,3,1,1
Set:Contains,3,1,1
Set:CopyTo,5,2,2
Set:GetEnumerator,1,1,0
Set:Add,1,1,1
Set:Clear,1,1,0
Set:Remove,1,1,1
Set:GetEnumerator,1,1,0
Set:GetEnumerator,1,1,0
Set:IsSubsetOf,1,1,1
Set:IsSubsetOf,1,1,1
Set:IsSubsetOf,1,1,1
Set:IsSubsetOf,1,1,1
Set:IsSupersetOf,1,1,1
Set:IsSupersetOf,1,1,1
Set:IsSupersetOf,1,1,1
Set:Overlaps,1,1,1
Set:Overlaps,1,1,1
Set:Overlaps,1,1,1
Set:IsProperSubsetOf,1,1,1
Set:IsProperSubsetOf,1,1,1
Set:IsProperSubsetOf,1,1,1
Set:IsProperSubsetOf,1,1,1
Set:IsProperSupersetOf,1,1,1
Set:IsProperSupersetOf,1,1,1
Set:IsProperSupersetOf,1,1,1
Set:IsProperSupersetOf,1,1,1
Set:SetEquals,1,1,1
Set:SetEquals,1,1,1
Set:SetEquals,1,1,1
Set:SetEquals,1,1,1
Set:With,1,1,1
Set:Without,1,1,1
Set:Union,1,1,1
Set:Intersect,1,1,1
Set:Except,1,1,1
Set:Xor,1,1,1
Set:With,8,2,1
Set:Without,7,2,1
Set:WithToggled,10,2,1
Set:Union,1,1,1
Set:Union,1,1,2
Set:Union,1,1,2
Set:Union,6,1,2
Set:Union,6,1,2
Set:Intersect,1,1,1
Set:Intersect,1,1,1
Set:Intersect,6,1,2
Set:Intersect,6,1,1
Set:Except,1,1,1
Set:Except,1,1,1
Set:Except,6,1,1
Set:Except,6,1,1
Set:Xor,1,1,1
Set:Xor,1,1,1
Set:Xor,6,1,1
Set:Xor,6,1,1
Set:AsMutable,3,1,0
Set:Where,10,4,1
Set:CountMemory,3,1,1
FVList:FVList,4,1,2
FVList:FVList,4,1,1
FVList:FVList,6,1,2
FVList:FVList,6,2,1
FVList:FVList,5,1,1
FVList:WithoutFirst,3,1,1
FVList:PreviousIn,3,1,1
FVList:Last,8,3,1
FVList:Equals,10,2,1
FVList:GetHashCode,6,2,0
FVList:AddRange,5,2,1
FVList:AddRange,4,1,2
FVList:AddRange,4,1,1
FVList:InsertRange,4,1,2
FVList:RemoveRange,5,2,2
FVList:Pop,7,2,0
FVList:Push,1,1,1
FVList:ToVList,3,1,0
FVList:ToFWList,3,1,0
FVList:ToWList,3,1,0
FVList:ToArray,3,1,0
FVList:SmartAdd,3,1,2
FVList:SmartAdd,21,5,2
FVList:IndexOf,10,3,1
FVList:Insert,1,1,2
FVList:Insert,5,1,2
FVList:RemoveAt,1,1,1
FVList:RemoveAt,4,1,1
FVList:Add,1,1,1
FVList:Add,5,1,1
FVList:Clear,1,1,0
FVList:Clear,5,1,0
FVList:Contains,3,1,1
FVList:CopyTo,4,2,2
FVList:Remove,7,2,1
FVList:GetEnumerator,3,1,0
FVList:GetEnumerator,3,1,0
FVList:GetEnumerator,3,1,0
FVList:TryGet,5,1,2
FVList:Slice,1,1,2
FVList:Slice,1,1,2
FVList:Clone,1,1,0
FVList:Clone,1,1,0
FVList:Where,6,2,1
FVList:WhereSelect,11,1,1
FVList:SmartSelect,6,2,1
FVList:SmartSelectMany,6,2,1
FVList:Transform,3,1,1
FWList<T>:AdjustWListIndex,1,1,2
FWList<T>:FWList,1,1,3
FWList<T>:FWList,1,1,0
FWList<T>:FWList,3,1,1
FWList<T>:FWList,6,1,2
FWList<T>:FWList,3,1,1
FWList<T>:AddRange,1,1,1
FWList<T>:InsertRange,1,1,2
FWList<T>:RemoveRange,1,1,2
FWList<T>:Insert,1,1,2
FWList<T>:RemoveAt,1,1,1
FWList<T>:GetIEnumerator,1,1,0
FWList<T>:GetEnumerator,3,1,0
FWList<T>:ReverseEnumerator,3,1,0
FWList<T>:TryGet,5,1,2
FWList<T>:Clone,4,1,0
FWList<T>:Clone,1,1,0
FWList<T>:SmartWhere,6,2,1
FWList<T>:WhereSelect,11,1,1
FWList<T>:SmartSelect,6,2,1
FWList<T>:Transform,5,1,1
FWList<T>:Pop,7,2,0
FWList<T>:WithoutFirst,3,1,1
FWList<T>:ToWList,4,1,0
FWList<T>:ToArray,3,1,0
VList:VList,4,1,2
VList:VList,4,1,1
VList:VList,4,1,2
VList:VList,6,2,1
VList:VList,5,1,1
VList:VList,3,1,1
VList:WithoutLast,3,1,1
VList:NextIn,3,1,1
VList:First,8,3,1
VList:Equals,10,2,1
VList:GetHashCode,6,2,0
VList:AddRange,5,2,1
VList:AddRange,4,1,2
VList:AddRange,4,1,1
VList:AddRange,4,1,1
VList:InsertRange,4,1,2
VList:RemoveRange,5,2,2
VList:Pop,7,2,0
VList:Push,1,1,1
VList:ToFVList,3,1,0
VList:ToFWList,3,1,0
VList:ToWList,3,1,0
VList:ToArray,3,1,0
VList:IndexOf,10,3,1
VList:Insert,1,1,2
VList:Insert,5,1,2
VList:RemoveAt,1,1,1
VList:RemoveAt,4,1,1
VList:Add,1,1,1
VList:Add,5,1,1
VList:Clear,1,1,0
VList:Clear,5,1,0
VList:Contains,3,1,1
VList:CopyTo,4,2,2
VList:Remove,7,2,1
VList:GetEnumerator,3,1,0
VList:GetEnumerator,3,1,0
VList:GetEnumerator,3,1,0
VList:TryGet,5,1,2
VList:Slice,1,1,2
VList:Slice,1,1,2
VList:Clone,1,1,0
VList:Clone,1,1,0
VList:SmartWhere,6,2,1
VList:WhereSelect,11,1,1
VList:SmartSelect,6,2,1
VList:SmartSelectMany,6,2,1
VList:Transform,3,1,1
WList<T>:AdjustWListIndex,1,1,2
WList<T>:WList,1,1,3
WList<T>:WList,1,1,0
WList<T>:WList,4,1,2
WList<T>:WList,3,1,1
WList<T>:AddRange,1,1,1
WList<T>:AddRange,1,1,1
WList<T>:AddRange,1,1,1
WList<T>:InsertRange,1,1,2
WList<T>:RemoveRange,1,1,2
WList<T>:Insert,1,1,2
WList<T>:RemoveAt,1,1,1
WList<T>:GetIEnumerator,1,1,0
WList<T>:GetEnumerator,3,1,0
WList<T>:ReverseEnumerator,3,1,0
WList<T>:TryGet,5,1,2
WList<T>:Clone,4,1,0
WList<T>:Clone,1,1,0
WList<T>:Where,6,2,1
WList<T>:WhereSelect,11,1,1
WList<T>:SmartSelect,6,2,1
WList<T>:Transform,5,1,1
WList<T>:Pop,7,2,0
WList<T>:WithoutLast,3,1,1
WList<T>:ToFWList,4,1,0
WList<T>:ToArray,3,1,0
WList<T>:Resize,7,2,1
VListBlock<T>:FGet,0,1,2
VListBlock<T>:FGet,0,1,3
VListBlock<T>:RGet,0,1,2
VListBlock<T>:RGet,0,1,3
VListBlock<T>:Add,0,1,2
VListBlock<T>:Add,6,2,3
VListBlock<T>:SubList,0,1,1
VListBlock<T>:SubList,10,3,3
VListBlock<T>:TailOf,6,3,1
VListBlock<T>:Insert,19,3,4
VListBlock<T>:InsertRange,17,3,5
VListBlock<T>:ReplaceAt,17,3,3
VListBlock<T>:RemoveAt,1,1,2
VListBlock<T>:RemoveRange,14,3,3
VListBlock<T>:AddRange,8,2,3
VListBlock<T>:AddRange,17,3,4
VListBlock<T>:AddRange,10,2,4
VListBlock<T>:AddRange,8,2,2
VListBlock<T>:FindNextBlock,47,5,3
VListBlock<T>:FindNextBlock,8,1,3
VListBlock<T>:BackUpOnce,13,2,2
VListBlock<T>:BackUpOnce,13,2,2
VListBlock<T>:EnsureImmutable,38,7,2
VListBlock<T>:EnsureMutable,124,11,2
VListBlock<T>:MutableCount,14,4,1
VListBlock<T>:MuClear,0,1,1
VListBlock<T>:MuAdd,4,1,2
VListBlock<T>:MuAddEmpty,1,1,2
VListBlock<T>:MuAddEmpty,7,2,3
VListBlock<T>:MuAddEmpty2,36,6,3
VListBlock<T>:MuAllocBlock,9,1,2
VListBlock<T>:MuMove,23,4,4
VListBlock<T>:MuRemoveFront,31,6,2
VListBlock<T>:Front,0,1,1
VListBlock<T>:ToArray,32,3,3
VListBlock<T>:BlockToArray,0,1,4
VListBlock<T>:Where,7,1,3
VListBlock<T>:IsSame,3,1,2
VListBlock<T>:SelectMany,51,9,4
VListBlock<T>:SmartSelect,51,9,3
VListBlock<T>:MakeResult,5,2,3
VListBlock<T>:MakeResult,9,2,2
VListBlock<T>:MakeResult,9,2,3
VListBlock<T>:Transform,168,14,5
VListBlockArray<T>:VListBlockArray,4,1,2
VListBlockArray<T>:VListBlockArray,13,4,3
VListBlockArray<T>:FGet,6,2,2
VListBlockArray<T>:FGet,7,2,3
VListBlockArray<T>:RGet,6,2,2
VListBlockArray<T>:RGet,7,2,3
VListBlockArray<T>:Front,8,2,1
VListBlockArray<T>:Add,73,4,2
VListBlockArray<T>:SubList,12,3,1
VListBlockArray<T>:MuClear,15,4,1
VListBlockArray<T>:BlockToArray,9,3,4
VListBlockOfTwo<T>:VListBlockOfTwo,3,1,0
VListBlockOfTwo<T>:VListBlockOfTwo,4,1,2
VListBlockOfTwo<T>:VListBlockOfTwo,5,1,3
VListBlockOfTwo<T>:FGet,6,2,2
VListBlockOfTwo<T>:FGet,7,2,3
VListBlockOfTwo<T>:RGet,6,2,2
VListBlockOfTwo<T>:RGet,7,2,3
VListBlockOfTwo<T>:Front,7,2,1
VListBlockOfTwo<T>:Add,13,3,2
VListBlockOfTwo<T>:SubList,8,2,1
VListBlockOfTwo<T>:MuClear,10,2,1
VListBlockOfTwo<T>:BlockToArray,14,2,4
VListBlockOfTwo<T>:Where,26,5,3
VListBlockOfTwo<T>:SmartSelect,25,4,3
WListProtected<T>:AdjustWListIndex,1,1,2
WListProtected<T>:WListProtected,1,1,0
WListProtected<T>:WListProtected,7,3,2
WListProtected<T>:WListProtected,7,2,3
WListProtected<T>:GetAt,6,2,1
WListProtected<T>:SetAt,7,2,2
WListProtected<T>:Add,3,1,1
WListProtected<T>:Clear,9,3,0
WListProtected<T>:Insert,1,1,2
WListProtected<T>:RemoveAt,1,1,1
WListProtected<T>:IndexOf,12,3,1
WListProtected<T>:Contains,3,1,1
WListProtected<T>:CopyTo,7,3,2
WListProtected<T>:Remove,7,2,1
WListProtected<T>:GetIEnumerator,1,1,0
WListProtected<T>:GetVListEnumerator,1,1,0
WListProtected<T>:GetRVListEnumerator,1,1,0
WListProtected<T>:AddRange,4,2,1
WListProtected<T>:RemoveAtDff,3,1,1
WListProtected<T>:RemoveRangeBase,9,3,2
WListProtected<T>:AddRangeBase,3,1,2
WListProtected<T>:InsertRangeAtDff,27,7,3
WListProtected<T>:InsertAtDff,9,2,2
WListProtected<T>:GetAtDff,1,1,1
WListProtected<T>:SetAtDff,1,1,2
WListProtected<T>:ToFVList,6,2,0
WListProtected<T>:ToVList,6,2,0
WListBase<T>:WListBase,1,1,0
WListBase<T>:WListBase,1,1,3
WListBase<T>:Add,1,1,1
WListBase<T>:Clear,1,1,0
WListBase<T>:Insert,1,1,2
WListBase<T>:RemoveAt,1,1,1
WListBase<T>:IndexOf,1,1,1
WListBase<T>:Contains,1,1,1
WListBase<T>:CopyTo,1,1,2
WListBase<T>:Remove,1,1,1
WListBase<T>:GetEnumerator,1,1,0
WListBase<T>:GetEnumerator,1,1,0
WListBase<T>:TryGet,10,2,2
WListBase<T>:Slice,1,1,2
WListBase<T>:Slice,1,1,2
WListBase<T>:Push,1,1,1
WListBase<T>:ToFVList,1,1,0
WListBase<T>:ToVList,1,1,0
AListIndexer<K;T>:CompareHashCodes,3,1,2
AListIndexer<K;T>:Equals,3,1,2
AListIndexer<K;T>:AListIndexer,3,1,0
AListIndexer<K;T>:BadState,3,1,0
AListIndexer<K;T>:BadState,3,1,1
AListIndexer<K;T>:Attach,3,1,2
AListIndexer<K;T>:Detach,3,1,0
AListIndexer<K;T>:RootChanged,10,3,2
AListIndexer<K;T>:ItemAdded,3,1,2
AListIndexer<K;T>:ItemRemoved,5,2,2
AListIndexer<K;T>:NodeAdded,5,2,2
AListIndexer<K;T>:NodeRemoved,5,2,2
AListIndexer<K;T>:RemoveAll,11,3,1
AListIndexer<K;T>:AddAll,11,3,1
AListIndexer<K;T>:CheckPoint,3,1,0
AListIndexer<K;T>:IndexOfAny,9,2,1
AListIndexer<K;T>:IndexesOf,25,6,1
AListIndexer<K;T>:ReconstructIndex,24,5,2
AListIndexer<K;T>:VerifyCorrectness,44,9,0
AListIndexer<K;T>:AddError,17,5,3
AListInner<T>:AListInner,1,1,1
AListInner<T>:AListInner,1,1,3
AListInner<T>:AListInner,1,1,5
AListInner<T>:AListInner,1,1,4
AListInner<T>:DetachedClone,4,1,0
AListInner<T>:CopySection,7,2,3
AListInner<T>:SplitAt,4,1,2
AListInner<T>:AutoHandleChildSplit,8,2,4
AListInner<T>:PrepareToInsertAt,16,3,3
AListInner<T>:Insert,13,1,4
AListInner<T>:InsertRange,19,1,5
AListInner<T>:DoSparseOperation,33,3,4
AListInner<T>:SparseGetNearest,24,4,2
AListInner<T>:Combine,32,6,6
AListInner<T>:GetRealItemCount,6,2,0
AListInnerBase<K;T>:AListInnerBase,9,1,1
AListInnerBase<K;T>:MarkChildrenFrozen,5,2,0
AListInnerBase<K;T>:AListInnerBase,10,1,3
AListInnerBase<K;T>:AListInnerBase,17,2,5
AListInnerBase<K;T>:AListInnerBase,51,2,4
AListInnerBase<K;T>:InitEmpties,7,2,1
AListInnerBase<K;T>:BinarySearchI,28,5,1
AListInnerBase<K;T>:PrepareToInsert,6,2,2
AListInnerBase<K;T>:TryToShiftAnItemToSiblingOfLeaf,11,2,2
AListInnerBase<K;T>:HandleChildSplit,14,2,4
AListInnerBase<K;T>:AutoSplit,8,2,1
AListInnerBase<K;T>:SplitAt,0,1,2
AListInnerBase<K;T>:GetLastItem,3,1,0
AListInnerBase<K;T>:AssertValid,18,4,0
AListInnerBase<K;T>:LLInsert,9,3,3
AListInnerBase<K;T>:AdjustIndexesAfter,5,2,2
AListInnerBase<K;T>:Child,3,1,1
AListInnerBase<K;T>:SetAt,8,1,3
AListInnerBase<K;T>:ChildIndexOffset,4,1,1
AListInnerBase<K;T>:RemoveAt,44,6,3
AListInnerBase<K;T>:HandleChildCloned,11,3,3
AListInnerBase<K;T>:HandleUndersizedOrAggregateChanged,5,2,2
AListInnerBase<K;T>:HandleUndersized,85,6,2
AListInnerBase<K;T>:LLDelete,15,4,2
AListInnerBase<K;T>:TakeFromRight,17,3,2
AListInnerBase<K;T>:TakeFromLeft,14,3,2
AListInnerBase<K;T>:Freeze,3,1,0
AListInnerBase<K;T>:AutoEnlargeChildren,8,2,1
AListInnerBase<K;T>:BaseIndexOf,6,2,1
AListInnerBase<K;T>:IndexOf,6,3,1
AListInnerBase<K;T>:GetImmutableCount,8,3,1
Entry:Entry,1,1,2
AListLeaf<K;T>:AListLeaf,4,1,1
AListLeaf<K;T>:AListLeaf,3,1,2
AListLeaf<K;T>:AListLeaf,5,1,1
AListLeaf<K;T>:SetAt,8,2,3
AListLeaf<K;T>:TakeFromRight,10,3,2
AListLeaf<K;T>:TakeFromLeft,16,3,2
AListLeaf<K;T>:GetLastItem,3,1,0
AListLeaf<K;T>:RemoveAt,7,2,3
AListLeaf<K;T>:Freeze,3,1,0
AListLeaf<K;T>:Sort,4,1,3
AListLeaf<K;T>:IndexOf,3,1,2
AListLeaf<K;T>:GetImmutableCount,3,1,1
AListLeaf<T>:AListLeaf,1,1,1
AListLeaf<T>:AListLeaf,1,1,2
AListLeaf<T>:AListLeaf,1,1,1
AListLeaf<T>:DetachedClone,3,1,0
AListLeaf<T>:CopySection,7,2,3
AListLeaf<T>:Insert,29,3,4
AListLeaf<T>:InsertRange,22,3,5
AListNode<K;T>:Insert,3,1,4
AListNode<K;T>:InsertRange,3,1,5
AListNode<K;T>:DoSingleOperation,3,1,3
AListNode<K;T>:DoSparseOperation,3,1,4
AListNode<K;T>:SparseGetNearest,3,1,2
AListNode<K;T>:GetLastItem,0,1,0
AListNode<K;T>:SetAt,0,1,3
AListNode<K;T>:RemoveAt,0,1,3
AListNode<K;T>:TakeFromRight,0,1,2
AListNode<K;T>:TakeFromLeft,0,1,2
AListNode<K;T>:Freeze,0,1,0
AListNode<K;T>:DetachedClone,0,1,0
AListNode<K;T>:AutoClone,7,2,3
AListNode<K;T>:Clone,6,2,3
AListNode<K;T>:Verify,1,1,1
AListNode<K;T>:CopySection,0,1,3
AListNode<K;T>:GetObserver,1,1,1
AListNode<K;T>:HasListChanging,1,1,1
AListNode<K;T>:CallListChanging,4,2,2
AListNode<K;T>:GetImmutableCount,0,1,1
AListNode<K;T>:GetRealItemCount,1,1,0
AListSparseOperation:AListSparseOperation,10,1,5
BListInner<K;T>:BListInner,3,1,1
BListInner<K;T>:BListInner,4,1,3
BListInner<K;T>:BListInner,5,2,5
BListInner<K;T>:BListInner,4,1,4
BListInner<K;T>:GetKey,0,1,1
BListInner<K;T>:GetHighestKey,1,1,1
BListInner<K;T>:GetHighestKeys,5,2,0
BListInner<K;T>:BinarySearchK,30,5,2
BListInner<K;T>:DoSingleOperation,54,6,3
BListInner<K;T>:HandleUndersizedOrAggregateChanged,8,2,2
BListInner<K;T>:HandleUndersized,16,3,2
BListInner<K;T>:TryToShiftAnItemToSiblingOfLeaf,17,2,2
BListInner<K;T>:HandleChildSplit,10,2,4
BListInner<K;T>:LLInsert,17,3,3
BListInner<K;T>:LLDelete,6,2,2
BListInner<K;T>:AssertValid,15,3,0
BListInner<T>:BListInner,1,1,1
BListInner<T>:BListInner,1,1,3
BListInner<T>:BListInner,1,1,5
BListInner<T>:BListInner,1,1,4
BListInner<T>:DetachedClone,3,1,0
BListInner<T>:CopySection,7,2,3
BListInner<T>:SplitAt,4,1,2
BListInner<T>:GetKey,1,1,1
BDictionaryInner<K;V>:BDictionaryInner,1,1,1
BDictionaryInner<K;V>:BDictionaryInner,1,1,3
BDictionaryInner<K;V>:BDictionaryInner,1,1,5
BDictionaryInner<K;V>:BDictionaryInner,1,1,4
BDictionaryInner<K;V>:DetachedClone,3,1,0
BDictionaryInner<K;V>:CopySection,7,2,3
BDictionaryInner<K;V>:SplitAt,4,1,2
BDictionaryInner<K;V>:GetKey,1,1,1
BListLeaf<K;T>:BListLeaf,1,1,1
BListLeaf<K;T>:BListLeaf,1,1,2
BListLeaf<K;T>:BListLeaf,1,1,1
BListLeaf<K;T>:DoSingleOperation,114,11,3
BListLeaf<K;T>:SplitAndAdd,25,2,3
BListLeaf<K;T>:DetachedClone,4,1,0
BListLeaf<K;T>:CopySection,7,2,3
BListLeaf<K;T>:RemoveAt,3,1,3
IAListTreeObserver:Attach,0,1,2
IAListTreeObserver:Detach,0,1,0
IAListTreeObserver:RootChanged,0,1,2
IAListTreeObserver:ItemAdded,0,1,2
IAListTreeObserver:ItemRemoved,0,1,2
IAListTreeObserver:NodeAdded,0,1,2
IAListTreeObserver:NodeRemoved,0,1,2
IAListTreeObserver:RemoveAll,0,1,1
IAListTreeObserver:AddAll,0,1,1
IAListTreeObserver:CheckPoint,0,1,0
AListTreeObserverExt:DoAttach,8,1,3
AListTreeObserverExt:AddAllRecursively,12,5,3
AListTreeObserverExt:Clear,3,1,1
AListTreeObserverExt:AddingItems,4,2,4
AListTreeObserverExt:RemovingItems,4,2,6
AListTreeObserverExt:ItemMoved,4,1,4
AListTreeObserverExt:NodeMoved,4,1,4
AListTreeObserverExt:HandleRootSplit,6,1,5
AListTreeObserverExt:HandleRootUnsplit,5,1,3
AListTreeObserverExt:HandleChildReplaced,10,3,5
AListTreeObserverExt:HandleNodeReplaced,11,3,4
SparseAListLeaf<T>:SparseAListLeaf,1,1,1
SparseAListLeaf<T>:SparseAListLeaf,6,1,3
SparseAListLeaf<T>:SparseAListLeaf,6,1,1
SparseAListLeaf<T>:GetLastItem,6,2,0
SparseAListLeaf<T>:BinarySearch,9,2,2
SparseAListLeaf<T>:SetAt,9,1,3
SparseAListLeaf<T>:GetSectionRange,7,1,3
SparseAListLeaf<T>:RemoveAt,14,2,3
SparseAListLeaf<T>:AdjustOffsetsStartingAt,4,2,3
SparseAListLeaf<T>:TakeFromRight,24,3,2
SparseAListLeaf<T>:TakeFromLeft,24,3,2
SparseAListLeaf<T>:Freeze,3,1,0
SparseAListLeaf<T>:DetachedClone,3,1,0
SparseAListLeaf<T>:CopySection,8,1,3
SparseAListLeaf<T>:GetImmutableCount,5,2,1
SparseAListLeaf<T>:Insert,3,1,4
SparseAListLeaf<T>:InsertRange,3,1,5
SparseAListLeaf<T>:InsertSpace,6,1,2
SparseAListLeaf<T>:DoSparseOperation,7,2,4
SparseAListLeaf<T>:SparseGetNearest,14,4,2
SparseAListLeaf<T>:DoReplace,44,6,4
SparseAListLeaf<T>:ReplaceSingleItem,11,2,2
SparseAListLeaf<T>:DoInsert,89,9,4
SparseAListLeaf<T>:SplitLeaf,8,1,2
SparseAListLeaf<T>:GetRealItemCount,1,1,0
NestedEnumerator:NestedEnumerator,5,1,1
NestedEnumerator:MoveNext,19,5,0
NestedEnumerator:Reset,1,1,0
NestedEnumerator:Dispose,1,1,0
NestedEnumerable:NestedEnumerable,1,1,1
NestedEnumerable:GetEnumerator,1,1,0
NestedEnumerable:GetEnumerator,1,1,0
NestedEnumerable:GetEnumerator,3,1,0
IEnumeratorFrame:MoveNext,0,1,2
EnumeratorFrame<T>:MoveNext,0,1,2
TestHelpers:ExpectList,3,1,2
TestHelpers:ExpectListByEnumerator,3,1,2
TestHelpers:ExpectList,10,2,3
TestHelpers:ExpectList,11,2,2
TestHelpers:AssertThrows,9,1,1
TestHelpers:ExpectSet,3,1,2
TestHelpers:ExpectSet,10,3,2
InternalSet:FrozenEmptyRoot,5,1,0
InternalSet:InternalSet,4,1,3
InternalSet:InternalSet,4,1,2
InternalSet:GetSetHashCode,7,2,1
InternalSet:CloneFreeze,5,2,0
InternalSet:Thaw,6,2,0
InternalSet:Adj,1,1,2
InternalSet:Equals,9,2,3
InternalSet:GetHashCode,5,2,2
InternalSet:PropagateFrozenFlag,4,2,2
InternalSet:ReplaceChild,14,4,3
InternalSet:TryRemoveChild,31,6,3
InternalSet:Add,6,2,3
InternalSet:Remove,5,2,2
InternalSet:_IgnoreExisting_,3,1,3
InternalSet:_ReplaceExisting_,7,2,3
InternalSet:_DeleteExisting_,13,2,3
InternalSet:AddOrRemove,114,11,5
InternalSet:OnFoundInOverflow,18,4,5
InternalSet:OpAtMaxDepth,3,1,6
InternalSet:SelectBucketToSpill,23,4,3
InternalSet:Spill,23,5,3
InternalSet:Find,73,8,2
InternalSet:GetEnumerator,1,1,0
InternalSet:GetEnumerator,1,1,0
InternalSet:GetEnumerator,1,1,0
InternalSet:CopyTo,4,2,2
InternalSet:Clear,8,3,0
InternalSet:Contains,3,1,2
InternalSet:Count,6,2,0
InternalSet:SetOperationEnumerator,5,2,0
InternalSet:UnionWith,9,3,3
InternalSet:UnionWith,9,3,3
InternalSet:IntersectWith,12,4,2
InternalSet:IntersectWith,12,4,1
InternalSet:IntersectWith,9,2,2
InternalSet:ExceptWith,9,3,2
InternalSet:ExceptWith,11,3,2
InternalSet:SymmetricExceptWith,16,3,2
InternalSet:SymmetricExceptWith,19,2,3
InternalSet:IsSubsetOf,8,4,2
InternalSet:IsSubsetOf,8,3,2
InternalSet:IsSubsetOf,14,2,3
InternalSet:IsSupersetOf,10,4,3
InternalSet:IsSupersetOf,3,1,2
InternalSet:Overlaps,6,3,2
InternalSet:Overlaps,8,3,2
InternalSet:IsProperSubsetOf,1,1,2
InternalSet:IsProperSubsetOf,12,2,3
InternalSet:IsProperSupersetOf,1,1,3
InternalSet:IsProperSupersetOf,20,2,3
InternalSet:SetEquals,1,1,2
InternalSet:SetEquals,25,2,3
InternalSet:CountMemory,4,1,1
InternalSet:CountMemory,5,2,2
Node:Freeze,1,2,0
Node:CheckCounter,7,1,0
Node:Node,4,1,1
Node:Node,14,4,1
Node:Clone,3,1,0
Node:TAt,1,1,1
Node:Assign,9,1,2
Node:ClearTAt,8,1,1
Node:Clear,10,4,0
Node:CountMemory,16,4,2
Node:ToString,5,1,0
MaxDepthNode:MaxDepthNode,1,1,0
MaxDepthNode:MaxDepthNode,3,1,1
MaxDepthNode:Clone,3,1,0
MaxDepthNode:ScanOverflowFor,9,3,3
MaxDepthNode:AddOverflowItem,5,1,1
MaxDepthNode:RemoveOverflowItem,7,2,1
MaxDepthNode:CountMemory,11,2,2
Enumerator:IsInitialized,1,1,0
Enumerator:Enumerator,4,1,1
Enumerator:Enumerator,3,1,1
Enumerator:Reset,7,1,1
Enumerator:MoveNext,70,2,0
Enumerator:SetCurrentValue,7,2,3
Enumerator:SetCurrentValueCore,5,2,3
Enumerator:RemoveCurrent,23,3,1
Enumerator:GetCurrentIndexAt,3,1,1
Enumerator:AutoThawCurrentNode,32,4,1
Enumerator:Dispose,1,1,0
Enumerator:Reset,1,1,0
InternalSet_LUT:ZerosTable,6,2,0
InternalSet_LUT:TargetTable,30,4,0
BloomFilterM64K2:Clear,1,1,0
BloomFilterM64K2:Mask,4,1,1
BloomFilterM64K2:Add,1,1,1
BloomFilterM64K2:Add,1,1,1
BloomFilterM64K2:Add,1,1,1
BloomFilterM64K2:MayContain,1,1,1
BloomFilterM64K2:MayContain,1,1,1
BloomFilterM64K2:MayContain,4,1,1
Co:Co,1,1,1
Co:Co,1,1,1
Co:GetEnumerator,20,6,0
Co:GetEnumerator,1,1,0
Co:All,1,1,1
Co:Unwrap,1,1,1
