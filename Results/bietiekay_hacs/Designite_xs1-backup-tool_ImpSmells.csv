Implementation smell,Namespace,Class,File,Method,Description
Long Method,xs1_backup_tool,BackupAndRestore,D:\research\architectureSmells\repos\bietiekay_hacs\tools\xs1-backup-tool\BackupAndRestore.cs,backup,The method has 194 lines of code.
Long Method,xs1_backup_tool,BackupAndRestore,D:\research\architectureSmells\repos\bietiekay_hacs\tools\xs1-backup-tool\BackupAndRestore.cs,restore,The method has 222 lines of code.
Complex Method,xs1_backup_tool,BackupAndRestore,D:\research\architectureSmells\repos\bietiekay_hacs\tools\xs1-backup-tool\BackupAndRestore.cs,backup,Cyclomatic complexity of the method is 13
Complex Method,xs1_backup_tool,BackupAndRestore,D:\research\architectureSmells\repos\bietiekay_hacs\tools\xs1-backup-tool\BackupAndRestore.cs,restore,Cyclomatic complexity of the method is 36
Long Parameter List,xs1_backup_tool,BackupAndRestore,D:\research\architectureSmells\repos\bietiekay_hacs\tools\xs1-backup-tool\BackupAndRestore.cs,WriteSensorConfiguration,The method has 5 parameters. Parameters: XS1ServerURL' Username' Password' SensorData' ProtocolVersion
Long Parameter List,xs1_backup_tool,BackupAndRestore,D:\research\architectureSmells\repos\bietiekay_hacs\tools\xs1-backup-tool\BackupAndRestore.cs,WriteActorConfiguration,The method has 5 parameters. Parameters: XS1ServerURL' Username' Password' ActorData' ProtocolVersion
Long Statement,xs1_backup_tool,BackupAndRestore,D:\research\architectureSmells\repos\bietiekay_hacs\tools\xs1-backup-tool\BackupAndRestore.cs,backup,The length of the statement  "                wrGetURL = WebRequest.Create("http://"+XS1ServerURL+"/control?user="+Username+"&pwd="+Password+"&callback=xs1_config&cmd=get_config_info"); " is 139.
Long Statement,xs1_backup_tool,BackupAndRestore,D:\research\architectureSmells\repos\bietiekay_hacs\tools\xs1-backup-tool\BackupAndRestore.cs,backup,The length of the statement  "                    wrGetURL = WebRequest.Create("http://" + XS1ServerURL + "/control?user=" + Username + "&pwd=" + Password + "&callback=sensor_config&cmd=get_config_sensor&number=" + i);                     " is 168.
Long Statement,xs1_backup_tool,BackupAndRestore,D:\research\architectureSmells\repos\bietiekay_hacs\tools\xs1-backup-tool\BackupAndRestore.cs,backup,The length of the statement  "                    wrGetURL = WebRequest.Create("http://" + XS1ServerURL + "/control?user=" + Username + "&pwd=" + Password + "&callback=actor_config&cmd=get_config_actuator&number=" + i); " is 169.
Long Statement,xs1_backup_tool,BackupAndRestore,D:\research\architectureSmells\repos\bietiekay_hacs\tools\xs1-backup-tool\BackupAndRestore.cs,backup,The length of the statement  "                    wrGetURL = WebRequest.Create("http://" + XS1ServerURL + "/control?user=" + Username + "&pwd=" + Password + "&callback=timer_config&cmd=get_config_timer&number=" + i); " is 166.
Long Statement,xs1_backup_tool,BackupAndRestore,D:\research\architectureSmells\repos\bietiekay_hacs\tools\xs1-backup-tool\BackupAndRestore.cs,backup,The length of the statement  "                    wrGetURL = WebRequest.Create("http://" + XS1ServerURL + "/control?user=" + Username + "&pwd=" + Password + "&callback=script_config&cmd=get_config_script&number=" + i); " is 168.
Long Statement,xs1_backup_tool,BackupAndRestore,D:\research\architectureSmells\repos\bietiekay_hacs\tools\xs1-backup-tool\BackupAndRestore.cs,backup,The length of the statement  "                    wrGetURL = WebRequest.Create("http://" + XS1ServerURL + "/control?user=" + Username + "&pwd=" + Password + "&callback=room_config&cmd=get_config_room&number=" + i); " is 164.
Long Statement,xs1_backup_tool,BackupAndRestore,D:\research\architectureSmells\repos\bietiekay_hacs\tools\xs1-backup-tool\BackupAndRestore.cs,restore,The length of the statement  "                wrGetURL = WebRequest.Create("http://" + XS1ServerURL + "/control?user=" + Username + "&pwd=" + Password + "&callback=xs1_config&cmd=get_config_info"); " is 151.
Magic Number,xs1_backup_tool,BackupAndRestore,D:\research\architectureSmells\repos\bietiekay_hacs\tools\xs1-backup-tool\BackupAndRestore.cs,backup,The following statement contains a magic number: ser.MaxJsonLength = 20000000;
Magic Number,xs1_backup_tool,BackupAndRestore,D:\research\architectureSmells\repos\bietiekay_hacs\tools\xs1-backup-tool\BackupAndRestore.cs,backup,The following statement contains a magic number: xs1_config_json = xs1_config_json.Remove(xs1_config_json.Length - 4' 4);
Magic Number,xs1_backup_tool,BackupAndRestore,D:\research\architectureSmells\repos\bietiekay_hacs\tools\xs1-backup-tool\BackupAndRestore.cs,backup,The following statement contains a magic number: xs1_config_json = xs1_config_json.Remove(xs1_config_json.Length - 4' 4);
Magic Number,xs1_backup_tool,BackupAndRestore,D:\research\architectureSmells\repos\bietiekay_hacs\tools\xs1-backup-tool\BackupAndRestore.cs,backup,The following statement contains a magic number: XS1Config.version != 15
Magic Number,xs1_backup_tool,BackupAndRestore,D:\research\architectureSmells\repos\bietiekay_hacs\tools\xs1-backup-tool\BackupAndRestore.cs,backup,The following statement contains a magic number: sensor_config_json = sensor_config_json.Remove(sensor_config_json.Length - 4' 4);
Magic Number,xs1_backup_tool,BackupAndRestore,D:\research\architectureSmells\repos\bietiekay_hacs\tools\xs1-backup-tool\BackupAndRestore.cs,backup,The following statement contains a magic number: sensor_config_json = sensor_config_json.Remove(sensor_config_json.Length - 4' 4);
Magic Number,xs1_backup_tool,BackupAndRestore,D:\research\architectureSmells\repos\bietiekay_hacs\tools\xs1-backup-tool\BackupAndRestore.cs,backup,The following statement contains a magic number: actuator_config_json = actuator_config_json.Remove(actuator_config_json.Length - 4' 4);
Magic Number,xs1_backup_tool,BackupAndRestore,D:\research\architectureSmells\repos\bietiekay_hacs\tools\xs1-backup-tool\BackupAndRestore.cs,backup,The following statement contains a magic number: actuator_config_json = actuator_config_json.Remove(actuator_config_json.Length - 4' 4);
Magic Number,xs1_backup_tool,BackupAndRestore,D:\research\architectureSmells\repos\bietiekay_hacs\tools\xs1-backup-tool\BackupAndRestore.cs,backup,The following statement contains a magic number: timer_config_json = timer_config_json.Remove(timer_config_json.Length - 4' 4);
Magic Number,xs1_backup_tool,BackupAndRestore,D:\research\architectureSmells\repos\bietiekay_hacs\tools\xs1-backup-tool\BackupAndRestore.cs,backup,The following statement contains a magic number: timer_config_json = timer_config_json.Remove(timer_config_json.Length - 4' 4);
Magic Number,xs1_backup_tool,BackupAndRestore,D:\research\architectureSmells\repos\bietiekay_hacs\tools\xs1-backup-tool\BackupAndRestore.cs,backup,The following statement contains a magic number: script_config_json = script_config_json.Remove(script_config_json.Length - 4' 4);
Magic Number,xs1_backup_tool,BackupAndRestore,D:\research\architectureSmells\repos\bietiekay_hacs\tools\xs1-backup-tool\BackupAndRestore.cs,backup,The following statement contains a magic number: script_config_json = script_config_json.Remove(script_config_json.Length - 4' 4);
Magic Number,xs1_backup_tool,BackupAndRestore,D:\research\architectureSmells\repos\bietiekay_hacs\tools\xs1-backup-tool\BackupAndRestore.cs,backup,The following statement contains a magic number: room_config_json = room_config_json.Remove(room_config_json.Length - 4' 4);
Magic Number,xs1_backup_tool,BackupAndRestore,D:\research\architectureSmells\repos\bietiekay_hacs\tools\xs1-backup-tool\BackupAndRestore.cs,backup,The following statement contains a magic number: room_config_json = room_config_json.Remove(room_config_json.Length - 4' 4);
Magic Number,xs1_backup_tool,BackupAndRestore,D:\research\architectureSmells\repos\bietiekay_hacs\tools\xs1-backup-tool\BackupAndRestore.cs,restore,The following statement contains a magic number: ser.MaxJsonLength = 20000000;
Magic Number,xs1_backup_tool,BackupAndRestore,D:\research\architectureSmells\repos\bietiekay_hacs\tools\xs1-backup-tool\BackupAndRestore.cs,restore,The following statement contains a magic number: xs1_config_json = xs1_config_json.Remove(xs1_config_json.Length - 4' 4);
Magic Number,xs1_backup_tool,BackupAndRestore,D:\research\architectureSmells\repos\bietiekay_hacs\tools\xs1-backup-tool\BackupAndRestore.cs,restore,The following statement contains a magic number: xs1_config_json = xs1_config_json.Remove(xs1_config_json.Length - 4' 4);
Magic Number,xs1_backup_tool,BackupAndRestore,D:\research\architectureSmells\repos\bietiekay_hacs\tools\xs1-backup-tool\BackupAndRestore.cs,WriteSensorConfiguration,The following statement contains a magic number: ser.MaxJsonLength = 20000000;
Magic Number,xs1_backup_tool,BackupAndRestore,D:\research\architectureSmells\repos\bietiekay_hacs\tools\xs1-backup-tool\BackupAndRestore.cs,WriteActorConfiguration,The following statement contains a magic number: ser.MaxJsonLength = 20000000;
Magic Number,xs1_backup_tool,XS1BackupTool,D:\research\architectureSmells\repos\bietiekay_hacs\tools\xs1-backup-tool\xs1-backup-tool.cs,Main,The following statement contains a magic number: switch (args[3])                  {                      case "-b":                          // backup                          if (BackupAndRestore.backup(args[0]' args[1]' args[2]' args[4]))                          {                              Console.WriteLine("Backup successful!");                          }                          else                          {                              Console.WriteLine("Backup unsuccessful!");                          }                          break;                      case "-r":                          // ask before restore                          Console.WriteLine("Restoring a configuration will overwrite the current settings of");                          Console.WriteLine("the EzControl XS1 device!");                          Console.WriteLine();                          Console.WriteLine("This is an untested functionality - it's not supposed to work right now!");                          Console.WriteLine();                          Console.WriteLine("Do you really want to restore the configuration from a backup?");                          Console.Write("Type YES and press Enter: ");                          String userinput = Console.ReadLine();                          if (userinput == "YES")                          {                              // restore                              if (BackupAndRestore.restore(args[0]' args[1]' args[2]' args[4]))                              {                                  Console.WriteLine("Restore successful!");                              }                              else                               {                                  Console.WriteLine("Restore unsuccessful!");                              }                          }                          else                              Console.Write("Restore abortet!");                          break;                      default:                          HelpMessage();                          return;                  }
Magic Number,xs1_backup_tool,XS1BackupTool,D:\research\architectureSmells\repos\bietiekay_hacs\tools\xs1-backup-tool\xs1-backup-tool.cs,Main,The following statement contains a magic number: switch (args[3])                  {                      case "-b":                          // backup                          if (BackupAndRestore.backup(args[0]' args[1]' args[2]' args[4]))                          {                              Console.WriteLine("Backup successful!");                          }                          else                          {                              Console.WriteLine("Backup unsuccessful!");                          }                          break;                      case "-r":                          // ask before restore                          Console.WriteLine("Restoring a configuration will overwrite the current settings of");                          Console.WriteLine("the EzControl XS1 device!");                          Console.WriteLine();                          Console.WriteLine("This is an untested functionality - it's not supposed to work right now!");                          Console.WriteLine();                          Console.WriteLine("Do you really want to restore the configuration from a backup?");                          Console.Write("Type YES and press Enter: ");                          String userinput = Console.ReadLine();                          if (userinput == "YES")                          {                              // restore                              if (BackupAndRestore.restore(args[0]' args[1]' args[2]' args[4]))                              {                                  Console.WriteLine("Restore successful!");                              }                              else                               {                                  Console.WriteLine("Restore unsuccessful!");                              }                          }                          else                              Console.Write("Restore abortet!");                          break;                      default:                          HelpMessage();                          return;                  }
Magic Number,xs1_backup_tool,XS1BackupTool,D:\research\architectureSmells\repos\bietiekay_hacs\tools\xs1-backup-tool\xs1-backup-tool.cs,Main,The following statement contains a magic number: switch (args[3])                  {                      case "-b":                          // backup                          if (BackupAndRestore.backup(args[0]' args[1]' args[2]' args[4]))                          {                              Console.WriteLine("Backup successful!");                          }                          else                          {                              Console.WriteLine("Backup unsuccessful!");                          }                          break;                      case "-r":                          // ask before restore                          Console.WriteLine("Restoring a configuration will overwrite the current settings of");                          Console.WriteLine("the EzControl XS1 device!");                          Console.WriteLine();                          Console.WriteLine("This is an untested functionality - it's not supposed to work right now!");                          Console.WriteLine();                          Console.WriteLine("Do you really want to restore the configuration from a backup?");                          Console.Write("Type YES and press Enter: ");                          String userinput = Console.ReadLine();                          if (userinput == "YES")                          {                              // restore                              if (BackupAndRestore.restore(args[0]' args[1]' args[2]' args[4]))                              {                                  Console.WriteLine("Restore successful!");                              }                              else                               {                                  Console.WriteLine("Restore unsuccessful!");                              }                          }                          else                              Console.Write("Restore abortet!");                          break;                      default:                          HelpMessage();                          return;                  }
Magic Number,xs1_backup_tool,XS1BackupTool,D:\research\architectureSmells\repos\bietiekay_hacs\tools\xs1-backup-tool\xs1-backup-tool.cs,Main,The following statement contains a magic number: switch (args[3])                  {                      case "-b":                          // backup                          if (BackupAndRestore.backup(args[0]' args[1]' args[2]' args[4]))                          {                              Console.WriteLine("Backup successful!");                          }                          else                          {                              Console.WriteLine("Backup unsuccessful!");                          }                          break;                      case "-r":                          // ask before restore                          Console.WriteLine("Restoring a configuration will overwrite the current settings of");                          Console.WriteLine("the EzControl XS1 device!");                          Console.WriteLine();                          Console.WriteLine("This is an untested functionality - it's not supposed to work right now!");                          Console.WriteLine();                          Console.WriteLine("Do you really want to restore the configuration from a backup?");                          Console.Write("Type YES and press Enter: ");                          String userinput = Console.ReadLine();                          if (userinput == "YES")                          {                              // restore                              if (BackupAndRestore.restore(args[0]' args[1]' args[2]' args[4]))                              {                                  Console.WriteLine("Restore successful!");                              }                              else                               {                                  Console.WriteLine("Restore unsuccessful!");                              }                          }                          else                              Console.Write("Restore abortet!");                          break;                      default:                          HelpMessage();                          return;                  }
Magic Number,xs1_backup_tool,XS1BackupTool,D:\research\architectureSmells\repos\bietiekay_hacs\tools\xs1-backup-tool\xs1-backup-tool.cs,Main,The following statement contains a magic number: switch (args[3])                  {                      case "-b":                          // backup                          if (BackupAndRestore.backup(args[0]' args[1]' args[2]' args[4]))                          {                              Console.WriteLine("Backup successful!");                          }                          else                          {                              Console.WriteLine("Backup unsuccessful!");                          }                          break;                      case "-r":                          // ask before restore                          Console.WriteLine("Restoring a configuration will overwrite the current settings of");                          Console.WriteLine("the EzControl XS1 device!");                          Console.WriteLine();                          Console.WriteLine("This is an untested functionality - it's not supposed to work right now!");                          Console.WriteLine();                          Console.WriteLine("Do you really want to restore the configuration from a backup?");                          Console.Write("Type YES and press Enter: ");                          String userinput = Console.ReadLine();                          if (userinput == "YES")                          {                              // restore                              if (BackupAndRestore.restore(args[0]' args[1]' args[2]' args[4]))                              {                                  Console.WriteLine("Restore successful!");                              }                              else                               {                                  Console.WriteLine("Restore unsuccessful!");                              }                          }                          else                              Console.Write("Restore abortet!");                          break;                      default:                          HelpMessage();                          return;                  }
Magic Number,xs1_backup_tool,XS1BackupTool,D:\research\architectureSmells\repos\bietiekay_hacs\tools\xs1-backup-tool\xs1-backup-tool.cs,Main,The following statement contains a magic number: args.Length > 4
