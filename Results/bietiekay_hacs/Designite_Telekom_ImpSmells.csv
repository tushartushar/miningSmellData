Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Telekom.Common.Model,TelekomRequest,C:\repos\bietiekay_hacs\hacs\Libraries\TelekomSendSMS\Telekom\Common\Model\TelekomRequest.cs,BuildRequestParameters,Cyclomatic complexity of the method is 11
Complex Method,Telekom.SendSms,SendSmsClient,C:\repos\bietiekay_hacs\hacs\Libraries\TelekomSendSMS\Telekom\SendSms\SendSmsClient.cs,CreateAuthenticatedJsonRequest,Cyclomatic complexity of the method is 10
Long Parameter List,Telekom.Common.Auth,TelekomOAuth2Auth,C:\repos\bietiekay_hacs\hacs\Libraries\TelekomSendSMS\Telekom\Common\Auth\TelekomOAuth2Auth.cs,TelekomOAuth2Auth,The method has 6 parameters. Parameters: clientId' clientSecret' accessToken' accessTokenValidUntil' scope' refreshToken
Long Statement,Telekom.Common.Auth,TelekomOAuth2Auth,C:\repos\bietiekay_hacs\hacs\Libraries\TelekomSendSMS\Telekom\Common\Auth\TelekomOAuth2Auth.cs,CreateRequestAccessTokenParams,The length of the statement  "            TelekomJsonWebRequest<AccessTokenResponse> request = new TelekomJsonWebRequest<AccessTokenResponse>(uri' HttpMethod.POST); " is 122.
Magic Number,Telekom.Common.Auth,TelekomUPAuth,C:\repos\bietiekay_hacs\hacs\Libraries\TelekomSendSMS\Telekom\Common\Auth\TelekomUPAuth.cs,ParseTokenResponse,The following statement contains a magic number: if (tokenStart >= 0)              {                  string tokenData = responseData.Substring(tokenStart + 6);                  DateTime tokenExpires = DateTime.Parse(response.Headers["Expires"]);                    AccessToken = tokenData;                  AccessTokenValidUntil = tokenExpires;              }
Magic Number,Telekom.Common.WebRequest.HttpParamWriter,FormMultipartWriter,C:\repos\bietiekay_hacs\hacs\Libraries\TelekomSendSMS\Telekom\Common\WebRequest\HttpParamWriter\FormMultipartWriter.cs,WriteFile,The following statement contains a magic number: byte[] buffer = new byte[32768];
Magic Number,Telekom.Common.WebRequest,TelekomWebRequest,C:\repos\bietiekay_hacs\hacs\Libraries\TelekomSendSMS\Telekom\Common\WebRequest\TelekomWebRequest.cs,WritePayload,The following statement contains a magic number: if (rawContent != null)              {                  request.ContentType = rawContentType;                    //set stream position to 0 for reading from it.                  rawContent.Position = 0;                    // Copy stream                  byte[] buffer = new byte[32768];                  int read;                  while ((read = rawContent.Read(buffer' 0' buffer.Length)) > 0)                  {                      stream.Write(buffer' 0' read);                  }                  stream.Close();              }                          else if (attachedFiles.Count > 0)              {                  // If files have to be atteched' use Form Multipart format                  using (var paramWriter = new FormMultipartWriter(stream))                  {                      WriteBodyParamter(paramWriter);                  }              }              else              {                  using (var paramWriter = new RequestStringWriter(stream))                  {                      WriteBodyParamter(paramWriter);                  }              }
