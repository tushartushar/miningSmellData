Implementation smell,Namespace,Class,File,Method,Description
Empty Catch Block,sones.storage,TinyOnDiskStorage,C:\repos\bietiekay_hacs\hacs\Libraries\sonesStorage\DataObjectOnDisk.cs,ReadCompleteIndexFromDiskIntoMemory,The method has an empty catch block.
Magic Number,sones.storage,TinyOnDiskStorage,C:\repos\bietiekay_hacs\hacs\Libraries\sonesStorage\DataObjectOnDisk.cs,ReadCompleteIndexFromDiskIntoMemory,The following statement contains a magic number: lock (DatabaseIndexFile)              {                  DatabaseIndexFile.Seek(0' SeekOrigin.Begin);                    long currentPosition = 0;                    byte[] _SerializedData;                  OnDiscAdress _deserializedAdress;                  InMemoryIndex = new List<OnDiscAdress>();                    try                  {                      while (currentPosition != DatabaseIndexFile.Length)                      {                          // read through the index...                          // one OnDiskAdress is 33 bytes                          _SerializedData = new byte[33];                            DatabaseIndexFile.Read(_SerializedData' 0' 33);                          _deserializedAdress = new OnDiscAdress();                          _deserializedAdress.Deserialize(_SerializedData);                            InMemoryIndex.Add(_deserializedAdress);                          currentPosition = currentPosition + 33;                            /// HACK                          //if (InMemoryIndex.Count > 50000)                          //    break;                      }                  }                  catch (Exception)                  {                  }              }
Magic Number,sones.storage,TinyOnDiskStorage,C:\repos\bietiekay_hacs\hacs\Libraries\sonesStorage\DataObjectOnDisk.cs,ReadCompleteIndexFromDiskIntoMemory,The following statement contains a magic number: lock (DatabaseIndexFile)              {                  DatabaseIndexFile.Seek(0' SeekOrigin.Begin);                    long currentPosition = 0;                    byte[] _SerializedData;                  OnDiscAdress _deserializedAdress;                  InMemoryIndex = new List<OnDiscAdress>();                    try                  {                      while (currentPosition != DatabaseIndexFile.Length)                      {                          // read through the index...                          // one OnDiskAdress is 33 bytes                          _SerializedData = new byte[33];                            DatabaseIndexFile.Read(_SerializedData' 0' 33);                          _deserializedAdress = new OnDiscAdress();                          _deserializedAdress.Deserialize(_SerializedData);                            InMemoryIndex.Add(_deserializedAdress);                          currentPosition = currentPosition + 33;                            /// HACK                          //if (InMemoryIndex.Count > 50000)                          //    break;                      }                  }                  catch (Exception)                  {                  }              }
Magic Number,sones.storage,TinyOnDiskStorage,C:\repos\bietiekay_hacs\hacs\Libraries\sonesStorage\DataObjectOnDisk.cs,ReadCompleteIndexFromDiskIntoMemory,The following statement contains a magic number: lock (DatabaseIndexFile)              {                  DatabaseIndexFile.Seek(0' SeekOrigin.Begin);                    long currentPosition = 0;                    byte[] _SerializedData;                  OnDiscAdress _deserializedAdress;                  InMemoryIndex = new List<OnDiscAdress>();                    try                  {                      while (currentPosition != DatabaseIndexFile.Length)                      {                          // read through the index...                          // one OnDiskAdress is 33 bytes                          _SerializedData = new byte[33];                            DatabaseIndexFile.Read(_SerializedData' 0' 33);                          _deserializedAdress = new OnDiscAdress();                          _deserializedAdress.Deserialize(_SerializedData);                            InMemoryIndex.Add(_deserializedAdress);                          currentPosition = currentPosition + 33;                            /// HACK                          //if (InMemoryIndex.Count > 50000)                          //    break;                      }                  }                  catch (Exception)                  {                  }              }
Magic Number,sones.Storage,OnDiscAdress,C:\repos\bietiekay_hacs\hacs\Libraries\sonesStorage\OnDiscAdress.cs,Serialize,The following statement contains a magic number: byte[] Output = new byte[33];
