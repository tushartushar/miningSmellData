Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,ZeroMQ,ExecuteExtensions,D:\research\architectureSmells\repos\zeromq_clrzmq\src\ZeroMQ\ExecuteExtensions.cs,WithTimeout,The method has 5 parameters. Parameters: socket' method' arg1' arg2' timeout
Long Parameter List,ZeroMQ,ExecuteExtensions,D:\research\architectureSmells\repos\zeromq_clrzmq\src\ZeroMQ\ExecuteExtensions.cs,WithTimeout,The method has 6 parameters. Parameters: socket' method' arg1' arg2' arg3' timeout
Long Parameter List,ZeroMQ,ExecuteExtensions,D:\research\architectureSmells\repos\zeromq_clrzmq\src\ZeroMQ\ExecuteExtensions.cs,WithTimeout,The method has 6 parameters. Parameters: socket' method' arg1' arg2' arg3' timeout
Long Parameter List,ZeroMQ.Interop,Retry,D:\research\architectureSmells\repos\zeromq_clrzmq\src\ZeroMQ\Interop\Retry.cs,IfInterrupted,The method has 5 parameters. Parameters: operation' arg1' arg2' arg3' arg4
Long Statement,ZeroMQ,SendReceiveExtensions,D:\research\architectureSmells\repos\zeromq_clrzmq\src\ZeroMQ\SendReceiveExtensions.cs,SendMessage,The length of the statement  "                throw new ArgumentException("Unable to send an incomplete message. Ensure HasMore on the last Frame is set to 'false'."' "message"); " is 132.
Long Statement,ZeroMQ,ZmqSocket,D:\research\architectureSmells\repos\zeromq_clrzmq\src\ZeroMQ\ZmqSocket.cs,Send,The length of the statement  "                throw new ArgumentOutOfRangeException("size"' "Expected a non-negative value less than or equal to the buffer length."); " is 120.
Long Statement,ZeroMQ,ZmqSocket,D:\research\architectureSmells\repos\zeromq_clrzmq\src\ZeroMQ\ZmqSocket.cs,GetLegacySocketOption,The length of the statement  "            return ZmqVersion.Current.IsAtLeast(LatestVersion) ? GetSocketOptionInt32(option) : Convert.ToInt32(legacyGetter(option)); " is 122.
Magic Number,ZeroMQ.Devices,Device,D:\research\architectureSmells\repos\zeromq_clrzmq\src\ZeroMQ\Devices\Device.cs,Close,The following statement contains a magic number: Join(TimeSpan.FromMilliseconds(PollingIntervalMsec * 2));
Magic Number,ZeroMQ.Devices,Device,D:\research\architectureSmells\repos\zeromq_clrzmq\src\ZeroMQ\Devices\Device.cs,Dispose,The following statement contains a magic number: Join(TimeSpan.FromMilliseconds(PollingIntervalMsec * 2));
Magic Number,ZeroMQ.Interop,LibZmq,D:\research\architectureSmells\repos\zeromq_clrzmq\src\ZeroMQ\Interop\LibZmq.NET.cs,LibZmq,The following statement contains a magic number: MajorVersion >= 3
Magic Number,ZeroMQ.Interop,SocketProxy,D:\research\architectureSmells\repos\zeromq_clrzmq\src\ZeroMQ\Interop\SocketProxy.cs,Receive,The following statement contains a magic number: bytesReceived == 0 && LibZmq.MajorVersion < 3
Magic Number,ZeroMQ.Interop,SocketProxy,D:\research\architectureSmells\repos\zeromq_clrzmq\src\ZeroMQ\Interop\SocketProxy.cs,Receive,The following statement contains a magic number: bytesReceived == 0 && LibZmq.MajorVersion < 3
Magic Number,ZeroMQ.Interop,SocketProxy,D:\research\architectureSmells\repos\zeromq_clrzmq\src\ZeroMQ\Interop\SocketProxy.cs,Send,The following statement contains a magic number: bytesSent == 0 && LibZmq.MajorVersion < 3
Magic Number,ZeroMQ.Interop,SocketProxy,D:\research\architectureSmells\repos\zeromq_clrzmq\src\ZeroMQ\Interop\SocketProxy.cs,GetReceiveMore,The following statement contains a magic number: LibZmq.MajorVersion >= 3
Missing Default,ZeroMQ,ZmqContext,D:\research\architectureSmells\repos\zeromq_clrzmq\src\ZeroMQ\ZmqContext.cs,CreateSocket,The following switch statement is missing a default case: switch (socketType)              {                  case SocketType.REQ:                  case SocketType.REP:                  case SocketType.DEALER:                  case SocketType.ROUTER:                  case SocketType.XPUB:                  case SocketType.PAIR:                      return CreateSocket(sp => new DuplexSocket(sp' socketType)' socketType);                    case SocketType.PUSH:                  case SocketType.PUB:                      return CreateSocket(sp => new SendSocket(sp' socketType)' socketType);                    case SocketType.PULL:                      return CreateSocket(sp => new ReceiveSocket(sp' socketType)' socketType);                    case SocketType.SUB:                      return CreateSocket(sp => new SubscribeSocket(sp' socketType)' socketType);                    case SocketType.XSUB:                      return CreateSocket(sp => new SubscribeExtSocket(sp' socketType)' socketType);              }
