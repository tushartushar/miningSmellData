Implementation smell,Namespace,Class,File,Method,Description
Complex Method,XSpect,Flows,D:\newReposJune17\takeshik_yacq\YacqRun\..\Yacq\CommonExtensions.cs,Zip,Cyclomatic complexity of the method is 7
Complex Method,XSpect,Flows,D:\newReposJune17\takeshik_yacq\YacqRun\..\Yacq\CommonExtensions.cs,Zip,Cyclomatic complexity of the method is 8
Complex Method,XSpect,Flows,D:\newReposJune17\takeshik_yacq\YacqRun\..\Yacq\CommonExtensions.cs,Zip,Cyclomatic complexity of the method is 9
Complex Method,XSpect,Flows,D:\newReposJune17\takeshik_yacq\YacqRun\..\Yacq\CommonExtensions.cs,Zip,Cyclomatic complexity of the method is 10
Complex Method,XSpect,Flows,D:\newReposJune17\takeshik_yacq\YacqRun\..\Yacq\CommonExtensions.cs,Zip,Cyclomatic complexity of the method is 11
Complex Method,XSpect,Lists,D:\newReposJune17\takeshik_yacq\YacqRun\..\Yacq\CommonExtensions.cs,Slice,Cyclomatic complexity of the method is 9
Complex Method,XSpect.Yacq.Runner,Program,D:\newReposJune17\takeshik_yacq\YacqRun\Program.cs,Main,Cyclomatic complexity of the method is 8
Long Parameter List,XSpect,Flows,D:\newReposJune17\takeshik_yacq\YacqRun\..\Yacq\CommonExtensions.cs,If,The method has 4 parameters.
Long Parameter List,XSpect,Flows,D:\newReposJune17\takeshik_yacq\YacqRun\..\Yacq\CommonExtensions.cs,If,The method has 4 parameters.
Long Parameter List,XSpect,Flows,D:\newReposJune17\takeshik_yacq\YacqRun\..\Yacq\CommonExtensions.cs,If,The method has 4 parameters.
Long Parameter List,XSpect,Flows,D:\newReposJune17\takeshik_yacq\YacqRun\..\Yacq\CommonExtensions.cs,Zip,The method has 4 parameters.
Long Parameter List,XSpect,Flows,D:\newReposJune17\takeshik_yacq\YacqRun\..\Yacq\CommonExtensions.cs,Zip,The method has 5 parameters.
Long Parameter List,XSpect,Flows,D:\newReposJune17\takeshik_yacq\YacqRun\..\Yacq\CommonExtensions.cs,Zip,The method has 6 parameters.
Long Parameter List,XSpect,Flows,D:\newReposJune17\takeshik_yacq\YacqRun\..\Yacq\CommonExtensions.cs,Zip,The method has 7 parameters.
Long Parameter List,XSpect,Flows,D:\newReposJune17\takeshik_yacq\YacqRun\..\Yacq\CommonExtensions.cs,Zip,The method has 8 parameters.
Long Parameter List,XSpect,Flows,D:\newReposJune17\takeshik_yacq\YacqRun\..\Yacq\CommonExtensions.cs,Zip,The method has 9 parameters.
Long Parameter List,XSpect,Enumerables,D:\newReposJune17\takeshik_yacq\YacqRun\..\Yacq\CommonExtensions.cs,Between,The method has 4 parameters.
Long Parameter List,XSpect,Enumerables,D:\newReposJune17\takeshik_yacq\YacqRun\..\Yacq\CommonExtensions.cs,Generate,The method has 4 parameters.
Long Parameter List,XSpect,Enumerables,D:\newReposJune17\takeshik_yacq\YacqRun\..\Yacq\CommonExtensions.cs,Generate,The method has 4 parameters.
Long Parameter List,XSpect,Arrays,D:\newReposJune17\takeshik_yacq\YacqRun\..\Yacq\CommonExtensions.cs,BinarySearch,The method has 5 parameters.
Long Parameter List,XSpect,CommandlineParser,D:\newReposJune17\takeshik_yacq\YacqRun\CommandlineParser.cs,Option,The method has 5 parameters.
Long Statement,XSpect,Flows,D:\newReposJune17\takeshik_yacq\YacqRun\..\Yacq\CommonExtensions.cs,Apply,The length of the statement  "	Array.ForEach (actions' a => a (tuple.Item1' tuple.Item2' tuple.Item3' tuple.Item4' tuple.Item5' tuple.Item6' tuple.Item7)); " is 124.
Long Statement,XSpect,Flows,D:\newReposJune17\takeshik_yacq\YacqRun\..\Yacq\CommonExtensions.cs,Apply,The length of the statement  "	Array.ForEach (actions' a => a (tuple.Item1' tuple.Item2' tuple.Item3' tuple.Item4' tuple.Item5' tuple.Item6' tuple.Item7' tuple.Rest)); " is 136.
Long Statement,XSpect,Flows,D:\newReposJune17\takeshik_yacq\YacqRun\..\Yacq\CommonExtensions.cs,Null,The length of the statement  "	return EqualityComparer<TReceiver>.Default.Equals (self' default(TReceiver)) ? funcsIfNull.Select (f => f ()).FirstOrDefault (_ => !EqualityComparer<TReturn>.Default.Equals (_' default(TReturn))) : func (self); " is 210.
Long Statement,XSpect,Flows,D:\newReposJune17\takeshik_yacq\YacqRun\..\Yacq\CommonExtensions.cs,Zip,The length of the statement  "							while (iter1.MoveNext () && iter2.MoveNext () && iter3.MoveNext () && iter4.MoveNext () && iter5.MoveNext () && iter6.MoveNext ()) { " is 132.
Long Statement,XSpect,Flows,D:\newReposJune17\takeshik_yacq\YacqRun\..\Yacq\CommonExtensions.cs,Zip,The length of the statement  "								while (iter1.MoveNext () && iter2.MoveNext () && iter3.MoveNext () && iter4.MoveNext () && iter5.MoveNext () && iter6.MoveNext () && iter7.MoveNext ()) { " is 153.
Long Statement,XSpect,Flows,D:\newReposJune17\takeshik_yacq\YacqRun\..\Yacq\CommonExtensions.cs,Zip,The length of the statement  "									yield return resultSelector (iter1.Current' iter2.Current' iter3.Current' iter4.Current' iter5.Current' iter6.Current' iter7.Current); " is 134.
Long Statement,XSpect,Flows,D:\newReposJune17\takeshik_yacq\YacqRun\..\Yacq\CommonExtensions.cs,Zip,The length of the statement  "									while (iter1.MoveNext () && iter2.MoveNext () && iter3.MoveNext () && iter4.MoveNext () && iter5.MoveNext () && iter6.MoveNext () && iter7.MoveNext () && iter8.MoveNext ()) { " is 174.
Long Statement,XSpect,Flows,D:\newReposJune17\takeshik_yacq\YacqRun\..\Yacq\CommonExtensions.cs,Zip,The length of the statement  "										yield return resultSelector (iter1.Current' iter2.Current' iter3.Current' iter4.Current' iter5.Current' iter6.Current' iter7.Current' iter8.Current); " is 149.
Long Statement,XSpect,Lists,D:\newReposJune17\takeshik_yacq\YacqRun\..\Yacq\CommonExtensions.cs,RemoveAll,The length of the statement  "	var targets = list.Select ((e' i) => Tuple.Create (e' i)).Where (_ => predicate (_.Item1)).Select (_ => _.Item2).OrderByDescending (i => i).ToArray (); " is 151.
Long Statement,XSpect,Lists,D:\newReposJune17\takeshik_yacq\YacqRun\..\Yacq\CommonExtensions.cs,RemoveAll,The length of the statement  "	var targets = list.Select ((e' i) => Tuple.Create (e' i)).Where (_ => predicate (_.Item1' _.Item2)).Select (_ => _.Item2).OrderByDescending (i => i).ToArray (); " is 160.
Long Statement,XSpect,Lists,D:\newReposJune17\takeshik_yacq\YacqRun\..\Yacq\CommonExtensions.cs,Slice,The length of the statement  "			return from >= to ? list.Skip (list.Count + to).Take (from - to + 1).Reverse () : list.Skip (list.Count + from).Take (to - from + 1); " is 133.
Long Statement,XSpect,CommandlineParser,D:\newReposJune17\takeshik_yacq\YacqRun\CommandlineParser.cs,Parse,The length of the statement  "	return options.SelectMany (o => o.ShortNames.Select (c => Tuple.Create ("-" + c' o)).Concat (o.LongNames.Select (s => Tuple.Create ("--" + s' o)))).ToDictionary ().Let (map => args.TakeWhile (s => s != "--").SelectMany ((a' i) => a.Length > 1 && a [0] == '-' && a [1] != '-' ? a.Substring (1' a.Length - 2).Select (c => MakeTuple (map' "-" + c' o => null)).EndWith (MakeTuple (map' "-" + a.Last ()' o => o.AllowValue ? args [i + 1] : null)) : new[] { " is 450.
Long Statement,XSpect,CommandlineParser,D:\newReposJune17\takeshik_yacq\YacqRun\CommandlineParser.cs,Parse,The length of the statement  "	})).ToArray ().Let (_ => _.Where ((t' i) => t.Item1 != _parameter || i == 0 || !_ [i - 1].Item1.AllowValue)).Concat (args.SkipWhile (s => s != "--").Skip (1).Select (a => MakeTuple (_parameter' a))).ToLookup (t => t.Item1.Null (o => o.Id)' t => t.Item2); " is 254.
Long Statement,XSpect.Yacq.Runner,Program,D:\newReposJune17\takeshik_yacq\YacqRun\Program.cs,Main,The length of the statement  "		Console.WriteLine ("Usage: {0} [switches] [--] [inputs]"' Path.GetFileNameWithoutExtension (Environment.GetCommandLineArgs () [0])); " is 132.
Long Statement,XSpect.Yacq.Runner,Program,D:\newReposJune17\takeshik_yacq\YacqRun\Program.cs,Main,The length of the statement  "		Compile (input' _args ["_param"].FirstOrDefault (p => p != "-").Null (p => Path.GetFileNameWithoutExtension (p)) ?? "a.out"' _args.Contains ("winexe") ? PEFileKinds.WindowApplication : _args.Contains ("library") ? PEFileKinds.Dll : PEFileKinds.ConsoleApplication); " is 264.
Long Statement,XSpect.Yacq.Runner,Program,D:\newReposJune17\takeshik_yacq\YacqRun\Program.cs,Read,The length of the statement  "		return String.Concat (_args ["expr"].Concat (_args ["_param"].Select (p => p == "-" ? Console.In.ReadToEnd () : String.Join (Environment.NewLine' File.ReadAllLines (p).If (ls => ls [0].StartsWith ("#!")' ls => ls [0] = ""))))).If (String.IsNullOrEmpty' s => Console.In.ReadToEnd ()); " is 283.
Long Statement,XSpect.Yacq.Runner,Program,D:\newReposJune17\takeshik_yacq\YacqRun\Program.cs,Compile,The length of the statement  "			var method = type.DefineMethod ("Main"' MethodAttributes.Static' typeof(void)' Type.EmptyTypes' Expression.Lambda<Action> (Parse (new SymbolTable () { " is 150.
Magic Number,XSpect,CommandlineParser,D:\newReposJune17\takeshik_yacq\YacqRun\CommandlineParser.cs,Parse,The following statement contains a magic number: return options.SelectMany (o => o.ShortNames.Select (c => Tuple.Create ("-" + c' o)).Concat (o.LongNames.Select (s => Tuple.Create ("--" + s' o)))).ToDictionary ().Let (map => args.TakeWhile (s => s != "--").SelectMany ((a' i) => a.Length > 1 && a [0] == '-' && a [1] != '-' ? a.Substring (1' a.Length - 2).Select (c => MakeTuple (map' "-" + c' o => null)).EndWith (MakeTuple (map' "-" + a.Last ()' o => o.AllowValue ? args [i + 1] : null)) : new[] {  	a.StartsWith ("--") ? a.Split (new[] {  		'=''  	}' 2).Let (_ => MakeTuple (map' _ [0]' o => _.Length == 2 ? _ [1] : null)) : MakeTuple (_parameter' a)'  })).ToArray ().Let (_ => _.Where ((t' i) => t.Item1 != _parameter || i == 0 || !_ [i - 1].Item1.AllowValue)).Concat (args.SkipWhile (s => s != "--").Skip (1).Select (a => MakeTuple (_parameter' a))).ToLookup (t => t.Item1.Null (o => o.Id)' t => t.Item2);  
Magic Number,XSpect,CommandlineParser,D:\newReposJune17\takeshik_yacq\YacqRun\CommandlineParser.cs,Parse,The following statement contains a magic number: return options.SelectMany (o => o.ShortNames.Select (c => Tuple.Create ("-" + c' o)).Concat (o.LongNames.Select (s => Tuple.Create ("--" + s' o)))).ToDictionary ().Let (map => args.TakeWhile (s => s != "--").SelectMany ((a' i) => a.Length > 1 && a [0] == '-' && a [1] != '-' ? a.Substring (1' a.Length - 2).Select (c => MakeTuple (map' "-" + c' o => null)).EndWith (MakeTuple (map' "-" + a.Last ()' o => o.AllowValue ? args [i + 1] : null)) : new[] {  	a.StartsWith ("--") ? a.Split (new[] {  		'=''  	}' 2).Let (_ => MakeTuple (map' _ [0]' o => _.Length == 2 ? _ [1] : null)) : MakeTuple (_parameter' a)'  })).ToArray ().Let (_ => _.Where ((t' i) => t.Item1 != _parameter || i == 0 || !_ [i - 1].Item1.AllowValue)).Concat (args.SkipWhile (s => s != "--").Skip (1).Select (a => MakeTuple (_parameter' a))).ToLookup (t => t.Item1.Null (o => o.Id)' t => t.Item2);  
Magic Number,XSpect,CommandlineParser,D:\newReposJune17\takeshik_yacq\YacqRun\CommandlineParser.cs,Parse,The following statement contains a magic number: return options.SelectMany (o => o.ShortNames.Select (c => Tuple.Create ("-" + c' o)).Concat (o.LongNames.Select (s => Tuple.Create ("--" + s' o)))).ToDictionary ().Let (map => args.TakeWhile (s => s != "--").SelectMany ((a' i) => a.Length > 1 && a [0] == '-' && a [1] != '-' ? a.Substring (1' a.Length - 2).Select (c => MakeTuple (map' "-" + c' o => null)).EndWith (MakeTuple (map' "-" + a.Last ()' o => o.AllowValue ? args [i + 1] : null)) : new[] {  	a.StartsWith ("--") ? a.Split (new[] {  		'=''  	}' 2).Let (_ => MakeTuple (map' _ [0]' o => _.Length == 2 ? _ [1] : null)) : MakeTuple (_parameter' a)'  })).ToArray ().Let (_ => _.Where ((t' i) => t.Item1 != _parameter || i == 0 || !_ [i - 1].Item1.AllowValue)).Concat (args.SkipWhile (s => s != "--").Skip (1).Select (a => MakeTuple (_parameter' a))).ToLookup (t => t.Item1.Null (o => o.Id)' t => t.Item2);  
Missing Default,XSpect,Lists,D:\newReposJune17\takeshik_yacq\YacqRun\..\Yacq\CommonExtensions.cs,Slice,The following switch statement is missing a default case: switch (Math.Sign (from)) {  case -1:  	switch (Math.Sign (to)) {  	case -1:  		return from >= to ? list.Skip (list.Count + to).Take (from - to + 1).Reverse () : list.Skip (list.Count + from).Take (to - from + 1);  	case 0:  		return list.Skip (list.Count + from).EndWith (list [0]);  	case 1:  		return list.Skip (list.Count + from).Concat (list.Take (to + 1));  	}  	break;  case 0:  	switch (Math.Sign (to)) {  	case -1:  		return list.Skip (list.Count + to).Reverse ().StartWith (list [0]);  	case 0:  		return list.Take (1);  	case 1:  		return list.Take (to + 1);  	}  	break;  case 1:  	switch (Math.Sign (to)) {  	case -1:  		return list.Skip (list.Count + to).Concat (list.Take (from + 1)).Reverse ();  	case 0:  		return list.Take (from + 1).Reverse ();  	case 1:  		return from <= to ? list.Skip (from).Take (to - from + 1) : list.Skip (to).Take (from - to + 1).Reverse ();  	}  	break;  }  
Missing Default,XSpect,Lists,D:\newReposJune17\takeshik_yacq\YacqRun\..\Yacq\CommonExtensions.cs,Slice,The following switch statement is missing a default case: switch (Math.Sign (to)) {  case -1:  	return from >= to ? list.Skip (list.Count + to).Take (from - to + 1).Reverse () : list.Skip (list.Count + from).Take (to - from + 1);  case 0:  	return list.Skip (list.Count + from).EndWith (list [0]);  case 1:  	return list.Skip (list.Count + from).Concat (list.Take (to + 1));  }  
Missing Default,XSpect,Lists,D:\newReposJune17\takeshik_yacq\YacqRun\..\Yacq\CommonExtensions.cs,Slice,The following switch statement is missing a default case: switch (Math.Sign (to)) {  case -1:  	return list.Skip (list.Count + to).Reverse ().StartWith (list [0]);  case 0:  	return list.Take (1);  case 1:  	return list.Take (to + 1);  }  
Missing Default,XSpect,Lists,D:\newReposJune17\takeshik_yacq\YacqRun\..\Yacq\CommonExtensions.cs,Slice,The following switch statement is missing a default case: switch (Math.Sign (to)) {  case -1:  	return list.Skip (list.Count + to).Concat (list.Take (from + 1)).Reverse ();  case 0:  	return list.Take (from + 1).Reverse ();  case 1:  	return from <= to ? list.Skip (from).Take (to - from + 1) : list.Skip (to).Take (from - to + 1).Reverse ();  }  
