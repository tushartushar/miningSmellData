Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ffxivlib,Library,C:\repos\sruon_ffxivlib\Library.cs,ByteSearch,Cyclomatic complexity of the method is 8
Complex Method,ffxivlib,SigScanner,C:\repos\sruon_ffxivlib\SigScanner.cs,SigScan,Cyclomatic complexity of the method is 10
Long Parameter List,ffxivlib,MemoryReader,C:\repos\sruon_ffxivlib\MemoryReader.cs,ReadProcessMemory,The method has 5 parameters. Parameters: hProcess' lpBaseAddress' buffer' size' lpNumberOfBytesRead
Long Parameter List,ffxivlib,MemoryReader,C:\repos\sruon_ffxivlib\MemoryReader.cs,WriteProcessMemory,The method has 5 parameters. Parameters: hProcess' lpBaseAddress' lpBuffer' nSize' lpNumberOfBytesWritten
Long Parameter List,ffxivlib,ResourceParser,C:\repos\sruon_ffxivlib\ResourceParser.cs,RunLinqQuery,The method has 5 parameters. Parameters: filename' node' lookupKey' resultKey' search
Long Parameter List,ffxivlib,ResourceParser,C:\repos\sruon_ffxivlib\ResourceParser.cs,RunLinqQuery,The method has 5 parameters. Parameters: filename' node' lookupKey' resultKey' search
Long Parameter List,ffxivlib,ResourceParser,C:\repos\sruon_ffxivlib\ResourceParser.cs,RunLinqQuery,The method has 5 parameters. Parameters: filename' node' lookupKeys' resultKey' searchValues
Long Parameter List,ffxivlib,SigScanner,C:\repos\sruon_ffxivlib\SigScanner.cs,VirtualProtectEx,The method has 5 parameters. Parameters: hProcess' lpAddress' dwSize' flNewProtect' lpflOldProtect
Long Parameter List,ffxivlib,SigScanner,C:\repos\sruon_ffxivlib\SigScanner.cs,ReadProcessMemory,The method has 5 parameters. Parameters: hProcess' lpBaseAddress' lpBuffer' dwSize' lpNumberOfBytesRead
Long Statement,ffxivlib,Library,C:\repos\sruon_ffxivlib\Library.cs,ByteSearch,The length of the statement  "            if (haystack.Length > 0 && needle.Length > 0 && start <= (haystack.Length - needle.Length) && haystack.Length >= needle.Length) " is 127.
Long Statement,ffxivlib,SigScanner,C:\repos\sruon_ffxivlib\SigScanner.cs,SigScan,The length of the statement  "                    //                Debug.WriteLine(string.Format("Bytes read: {0} "'(readbytes < SearchBlockSize) ? readbytes : SearchBlockSize)); " is 129.
Long Statement,ffxivlib,SigScanner,C:\repos\sruon_ffxivlib\SigScanner.cs,SigScan,The length of the statement  "                    //inc the starting point to the end of what we just searched. This will also allow us to match sigs accross searchBlocks " is 120.
Long Statement,ffxivlib,SigScanner,C:\repos\sruon_ffxivlib\SigScanner.cs,SigScan,The length of the statement  "                    currentLoc = blockSize != SearchBlockSize ? new IntPtr(currentLoc.ToInt64() + blockSize) : new IntPtr(currentLoc.ToInt64() + SearchBlockSize); " is 142.
Complex Conditional,ffxivlib,Entry,C:\repos\sruon_ffxivlib\Entry.cs,ReplaceAutotranslate,The conditional expression  "extracted[0] == 0xF0 || extracted[0] == 0xF2 || extracted[0] == 0xF4 || extracted[0] == 0xF6"  is complex.
Complex Conditional,ffxivlib,Library,C:\repos\sruon_ffxivlib\Library.cs,ByteSearch,The conditional expression  "haystack.Length > 0 && needle.Length > 0 && start <= (haystack.Length - needle.Length) && haystack.Length >= needle.Length"  is complex.
Empty Catch Block,ffxivlib,MemoryReader,C:\repos\sruon_ffxivlib\MemoryReader.cs,OpenProcess,The method has an empty catch block.
Magic Number,ffxivlib,Chatlog,C:\repos\sruon_ffxivlib\Chatlog.cs,UpdateBuffer,The following statement contains a magic number: int currentArrayIndex = (Structure.ArrayCurrent - Structure.ArrayStart) / 4;
Magic Number,ffxivlib,FFXIVLIB,C:\repos\sruon_ffxivlib\Chatlog.cs,GetServerName,The following statement contains a magic number: byte[] server = ReadMemory(ptr' 32);
Magic Number,ffxivlib,Entry,C:\repos\sruon_ffxivlib\Entry.cs,ProcessEntry,The following statement contains a magic number: workingCopy.RemoveRange(0' 8);
Magic Number,ffxivlib,Entry,C:\repos\sruon_ffxivlib\Entry.cs,ProcessEntry,The following statement contains a magic number: workingCopy.RemoveRange(0' 4);
Magic Number,ffxivlib,Entry,C:\repos\sruon_ffxivlib\Entry.cs,ProcessEntry,The following statement contains a magic number: int sep = workingCopy[1] == ':' ? 2 : 1;
Magic Number,ffxivlib,Entry,C:\repos\sruon_ffxivlib\Entry.cs,ReplaceAutotranslate,The following statement contains a magic number: foreach (int i in idx)                      {                          int cpy = i;                          if (workingCopy[++cpy] == openATPattern[1])                              {                                  List<byte> extracted = new List<byte>();                                  byte count = workingCopy[++cpy];                                  while (workingCopy[++cpy] != closeAT || extracted.Count == 0)                                      {                                          extracted.Add(workingCopy[cpy]);                                      }                                  byte category = extracted[0];                                  extracted.RemoveAt(0);                                  if (extracted[0] == 0xF0 || extracted[0] == 0xF2 || extracted[0] == 0xF4 || extracted[0] == 0xF6)                                      {                                          extracted.RemoveAt(0);                                       }                                  int atId = 0;                                  foreach (byte b in extracted)                                      {                                          atId <<= 8;                                          atId |= b;                                      }                                  string replacement;                                  // Let's not raise if user doesn't have resource files                                  try                                      {                                          replacement = string.Format("{{{0}}}"' ResourceParser.GetAutotranslate(category' atId));                                      }                                  catch (Exception)                                      {                                          replacement = string.Format("{{[{0} {1}]}}"' category' atId);                                      }                                  workingCopy.RemoveRange(i' count + 3);                                  workingCopy.InsertRange(i' Encoding.UTF8.GetBytes(replacement));                                  return ReplaceAutotranslate(workingCopy);                              }                      }
Magic Number,ffxivlib,Entry,C:\repos\sruon_ffxivlib\Entry.cs,ReplaceAutotranslate,The following statement contains a magic number: foreach (int i in idx)                      {                          int cpy = i;                          if (workingCopy[++cpy] == openATPattern[1])                              {                                  List<byte> extracted = new List<byte>();                                  byte count = workingCopy[++cpy];                                  while (workingCopy[++cpy] != closeAT || extracted.Count == 0)                                      {                                          extracted.Add(workingCopy[cpy]);                                      }                                  byte category = extracted[0];                                  extracted.RemoveAt(0);                                  if (extracted[0] == 0xF0 || extracted[0] == 0xF2 || extracted[0] == 0xF4 || extracted[0] == 0xF6)                                      {                                          extracted.RemoveAt(0);                                       }                                  int atId = 0;                                  foreach (byte b in extracted)                                      {                                          atId <<= 8;                                          atId |= b;                                      }                                  string replacement;                                  // Let's not raise if user doesn't have resource files                                  try                                      {                                          replacement = string.Format("{{{0}}}"' ResourceParser.GetAutotranslate(category' atId));                                      }                                  catch (Exception)                                      {                                          replacement = string.Format("{{[{0} {1}]}}"' category' atId);                                      }                                  workingCopy.RemoveRange(i' count + 3);                                  workingCopy.InsertRange(i' Encoding.UTF8.GetBytes(replacement));                                  return ReplaceAutotranslate(workingCopy);                              }                      }
Magic Number,ffxivlib,Entry,C:\repos\sruon_ffxivlib\Entry.cs,CleanFormat,The following statement contains a magic number: foreach (int i in idx)                      {                          if (workingCopy.Count > i + 8 && workingCopy[i + 8] == 0x03)                              {                                  workingCopy.RemoveRange(i' 9);                                  changed = true;                              }                          if (workingCopy.Count > i + 4 && workingCopy[i + 4] == 0x03)                              {                                  workingCopy.RemoveRange(i' 5);                                  changed = true;                              }                          if (changed)                              workingCopy = CleanFormat(workingCopy);                      }
Magic Number,ffxivlib,Entry,C:\repos\sruon_ffxivlib\Entry.cs,CleanFormat,The following statement contains a magic number: foreach (int i in idx)                      {                          if (workingCopy.Count > i + 8 && workingCopy[i + 8] == 0x03)                              {                                  workingCopy.RemoveRange(i' 9);                                  changed = true;                              }                          if (workingCopy.Count > i + 4 && workingCopy[i + 4] == 0x03)                              {                                  workingCopy.RemoveRange(i' 5);                                  changed = true;                              }                          if (changed)                              workingCopy = CleanFormat(workingCopy);                      }
Magic Number,ffxivlib,Entry,C:\repos\sruon_ffxivlib\Entry.cs,CleanFormat,The following statement contains a magic number: foreach (int i in idx)                      {                          if (workingCopy.Count > i + 8 && workingCopy[i + 8] == 0x03)                              {                                  workingCopy.RemoveRange(i' 9);                                  changed = true;                              }                          if (workingCopy.Count > i + 4 && workingCopy[i + 4] == 0x03)                              {                                  workingCopy.RemoveRange(i' 5);                                  changed = true;                              }                          if (changed)                              workingCopy = CleanFormat(workingCopy);                      }
Magic Number,ffxivlib,Entry,C:\repos\sruon_ffxivlib\Entry.cs,CleanFormat,The following statement contains a magic number: foreach (int i in idx)                      {                          if (workingCopy.Count > i + 8 && workingCopy[i + 8] == 0x03)                              {                                  workingCopy.RemoveRange(i' 9);                                  changed = true;                              }                          if (workingCopy.Count > i + 4 && workingCopy[i + 4] == 0x03)                              {                                  workingCopy.RemoveRange(i' 5);                                  changed = true;                              }                          if (changed)                              workingCopy = CleanFormat(workingCopy);                      }
Magic Number,ffxivlib,Entry,C:\repos\sruon_ffxivlib\Entry.cs,CleanFormat,The following statement contains a magic number: foreach (int i in idx)                      {                          if (workingCopy.Count > i + 8 && workingCopy[i + 8] == 0x03)                              {                                  workingCopy.RemoveRange(i' 9);                                  changed = true;                              }                          if (workingCopy.Count > i + 4 && workingCopy[i + 4] == 0x03)                              {                                  workingCopy.RemoveRange(i' 5);                                  changed = true;                              }                          if (changed)                              workingCopy = CleanFormat(workingCopy);                      }
Magic Number,ffxivlib,Entry,C:\repos\sruon_ffxivlib\Entry.cs,CleanFormat,The following statement contains a magic number: foreach (int i in idx)                      {                          if (workingCopy.Count > i + 8 && workingCopy[i + 8] == 0x03)                              {                                  workingCopy.RemoveRange(i' 9);                                  changed = true;                              }                          if (workingCopy.Count > i + 4 && workingCopy[i + 4] == 0x03)                              {                                  workingCopy.RemoveRange(i' 5);                                  changed = true;                              }                          if (changed)                              workingCopy = CleanFormat(workingCopy);                      }
Magic Number,ffxivlib,Entry,C:\repos\sruon_ffxivlib\Entry.cs,CleanName,The following statement contains a magic number: if (name != -1)                      {                          workingCopy.RemoveRange(0' name + 1);                          name = workingCopy.FindIndex(0' item => item == 0x3);                          if (name != -1)                              workingCopy.RemoveRange(name - 9' 10);                      }
Magic Number,ffxivlib,Entry,C:\repos\sruon_ffxivlib\Entry.cs,CleanName,The following statement contains a magic number: if (name != -1)                      {                          workingCopy.RemoveRange(0' name + 1);                          name = workingCopy.FindIndex(0' item => item == 0x3);                          if (name != -1)                              workingCopy.RemoveRange(name - 9' 10);                      }
Magic Number,ffxivlib,Entry,C:\repos\sruon_ffxivlib\Entry.cs,GetTimeStamp,The following statement contains a magic number: var dt = new DateTime(1970' 1' 1' 0' 0' 0' 0);
Magic Number,ffxivlib,MemoryReader,C:\repos\sruon_ffxivlib\MemoryReader.cs,ResolvePointer,The following statement contains a magic number: byte[] structure = ReadAdress(pointer' 4' out outres);
Magic Number,ffxivlib,MemoryReader,C:\repos\sruon_ffxivlib\MemoryReader.cs,ResolvePointerPath,The following statement contains a magic number: foreach (int pointer in path)                  {                      if (++i < count)                          {                              int readBytes;                              currentPtr += pointer;                              byte[] chunk = ReadAdress(currentPtr' 4' out readBytes);                              currentPtr = (IntPtr) BitConverter.ToInt32(chunk' 0);                          }                      else                          result = currentPtr + pointer;                  }
Magic Number,ffxivlib,MemoryReader,C:\repos\sruon_ffxivlib\MemoryReader.cs,CreateStructFromPointer,The following statement contains a magic number: byte[] pointer = ReadAdress(address' 4' out outres);
Magic Number,ffxivlib,MovementHelper,C:\repos\sruon_ffxivlib\MovementHelper.cs,DistanceTo,The following statement contains a magic number: return                  Math.Sqrt(Math.Pow((_player.Structure.X - x)' 2) + Math.Pow((_player.Structure.Y - y)' 2) +                            Math.Pow((z - _player.Structure.Z)' 2));
Magic Number,ffxivlib,MovementHelper,C:\repos\sruon_ffxivlib\MovementHelper.cs,DistanceTo,The following statement contains a magic number: return                  Math.Sqrt(Math.Pow((_player.Structure.X - x)' 2) + Math.Pow((_player.Structure.Y - y)' 2) +                            Math.Pow((z - _player.Structure.Z)' 2));
Magic Number,ffxivlib,MovementHelper,C:\repos\sruon_ffxivlib\MovementHelper.cs,DistanceTo,The following statement contains a magic number: return                  Math.Sqrt(Math.Pow((_player.Structure.X - x)' 2) + Math.Pow((_player.Structure.Y - y)' 2) +                            Math.Pow((z - _player.Structure.Z)' 2));
Magic Number,ffxivlib,MovementHelper,C:\repos\sruon_ffxivlib\MovementHelper.cs,XIVRadianToDegree,The following statement contains a magic number: return (float) ((angle + Math.PI)*(180.0/Math.PI));
Magic Number,ffxivlib,MovementHelper,C:\repos\sruon_ffxivlib\MovementHelper.cs,HeadingTo,The following statement contains a magic number: h = XIVRadianToDegree((float) h) + 90;
Magic Number,ffxivlib,MovementHelper,C:\repos\sruon_ffxivlib\MovementHelper.cs,HeadingTo,The following statement contains a magic number: return (float) h%360;
Magic Number,ffxivlib,MovementHelper,C:\repos\sruon_ffxivlib\MovementHelper.cs,WhereToHeadto,The following statement contains a magic number: if (pHeading < tHeading)                  {  				if (tHeading - pHeading < 180) {  					return _mov.MoveLeft;  				}  					return _mov.MoveRight;                  }
Magic Number,ffxivlib,MovementHelper,C:\repos\sruon_ffxivlib\MovementHelper.cs,WhereToHeadto,The following statement contains a magic number: if (pHeading > tHeading)                  {  				if (pHeading - tHeading < 180) {  					return _mov.MoveRight;  				}  				return _mov.MoveLeft;                  }
Magic Number,ffxivlib,MovementHelper,C:\repos\sruon_ffxivlib\MovementHelper.cs,GoToPos,The following statement contains a magic number: const uint headingTolerance = 20;
Magic Number,ffxivlib,MovementHelper,C:\repos\sruon_ffxivlib\MovementHelper.cs,GoToPos,The following statement contains a magic number: while (DistanceTo(x' y' z) > distanceTolerance)              {                  if (!_pause)                  {                      _player.Refresh();                      double heading = HeadingTo(x' y);                      double playerHeading = XIVRadianToDegree(_player.Structure.Heading);                      double herror = HeadingError(playerHeading' heading);                      while (herror > headingTolerance)                      {  						System.Action action = WhereToHeadto(heading' playerHeading);  						action();                          _player.Refresh();                          heading = HeadingTo(x' y);                          playerHeading = XIVRadianToDegree(_player.Structure.Heading);                          herror = HeadingError(playerHeading' heading);                      }                      if (!isRunning)                      {                          isRunning = true;  						_mov.MoveForward();                      }                  }                  else                  {                      Thread.Sleep(500);                  }              }
Magic Number,ffxivlib,SendKeyInput,C:\repos\sruon_ffxivlib\SendKeyInput.cs,SendReturnKey,The following statement contains a magic number: PostMessage(_ffxivWindow' WM_KEYDOWN' VKKeys.RETURN'                          (Int32) (MapVirtualKey((UInt16) VKKeys.RETURN' 0x00) << 16));
Magic Number,ffxivlib,SendKeyInput,C:\repos\sruon_ffxivlib\SendKeyInput.cs,SendReturnKey,The following statement contains a magic number: PostMessage(_ffxivWindow' WM_KEYUP' VKKeys.RETURN'                          (Int32) (MapVirtualKey((UInt16) VKKeys.RETURN' 0x00) << 16));
