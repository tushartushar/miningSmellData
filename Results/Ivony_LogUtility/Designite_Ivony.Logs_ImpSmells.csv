Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Ivony.Logs,TextFileLogger,C:\repos\Ivony_LogUtility\Ivony.Logs\TextFileLogger.cs,TextFileLogger,The method has 7 parameters. Parameters: logDirectory' filter' cycle' prefix' postfix' extension' encoding
Empty Catch Block,Ivony.Logs,IgnoreErrorLogger,C:\repos\Ivony_LogUtility\Ivony.Logs\LoggerWrapperExtensions.cs,LogEntry,The method has an empty catch block.
Empty Catch Block,Ivony.Logs,PipedLogger,C:\repos\Ivony_LogUtility\Ivony.Logs\PipedLogger.cs,LogEntry,The method has an empty catch block.
Magic Number,Ivony.Logs,TextFileWriter,C:\repos\Ivony_LogUtility\Ivony.Logs\TextFileWriter.cs,WriteText,The following statement contains a magic number: if ( flush )          Flush();          else        {          if ( flushTask == null )            CreateFlushTask( TimeSpan.FromSeconds( 10 ) );        }
Magic Number,Ivony.Logs,TextLogger,C:\repos\Ivony_LogUtility\Ivony.Logs\TextLogger.cs,GetTypePrefix,The following statement contains a magic number: if ( type == null || type.Serverity == 0 )          return "??";          else if ( type.Serverity <= 500 )          return " #";          else if ( type.Serverity <= LogType.Info.Serverity )          return "##";          else if ( type.Serverity <= LogType.ImportantInfo.Serverity )          return "#@";          else if ( type.Serverity <= LogType.Warning.Serverity )          return "#!";          else if ( type.Serverity <= LogType.Error.Serverity )          return "@!";          else if ( type.Serverity <= LogType.Exception.Serverity )          return "E!";          else if ( type.Serverity <= LogType.FatalError.Serverity )          return "F!";          else if ( type.Serverity <= LogType.CrashError.Serverity )          return "!!";          else          return "?!";
