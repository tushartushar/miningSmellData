Implementation smell,Namespace,Class,File,Method,Description
Long Method,Microsoft.Http2.Protocol,Http2Session,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Http2Session\Http2SessionDesc.cs,DispatchIncomingFrame,The method has 139 lines of code.
Long Method,Microsoft.Http2.Protocol,Http2Session,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Http2Session\Http2SessionDesc.cs,HandlePushPromiseFrame,The method has 121 lines of code.
Long Method,OpenSSL.SSL,SslCipher,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslCipher.cs,Initialize,The method has 181 lines of code.
Long Method,OpenSSL.SSL,SslStreamBase,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslStreamBase.cs,InternalReadCallback,The method has 120 lines of code.
Complex Method,Microsoft.Http2.Protocol,Http2Session,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Http2Session\Http2SessionDesc.cs,Http2Session,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Http2.Protocol,Http2Session,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Http2Session\Http2SessionDesc.cs,DispatchIncomingFrame,Cyclomatic complexity of the method is 20
Complex Method,Microsoft.Http2.Protocol,Http2Session,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Http2Session\Http2SessionDesc.cs,Close,Cyclomatic complexity of the method is 11
Complex Method,Microsoft.Http2.Protocol,Http2Session,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Http2Session\Http2SessionDesc.cs,HandleHeaders,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.Http2.Protocol,Http2Session,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Http2Session\Http2SessionDesc.cs,HandleContinuation,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Http2.Protocol,Http2Session,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Http2Session\Http2SessionDesc.cs,HandleSettingsFrame,Cyclomatic complexity of the method is 12
Complex Method,Microsoft.Http2.Protocol,Http2Session,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Http2Session\Http2SessionDesc.cs,HandlePushPromiseFrame,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Http2.Protocol.Compression.HeadersDeltaCompression,CompressionProcessor,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Compression\HeadersDeltaCompression\CompressionProcessor\CompressionProcessor.cs,GetIndex,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Http2.Protocol.Framing,FrameReader,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameReader.cs,GetFrameType,Cyclomatic complexity of the method is 11
Complex Method,Microsoft.Http2.Protocol.IO,WriteQueue,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\IO\WriteQueue.cs,PumpToStream,Cyclomatic complexity of the method is 9
Complex Method,OpenSSL.SSL,SslCipher,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslCipher.cs,Initialize,Cyclomatic complexity of the method is 33
Complex Method,OpenSSL.SSL,SslStreamBase,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslStreamBase.cs,InternalReadCallback,Cyclomatic complexity of the method is 12
Complex Method,OpenSSL.SSL,SslStreamBase,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslStreamBase.cs,BeginWrite,Cyclomatic complexity of the method is 8
Complex Method,OpenSSL.SSL,SslStreamBase,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslStreamBase.cs,GetCipherString,Cyclomatic complexity of the method is 9
Complex Method,OpenSSL.SSL,SslStreamServer,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslStreamServer.cs,InitializeServerContext,Cyclomatic complexity of the method is 9
Long Parameter List,Microsoft.Http2.Protocol,Http2Session,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Http2Session\Http2SessionDesc.cs,Http2Session,The method has 8 parameters. Parameters: stream' end' usePriorities' useFlowControl' isSecure' cancel' initialWindowSize' maxConcurrentStreams
Long Parameter List,Microsoft.Http2.Protocol,Http2Stream,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Http2Stream.cs,Http2Stream,The method has 5 parameters. Parameters: headers' id' writeQueue' flowCrtlManager' priority
Long Parameter List,Microsoft.Http2.Protocol.Framing,HeadersFrame,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\HeadersFrame.cs,HeadersFrame,The method has 5 parameters. Parameters: streamId' hasPadding' streamDependency' weight' exclusive
Long Parameter List,Microsoft.Http2.Protocol.Framing,PushPromiseFrame,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\PushPromiseFrame.cs,PushPromiseFrame,The method has 5 parameters. Parameters: streamId' promisedStreamId' hasPadding' isEndHeaders' headers
Long Parameter List,OpenSSL.Core,MemoryTracker,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\MemoryTracker.cs,OnMemoryLeak,The method has 5 parameters. Parameters: order' file' line' num_bytes' addr
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,CRYPTO_add_lock,The method has 5 parameters. Parameters: ptr' amount' type' file' line
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,CRYPTO_dbg_malloc,The method has 5 parameters. Parameters: addr' num' file' line' before_p
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,CRYPTO_dbg_realloc,The method has 6 parameters. Parameters: addr1' addr2' num' file' line' before_p
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,CRYPTO_set_mem_debug_functions,The method has 5 parameters. Parameters: m' r' f' so' go
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,X509_add1_ext_i2d,The method has 5 parameters. Parameters: x' nid' value' crit' flags
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,X509_NAME_add_entry_by_NID,The method has 7 parameters. Parameters: name' nid' type' bytes' len' loc' set
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,X509_NAME_add_entry_by_txt,The method has 7 parameters. Parameters: name' field' type' bytes' len' loc' set
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,DSA_generate_parameters_ex,The method has 7 parameters. Parameters: dsa' bits' seed' seed_len' counter_ret' h_ret' callback
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,DSA_sign,The method has 6 parameters. Parameters: type' dgst' dlen' sig' siglen' dsa
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,DSA_verify,The method has 6 parameters. Parameters: type' dgst' dgst_len' sigbuf' siglen' dsa
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,RSA_public_encrypt,The method has 5 parameters. Parameters: flen' from' to' rsa' padding
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,RSA_private_encrypt,The method has 5 parameters. Parameters: flen' from' to' rsa' padding
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,RSA_public_decrypt,The method has 5 parameters. Parameters: flen' from' to' rsa' padding
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,RSA_private_decrypt,The method has 5 parameters. Parameters: flen' from' to' rsa' padding
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,RSA_sign,The method has 6 parameters. Parameters: type' m' m_length' sigret' siglen' rsa
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,RSA_verify,The method has 6 parameters. Parameters: type' m' m_length' sigbuf' siglen' rsa
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,BN_div,The method has 5 parameters. Parameters: dv' rem' m' d' ctx
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,PKCS12_create,The method has 10 parameters. Parameters: pass' name' pkey' cert' ca' nid_key' nid_cert' iter' mac_iter' keytype
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,PKCS12_parse,The method has 5 parameters. Parameters: p12' pass' pkey' cert' ca
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,PEM_write_bio_PKCS8PrivateKey,The method has 7 parameters. Parameters: bp' evp_pkey' evp_cipher' kstr' klen' cb' user_data
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,PEM_X509_INFO_write_bio,The method has 7 parameters. Parameters: bp' xi' enc' kstr' klen' cd' u
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,PEM_write_bio_DSAPrivateKey,The method has 7 parameters. Parameters: bp' x' enc' kstr' klen' cb' u
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,PEM_write_bio_RSAPrivateKey,The method has 7 parameters. Parameters: bp' x' enc' kstr' klen' cb' u
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,PEM_write_bio_PrivateKey,The method has 7 parameters. Parameters: bp' x' enc' kstr' klen' cb' u
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,HMAC_Init_ex,The method has 5 parameters. Parameters: ctx' key' len' md' engine_impl
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,HMAC,The method has 7 parameters. Parameters: evp_md' key' key_len' d' n' md' md_len
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,EVP_CipherInit_ex,The method has 6 parameters. Parameters: ctx' type' impl' key' iv' enc
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,EVP_CipherUpdate,The method has 5 parameters. Parameters: ctx' outb' outl' inb' inl
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,EVP_OpenInit,The method has 6 parameters. Parameters: ctx' type' ek' ekl' iv' priv
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,EVP_SealInit,The method has 7 parameters. Parameters: ctx' type' ek' ekl' iv' pubk' npubk
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,EVP_DecryptUpdate,The method has 5 parameters. Parameters: ctx' output' outl' input' inl
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,EVP_EncryptUpdate,The method has 5 parameters. Parameters: ctx' output' outl' input' inl
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,EVP_BytesToKey,The method has 8 parameters. Parameters: type' md' salt' data' datal' count' key' iv
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,EVP_Digest,The method has 6 parameters. Parameters: data' count' md' size' type' impl
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,EC_GROUP_set_curve_GFp,The method has 5 parameters. Parameters: group' p' a' b' ctx
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,EC_GROUP_get_curve_GFp,The method has 5 parameters. Parameters: group' p' a' b' ctx
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,EC_GROUP_set_curve_GF2m,The method has 5 parameters. Parameters: group' p' a' b' ctx
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,EC_GROUP_get_curve_GF2m,The method has 5 parameters. Parameters: group' p' a' b' ctx
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,EC_POINT_set_Jprojective_coordinates_GFp,The method has 6 parameters. Parameters: group' p' x' y' z' ctx
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,EC_POINT_get_Jprojective_coordinates_GFp,The method has 6 parameters. Parameters: group' p' x' y' z' ctx
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,EC_POINT_set_affine_coordinates_GFp,The method has 5 parameters. Parameters: group' p' x' y' ctx
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,EC_POINT_get_affine_coordinates_GFp,The method has 5 parameters. Parameters: group' p' x' y' ctx
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,EC_POINT_set_compressed_coordinates_GFp,The method has 5 parameters. Parameters: group' p' x' y_bit' ctx
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,EC_POINT_set_affine_coordinates_GF2m,The method has 5 parameters. Parameters: group' p' x' y' ctx
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,EC_POINT_get_affine_coordinates_GF2m,The method has 5 parameters. Parameters: group' p' x' y' ctx
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,EC_POINT_set_compressed_coordinates_GF2m,The method has 5 parameters. Parameters: group' p' x' y_bit' ctx
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,EC_POINT_point2oct,The method has 6 parameters. Parameters: group' p' form' buf' len' ctx
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,EC_POINT_oct2point,The method has 5 parameters. Parameters: group' p' buf' len' ctx
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,EC_POINT_point2bn,The method has 5 parameters. Parameters: a' b' form' c' d
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,EC_POINT_add,The method has 5 parameters. Parameters: group' r' a' b' ctx
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,EC_POINTs_mul,The method has 7 parameters. Parameters: group' r' n' num' p' m' ctx
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,EC_POINT_mul,The method has 6 parameters. Parameters: group' r' n' q' m' ctx
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,EC_KEY_insert_key_method_data,The method has 5 parameters. Parameters: x' data' dup_func' free_func' clear_free_func
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,ECDSA_do_sign_ex,The method has 5 parameters. Parameters: dgst' dgstlen' kinv' rp' eckey
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,ECDSA_sign,The method has 6 parameters. Parameters: type' dgst' dgstlen' sig' siglen' eckey
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,ECDSA_sign_ex,The method has 8 parameters. Parameters: type' dgst' dgstlen' sig' siglen' kinv' rp' eckey
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,ECDSA_verify,The method has 6 parameters. Parameters: type' dgst' dgstlen' sig' siglen' eckey
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,ECDSA_get_ex_new_index,The method has 5 parameters. Parameters: argl' argp' new_func' dup_func' free_func
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,ECDH_compute_key,The method has 5 parameters. Parameters: pout' outlen' pub_key' ecdh' kdf
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,ECDH_get_ex_new_index,The method has 5 parameters. Parameters: argl' argp' new_func' dup_func' free_func
Long Parameter List,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,X509V3_set_ctx,The method has 6 parameters. Parameters: ctx' issuer' subject' req' crl' flags
Long Parameter List,OpenSSL.Crypto,CipherContext,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Crypto\Cipher.cs,Crypt,The method has 5 parameters. Parameters: input' key' iv' doEncrypt' padding
Long Parameter List,OpenSSL.Crypto,CipherContext,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Crypto\Cipher.cs,BytesToKey,The method has 5 parameters. Parameters: md' salt' data' count' iv
Long Parameter List,OpenSSL.Crypto,DSA,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Crypto\DSA.cs,DSA,The method has 5 parameters. Parameters: bits' seed' counter' callback' arg
Long Parameter List,OpenSSL.Extensions,AlpnExtension,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Extensions\Alpn.cs,CompareProtos,The method has 5 parameters. Parameters: protos1' offset1' protos2' offset2' count
Long Parameter List,OpenSSL.Extensions,AlpnExtension,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Extensions\Alpn.cs,AlpnCb,The method has 6 parameters. Parameters: ssl' selProto' selProtoLen' inProtos' inProtosLen' arg
Long Parameter List,OpenSSL.SSL,SslStream,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslStream.cs,BeginRead,The method has 5 parameters. Parameters: buffer' offset' count' asyncCallback' asyncState
Long Parameter List,OpenSSL.SSL,SslStream,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslStream.cs,BeginWrite,The method has 5 parameters. Parameters: buffer' offset' count' asyncCallback' asyncState
Long Parameter List,OpenSSL.SSL,SslStream,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslStream.cs,AuthenticateAsClient,The method has 6 parameters. Parameters: targetHost' certificates' caCertificates' enabledSslProtocols' sslStrength' checkCertificateRevocation
Long Parameter List,OpenSSL.SSL,SslStream,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslStream.cs,BeginAuthenticateAsClient,The method has 8 parameters. Parameters: targetHost' clientCertificates' caCertificates' enabledSslProtocols' sslStrength' checkCertificateRevocation' asyncCallback' asyncState
Long Parameter List,OpenSSL.SSL,SslStream,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslStream.cs,AuthenticateAsServer,The method has 6 parameters. Parameters: serverCertificate' clientCertificateRequired' caCertificates' enabledSslProtocols' sslStrength' checkCertificateRevocation
Long Parameter List,OpenSSL.SSL,SslStream,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslStream.cs,BeginAuthenticateAsServer,The method has 8 parameters. Parameters: serverCertificate' clientCertificateRequired' caCerts' enabledSslProtocols' sslStrength' checkCertificateRevocation' asyncCallback' asyncState
Long Parameter List,OpenSSL.SSL,SslStreamBase,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslStreamBase.cs,BeginRead,The method has 5 parameters. Parameters: buffer' offset' count' asyncCallback' asyncState
Long Parameter List,OpenSSL.SSL,SslStreamBase,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslStreamBase.cs,BeginWrite,The method has 5 parameters. Parameters: buffer' offset' count' asyncCallback' asyncState
Long Parameter List,OpenSSL.SSL,InternalAsyncResult,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslStreamBase.cs,InternalAsyncResult,The method has 7 parameters. Parameters: userCallback' userState' buffer' offset' count' isWriteOperation' continueAfterHandshake
Long Parameter List,OpenSSL.SSL,SslStreamClient,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslStreamClient.cs,SslStreamClient,The method has 10 parameters. Parameters: stream' ownStream' targetHost' clientCertificates' caCertificates' enabledSslProtocols' sslStrength' checkCertificateRevocationStatus' remoteCallback' localCallback
Long Parameter List,OpenSSL.SSL,SslStreamServer,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslStreamServer.cs,SslStreamServer,The method has 9 parameters. Parameters: stream' ownStream' serverCertificate' clientCertificateRequired' caCerts' enabledSslProtocols' sslStrength' checkCertificateRevocation' remote_callback
Long Parameter List,OpenSSL.SSL,SslStreamServer,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslStreamServer.cs,InitializeServerContext,The method has 6 parameters. Parameters: serverCertificate' clientCertificateRequired' caCerts' enabledSslProtocols' sslStrength' checkCertificateRevocation
Long Parameter List,OpenSSL.X509,PKCS12,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\X509\PKCS12.cs,PKCS12,The method has 9 parameters. Parameters: password' name' key' cert' ca' keyPbe' certPbe' iterations' keyType
Long Parameter List,OpenSSL.X509,PKCS12,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\X509\PKCS12.cs,Create,The method has 9 parameters. Parameters: password' name' key' cert' ca' keyPbe' certPbe' iterations' keyType
Long Parameter List,OpenSSL.X509,X509Certificate,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\X509\X509Certificate.cs,X509Certificate,The method has 6 parameters. Parameters: serial' subject' issuer' pubkey' start' end
Long Parameter List,OpenSSL.X509,X509CertificateAuthority,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\X509\X509CertificateAuthority.cs,SelfSigned,The method has 5 parameters. Parameters: cfg' seq' subject' start' validity
Long Parameter List,OpenSSL.X509,X509CertificateAuthority,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\X509\X509CertificateAuthority.cs,SelfSigned,The method has 7 parameters. Parameters: cfg' seq' key' digest' subject' start' validity
Long Parameter List,OpenSSL.X509,X509CertificateAuthority,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\X509\X509CertificateAuthority.cs,SelfSigned,The method has 7 parameters. Parameters: seq' key' digest' subject' start' validity' extensions
Long Parameter List,OpenSSL.X509,X509Extension,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\X509\X509Extension.cs,X509Extension,The method has 5 parameters. Parameters: issuer' subject' name' critical' value
Long Parameter List,Microsoft.Http1.Protocol,Http11Helper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Microsoft.Http2.Owin.Server\Adapters\Http11Helper.cs,SendResponse,The method has 5 parameters. Parameters: stream' data' statusCode' headers' closeConnection
Long Parameter List,Microsoft.Http2.Owin.Server.Adapters,Http11ProtocolOwinAdapter,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Microsoft.Http2.Owin.Server\Adapters\Http11OwinMessageHandler.cs,CreateOwinEnvironment,The method has 7 parameters. Parameters: method' scheme' pathBase' path' headers' queryString' requestBody
Long Parameter List,Microsoft.Http2.Owin.Server.Adapters,Http2OwinMessageHandler,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Microsoft.Http2.Owin.Server\Adapters\Http2OwinMessageHandler.cs,Http2OwinMessageHandler,The method has 5 parameters. Parameters: stream' end' isSecure' next' cancel
Long Parameter List,Microsoft.Http2.Push.Bing.BingHelpers,BingRequestProcessor,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Microsoft.Http2.PushMiddleware\Bing\BingHelpers\BingHelper.cs,GetTiles,The method has 5 parameters. Parameters: lat' lon' level' w' h
Long Parameter List,Microsoft.Http2.Push.Bing.BingHelpers,Tile,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Microsoft.Http2.PushMiddleware\Bing\BingHelpers\Tile.cs,Tile,The method has 5 parameters. Parameters: latitude' longitude' xStartPixel' yStartPixel' level
Long Parameter List,Microsoft.Http2.Push.Bing.BingHelpers,TileSystem,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Microsoft.Http2.PushMiddleware\Bing\BingHelpers\TileSystem.cs,LatLongToPixelXy,The method has 5 parameters. Parameters: latitude' longitude' levelOfDetail' pixelX' pixelY
Long Parameter List,Microsoft.Http2.Push.Bing.BingHelpers,TileSystem,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Microsoft.Http2.PushMiddleware\Bing\BingHelpers\TileSystem.cs,PixelXyToLatLong,The method has 5 parameters. Parameters: pixelX' pixelY' levelOfDetail' latitude' longitude
Long Parameter List,Http2.TestClient.Handshake,UpgradeHandshaker,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.TestClient\Handshake\UpgradeHandshaker.cs,TryFindRangeMatch,The method has 5 parameters. Parameters: buffer' offset' limit' matchSequence' matchIndex
Long Parameter List,Client.IO,FileHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.TestClient\IO\FileHelper.cs,SaveToFile,The method has 5 parameters. Parameters: data' offset' count' path' append
Long Parameter List,Microsoft.Http2.Owin.Server,HttpConnectingClient,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Microsoft.Http2.Owin.Server\HttpConnectingClient.cs,HttpConnectingClient,The method has 7 parameters. Parameters: server' next' cert' isSecure' useHandshake' usePriorities' useFlowControl
Long Identifier,Microsoft.Http2.Protocol,Constants,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Constants.cs,,The length of the parameter InitialFlowControlOptionsValue is 30.
Long Identifier,Microsoft.Http2.Protocol.Compression.HeadersDeltaCompression,CompressionProcessor,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Compression\HeadersDeltaCompression\CompressionProcessor\CompressionProcessor.cs,,The length of the parameter _isSettingHeaderTableSizeReceived is 33.
Long Identifier,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,,The length of the parameter SSL_CTRL_SET_TLSEXT_SERVERNAME_CB is 33.
Long Identifier,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,,The length of the parameter SSL_CTRL_SET_TLSEXT_SERVERNAME_ARG is 34.
Long Identifier,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,,The length of the parameter CRYPTO_locking_callback_delegate is 32.
Long Identifier,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,,The length of the parameter SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG is 39.
Long Identifier,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,,The length of the parameter SSL_OP_SSLREF2_REUSE_CERT_TYPE_BUG is 34.
Long Identifier,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,,The length of the parameter SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER is 33.
Long Identifier,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,,The length of the parameter SSL_OP_SSLEAY_080_CLIENT_DH_BUG is 31.
Long Identifier,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,,The length of the parameter SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS is 34.
Long Identifier,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,,The length of the parameter SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION is 45.
Long Identifier,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,,The length of the parameter SSL_OP_CIPHER_SERVER_PREFERENCE is 31.
Long Identifier,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,,The length of the parameter SSL_OP_NETSCAPE_DEMO_CIPHER_CHANGE_BUG is 38.
Long Identifier,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,,The length of the parameter SSL_MODE_ACCEPT_MOVING_WRITE_BUFFER is 35.
Long Identifier,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,,The length of the parameter SSL_VERIFY_FAIL_IF_NO_PEER_CERT is 31.
Long Identifier,OpenSSL.SSL,SslStream,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslStream.cs,,The length of the parameter remoteCertificateValidationCallback is 35.
Long Identifier,OpenSSL.SSL,SslStream,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslStream.cs,,The length of the parameter localCertificateSelectionCallback is 33.
Long Identifier,OpenSSL.SSL,SslStreamBase,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslStreamBase.cs,,The length of the parameter localCertificateSelectionCallback is 33.
Long Identifier,OpenSSL.SSL,SslStreamBase,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslStreamBase.cs,,The length of the parameter remoteCertificateSelectionCallback is 34.
Long Identifier,OpenSSL.SSL,SslStreamBase,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslStreamBase.cs,,The length of the parameter checkCertificateRevocationStatus is 32.
Long Identifier,OpenSSL.SSL,SslStreamClient,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslStreamClient.cs,SslStreamClient,The length of the parameter checkCertificateRevocationStatus is 32.
Long Identifier,OpenSSL.SSL,SslStreamClient,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslStreamClient.cs,,The length of the parameter internalCertificateSelectionCallback is 36.
Long Identifier,OpenSSL.SSL,SSL_CTX,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SSL_CTX.cs,,The length of the parameter stats_sess_connect_renegotiate is 30.
Long Identifier,OpenSSL.SSL,SSL_CTX,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SSL_CTX.cs,,The length of the parameter default_passwd_callback_userdata is 32.
Long Identifier,OpenSSL.SSL,SSL_CTX,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SSL_CTX.cs,,The length of the parameter tlsext_opaque_prf_input_callback is 32.
Long Identifier,OpenSSL.SSL,SSL_CTX,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SSL_CTX.cs,,The length of the parameter tlsext_opaque_prf_input_callback_arg is 36.
Long Identifier,OpenSSL.SSL,SSL_CTX,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SSL_CTX.cs,,The length of the parameter SRP_give_srp_client_pwd_callback is 32.
Long Statement,Microsoft.Http2.Protocol,Http2Session,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Http2Session\Http2SessionDesc.cs,GetSessionHeaderAndVerifyIt,The length of the statement  "                throw new TimeoutException(String.Format("Session header was not received in timeout {0}"' incomingClient.ReadTimeout));" is 120.
Long Statement,Microsoft.Http2.Protocol,Http2Session,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Http2Session\Http2SessionDesc.cs,HandleWindowUpdateFrame,The length of the statement  "                throw new ProtocolError(ResetStatusCode.FlowControlError' String.Format("Incorrect window update delta : {0}"' windowUpdateFrame.Delta));" is 137.
Long Statement,OpenSSL.Core,Asn1DateTime,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Asn1DateTime.cs,AsnTimeToDateTime,The length of the statement  "			return DateTime.ParseExact(str' fmts' new DateTimeFormatInfo()' DateTimeStyles.AssumeUniversal | DateTimeStyles.AdjustToUniversal);" is 131.
Long Statement,OpenSSL.Crypto,CryptoKey,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Crypto\CryptoKey.cs,WritePrivateKey,The length of the statement  "			Native.ExpectSuccess(Native.PEM_write_bio_PKCS8PrivateKey(bp.Handle' this.ptr' cipher.Handle' IntPtr.Zero' 0' thunk.Callback' IntPtr.Zero));" is 140.
Long Statement,OpenSSL.Crypto,DSA,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Crypto\DSA.cs,FromPrivateKey,The length of the statement  "			return new DSA(Native.ExpectNonNull(Native.PEM_read_bio_DSAPrivateKey(bio.Handle' IntPtr.Zero' null' IntPtr.Zero))' true);" is 122.
Long Statement,OpenSSL.SSL,SslStream,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslStream.cs,AuthenticateAsClient,The length of the statement  "			EndAuthenticateAsClient(BeginAuthenticateAsClient(targetHost' certificates' caCertificates' enabledSslProtocols' sslStrength' checkCertificateRevocation' null' null));" is 167.
Long Statement,OpenSSL.SSL,SslStream,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslStream.cs,BeginAuthenticateAsClient,The length of the statement  "            return BeginAuthenticateAsClient(targetHost' null' null' SslProtocols.Tls' SslStrength.All' false' asyncCallback' asyncState);" is 126.
Long Statement,OpenSSL.SSL,SslStream,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslStream.cs,BeginAuthenticateAsClient,The length of the statement  "			var client_stream = new SslStreamClient(InnerStream' false' targetHost' clientCertificates' caCertificates' enabledSslProtocols' sslStrength' checkCertificateRevocation' remoteCertificateValidationCallback' localCertificateSelectionCallback);" is 242.
Long Statement,OpenSSL.SSL,SslStream,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslStream.cs,AuthenticateAsServer,The length of the statement  "			EndAuthenticateAsServer(BeginAuthenticateAsServer(serverCertificate' clientCertificateRequired' caCertificates' enabledSslProtocols' sslStrength' checkCertificateRevocation' null' null));" is 187.
Long Statement,OpenSSL.SSL,SslStream,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslStream.cs,BeginAuthenticateAsServer,The length of the statement  "            return BeginAuthenticateAsServer(serverCertificate' false' null' SslProtocols.Tls' SslStrength.All' false' asyncCallback' asyncState);" is 134.
Long Statement,OpenSSL.SSL,SslStream,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslStream.cs,BeginAuthenticateAsServer,The length of the statement  "			var server_stream = new SslStreamServer(InnerStream' false' serverCertificate' clientCertificateRequired' caCerts' enabledSslProtocols' sslStrength' checkCertificateRevocation' remoteCertificateValidationCallback);" is 214.
Long Statement,OpenSSL.SSL,SslStreamBase,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslStreamBase.cs,BeginRead,The length of the statement  "		    InternalAsyncResult internalAsyncResult = new InternalAsyncResult(asyncCallback' asyncState' buffer' offset' count' false' proceedAfterHandshake);" is 146.
Long Statement,OpenSSL.SSL,SslStreamBase,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslStreamBase.cs,BeginWrite,The length of the statement  "		    InternalAsyncResult asyncResult = new InternalAsyncResult(asyncCallback' asyncState' buffer' offset' count' true' proceedAfterHandshake);" is 137.
Long Statement,OpenSSL.SSL,SslStreamBase,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslStreamBase.cs,BeginHandshake,The length of the statement  "			InternalAsyncResult handshakeAsyncResult = new InternalAsyncResult(new AsyncCallback(AsyncHandshakeComplete)' readwriteAsyncResult' null' 0' 0' readwriteAsyncResult.IsWriteOperation' readwriteAsyncResult.ContinueAfterHandshake);" is 228.
Long Statement,OpenSSL.SSL,SslStreamClient,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslStreamClient.cs,InitializeClientContext,The length of the statement  "            sslContext = new SslContext(SslMethod.TLSv12_client_method' ConnectionEnd.Client' true' new[] { Protocols.Http2' Protocols.Http1});" is 131.
Long Statement,OpenSSL.SSL,SslStreamClient,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslStreamClient.cs,InitializeClientContext,The length of the statement  "				sslContext.SetVerify(VerifyMode.SSL_VERIFY_PEER | VerifyMode.SSL_VERIFY_FAIL_IF_NO_PEER_CERT' remoteCertificateSelectionCallback);" is 130.
Long Statement,OpenSSL.SSL,SslStreamClient,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslStreamClient.cs,InternalClientCertificateSelectionCallback,The length of the statement  "				X509Certificate cert = localCertificateSelectionCallback(this' targetHost' clientCertificates' ssl.GetPeerCertificate()' strIssuers);" is 133.
Long Statement,OpenSSL.SSL,SslStreamServer,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslStreamServer.cs,ProcessHandshake,The length of the statement  "            if (lastError == SslError.SSL_ERROR_WANT_READ || lastError == SslError.SSL_ERROR_WANT_WRITE || lastError == SslError.SSL_ERROR_NONE)" is 132.
Long Statement,OpenSSL.SSL,SslStreamServer,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslStreamServer.cs,InitializeServerContext,The length of the statement  "            sslContext = new SslContext(SslMethod.TLSv12_server_method' ConnectionEnd.Server' true' new[] { Protocols.Http2' Protocols.Http1 });" is 132.
Long Statement,OpenSSL.SSL,SslStreamServer,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslStreamServer.cs,InitializeServerContext,The length of the statement  "                sslContext.SetVerify(VerifyMode.SSL_VERIFY_PEER | VerifyMode.SSL_VERIFY_FAIL_IF_NO_PEER_CERT' remoteCertificateSelectionCallback);" is 130.
Long Statement,OpenSSL.SSL,SslStreamServer,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslStreamServer.cs,InitializeServerContext,The length of the statement  "            sslContext.SetSessionIdContext(Encoding.ASCII.GetBytes("AppDomainHost: UnitTests12345678"/*AppDomain.CurrentDomain.FriendlyName*/));" is 132.
Long Statement,Microsoft.Http1.Protocol,Http11Helper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Microsoft.Http2.Owin.Server\Adapters\Http11Helper.cs,SendResponse,The length of the statement  "            headersPack = headers.Aggregate(headersPack' (current' header) => current + (header.Key + ": " + String.Join("'"' header.Value) + "\r\n")) + "\r\n";" is 148.
Long Statement,Microsoft.Http2.Owin.Server.Adapters,Http11ProtocolOwinAdapter,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Microsoft.Http2.Owin.Server\Adapters\Http11OwinMessageHandler.cs,EndResponse,The length of the statement  "            int statusCode = (ex is NotSupportedException) ? StatusCode.Code501NotImplemented : StatusCode.Code500InternalServerError;" is 122.
Long Statement,Microsoft.Http2.Owin.Server.Adapters,Http2OwinMessageContext,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Microsoft.Http2.Owin.Server\Adapters\Http2OwinMessageContext.cs,PopulateEnvironment,The length of the statement  "            var headersAsDict = headers.ToDictionary(header => header.Key' header => new[] { header.Value }' StringComparer.OrdinalIgnoreCase);" is 131.
Long Statement,Microsoft.Http2.Owin.Server.Adapters,Http2OwinMessageContext,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Microsoft.Http2.Owin.Server\Adapters\Http2OwinMessageContext.cs,PopulateEnvironment,The length of the statement  "            owinRequest.Scheme = headers.GetValue(CommonHeaders.Scheme) == Uri.UriSchemeHttp ? Uri.UriSchemeHttp : Uri.UriSchemeHttps;" is 122.
Long Statement,Microsoft.Http2.Owin.Server.Adapters,Http2OwinMessageContext,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Microsoft.Http2.Owin.Server\Adapters\Http2OwinMessageContext.cs,SendHeaders,The length of the statement  "                    new KeyValuePair<string' string>(CommonHeaders.Status' _owinContext.Response.StatusCode.ToString(CultureInfo.InvariantCulture))" is 127.
Long Statement,Microsoft.Http2.Push.Bing.BingHelpers,BingRequestProcessor,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Microsoft.Http2.PushMiddleware\Bing\BingHelpers\BingHelper.cs,GetSoapUrl,The length of the statement  "            return String.Format("http://ak.dynamic.t{0}.tiles.virtualearth.net/comp/ch/{1}?mkt=ru-ru&it=G'VE'BX'L'LA&shading=hill&og=33&n=z"'" is 130.
Long Statement,Microsoft.Http2.BingPushMiddleware,BingPushMiddleware,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Microsoft.Http2.PushMiddleware\Bing\BingPushMiddleware.cs,Push,The length of the statement  "            // If-Match & If-None-Match are multi-value so the client could send e-tags for the primary resource and referenced resources." is 126.
Long Statement,Microsoft.Http2.BingPushMiddleware,BingPushMiddleware,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Microsoft.Http2.PushMiddleware\Bing\BingPushMiddleware.cs,Push,The length of the statement  "            // If-Modified-Since and If-Unmodified-Since are single value' so it may not make sense to apply them for secondary resources." is 126.
Long Statement,Microsoft.Http2.Push,PushMiddleware,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Microsoft.Http2.PushMiddleware\StaticFiles\PushMiddleware.cs,Push,The length of the statement  "            headers[CommonHeaders.Method] = request.Method.ToUpper(); // TODO: Not all methods are allowed for push.  Don't push' or change to GET?" is 135.
Long Statement,Microsoft.Http2.Push,PushMiddleware,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Microsoft.Http2.PushMiddleware\StaticFiles\PushMiddleware.cs,Push,The length of the statement  "            // If-Match & If-None-Match are multi-value so the client could send e-tags for the primary resource and referenced resources." is 126.
Long Statement,Microsoft.Http2.Push,PushMiddleware,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Microsoft.Http2.PushMiddleware\StaticFiles\PushMiddleware.cs,Push,The length of the statement  "            // If-Modified-Since and If-Unmodified-Since are single value' so it may not make sense to apply them for secondary resources." is 126.
Long Statement,Http2.TestClient.Handshake,UpgradeHandshaker,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.TestClient\Handshake\UpgradeHandshaker.cs,Handshake,The length of the statement  "                builder.Append(String.Format("{0}: {1}' {2}\r\n"' CommonHeaders.Connection' CommonHeaders.Upgrade' CommonHeaders.Http2Settings));" is 129.
Long Statement,Http2.TestClient.Handshake,UpgradeHandshaker,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.TestClient\Handshake\UpgradeHandshaker.cs,InspectHanshake,The length of the statement  "                    response.IndexOf(String.Format("\r\n{0}: {1}' {2}\r\n"' CommonHeaders.Connection' CommonHeaders.Upgrade' CommonHeaders.Http2Settings)' " is 134.
Long Statement,Http2.Katana.Tests,Http11Tests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\Http11Tests.cs,CreateEnvironment,The length of the statement  "            var creator = typeof(Http11ProtocolOwinAdapter).GetMethod("CreateOwinEnvironment"' BindingFlags.NonPublic | BindingFlags.Static);" is 129.
Long Statement,Http2.Katana.Tests,Http11Tests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\Http11Tests.cs,CreateEnvironment,The length of the statement  "            var environment = (Dictionary<string' object>)creator.Invoke(null' new object[] { method' scheme' pathBase' path' requestHeaders' queryString' null });" is 151.
Long Statement,Microsoft.Http2.Protocol.Utils,Http2Logger,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Utils\Http2Logger.cs,LogError,The length of the statement  "                string outString = string.Format("[{0}] ThreadId:{1} ERROR: {2}"' DateTime.Now' Thread.CurrentThread.ManagedThreadId' errString);" is 129.
Long Statement,Microsoft.Http2.Protocol.Utils,Http2Logger,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Utils\Http2Logger.cs,LogDebug,The length of the statement  "                string outString = string.Format("[{0}] ThreadId:{1} DBG: {2}"' DateTime.Now' Thread.CurrentThread.ManagedThreadId' debugString);" is 129.
Long Statement,Microsoft.Http2.Owin.Server,HttpSocketServer,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Microsoft.Http2.Owin.Server\HttpSocketServer.cs,Listen,The length of the statement  "                    var client = new HttpConnectingClient(_server' _next.Invoke' _serverCert' _isSecure' _useHandshake' _usePriorities' _useFlowControl);" is 133.
Complex Conditional,Microsoft.Http2.Protocol,ForbiddenHeaders,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\ForbiddenHeaders.cs,HasForbiddenHeader,The conditional expression  "header.Key.Equals(Connection' StringComparison.OrdinalIgnoreCase)                     || header.Key.Equals(KeepAlive' StringComparison.OrdinalIgnoreCase)                     || header.Key.Equals(ProxyConnection' StringComparison.OrdinalIgnoreCase)                     || header.Key.Equals(TE' StringComparison.OrdinalIgnoreCase)                     || header.Key.Equals(TransferEncoding' StringComparison.OrdinalIgnoreCase)                     || header.Key.Equals(Upgrade' StringComparison.OrdinalIgnoreCase)"  is complex.
Complex Conditional,Microsoft.Http2.Protocol,Http2Session,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Http2Session\Http2SessionDesc.cs,HandleWindowUpdateFrame,The conditional expression  "!(stream.Opened || stream.HalfClosedRemote || stream.HalfClosedLocal || stream.Closed)"  is complex.
Complex Conditional,Microsoft.Http2.Protocol,Http2Session,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Http2Session\Http2SessionDesc.cs,HandlePushPromiseFrame,The conditional expression  "frame.StreamId % 2 == 0                 || frame.PromisedStreamId == 0                 || (frame.PromisedStreamId % 2) != 0                 || frame.PromisedStreamId < _lastPromisedId                 || !((StreamDictionary[frame.StreamId].Opened || StreamDictionary[frame.StreamId].HalfClosedLocal))"  is complex.
Complex Conditional,Microsoft.Http2.Protocol.Framing,HeadersSequence,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\HeadersSequence.cs,AddHeaders,The conditional expression  "(newFrame is HeadersFrame && newFrame.IsEndHeaders)                 || (newFrame is ContinuationFrame && newFrame.IsEndHeaders)                 || newFrame is PushPromiseFrame && (newFrame as PushPromiseFrame).IsEndHeaders"  is complex.
Complex Conditional,Http2.TestClient.Handshake,UpgradeHandshaker,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.TestClient\Handshake\UpgradeHandshaker.cs,UpgradeHandshaker,The conditional expression  "handshakeEnvironment.ContainsKey(CommonHeaders.Host) || (handshakeEnvironment[CommonHeaders.Host] is string)                     || handshakeEnvironment.ContainsKey(CommonHeaders.Version) || (handshakeEnvironment[CommonHeaders.Version] is string)"  is complex.
Virtual Method Call from Constructor,OpenSSL.Core,Base,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Base.cs,Base,The constructor "Base" calls a virtual method "OnNewHandle".
Virtual Method Call from Constructor,Microsoft.Http2.Owin.Server.Adapters,Http2OwinMessageHandler,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Microsoft.Http2.Owin.Server\Adapters\Http2OwinMessageHandler.cs,Http2OwinMessageHandler,The constructor "Http2OwinMessageHandler" calls a virtual method "Dispose".
Empty Catch Block,Microsoft.Http2.Protocol,Http2MessageHandler,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Http2MessageHandler.cs,StartSessionAsync,The method has an empty catch block.
Empty Catch Block,Microsoft.Http2.Owin.Server,HttpConnectingClient,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Microsoft.Http2.Owin.Server\HttpConnectingClient.cs,Accept,The method has an empty catch block.
Magic Number,Microsoft.Http2.Protocol,HeadersSequenceList,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\HeadersSequenceList.cs,HeadersSequenceList,The following statement contains a magic number: _collection = initialCollection != null ?                              new List<HeadersSequence>(initialCollection) :                              new List<HeadersSequence>(64);
Magic Number,Microsoft.Http2.Protocol,Http2Session,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Http2Session\Http2SessionDesc.cs,Http2Session,The following statement contains a magic number: _lastId = 3;
Magic Number,Microsoft.Http2.Protocol,Http2Session,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Http2Session\Http2SessionDesc.cs,GetNextId,The following statement contains a magic number: _lastId += 2;
Magic Number,Microsoft.Http2.Protocol,Http2Session,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Http2Session\Http2SessionDesc.cs,WriteSettings,The following statement contains a magic number: !isAck && !_settingsAckReceived.WaitOne(60000)
Magic Number,Microsoft.Http2.Protocol,Http2Session,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Http2Session\Http2SessionDesc.cs,Ping,The following statement contains a magic number: !_pingReceived.WaitOne(3000)
Magic Number,Microsoft.Http2.Protocol,Http2Session,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Http2Session\Http2SessionDesc.cs,Close,The following statement contains a magic number: goAwayDelay.WaitOne(500);
Magic Number,Microsoft.Http2.Protocol,Http2Session,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Http2Session\Http2SessionDesc.cs,HandlePushPromiseFrame,The following statement contains a magic number: frame.StreamId % 2 == 0                 || frame.PromisedStreamId == 0                 || (frame.PromisedStreamId % 2) != 0                 || frame.PromisedStreamId < _lastPromisedId                 || !((StreamDictionary[frame.StreamId].Opened || StreamDictionary[frame.StreamId].HalfClosedLocal))
Magic Number,Microsoft.Http2.Protocol,Http2Session,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Http2Session\Http2SessionDesc.cs,HandlePushPromiseFrame,The following statement contains a magic number: frame.StreamId % 2 == 0                 || frame.PromisedStreamId == 0                 || (frame.PromisedStreamId % 2) != 0                 || frame.PromisedStreamId < _lastPromisedId                 || !((StreamDictionary[frame.StreamId].Opened || StreamDictionary[frame.StreamId].HalfClosedLocal))
Magic Number,Microsoft.Http2.Protocol,StreamDictionary,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\StreamDictionary.cs,GetOpenedStreamsBy,The following statement contains a magic number: return FlowControlledStreams.Count(element => element.Key % 2 != 0) +                        NonFlowControlledStreams.Count(element => element.Key % 2 != 0);
Magic Number,Microsoft.Http2.Protocol,StreamDictionary,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\StreamDictionary.cs,GetOpenedStreamsBy,The following statement contains a magic number: return FlowControlledStreams.Count(element => element.Key % 2 != 0) +                        NonFlowControlledStreams.Count(element => element.Key % 2 != 0);
Magic Number,Microsoft.Http2.Protocol,StreamDictionary,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\StreamDictionary.cs,GetOpenedStreamsBy,The following statement contains a magic number: return FlowControlledStreams.Count(element => element.Key % 2 == 0) +                    NonFlowControlledStreams.Count(element => element.Key % 2 == 0);
Magic Number,Microsoft.Http2.Protocol,StreamDictionary,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\StreamDictionary.cs,GetOpenedStreamsBy,The following statement contains a magic number: return FlowControlledStreams.Count(element => element.Key % 2 == 0) +                    NonFlowControlledStreams.Count(element => element.Key % 2 == 0);
Magic Number,Microsoft.Http2.Protocol,HeadersList,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\HeadersList.cs,Add,The following statement contains a magic number: StoredHeadersSize += header.Key.Length + header.Value.Length + 32;
Magic Number,Microsoft.Http2.Protocol,HeadersList,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\HeadersList.cs,Remove,The following statement contains a magic number: StoredHeadersSize -= header.Key.Length + header.Value.Length + 32;
Magic Number,Microsoft.Http2.Protocol,HeadersList,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\HeadersList.cs,Insert,The following statement contains a magic number: StoredHeadersSize += header.Key.Length + header.Value.Length + 32;
Magic Number,Microsoft.Http2.Protocol,HeadersList,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\HeadersList.cs,RemoveAt,The following statement contains a magic number: StoredHeadersSize -= header.Key.Length + header.Value.Length + 32;
Magic Number,Microsoft.Http2.Protocol,HeadersList,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\HeadersList.cs,RemoveAll,The following statement contains a magic number: int toDeleteSize = predMatch.Sum(header => header.Key.Length + header.Value.Length + 32);
Magic Number,Microsoft.Http2.Protocol,Http2Stream,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Http2Stream.cs,Http2Stream,The following statement contains a magic number: _unshippedFrames = new Queue<DataFrame>(16);
Magic Number,Microsoft.Http2.Protocol,Http2Stream,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Http2Stream.cs,WritePushPromise,The following statement contains a magic number: Id % 2 != 0 && promisedId % 2 != 0
Magic Number,Microsoft.Http2.Protocol,Http2Stream,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Http2Stream.cs,WritePushPromise,The following statement contains a magic number: Id % 2 != 0 && promisedId % 2 != 0
Magic Number,Microsoft.Http2.Protocol.Compression.HeadersDeltaCompression,CompressionProcessor,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Compression\HeadersDeltaCompression\CompressionProcessor\CompressionProcessor.cs,CompressionProcessor,The following statement contains a magic number: _maxHeaderByteSize = 4096;
Magic Number,Microsoft.Http2.Protocol.Compression.HeadersDeltaCompression,CompressionProcessor,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Compression\HeadersDeltaCompression\CompressionProcessor\CompressionProcessor.cs,InsertToHeadersTable,The following statement contains a magic number: int headerLen = header.Key.Length + header.Value.Length + 32;
Magic Number,Microsoft.Http2.Protocol.Compression.HeadersDeltaCompression,CompressionProcessor,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Compression\HeadersDeltaCompression\CompressionProcessor\CompressionProcessor.cs,EncodeString,The following statement contains a magic number: const byte prefix = 7;
Magic Number,Microsoft.Http2.Protocol.Compression.HeadersDeltaCompression,CompressionProcessor,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Compression\HeadersDeltaCompression\CompressionProcessor\CompressionProcessor.cs,ProcessCookie,The following statement contains a magic number: toProcess.Add(new KeyValuePair<string' string>(CommonHeaders.Cookie'                                                                cookie.ToString(cookie.Length - 2' 2)));
Magic Number,Microsoft.Http2.Protocol.Compression.HeadersDeltaCompression,CompressionProcessor,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Compression\HeadersDeltaCompression\CompressionProcessor\CompressionProcessor.cs,ProcessCookie,The following statement contains a magic number: toProcess.Add(new KeyValuePair<string' string>(CommonHeaders.Cookie'                                                                cookie.ToString(cookie.Length - 2' 2)));
Magic Number,Microsoft.Http2.Protocol.Compression.Huffman,BinaryConverter,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Compression\HuffmanCompression\BinaryConverter.cs,ToBits,The following statement contains a magic number: var result = new bool[bytes.Length * 8];
Magic Number,Microsoft.Http2.Protocol.Compression.Huffman,BinaryConverter,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Compression\HuffmanCompression\BinaryConverter.cs,ToBits,The following statement contains a magic number: result[i*8 + j] = GetBit(bytes[i]' (byte)(7 - j));
Magic Number,Microsoft.Http2.Protocol.Compression.Huffman,BinaryConverter,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Compression\HuffmanCompression\BinaryConverter.cs,ToBits,The following statement contains a magic number: result[i*8 + j] = GetBit(bytes[i]' (byte)(7 - j));
Magic Number,Microsoft.Http2.Protocol.Compression.Huffman,BinaryConverter,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Compression\HuffmanCompression\BinaryConverter.cs,ToBits,The following statement contains a magic number: j < 8
Magic Number,Microsoft.Http2.Protocol.Compression.Huffman,BinaryConverter,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Compression\HuffmanCompression\BinaryConverter.cs,ToBytes,The following statement contains a magic number: var result = new byte[bools.Count % 8 == 0 ? bools.Count / 8 : bools.Count / 8 + 1];
Magic Number,Microsoft.Http2.Protocol.Compression.Huffman,BinaryConverter,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Compression\HuffmanCompression\BinaryConverter.cs,ToBytes,The following statement contains a magic number: var result = new byte[bools.Count % 8 == 0 ? bools.Count / 8 : bools.Count / 8 + 1];
Magic Number,Microsoft.Http2.Protocol.Compression.Huffman,BinaryConverter,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Compression\HuffmanCompression\BinaryConverter.cs,ToBytes,The following statement contains a magic number: var result = new byte[bools.Count % 8 == 0 ? bools.Count / 8 : bools.Count / 8 + 1];
Magic Number,Microsoft.Http2.Protocol.Compression.Huffman,BinaryConverter,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Compression\HuffmanCompression\BinaryConverter.cs,ToBytes,The following statement contains a magic number: byte count = 8;
Magic Number,Microsoft.Http2.Protocol.Compression.Huffman,BinaryConverter,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Compression\HuffmanCompression\BinaryConverter.cs,ToBytes,The following statement contains a magic number: count = roffset >= 8 ? (byte)8 : (byte)roffset;
Magic Number,Microsoft.Http2.Protocol.Compression.Huffman,BinaryConverter,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Compression\HuffmanCompression\BinaryConverter.cs,ToBytes,The following statement contains a magic number: count = roffset >= 8 ? (byte)8 : (byte)roffset;
Magic Number,Microsoft.Http2.Protocol.Compression.Huffman,BinaryConverter,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Compression\HuffmanCompression\BinaryConverter.cs,GetByte,The following statement contains a magic number: count > 8
Magic Number,Microsoft.Http2.Protocol.Compression.Huffman,BinaryConverter,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Compression\HuffmanCompression\BinaryConverter.cs,GetByte,The following statement contains a magic number: byte bitIndex = 7;
Magic Number,Microsoft.Http2.Protocol.Compression.Huffman,BinaryConverter,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Compression\HuffmanCompression\BinaryConverter.cs,GetBit,The following statement contains a magic number: pos > 7
Magic Number,Microsoft.Http2.Protocol.Compression.Huffman,BitTree,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Compression\HuffmanCompression\BitTree.cs,IsValidPadding,The following statement contains a magic number: symbolBits.Count >= 8
Magic Number,Microsoft.Http2.Protocol.Compression.Huffman,HuffmanCompressionProcessor,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Compression\HuffmanCompression\HuffmanCompressor.cs,Compress,The following statement contains a magic number: int temp = 8 - huffmanEncodedMessage.Count % 8;
Magic Number,Microsoft.Http2.Protocol.Compression.Huffman,HuffmanCompressionProcessor,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Compression\HuffmanCompression\HuffmanCompressor.cs,Compress,The following statement contains a magic number: int temp = 8 - huffmanEncodedMessage.Count % 8;
Magic Number,Microsoft.Http2.Protocol.Compression.Huffman,HuffmanCompressionProcessor,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Compression\HuffmanCompression\HuffmanCompressor.cs,Compress,The following statement contains a magic number: int numberOfBitsInPadding = temp == 8 ? 0 : temp;
Magic Number,Microsoft.Http2.Protocol.Framing,ContinuationFrame,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\ContinuationFrame.cs,ContinuationFrame,The following statement contains a magic number: var padLow = (byte) new Random().Next(1' 7);
Magic Number,Microsoft.Http2.Protocol.Framing,ContinuationFrame,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\ContinuationFrame.cs,ContinuationFrame,The following statement contains a magic number: int padLength = padHigh * 256 + padLow;
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,SetBit,The following statement contains a magic number: Contract.Assert(offset <= 7);
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,SetBit,The following statement contains a magic number: Contract.Assert(offset <= 7);
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,GetBit,The following statement contains a magic number: Contract.Assert(offset <= 7);
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,GetBit,The following statement contains a magic number: return (input >> offset) % 2 == 1;
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,GetHigh3BitsAt,The following statement contains a magic number: return ((0xE0 & buffer[offset]) >> 5);
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,SetHigh3BitsAt,The following statement contains a magic number: Contract.Assert(value >= 0 && value <= 7);
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,SetHigh3BitsAt,The following statement contains a magic number: byte upper3Bits = (byte)(value << 5);
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Get15BitsAt,The following statement contains a magic number: return (highByte << 8) | buffer[offset + 1];
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Set15BitsAt,The following statement contains a magic number: buffer[offset] |= (byte)((value >> 8) & 0x7F);
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Get16BitsAt,The following statement contains a magic number: return (buffer[offset] << 8) | buffer[offset + 1];
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Set16BitsAt,The following statement contains a magic number: buffer[offset] = (byte)(value >> 8);
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Get24BitsAt,The following statement contains a magic number: Contract.Assert(offset >= 0 && offset + 2 < buffer.Length);
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Get24BitsAt,The following statement contains a magic number: return (buffer[offset] << 16) | (buffer[offset + 1] << 8) | buffer[offset + 2];
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Get24BitsAt,The following statement contains a magic number: return (buffer[offset] << 16) | (buffer[offset + 1] << 8) | buffer[offset + 2];
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Get24BitsAt,The following statement contains a magic number: return (buffer[offset] << 16) | (buffer[offset + 1] << 8) | buffer[offset + 2];
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Set24BitsAt,The following statement contains a magic number: Contract.Assert(offset >= 0 && offset + 2 < buffer.Length);
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Set24BitsAt,The following statement contains a magic number: buffer[offset] = (byte)(value >> 16);
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Set24BitsAt,The following statement contains a magic number: buffer[offset + 1] = (byte)(value >> 8);
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Set24BitsAt,The following statement contains a magic number: buffer[offset + 2] = (byte)value;
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Get31BitsAt,The following statement contains a magic number: Contract.Assert(offset >= 0 && offset + 3 < buffer.Length);
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Get31BitsAt,The following statement contains a magic number: return (highByte << 24)                 | buffer[offset + 1] << 16                 | buffer[offset + 2] << 8                 | buffer[offset + 3];
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Get31BitsAt,The following statement contains a magic number: return (highByte << 24)                 | buffer[offset + 1] << 16                 | buffer[offset + 2] << 8                 | buffer[offset + 3];
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Get31BitsAt,The following statement contains a magic number: return (highByte << 24)                 | buffer[offset + 1] << 16                 | buffer[offset + 2] << 8                 | buffer[offset + 3];
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Get31BitsAt,The following statement contains a magic number: return (highByte << 24)                 | buffer[offset + 1] << 16                 | buffer[offset + 2] << 8                 | buffer[offset + 3];
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Get31BitsAt,The following statement contains a magic number: return (highByte << 24)                 | buffer[offset + 1] << 16                 | buffer[offset + 2] << 8                 | buffer[offset + 3];
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Set31BitsAt,The following statement contains a magic number: Contract.Assert(offset >= 0 && offset + 3 < buffer.Length);
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Set31BitsAt,The following statement contains a magic number: buffer[offset] |= (byte)((value >> 24) & 0x7F);
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Set31BitsAt,The following statement contains a magic number: buffer[offset + 1] = (byte)(value >> 16);
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Set31BitsAt,The following statement contains a magic number: buffer[offset + 2] = (byte)(value >> 8);
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Set31BitsAt,The following statement contains a magic number: buffer[offset + 2] = (byte)(value >> 8);
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Set31BitsAt,The following statement contains a magic number: buffer[offset + 3] = (byte)value;
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Get32BitsAt,The following statement contains a magic number: Contract.Assert(offset >= 0 && offset + 3 < buffer.Length);
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Get32BitsAt,The following statement contains a magic number: return (buffer[offset] << 24)                 | buffer[offset + 1] << 16                 | buffer[offset + 2] << 8                 | buffer[offset + 3];
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Get32BitsAt,The following statement contains a magic number: return (buffer[offset] << 24)                 | buffer[offset + 1] << 16                 | buffer[offset + 2] << 8                 | buffer[offset + 3];
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Get32BitsAt,The following statement contains a magic number: return (buffer[offset] << 24)                 | buffer[offset + 1] << 16                 | buffer[offset + 2] << 8                 | buffer[offset + 3];
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Get32BitsAt,The following statement contains a magic number: return (buffer[offset] << 24)                 | buffer[offset + 1] << 16                 | buffer[offset + 2] << 8                 | buffer[offset + 3];
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Get32BitsAt,The following statement contains a magic number: return (buffer[offset] << 24)                 | buffer[offset + 1] << 16                 | buffer[offset + 2] << 8                 | buffer[offset + 3];
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Set32BitsAt,The following statement contains a magic number: Contract.Assert(offset >= 0 && offset + 3 < buffer.Length);
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Set32BitsAt,The following statement contains a magic number: buffer[offset] = (byte)(value >> 24);
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Set32BitsAt,The following statement contains a magic number: buffer[offset + 1] = (byte)(value >> 16);
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Set32BitsAt,The following statement contains a magic number: buffer[offset + 2] = (byte)(value >> 8);
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Set32BitsAt,The following statement contains a magic number: buffer[offset + 2] = (byte)(value >> 8);
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Set32BitsAt,The following statement contains a magic number: buffer[offset + 3] = (byte)value;
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,SerializeHeaderBlock,The following statement contains a magic number: int encodedLength = 4 // 32 bit count of name value pairs                 + 8 * pairs.Count;
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,SerializeHeaderBlock,The following statement contains a magic number: int encodedLength = 4 // 32 bit count of name value pairs                 + 8 * pairs.Count;
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,SerializeHeaderBlock,The following statement contains a magic number: int offset = 4;
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,SerializeHeaderBlock,The following statement contains a magic number: offset += 4;
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,SerializeHeaderBlock,The following statement contains a magic number: offset += 4;
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,DeserializeHeaderBlock,The following statement contains a magic number: offset += 4;
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,DeserializeHeaderBlock,The following statement contains a magic number: offset += 4;
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,DeserializeHeaderBlock,The following statement contains a magic number: offset += 4;
Magic Number,Microsoft.Http2.Protocol.Framing,HeadersFrame,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\HeadersFrame.cs,HeadersFrame,The following statement contains a magic number: var padLow = (byte) new Random().Next(1' 7);
Magic Number,Microsoft.Http2.Protocol.Framing,PushPromiseFrame,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\PushPromiseFrame.cs,PushPromiseFrame,The following statement contains a magic number: var padLow = (byte)new Random().Next(1' 7);
Magic Number,Microsoft.Http2.Protocol.Framing,DataFrame,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\DataFrame.cs,DataFrame,The following statement contains a magic number: var padLow = (byte) new Random().Next(1' 7);
Magic Number,Microsoft.Http2.Protocol.Framing,DataFrame,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\DataFrame.cs,DataFrame,The following statement contains a magic number: int padLength = padHigh * 256 + padLow;
Magic Number,Microsoft.Http2.Protocol.IO,WriteQueue,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\IO\WriteQueue.cs,PumpToStream,The following statement contains a magic number: byte[] padding = new byte[paddingFrame.PadHigh * 256 + paddingFrame.PadLow];
Magic Number,OpenSSL.Core,Asn1DateTime,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Asn1DateTime.cs,DateTimeToTimeT,The following statement contains a magic number: DateTime dt1970 = new DateTime(1970' 1' 1' 0' 0' 0' 0);
Magic Number,OpenSSL.Core,Asn1DateTime,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Asn1DateTime.cs,DateTimeToTimeT,The following statement contains a magic number: long ticks = (value.Ticks - dt1970.Ticks) / 10000000L;
Magic Number,OpenSSL.Core,GeneratorThunk,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\BigNumber.cs,GeneratorThunk,The following statement contains a magic number: this.gencb.ver = 2;
Magic Number,OpenSSL.Core,BIO,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\BIO.cs,ReadString,The following statement contains a magic number: const int BLOCK_SIZE = 64;
Magic Number,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,Native,The following statement contains a magic number: byte[] seed = new byte[128];
Magic Number,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,BIO_get_md,The following statement contains a magic number: IntPtr ptr = Marshal.AllocHGlobal(4);
Magic Number,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,BIO_get_md_ctx,The following statement contains a magic number: IntPtr ptr = Marshal.AllocHGlobal(4);
Magic Number,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,PtrToStringAnsi,The following statement contains a magic number: i < 1024
Magic Number,OpenSSL.Core,Native,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Native.cs,PtrToStringAnsi,The following statement contains a magic number: len == 1024
Magic Number,OpenSSL.Core,Random,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Core\Random.cs,GetFilename,The following statement contains a magic number: byte[] buf = new byte[1024];
Magic Number,OpenSSL.Crypto,DSA,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Crypto\DSA.cs,DSA,The following statement contains a magic number: Native.ExpectSuccess(Native.DSA_generate_parameters_ex( 				this.ptr' 				512' 				null' 0' 				out this.counter' 				out this.h' 				null) 			);
Magic Number,OpenSSL.Crypto,MessageDigestContext,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Crypto\MessageDigest.cs,Sign,The following statement contains a magic number: ArraySegment<byte> bytes = bmd.ReadBytes(1024 * 4);
Magic Number,OpenSSL.Crypto,MessageDigestContext,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Crypto\MessageDigest.cs,Sign,The following statement contains a magic number: ArraySegment<byte> bytes = bmd.ReadBytes(1024 * 4);
Magic Number,OpenSSL.Crypto,MessageDigestContext,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Crypto\MessageDigest.cs,Verify,The following statement contains a magic number: ArraySegment<byte> bytes = bmd.ReadBytes(1024 * 4);
Magic Number,OpenSSL.Crypto,MessageDigestContext,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Crypto\MessageDigest.cs,Verify,The following statement contains a magic number: ArraySegment<byte> bytes = bmd.ReadBytes(1024 * 4);
Magic Number,OpenSSL.SSL,SslCipher,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslCipher.cs,ExportPrivateKeyLength,The following statement contains a magic number: return 512;
Magic Number,OpenSSL.SSL,SslCipher,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslCipher.cs,ExportPrivateKeyLength,The following statement contains a magic number: return 1024;
Magic Number,OpenSSL.SSL,SslCipher,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslCipher.cs,ExportKeyLength,The following statement contains a magic number: return 5;
Magic Number,OpenSSL.SSL,SslCipher,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslCipher.cs,Initialize,The following statement contains a magic number: switch (raw.algorithms & SSL_ENC_MASK) 			{ 				case SSL_DES: 					cipherAlgorithm = CipherAlgorithmType.Des; 					if (isExport && keyLength == 5) 					{ 						cipherStrength = 40; 					} 					else 					{ 						cipherStrength = 56; 					} 					break; 				case SSL_3DES: 					cipherAlgorithm = CipherAlgorithmType.TripleDes; 					cipherStrength = 168; 					break; 				case SSL_RC4: 					cipherAlgorithm = CipherAlgorithmType.Rc4; 					if (isExport) 					{ 						if (keyLength == 5) 						{ 							cipherStrength = 40; 						} 						else 						{ 							cipherStrength = 56; 						} 					} 					else 					{ 						if ((raw.algorithm2 & SSL2_CF_8_BYTE_ENC) == SSL2_CF_8_BYTE_ENC) 						{ 							cipherStrength = 64; 						} 						else 						{ 							cipherStrength = 128; 						} 					} 					break; 				case SSL_RC2: 					cipherAlgorithm = CipherAlgorithmType.Rc2; 					if (isExport) 					{ 						if (keyLength == 5) 						{ 							cipherStrength = 40; 						} 						else 						{ 							cipherStrength = 56; 						} 					} 					else 					{ 						cipherStrength = 128; 					} 					break; 				case SSL_IDEA: 					cipherAlgorithm = CipherAlgorithmType.Idea; 					cipherStrength = 128; 					break; 				case SSL_eFZA: 					cipherAlgorithm = CipherAlgorithmType.Fortezza; 					break; 				case SSL_eNULL: 					cipherAlgorithm = CipherAlgorithmType.None; 					break; 				case SSL_AES: 					switch (raw.strength_bits) 					{ 						case 128: cipherAlgorithm = CipherAlgorithmType.Aes128; break; 						case 192: cipherAlgorithm = CipherAlgorithmType.Aes192; break; 						case 256: cipherAlgorithm = CipherAlgorithmType.Aes256; break; 					} 					break; 				case SSL_CAMELLIA: 					switch (raw.strength_bits) 					{ 						case 128: cipherAlgorithm = CipherAlgorithmType.Camellia128; break; 						case 256: cipherAlgorithm = CipherAlgorithmType.Camellia256; break; 					} 					break; 				case SSL_SEED: 					cipherAlgorithm = CipherAlgorithmType.Seed; 					cipherStrength = 128; 					break; 			}
Magic Number,OpenSSL.SSL,SslCipher,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslCipher.cs,Initialize,The following statement contains a magic number: switch (raw.algorithms & SSL_ENC_MASK) 			{ 				case SSL_DES: 					cipherAlgorithm = CipherAlgorithmType.Des; 					if (isExport && keyLength == 5) 					{ 						cipherStrength = 40; 					} 					else 					{ 						cipherStrength = 56; 					} 					break; 				case SSL_3DES: 					cipherAlgorithm = CipherAlgorithmType.TripleDes; 					cipherStrength = 168; 					break; 				case SSL_RC4: 					cipherAlgorithm = CipherAlgorithmType.Rc4; 					if (isExport) 					{ 						if (keyLength == 5) 						{ 							cipherStrength = 40; 						} 						else 						{ 							cipherStrength = 56; 						} 					} 					else 					{ 						if ((raw.algorithm2 & SSL2_CF_8_BYTE_ENC) == SSL2_CF_8_BYTE_ENC) 						{ 							cipherStrength = 64; 						} 						else 						{ 							cipherStrength = 128; 						} 					} 					break; 				case SSL_RC2: 					cipherAlgorithm = CipherAlgorithmType.Rc2; 					if (isExport) 					{ 						if (keyLength == 5) 						{ 							cipherStrength = 40; 						} 						else 						{ 							cipherStrength = 56; 						} 					} 					else 					{ 						cipherStrength = 128; 					} 					break; 				case SSL_IDEA: 					cipherAlgorithm = CipherAlgorithmType.Idea; 					cipherStrength = 128; 					break; 				case SSL_eFZA: 					cipherAlgorithm = CipherAlgorithmType.Fortezza; 					break; 				case SSL_eNULL: 					cipherAlgorithm = CipherAlgorithmType.None; 					break; 				case SSL_AES: 					switch (raw.strength_bits) 					{ 						case 128: cipherAlgorithm = CipherAlgorithmType.Aes128; break; 						case 192: cipherAlgorithm = CipherAlgorithmType.Aes192; break; 						case 256: cipherAlgorithm = CipherAlgorithmType.Aes256; break; 					} 					break; 				case SSL_CAMELLIA: 					switch (raw.strength_bits) 					{ 						case 128: cipherAlgorithm = CipherAlgorithmType.Camellia128; break; 						case 256: cipherAlgorithm = CipherAlgorithmType.Camellia256; break; 					} 					break; 				case SSL_SEED: 					cipherAlgorithm = CipherAlgorithmType.Seed; 					cipherStrength = 128; 					break; 			}
Magic Number,OpenSSL.SSL,SslCipher,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslCipher.cs,Initialize,The following statement contains a magic number: switch (raw.algorithms & SSL_ENC_MASK) 			{ 				case SSL_DES: 					cipherAlgorithm = CipherAlgorithmType.Des; 					if (isExport && keyLength == 5) 					{ 						cipherStrength = 40; 					} 					else 					{ 						cipherStrength = 56; 					} 					break; 				case SSL_3DES: 					cipherAlgorithm = CipherAlgorithmType.TripleDes; 					cipherStrength = 168; 					break; 				case SSL_RC4: 					cipherAlgorithm = CipherAlgorithmType.Rc4; 					if (isExport) 					{ 						if (keyLength == 5) 						{ 							cipherStrength = 40; 						} 						else 						{ 							cipherStrength = 56; 						} 					} 					else 					{ 						if ((raw.algorithm2 & SSL2_CF_8_BYTE_ENC) == SSL2_CF_8_BYTE_ENC) 						{ 							cipherStrength = 64; 						} 						else 						{ 							cipherStrength = 128; 						} 					} 					break; 				case SSL_RC2: 					cipherAlgorithm = CipherAlgorithmType.Rc2; 					if (isExport) 					{ 						if (keyLength == 5) 						{ 							cipherStrength = 40; 						} 						else 						{ 							cipherStrength = 56; 						} 					} 					else 					{ 						cipherStrength = 128; 					} 					break; 				case SSL_IDEA: 					cipherAlgorithm = CipherAlgorithmType.Idea; 					cipherStrength = 128; 					break; 				case SSL_eFZA: 					cipherAlgorithm = CipherAlgorithmType.Fortezza; 					break; 				case SSL_eNULL: 					cipherAlgorithm = CipherAlgorithmType.None; 					break; 				case SSL_AES: 					switch (raw.strength_bits) 					{ 						case 128: cipherAlgorithm = CipherAlgorithmType.Aes128; break; 						case 192: cipherAlgorithm = CipherAlgorithmType.Aes192; break; 						case 256: cipherAlgorithm = CipherAlgorithmType.Aes256; break; 					} 					break; 				case SSL_CAMELLIA: 					switch (raw.strength_bits) 					{ 						case 128: cipherAlgorithm = CipherAlgorithmType.Camellia128; break; 						case 256: cipherAlgorithm = CipherAlgorithmType.Camellia256; break; 					} 					break; 				case SSL_SEED: 					cipherAlgorithm = CipherAlgorithmType.Seed; 					cipherStrength = 128; 					break; 			}
Magic Number,OpenSSL.SSL,SslCipher,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslCipher.cs,Initialize,The following statement contains a magic number: switch (raw.algorithms & SSL_ENC_MASK) 			{ 				case SSL_DES: 					cipherAlgorithm = CipherAlgorithmType.Des; 					if (isExport && keyLength == 5) 					{ 						cipherStrength = 40; 					} 					else 					{ 						cipherStrength = 56; 					} 					break; 				case SSL_3DES: 					cipherAlgorithm = CipherAlgorithmType.TripleDes; 					cipherStrength = 168; 					break; 				case SSL_RC4: 					cipherAlgorithm = CipherAlgorithmType.Rc4; 					if (isExport) 					{ 						if (keyLength == 5) 						{ 							cipherStrength = 40; 						} 						else 						{ 							cipherStrength = 56; 						} 					} 					else 					{ 						if ((raw.algorithm2 & SSL2_CF_8_BYTE_ENC) == SSL2_CF_8_BYTE_ENC) 						{ 							cipherStrength = 64; 						} 						else 						{ 							cipherStrength = 128; 						} 					} 					break; 				case SSL_RC2: 					cipherAlgorithm = CipherAlgorithmType.Rc2; 					if (isExport) 					{ 						if (keyLength == 5) 						{ 							cipherStrength = 40; 						} 						else 						{ 							cipherStrength = 56; 						} 					} 					else 					{ 						cipherStrength = 128; 					} 					break; 				case SSL_IDEA: 					cipherAlgorithm = CipherAlgorithmType.Idea; 					cipherStrength = 128; 					break; 				case SSL_eFZA: 					cipherAlgorithm = CipherAlgorithmType.Fortezza; 					break; 				case SSL_eNULL: 					cipherAlgorithm = CipherAlgorithmType.None; 					break; 				case SSL_AES: 					switch (raw.strength_bits) 					{ 						case 128: cipherAlgorithm = CipherAlgorithmType.Aes128; break; 						case 192: cipherAlgorithm = CipherAlgorithmType.Aes192; break; 						case 256: cipherAlgorithm = CipherAlgorithmType.Aes256; break; 					} 					break; 				case SSL_CAMELLIA: 					switch (raw.strength_bits) 					{ 						case 128: cipherAlgorithm = CipherAlgorithmType.Camellia128; break; 						case 256: cipherAlgorithm = CipherAlgorithmType.Camellia256; break; 					} 					break; 				case SSL_SEED: 					cipherAlgorithm = CipherAlgorithmType.Seed; 					cipherStrength = 128; 					break; 			}
Magic Number,OpenSSL.SSL,SslCipher,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslCipher.cs,Initialize,The following statement contains a magic number: switch (raw.algorithms & SSL_ENC_MASK) 			{ 				case SSL_DES: 					cipherAlgorithm = CipherAlgorithmType.Des; 					if (isExport && keyLength == 5) 					{ 						cipherStrength = 40; 					} 					else 					{ 						cipherStrength = 56; 					} 					break; 				case SSL_3DES: 					cipherAlgorithm = CipherAlgorithmType.TripleDes; 					cipherStrength = 168; 					break; 				case SSL_RC4: 					cipherAlgorithm = CipherAlgorithmType.Rc4; 					if (isExport) 					{ 						if (keyLength == 5) 						{ 							cipherStrength = 40; 						} 						else 						{ 							cipherStrength = 56; 						} 					} 					else 					{ 						if ((raw.algorithm2 & SSL2_CF_8_BYTE_ENC) == SSL2_CF_8_BYTE_ENC) 						{ 							cipherStrength = 64; 						} 						else 						{ 							cipherStrength = 128; 						} 					} 					break; 				case SSL_RC2: 					cipherAlgorithm = CipherAlgorithmType.Rc2; 					if (isExport) 					{ 						if (keyLength == 5) 						{ 							cipherStrength = 40; 						} 						else 						{ 							cipherStrength = 56; 						} 					} 					else 					{ 						cipherStrength = 128; 					} 					break; 				case SSL_IDEA: 					cipherAlgorithm = CipherAlgorithmType.Idea; 					cipherStrength = 128; 					break; 				case SSL_eFZA: 					cipherAlgorithm = CipherAlgorithmType.Fortezza; 					break; 				case SSL_eNULL: 					cipherAlgorithm = CipherAlgorithmType.None; 					break; 				case SSL_AES: 					switch (raw.strength_bits) 					{ 						case 128: cipherAlgorithm = CipherAlgorithmType.Aes128; break; 						case 192: cipherAlgorithm = CipherAlgorithmType.Aes192; break; 						case 256: cipherAlgorithm = CipherAlgorithmType.Aes256; break; 					} 					break; 				case SSL_CAMELLIA: 					switch (raw.strength_bits) 					{ 						case 128: cipherAlgorithm = CipherAlgorithmType.Camellia128; break; 						case 256: cipherAlgorithm = CipherAlgorithmType.Camellia256; break; 					} 					break; 				case SSL_SEED: 					cipherAlgorithm = CipherAlgorithmType.Seed; 					cipherStrength = 128; 					break; 			}
Magic Number,OpenSSL.SSL,SslCipher,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslCipher.cs,Initialize,The following statement contains a magic number: switch (raw.algorithms & SSL_ENC_MASK) 			{ 				case SSL_DES: 					cipherAlgorithm = CipherAlgorithmType.Des; 					if (isExport && keyLength == 5) 					{ 						cipherStrength = 40; 					} 					else 					{ 						cipherStrength = 56; 					} 					break; 				case SSL_3DES: 					cipherAlgorithm = CipherAlgorithmType.TripleDes; 					cipherStrength = 168; 					break; 				case SSL_RC4: 					cipherAlgorithm = CipherAlgorithmType.Rc4; 					if (isExport) 					{ 						if (keyLength == 5) 						{ 							cipherStrength = 40; 						} 						else 						{ 							cipherStrength = 56; 						} 					} 					else 					{ 						if ((raw.algorithm2 & SSL2_CF_8_BYTE_ENC) == SSL2_CF_8_BYTE_ENC) 						{ 							cipherStrength = 64; 						} 						else 						{ 							cipherStrength = 128; 						} 					} 					break; 				case SSL_RC2: 					cipherAlgorithm = CipherAlgorithmType.Rc2; 					if (isExport) 					{ 						if (keyLength == 5) 						{ 							cipherStrength = 40; 						} 						else 						{ 							cipherStrength = 56; 						} 					} 					else 					{ 						cipherStrength = 128; 					} 					break; 				case SSL_IDEA: 					cipherAlgorithm = CipherAlgorithmType.Idea; 					cipherStrength = 128; 					break; 				case SSL_eFZA: 					cipherAlgorithm = CipherAlgorithmType.Fortezza; 					break; 				case SSL_eNULL: 					cipherAlgorithm = CipherAlgorithmType.None; 					break; 				case SSL_AES: 					switch (raw.strength_bits) 					{ 						case 128: cipherAlgorithm = CipherAlgorithmType.Aes128; break; 						case 192: cipherAlgorithm = CipherAlgorithmType.Aes192; break; 						case 256: cipherAlgorithm = CipherAlgorithmType.Aes256; break; 					} 					break; 				case SSL_CAMELLIA: 					switch (raw.strength_bits) 					{ 						case 128: cipherAlgorithm = CipherAlgorithmType.Camellia128; break; 						case 256: cipherAlgorithm = CipherAlgorithmType.Camellia256; break; 					} 					break; 				case SSL_SEED: 					cipherAlgorithm = CipherAlgorithmType.Seed; 					cipherStrength = 128; 					break; 			}
Magic Number,OpenSSL.SSL,SslCipher,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslCipher.cs,Initialize,The following statement contains a magic number: switch (raw.algorithms & SSL_ENC_MASK) 			{ 				case SSL_DES: 					cipherAlgorithm = CipherAlgorithmType.Des; 					if (isExport && keyLength == 5) 					{ 						cipherStrength = 40; 					} 					else 					{ 						cipherStrength = 56; 					} 					break; 				case SSL_3DES: 					cipherAlgorithm = CipherAlgorithmType.TripleDes; 					cipherStrength = 168; 					break; 				case SSL_RC4: 					cipherAlgorithm = CipherAlgorithmType.Rc4; 					if (isExport) 					{ 						if (keyLength == 5) 						{ 							cipherStrength = 40; 						} 						else 						{ 							cipherStrength = 56; 						} 					} 					else 					{ 						if ((raw.algorithm2 & SSL2_CF_8_BYTE_ENC) == SSL2_CF_8_BYTE_ENC) 						{ 							cipherStrength = 64; 						} 						else 						{ 							cipherStrength = 128; 						} 					} 					break; 				case SSL_RC2: 					cipherAlgorithm = CipherAlgorithmType.Rc2; 					if (isExport) 					{ 						if (keyLength == 5) 						{ 							cipherStrength = 40; 						} 						else 						{ 							cipherStrength = 56; 						} 					} 					else 					{ 						cipherStrength = 128; 					} 					break; 				case SSL_IDEA: 					cipherAlgorithm = CipherAlgorithmType.Idea; 					cipherStrength = 128; 					break; 				case SSL_eFZA: 					cipherAlgorithm = CipherAlgorithmType.Fortezza; 					break; 				case SSL_eNULL: 					cipherAlgorithm = CipherAlgorithmType.None; 					break; 				case SSL_AES: 					switch (raw.strength_bits) 					{ 						case 128: cipherAlgorithm = CipherAlgorithmType.Aes128; break; 						case 192: cipherAlgorithm = CipherAlgorithmType.Aes192; break; 						case 256: cipherAlgorithm = CipherAlgorithmType.Aes256; break; 					} 					break; 				case SSL_CAMELLIA: 					switch (raw.strength_bits) 					{ 						case 128: cipherAlgorithm = CipherAlgorithmType.Camellia128; break; 						case 256: cipherAlgorithm = CipherAlgorithmType.Camellia256; break; 					} 					break; 				case SSL_SEED: 					cipherAlgorithm = CipherAlgorithmType.Seed; 					cipherStrength = 128; 					break; 			}
Magic Number,OpenSSL.SSL,SslCipher,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslCipher.cs,Initialize,The following statement contains a magic number: switch (raw.algorithms & SSL_ENC_MASK) 			{ 				case SSL_DES: 					cipherAlgorithm = CipherAlgorithmType.Des; 					if (isExport && keyLength == 5) 					{ 						cipherStrength = 40; 					} 					else 					{ 						cipherStrength = 56; 					} 					break; 				case SSL_3DES: 					cipherAlgorithm = CipherAlgorithmType.TripleDes; 					cipherStrength = 168; 					break; 				case SSL_RC4: 					cipherAlgorithm = CipherAlgorithmType.Rc4; 					if (isExport) 					{ 						if (keyLength == 5) 						{ 							cipherStrength = 40; 						} 						else 						{ 							cipherStrength = 56; 						} 					} 					else 					{ 						if ((raw.algorithm2 & SSL2_CF_8_BYTE_ENC) == SSL2_CF_8_BYTE_ENC) 						{ 							cipherStrength = 64; 						} 						else 						{ 							cipherStrength = 128; 						} 					} 					break; 				case SSL_RC2: 					cipherAlgorithm = CipherAlgorithmType.Rc2; 					if (isExport) 					{ 						if (keyLength == 5) 						{ 							cipherStrength = 40; 						} 						else 						{ 							cipherStrength = 56; 						} 					} 					else 					{ 						cipherStrength = 128; 					} 					break; 				case SSL_IDEA: 					cipherAlgorithm = CipherAlgorithmType.Idea; 					cipherStrength = 128; 					break; 				case SSL_eFZA: 					cipherAlgorithm = CipherAlgorithmType.Fortezza; 					break; 				case SSL_eNULL: 					cipherAlgorithm = CipherAlgorithmType.None; 					break; 				case SSL_AES: 					switch (raw.strength_bits) 					{ 						case 128: cipherAlgorithm = CipherAlgorithmType.Aes128; break; 						case 192: cipherAlgorithm = CipherAlgorithmType.Aes192; break; 						case 256: cipherAlgorithm = CipherAlgorithmType.Aes256; break; 					} 					break; 				case SSL_CAMELLIA: 					switch (raw.strength_bits) 					{ 						case 128: cipherAlgorithm = CipherAlgorithmType.Camellia128; break; 						case 256: cipherAlgorithm = CipherAlgorithmType.Camellia256; break; 					} 					break; 				case SSL_SEED: 					cipherAlgorithm = CipherAlgorithmType.Seed; 					cipherStrength = 128; 					break; 			}
Magic Number,OpenSSL.SSL,SslCipher,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslCipher.cs,Initialize,The following statement contains a magic number: switch (raw.algorithms & SSL_ENC_MASK) 			{ 				case SSL_DES: 					cipherAlgorithm = CipherAlgorithmType.Des; 					if (isExport && keyLength == 5) 					{ 						cipherStrength = 40; 					} 					else 					{ 						cipherStrength = 56; 					} 					break; 				case SSL_3DES: 					cipherAlgorithm = CipherAlgorithmType.TripleDes; 					cipherStrength = 168; 					break; 				case SSL_RC4: 					cipherAlgorithm = CipherAlgorithmType.Rc4; 					if (isExport) 					{ 						if (keyLength == 5) 						{ 							cipherStrength = 40; 						} 						else 						{ 							cipherStrength = 56; 						} 					} 					else 					{ 						if ((raw.algorithm2 & SSL2_CF_8_BYTE_ENC) == SSL2_CF_8_BYTE_ENC) 						{ 							cipherStrength = 64; 						} 						else 						{ 							cipherStrength = 128; 						} 					} 					break; 				case SSL_RC2: 					cipherAlgorithm = CipherAlgorithmType.Rc2; 					if (isExport) 					{ 						if (keyLength == 5) 						{ 							cipherStrength = 40; 						} 						else 						{ 							cipherStrength = 56; 						} 					} 					else 					{ 						cipherStrength = 128; 					} 					break; 				case SSL_IDEA: 					cipherAlgorithm = CipherAlgorithmType.Idea; 					cipherStrength = 128; 					break; 				case SSL_eFZA: 					cipherAlgorithm = CipherAlgorithmType.Fortezza; 					break; 				case SSL_eNULL: 					cipherAlgorithm = CipherAlgorithmType.None; 					break; 				case SSL_AES: 					switch (raw.strength_bits) 					{ 						case 128: cipherAlgorithm = CipherAlgorithmType.Aes128; break; 						case 192: cipherAlgorithm = CipherAlgorithmType.Aes192; break; 						case 256: cipherAlgorithm = CipherAlgorithmType.Aes256; break; 					} 					break; 				case SSL_CAMELLIA: 					switch (raw.strength_bits) 					{ 						case 128: cipherAlgorithm = CipherAlgorithmType.Camellia128; break; 						case 256: cipherAlgorithm = CipherAlgorithmType.Camellia256; break; 					} 					break; 				case SSL_SEED: 					cipherAlgorithm = CipherAlgorithmType.Seed; 					cipherStrength = 128; 					break; 			}
Magic Number,OpenSSL.SSL,SslCipher,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslCipher.cs,Initialize,The following statement contains a magic number: switch (raw.algorithms & SSL_ENC_MASK) 			{ 				case SSL_DES: 					cipherAlgorithm = CipherAlgorithmType.Des; 					if (isExport && keyLength == 5) 					{ 						cipherStrength = 40; 					} 					else 					{ 						cipherStrength = 56; 					} 					break; 				case SSL_3DES: 					cipherAlgorithm = CipherAlgorithmType.TripleDes; 					cipherStrength = 168; 					break; 				case SSL_RC4: 					cipherAlgorithm = CipherAlgorithmType.Rc4; 					if (isExport) 					{ 						if (keyLength == 5) 						{ 							cipherStrength = 40; 						} 						else 						{ 							cipherStrength = 56; 						} 					} 					else 					{ 						if ((raw.algorithm2 & SSL2_CF_8_BYTE_ENC) == SSL2_CF_8_BYTE_ENC) 						{ 							cipherStrength = 64; 						} 						else 						{ 							cipherStrength = 128; 						} 					} 					break; 				case SSL_RC2: 					cipherAlgorithm = CipherAlgorithmType.Rc2; 					if (isExport) 					{ 						if (keyLength == 5) 						{ 							cipherStrength = 40; 						} 						else 						{ 							cipherStrength = 56; 						} 					} 					else 					{ 						cipherStrength = 128; 					} 					break; 				case SSL_IDEA: 					cipherAlgorithm = CipherAlgorithmType.Idea; 					cipherStrength = 128; 					break; 				case SSL_eFZA: 					cipherAlgorithm = CipherAlgorithmType.Fortezza; 					break; 				case SSL_eNULL: 					cipherAlgorithm = CipherAlgorithmType.None; 					break; 				case SSL_AES: 					switch (raw.strength_bits) 					{ 						case 128: cipherAlgorithm = CipherAlgorithmType.Aes128; break; 						case 192: cipherAlgorithm = CipherAlgorithmType.Aes192; break; 						case 256: cipherAlgorithm = CipherAlgorithmType.Aes256; break; 					} 					break; 				case SSL_CAMELLIA: 					switch (raw.strength_bits) 					{ 						case 128: cipherAlgorithm = CipherAlgorithmType.Camellia128; break; 						case 256: cipherAlgorithm = CipherAlgorithmType.Camellia256; break; 					} 					break; 				case SSL_SEED: 					cipherAlgorithm = CipherAlgorithmType.Seed; 					cipherStrength = 128; 					break; 			}
Magic Number,OpenSSL.SSL,SslCipher,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslCipher.cs,Initialize,The following statement contains a magic number: switch (raw.algorithms & SSL_ENC_MASK) 			{ 				case SSL_DES: 					cipherAlgorithm = CipherAlgorithmType.Des; 					if (isExport && keyLength == 5) 					{ 						cipherStrength = 40; 					} 					else 					{ 						cipherStrength = 56; 					} 					break; 				case SSL_3DES: 					cipherAlgorithm = CipherAlgorithmType.TripleDes; 					cipherStrength = 168; 					break; 				case SSL_RC4: 					cipherAlgorithm = CipherAlgorithmType.Rc4; 					if (isExport) 					{ 						if (keyLength == 5) 						{ 							cipherStrength = 40; 						} 						else 						{ 							cipherStrength = 56; 						} 					} 					else 					{ 						if ((raw.algorithm2 & SSL2_CF_8_BYTE_ENC) == SSL2_CF_8_BYTE_ENC) 						{ 							cipherStrength = 64; 						} 						else 						{ 							cipherStrength = 128; 						} 					} 					break; 				case SSL_RC2: 					cipherAlgorithm = CipherAlgorithmType.Rc2; 					if (isExport) 					{ 						if (keyLength == 5) 						{ 							cipherStrength = 40; 						} 						else 						{ 							cipherStrength = 56; 						} 					} 					else 					{ 						cipherStrength = 128; 					} 					break; 				case SSL_IDEA: 					cipherAlgorithm = CipherAlgorithmType.Idea; 					cipherStrength = 128; 					break; 				case SSL_eFZA: 					cipherAlgorithm = CipherAlgorithmType.Fortezza; 					break; 				case SSL_eNULL: 					cipherAlgorithm = CipherAlgorithmType.None; 					break; 				case SSL_AES: 					switch (raw.strength_bits) 					{ 						case 128: cipherAlgorithm = CipherAlgorithmType.Aes128; break; 						case 192: cipherAlgorithm = CipherAlgorithmType.Aes192; break; 						case 256: cipherAlgorithm = CipherAlgorithmType.Aes256; break; 					} 					break; 				case SSL_CAMELLIA: 					switch (raw.strength_bits) 					{ 						case 128: cipherAlgorithm = CipherAlgorithmType.Camellia128; break; 						case 256: cipherAlgorithm = CipherAlgorithmType.Camellia256; break; 					} 					break; 				case SSL_SEED: 					cipherAlgorithm = CipherAlgorithmType.Seed; 					cipherStrength = 128; 					break; 			}
Magic Number,OpenSSL.SSL,SslCipher,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslCipher.cs,Initialize,The following statement contains a magic number: switch (raw.algorithms & SSL_ENC_MASK) 			{ 				case SSL_DES: 					cipherAlgorithm = CipherAlgorithmType.Des; 					if (isExport && keyLength == 5) 					{ 						cipherStrength = 40; 					} 					else 					{ 						cipherStrength = 56; 					} 					break; 				case SSL_3DES: 					cipherAlgorithm = CipherAlgorithmType.TripleDes; 					cipherStrength = 168; 					break; 				case SSL_RC4: 					cipherAlgorithm = CipherAlgorithmType.Rc4; 					if (isExport) 					{ 						if (keyLength == 5) 						{ 							cipherStrength = 40; 						} 						else 						{ 							cipherStrength = 56; 						} 					} 					else 					{ 						if ((raw.algorithm2 & SSL2_CF_8_BYTE_ENC) == SSL2_CF_8_BYTE_ENC) 						{ 							cipherStrength = 64; 						} 						else 						{ 							cipherStrength = 128; 						} 					} 					break; 				case SSL_RC2: 					cipherAlgorithm = CipherAlgorithmType.Rc2; 					if (isExport) 					{ 						if (keyLength == 5) 						{ 							cipherStrength = 40; 						} 						else 						{ 							cipherStrength = 56; 						} 					} 					else 					{ 						cipherStrength = 128; 					} 					break; 				case SSL_IDEA: 					cipherAlgorithm = CipherAlgorithmType.Idea; 					cipherStrength = 128; 					break; 				case SSL_eFZA: 					cipherAlgorithm = CipherAlgorithmType.Fortezza; 					break; 				case SSL_eNULL: 					cipherAlgorithm = CipherAlgorithmType.None; 					break; 				case SSL_AES: 					switch (raw.strength_bits) 					{ 						case 128: cipherAlgorithm = CipherAlgorithmType.Aes128; break; 						case 192: cipherAlgorithm = CipherAlgorithmType.Aes192; break; 						case 256: cipherAlgorithm = CipherAlgorithmType.Aes256; break; 					} 					break; 				case SSL_CAMELLIA: 					switch (raw.strength_bits) 					{ 						case 128: cipherAlgorithm = CipherAlgorithmType.Camellia128; break; 						case 256: cipherAlgorithm = CipherAlgorithmType.Camellia256; break; 					} 					break; 				case SSL_SEED: 					cipherAlgorithm = CipherAlgorithmType.Seed; 					cipherStrength = 128; 					break; 			}
Magic Number,OpenSSL.SSL,SslCipher,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslCipher.cs,Initialize,The following statement contains a magic number: switch (raw.algorithms & SSL_ENC_MASK) 			{ 				case SSL_DES: 					cipherAlgorithm = CipherAlgorithmType.Des; 					if (isExport && keyLength == 5) 					{ 						cipherStrength = 40; 					} 					else 					{ 						cipherStrength = 56; 					} 					break; 				case SSL_3DES: 					cipherAlgorithm = CipherAlgorithmType.TripleDes; 					cipherStrength = 168; 					break; 				case SSL_RC4: 					cipherAlgorithm = CipherAlgorithmType.Rc4; 					if (isExport) 					{ 						if (keyLength == 5) 						{ 							cipherStrength = 40; 						} 						else 						{ 							cipherStrength = 56; 						} 					} 					else 					{ 						if ((raw.algorithm2 & SSL2_CF_8_BYTE_ENC) == SSL2_CF_8_BYTE_ENC) 						{ 							cipherStrength = 64; 						} 						else 						{ 							cipherStrength = 128; 						} 					} 					break; 				case SSL_RC2: 					cipherAlgorithm = CipherAlgorithmType.Rc2; 					if (isExport) 					{ 						if (keyLength == 5) 						{ 							cipherStrength = 40; 						} 						else 						{ 							cipherStrength = 56; 						} 					} 					else 					{ 						cipherStrength = 128; 					} 					break; 				case SSL_IDEA: 					cipherAlgorithm = CipherAlgorithmType.Idea; 					cipherStrength = 128; 					break; 				case SSL_eFZA: 					cipherAlgorithm = CipherAlgorithmType.Fortezza; 					break; 				case SSL_eNULL: 					cipherAlgorithm = CipherAlgorithmType.None; 					break; 				case SSL_AES: 					switch (raw.strength_bits) 					{ 						case 128: cipherAlgorithm = CipherAlgorithmType.Aes128; break; 						case 192: cipherAlgorithm = CipherAlgorithmType.Aes192; break; 						case 256: cipherAlgorithm = CipherAlgorithmType.Aes256; break; 					} 					break; 				case SSL_CAMELLIA: 					switch (raw.strength_bits) 					{ 						case 128: cipherAlgorithm = CipherAlgorithmType.Camellia128; break; 						case 256: cipherAlgorithm = CipherAlgorithmType.Camellia256; break; 					} 					break; 				case SSL_SEED: 					cipherAlgorithm = CipherAlgorithmType.Seed; 					cipherStrength = 128; 					break; 			}
Magic Number,OpenSSL.SSL,SslCipher,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslCipher.cs,Initialize,The following statement contains a magic number: switch (raw.algorithms & SSL_ENC_MASK) 			{ 				case SSL_DES: 					cipherAlgorithm = CipherAlgorithmType.Des; 					if (isExport && keyLength == 5) 					{ 						cipherStrength = 40; 					} 					else 					{ 						cipherStrength = 56; 					} 					break; 				case SSL_3DES: 					cipherAlgorithm = CipherAlgorithmType.TripleDes; 					cipherStrength = 168; 					break; 				case SSL_RC4: 					cipherAlgorithm = CipherAlgorithmType.Rc4; 					if (isExport) 					{ 						if (keyLength == 5) 						{ 							cipherStrength = 40; 						} 						else 						{ 							cipherStrength = 56; 						} 					} 					else 					{ 						if ((raw.algorithm2 & SSL2_CF_8_BYTE_ENC) == SSL2_CF_8_BYTE_ENC) 						{ 							cipherStrength = 64; 						} 						else 						{ 							cipherStrength = 128; 						} 					} 					break; 				case SSL_RC2: 					cipherAlgorithm = CipherAlgorithmType.Rc2; 					if (isExport) 					{ 						if (keyLength == 5) 						{ 							cipherStrength = 40; 						} 						else 						{ 							cipherStrength = 56; 						} 					} 					else 					{ 						cipherStrength = 128; 					} 					break; 				case SSL_IDEA: 					cipherAlgorithm = CipherAlgorithmType.Idea; 					cipherStrength = 128; 					break; 				case SSL_eFZA: 					cipherAlgorithm = CipherAlgorithmType.Fortezza; 					break; 				case SSL_eNULL: 					cipherAlgorithm = CipherAlgorithmType.None; 					break; 				case SSL_AES: 					switch (raw.strength_bits) 					{ 						case 128: cipherAlgorithm = CipherAlgorithmType.Aes128; break; 						case 192: cipherAlgorithm = CipherAlgorithmType.Aes192; break; 						case 256: cipherAlgorithm = CipherAlgorithmType.Aes256; break; 					} 					break; 				case SSL_CAMELLIA: 					switch (raw.strength_bits) 					{ 						case 128: cipherAlgorithm = CipherAlgorithmType.Camellia128; break; 						case 256: cipherAlgorithm = CipherAlgorithmType.Camellia256; break; 					} 					break; 				case SSL_SEED: 					cipherAlgorithm = CipherAlgorithmType.Seed; 					cipherStrength = 128; 					break; 			}
Magic Number,OpenSSL.SSL,SslCipher,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslCipher.cs,Initialize,The following statement contains a magic number: switch (raw.algorithms & SSL_ENC_MASK) 			{ 				case SSL_DES: 					cipherAlgorithm = CipherAlgorithmType.Des; 					if (isExport && keyLength == 5) 					{ 						cipherStrength = 40; 					} 					else 					{ 						cipherStrength = 56; 					} 					break; 				case SSL_3DES: 					cipherAlgorithm = CipherAlgorithmType.TripleDes; 					cipherStrength = 168; 					break; 				case SSL_RC4: 					cipherAlgorithm = CipherAlgorithmType.Rc4; 					if (isExport) 					{ 						if (keyLength == 5) 						{ 							cipherStrength = 40; 						} 						else 						{ 							cipherStrength = 56; 						} 					} 					else 					{ 						if ((raw.algorithm2 & SSL2_CF_8_BYTE_ENC) == SSL2_CF_8_BYTE_ENC) 						{ 							cipherStrength = 64; 						} 						else 						{ 							cipherStrength = 128; 						} 					} 					break; 				case SSL_RC2: 					cipherAlgorithm = CipherAlgorithmType.Rc2; 					if (isExport) 					{ 						if (keyLength == 5) 						{ 							cipherStrength = 40; 						} 						else 						{ 							cipherStrength = 56; 						} 					} 					else 					{ 						cipherStrength = 128; 					} 					break; 				case SSL_IDEA: 					cipherAlgorithm = CipherAlgorithmType.Idea; 					cipherStrength = 128; 					break; 				case SSL_eFZA: 					cipherAlgorithm = CipherAlgorithmType.Fortezza; 					break; 				case SSL_eNULL: 					cipherAlgorithm = CipherAlgorithmType.None; 					break; 				case SSL_AES: 					switch (raw.strength_bits) 					{ 						case 128: cipherAlgorithm = CipherAlgorithmType.Aes128; break; 						case 192: cipherAlgorithm = CipherAlgorithmType.Aes192; break; 						case 256: cipherAlgorithm = CipherAlgorithmType.Aes256; break; 					} 					break; 				case SSL_CAMELLIA: 					switch (raw.strength_bits) 					{ 						case 128: cipherAlgorithm = CipherAlgorithmType.Camellia128; break; 						case 256: cipherAlgorithm = CipherAlgorithmType.Camellia256; break; 					} 					break; 				case SSL_SEED: 					cipherAlgorithm = CipherAlgorithmType.Seed; 					cipherStrength = 128; 					break; 			}
Magic Number,OpenSSL.SSL,SslCipher,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslCipher.cs,Initialize,The following statement contains a magic number: switch (raw.algorithms & SSL_ENC_MASK) 			{ 				case SSL_DES: 					cipherAlgorithm = CipherAlgorithmType.Des; 					if (isExport && keyLength == 5) 					{ 						cipherStrength = 40; 					} 					else 					{ 						cipherStrength = 56; 					} 					break; 				case SSL_3DES: 					cipherAlgorithm = CipherAlgorithmType.TripleDes; 					cipherStrength = 168; 					break; 				case SSL_RC4: 					cipherAlgorithm = CipherAlgorithmType.Rc4; 					if (isExport) 					{ 						if (keyLength == 5) 						{ 							cipherStrength = 40; 						} 						else 						{ 							cipherStrength = 56; 						} 					} 					else 					{ 						if ((raw.algorithm2 & SSL2_CF_8_BYTE_ENC) == SSL2_CF_8_BYTE_ENC) 						{ 							cipherStrength = 64; 						} 						else 						{ 							cipherStrength = 128; 						} 					} 					break; 				case SSL_RC2: 					cipherAlgorithm = CipherAlgorithmType.Rc2; 					if (isExport) 					{ 						if (keyLength == 5) 						{ 							cipherStrength = 40; 						} 						else 						{ 							cipherStrength = 56; 						} 					} 					else 					{ 						cipherStrength = 128; 					} 					break; 				case SSL_IDEA: 					cipherAlgorithm = CipherAlgorithmType.Idea; 					cipherStrength = 128; 					break; 				case SSL_eFZA: 					cipherAlgorithm = CipherAlgorithmType.Fortezza; 					break; 				case SSL_eNULL: 					cipherAlgorithm = CipherAlgorithmType.None; 					break; 				case SSL_AES: 					switch (raw.strength_bits) 					{ 						case 128: cipherAlgorithm = CipherAlgorithmType.Aes128; break; 						case 192: cipherAlgorithm = CipherAlgorithmType.Aes192; break; 						case 256: cipherAlgorithm = CipherAlgorithmType.Aes256; break; 					} 					break; 				case SSL_CAMELLIA: 					switch (raw.strength_bits) 					{ 						case 128: cipherAlgorithm = CipherAlgorithmType.Camellia128; break; 						case 256: cipherAlgorithm = CipherAlgorithmType.Camellia256; break; 					} 					break; 				case SSL_SEED: 					cipherAlgorithm = CipherAlgorithmType.Seed; 					cipherStrength = 128; 					break; 			}
Magic Number,OpenSSL.SSL,SslCipher,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslCipher.cs,Initialize,The following statement contains a magic number: switch (raw.algorithms & SSL_ENC_MASK) 			{ 				case SSL_DES: 					cipherAlgorithm = CipherAlgorithmType.Des; 					if (isExport && keyLength == 5) 					{ 						cipherStrength = 40; 					} 					else 					{ 						cipherStrength = 56; 					} 					break; 				case SSL_3DES: 					cipherAlgorithm = CipherAlgorithmType.TripleDes; 					cipherStrength = 168; 					break; 				case SSL_RC4: 					cipherAlgorithm = CipherAlgorithmType.Rc4; 					if (isExport) 					{ 						if (keyLength == 5) 						{ 							cipherStrength = 40; 						} 						else 						{ 							cipherStrength = 56; 						} 					} 					else 					{ 						if ((raw.algorithm2 & SSL2_CF_8_BYTE_ENC) == SSL2_CF_8_BYTE_ENC) 						{ 							cipherStrength = 64; 						} 						else 						{ 							cipherStrength = 128; 						} 					} 					break; 				case SSL_RC2: 					cipherAlgorithm = CipherAlgorithmType.Rc2; 					if (isExport) 					{ 						if (keyLength == 5) 						{ 							cipherStrength = 40; 						} 						else 						{ 							cipherStrength = 56; 						} 					} 					else 					{ 						cipherStrength = 128; 					} 					break; 				case SSL_IDEA: 					cipherAlgorithm = CipherAlgorithmType.Idea; 					cipherStrength = 128; 					break; 				case SSL_eFZA: 					cipherAlgorithm = CipherAlgorithmType.Fortezza; 					break; 				case SSL_eNULL: 					cipherAlgorithm = CipherAlgorithmType.None; 					break; 				case SSL_AES: 					switch (raw.strength_bits) 					{ 						case 128: cipherAlgorithm = CipherAlgorithmType.Aes128; break; 						case 192: cipherAlgorithm = CipherAlgorithmType.Aes192; break; 						case 256: cipherAlgorithm = CipherAlgorithmType.Aes256; break; 					} 					break; 				case SSL_CAMELLIA: 					switch (raw.strength_bits) 					{ 						case 128: cipherAlgorithm = CipherAlgorithmType.Camellia128; break; 						case 256: cipherAlgorithm = CipherAlgorithmType.Camellia256; break; 					} 					break; 				case SSL_SEED: 					cipherAlgorithm = CipherAlgorithmType.Seed; 					cipherStrength = 128; 					break; 			}
Magic Number,OpenSSL.SSL,SslCipher,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslCipher.cs,Initialize,The following statement contains a magic number: switch (raw.algorithms & SSL_ENC_MASK) 			{ 				case SSL_DES: 					cipherAlgorithm = CipherAlgorithmType.Des; 					if (isExport && keyLength == 5) 					{ 						cipherStrength = 40; 					} 					else 					{ 						cipherStrength = 56; 					} 					break; 				case SSL_3DES: 					cipherAlgorithm = CipherAlgorithmType.TripleDes; 					cipherStrength = 168; 					break; 				case SSL_RC4: 					cipherAlgorithm = CipherAlgorithmType.Rc4; 					if (isExport) 					{ 						if (keyLength == 5) 						{ 							cipherStrength = 40; 						} 						else 						{ 							cipherStrength = 56; 						} 					} 					else 					{ 						if ((raw.algorithm2 & SSL2_CF_8_BYTE_ENC) == SSL2_CF_8_BYTE_ENC) 						{ 							cipherStrength = 64; 						} 						else 						{ 							cipherStrength = 128; 						} 					} 					break; 				case SSL_RC2: 					cipherAlgorithm = CipherAlgorithmType.Rc2; 					if (isExport) 					{ 						if (keyLength == 5) 						{ 							cipherStrength = 40; 						} 						else 						{ 							cipherStrength = 56; 						} 					} 					else 					{ 						cipherStrength = 128; 					} 					break; 				case SSL_IDEA: 					cipherAlgorithm = CipherAlgorithmType.Idea; 					cipherStrength = 128; 					break; 				case SSL_eFZA: 					cipherAlgorithm = CipherAlgorithmType.Fortezza; 					break; 				case SSL_eNULL: 					cipherAlgorithm = CipherAlgorithmType.None; 					break; 				case SSL_AES: 					switch (raw.strength_bits) 					{ 						case 128: cipherAlgorithm = CipherAlgorithmType.Aes128; break; 						case 192: cipherAlgorithm = CipherAlgorithmType.Aes192; break; 						case 256: cipherAlgorithm = CipherAlgorithmType.Aes256; break; 					} 					break; 				case SSL_CAMELLIA: 					switch (raw.strength_bits) 					{ 						case 128: cipherAlgorithm = CipherAlgorithmType.Camellia128; break; 						case 256: cipherAlgorithm = CipherAlgorithmType.Camellia256; break; 					} 					break; 				case SSL_SEED: 					cipherAlgorithm = CipherAlgorithmType.Seed; 					cipherStrength = 128; 					break; 			}
Magic Number,OpenSSL.SSL,SslCipher,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslCipher.cs,Initialize,The following statement contains a magic number: switch (raw.algorithms & SSL_ENC_MASK) 			{ 				case SSL_DES: 					cipherAlgorithm = CipherAlgorithmType.Des; 					if (isExport && keyLength == 5) 					{ 						cipherStrength = 40; 					} 					else 					{ 						cipherStrength = 56; 					} 					break; 				case SSL_3DES: 					cipherAlgorithm = CipherAlgorithmType.TripleDes; 					cipherStrength = 168; 					break; 				case SSL_RC4: 					cipherAlgorithm = CipherAlgorithmType.Rc4; 					if (isExport) 					{ 						if (keyLength == 5) 						{ 							cipherStrength = 40; 						} 						else 						{ 							cipherStrength = 56; 						} 					} 					else 					{ 						if ((raw.algorithm2 & SSL2_CF_8_BYTE_ENC) == SSL2_CF_8_BYTE_ENC) 						{ 							cipherStrength = 64; 						} 						else 						{ 							cipherStrength = 128; 						} 					} 					break; 				case SSL_RC2: 					cipherAlgorithm = CipherAlgorithmType.Rc2; 					if (isExport) 					{ 						if (keyLength == 5) 						{ 							cipherStrength = 40; 						} 						else 						{ 							cipherStrength = 56; 						} 					} 					else 					{ 						cipherStrength = 128; 					} 					break; 				case SSL_IDEA: 					cipherAlgorithm = CipherAlgorithmType.Idea; 					cipherStrength = 128; 					break; 				case SSL_eFZA: 					cipherAlgorithm = CipherAlgorithmType.Fortezza; 					break; 				case SSL_eNULL: 					cipherAlgorithm = CipherAlgorithmType.None; 					break; 				case SSL_AES: 					switch (raw.strength_bits) 					{ 						case 128: cipherAlgorithm = CipherAlgorithmType.Aes128; break; 						case 192: cipherAlgorithm = CipherAlgorithmType.Aes192; break; 						case 256: cipherAlgorithm = CipherAlgorithmType.Aes256; break; 					} 					break; 				case SSL_CAMELLIA: 					switch (raw.strength_bits) 					{ 						case 128: cipherAlgorithm = CipherAlgorithmType.Camellia128; break; 						case 256: cipherAlgorithm = CipherAlgorithmType.Camellia256; break; 					} 					break; 				case SSL_SEED: 					cipherAlgorithm = CipherAlgorithmType.Seed; 					cipherStrength = 128; 					break; 			}
Magic Number,OpenSSL.SSL,SslCipher,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslCipher.cs,Initialize,The following statement contains a magic number: switch (raw.algorithms & SSL_ENC_MASK) 			{ 				case SSL_DES: 					cipherAlgorithm = CipherAlgorithmType.Des; 					if (isExport && keyLength == 5) 					{ 						cipherStrength = 40; 					} 					else 					{ 						cipherStrength = 56; 					} 					break; 				case SSL_3DES: 					cipherAlgorithm = CipherAlgorithmType.TripleDes; 					cipherStrength = 168; 					break; 				case SSL_RC4: 					cipherAlgorithm = CipherAlgorithmType.Rc4; 					if (isExport) 					{ 						if (keyLength == 5) 						{ 							cipherStrength = 40; 						} 						else 						{ 							cipherStrength = 56; 						} 					} 					else 					{ 						if ((raw.algorithm2 & SSL2_CF_8_BYTE_ENC) == SSL2_CF_8_BYTE_ENC) 						{ 							cipherStrength = 64; 						} 						else 						{ 							cipherStrength = 128; 						} 					} 					break; 				case SSL_RC2: 					cipherAlgorithm = CipherAlgorithmType.Rc2; 					if (isExport) 					{ 						if (keyLength == 5) 						{ 							cipherStrength = 40; 						} 						else 						{ 							cipherStrength = 56; 						} 					} 					else 					{ 						cipherStrength = 128; 					} 					break; 				case SSL_IDEA: 					cipherAlgorithm = CipherAlgorithmType.Idea; 					cipherStrength = 128; 					break; 				case SSL_eFZA: 					cipherAlgorithm = CipherAlgorithmType.Fortezza; 					break; 				case SSL_eNULL: 					cipherAlgorithm = CipherAlgorithmType.None; 					break; 				case SSL_AES: 					switch (raw.strength_bits) 					{ 						case 128: cipherAlgorithm = CipherAlgorithmType.Aes128; break; 						case 192: cipherAlgorithm = CipherAlgorithmType.Aes192; break; 						case 256: cipherAlgorithm = CipherAlgorithmType.Aes256; break; 					} 					break; 				case SSL_CAMELLIA: 					switch (raw.strength_bits) 					{ 						case 128: cipherAlgorithm = CipherAlgorithmType.Camellia128; break; 						case 256: cipherAlgorithm = CipherAlgorithmType.Camellia256; break; 					} 					break; 				case SSL_SEED: 					cipherAlgorithm = CipherAlgorithmType.Seed; 					cipherStrength = 128; 					break; 			}
Magic Number,OpenSSL.SSL,SslStreamBase,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslStreamBase.cs,SslStreamBase,The following statement contains a magic number: read_buffer = new byte[16384];
Magic Number,OpenSSL.SSL,SslStreamServer,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslStreamServer.cs,InitializeServerContext,The following statement contains a magic number: sslContext.SetVerifyDepth(10);
Magic Number,OpenSSL.X509,Identity,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\X509\Identity.cs,CreateRequest,The following statement contains a magic number: X509Request request = new X509Request(2' subject' this.key);
Magic Number,OpenSSL.X509,X509Certificate,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\X509\X509Certificate.cs,X509Certificate,The following statement contains a magic number: this.Version = 2;
Magic Number,OpenSSL.X509,X509Name,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\X509\X509Name.cs,GetTextByNid,The following statement contains a magic number: byte[] buf = new byte[1024];
Magic Number,Microsoft.Http1.Protocol,Http11Helper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Microsoft.Http2.Owin.Server\Adapters\Http11Helper.cs,SendResponse,The following statement contains a magic number: Thread.Sleep(200);
Magic Number,Microsoft.Http1.Protocol,Http11Helper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Microsoft.Http2.Owin.Server\Adapters\Http11Helper.cs,ReadHeaders,The following statement contains a magic number: var headers = new List<string>(5);
Magic Number,Microsoft.Http1.Protocol,Http11Helper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Microsoft.Http2.Owin.Server\Adapters\Http11Helper.cs,ReadHeaders,The following statement contains a magic number: var lineBuffer = new byte[1024];
Magic Number,Microsoft.Http1.Protocol,Http11Helper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Microsoft.Http2.Owin.Server\Adapters\Http11Helper.cs,ReadHeaders,The following statement contains a magic number: headers.Count >= 2 && String.IsNullOrEmpty(headers.LastOrDefault())
Magic Number,Microsoft.Http1.Protocol,Http11Helper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Microsoft.Http2.Owin.Server\Adapters\Http11Helper.cs,GetHeaderNameValues,The following statement contains a magic number: string[] values = header.Substring(colonIndex + 2).Split(''');
Magic Number,Microsoft.Http2.Push.Bing.BingHelpers,BingRequestProcessor,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Microsoft.Http2.PushMiddleware\Bing\BingHelpers\BingHelper.cs,GetSoapUrl,The following statement contains a magic number: return String.Format("http://ak.dynamic.t{0}.tiles.virtualearth.net/comp/ch/{1}?mkt=ru-ru&it=G'VE'BX'L'LA&shading=hill&og=33&n=z"'                                 origQuad % 10' origQuad);
Magic Number,Microsoft.Http2.Push.Bing.BingHelpers,BingRequestProcessor,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Microsoft.Http2.PushMiddleware\Bing\BingHelpers\BingHelper.cs,GetTiles,The following statement contains a magic number: var tiles = new List<Tile>(8);
Magic Number,Microsoft.Http2.Push.Bing.BingHelpers,BingRequestProcessor,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Microsoft.Http2.PushMiddleware\Bing\BingHelpers\BingHelper.cs,GetTiles,The following statement contains a magic number: int tilesOnTop = h / 2;
Magic Number,Microsoft.Http2.Push.Bing.BingHelpers,BingRequestProcessor,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Microsoft.Http2.PushMiddleware\Bing\BingHelpers\BingHelper.cs,GetTiles,The following statement contains a magic number: int tilesOnLeft = w / 2;
Magic Number,Microsoft.Http2.Push.Bing.BingHelpers,TileSystem,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Microsoft.Http2.PushMiddleware\Bing\BingHelpers\TileSystem.cs,MapSize,The following statement contains a magic number: return (uint)256 << levelOfDetail;
Magic Number,Microsoft.Http2.Push.Bing.BingHelpers,TileSystem,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Microsoft.Http2.PushMiddleware\Bing\BingHelpers\TileSystem.cs,GroundResolution,The following statement contains a magic number: return Math.Cos(latitude * Math.PI / 180) * 2 * Math.PI * EarthRadius / MapSize(levelOfDetail);
Magic Number,Microsoft.Http2.Push.Bing.BingHelpers,TileSystem,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Microsoft.Http2.PushMiddleware\Bing\BingHelpers\TileSystem.cs,GroundResolution,The following statement contains a magic number: return Math.Cos(latitude * Math.PI / 180) * 2 * Math.PI * EarthRadius / MapSize(levelOfDetail);
Magic Number,Microsoft.Http2.Push.Bing.BingHelpers,TileSystem,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Microsoft.Http2.PushMiddleware\Bing\BingHelpers\TileSystem.cs,MapScale,The following statement contains a magic number: return GroundResolution(latitude' levelOfDetail) * screenDpi / 0.0254;
Magic Number,Microsoft.Http2.Push.Bing.BingHelpers,TileSystem,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Microsoft.Http2.PushMiddleware\Bing\BingHelpers\TileSystem.cs,LatLongToPixelXy,The following statement contains a magic number: double x = (longitude + 180) / 360;
Magic Number,Microsoft.Http2.Push.Bing.BingHelpers,TileSystem,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Microsoft.Http2.PushMiddleware\Bing\BingHelpers\TileSystem.cs,LatLongToPixelXy,The following statement contains a magic number: double x = (longitude + 180) / 360;
Magic Number,Microsoft.Http2.Push.Bing.BingHelpers,TileSystem,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Microsoft.Http2.PushMiddleware\Bing\BingHelpers\TileSystem.cs,LatLongToPixelXy,The following statement contains a magic number: double sinLatitude = Math.Sin(latitude * Math.PI / 180);
Magic Number,Microsoft.Http2.Push.Bing.BingHelpers,TileSystem,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Microsoft.Http2.PushMiddleware\Bing\BingHelpers\TileSystem.cs,LatLongToPixelXy,The following statement contains a magic number: double y = 0.5 - Math.Log((1 + sinLatitude) / (1 - sinLatitude)) / (4 * Math.PI);
Magic Number,Microsoft.Http2.Push.Bing.BingHelpers,TileSystem,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Microsoft.Http2.PushMiddleware\Bing\BingHelpers\TileSystem.cs,LatLongToPixelXy,The following statement contains a magic number: double y = 0.5 - Math.Log((1 + sinLatitude) / (1 - sinLatitude)) / (4 * Math.PI);
Magic Number,Microsoft.Http2.Push.Bing.BingHelpers,TileSystem,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Microsoft.Http2.PushMiddleware\Bing\BingHelpers\TileSystem.cs,LatLongToPixelXy,The following statement contains a magic number: pixelX = (int)Clip(x * mapSize + 0.5' 0' mapSize - 1);
Magic Number,Microsoft.Http2.Push.Bing.BingHelpers,TileSystem,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Microsoft.Http2.PushMiddleware\Bing\BingHelpers\TileSystem.cs,LatLongToPixelXy,The following statement contains a magic number: pixelY = (int)Clip(y * mapSize + 0.5' 0' mapSize - 1);
Magic Number,Microsoft.Http2.Push.Bing.BingHelpers,TileSystem,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Microsoft.Http2.PushMiddleware\Bing\BingHelpers\TileSystem.cs,PixelXyToLatLong,The following statement contains a magic number: double x = (Clip(pixelX' 0' mapSize - 1) / mapSize) - 0.5;
Magic Number,Microsoft.Http2.Push.Bing.BingHelpers,TileSystem,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Microsoft.Http2.PushMiddleware\Bing\BingHelpers\TileSystem.cs,PixelXyToLatLong,The following statement contains a magic number: double y = 0.5 - (Clip(pixelY' 0' mapSize - 1) / mapSize);
Magic Number,Microsoft.Http2.Push.Bing.BingHelpers,TileSystem,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Microsoft.Http2.PushMiddleware\Bing\BingHelpers\TileSystem.cs,PixelXyToLatLong,The following statement contains a magic number: latitude = 90 - 360 * Math.Atan(Math.Exp(-y * 2 * Math.PI)) / Math.PI;
Magic Number,Microsoft.Http2.Push.Bing.BingHelpers,TileSystem,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Microsoft.Http2.PushMiddleware\Bing\BingHelpers\TileSystem.cs,PixelXyToLatLong,The following statement contains a magic number: latitude = 90 - 360 * Math.Atan(Math.Exp(-y * 2 * Math.PI)) / Math.PI;
Magic Number,Microsoft.Http2.Push.Bing.BingHelpers,TileSystem,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Microsoft.Http2.PushMiddleware\Bing\BingHelpers\TileSystem.cs,PixelXyToLatLong,The following statement contains a magic number: latitude = 90 - 360 * Math.Atan(Math.Exp(-y * 2 * Math.PI)) / Math.PI;
Magic Number,Microsoft.Http2.Push.Bing.BingHelpers,TileSystem,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Microsoft.Http2.PushMiddleware\Bing\BingHelpers\TileSystem.cs,PixelXyToLatLong,The following statement contains a magic number: longitude = 360 * x;
Magic Number,Microsoft.Http2.Push,TreeBuilder,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Microsoft.Http2.PushMiddleware\StaticFiles\GraphHelper.cs,Dfs,The following statement contains a magic number: var nonused = new List<string>(8);
Magic Number,Http2.TestClient.Adapters,Http11ClientMessageHandler,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.TestClient\Adapters\Http11ClientMessageHandler.cs,ParseHeadersAndReadResponseBody,The following statement contains a magic number: var reasonPhrase = firstStr[2];
Magic Number,Http2.TestClient.Adapters,Http11ClientMessageHandler,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.TestClient\Adapters\Http11ClientMessageHandler.cs,ParseHeadersAndReadResponseBody,The following statement contains a magic number: statusCode == 200
Magic Number,Http2.TestClient.Handshake,UpgradeHandshaker,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.TestClient\Handshake\UpgradeHandshaker.cs,Handshake,The following statement contains a magic number: var settingsPayload = String.Format("{0}' {1}"' 200000' 100);
Magic Number,Http2.TestClient.Handshake,UpgradeHandshaker,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.TestClient\Handshake\UpgradeHandshaker.cs,Handshake,The following statement contains a magic number: var settingsPayload = String.Format("{0}' {1}"' 200000' 100);
Magic Number,Client.IO,FileHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.TestClient\IO\FileHelper.cs,FileHelper,The following statement contains a magic number: _pathStreamDict = new Dictionary<string' FileStream>(5);
Magic Number,Client.IO,FileHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.TestClient\IO\FileHelper.cs,GetFile,The following statement contains a magic number: string assemblyPath = Path.GetDirectoryName(Assembly.GetExecutingAssembly().CodeBase.Substring(8));
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,ExtendedMathMultipleNumbers,The following statement contains a magic number: var tests = new List<int[]>                 {                     new [] {1' 0' -1' 10}'                     new [] {16383' 16383' 16383' 16383}'                     new [] {10' int.MaxValue' -100' int.MinValue}'                 };
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,ExtendedMathMultipleNumbers,The following statement contains a magic number: var tests = new List<int[]>                 {                     new [] {1' 0' -1' 10}'                     new [] {16383' 16383' 16383' 16383}'                     new [] {10' int.MaxValue' -100' int.MinValue}'                 };
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,ExtendedMathMultipleNumbers,The following statement contains a magic number: var tests = new List<int[]>                 {                     new [] {1' 0' -1' 10}'                     new [] {16383' 16383' 16383' 16383}'                     new [] {10' int.MaxValue' -100' int.MinValue}'                 };
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,ExtendedMathMultipleNumbers,The following statement contains a magic number: var tests = new List<int[]>                 {                     new [] {1' 0' -1' 10}'                     new [] {16383' 16383' 16383' 16383}'                     new [] {10' int.MaxValue' -100' int.MinValue}'                 };
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,ExtendedMathMultipleNumbers,The following statement contains a magic number: var tests = new List<int[]>                 {                     new [] {1' 0' -1' 10}'                     new [] {16383' 16383' 16383' 16383}'                     new [] {10' int.MaxValue' -100' int.MinValue}'                 };
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,ExtendedMathMultipleNumbers,The following statement contains a magic number: var tests = new List<int[]>                 {                     new [] {1' 0' -1' 10}'                     new [] {16383' 16383' 16383' 16383}'                     new [] {10' int.MaxValue' -100' int.MinValue}'                 };
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,ExtendedMathMultipleNumbers,The following statement contains a magic number: var tests = new List<int[]>                 {                     new [] {1' 0' -1' 10}'                     new [] {16383' 16383' 16383' 16383}'                     new [] {10' int.MaxValue' -100' int.MinValue}'                 };
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,ExtendedMathMultipleNumbers,The following statement contains a magic number: var results = new[] { -1' 16383' int.MinValue };
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,HeadersList,The following statement contains a magic number: Assert.Equal(collection.Count' 10);
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,HeadersList,The following statement contains a magic number: Assert.Equal(collection.StoredHeadersSize' 60 + 80 + 32 * collection.Count);
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,HeadersList,The following statement contains a magic number: Assert.Equal(collection.StoredHeadersSize' 60 + 80 + 32 * collection.Count);
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,HeadersList,The following statement contains a magic number: Assert.Equal(collection.StoredHeadersSize' 60 + 80 + 32 * collection.Count);
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,HeadersList,The following statement contains a magic number: Assert.Equal(collection.Count' 12);
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,HeadersList,The following statement contains a magic number: Assert.Equal(collection.StoredHeadersSize' 60 + 80 + 32 * collection.Count + 22 + 26);
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,HeadersList,The following statement contains a magic number: Assert.Equal(collection.StoredHeadersSize' 60 + 80 + 32 * collection.Count + 22 + 26);
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,HeadersList,The following statement contains a magic number: Assert.Equal(collection.StoredHeadersSize' 60 + 80 + 32 * collection.Count + 22 + 26);
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,HeadersList,The following statement contains a magic number: Assert.Equal(collection.StoredHeadersSize' 60 + 80 + 32 * collection.Count + 22 + 26);
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,HeadersList,The following statement contains a magic number: Assert.Equal(collection.StoredHeadersSize' 60 + 80 + 32 * collection.Count + 22 + 26);
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,HeadersList,The following statement contains a magic number: int headersSize = collection.Sum(header => header.Key.Length + header.Value.Length + 32);
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,NeverIndexedEmission,The following statement contains a magic number: byte[] nameLength = name.Length.ToUVarInt(7);
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,NeverIndexedEmission,The following statement contains a magic number: byte[] valueLength = value.Length.ToUVarInt(7);
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,UVarIntConversion,The following statement contains a magic number: var test1337 = 1337.ToUVarInt(5);
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,UVarIntConversion,The following statement contains a magic number: var test1337 = 1337.ToUVarInt(5);
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,UVarIntConversion,The following statement contains a magic number: Assert.Equal(Int32Extensions.FromUVarInt(test1337)' 1337);
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,UVarIntConversion,The following statement contains a magic number: test1337 = 1337.ToUVarInt(3);
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,UVarIntConversion,The following statement contains a magic number: test1337 = 1337.ToUVarInt(3);
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,UVarIntConversion,The following statement contains a magic number: Assert.Equal(Int32Extensions.FromUVarInt(test1337)' 1337);
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,UVarIntConversion,The following statement contains a magic number: test1337 = 1337.ToUVarInt(0);
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,UVarIntConversion,The following statement contains a magic number: Assert.Equal(Int32Extensions.FromUVarInt(test1337)' 1337);
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,UVarIntConversion,The following statement contains a magic number: var test0 = 0.ToUVarInt(5);
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,UVarIntConversion,The following statement contains a magic number: var test0Xfffff = 0xfffff.ToUVarInt(7);
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,UVarIntConversion,The following statement contains a magic number: test0Xfffff = 0xfffff.ToUVarInt(4);
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,FrameHelper,The following statement contains a magic number: byte result = Microsoft.Http2.Protocol.Framing.FrameHelper.SetBit(input' true' 3);
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,FrameHelper,The following statement contains a magic number: Assert.Equal(result' 9);
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,FrameHelper,The following statement contains a magic number: result = Microsoft.Http2.Protocol.Framing.FrameHelper.SetBit(result' false' 3);
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,FrameHelper,The following statement contains a magic number: result = Microsoft.Http2.Protocol.Framing.FrameHelper.SetBit(result' true' 7);
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,FrameHelper,The following statement contains a magic number: Assert.Equal(result' 128);
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,FrameHelper,The following statement contains a magic number: result = Microsoft.Http2.Protocol.Framing.FrameHelper.SetBit(result' true' 6);
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,FrameHelper,The following statement contains a magic number: Assert.Equal(result' 192);
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,FrameHelper,The following statement contains a magic number: result = Microsoft.Http2.Protocol.Framing.FrameHelper.SetBit(result' true' 5);
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,FrameHelper,The following statement contains a magic number: Assert.Equal(result' 224);
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,FrameHelper,The following statement contains a magic number: result = Microsoft.Http2.Protocol.Framing.FrameHelper.SetBit(result' false' 7);
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,FrameHelper,The following statement contains a magic number: Assert.Equal(result' 96);
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,FrameHelper,The following statement contains a magic number: result = Microsoft.Http2.Protocol.Framing.FrameHelper.SetBit(result' false' 6);
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,FrameHelper,The following statement contains a magic number: Assert.Equal(result' 32);
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,FrameHelper,The following statement contains a magic number: result = Microsoft.Http2.Protocol.Framing.FrameHelper.SetBit(result' false' 5);
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,ExtendedMathWithoutComparer,The following statement contains a magic number: var tests = new List<double[]>                 {                     new[] {1' -2' (double) 3' -6}'                     new[] {float.MaxValue' double.MinValue' byte.MaxValue' -6}'                     new[] {int.MaxValue' double.MaxValue' float.MinValue' int.MinValue}                 };
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,ExtendedMathWithoutComparer,The following statement contains a magic number: var tests = new List<double[]>                 {                     new[] {1' -2' (double) 3' -6}'                     new[] {float.MaxValue' double.MinValue' byte.MaxValue' -6}'                     new[] {int.MaxValue' double.MaxValue' float.MinValue' int.MinValue}                 };
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,ExtendedMathWithoutComparer,The following statement contains a magic number: var tests = new List<double[]>                 {                     new[] {1' -2' (double) 3' -6}'                     new[] {float.MaxValue' double.MinValue' byte.MaxValue' -6}'                     new[] {int.MaxValue' double.MaxValue' float.MinValue' int.MinValue}                 };
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,ExtendedMathWithoutComparer,The following statement contains a magic number: var tests = new List<double[]>                 {                     new[] {1' -2' (double) 3' -6}'                     new[] {float.MaxValue' double.MinValue' byte.MaxValue' -6}'                     new[] {int.MaxValue' double.MaxValue' float.MinValue' int.MinValue}                 };
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,ExtendedMathWithoutComparer,The following statement contains a magic number: var results = new[] { -6' double.MinValue' float.MinValue };
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,PriorityQueue,The following statement contains a magic number: var itemsCollection = new List<IPriorityItem>                 {                     new PriorityQueueEntry(null' 0)'                     new PriorityQueueEntry(null' 7)'                     new PriorityQueueEntry(null' 3)'                     new PriorityQueueEntry(null' 4)'                     new PriorityQueueEntry(null' 2)'                     new PriorityQueueEntry(null' 6)'                     new PriorityQueueEntry(null' 2)'                     new PriorityQueueEntry(null' 4)'                     new PriorityQueueEntry(null' 1)'                     new PriorityQueueEntry(null' 6)'                     new PriorityQueueEntry(null' 0)'                 };
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,PriorityQueue,The following statement contains a magic number: var itemsCollection = new List<IPriorityItem>                 {                     new PriorityQueueEntry(null' 0)'                     new PriorityQueueEntry(null' 7)'                     new PriorityQueueEntry(null' 3)'                     new PriorityQueueEntry(null' 4)'                     new PriorityQueueEntry(null' 2)'                     new PriorityQueueEntry(null' 6)'                     new PriorityQueueEntry(null' 2)'                     new PriorityQueueEntry(null' 4)'                     new PriorityQueueEntry(null' 1)'                     new PriorityQueueEntry(null' 6)'                     new PriorityQueueEntry(null' 0)'                 };
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,PriorityQueue,The following statement contains a magic number: var itemsCollection = new List<IPriorityItem>                 {                     new PriorityQueueEntry(null' 0)'                     new PriorityQueueEntry(null' 7)'                     new PriorityQueueEntry(null' 3)'                     new PriorityQueueEntry(null' 4)'                     new PriorityQueueEntry(null' 2)'                     new PriorityQueueEntry(null' 6)'                     new PriorityQueueEntry(null' 2)'                     new PriorityQueueEntry(null' 4)'                     new PriorityQueueEntry(null' 1)'                     new PriorityQueueEntry(null' 6)'                     new PriorityQueueEntry(null' 0)'                 };
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,PriorityQueue,The following statement contains a magic number: var itemsCollection = new List<IPriorityItem>                 {                     new PriorityQueueEntry(null' 0)'                     new PriorityQueueEntry(null' 7)'                     new PriorityQueueEntry(null' 3)'                     new PriorityQueueEntry(null' 4)'                     new PriorityQueueEntry(null' 2)'                     new PriorityQueueEntry(null' 6)'                     new PriorityQueueEntry(null' 2)'                     new PriorityQueueEntry(null' 4)'                     new PriorityQueueEntry(null' 1)'                     new PriorityQueueEntry(null' 6)'                     new PriorityQueueEntry(null' 0)'                 };
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,PriorityQueue,The following statement contains a magic number: var itemsCollection = new List<IPriorityItem>                 {                     new PriorityQueueEntry(null' 0)'                     new PriorityQueueEntry(null' 7)'                     new PriorityQueueEntry(null' 3)'                     new PriorityQueueEntry(null' 4)'                     new PriorityQueueEntry(null' 2)'                     new PriorityQueueEntry(null' 6)'                     new PriorityQueueEntry(null' 2)'                     new PriorityQueueEntry(null' 4)'                     new PriorityQueueEntry(null' 1)'                     new PriorityQueueEntry(null' 6)'                     new PriorityQueueEntry(null' 0)'                 };
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,PriorityQueue,The following statement contains a magic number: var itemsCollection = new List<IPriorityItem>                 {                     new PriorityQueueEntry(null' 0)'                     new PriorityQueueEntry(null' 7)'                     new PriorityQueueEntry(null' 3)'                     new PriorityQueueEntry(null' 4)'                     new PriorityQueueEntry(null' 2)'                     new PriorityQueueEntry(null' 6)'                     new PriorityQueueEntry(null' 2)'                     new PriorityQueueEntry(null' 4)'                     new PriorityQueueEntry(null' 1)'                     new PriorityQueueEntry(null' 6)'                     new PriorityQueueEntry(null' 0)'                 };
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,PriorityQueue,The following statement contains a magic number: var itemsCollection = new List<IPriorityItem>                 {                     new PriorityQueueEntry(null' 0)'                     new PriorityQueueEntry(null' 7)'                     new PriorityQueueEntry(null' 3)'                     new PriorityQueueEntry(null' 4)'                     new PriorityQueueEntry(null' 2)'                     new PriorityQueueEntry(null' 6)'                     new PriorityQueueEntry(null' 2)'                     new PriorityQueueEntry(null' 4)'                     new PriorityQueueEntry(null' 1)'                     new PriorityQueueEntry(null' 6)'                     new PriorityQueueEntry(null' 0)'                 };
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,PriorityQueue,The following statement contains a magic number: var itemsCollection = new List<IPriorityItem>                 {                     new PriorityQueueEntry(null' 0)'                     new PriorityQueueEntry(null' 7)'                     new PriorityQueueEntry(null' 3)'                     new PriorityQueueEntry(null' 4)'                     new PriorityQueueEntry(null' 2)'                     new PriorityQueueEntry(null' 6)'                     new PriorityQueueEntry(null' 2)'                     new PriorityQueueEntry(null' 4)'                     new PriorityQueueEntry(null' 1)'                     new PriorityQueueEntry(null' 6)'                     new PriorityQueueEntry(null' 0)'                 };
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,PriorityQueue,The following statement contains a magic number: Assert.Equal(queue.Count' 11);
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,PriorityQueue,The following statement contains a magic number: Assert.Equal(((PriorityQueueEntry)firstItem1).Priority' 7);
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,PriorityQueue,The following statement contains a magic number: Assert.Equal(((PriorityQueueEntry)peekedItem1).Priority' 7);
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,PriorityQueue,The following statement contains a magic number: Assert.Equal(((PriorityQueueEntry)item1).Priority' 7);
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,PriorityQueue,The following statement contains a magic number: Assert.Equal(((PriorityQueueEntry)item2).Priority' 6);
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,PriorityQueue,The following statement contains a magic number: Assert.Equal(((PriorityQueueEntry)item3).Priority' 6);
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,PriorityQueue,The following statement contains a magic number: Assert.Equal(((PriorityQueueEntry)item4).Priority' 4);
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,PriorityQueue,The following statement contains a magic number: Assert.Equal(((PriorityQueueEntry)item5).Priority' 4);
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,PriorityQueue,The following statement contains a magic number: Assert.Equal(((PriorityQueueEntry)item6).Priority' 3);
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,PriorityQueue,The following statement contains a magic number: Assert.Equal(((PriorityQueueEntry)item7).Priority' 2);
Magic Number,Http2.Katana.Tests,BasicTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\BasicTests.cs,PriorityQueue,The following statement contains a magic number: Assert.Equal(((PriorityQueueEntry)item8).Priority' 2);
Magic Number,Http2.Katana.Tests,Http11Tests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\Http11Tests.cs,HeadersParsing,The following statement contains a magic number: Assert.Equal(rawHeaders.Length' 5);
Magic Number,Http2.Katana.Tests,Http11Tests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\Http11Tests.cs,HeadersParsing,The following statement contains a magic number: Assert.Equal(splittedRequestString[2]' "HTTP/1.1");
Magic Number,Http2.Katana.Tests,Http11Tests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\Http11Tests.cs,HeadersParsing,The following statement contains a magic number: Assert.Equal(headers.Count' 4);
Magic Number,Http2.Katana.Tests,Http11Tests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\Http11Tests.cs,HeadersParsing,The following statement contains a magic number: Assert.Equal(headers["X-Multiple-Header"].Length' 2);
Magic Number,Http2.Katana.Tests,Http2Tests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\Http2Tests.cs,StartHttp2Session,The following statement contains a magic number: headersReceivedEvent.WaitOne(10000);
Magic Number,Http2.Katana.Tests,Http2Tests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\Http2Tests.cs,StartMultipleSessions,The following statement contains a magic number: i < 4
Magic Number,Http2.Katana.Tests,Http2Tests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\Http2Tests.cs,SimpleTestDownload,The following statement contains a magic number: finalFrameReceivedEvent.WaitOne(60*1000);
Magic Number,Http2.Katana.Tests,Http2Tests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\Http2Tests.cs,SimpleTestDownload,The following statement contains a magic number: finalFrameReceivedEvent.WaitOne(60*1000);
Magic Number,Http2.Katana.Tests,Http2Tests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\Http2Tests.cs,UpgradeByHttp11,The following statement contains a magic number: finalFrameReceivedRaisedEvent.WaitOne(10000);
Magic Number,Http2.Katana.Tests,Http2Tests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\Http2Tests.cs,MultipleStreamsInOneSession,The following statement contains a magic number: int streamsQuantity = _useSecurePort ? 50 : 49;
Magic Number,Http2.Katana.Tests,Http2Tests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\Http2Tests.cs,MultipleStreamsInOneSession,The following statement contains a magic number: int streamsQuantity = _useSecurePort ? 50 : 49;
Magic Number,Http2.Katana.Tests,Http2Tests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\Http2Tests.cs,MultipleStreamsInOneSession,The following statement contains a magic number: delay.WaitOne(2000);
Magic Number,Http2.Katana.Tests,Http2Tests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\Http2Tests.cs,MultipleStreamsInOneSession,The following statement contains a magic number: delay.WaitOne(200);
Magic Number,Http2.Katana.Tests,Http2Tests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\Http2Tests.cs,MultipleStreamsInOneSession,The following statement contains a magic number: allResourcesDowloadedEvent.WaitOne(60000);
Magic Number,Http2.Katana.Tests,Http2Tests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\Http2Tests.cs,EmptyFileDownload,The following statement contains a magic number: finalFrameReceivedRaisedEvent.WaitOne(10000);
Magic Number,Http2.Katana.Tests,Http2Tests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\Http2Tests.cs,ParallelDownload,The following statement contains a magic number: const int tasksCount = 2;
Magic Number,Http2.Katana.Tests,Http2Tests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\Http2Tests.cs,ServerPush,The following statement contains a magic number: finalFrameReceivedEvent.WaitOne(30000);
Magic Number,Http2.Katana.Tests,Http2Tests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\Http2Tests.cs,ServerPush,The following statement contains a magic number: Assert.True(streamIds.Count == 2);
Magic Number,Http2.Katana.Tests,Http2Tests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\Http2Tests.cs,RequestPushedResource,The following statement contains a magic number: mockedAdapter.Protected().Setup("ProcessRequest"' ItExpr.IsAny<Http2Stream>()' ItExpr.IsAny<Frame>())                          .Callback<Http2Stream' Frame>((stream' frame) =>                              {                                  if (frame is HeadersFrame && stream.Id.Equals(2))                                  {                                      Uri pushUri;                                      Uri.TryCreate(                                          TestHelpers.GetAddress() +                                          stream.Headers.GetValue(CommonHeaders.Path).Replace("/"' "")' UriKind.Absolute'                                          out pushUri);                                       try                                      {                                          SendRequest(adapter' pushUri);                                      }                                      catch (ProtocolError e)                                      {                                          protocolErrorRaisedEvent.Set();                                      }                                  }                              });
Magic Number,Http2.Katana.Tests,Http2Tests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\Http2Tests.cs,RequestPushedResource,The following statement contains a magic number: protocolErrorRaisedEvent.WaitOne(10000);
Magic Number,Http2.Katana.Tests,StandardFact,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\Facts.cs,StandardFact,The following statement contains a magic number: Timeout = 15000;
Magic Number,Http2.Katana.Tests,LongTaskFact,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\Facts.cs,LongTaskFact,The following statement contains a magic number: Timeout = 90000;
Magic Number,Http2.Katana.Tests,VeryLongTaskFact,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\Http2.Katana.Tests\Facts.cs,VeryLongTaskFact,The following statement contains a magic number: Timeout = 180000;
Magic Number,Microsoft.Http2.Protocol.Extensions,Int32Extensions,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Extensions\Int32Extensions.cs,ToUVarInt,The following statement contains a magic number: Contract.Assert(prefix <= 7);
Magic Number,Microsoft.Http2.Owin.Middleware,Http2Middleware,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Microsoft.Http2.Owin.Middleware\Http2Middleware.cs,GetInitialRequestParams,The following statement contains a magic number: splittedSettings.Length < 2
Magic Number,Microsoft.Http2.Owin.Server,HttpSocketServer,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Microsoft.Http2.Owin.Server\HttpSocketServer.cs,HttpSocketServer,The following statement contains a magic number: ThreadPool.SetMaxThreads(30' 10);
Magic Number,Microsoft.Http2.Owin.Server,HttpSocketServer,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Microsoft.Http2.Owin.Server\HttpSocketServer.cs,HttpSocketServer,The following statement contains a magic number: ThreadPool.SetMaxThreads(30' 10);
Missing Default,Microsoft.Http2.Protocol,Http2MessageHandler,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Http2MessageHandler.cs,OnFrameReceivedHandler,The following switch statement is missing a default case: switch (frame.FrameType)             {                 case FrameType.Headers:                     if (ForbiddenHeaders.HasForbiddenHeader(stream.Headers))                     {                         stream.WriteRst(ResetStatusCode.ProtocolError);                         return;                     }                     ProcessRequest(stream' frame);                     break;                 case FrameType.Data:                     ProcessIncomingData(stream' frame);                     break;                 case FrameType.Settings:                     ProcessSettings(frame as SettingsFrame);                     break;             }
Missing Default,Microsoft.Http2.Protocol.Compression.HeadersDeltaCompression,CompressionProcessor,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Compression\HeadersDeltaCompression\CompressionProcessor\CompressionProcessor.cs,ParseHeader,The following switch statement is missing a default case: switch (type)             {                 case IndexationType.Indexed:                     return ProcessIndexed(index);                 case IndexationType.Incremental:                     return ProcessIncremental(bytes' index);                 case IndexationType.EncodingContextUpdate:                     return ProcessEncodingContextUpdate(index' changeTypeFlag);                 case IndexationType.NeverIndexed:                     return ProcessNeverIndexed(bytes' index);                 case IndexationType.WithoutIndexation:                     return ProcessWithoutIndexing(bytes' index);             }
Missing Default,Microsoft.Http2.Protocol.Compression.HeadersDeltaCompression,CompressionProcessor,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Compression\HeadersDeltaCompression\CompressionProcessor\CompressionProcessor.cs,GetIndex,The following switch statement is missing a default case: switch (type)             {                 case IndexationType.Incremental:                     prefix = (byte)UVarIntPrefix.Incremental;                     break;                 case IndexationType.WithoutIndexation:                     prefix = (byte)UVarIntPrefix.WithoutIndexing;                     break;                 case IndexationType.Indexed:                     prefix = (byte)UVarIntPrefix.Indexed;                     break;                 case IndexationType.EncodingContextUpdate:                     prefix = (byte)UVarIntPrefix.EncodingContextUpdate;                     break;                 case IndexationType.NeverIndexed:                     prefix = (byte) UVarIntPrefix.NeverIndexed;                     break;             }
Missing Default,OpenSSL.Crypto,CryptoKey,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\Crypto\CryptoKey.cs,Print,The following switch statement is missing a default case: switch (this.Type) 			{ 				case KeyType.RSA: 					GetRSA().Print(bio); 					break; 				case KeyType.DSA: 					GetDSA().Print(bio); 					break; 				case KeyType.EC: 					break; 				case KeyType.DH: 					GetDH().Print(bio); 					break; 			}
Missing Default,OpenSSL.SSL,SslCipher,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslCipher.cs,Initialize,The following switch statement is missing a default case: switch (raw.algorithms & SSL_MKEY_MASK) 			{ 				case SSL_kRSA: 					keyExchangeAlgorithm = ExchangeAlgorithmType.RsaKeyX; 					break; 				case SSL_kDHr: 				case SSL_kDHd: 				case SSL_kEDH: 					keyExchangeAlgorithm = ExchangeAlgorithmType.DiffieHellman; 					break; 				case SSL_kKRB5:         /* VRS */ 				case SSL_KRB5:          /* VRS */ 					keyExchangeAlgorithm = ExchangeAlgorithmType.Kerberos; 					break; 				case SSL_kFZA: 					keyExchangeAlgorithm = ExchangeAlgorithmType.Fortezza; 					break; 				case SSL_kECDH: 				case SSL_kECDHE: 					keyExchangeAlgorithm = ExchangeAlgorithmType.ECDiffieHellman; 					break; 			}
Missing Default,OpenSSL.SSL,SslCipher,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslCipher.cs,Initialize,The following switch statement is missing a default case: switch (raw.algorithms & SSL_AUTH_MASK) 			{ 				case SSL_aRSA: 					authMethod = AuthenticationMethod.Rsa; 					break; 				case SSL_aDSS: 					authMethod = AuthenticationMethod.Dss; 					break; 				case SSL_aDH: 					authMethod = AuthenticationMethod.DiffieHellman; 					break; 				case SSL_aKRB5:         /* VRS */ 				case SSL_KRB5:          /* VRS */ 					authMethod = AuthenticationMethod.Kerberos; 					break; 				case SSL_aFZA: 				case SSL_aNULL: 					authMethod = AuthenticationMethod.None; 					break; 				case SSL_aECDSA: 					authMethod = AuthenticationMethod.ECDsa; 					break; 			}
Missing Default,OpenSSL.SSL,SslCipher,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslCipher.cs,Initialize,The following switch statement is missing a default case: switch (raw.algorithms & SSL_ENC_MASK) 			{ 				case SSL_DES: 					cipherAlgorithm = CipherAlgorithmType.Des; 					if (isExport && keyLength == 5) 					{ 						cipherStrength = 40; 					} 					else 					{ 						cipherStrength = 56; 					} 					break; 				case SSL_3DES: 					cipherAlgorithm = CipherAlgorithmType.TripleDes; 					cipherStrength = 168; 					break; 				case SSL_RC4: 					cipherAlgorithm = CipherAlgorithmType.Rc4; 					if (isExport) 					{ 						if (keyLength == 5) 						{ 							cipherStrength = 40; 						} 						else 						{ 							cipherStrength = 56; 						} 					} 					else 					{ 						if ((raw.algorithm2 & SSL2_CF_8_BYTE_ENC) == SSL2_CF_8_BYTE_ENC) 						{ 							cipherStrength = 64; 						} 						else 						{ 							cipherStrength = 128; 						} 					} 					break; 				case SSL_RC2: 					cipherAlgorithm = CipherAlgorithmType.Rc2; 					if (isExport) 					{ 						if (keyLength == 5) 						{ 							cipherStrength = 40; 						} 						else 						{ 							cipherStrength = 56; 						} 					} 					else 					{ 						cipherStrength = 128; 					} 					break; 				case SSL_IDEA: 					cipherAlgorithm = CipherAlgorithmType.Idea; 					cipherStrength = 128; 					break; 				case SSL_eFZA: 					cipherAlgorithm = CipherAlgorithmType.Fortezza; 					break; 				case SSL_eNULL: 					cipherAlgorithm = CipherAlgorithmType.None; 					break; 				case SSL_AES: 					switch (raw.strength_bits) 					{ 						case 128: cipherAlgorithm = CipherAlgorithmType.Aes128; break; 						case 192: cipherAlgorithm = CipherAlgorithmType.Aes192; break; 						case 256: cipherAlgorithm = CipherAlgorithmType.Aes256; break; 					} 					break; 				case SSL_CAMELLIA: 					switch (raw.strength_bits) 					{ 						case 128: cipherAlgorithm = CipherAlgorithmType.Camellia128; break; 						case 256: cipherAlgorithm = CipherAlgorithmType.Camellia256; break; 					} 					break; 				case SSL_SEED: 					cipherAlgorithm = CipherAlgorithmType.Seed; 					cipherStrength = 128; 					break; 			}
Missing Default,OpenSSL.SSL,SslCipher,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslCipher.cs,Initialize,The following switch statement is missing a default case: switch (raw.strength_bits) 					{ 						case 128: cipherAlgorithm = CipherAlgorithmType.Aes128; break; 						case 192: cipherAlgorithm = CipherAlgorithmType.Aes192; break; 						case 256: cipherAlgorithm = CipherAlgorithmType.Aes256; break; 					}
Missing Default,OpenSSL.SSL,SslCipher,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\OpenSsl\ManagedOpenSsl\SSL\SslCipher.cs,Initialize,The following switch statement is missing a default case: switch (raw.strength_bits) 					{ 						case 128: cipherAlgorithm = CipherAlgorithmType.Camellia128; break; 						case 256: cipherAlgorithm = CipherAlgorithmType.Camellia256; break; 					}
