Implementation smell,Namespace,Class,File,Method,Description
Long Method,Microsoft.Http2.Protocol,Http2Session,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Http2Session\Http2SessionFrameHandling.cs,HandlePushPromiseFrame,The method has 121 lines of code.
Long Method,Microsoft.Http2.Protocol,Http2Session,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Http2Session\Http2SessionFrameHandling.cs,DispatchIncomingFrame,The method has 139 lines of code.
Complex Method,Microsoft.Http2.Protocol.Framing,FrameReader,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameReader.cs,GetFrameType,Cyclomatic complexity of the method is 11
Complex Method,Microsoft.Http2.Protocol,Http2Session,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Http2Session\Http2SessionFrameHandling.cs,HandleHeaders,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.Http2.Protocol,Http2Session,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Http2Session\Http2SessionFrameHandling.cs,HandleContinuation,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Http2.Protocol,Http2Session,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Http2Session\Http2SessionFrameHandling.cs,HandleSettingsFrame,Cyclomatic complexity of the method is 12
Complex Method,Microsoft.Http2.Protocol,Http2Session,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Http2Session\Http2SessionFrameHandling.cs,HandlePushPromiseFrame,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Http2.Protocol,Http2Session,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Http2Session\Http2SessionFrameHandling.cs,Http2Session,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Http2.Protocol,Http2Session,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Http2Session\Http2SessionFrameHandling.cs,DispatchIncomingFrame,Cyclomatic complexity of the method is 20
Complex Method,Microsoft.Http2.Protocol,Http2Session,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Http2Session\Http2SessionFrameHandling.cs,Close,Cyclomatic complexity of the method is 11
Complex Method,Microsoft.Http2.Protocol.Compression.HeadersDeltaCompression,CompressionProcessor,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Compression\HeadersDeltaCompression\CompressionProcessor\CompressionProcessor.cs,GetIndex,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Http2.Protocol.IO,WriteQueue,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\IO\WriteQueue.cs,PumpToStream,Cyclomatic complexity of the method is 9
Long Parameter List,Microsoft.Http2.Protocol.Framing,PushPromiseFrame,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\PushPromiseFrame.cs,PushPromiseFrame,The method has 5 parameters. Parameters: streamId' promisedStreamId' hasPadding' isEndHeaders' headers
Long Parameter List,Microsoft.Http2.Protocol.Framing,HeadersFrame,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\HeadersFrame.cs,HeadersFrame,The method has 5 parameters. Parameters: streamId' hasPadding' streamDependency' weight' exclusive
Long Parameter List,Microsoft.Http2.Protocol,Http2Session,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Http2Session\Http2SessionFrameHandling.cs,Http2Session,The method has 8 parameters. Parameters: stream' end' usePriorities' useFlowControl' isSecure' cancel' initialWindowSize' maxConcurrentStreams
Long Parameter List,Microsoft.Http2.Protocol,Http2Stream,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Http2Stream.cs,Http2Stream,The method has 5 parameters. Parameters: headers' id' writeQueue' flowCrtlManager' priority
Long Identifier,Microsoft.Http2.Protocol,Constants,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Constants.cs,,The length of the parameter InitialFlowControlOptionsValue is 30.
Long Identifier,Microsoft.Http2.Protocol.Compression.HeadersDeltaCompression,CompressionProcessor,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Compression\HeadersDeltaCompression\CompressionProcessor\CompressionProcessor.cs,,The length of the parameter _isSettingHeaderTableSizeReceived is 33.
Long Statement,Microsoft.Http2.Protocol,Http2Session,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Http2Session\Http2SessionFrameHandling.cs,HandleWindowUpdateFrame,The length of the statement  "                throw new ProtocolError(ResetStatusCode.FlowControlError' String.Format("Incorrect window update delta : {0}"' windowUpdateFrame.Delta));" is 137.
Long Statement,Microsoft.Http2.Protocol,Http2Session,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Http2Session\Http2SessionFrameHandling.cs,GetSessionHeaderAndVerifyIt,The length of the statement  "                throw new TimeoutException(String.Format("Session header was not received in timeout {0}"' incomingClient.ReadTimeout));" is 120.
Long Statement,Microsoft.Http2.Protocol.Utils,Http2Logger,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Utils\Http2Logger.cs,LogError,The length of the statement  "                string outString = string.Format("[{0}] ThreadId:{1} ERROR: {2}"' DateTime.Now' Thread.CurrentThread.ManagedThreadId' errString);" is 129.
Long Statement,Microsoft.Http2.Protocol.Utils,Http2Logger,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Utils\Http2Logger.cs,LogDebug,The length of the statement  "                string outString = string.Format("[{0}] ThreadId:{1} DBG: {2}"' DateTime.Now' Thread.CurrentThread.ManagedThreadId' debugString);" is 129.
Complex Conditional,Microsoft.Http2.Protocol.Framing,HeadersSequence,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\HeadersSequence.cs,AddHeaders,The conditional expression  "(newFrame is HeadersFrame && newFrame.IsEndHeaders)                 || (newFrame is ContinuationFrame && newFrame.IsEndHeaders)                 || newFrame is PushPromiseFrame && (newFrame as PushPromiseFrame).IsEndHeaders"  is complex.
Complex Conditional,Microsoft.Http2.Protocol,ForbiddenHeaders,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\ForbiddenHeaders.cs,HasForbiddenHeader,The conditional expression  "header.Key.Equals(Connection' StringComparison.OrdinalIgnoreCase)                     || header.Key.Equals(KeepAlive' StringComparison.OrdinalIgnoreCase)                     || header.Key.Equals(ProxyConnection' StringComparison.OrdinalIgnoreCase)                     || header.Key.Equals(TE' StringComparison.OrdinalIgnoreCase)                     || header.Key.Equals(TransferEncoding' StringComparison.OrdinalIgnoreCase)                     || header.Key.Equals(Upgrade' StringComparison.OrdinalIgnoreCase)"  is complex.
Complex Conditional,Microsoft.Http2.Protocol,Http2Session,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Http2Session\Http2SessionFrameHandling.cs,HandleWindowUpdateFrame,The conditional expression  "!(stream.Opened || stream.HalfClosedRemote || stream.HalfClosedLocal || stream.Closed)"  is complex.
Complex Conditional,Microsoft.Http2.Protocol,Http2Session,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Http2Session\Http2SessionFrameHandling.cs,HandlePushPromiseFrame,The conditional expression  "frame.StreamId % 2 == 0                 || frame.PromisedStreamId == 0                 || (frame.PromisedStreamId % 2) != 0                 || frame.PromisedStreamId < _lastPromisedId                 || !((StreamDictionary[frame.StreamId].Opened || StreamDictionary[frame.StreamId].HalfClosedLocal))"  is complex.
Empty Catch Block,Microsoft.Http2.Protocol,Http2MessageHandler,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Http2MessageHandler.cs,StartSessionAsync,The method has an empty catch block.
Magic Number,Microsoft.Http2.Protocol.Framing,ContinuationFrame,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\ContinuationFrame.cs,ContinuationFrame,The following statement contains a magic number: var padLow = (byte) new Random().Next(1' 7);
Magic Number,Microsoft.Http2.Protocol.Framing,ContinuationFrame,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\ContinuationFrame.cs,ContinuationFrame,The following statement contains a magic number: int padLength = padHigh * 256 + padLow;
Magic Number,Microsoft.Http2.Protocol.Framing,PushPromiseFrame,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\PushPromiseFrame.cs,PushPromiseFrame,The following statement contains a magic number: var padLow = (byte)new Random().Next(1' 7);
Magic Number,Microsoft.Http2.Protocol.Framing,DataFrame,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\DataFrame.cs,DataFrame,The following statement contains a magic number: var padLow = (byte) new Random().Next(1' 7);
Magic Number,Microsoft.Http2.Protocol.Framing,DataFrame,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\DataFrame.cs,DataFrame,The following statement contains a magic number: int padLength = padHigh * 256 + padLow;
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,SetBit,The following statement contains a magic number: Contract.Assert(offset <= 7);
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,SetBit,The following statement contains a magic number: Contract.Assert(offset <= 7);
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,GetBit,The following statement contains a magic number: Contract.Assert(offset <= 7);
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,GetBit,The following statement contains a magic number: return (input >> offset) % 2 == 1;
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,GetHigh3BitsAt,The following statement contains a magic number: return ((0xE0 & buffer[offset]) >> 5);
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,SetHigh3BitsAt,The following statement contains a magic number: Contract.Assert(value >= 0 && value <= 7);
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,SetHigh3BitsAt,The following statement contains a magic number: byte upper3Bits = (byte)(value << 5);
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Get15BitsAt,The following statement contains a magic number: return (highByte << 8) | buffer[offset + 1];
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Set15BitsAt,The following statement contains a magic number: buffer[offset] |= (byte)((value >> 8) & 0x7F);
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Get16BitsAt,The following statement contains a magic number: return (buffer[offset] << 8) | buffer[offset + 1];
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Set16BitsAt,The following statement contains a magic number: buffer[offset] = (byte)(value >> 8);
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Get24BitsAt,The following statement contains a magic number: Contract.Assert(offset >= 0 && offset + 2 < buffer.Length);
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Get24BitsAt,The following statement contains a magic number: return (buffer[offset] << 16) | (buffer[offset + 1] << 8) | buffer[offset + 2];
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Get24BitsAt,The following statement contains a magic number: return (buffer[offset] << 16) | (buffer[offset + 1] << 8) | buffer[offset + 2];
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Get24BitsAt,The following statement contains a magic number: return (buffer[offset] << 16) | (buffer[offset + 1] << 8) | buffer[offset + 2];
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Set24BitsAt,The following statement contains a magic number: Contract.Assert(offset >= 0 && offset + 2 < buffer.Length);
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Set24BitsAt,The following statement contains a magic number: buffer[offset] = (byte)(value >> 16);
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Set24BitsAt,The following statement contains a magic number: buffer[offset + 1] = (byte)(value >> 8);
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Set24BitsAt,The following statement contains a magic number: buffer[offset + 2] = (byte)value;
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Get31BitsAt,The following statement contains a magic number: Contract.Assert(offset >= 0 && offset + 3 < buffer.Length);
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Get31BitsAt,The following statement contains a magic number: return (highByte << 24)                 | buffer[offset + 1] << 16                 | buffer[offset + 2] << 8                 | buffer[offset + 3];
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Get31BitsAt,The following statement contains a magic number: return (highByte << 24)                 | buffer[offset + 1] << 16                 | buffer[offset + 2] << 8                 | buffer[offset + 3];
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Get31BitsAt,The following statement contains a magic number: return (highByte << 24)                 | buffer[offset + 1] << 16                 | buffer[offset + 2] << 8                 | buffer[offset + 3];
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Get31BitsAt,The following statement contains a magic number: return (highByte << 24)                 | buffer[offset + 1] << 16                 | buffer[offset + 2] << 8                 | buffer[offset + 3];
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Get31BitsAt,The following statement contains a magic number: return (highByte << 24)                 | buffer[offset + 1] << 16                 | buffer[offset + 2] << 8                 | buffer[offset + 3];
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Set31BitsAt,The following statement contains a magic number: Contract.Assert(offset >= 0 && offset + 3 < buffer.Length);
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Set31BitsAt,The following statement contains a magic number: buffer[offset] |= (byte)((value >> 24) & 0x7F);
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Set31BitsAt,The following statement contains a magic number: buffer[offset + 1] = (byte)(value >> 16);
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Set31BitsAt,The following statement contains a magic number: buffer[offset + 2] = (byte)(value >> 8);
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Set31BitsAt,The following statement contains a magic number: buffer[offset + 2] = (byte)(value >> 8);
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Set31BitsAt,The following statement contains a magic number: buffer[offset + 3] = (byte)value;
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Get32BitsAt,The following statement contains a magic number: Contract.Assert(offset >= 0 && offset + 3 < buffer.Length);
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Get32BitsAt,The following statement contains a magic number: return (buffer[offset] << 24)                 | buffer[offset + 1] << 16                 | buffer[offset + 2] << 8                 | buffer[offset + 3];
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Get32BitsAt,The following statement contains a magic number: return (buffer[offset] << 24)                 | buffer[offset + 1] << 16                 | buffer[offset + 2] << 8                 | buffer[offset + 3];
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Get32BitsAt,The following statement contains a magic number: return (buffer[offset] << 24)                 | buffer[offset + 1] << 16                 | buffer[offset + 2] << 8                 | buffer[offset + 3];
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Get32BitsAt,The following statement contains a magic number: return (buffer[offset] << 24)                 | buffer[offset + 1] << 16                 | buffer[offset + 2] << 8                 | buffer[offset + 3];
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Get32BitsAt,The following statement contains a magic number: return (buffer[offset] << 24)                 | buffer[offset + 1] << 16                 | buffer[offset + 2] << 8                 | buffer[offset + 3];
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Set32BitsAt,The following statement contains a magic number: Contract.Assert(offset >= 0 && offset + 3 < buffer.Length);
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Set32BitsAt,The following statement contains a magic number: buffer[offset] = (byte)(value >> 24);
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Set32BitsAt,The following statement contains a magic number: buffer[offset + 1] = (byte)(value >> 16);
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Set32BitsAt,The following statement contains a magic number: buffer[offset + 2] = (byte)(value >> 8);
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Set32BitsAt,The following statement contains a magic number: buffer[offset + 2] = (byte)(value >> 8);
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,Set32BitsAt,The following statement contains a magic number: buffer[offset + 3] = (byte)value;
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,SerializeHeaderBlock,The following statement contains a magic number: int encodedLength = 4 // 32 bit count of name value pairs                 + 8 * pairs.Count;
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,SerializeHeaderBlock,The following statement contains a magic number: int encodedLength = 4 // 32 bit count of name value pairs                 + 8 * pairs.Count;
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,SerializeHeaderBlock,The following statement contains a magic number: int offset = 4;
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,SerializeHeaderBlock,The following statement contains a magic number: offset += 4;
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,SerializeHeaderBlock,The following statement contains a magic number: offset += 4;
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,DeserializeHeaderBlock,The following statement contains a magic number: offset += 4;
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,DeserializeHeaderBlock,The following statement contains a magic number: offset += 4;
Magic Number,Microsoft.Http2.Protocol.Framing,FrameHelper,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\FrameHelper.cs,DeserializeHeaderBlock,The following statement contains a magic number: offset += 4;
Magic Number,Microsoft.Http2.Protocol.Framing,HeadersFrame,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Framing\HeadersFrame.cs,HeadersFrame,The following statement contains a magic number: var padLow = (byte) new Random().Next(1' 7);
Magic Number,Microsoft.Http2.Protocol,StreamDictionary,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\StreamDictionary.cs,GetOpenedStreamsBy,The following statement contains a magic number: return FlowControlledStreams.Count(element => element.Key % 2 != 0) +                        NonFlowControlledStreams.Count(element => element.Key % 2 != 0);
Magic Number,Microsoft.Http2.Protocol,StreamDictionary,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\StreamDictionary.cs,GetOpenedStreamsBy,The following statement contains a magic number: return FlowControlledStreams.Count(element => element.Key % 2 != 0) +                        NonFlowControlledStreams.Count(element => element.Key % 2 != 0);
Magic Number,Microsoft.Http2.Protocol,StreamDictionary,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\StreamDictionary.cs,GetOpenedStreamsBy,The following statement contains a magic number: return FlowControlledStreams.Count(element => element.Key % 2 == 0) +                    NonFlowControlledStreams.Count(element => element.Key % 2 == 0);
Magic Number,Microsoft.Http2.Protocol,StreamDictionary,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\StreamDictionary.cs,GetOpenedStreamsBy,The following statement contains a magic number: return FlowControlledStreams.Count(element => element.Key % 2 == 0) +                    NonFlowControlledStreams.Count(element => element.Key % 2 == 0);
Magic Number,Microsoft.Http2.Protocol,HeadersSequenceList,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\HeadersSequenceList.cs,HeadersSequenceList,The following statement contains a magic number: _collection = initialCollection != null ?                              new List<HeadersSequence>(initialCollection) :                              new List<HeadersSequence>(64);
Magic Number,Microsoft.Http2.Protocol,HeadersList,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\HeadersList.cs,Add,The following statement contains a magic number: StoredHeadersSize += header.Key.Length + header.Value.Length + 32;
Magic Number,Microsoft.Http2.Protocol,HeadersList,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\HeadersList.cs,Remove,The following statement contains a magic number: StoredHeadersSize -= header.Key.Length + header.Value.Length + 32;
Magic Number,Microsoft.Http2.Protocol,HeadersList,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\HeadersList.cs,Insert,The following statement contains a magic number: StoredHeadersSize += header.Key.Length + header.Value.Length + 32;
Magic Number,Microsoft.Http2.Protocol,HeadersList,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\HeadersList.cs,RemoveAt,The following statement contains a magic number: StoredHeadersSize -= header.Key.Length + header.Value.Length + 32;
Magic Number,Microsoft.Http2.Protocol,HeadersList,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\HeadersList.cs,RemoveAll,The following statement contains a magic number: int toDeleteSize = predMatch.Sum(header => header.Key.Length + header.Value.Length + 32);
Magic Number,Microsoft.Http2.Protocol,Http2Session,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Http2Session\Http2SessionFrameHandling.cs,HandlePushPromiseFrame,The following statement contains a magic number: frame.StreamId % 2 == 0                 || frame.PromisedStreamId == 0                 || (frame.PromisedStreamId % 2) != 0                 || frame.PromisedStreamId < _lastPromisedId                 || !((StreamDictionary[frame.StreamId].Opened || StreamDictionary[frame.StreamId].HalfClosedLocal))
Magic Number,Microsoft.Http2.Protocol,Http2Session,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Http2Session\Http2SessionFrameHandling.cs,HandlePushPromiseFrame,The following statement contains a magic number: frame.StreamId % 2 == 0                 || frame.PromisedStreamId == 0                 || (frame.PromisedStreamId % 2) != 0                 || frame.PromisedStreamId < _lastPromisedId                 || !((StreamDictionary[frame.StreamId].Opened || StreamDictionary[frame.StreamId].HalfClosedLocal))
Magic Number,Microsoft.Http2.Protocol,Http2Session,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Http2Session\Http2SessionFrameHandling.cs,Http2Session,The following statement contains a magic number: _lastId = 3;
Magic Number,Microsoft.Http2.Protocol,Http2Session,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Http2Session\Http2SessionFrameHandling.cs,GetNextId,The following statement contains a magic number: _lastId += 2;
Magic Number,Microsoft.Http2.Protocol,Http2Session,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Http2Session\Http2SessionFrameHandling.cs,WriteSettings,The following statement contains a magic number: !isAck && !_settingsAckReceived.WaitOne(60000)
Magic Number,Microsoft.Http2.Protocol,Http2Session,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Http2Session\Http2SessionFrameHandling.cs,Ping,The following statement contains a magic number: !_pingReceived.WaitOne(3000)
Magic Number,Microsoft.Http2.Protocol,Http2Session,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Http2Session\Http2SessionFrameHandling.cs,Close,The following statement contains a magic number: goAwayDelay.WaitOne(500);
Magic Number,Microsoft.Http2.Protocol,Http2Stream,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Http2Stream.cs,Http2Stream,The following statement contains a magic number: _unshippedFrames = new Queue<DataFrame>(16);
Magic Number,Microsoft.Http2.Protocol,Http2Stream,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Http2Stream.cs,WritePushPromise,The following statement contains a magic number: Id % 2 != 0 && promisedId % 2 != 0
Magic Number,Microsoft.Http2.Protocol,Http2Stream,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Http2Stream.cs,WritePushPromise,The following statement contains a magic number: Id % 2 != 0 && promisedId % 2 != 0
Magic Number,Microsoft.Http2.Protocol.Compression.HeadersDeltaCompression,CompressionProcessor,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Compression\HeadersDeltaCompression\CompressionProcessor\CompressionProcessor.cs,CompressionProcessor,The following statement contains a magic number: _maxHeaderByteSize = 4096;
Magic Number,Microsoft.Http2.Protocol.Compression.HeadersDeltaCompression,CompressionProcessor,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Compression\HeadersDeltaCompression\CompressionProcessor\CompressionProcessor.cs,InsertToHeadersTable,The following statement contains a magic number: int headerLen = header.Key.Length + header.Value.Length + 32;
Magic Number,Microsoft.Http2.Protocol.Compression.HeadersDeltaCompression,CompressionProcessor,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Compression\HeadersDeltaCompression\CompressionProcessor\CompressionProcessor.cs,EncodeString,The following statement contains a magic number: const byte prefix = 7;
Magic Number,Microsoft.Http2.Protocol.Compression.HeadersDeltaCompression,CompressionProcessor,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Compression\HeadersDeltaCompression\CompressionProcessor\CompressionProcessor.cs,ProcessCookie,The following statement contains a magic number: toProcess.Add(new KeyValuePair<string' string>(CommonHeaders.Cookie'                                                                cookie.ToString(cookie.Length - 2' 2)));
Magic Number,Microsoft.Http2.Protocol.Compression.HeadersDeltaCompression,CompressionProcessor,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Compression\HeadersDeltaCompression\CompressionProcessor\CompressionProcessor.cs,ProcessCookie,The following statement contains a magic number: toProcess.Add(new KeyValuePair<string' string>(CommonHeaders.Cookie'                                                                cookie.ToString(cookie.Length - 2' 2)));
Magic Number,Microsoft.Http2.Protocol.Compression.Huffman,BinaryConverter,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Compression\HuffmanCompression\BinaryConverter.cs,ToBits,The following statement contains a magic number: var result = new bool[bytes.Length * 8];
Magic Number,Microsoft.Http2.Protocol.Compression.Huffman,BinaryConverter,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Compression\HuffmanCompression\BinaryConverter.cs,ToBits,The following statement contains a magic number: result[i*8 + j] = GetBit(bytes[i]' (byte)(7 - j));
Magic Number,Microsoft.Http2.Protocol.Compression.Huffman,BinaryConverter,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Compression\HuffmanCompression\BinaryConverter.cs,ToBits,The following statement contains a magic number: result[i*8 + j] = GetBit(bytes[i]' (byte)(7 - j));
Magic Number,Microsoft.Http2.Protocol.Compression.Huffman,BinaryConverter,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Compression\HuffmanCompression\BinaryConverter.cs,ToBits,The following statement contains a magic number: j < 8
Magic Number,Microsoft.Http2.Protocol.Compression.Huffman,BinaryConverter,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Compression\HuffmanCompression\BinaryConverter.cs,ToBytes,The following statement contains a magic number: var result = new byte[bools.Count % 8 == 0 ? bools.Count / 8 : bools.Count / 8 + 1];
Magic Number,Microsoft.Http2.Protocol.Compression.Huffman,BinaryConverter,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Compression\HuffmanCompression\BinaryConverter.cs,ToBytes,The following statement contains a magic number: var result = new byte[bools.Count % 8 == 0 ? bools.Count / 8 : bools.Count / 8 + 1];
Magic Number,Microsoft.Http2.Protocol.Compression.Huffman,BinaryConverter,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Compression\HuffmanCompression\BinaryConverter.cs,ToBytes,The following statement contains a magic number: var result = new byte[bools.Count % 8 == 0 ? bools.Count / 8 : bools.Count / 8 + 1];
Magic Number,Microsoft.Http2.Protocol.Compression.Huffman,BinaryConverter,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Compression\HuffmanCompression\BinaryConverter.cs,ToBytes,The following statement contains a magic number: byte count = 8;
Magic Number,Microsoft.Http2.Protocol.Compression.Huffman,BinaryConverter,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Compression\HuffmanCompression\BinaryConverter.cs,ToBytes,The following statement contains a magic number: count = roffset >= 8 ? (byte)8 : (byte)roffset;
Magic Number,Microsoft.Http2.Protocol.Compression.Huffman,BinaryConverter,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Compression\HuffmanCompression\BinaryConverter.cs,ToBytes,The following statement contains a magic number: count = roffset >= 8 ? (byte)8 : (byte)roffset;
Magic Number,Microsoft.Http2.Protocol.Compression.Huffman,BinaryConverter,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Compression\HuffmanCompression\BinaryConverter.cs,GetByte,The following statement contains a magic number: count > 8
Magic Number,Microsoft.Http2.Protocol.Compression.Huffman,BinaryConverter,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Compression\HuffmanCompression\BinaryConverter.cs,GetByte,The following statement contains a magic number: byte bitIndex = 7;
Magic Number,Microsoft.Http2.Protocol.Compression.Huffman,BinaryConverter,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Compression\HuffmanCompression\BinaryConverter.cs,GetBit,The following statement contains a magic number: pos > 7
Magic Number,Microsoft.Http2.Protocol.Compression.Huffman,BitTree,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Compression\HuffmanCompression\BitTree.cs,IsValidPadding,The following statement contains a magic number: symbolBits.Count >= 8
Magic Number,Microsoft.Http2.Protocol.Compression.Huffman,HuffmanCompressionProcessor,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Compression\HuffmanCompression\HuffmanCompressor.cs,Compress,The following statement contains a magic number: int temp = 8 - huffmanEncodedMessage.Count % 8;
Magic Number,Microsoft.Http2.Protocol.Compression.Huffman,HuffmanCompressionProcessor,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Compression\HuffmanCompression\HuffmanCompressor.cs,Compress,The following statement contains a magic number: int temp = 8 - huffmanEncodedMessage.Count % 8;
Magic Number,Microsoft.Http2.Protocol.Compression.Huffman,HuffmanCompressionProcessor,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Compression\HuffmanCompression\HuffmanCompressor.cs,Compress,The following statement contains a magic number: int numberOfBitsInPadding = temp == 8 ? 0 : temp;
Magic Number,Microsoft.Http2.Protocol.Extensions,Int32Extensions,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Extensions\Int32Extensions.cs,ToUVarInt,The following statement contains a magic number: Contract.Assert(prefix <= 7);
Magic Number,Microsoft.Http2.Protocol.IO,WriteQueue,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\IO\WriteQueue.cs,PumpToStream,The following statement contains a magic number: byte[] padding = new byte[paddingFrame.PadHigh * 256 + paddingFrame.PadLow];
Missing Default,Microsoft.Http2.Protocol,Http2MessageHandler,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Http2MessageHandler.cs,OnFrameReceivedHandler,The following switch statement is missing a default case: switch (frame.FrameType)             {                 case FrameType.Headers:                     if (ForbiddenHeaders.HasForbiddenHeader(stream.Headers))                     {                         stream.WriteRst(ResetStatusCode.ProtocolError);                         return;                     }                     ProcessRequest(stream' frame);                     break;                 case FrameType.Data:                     ProcessIncomingData(stream' frame);                     break;                 case FrameType.Settings:                     ProcessSettings(frame as SettingsFrame);                     break;             }
Missing Default,Microsoft.Http2.Protocol.Compression.HeadersDeltaCompression,CompressionProcessor,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Compression\HeadersDeltaCompression\CompressionProcessor\CompressionProcessor.cs,ParseHeader,The following switch statement is missing a default case: switch (type)             {                 case IndexationType.Indexed:                     return ProcessIndexed(index);                 case IndexationType.Incremental:                     return ProcessIncremental(bytes' index);                 case IndexationType.EncodingContextUpdate:                     return ProcessEncodingContextUpdate(index' changeTypeFlag);                 case IndexationType.NeverIndexed:                     return ProcessNeverIndexed(bytes' index);                 case IndexationType.WithoutIndexation:                     return ProcessWithoutIndexing(bytes' index);             }
Missing Default,Microsoft.Http2.Protocol.Compression.HeadersDeltaCompression,CompressionProcessor,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\src\Libraries\Microsoft.Http2.Protocol\Compression\HeadersDeltaCompression\CompressionProcessor\CompressionProcessor.cs,GetIndex,The following switch statement is missing a default case: switch (type)             {                 case IndexationType.Incremental:                     prefix = (byte)UVarIntPrefix.Incremental;                     break;                 case IndexationType.WithoutIndexation:                     prefix = (byte)UVarIntPrefix.WithoutIndexing;                     break;                 case IndexationType.Indexed:                     prefix = (byte)UVarIntPrefix.Indexed;                     break;                 case IndexationType.EncodingContextUpdate:                     prefix = (byte)UVarIntPrefix.EncodingContextUpdate;                     break;                 case IndexationType.NeverIndexed:                     prefix = (byte) UVarIntPrefix.NeverIndexed;                     break;             }
