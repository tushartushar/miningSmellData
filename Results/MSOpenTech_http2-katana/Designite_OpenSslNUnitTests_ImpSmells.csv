Implementation smell,Namespace,Class,File,Method,Description
Complex Method,UnitTests,TestRandom,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestRandom.cs,TestCase,Cyclomatic complexity of the method is 12
Long Parameter List,UnitTests,TestRSA,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestRSA.cs,SetKey,The method has 9 parameters. Parameters: key' n' e' d' p' q' dmp1' dmq1' iqmp
Long Identifier,UnitTests,SyncServerTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestServer.cs,,The length of the parameter clientRemoteCertificateValidationCallback is 41.
Long Identifier,UnitTests,SyncServerTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestServer.cs,,The length of the parameter clientLocalCertificateSelectionCallback is 39.
Long Identifier,UnitTests,SyncServerTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestServer.cs,,The length of the parameter serverRemoteCertificateValidationCallback is 41.
Long Statement,UnitTests,SyncServerTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestServer.cs,DoServerReadWrite,The length of the statement  "					Console.WriteLine("BasicServerTest Read Failure:\nExpected:{0}\nGot:{1}"' clientMessage.ToString()' serverReadBuffer.ToString());" is 129.
Long Statement,UnitTests,SyncServerTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestServer.cs,DoClientReadWrite,The length of the statement  "					Console.WriteLine("BasicServerTest Read Failure:\nExpected:{0}\nGot:{1}"' serverMessage.ToString()' clientReadBuffer.ToString());" is 129.
Magic Number,UnitTests,SourceForgeBugs,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\SourceForgeBugs.cs,Bug3018093_2,The following statement contains a magic number: Assert.AreEqual(2' fsn1.Next());
Magic Number,UnitTests,SourceForgeBugs,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\SourceForgeBugs.cs,Bug3018093_2,The following statement contains a magic number: Assert.AreEqual(2' fsn2.Next());
Magic Number,UnitTests,TestAES,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestAES.cs,TestCase,The following statement contains a magic number: const int PKCS5_SALT_LEN = 8;
Magic Number,UnitTests,TestDH,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestDH.cs,TestCase,The following statement contains a magic number: DH a = new DH(64' DH.Generator5' cb' Console.Out);
Magic Number,UnitTests,TestDH,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestDH.cs,TestCase,The following statement contains a magic number: aout.Length < 4 || astr != bstr
Magic Number,UnitTests,TestDH,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestDH.cs,OnStatus,The following statement contains a magic number: switch (p) { 				case 0: cout.Write('.'); break; 				case 1: cout.Write('+'); break; 				case 2: cout.Write('*'); break; 				case 3: cout.WriteLine(); break; 			}
Magic Number,UnitTests,TestDH,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestDH.cs,OnStatus,The following statement contains a magic number: switch (p) { 				case 0: cout.Write('.'); break; 				case 1: cout.Write('+'); break; 				case 2: cout.Write('*'); break; 				case 3: cout.WriteLine(); break; 			}
Magic Number,UnitTests,TestDSA,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestDSA.cs,DoTest,The following statement contains a magic number: Assert.AreEqual(105' dsa.Counter);
Magic Number,UnitTests,TestDSA,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestDSA.cs,DoTest,The following statement contains a magic number: Assert.AreEqual(2' dsa.H.ToInt32());
Magic Number,UnitTests,TestDSA,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestDSA.cs,OnStatus,The following statement contains a magic number: switch (p) { 				case 0: cout.Write('.'); num++; break; 				case 1: cout.Write('+'); break; 				case 2: cout.Write('*'); ok++; break; 				case 3: cout.WriteLine(); break; 			}
Magic Number,UnitTests,TestDSA,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestDSA.cs,OnStatus,The following statement contains a magic number: switch (p) { 				case 0: cout.Write('.'); num++; break; 				case 1: cout.Write('+'); break; 				case 2: cout.Write('*'); ok++; break; 				case 3: cout.WriteLine(); break; 			}
Magic Number,UnitTests,TestRSA,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestRSA.cs,TestKey,The following statement contains a magic number: switch (v % 3) { 				case 0: ctext_ex = Key1(key); break; 				case 1: ctext_ex = Key2(key); break; 				case 2: ctext_ex = Key3(key); break; 			}
Magic Number,UnitTests,TestRSA,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestRSA.cs,TestKey,The following statement contains a magic number: switch (v % 3) { 				case 0: ctext_ex = Key1(key); break; 				case 1: ctext_ex = Key2(key); break; 				case 2: ctext_ex = Key3(key); break; 			}
Magic Number,UnitTests,TestRSA,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestRSA.cs,TestKey,The following statement contains a magic number: v / 3 >= 1
Magic Number,UnitTests,TestRSA,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestRSA.cs,TestCase,The following statement contains a magic number: v < 6
Magic Number,UnitTests,TestECDH,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestECDH.cs,test_ecdh_curve,The following statement contains a magic number: Assert.Greater(aout' 4);
Magic Number,UnitTests,TestECDSA,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestECDSA.cs,test_builtin,The following statement contains a magic number: byte[] digest = Random.PseudoBytes(20);
Magic Number,UnitTests,TestECDSA,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestECDSA.cs,test_builtin,The following statement contains a magic number: byte[] wrong_digest = Random.PseudoBytes(20);
Magic Number,UnitTests,TestECDSA,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestECDSA.cs,test_builtin,The following statement contains a magic number: eckey.Group.Degree < 160
Magic Number,UnitTests,TestCryptoKey,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestCryptoKey.cs,CanCompare,The following statement contains a magic number: rsa.GenerateKeys(1024' BigNumber.One' null' null);
Magic Number,UnitTests,TestCryptoKey,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestCryptoKey.cs,CanCompare,The following statement contains a magic number: rsa2.GenerateKeys(1024' BigNumber.One' null' null);
Magic Number,UnitTests,TestCryptoKey,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestCryptoKey.cs,CanCreateFromRSA,The following statement contains a magic number: rsa.GenerateKeys(1024' BigNumber.One' null' null);
Magic Number,UnitTests,TestX509Certificate,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestX509Certificate.cs,CanLoadFromPEM,The following statement contains a magic number: TestCert(cert' "CN=Root"' "CN=Root"' 1234);
Magic Number,UnitTests,TestX509Certificate,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestX509Certificate.cs,CanLoadFromDER,The following statement contains a magic number: TestCert(cert' "CN=Root"' "CN=Root"' 1234);
Magic Number,UnitTests,TestX509Certificate,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestX509Certificate.cs,CanLoadFromPKCS7_PEM,The following statement contains a magic number: TestCert(cert' "CN=Root"' "CN=Root"' 1234);
Magic Number,UnitTests,TestX509Certificate,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestX509Certificate.cs,CanLoadFromPKCS7_DER,The following statement contains a magic number: TestCert(cert' "CN=Root"' "CN=Root"' 1234);
Magic Number,UnitTests,TestX509Certificate,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestX509Certificate.cs,CanLoadFromPCKS12,The following statement contains a magic number: TestCert(cert' "CN=localhost"' "CN=Root"' 1235);
Magic Number,UnitTests,TestX509Certificate,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestX509Certificate.cs,CanCreatePKCS12,The following statement contains a magic number: TestCert(new_pfx.Certificate' "CN=localhost"' "CN=Root"' 1235);
Magic Number,UnitTests,TestX509Certificate,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestX509Certificate.cs,CanCreateWithArgs,The following statement contains a magic number: int serial = 101;
Magic Number,UnitTests,TestX509Certificate,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestX509Certificate.cs,CanCreateWithArgs,The following statement contains a magic number: DateTime end = start + TimeSpan.FromMinutes(10);
Magic Number,UnitTests,TestX509Certificate,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestX509Certificate.cs,CanGetAndSetProperties,The following statement contains a magic number: int serial = 101;
Magic Number,UnitTests,TestX509Certificate,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestX509Certificate.cs,CanGetAndSetProperties,The following statement contains a magic number: DateTime end = start + TimeSpan.FromMinutes(10);
Magic Number,UnitTests,TestX509Certificate,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestX509Certificate.cs,CannotSetUnmatchedPrivateKey,The following statement contains a magic number: DateTime end = start + TimeSpan.FromMinutes(10);
Magic Number,UnitTests,TestX509Certificate,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestX509Certificate.cs,CanCompare,The following statement contains a magic number: DateTime end = start + TimeSpan.FromMinutes(10);
Magic Number,UnitTests,TestX509Certificate,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestX509Certificate.cs,CanSign,The following statement contains a magic number: DateTime end = start + TimeSpan.FromMinutes(10);
Magic Number,UnitTests,TestX509Certificate,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestX509Certificate.cs,CanCheckPrivateKey,The following statement contains a magic number: DateTime end = start + TimeSpan.FromMinutes(10);
Magic Number,UnitTests,TestX509Certificate,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestX509Certificate.cs,CanVerify,The following statement contains a magic number: DateTime end = start + TimeSpan.FromMinutes(10);
Magic Number,UnitTests,TestX509Certificate,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestX509Certificate.cs,CanCreateRequest,The following statement contains a magic number: DateTime end = start + TimeSpan.FromMinutes(10);
Magic Number,UnitTests,TestX509Certificate,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestX509Certificate.cs,CanAddExtensions,The following statement contains a magic number: DateTime end = start + TimeSpan.FromMinutes(10);
Magic Number,UnitTests,TestHMAC,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestHMAC.cs,VerifyHMAC,The following statement contains a magic number: byte[] buf = Encoding.ASCII.GetBytes(new string('a'' 1000));
Magic Number,UnitTests,TestHMAC,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestHMAC.cs,VerifyHMAC,The following statement contains a magic number: i < 1000
Magic Number,UnitTests,TestRandom,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestRandom.cs,TestCase,The following statement contains a magic number: byte[] buf = OpenSSL.Core.Random.PseudoBytes(2500);
Magic Number,UnitTests,TestRandom,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestRandom.cs,TestCase,The following statement contains a magic number: uint[] n2 = new uint[16];
Magic Number,UnitTests,TestRandom,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestRandom.cs,TestCase,The following statement contains a magic number: uint['] runs = new uint[2' 34];
Magic Number,UnitTests,TestRandom,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestRandom.cs,TestCase,The following statement contains a magic number: uint['] runs = new uint[2' 34];
Magic Number,UnitTests,TestRandom,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestRandom.cs,TestCase,The following statement contains a magic number: n2[(j >> 4) & 0x0f]++;
Magic Number,UnitTests,TestRandom,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestRandom.cs,TestCase,The following statement contains a magic number: k < 8
Magic Number,UnitTests,TestRandom,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestRandom.cs,TestCase,The following statement contains a magic number: nsign = 34;
Magic Number,UnitTests,TestRandom,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestRandom.cs,TestCase,The following statement contains a magic number: nsign > 34
Magic Number,UnitTests,TestRandom,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestRandom.cs,TestCase,The following statement contains a magic number: Assert.IsTrue((9654 < n1) && (n1 < 10346));
Magic Number,UnitTests,TestRandom,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestRandom.cs,TestCase,The following statement contains a magic number: Assert.IsTrue((9654 < n1) && (n1 < 10346));
Magic Number,UnitTests,TestRandom,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestRandom.cs,TestCase,The following statement contains a magic number: i < 16
Magic Number,UnitTests,TestRandom,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestRandom.cs,TestCase,The following statement contains a magic number: d = (d * 8) / 25 - 500000;
Magic Number,UnitTests,TestRandom,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestRandom.cs,TestCase,The following statement contains a magic number: d = (d * 8) / 25 - 500000;
Magic Number,UnitTests,TestRandom,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestRandom.cs,TestCase,The following statement contains a magic number: d = (d * 8) / 25 - 500000;
Magic Number,UnitTests,TestRandom,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestRandom.cs,TestCase,The following statement contains a magic number: Assert.IsTrue((103 < d) && (d < 5740));
Magic Number,UnitTests,TestRandom,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestRandom.cs,TestCase,The following statement contains a magic number: Assert.IsTrue((103 < d) && (d < 5740));
Magic Number,UnitTests,TestRandom,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestRandom.cs,TestCase,The following statement contains a magic number: Assert.IsTrue((2267 < runs[i' 0]) && (runs[i' 0] < 2733));
Magic Number,UnitTests,TestRandom,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestRandom.cs,TestCase,The following statement contains a magic number: Assert.IsTrue((2267 < runs[i' 0]) && (runs[i' 0] < 2733));
Magic Number,UnitTests,TestRandom,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestRandom.cs,TestCase,The following statement contains a magic number: Assert.IsTrue((1079 < runs[i' 1]) && (runs[i' 1] < 1421));
Magic Number,UnitTests,TestRandom,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestRandom.cs,TestCase,The following statement contains a magic number: Assert.IsTrue((1079 < runs[i' 1]) && (runs[i' 1] < 1421));
Magic Number,UnitTests,TestRandom,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestRandom.cs,TestCase,The following statement contains a magic number: Assert.IsTrue((502 < runs[i' 2]) && (runs[i' 2] < 748));
Magic Number,UnitTests,TestRandom,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestRandom.cs,TestCase,The following statement contains a magic number: Assert.IsTrue((502 < runs[i' 2]) && (runs[i' 2] < 748));
Magic Number,UnitTests,TestRandom,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestRandom.cs,TestCase,The following statement contains a magic number: Assert.IsTrue((502 < runs[i' 2]) && (runs[i' 2] < 748));
Magic Number,UnitTests,TestRandom,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestRandom.cs,TestCase,The following statement contains a magic number: Assert.IsTrue((502 < runs[i' 2]) && (runs[i' 2] < 748));
Magic Number,UnitTests,TestRandom,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestRandom.cs,TestCase,The following statement contains a magic number: Assert.IsTrue((223 < runs[i' 3]) && (runs[i' 3] < 402));
Magic Number,UnitTests,TestRandom,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestRandom.cs,TestCase,The following statement contains a magic number: Assert.IsTrue((223 < runs[i' 3]) && (runs[i' 3] < 402));
Magic Number,UnitTests,TestRandom,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestRandom.cs,TestCase,The following statement contains a magic number: Assert.IsTrue((223 < runs[i' 3]) && (runs[i' 3] < 402));
Magic Number,UnitTests,TestRandom,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestRandom.cs,TestCase,The following statement contains a magic number: Assert.IsTrue((223 < runs[i' 3]) && (runs[i' 3] < 402));
Magic Number,UnitTests,TestRandom,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestRandom.cs,TestCase,The following statement contains a magic number: Assert.IsTrue((90 < runs[i' 4]) && (runs[i' 4] < 223));
Magic Number,UnitTests,TestRandom,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestRandom.cs,TestCase,The following statement contains a magic number: Assert.IsTrue((90 < runs[i' 4]) && (runs[i' 4] < 223));
Magic Number,UnitTests,TestRandom,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestRandom.cs,TestCase,The following statement contains a magic number: Assert.IsTrue((90 < runs[i' 4]) && (runs[i' 4] < 223));
Magic Number,UnitTests,TestRandom,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestRandom.cs,TestCase,The following statement contains a magic number: Assert.IsTrue((90 < runs[i' 4]) && (runs[i' 4] < 223));
Magic Number,UnitTests,TestRandom,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestRandom.cs,TestCase,The following statement contains a magic number: Assert.IsTrue((90 < runs[i' 5]) && (runs[i' 5] < 223));
Magic Number,UnitTests,TestRandom,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestRandom.cs,TestCase,The following statement contains a magic number: Assert.IsTrue((90 < runs[i' 5]) && (runs[i' 5] < 223));
Magic Number,UnitTests,TestRandom,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestRandom.cs,TestCase,The following statement contains a magic number: Assert.IsTrue((90 < runs[i' 5]) && (runs[i' 5] < 223));
Magic Number,UnitTests,TestRandom,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestRandom.cs,TestCase,The following statement contains a magic number: Assert.IsTrue((90 < runs[i' 5]) && (runs[i' 5] < 223));
Magic Number,UnitTests,TestRandom,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestRandom.cs,TestCase,The following statement contains a magic number: i < 2
Magic Number,UnitTests,TestRandom,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestRandom.cs,TestCase,The following statement contains a magic number: Assert.AreEqual(0' runs[0' 33]);
Magic Number,UnitTests,TestRandom,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestRandom.cs,TestCase,The following statement contains a magic number: Assert.AreEqual(0' runs[1' 33]);
Magic Number,UnitTests,TestSHA,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestSHA.cs,TestCase,The following statement contains a magic number: byte[] buf = Encoding.ASCII.GetBytes(new string('a'' 1000));
Magic Number,UnitTests,TestSHA,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestSHA.cs,TestCase,The following statement contains a magic number: i < 1000
Magic Number,UnitTests,TestSHA1,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestSHA1.cs,TestCase,The following statement contains a magic number: byte[] buf = Encoding.ASCII.GetBytes(new string('a'' 1000));
Magic Number,UnitTests,TestSHA1,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestSHA1.cs,TestCase,The following statement contains a magic number: i < 1000
Magic Number,UnitTests,TestSHA256,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestSHA256.cs,GenericTest,The following statement contains a magic number: int len = (1000000 - i) < 160 ? 1000000 - i : 160;
Magic Number,UnitTests,TestSHA256,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestSHA256.cs,GenericTest,The following statement contains a magic number: int len = (1000000 - i) < 160 ? 1000000 - i : 160;
Magic Number,UnitTests,TestSHA256,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestSHA256.cs,GenericTest,The following statement contains a magic number: int len = (1000000 - i) < 160 ? 1000000 - i : 160;
Magic Number,UnitTests,TestSHA256,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestSHA256.cs,GenericTest,The following statement contains a magic number: int len = (1000000 - i) < 160 ? 1000000 - i : 160;
Magic Number,UnitTests,TestSHA256,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestSHA256.cs,GenericTest,The following statement contains a magic number: i < 1000000
Magic Number,UnitTests,TestSHA256,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestSHA256.cs,GenericTest,The following statement contains a magic number: str2 = BitConverter.ToString(results[2]);
Magic Number,UnitTests,TestSHA512,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestSHA512.cs,TestCase,The following statement contains a magic number: this.GenericTest("SHA-512"' ctx' this.app' 288);
Magic Number,UnitTests,TestSHA512,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestSHA512.cs,TestCase,The following statement contains a magic number: this.GenericTest("SHA-384"' ctx' this.addenum' 64);
Magic Number,UnitTests,TestSHA512,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestSHA512.cs,GenericTest,The following statement contains a magic number: int len = (1000000 - i) < alen ? 1000000 - i : alen;
Magic Number,UnitTests,TestSHA512,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestSHA512.cs,GenericTest,The following statement contains a magic number: int len = (1000000 - i) < alen ? 1000000 - i : alen;
Magic Number,UnitTests,TestSHA512,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestSHA512.cs,GenericTest,The following statement contains a magic number: i < 1000000
Magic Number,UnitTests,TestSHA512,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestSHA512.cs,GenericTest,The following statement contains a magic number: str2 = BitConverter.ToString(results[2]);
Magic Number,UnitTests,TestX509,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestX509.cs,TestRsaSha1,The following statement contains a magic number: rsa.GenerateKeys(2048' bn' OnGenerator' null);
Magic Number,UnitTests,TestX509,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestX509.cs,TestWithoutCfg,The following statement contains a magic number: rsa.GenerateKeys(2048' bn' OnGenerator' null);
Magic Number,UnitTests,TestX509,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestX509.cs,OnGenerator,The following statement contains a magic number: switch (p) { 				case 0: cout.Write('.'); break; 				case 1: cout.Write('+'); break; 				case 2: cout.Write('*'); break; 				case 3: cout.WriteLine(); break; 			}
Magic Number,UnitTests,TestX509,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestX509.cs,OnGenerator,The following statement contains a magic number: switch (p) { 				case 0: cout.Write('.'); break; 				case 1: cout.Write('+'); break; 				case 2: cout.Write('*'); break; 				case 3: cout.WriteLine(); break; 			}
Magic Number,UnitTests,TestServer,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestServer.cs,ClientTestThreadProc,The following statement contains a magic number: Thread.Sleep(500);
Magic Number,UnitTests,SyncServerTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestServer.cs,AcceptConnection,The following statement contains a magic number: listener = new TcpListener(IPAddress.Any' 8443);
Magic Number,UnitTests,SyncServerTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestServer.cs,AcceptConnection,The following statement contains a magic number: listener.Start(5);
Magic Number,UnitTests,SyncServerTests,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestServer.cs,BasicClientTest,The following statement contains a magic number: client = new TcpClient("localhost"' 8443);
Missing Default,UnitTests,TestDH,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestDH.cs,OnStatus,The following switch statement is missing a default case: switch (p) { 				case 0: cout.Write('.'); break; 				case 1: cout.Write('+'); break; 				case 2: cout.Write('*'); break; 				case 3: cout.WriteLine(); break; 			}
Missing Default,UnitTests,TestDSA,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestDSA.cs,OnStatus,The following switch statement is missing a default case: switch (p) { 				case 0: cout.Write('.'); num++; break; 				case 1: cout.Write('+'); break; 				case 2: cout.Write('*'); ok++; break; 				case 3: cout.WriteLine(); break; 			}
Missing Default,UnitTests,TestRSA,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestRSA.cs,TestKey,The following switch statement is missing a default case: switch (v % 3) { 				case 0: ctext_ex = Key1(key); break; 				case 1: ctext_ex = Key2(key); break; 				case 2: ctext_ex = Key3(key); break; 			}
Missing Default,UnitTests,TestX509,C:\research\architectureSmells\repos\MSOpenTech_http2-katana\tests\OpenSsl.Tests\TestX509.cs,OnGenerator,The following switch statement is missing a default case: switch (p) { 				case 0: cout.Write('.'); break; 				case 1: cout.Write('+'); break; 				case 2: cout.Write('*'); break; 				case 3: cout.WriteLine(); break; 			}
