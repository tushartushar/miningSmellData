Implementation smell,Namespace,Class,File,Method,Description
Long Statement,ManualBuild,Program,C:\repos\Glimpse_Glimpse\tools\ManualBuild\ManualBuild\Program.cs,ProcessFile,The length of the statement  "                    tabIndex = Convert.ToInt32(matchFileName.Substring(matchFileName.IndexOf("|") + 1' matchFileName.Length - matchFileName.IndexOf("|") - 1)); " is 139.
Magic Number,ManualBuild,Program,C:\repos\Glimpse_Glimpse\tools\ManualBuild\ManualBuild\Program.cs,ProcessFile,The following statement contains a magic number: foreach (Match match in matches)              {                  var matchIdentifier = match.Value.Substring(10' match.Value.Length - 13);                  var matchFileName = matchIdentifier;                  var tabIndex = 0;                  if (matchFileName.IndexOf("|") > -1)                   {                      tabIndex = Convert.ToInt32(matchFileName.Substring(matchFileName.IndexOf("|") + 1' matchFileName.Length - matchFileName.IndexOf("|") - 1));                      matchFileName = matchFileName.Substring(0' matchFileName.IndexOf("|"));                  }                  var tabs = "";                  for (var i = 0; i < tabIndex; i++)                      tabs += "    ";                  var matchContent = File.ReadAllText(assets.BuildPath(matchFileName));                  matchContent = ProcessFile(PostProcessContent(matchFileName' matchContent)' assets);                  if (tabIndex > 0)                      matchContent = tabs + Regex.Replace(matchContent' "\n"' "\n" + tabs);                     fileContent = fileContent.Replace(String.Format("/*(import:{0})*/"' matchIdentifier)' matchContent);              }
Magic Number,ManualBuild,Program,C:\repos\Glimpse_Glimpse\tools\ManualBuild\ManualBuild\Program.cs,ProcessFile,The following statement contains a magic number: foreach (Match match in matches)              {                  var matchIdentifier = match.Value.Substring(10' match.Value.Length - 13);                  var matchFileName = matchIdentifier;                  var tabIndex = 0;                  if (matchFileName.IndexOf("|") > -1)                   {                      tabIndex = Convert.ToInt32(matchFileName.Substring(matchFileName.IndexOf("|") + 1' matchFileName.Length - matchFileName.IndexOf("|") - 1));                      matchFileName = matchFileName.Substring(0' matchFileName.IndexOf("|"));                  }                  var tabs = "";                  for (var i = 0; i < tabIndex; i++)                      tabs += "    ";                  var matchContent = File.ReadAllText(assets.BuildPath(matchFileName));                  matchContent = ProcessFile(PostProcessContent(matchFileName' matchContent)' assets);                  if (tabIndex > 0)                      matchContent = tabs + Regex.Replace(matchContent' "\n"' "\n" + tabs);                     fileContent = fileContent.Replace(String.Format("/*(import:{0})*/"' matchIdentifier)' matchContent);              }
