Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Glimpse.Test.AspNet.Inspector,RoutesInspectorShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Inspector\RoutesInspectorShould.cs,WrapsMvcRouteDerivedTypes,The method has 5 parameters. Parameters: sut' routeHandler' context' route' newRoute
Long Parameter List,Glimpse.Test.AspNet.Inspector,RoutesInspectorShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Inspector\RoutesInspectorShould.cs,WrapsMvcRouteBaseDerivedTypes,The method has 5 parameters. Parameters: sut' routeHandler' context' route' newRoute
Long Parameter List,Glimpse.Test.AspNet.Inspector,RoutesInspectorShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Inspector\RoutesInspectorShould.cs,ExtendsStringConstraints,The method has 5 parameters. Parameters: sut' context' route' newRoute' routeConstraint
Long Parameter List,Glimpse.Test.AspNet.Inspector,RoutesInspectorShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Inspector\RoutesInspectorShould.cs,ExtendsRouteConstraintConstraints,The method has 6 parameters. Parameters: sut' context' route' newRoute' routeConstraint' newRouteConstraint
Long Parameter List,Glimpse.Test.AspNet.Inspector,NewRoute,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Inspector\RoutesInspectorShould.cs,NewRoute,The method has 5 parameters. Parameters: url' defaults' constraints' dataTokens' routeHandler
Long Parameter List,Glimpse.Test.AspNet.Tab,RoutesShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Tab\RoutesShould.cs,MatchConstraintMessageToRoute,The method has 5 parameters. Parameters: tab' context' constraint' routeInspector' routeInspectorContext
Long Parameter List,Glimpse.Test.AspNet.Tab,RoutesShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Tab\RoutesShould.cs,ReturnAspNetProxiedRouteInstances,The method has 5 parameters. Parameters: tab' context' routeInspector' routeInspectorContext' routeHandler
Long Statement,Glimpse.Test.AspNet.AlternateType,RouteConstraintMatchShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\AlternateType\RouteConstraintMatchShould.cs,PublishMessageWhenExecuted,The length of the statement  "            context.Setup(c => c.Arguments).Returns(new object[] { (System.Web.HttpContextBase)null' new System.Web.Routing.Route("Test"' handler)' (string)null' (System.Web.Routing.RouteValueDictionary)null' System.Web.Routing.RouteDirection.IncomingRequest }); " is 250.
Long Statement,Glimpse.Test.AspNet.AlternateType,RouteConstraintRegexShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\AlternateType\RouteConstraintRegexShould.cs,MatchValue,The length of the statement  "            var result = constraint.Match(null' null' "Param"' new RouteValueDictionary { { "Param"' "Test" }' { "OtherParam"' "123" } }' RouteDirection.UrlGeneration); " is 156.
Long Statement,Glimpse.Test.AspNet.AlternateType,RouteConstraintRegexShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\AlternateType\RouteConstraintRegexShould.cs,NotMatchValue,The length of the statement  "            var result = constraint.Match(null' null' "Param"' new RouteValueDictionary { { "Param"' "Other" }' { "OtherParam"' "123" } }' RouteDirection.UrlGeneration); " is 157.
Long Statement,Glimpse.Test.AspNet.AlternateType,RouteProcessConstraintShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\AlternateType\RouteProcessConstraintShould.cs,PublishMessageWhenExecuted,The length of the statement  "            context.Setup(c => c.Arguments).Returns(new object[] { (System.Web.HttpContextBase)null' new object()' (string)null' (System.Web.Routing.RouteValueDictionary)null' System.Web.Routing.RouteDirection.IncomingRequest }); " is 217.
Long Statement,Glimpse.Test.AspNet,PreBodyTagFilterShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\PreBodyTagFilterShould.cs,DoHaveReplacedTheClosingBodyTag,The length of the statement  "            string result = ProcessInputByPreBodyTagFilter(inputToProcess' htmlSnippet' "REQUEST URL"' chunkLastNumberOfCharacters); " is 120.
Long Statement,Glimpse.Test.AspNet,PreBodyTagFilterShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\PreBodyTagFilterShould.cs,DoHaveReplacedTheClosingBodyTagEvenWhenBodyTagIsBadlyCased,The length of the statement  "            string result = ProcessInputByPreBodyTagFilter(inputToProcess' htmlSnippet' "REQUEST URL"' chunkLastNumberOfCharacters); " is 120.
Long Statement,Glimpse.Test.AspNet,PreBodyTagFilterShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\PreBodyTagFilterShould.cs,DoHaveWrittenWarningWhenThereIsNoClosingBodyTag,The length of the statement  "            string result = ProcessInputByPreBodyTagFilter(inputToProcess' "HTML SNIPPET"' "REQUEST URL"' chunkLastNumberOfCharacters); " is 123.
Long Statement,Glimpse.Test.AspNet,PreBodyTagFilterShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\PreBodyTagFilterShould.cs,DoHaveWrittenWarningWhenThereIsNoClosingBodyTag,The length of the statement  "                            "Unable to locate '</body>' with content encoding '{0}' for request '{1}'. The response may be compressed or the markup may actually be missing a '</body>' tag. See {2} for information on troubleshooting this issue."' " is 217.
Long Statement,Glimpse.Test.AspNet,PreBodyTagFilterShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\PreBodyTagFilterShould.cs,DoHaveWrittenWarningWhenThereIsNoClosingBodyTag,The length of the statement  "                            It.Is<object[]>(arguments => arguments.Length == 3 && object.Equals(arguments[0]' Encoding.UTF8.EncodingName) && object.Equals(arguments[1]' "REQUEST URL") && object.Equals(arguments[2]' "http://getglimpse.com/Help/Troubleshooting")))' " is 235.
Long Statement,Glimpse.Test.AspNet,PreBodyTagFilterShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\PreBodyTagFilterShould.cs,DoHaveWrittenWarningWhenThereIsNoClosingBodyTagAndSpecifiedRequestUrlIsNull,The length of the statement  "                            "Unable to locate '</body>' with content encoding '{0}' for request '{1}'. The response may be compressed or the markup may actually be missing a '</body>' tag. See {2} for information on troubleshooting this issue."' " is 217.
Long Statement,Glimpse.Test.AspNet,PreBodyTagFilterShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\PreBodyTagFilterShould.cs,DoHaveWrittenWarningWhenThereIsNoClosingBodyTagAndSpecifiedRequestUrlIsNull,The length of the statement  "                            It.Is<object[]>(arguments => arguments.Length == 3 && object.Equals(arguments[0]' Encoding.UTF8.EncodingName) && object.Equals(arguments[1]' "unknown") && object.Equals(arguments[2]' "http://getglimpse.com/Help/Troubleshooting")))' " is 231.
Long Statement,Glimpse.Test.AspNet,PreBodyTagFilterShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\PreBodyTagFilterShould.cs,DoHaveOnlyReplacedTheLastClosingBodyTag,The length of the statement  "            const string expectedResult = "<html><body><span>some content</span></body><p>some more content</p>" + htmlSnippet + "</body></html>"; " is 134.
Long Statement,Glimpse.Test.AspNet,PreBodyTagFilterShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\PreBodyTagFilterShould.cs,DoHaveOnlyReplacedTheLastClosingBodyTag,The length of the statement  "            string result = ProcessInputByPreBodyTagFilter(inputToProcess' htmlSnippet' "REQUEST URL"' chunkLastNumberOfCharacters); " is 120.
Long Statement,Glimpse.Test.AspNet,PreBodyTagFilterShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\PreBodyTagFilterShould.cs,ProcessInputByPreBodyTagFilter,The length of the statement  "                    inputsToProcess = new[] { inputToProcess.Substring(0' inputToProcess.Length - chunkLastNumberOfCharacters.Value)' inputToProcess.Substring(inputToProcess.Length - chunkLastNumberOfCharacters.Value) }; " is 200.
Long Statement,Glimpse.Test.AspNet,PreBodyTagFilterShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\PreBodyTagFilterShould.cs,HaveLeftCompressedContentUntouched,The length of the statement  "                "<!DOCTYPE html>\r\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n<head>\r\n    <title>Hello</title>\r\n</head>\r\n<body>\r\n    <h1>Hello</h1>\r\n</body>\r\n</html>\r\n"; " is 174.
Long Statement,Glimpse.Test.AspNet,PreBodyTagFilterShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\PreBodyTagFilterShould.cs,DoHaveLeftCompressedContentUntouched,The length of the statement  "                var preBodyTagFilter = new PreBodyTagFilter("HTML SNIPPET"' outputStream' Encoding.UTF8' "REQUEST URL"' LoggerMock.Object); " is 123.
Long Statement,Glimpse.Test.AspNet,HttpModuleShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\HttpModuleShould.cs,HaveLoggedAppDomainUnloadMessage,The length of the statement  "            // to make sure the HttpModule's type constructor has been run' otherwise the previous logger will have a value of null' which will be  " is 134.
Long Statement,Glimpse.Test.AspNet,HttpModuleShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\HttpModuleShould.cs,HaveLoggedAppDomainUnloadMessage,The length of the statement  "            // restored after the test' making other tests fail' because the HttpModule's type constructor will eventually be run by calling the  " is 132.
Long Statement,Glimpse.Test.AspNet,HttpModuleShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\HttpModuleShould.cs,HaveLoggedAppDomainUnloadMessage,The length of the statement  "                typeof(HttpModule).GetMethod("OnAppDomainUnload"' BindingFlags.NonPublic | BindingFlags.Static).Invoke(HttpModule' new object[] { currentDomain }); " is 147.
Long Statement,Glimpse.Test.AspNet.Inspector,RoutesInspectorShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Inspector\RoutesInspectorShould.cs,IntergrationTestRouteProxing,The length of the statement  "            context.Setup(x => x.ProxyFactory).Returns(new CastleDynamicProxyFactory(context.Logger' context.MessageBroker' () => new ExecutionTimer(new Stopwatch())' () => new RuntimePolicy())); " is 183.
Long Statement,Glimpse.Test.AspNet.Inspector,RoutesInspectorShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Inspector\RoutesInspectorShould.cs,ExtendsMvcRoutes,The length of the statement  "            context.ProxyFactory.Setup(x => x.ExtendClass<System.Web.Routing.Route>(It.IsAny<IEnumerable<IAlternateMethod>>()' It.IsAny<IEnumerable<object>>()' It.IsAny<object[]>())).Returns(newRoute).Verifiable(); " is 202.
Long Statement,Glimpse.Test.AspNet.Inspector,RoutesInspectorShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Inspector\RoutesInspectorShould.cs,WrapsMvcRouteDerivedTypes,The length of the statement  "            context.ProxyFactory.Setup(x => x.WrapClass((System.Web.Routing.Route)route' It.IsAny<IEnumerable<IAlternateMethod>>()' It.IsAny<IEnumerable<object>>()' It.IsAny<object[]>())).Returns(newRoute).Verifiable(); " is 207.
Long Statement,Glimpse.Test.AspNet.Inspector,RoutesInspectorShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Inspector\RoutesInspectorShould.cs,WrapsMvcRouteBaseDerivedTypes,The length of the statement  "            context.ProxyFactory.Setup(x => x.WrapClass((RouteBase)route' It.IsAny<IEnumerable<IAlternateMethod>>()' It.IsAny<object[]>())).Returns(newRoute).Verifiable(); " is 159.
Long Statement,Glimpse.Test.AspNet.Inspector,RoutesInspectorShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Inspector\RoutesInspectorShould.cs,ExtendsStringConstraints,The length of the statement  "            context.ProxyFactory.Setup(x => x.WrapClass((System.Web.Routing.Route)route' It.IsAny<IEnumerable<IAlternateMethod>>()' It.IsAny<IEnumerable<object>>()' It.IsAny<object[]>())).Returns(newRoute).Verifiable(); " is 207.
Long Statement,Glimpse.Test.AspNet.Inspector,RoutesInspectorShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Inspector\RoutesInspectorShould.cs,ExtendsRouteConstraintConstraints,The length of the statement  "            context.ProxyFactory.Setup(x => x.WrapClass((System.Web.Routing.Route)route' It.IsAny<IEnumerable<IAlternateMethod>>()' It.IsAny<IEnumerable<object>>()' It.IsAny<object[]>())).Returns(newRoute).Verifiable(); " is 207.
Long Statement,Glimpse.Test.AspNet.Inspector,RoutesInspectorShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Inspector\RoutesInspectorShould.cs,ExtendsRouteConstraintConstraints,The length of the statement  "            context.ProxyFactory.Setup(x => x.IsWrapInterfaceEligible<IRouteConstraint>(typeof(IRouteConstraint))).Returns(true).Verifiable(); " is 130.
Long Statement,Glimpse.Test.AspNet.Inspector,RoutesInspectorShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Inspector\RoutesInspectorShould.cs,ExtendsRouteConstraintConstraints,The length of the statement  "            context.ProxyFactory.Setup(x => x.WrapInterface(routeConstraint' It.IsAny<IEnumerable<IAlternateMethod>>()' It.IsAny<IEnumerable<object>>())).Returns(newRouteConstraint).Verifiable(); " is 183.
Long Statement,Glimpse.Test.AspNet.SerializationConverter,ConfigurationModelConverterShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\SerializationConverter\ConfigurationModelConverterShould.cs,ConvertToList,The length of the statement  "            model.ConnectionStrings = new List<ConfigurationConnectionStringModel> { new ConfigurationConnectionStringModel()' new ConfigurationConnectionStringModel() }; " is 158.
Long Statement,Glimpse.Test.AspNet.SerializationConverter,ConfigurationModelConverterShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\SerializationConverter\ConfigurationModelConverterShould.cs,ConvertToList,The length of the statement  "            model.HttpHandlers = new List<ConfigurationHttpHandlersModel> { new ConfigurationHttpHandlersModel()' new ConfigurationHttpHandlersModel() }; " is 141.
Long Statement,Glimpse.Test.AspNet.SerializationConverter,ConfigurationModelConverterShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\SerializationConverter\ConfigurationModelConverterShould.cs,ConvertToList,The length of the statement  "            model.HttpModules = new List<ConfigurationHttpModulesModel> { new ConfigurationHttpModulesModel()' new ConfigurationHttpModulesModel() }; " is 137.
Long Statement,Glimpse.Test.AspNet.SerializationConverter,ConfigurationRoleManagerProviderSettingsModelConverterShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\SerializationConverter\ConfigurationRoleManagerProviderSettingsModelConverterShould.cs,ConvertToList,The length of the statement  "            var model = new List<ConfigurationRoleManagerProviderSettingsModel> { new ConfigurationRoleManagerProviderSettingsModel { Name = "Name Test"' Type = "Type Test"' Parameters = new Dictionary<string' string> { { "Test"' "Pest" }' { "Jester"' "Wester" } } } }; " is 257.
Long Statement,Glimpse.Test.AspNet.SerializationConverter,SessionModelConverterShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\SerializationConverter\SessionModelConverterShould.cs,ConvertNonSerializableItemsWithToStringMethod,The length of the statement  "            NonSerializableTestObjectWithToString testObject = new NonSerializableTestObjectWithToString { TestProperty = "Test Value" }; " is 125.
Long Statement,Glimpse.Test.AspNet.SerializationConverter,SessionModelConverterShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\SerializationConverter\SessionModelConverterShould.cs,GetFirstValueRowFromConvertedSessionModel,The length of the statement  "            return ((IEnumerable<object>)((IEnumerable<object>)rows).ToList().Skip(1).First()).ToList(); // skip first row since it only contains column names " is 146.
Long Statement,Glimpse.Test.AspNet.Tab,ConfigurationConnectionStringModelFactoryShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Tab\ConfigurationConnectionStringModelFactoryShould.cs,CheckHaveParsedTypicalConnectionString,The length of the statement  "            const string connectionString = "Data Source=MyServer;Initial Catalog=MyDatabase;User Id=MyUsername;Password=MyPassword"; " is 121.
Long Statement,Glimpse.Test.AspNet.Tab,ConfigurationConnectionStringModelFactoryShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Tab\ConfigurationConnectionStringModelFactoryShould.cs,CheckHaveParsedTypicalConnectionString,The length of the statement  "            var result = ConfigurationConnectionStringModelFactory.Create(new ConnectionStringSettings(connectionStringName' connectionString' providerName)); " is 146.
Long Statement,Glimpse.Test.AspNet.Tab,ConfigurationConnectionStringModelFactoryShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Tab\ConfigurationConnectionStringModelFactoryShould.cs,HaveHandledInvalidConnectionStringForKnownProvider,The length of the statement  "            const string connectionString = "Data Source=MyServer;Initial Catalog=MyDatabase;User Id=MyUsername;Password=MyPassword;SomeUnknownKey=BadValue"; " is 145.
Long Statement,Glimpse.Test.AspNet.Tab,ConfigurationConnectionStringModelFactoryShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Tab\ConfigurationConnectionStringModelFactoryShould.cs,HaveHandledInvalidConnectionStringForKnownProvider,The length of the statement  "            var result = ConfigurationConnectionStringModelFactory.Create(new ConnectionStringSettings(connectionStringName' connectionString' providerName)); " is 146.
Long Statement,Glimpse.Test.AspNet.Tab,ConfigurationConnectionStringModelFactoryShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Tab\ConfigurationConnectionStringModelFactoryShould.cs,HaveHandledInvalidConnectionStringForKnownProvider,The length of the statement  "            Assert.Equal("Data Source=MyServer;Initial Catalog=MyDatabase;User Id=MyUsername;Password=########;SomeUnknownKey=BadValue"' result.Raw); " is 137.
Long Statement,Glimpse.Test.AspNet.Tab,ConfigurationConnectionStringModelFactoryShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Tab\ConfigurationConnectionStringModelFactoryShould.cs,HaveHandledInvalidConnectionStringForKnownProvider,The length of the statement  "            Assert.True(result.Details["ERROR"].ToString().StartsWith("Connection string is invalid for ProviderName=System.Data.SqlClient : ")); " is 133.
Long Statement,Glimpse.Test.AspNet.Tab,ConfigurationConnectionStringModelFactoryShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Tab\ConfigurationConnectionStringModelFactoryShould.cs,HaveHandledUnknownProvider,The length of the statement  "            const string connectionString = "Data Source=MyServer;Initial Catalog=MyDatabase;User Id=MyUsername;Password=MyPassword"; " is 121.
Long Statement,Glimpse.Test.AspNet.Tab,ConfigurationConnectionStringModelFactoryShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Tab\ConfigurationConnectionStringModelFactoryShould.cs,HaveHandledUnknownProvider,The length of the statement  "            var result = ConfigurationConnectionStringModelFactory.Create(new ConnectionStringSettings(connectionStringName' connectionString' providerName)); " is 146.
Long Statement,Glimpse.Test.AspNet.Tab,ConfigurationConnectionStringModelFactoryShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Tab\ConfigurationConnectionStringModelFactoryShould.cs,HaveParsedNonTypicalConnectionString,The length of the statement  "            var result = ConfigurationConnectionStringModelFactory.Create(new ConnectionStringSettings(connectionStringName' connectionString' providerName)); " is 146.
Long Statement,Glimpse.Test.AspNet.Tab,ConfigurationConnectionStringModelFactoryShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Tab\ConfigurationConnectionStringModelFactoryShould.cs,HaveParsedNonTypicalConnectionString,The length of the statement  "            Assert.Equal("ProviderName is empty' therefore assuming ProviderName=System.Data.SqlClient"' result.Details["WARNING"]); " is 120.
Long Statement,Glimpse.Test.AspNet.Tab,ConfigurationConnectionStringModelFactoryShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Tab\ConfigurationConnectionStringModelFactoryShould.cs,HaveParsedNonTypicalConnectionString,The length of the statement  "            Assert.True(result.Details["ERROR"].ToString().StartsWith("Connection string is invalid for ProviderName=System.Data.SqlClient : ")); " is 133.
Long Statement,Glimpse.Test.AspNet.Tab,ConfigurationConnectionStringModelFactoryShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Tab\ConfigurationConnectionStringModelFactoryShould.cs,HaveObfuscatedMultipleKeys,The length of the statement  "            const string connectionString = "DefaultEndpointsProtocol=https;AccountName=SomeAccount;AccountKey=SomeAccountKey;Password=SomePassword"; " is 137.
Long Statement,Glimpse.Test.AspNet.Tab,ConfigurationConnectionStringModelFactoryShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Tab\ConfigurationConnectionStringModelFactoryShould.cs,HaveObfuscatedMultipleKeys,The length of the statement  "            var result = ConfigurationConnectionStringModelFactory.Create(new ConnectionStringSettings(connectionStringName' connectionString' providerName)); " is 146.
Long Statement,Glimpse.Test.AspNet.Tab,ConfigurationConnectionStringModelFactoryShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Tab\ConfigurationConnectionStringModelFactoryShould.cs,HaveObfuscatedMultipleKeys,The length of the statement  "            Assert.Equal("DefaultEndpointsProtocol=https;AccountName=SomeAccount;AccountKey=########;Password=########"' result.Raw); " is 121.
Long Statement,Glimpse.Test.AspNet.Tab,ConfigurationConnectionStringModelFactoryShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Tab\ConfigurationConnectionStringModelFactoryShould.cs,HaveObfuscatedMultipleKeys,The length of the statement  "            Assert.Equal("ProviderName is empty' therefore assuming ProviderName=System.Data.SqlClient"' result.Details["WARNING"]); " is 120.
Long Statement,Glimpse.Test.AspNet.Tab,ConfigurationConnectionStringModelFactoryShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Tab\ConfigurationConnectionStringModelFactoryShould.cs,HaveObfuscatedMultipleKeys,The length of the statement  "            Assert.True(result.Details["ERROR"].ToString().StartsWith("Connection string is invalid for ProviderName=System.Data.SqlClient : ")); " is 133.
Long Statement,Glimpse.Test.AspNet.Tab,RoutesShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Tab\RoutesShould.cs,ReturnRouteInstancesEvenWhenContextIsNull,The length of the statement  "            routeInspectorContext.Setup(x => x.ProxyFactory).Returns(new CastleDynamicProxyFactory(routeInspectorContext.Logger' routeInspectorContext.MessageBroker' () => new ExecutionTimer(new Stopwatch())' () => new RuntimePolicy())); " is 225.
Long Statement,Glimpse.Test.AspNet.Tab,RoutesShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Tab\RoutesShould.cs,ReturnRouteInstancesEvenWhenRoutesTableEmpty,The length of the statement  "            routeInspectorContext.Setup(x => x.ProxyFactory).Returns(new CastleDynamicProxyFactory(routeInspectorContext.Logger' routeInspectorContext.MessageBroker' () => new ExecutionTimer(new Stopwatch())' () => new RuntimePolicy())); " is 225.
Long Statement,Glimpse.Test.AspNet.Tab,RoutesShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Tab\RoutesShould.cs,ReturnProperNumberOfInstances,The length of the statement  "            routeInspectorContext.Setup(x => x.ProxyFactory).Returns(new CastleDynamicProxyFactory(routeInspectorContext.Logger' routeInspectorContext.MessageBroker' () => new ExecutionTimer(new Stopwatch())' () => new RuntimePolicy())); " is 225.
Long Statement,Glimpse.Test.AspNet.Tab,RoutesShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Tab\RoutesShould.cs,MatchConstraintMessageToRoute,The length of the statement  "            var route = new System.Web.Routing.Route("url"' new System.Web.Routing.RouteValueDictionary { { "Test"' "Other" } }' new System.Web.Routing.RouteValueDictionary { { "Test"' constraint } }' new System.Web.Routing.RouteValueDictionary { { "Data"' "Tokens" } }' new System.Web.Routing.PageRouteHandler("~/Path")); " is 310.
Long Statement,Glimpse.Test.AspNet.Tab,RoutesShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Tab\RoutesShould.cs,MatchConstraintMessageToRoute,The length of the statement  "            routeInspectorContext.Setup(x => x.ProxyFactory).Returns(new CastleDynamicProxyFactory(routeInspectorContext.Logger' routeInspectorContext.MessageBroker' () => new ExecutionTimer(new Stopwatch())' () => new RuntimePolicy())); " is 225.
Long Statement,Glimpse.Test.AspNet.Tab,RoutesShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Tab\RoutesShould.cs,MatchConstraintMessageToRoute,The length of the statement  "            var constraintMessage = new ProcessConstraintMessage(route.GetHashCode()' constraint.GetHashCode()' true' "test"' constraint' (System.Web.Routing.RouteValueDictionary)null' System.Web.Routing.RouteDirection.IncomingRequest) " is 223.
Long Statement,Glimpse.Test.AspNet.Tab,RoutesShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Tab\RoutesShould.cs,MatchConstraintMessageToRoute,The length of the statement  "            context.TabStore.Setup(mb => mb.Contains(typeof(IList<ProcessConstraintMessage>).AssemblyQualifiedName)).Returns(true).Verifiable(); " is 132.
Long Statement,Glimpse.Test.AspNet.Tab,RoutesShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Tab\RoutesShould.cs,MatchConstraintMessageToRoute,The length of the statement  "            context.TabStore.Setup(mb => mb.Contains(typeof(IList<RouteDataMessage>).AssemblyQualifiedName)).Returns(true).Verifiable(); " is 124.
Long Statement,Glimpse.Test.AspNet.Tab,RoutesShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Tab\RoutesShould.cs,MatchConstraintMessageToRoute,The length of the statement  "            context.TabStore.Setup(mb => mb.Get(typeof(IList<ProcessConstraintMessage>).AssemblyQualifiedName)).Returns(new List<ProcessConstraintMessage> { constraintMessage }).Verifiable(); " is 179.
Long Statement,Glimpse.Test.AspNet.Tab,RoutesShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Tab\RoutesShould.cs,MatchConstraintMessageToRoute,The length of the statement  "            context.TabStore.Setup(mb => mb.Get(typeof(IList<RouteDataMessage>).AssemblyQualifiedName)).Returns(new List<RouteDataMessage> { routeMessage }).Verifiable(); " is 158.
Long Statement,Glimpse.Test.AspNet.Tab,RoutesShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Tab\RoutesShould.cs,ReturnAspNetProxiedRouteInstances,The length of the statement  "            System.Web.Routing.RouteTable.Routes.Add("SubTestTyped"' new RoutesInspectorShould.NewConstructorRoute("test"' routeHandler' "Name")); " is 134.
Long Statement,Glimpse.Test.AspNet.Tab,RoutesShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Tab\RoutesShould.cs,ReturnAspNetProxiedRouteInstances,The length of the statement  "            System.Web.Routing.RouteTable.Routes.Ignore("{resource}.axd/{*pathInfo}"' new { resource = "Test"' pathInfo = "[0-9]" }); " is 121.
Long Statement,Glimpse.Test.AspNet.Tab,RoutesShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Tab\RoutesShould.cs,ReturnAspNetProxiedRouteInstances,The length of the statement  "            routeInspectorContext.Setup(x => x.ProxyFactory).Returns(new CastleDynamicProxyFactory(routeInspectorContext.Logger' routeInspectorContext.MessageBroker' () => new ExecutionTimer(new Stopwatch())' () => new RuntimePolicy())); " is 225.
Long Statement,Glimpse.Test.AspNet.Tab,ServerShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Tab\ServerShould.cs,ReturnData,The length of the statement  "            var serverVariables = new NameValueCollection { { "Name"' "Value" }' { "Name1"' "Value1" }' { "HTTP_TEST"' "http_test_value" }' {"CERT_TEST"' "cert_test_value"}' { "HTTPS_TEST"' "https_test_value" } }; " is 201.
Magic Number,Glimpse.Test.AspNet.AlternateType,GetRouteDataRouteBaseShould<T>,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\AlternateType\RouteGetRouteDataShould.cs,PublishMessageWhenExecuted,The following statement contains a magic number: context.Setup(c => c.Arguments).Returns(new object[5]);
Magic Number,Glimpse.Test.AspNet.AlternateType,GetRouteDataRouteShould<T>,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\AlternateType\RouteGetRouteDataShould.cs,PublishMessageWhenExecuted,The following statement contains a magic number: context.Setup(c => c.Arguments).Returns(new object[5]);
Magic Number,Glimpse.Test.AspNet.AlternateType,RouteShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\AlternateType\RouteShould .cs,ReturnOneMethod,The following statement contains a magic number: Assert.Equal(2' alternationImplementation.AllMethodsRouteBase.Count());
Magic Number,Glimpse.Test.AspNet.AlternateType,RouteShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\AlternateType\RouteShould .cs,ReturnOneMethod,The following statement contains a magic number: Assert.Equal(3' alternationImplementation.AllMethodsRoute.Count());
Magic Number,Glimpse.Test.AspNet.AlternateType,RouteBaseShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\AlternateType\RouteBaseShould.cs,ReturnOneMethod,The following statement contains a magic number: Assert.Equal(2' alternationImplementation.AllMethodsRouteBase.Count());
Magic Number,Glimpse.Test.AspNet.AlternateType,RouteBaseShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\AlternateType\RouteBaseShould.cs,ReturnOneMethod,The following statement contains a magic number: Assert.Equal(3' alternationImplementation.AllMethodsRoute.Count());
Magic Number,Glimpse.Test.AspNet,AspNetFrameworkProviderShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\AspNetFrameworkProviderShould.cs,HaveHttpRequestStore,The following statement contains a magic number: Assert.Equal(5' FrameworkProvider.HttpRequestStore.Get<int>());
Magic Number,Glimpse.Test.AspNet,AspNetFrameworkProviderShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\AspNetFrameworkProviderShould.cs,SetHttpResponseStatusCode,The following statement contains a magic number: var statusCode = 200;
Magic Number,Glimpse.Test.AspNet,PreBodyTagFilterShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\PreBodyTagFilterShould.cs,HaveReplacedTheClosingBodyTagEvenWhenInputIsChunked,The following statement contains a magic number: DoHaveReplacedTheClosingBodyTag(10);
Magic Number,Glimpse.Test.AspNet,PreBodyTagFilterShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\PreBodyTagFilterShould.cs,HaveReplacedTheClosingBodyTagEvenWhenBodyTagIsBadlyCasedEvenWhenInputIsChunked,The following statement contains a magic number: DoHaveReplacedTheClosingBodyTagEvenWhenBodyTagIsBadlyCased(10);
Magic Number,Glimpse.Test.AspNet,PreBodyTagFilterShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\PreBodyTagFilterShould.cs,HaveWrittenWarningWhenThereIsNoClosingBodyTagEvenWhenInputIsChunked,The following statement contains a magic number: DoHaveWrittenWarningWhenThereIsNoClosingBodyTag(10);
Magic Number,Glimpse.Test.AspNet,PreBodyTagFilterShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\PreBodyTagFilterShould.cs,DoHaveWrittenWarningWhenThereIsNoClosingBodyTag,The following statement contains a magic number: LoggerMock.Verify(                  logger => logger.Warn(                              "Unable to locate '</body>' with content encoding '{0}' for request '{1}'. The response may be compressed or the markup may actually be missing a '</body>' tag. See {2} for information on troubleshooting this issue."'                              It.Is<object[]>(arguments => arguments.Length == 3 && object.Equals(arguments[0]' Encoding.UTF8.EncodingName) && object.Equals(arguments[1]' "REQUEST URL") && object.Equals(arguments[2]' "http://getglimpse.com/Help/Troubleshooting")))'                  Times.Once());
Magic Number,Glimpse.Test.AspNet,PreBodyTagFilterShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\PreBodyTagFilterShould.cs,DoHaveWrittenWarningWhenThereIsNoClosingBodyTag,The following statement contains a magic number: LoggerMock.Verify(                  logger => logger.Warn(                              "Unable to locate '</body>' with content encoding '{0}' for request '{1}'. The response may be compressed or the markup may actually be missing a '</body>' tag. See {2} for information on troubleshooting this issue."'                              It.Is<object[]>(arguments => arguments.Length == 3 && object.Equals(arguments[0]' Encoding.UTF8.EncodingName) && object.Equals(arguments[1]' "REQUEST URL") && object.Equals(arguments[2]' "http://getglimpse.com/Help/Troubleshooting")))'                  Times.Once());
Magic Number,Glimpse.Test.AspNet,PreBodyTagFilterShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\PreBodyTagFilterShould.cs,HaveWrittenWarningWhenThereIsNoClosingBodyTagAndSpecifiedRequestUrlIsNullEvenWhenInputIsChunked,The following statement contains a magic number: DoHaveWrittenWarningWhenThereIsNoClosingBodyTagAndSpecifiedRequestUrlIsNull(10);
Magic Number,Glimpse.Test.AspNet,PreBodyTagFilterShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\PreBodyTagFilterShould.cs,DoHaveWrittenWarningWhenThereIsNoClosingBodyTagAndSpecifiedRequestUrlIsNull,The following statement contains a magic number: LoggerMock.Verify(                  logger => logger.Warn(                              "Unable to locate '</body>' with content encoding '{0}' for request '{1}'. The response may be compressed or the markup may actually be missing a '</body>' tag. See {2} for information on troubleshooting this issue."'                              It.Is<object[]>(arguments => arguments.Length == 3 && object.Equals(arguments[0]' Encoding.UTF8.EncodingName) && object.Equals(arguments[1]' "unknown") && object.Equals(arguments[2]' "http://getglimpse.com/Help/Troubleshooting")))'                  Times.Once());
Magic Number,Glimpse.Test.AspNet,PreBodyTagFilterShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\PreBodyTagFilterShould.cs,DoHaveWrittenWarningWhenThereIsNoClosingBodyTagAndSpecifiedRequestUrlIsNull,The following statement contains a magic number: LoggerMock.Verify(                  logger => logger.Warn(                              "Unable to locate '</body>' with content encoding '{0}' for request '{1}'. The response may be compressed or the markup may actually be missing a '</body>' tag. See {2} for information on troubleshooting this issue."'                              It.Is<object[]>(arguments => arguments.Length == 3 && object.Equals(arguments[0]' Encoding.UTF8.EncodingName) && object.Equals(arguments[1]' "unknown") && object.Equals(arguments[2]' "http://getglimpse.com/Help/Troubleshooting")))'                  Times.Once());
Magic Number,Glimpse.Test.AspNet,PreBodyTagFilterShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\PreBodyTagFilterShould.cs,HaveOnlyReplacedTheLastClosingBodyTagEvenWhenInputIsChunked,The following statement contains a magic number: DoHaveOnlyReplacedTheLastClosingBodyTag(20);
Magic Number,Glimpse.Test.AspNet,PreBodyTagFilterShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\PreBodyTagFilterShould.cs,HaveReplacedTheLastClosingBodyTagWithOnlyAnotherClosingBodyTagWhenTheHtmlSnippetIsNullOrEmptyEvenWhenInputIsChunked,The following statement contains a magic number: DoHaveReplacedTheLastClosingBodyTagWithOnlyAnotherClosingBodyTagWhenTheHtmlSnippetIsNullOrEmpty(10);
Magic Number,Glimpse.Test.AspNet,PreBodyTagFilterShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\PreBodyTagFilterShould.cs,HaveLeftCompressedContentUntouched,The following statement contains a magic number: DoHaveLeftCompressedContentUntouched(html' 1024);
Magic Number,Glimpse.Test.AspNet,PreBodyTagFilterShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\PreBodyTagFilterShould.cs,StreamEquals,The following statement contains a magic number: const int bufferSize = 2048;
Magic Number,Glimpse.Test.AspNet,HttpApplicationStateBaseDataAdapterShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\HttpApplicationStateBaseDataAdapterShould.cs,HttpApplicationStateBaseDataAdapterShould,The following statement contains a magic number: applicationStateMock.Setup(st => st.Get(typeof(int).AssemblyQualifiedName)).Returns(5);
Magic Number,Glimpse.Test.AspNet,HttpApplicationStateBaseDataAdapterShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\HttpApplicationStateBaseDataAdapterShould.cs,GetViaGenerics,The following statement contains a magic number: Assert.Equal(5' dataStore.Get<int>());
Magic Number,Glimpse.Test.AspNet,HttpApplicationStateBaseDataAdapterShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\HttpApplicationStateBaseDataAdapterShould.cs,GetViaGenericsWithKey,The following statement contains a magic number: Assert.Equal(5' result);
Magic Number,Glimpse.Test.AspNet,HttpApplicationStateBaseDataAdapterShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\HttpApplicationStateBaseDataAdapterShould.cs,GetViaKey,The following statement contains a magic number: Assert.Equal(5' dataStore.Get(typeof(int).AssemblyQualifiedName));
Magic Number,Glimpse.Test.AspNet,HttpApplicationStateBaseDataAdapterShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\HttpApplicationStateBaseDataAdapterShould.cs,SetViaGenerics,The following statement contains a magic number: dataStore.Set<int>(5);
Magic Number,Glimpse.Test.AspNet,HttpApplicationStateBaseDataAdapterShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\HttpApplicationStateBaseDataAdapterShould.cs,SetViaGenerics,The following statement contains a magic number: Assert.Equal(5' dataStore.Get<int>());
Magic Number,Glimpse.Test.AspNet,HttpApplicationStateBaseDataAdapterShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\HttpApplicationStateBaseDataAdapterShould.cs,SetViaGenerics,The following statement contains a magic number: ApplicationStateMock.Verify(st => st.Set(typeof(int).AssemblyQualifiedName' 5)' Times.Once());
Magic Number,Glimpse.Test.AspNet.SerializationConverter,SessionModelConverterShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\SerializationConverter\SessionModelConverterShould.cs,ConvertItemsWithNullType,The following statement contains a magic number: Assert.Equal(columns[2]' null);
Magic Number,Glimpse.Test.AspNet.SerializationConverter,SessionModelConverterShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\SerializationConverter\SessionModelConverterShould.cs,ConvertSerializableItems,The following statement contains a magic number: Assert.Equal(columns[2]' typeof(SerializableTestObject));
Magic Number,Glimpse.Test.AspNet.SerializationConverter,SessionModelConverterShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\SerializationConverter\SessionModelConverterShould.cs,ConvertNonSerializableItemsWithToStringMethod,The following statement contains a magic number: Assert.Equal(columns[2]' typeof(NonSerializableTestObjectWithToString));
Magic Number,Glimpse.Test.AspNet.SerializationConverter,SessionModelConverterShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\SerializationConverter\SessionModelConverterShould.cs,FailToConvertNonSerializableItems,The following statement contains a magic number: Assert.Equal(columns[2]' typeof(NonSerializableTestObject));
Magic Number,Glimpse.Test.AspNet.Tab,CacheShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Tab\CacheShould.cs,ReturnData,The following statement contains a magic number: var slidingExpiration = new TimeSpan(2' 0' 0);
Magic Number,Glimpse.Test.AspNet.Tab,CacheShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Tab\CacheShould.cs,HaveSlidingExpiration,The following statement contains a magic number: var slidingExpiration = new TimeSpan(2' 0' 0);
Magic Number,Glimpse.Test.AspNet.Tab,CacheShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Tab\CacheShould.cs,HaveAbsoluteExpiration,The following statement contains a magic number: var cacheExpiryDate = DateTime.Now.AddHours(6).ToUniversalTime();
Magic Number,Glimpse.Test.AspNet.Tab,ConfigurationConnectionStringModelFactoryShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Tab\ConfigurationConnectionStringModelFactoryShould.cs,CheckHaveParsedTypicalConnectionString,The following statement contains a magic number: Assert.True(result.Details.Count > 4);
Magic Number,Glimpse.Test.AspNet.Tab,ConfigurationConnectionStringModelFactoryShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Tab\ConfigurationConnectionStringModelFactoryShould.cs,HaveHandledInvalidConnectionStringForKnownProvider,The following statement contains a magic number: Assert.Equal(6' result.Details.Count);
Magic Number,Glimpse.Test.AspNet.Tab,ConfigurationConnectionStringModelFactoryShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Tab\ConfigurationConnectionStringModelFactoryShould.cs,HaveHandledUnknownProvider,The following statement contains a magic number: Assert.Equal(5' result.Details.Count);
Magic Number,Glimpse.Test.AspNet.Tab,ConfigurationConnectionStringModelFactoryShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Tab\ConfigurationConnectionStringModelFactoryShould.cs,HaveParsedNonTypicalConnectionString,The following statement contains a magic number: Assert.Equal(5' result.Details.Count);
Magic Number,Glimpse.Test.AspNet.Tab,ConfigurationConnectionStringModelFactoryShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Tab\ConfigurationConnectionStringModelFactoryShould.cs,HaveObfuscatedMultipleKeys,The following statement contains a magic number: Assert.Equal(6' result.Details.Count);
Magic Number,Glimpse.Test.AspNet.Tab,RoutesShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Tab\RoutesShould.cs,MatchConstraintMessageToRoute,The following statement contains a magic number: var routeMessage = new RouteDataMessage(route.GetHashCode()' new System.Web.Routing.RouteData()' "routeName")                  .AsSourceMessage(route.GetType()' null)                  .AsTimedMessage(new TimerResult { Duration = TimeSpan.FromMilliseconds(19) });
Magic Number,Glimpse.Test.AspNet.Tab,RoutesShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Tab\RoutesShould.cs,MatchConstraintMessageToRoute,The following statement contains a magic number: var constraintMessage = new ProcessConstraintMessage(route.GetHashCode()' constraint.GetHashCode()' true' "test"' constraint' (System.Web.Routing.RouteValueDictionary)null' System.Web.Routing.RouteDirection.IncomingRequest)                  .AsTimedMessage(new TimerResult { Duration = TimeSpan.FromMilliseconds(25) })                  .AsSourceMessage(route.GetType()' null);
Magic Number,Glimpse.Test.AspNet.Tab,RoutesShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Tab\RoutesShould.cs,ReturnAspNetProxiedRouteInstances,The following statement contains a magic number: Assert.Equal(6' model.Count);
Magic Number,Glimpse.Test.AspNet.Tab,ServerShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Tab\ServerShould.cs,ReturnData,The following statement contains a magic number: Assert.Equal(generalVariables.Count()' 2);
Magic Number,Glimpse.Test.AspNet.Tab,ServerShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Tab\ServerShould.cs,ReturnData,The following statement contains a magic number: Assert.Equal(securityRelatedVariables.Count()' 2);
Magic Number,Glimpse.Test.AspNet.Tab,SessionShould,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Tab\SessionShould.cs,ReturnData,The following statement contains a magic number: sesionMock.SetupGet(r => r.Count).Returns(2);
Magic Number,Glimpse.Test.AspNet.Tester,AspNetFrameworkProviderTester,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Test.AspNet\Tester\AspNetFrameworkProviderTester.cs,AspNetFrameworkProviderTester,The following statement contains a magic number: HttpContextMock.Setup(ctx => ctx.Items)                  .Returns(new Dictionary<object' object>                               {                                   { typeof(string).AssemblyQualifiedName' "TestString" }'                                   { typeof(int).AssemblyQualifiedName' 5 }                               });
