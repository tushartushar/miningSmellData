Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Glimpse.AspNet.Inspector,RoutesInspector,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\Inspector\RoutesInspector.cs,Setup,Cyclomatic complexity of the method is 11
Long Parameter List,Glimpse.AspNet.AlternateType,RouteConstraintRegex,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\AlternateType\RouteConstraintRegex.cs,Match,The method has 5 parameters.
Long Parameter List,Glimpse.AspNet,PreBodyTagFilter,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\PreBodyTagFilter.cs,PreBodyTagFilter,The method has 5 parameters.
Long Parameter List,Glimpse.AspNet.Message,ProcessConstraintMessage,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\Message\ProcessConstraintMessage.cs,ProcessConstraintMessage,The method has 7 parameters.
Long Statement,Glimpse.AspNet.AlternateType,RouteConstraintRegex,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\AlternateType\RouteConstraintRegex.cs,Match,The length of the statement  "	return Regex.IsMatch (Convert.ToString (obj' (IFormatProvider)CultureInfo.InvariantCulture)' "^(" + Constraint + ")$"' RegexOptions.IgnoreCase | RegexOptions.CultureInvariant); " is 176.
Long Statement,Glimpse.AspNet,AspNetFrameworkProvider,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\AspNetFrameworkProvider.cs,InjectHttpResponseBody,The length of the statement  "		response.Filter = new PreBodyTagFilter (htmlSnippet' response.Filter' response.ContentEncoding' Context.Request != null ? Context.Request.RawUrl : null' Logger); " is 161.
Long Statement,Glimpse.AspNet,HttpHandler,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\HttpHandler.cs,ProcessRequest,The length of the statement  "		runtime.ExecuteResource (resourceName' new ResourceParameters (queryString.AllKeys.Where (key => key != null).ToDictionary (key => key' key => queryString [key]))); " is 164.
Long Statement,Glimpse.AspNet,HttpModule,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\HttpModule.cs,OnAppDomainUnload,The length of the statement  "	logger.Fatal ("AppDomain with Id: '{0}' and BaseDirectory: '{1}' has been unloaded. Any in memory data stores have been lost. {2}"' appDomain.Id' appDomain.BaseDirectory' HttpRuntimeShutdownMessageResolver.ResolveShutdownMessage ()); " is 233.
Long Statement,Glimpse.AspNet,HttpModule,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\HttpModule.cs,OnAppDomainUnload,The length of the statement  "	// before the appdomain is actually shut down' so we sleep for 100ms and hopefully that is enough for NLog to do its thing " is 122.
Long Statement,Glimpse.AspNet,HttpRuntimeShutdownMessageResolver,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\HttpRuntimeShutdownMessageResolver.cs,ResolveShutdownMessage,The length of the statement  "		var httpRuntime = httpRuntimeType.InvokeMember ("_theRuntime"' BindingFlags.NonPublic | BindingFlags.Static | BindingFlags.GetField' null' null' null) as HttpRuntime; " is 166.
Long Statement,Glimpse.AspNet,HttpRuntimeShutdownMessageResolver,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\HttpRuntimeShutdownMessageResolver.cs,ResolveShutdownMessage,The length of the statement  "			shutDownMessage += httpRuntimeType.InvokeMember ("_shutDownMessage"' BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.GetField' null' httpRuntime' null) as string; " is 176.
Long Statement,Glimpse.AspNet,PreBodyTagFilter,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\PreBodyTagFilter.cs,Write,The length of the statement  "	// Normally you would expect the contentInBuffer to contain the complete HTML code to return' but this is not always true because it is possible that  " is 149.
Long Statement,Glimpse.AspNet,PreBodyTagFilter,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\PreBodyTagFilter.cs,Write,The length of the statement  "	// the content that will be send back is larger than the buffer foreseen by ASP.NET (currently the buffer seems to be a little bit less than 16K) " is 145.
Long Statement,Glimpse.AspNet,PreBodyTagFilter,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\PreBodyTagFilter.cs,Write,The length of the statement  "	// and in that case this method will be called multiple times' which might result in false positives being written to the logs for not finding a </body>  " is 152.
Long Statement,Glimpse.AspNet,PreBodyTagFilter,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\PreBodyTagFilter.cs,Write,The length of the statement  "	//      2.1 - the </body> tag will be available in one of the next calls because the total length of the output is larger than 16K " is 130.
Long Statement,Glimpse.AspNet,PreBodyTagFilter,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\PreBodyTagFilter.cs,Write,The length of the statement  "	//      2.4 - Multiple </body> tags are available of which some might be part of a Javascript string or the markup is badly formatted " is 133.
Long Statement,Glimpse.AspNet,PreBodyTagFilter,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\PreBodyTagFilter.cs,Write,The length of the statement  "	// The easiest way to deal with this is to look for the last match for the </body> tag and if it is found we write everything before it to the " is 142.
Long Statement,Glimpse.AspNet,PreBodyTagFilter,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\PreBodyTagFilter.cs,Write,The length of the statement  "	// output stream and keep that </body> tag and everything that follows it (normally only a </html> tag but it can also be a 2.4 case) for the next call. " is 152.
Long Statement,Glimpse.AspNet,PreBodyTagFilter,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\PreBodyTagFilter.cs,Write,The length of the statement  "	// In case there is no match for the </body> tag' then we write everything to the output stream except for the last 10 characters (normally the last 6 would suffice' but we take a little margin to reassure us somehow ;-)) which we keep until the next call. " is 256.
Long Statement,Glimpse.AspNet,PreBodyTagFilter,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\PreBodyTagFilter.cs,Write,The length of the statement  "	// If there is a next call' then we first prepend the characters we kept from the previous call to the content inside the buffer (which might complete a chunked </body> tag for instance)  " is 186.
Long Statement,Glimpse.AspNet,PreBodyTagFilter,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\PreBodyTagFilter.cs,Write,The length of the statement  "	// and start our check all over again (which might result in finding a </body> tag or discarding a previously found </body> tag because that one was not the last one. " is 166.
Long Statement,Glimpse.AspNet,PreBodyTagFilter,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\PreBodyTagFilter.cs,Write,The length of the statement  "	// Anyhow' as long as we are not a the end and a </body> tag has been found previously' the output will be buffered' just to make sure there is no other </body> tag further down the stream. " is 189.
Long Statement,Glimpse.AspNet,PreBodyTagFilter,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\PreBodyTagFilter.cs,Write,The length of the statement  "	// If there is no next call' then the Flush method will be called and that one will deal with the current state' which means: " is 125.
Long Statement,Glimpse.AspNet,PreBodyTagFilter,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\PreBodyTagFilter.cs,Write,The length of the statement  "	// - in case there was no </body> tag found' then the warning will be written to the log' indicating something went wrong " is 121.
Long Statement,Glimpse.AspNet,PreBodyTagFilter,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\PreBodyTagFilter.cs,Write,The length of the statement  "		// therefor we'll write everything except the last 10 characters to the output stream and we'll keep the last 10 characters for the next call or the Flush method " is 161.
Long Statement,Glimpse.AspNet,PreBodyTagFilter,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\PreBodyTagFilter.cs,Write,The length of the statement  "			// the content has a maximum length of 10 characters' so we don't need to write anything to the output stream and we'll keep those  " is 130.
Long Statement,Glimpse.AspNet,PreBodyTagFilter,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\PreBodyTagFilter.cs,Flush,The length of the statement  "			Logger.Warn ("Unable to locate '</body>' with content encoding '{0}' for request '{1}'. The response may be compressed or the markup may actually be missing a '</body>' tag. See {2} for information on troubleshooting this issue."' ContentEncoding.EncodingName' CurrentRequestRawUrl' TroubleshootingDocsUri); " is 307.
Long Statement,Glimpse.AspNet,PreBodyTagFilter,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\PreBodyTagFilter.cs,Flush,The length of the statement  "		// either way' if a replacement has been done or a warning has been written to the logs' the remaining unwritten characters must be written to the output stream " is 160.
Long Statement,Glimpse.AspNet.Inspector,RoutesInspector,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\Inspector\RoutesInspector.cs,Setup,The length of the statement  "				var subRoutes = originalObj.GetType ().GetField ("_subRoutes"' BindingFlags.NonPublic | BindingFlags.Instance).GetValue (originalObj); " is 134.
Long Statement,Glimpse.AspNet.Inspector,RoutesInspector,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\Inspector\RoutesInspector.cs,Setup,The length of the statement  "				var routes = (IList<System.Web.Routing.Route>)subRoutes.GetType ().GetField ("_routes"' BindingFlags.NonPublic | BindingFlags.Instance).GetValue (subRoutes); " is 157.
Long Statement,Glimpse.AspNet.SerializationConverter,EnvironmentModelConverter,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\SerializationConverter\EnvironmentModelConverter.cs,BuildAssemblyDetails,The length of the statement  "		modelList.AddRow ().Column (assemblyModel.Name).Column (assemblyModel.Version).Column (assemblyModel.VersionInfo).Column (assemblyModel.Culture).Column (assemblyModel.FromGac).Column (assemblyModel.FullTrust).Column (assemblyModel.BuildMode); " is 242.
Long Statement,Glimpse.AspNet.SerializationConverter,ListOfRouteModelConverter,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\SerializationConverter\ListOfRouteModelConverter.cs,Convert,The length of the statement  "		section.AddRow ().Column (item.Area).Column (item.Name).Column (item.Url).Column (GetRouteData (item.RouteData)).Column (GetConstraintData (item.Constraints)).Column (GetDataTokens (item.DataTokens)).Column (item.Duration).SelectedIf (item.IsMatch); " is 249.
Long Statement,Glimpse.AspNet.SerializationConverter,RequestModelConverter,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\SerializationConverter\RequestModelConverter.cs,BuildQueryString,The length of the statement  "	var queryStringParametersList = queryStringParameters as IList<RequestModel.QueryStringParameter> ?? queryStringParameters.Where (p => p.Key != null).ToList (); " is 160.
Long Statement,Glimpse.AspNet.Tab,Cache,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\Tab\Cache.cs,GetData,The length of the statement  "	cacheModel.Configuration.EffectivePercentagePhysicalMemoryLimit = HttpRuntime.Cache.EffectivePercentagePhysicalMemoryLimit; " is 123.
Long Statement,Glimpse.AspNet.Tab,ConfigurationConnectionStringModelFactory,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\Tab\ConfigurationConnectionStringModelFactory.cs,Create,The length of the statement  "			IDictionary<string' object> connectionStringKeyValuePairs = DetermineConnectionStringKeyValuePairs (connectionString' resultItem.ProviderName' resultItem) ?? DetermineConnectionStringKeyValuePairs (connectionString); " is 216.
Long Statement,Glimpse.AspNet.Tab,ConfigurationConnectionStringModelFactory,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\Tab\ConfigurationConnectionStringModelFactory.cs,DetermineConnectionStringKeyValuePairs,The length of the statement  "				resultItem.Details.Add ("ERROR"' "Connection string is invalid for ProviderName=" + providerName + " : " + argumentException.Message); " is 134.
Long Statement,Glimpse.AspNet.Tab,Configuration,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\Tab\Configuration.cs,GetData,The length of the statement  "	result.Authentication = ProcessAuthenticationSection (ConfigurationManager.GetSection ("system.web/authentication") as AuthenticationSection); " is 142.
Long Statement,Glimpse.AspNet.Tab,Configuration,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\Tab\Configuration.cs,GetData,The length of the statement  "	result.CustomErrors = ProcessCustomErrors (ConfigurationManager.GetSection ("system.web/customErrors") as CustomErrorsSection); " is 127.
Long Statement,Glimpse.AspNet.Tab,Configuration,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\Tab\Configuration.cs,GetData,The length of the statement  "	result.HttpModules = ProcessHttpModules (ConfigurationManager.GetSection ("system.web/httpModules") as HttpModulesSection); " is 123.
Long Statement,Glimpse.AspNet.Tab,Configuration,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\Tab\Configuration.cs,GetData,The length of the statement  "	result.HttpHandlers = ProcessHttpHandler (ConfigurationManager.GetSection ("system.web/httpHandlers") as HttpHandlersSection); " is 126.
Long Statement,Glimpse.AspNet.Tab,Configuration,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\Tab\Configuration.cs,GetData,The length of the statement  "	result.RoleManager = ProcessRoleManager (ConfigurationManager.GetSection ("system.web/roleManager") as RoleManagerSection); " is 123.
Long Statement,Glimpse.AspNet.Tab,Environment,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\Tab\Environment.cs,FindAllAssemblies,The length of the statement  "	return BuildManager.GetReferencedAssemblies ().OfType<Assembly> ().Concat (AppDomain.CurrentDomain.GetAssemblies ()).Distinct ().OrderBy (o => o.FullName); " is 155.
Long Statement,Glimpse.AspNet.Tab,Environment,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\Tab\Environment.cs,BuildWebServerDetails,The length of the statement  "		serverType = !string.IsNullOrEmpty (serverSoftware) ? serverSoftware : processName.StartsWith ("WebDev.WebServer"' StringComparison.InvariantCultureIgnoreCase) ? "Visual Studio Web Development Server" : "Unknown"; " is 213.
Long Statement,Glimpse.AspNet.Tab,Environment,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\Tab\Environment.cs,BuildMachineDetails,The length of the statement  "	var operatingSystem = string.Format ("{0} ({1} bit)"' System.Environment.OSVersion.VersionString' is64BitOperatingSystem == null ? "?" : is64BitOperatingSystem.Value ? "64" : "32"); " is 181.
Long Statement,Glimpse.AspNet.Tab,Environment,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\Tab\Environment.cs,GetVersionNumber,The length of the statement  "	var infoVersion = assembly.GetCustomAttributes (typeof(AssemblyInformationalVersionAttribute)' false).Cast<AssemblyInformationalVersionAttribute> ().SingleOrDefault (); " is 168.
Long Statement,Glimpse.AspNet.Tab,Routes,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\Tab\Routes.cs,GetData,The length of the statement  "				var subRoutes = routeBase.GetType ().GetField ("_subRoutes"' BindingFlags.NonPublic | BindingFlags.Instance).GetValue (routeBase); " is 130.
Long Statement,Glimpse.AspNet.Tab,Routes,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\Tab\Routes.cs,GetData,The length of the statement  "				var _routes = (IList<System.Web.Routing.Route>)subRoutes.GetType ().GetField ("_routes"' BindingFlags.NonPublic | BindingFlags.Instance).GetValue (subRoutes); " is 158.
Long Statement,Glimpse.AspNet.Tab,Routes,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\Tab\Routes.cs,ProcessMessages,The length of the statement  "	return messages.GroupBy (x => x.RouteHashCode).ToDictionary (x => x.Key' x => x.ToList ().GroupBy (y => y.ConstraintHashCode).ToDictionary (y => y.Key' y => y.ToList ())); " is 171.
Long Statement,Glimpse.AspNet.Tab,Routes,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\Tab\Routes.cs,GetRouteModelForRoute,The length of the statement  "		routeModel.Area = (route.DataTokens != null && route.DataTokens.ContainsKey ("area")) ? route.DataTokens ["area"].ToString () : null; " is 133.
Long Statement,Glimpse.AspNet.Tab,Routes,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\Tab\Routes.cs,ProcessConstraints,The length of the statement  "			var counstraintMessage = SafeFirstOrDefault (counstraintRouteMessages.GetValueOrDefault (constraint.Value.GetHashCode ())); " is 123.
Empty Catch Block,Glimpse.AspNet.Model,RequestModel,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\Model\RequestModel.cs,GetPostedFiles,The method has an empty catch block.
Empty Catch Block,Glimpse.AspNet.Tab,Environment,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\Tab\Environment.cs,BuildWebServerDetails,The method has an empty catch block.
Magic Number,Glimpse.AspNet,HttpHandler,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\HttpHandler.cs,ProcessRequest,The following statement contains a magic number: if (runtime == null) {  	throw new HttpException (404' Resources.ProcessRequestMissingRuntime);  }  
Magic Number,Glimpse.AspNet,HttpHandler,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\HttpHandler.cs,ProcessRequest,The following statement contains a magic number: throw new HttpException (404' Resources.ProcessRequestMissingRuntime);  
Magic Number,Glimpse.AspNet,HttpModule,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\HttpModule.cs,OnAppDomainUnload,The following statement contains a magic number: Thread.Sleep (100);  
Magic Number,Glimpse.AspNet,PreBodyTagFilter,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\PreBodyTagFilter.cs,Write,The following statement contains a magic number: if (closingBodyTagMatch.Success) {  	// Hooray' we found "a" </body> tag' but that doesn't mean that this is "the" last </body> tag we are looking for  	// so we write everything before that match to the output stream  	WriteToOutputStream (contentInBuffer.Substring (0' closingBodyTagMatch.Index));  	// and keep the remainder for the next call or the Flush if there is no next call  	UnwrittenCharactersFromPreviousCall = contentInBuffer.Substring (closingBodyTagMatch.Index);  } else {  	// there is no match found for </body> which could have different reasons like case 2.2 for instance  	// therefor we'll write everything except the last 10 characters to the output stream and we'll keep the last 10 characters for the next call or the Flush method  	if (contentInBuffer.Length <= 10) {  		// the content has a maximum length of 10 characters' so we don't need to write anything to the output stream and we'll keep those   		// characters for the next call (most likely the Flush)  		UnwrittenCharactersFromPreviousCall = contentInBuffer;  	} else {  		WriteToOutputStream (contentInBuffer.Substring (0' contentInBuffer.Length - 10));  		UnwrittenCharactersFromPreviousCall = contentInBuffer.Substring (contentInBuffer.Length - 10);  	}  }  
Magic Number,Glimpse.AspNet,PreBodyTagFilter,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\PreBodyTagFilter.cs,Write,The following statement contains a magic number: if (closingBodyTagMatch.Success) {  	// Hooray' we found "a" </body> tag' but that doesn't mean that this is "the" last </body> tag we are looking for  	// so we write everything before that match to the output stream  	WriteToOutputStream (contentInBuffer.Substring (0' closingBodyTagMatch.Index));  	// and keep the remainder for the next call or the Flush if there is no next call  	UnwrittenCharactersFromPreviousCall = contentInBuffer.Substring (closingBodyTagMatch.Index);  } else {  	// there is no match found for </body> which could have different reasons like case 2.2 for instance  	// therefor we'll write everything except the last 10 characters to the output stream and we'll keep the last 10 characters for the next call or the Flush method  	if (contentInBuffer.Length <= 10) {  		// the content has a maximum length of 10 characters' so we don't need to write anything to the output stream and we'll keep those   		// characters for the next call (most likely the Flush)  		UnwrittenCharactersFromPreviousCall = contentInBuffer;  	} else {  		WriteToOutputStream (contentInBuffer.Substring (0' contentInBuffer.Length - 10));  		UnwrittenCharactersFromPreviousCall = contentInBuffer.Substring (contentInBuffer.Length - 10);  	}  }  
Magic Number,Glimpse.AspNet,PreBodyTagFilter,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\PreBodyTagFilter.cs,Write,The following statement contains a magic number: if (closingBodyTagMatch.Success) {  	// Hooray' we found "a" </body> tag' but that doesn't mean that this is "the" last </body> tag we are looking for  	// so we write everything before that match to the output stream  	WriteToOutputStream (contentInBuffer.Substring (0' closingBodyTagMatch.Index));  	// and keep the remainder for the next call or the Flush if there is no next call  	UnwrittenCharactersFromPreviousCall = contentInBuffer.Substring (closingBodyTagMatch.Index);  } else {  	// there is no match found for </body> which could have different reasons like case 2.2 for instance  	// therefor we'll write everything except the last 10 characters to the output stream and we'll keep the last 10 characters for the next call or the Flush method  	if (contentInBuffer.Length <= 10) {  		// the content has a maximum length of 10 characters' so we don't need to write anything to the output stream and we'll keep those   		// characters for the next call (most likely the Flush)  		UnwrittenCharactersFromPreviousCall = contentInBuffer;  	} else {  		WriteToOutputStream (contentInBuffer.Substring (0' contentInBuffer.Length - 10));  		UnwrittenCharactersFromPreviousCall = contentInBuffer.Substring (contentInBuffer.Length - 10);  	}  }  
Magic Number,Glimpse.AspNet,PreBodyTagFilter,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\PreBodyTagFilter.cs,Write,The following statement contains a magic number: if (contentInBuffer.Length <= 10) {  	// the content has a maximum length of 10 characters' so we don't need to write anything to the output stream and we'll keep those   	// characters for the next call (most likely the Flush)  	UnwrittenCharactersFromPreviousCall = contentInBuffer;  } else {  	WriteToOutputStream (contentInBuffer.Substring (0' contentInBuffer.Length - 10));  	UnwrittenCharactersFromPreviousCall = contentInBuffer.Substring (contentInBuffer.Length - 10);  }  
Magic Number,Glimpse.AspNet,PreBodyTagFilter,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\PreBodyTagFilter.cs,Write,The following statement contains a magic number: if (contentInBuffer.Length <= 10) {  	// the content has a maximum length of 10 characters' so we don't need to write anything to the output stream and we'll keep those   	// characters for the next call (most likely the Flush)  	UnwrittenCharactersFromPreviousCall = contentInBuffer;  } else {  	WriteToOutputStream (contentInBuffer.Substring (0' contentInBuffer.Length - 10));  	UnwrittenCharactersFromPreviousCall = contentInBuffer.Substring (contentInBuffer.Length - 10);  }  
Magic Number,Glimpse.AspNet,PreBodyTagFilter,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\PreBodyTagFilter.cs,Write,The following statement contains a magic number: if (contentInBuffer.Length <= 10) {  	// the content has a maximum length of 10 characters' so we don't need to write anything to the output stream and we'll keep those   	// characters for the next call (most likely the Flush)  	UnwrittenCharactersFromPreviousCall = contentInBuffer;  } else {  	WriteToOutputStream (contentInBuffer.Substring (0' contentInBuffer.Length - 10));  	UnwrittenCharactersFromPreviousCall = contentInBuffer.Substring (contentInBuffer.Length - 10);  }  
Magic Number,Glimpse.AspNet,PreBodyTagFilter,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\PreBodyTagFilter.cs,Write,The following statement contains a magic number: WriteToOutputStream (contentInBuffer.Substring (0' contentInBuffer.Length - 10));  
Magic Number,Glimpse.AspNet,PreBodyTagFilter,F:\newReposMay17\Glimpse_Glimpse\source\Glimpse.AspNet\PreBodyTagFilter.cs,Write,The following statement contains a magic number: UnwrittenCharactersFromPreviousCall = contentInBuffer.Substring (contentInBuffer.Length - 10);  
