Implementation smell,Namespace,Class,File,Method,Description
Long Method,Glimpse.Core.Resource,ConfigurationResource,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Resource\ConfigurationResource.cs,Execute,The method has 113 lines of code.
Complex Method,Glimpse.Core.Framework,GlimpseConfiguration,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Framework\GlimpseConfiguration.cs,GlimpseConfiguration,Cyclomatic complexity of the method is 18
Complex Method,Glimpse.Core.Framework,GlimpseRuntime,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Framework\GlimpseRuntime.cs,ExecuteResource,Cyclomatic complexity of the method is 8
Complex Method,Glimpse.Core.Framework,GlimpseRuntime,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Framework\GlimpseRuntime.cs,PersistMetadata,Cyclomatic complexity of the method is 8
Complex Method,Glimpse.Core.Framework,GlimpseRuntime,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Framework\GlimpseRuntime.cs,GenerateScriptTags,Cyclomatic complexity of the method is 10
Complex Method,Glimpse.Core.SerializationConverter,CSharpTypeConverter,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\SerializationConverter\CSharpTypeConverter.cs,GetName,Cyclomatic complexity of the method is 8
Complex Method,Glimpse.Core,TraceListener,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\TraceListener.cs,WriteFooter,Cyclomatic complexity of the method is 10
Complex Method,Glimpse.Core,TraceListener,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\TraceListener.cs,DeriveCategory,Cyclomatic complexity of the method is 9
Long Parameter List,Glimpse.Core.Extensibility,CastleInvocationToAlternateMethodContextAdapter,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Extensibility\CastleInvocationToAlternateMethodContextAdapter.cs,CastleInvocationToAlternateMethodContextAdapter,The method has 6 parameters. Parameters: invocation' logger' messageBroker' proxyFactory' timerStrategy' runtimePolicyStrategy
Long Parameter List,Glimpse.Core.Extensibility,InspectorContext,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Extensibility\InspectorContext.cs,InspectorContext,The method has 5 parameters. Parameters: logger' proxyFactory' messageBroker' timerStrategy' runtimePolicyStrategy
Long Parameter List,Glimpse.Core.Extensibility,AlternateTypeToCastleInterceptorAdapter,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Extensibility\AlternateTypeToCastleInterceptorAdapter.cs,AlternateTypeToCastleInterceptorAdapter,The method has 6 parameters. Parameters: implementation' logger' messageBroker' proxyFactory' timerStrategy' runtimePolicyStrategy
Long Parameter List,Glimpse.Core.Framework,Crc32,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Framework\Crc32.cs,CalculateHash,The method has 5 parameters. Parameters: table' seed' buffer' start' size
Long Parameter List,Glimpse.Core.Framework,GlimpseRequest,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Framework\GlimpseRequest.cs,GlimpseRequest,The method has 5 parameters. Parameters: requestId' requestMetadata' tabData' displayData' duration
Long Parameter List,Glimpse.Core.Framework,GlimpseConfiguration,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Framework\GlimpseConfiguration.cs,GlimpseConfiguration,The method has 19 parameters. Parameters: frameworkProvider' endpointConfiguration' clientScripts' logger' defaultRuntimePolicy' htmlEncoder' persistenceStore' inspectors' resources' serializer' tabs' displays' runtimePolicies' defaultResource' proxyFactory' messageBroker' endpointBaseUri' timerStrategy' runtimePolicyStrategy
Long Parameter List,Glimpse.Core,TraceListener,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\TraceListener.cs,TraceData,The method has 5 parameters. Parameters: eventCache' source' eventType' id' data
Long Parameter List,Glimpse.Core,TraceListener,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\TraceListener.cs,TraceData,The method has 5 parameters. Parameters: eventCache' source' eventType' id' data
Long Parameter List,Glimpse.Core,TraceListener,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\TraceListener.cs,TraceEvent,The method has 5 parameters. Parameters: eventCache' source' eventType' id' data
Long Parameter List,Glimpse.Core,TraceListener,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\TraceListener.cs,TraceEvent,The method has 6 parameters. Parameters: eventCache' source' eventType' id' format' args
Long Identifier,Glimpse.Core.Framework,GlimpseRuntime,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Framework\GlimpseRuntime.cs,ExecuteResource,The length of the parameter defaultResourceDependsOnResources is 33.
Long Identifier,Glimpse.Core.Framework,GlimpseRuntime,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Framework\GlimpseRuntime.cs,ExecuteTabs,The length of the parameter frameworkProviderRuntimeContextType is 35.
Long Identifier,Glimpse.Core.Resource,ConfigurationResource,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Resource\ConfigurationResource.cs,Execute,The length of the parameter glimpseConfigurationResourceName is 32.
Long Identifier,Glimpse.Core.Resource,ConfigurationResource,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Resource\ConfigurationResource.cs,Execute,The length of the parameter glimpseConfigurationResourceStream is 34.
Long Identifier,Glimpse.Core.Resource,ConfigurationResource,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Resource\ConfigurationResource.cs,Execute,The length of the parameter glimpseConfigurationTemplateContent is 35.
Long Identifier,Glimpse.Core.Resource,ConfigurationResource,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Resource\ConfigurationResource.cs,Execute,The length of the parameter createRuntimePolicyItemDisplay is 30.
Long Statement,Glimpse.Core.Extensibility,NuGetPackageAttribute,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Extensibility\NuGetPackageAttribute.cs,Initialize,The length of the statement  "                var infoVersion = assembly.GetCustomAttributes(typeof(AssemblyInformationalVersionAttribute)' false).Cast<AssemblyInformationalVersionAttribute>().SingleOrDefault(); " is 165.
Long Statement,Glimpse.Core.Extensibility,AlternateTypeToCastleInterceptorAdapter,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Extensibility\AlternateTypeToCastleInterceptorAdapter.cs,Intercept,The length of the statement  "            var context = new CastleInvocationToAlternateMethodContextAdapter(invocation' Logger' MessageBroker' ProxyFactory' TimerStrategy' RuntimePolicyStrategy); " is 153.
Long Statement,Glimpse.Core.Extensions,EnumExtensions,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Extensions\EnumExtensions.cs,ToDescription,The length of the statement  "            var attribute = enumType.GetField(enumValue).GetCustomAttributes(typeof(DescriptionAttribute)' false) as DescriptionAttribute[]; " is 128.
Long Statement,Glimpse.Core.Framework,AssemblyTypesResolver,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Framework\AssemblyTypesResolver.cs,ResolveTypes,The length of the statement  "            // GetTypes potentially throws an exception. Defensive coding as per http://haacked.com/archive/2012/07/23/get-all-types-in-an-assembly.aspx " is 140.
Long Statement,Glimpse.Core.Framework,CastleDynamicProxyFactory,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Framework\CastleDynamicProxyFactory.cs,WrapClass,The length of the statement  "            var result = (T)ProxyGenerator.CreateClassProxyWithTarget(typeof(T)' instance' options' ToArrayOrDefault(constructorArguments)' interceptorArray); " is 146.
Long Statement,Glimpse.Core.Framework,CastleDynamicProxyFactory,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Framework\CastleDynamicProxyFactory.cs,ExtendClass,The length of the statement  "            return (T)ProxyGenerator.CreateClassProxy(typeof(T)' options' ToArrayOrDefault(constructorArguments)' interceptorArray); " is 120.
Long Statement,Glimpse.Core.Framework,CastleDynamicProxyFactory,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Framework\CastleDynamicProxyFactory.cs,CreateInterceptorArray,The length of the statement  "            return (from implementaion in methodImplementations select new AlternateTypeToCastleInterceptorAdapter(implementaion' Logger' MessageBroker' this' TimerStrategy' RuntimePolicyStrategy)).ToArray(); " is 196.
Long Statement,Glimpse.Core.Framework,Factory,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Framework\Factory.cs,InstantiateFrameworkProvider,The length of the statement  "                    ProviderServiceLocator == null ? "ProviderServiceLocator not configured" : ProviderServiceLocator.GetType().AssemblyQualifiedName)); " is 132.
Long Statement,Glimpse.Core.Framework,Factory,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Framework\Factory.cs,InstantiateResourceEndpointConfiguration,The length of the statement  "                    ProviderServiceLocator == null ? "ProviderServiceLocator not configured" : ProviderServiceLocator.GetType().AssemblyQualifiedName)); " is 132.
Long Statement,Glimpse.Core.Framework,Factory,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Framework\Factory.cs,InstantiateLogger,The length of the statement  "                                         "${longdate} | ${level:uppercase=true} | ${message} | ${exception:maxInnerExceptionLevel=5:format=type'message'stacktrace:separator=--:innerFormat=shortType'message'method:innerExceptionSeparator=>>}" " is 200.
Long Statement,Glimpse.Core.Framework,Factory,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Framework\Factory.cs,InstantiatePersistenceStore,The length of the statement  "            return new ApplicationPersistenceStore(InstantiateFrameworkProvider().HttpServerStore' Configuration.RequestBufferSize); " is 120.
Long Statement,Glimpse.Core.Framework,Factory,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Framework\Factory.cs,InstantiateRuntimePolicyStrategy,The length of the statement  "                // - From inside an AlternateMethod instance (or basically everything that is related to a Glimpse proxy) to decide whether  " is 123.
Long Statement,Glimpse.Core.Framework,Factory,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Framework\Factory.cs,InstantiateRuntimePolicyStrategy,The length of the statement  "                //   or not Glimpse is enabled and data should be collected' and in case RuntimePolicy.Off is returned' the original method  " is 123.
Long Statement,Glimpse.Core.Framework,Factory,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Framework\Factory.cs,InstantiateRuntimePolicyStrategy,The length of the statement  "                // Now the assumption that is made here' is that this code will only be called after that the GlimpseRuntime's BeginRequest method " is 130.
Long Statement,Glimpse.Core.Framework,Factory,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Framework\Factory.cs,InstantiateRuntimePolicyStrategy,The length of the statement  "                // has run and properly initialized the 'GlimpseContext' for the current request' which means it has at least set the current runtime policy.  " is 141.
Long Statement,Glimpse.Core.Framework,Factory,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Framework\Factory.cs,InstantiateRuntimePolicyStrategy,The length of the statement  "                // Unfortunately there are use-cases where users are creative and (ab)use specific concepts to achieve a specific goal' and those uses don't " is 140.
Long Statement,Glimpse.Core.Framework,Factory,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Framework\Factory.cs,InstantiateRuntimePolicyStrategy,The length of the statement  "                // always align with Glimpse's assumptions. For example a new instance of an HttpContext is sometimes created and assigned to the HttpContext.Current " is 149.
Long Statement,Glimpse.Core.Framework,Factory,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Framework\Factory.cs,InstantiateRuntimePolicyStrategy,The length of the statement  "                // property to have a new controller instance render a view to a string as if it was a request... This has the nasty side-effect that Glimpse is not " is 148.
Long Statement,Glimpse.Core.Framework,Factory,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Framework\Factory.cs,InstantiateRuntimePolicyStrategy,The length of the statement  "                // Therefore if we notice that the current request has not properly been initialized by the GlimpseRuntime's BeginRequest method then we'll decide " is 146.
Long Statement,Glimpse.Core.Framework,Factory,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Framework\Factory.cs,InstantiateRuntimePolicyStrategy,The length of the statement  "                // that Glimpse is disabled' which is the safest assumption we can make here' preventing any further Glimpse specific code from collection information for that new "request". " is 174.
Long Statement,Glimpse.Core.Framework,Factory,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Framework\Factory.cs,InstantiateRuntimePolicyStrategy,The length of the statement  "                    logger.Debug("Apparently GlimpseRuntime has not yet initialized this request. This might happen in case you're doing something specific like mentioned in this issue: https://github.com/Glimpse/Glimpse/issues/703 . Either way' Glimpse will be disabled to prevent any further non-deterministic behavior during this request."); " is 324.
Long Statement,Glimpse.Core.Framework,Factory,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Framework\Factory.cs,InstantiateConfiguration,The length of the statement  "            return new GlimpseConfiguration(frameworkProvider' endpointConfiguration' clientScripts' logger' policy' htmlEncoder' persistenceStore' inspectors' resources' serializer' tabs' displays' runtimePolicies' defaultResource' proxyFactory' messageBroker' endpointBaseUri' timerStrategy' runtimePolicyStrategy); " is 305.
Long Statement,Glimpse.Core.Framework,Factory,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Framework\Factory.cs,InstantiateProxyFactory,The length of the statement  "            return new CastleDynamicProxyFactory(InstantiateLogger()' InstantiateMessageBroker()' InstantiateTimerStrategy()' InstantiateRuntimePolicyStrategy()); " is 150.
Long Statement,Glimpse.Core.Framework,ReflectionDiscoverableCollection<T>,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Framework\ReflectionDiscoverableCollection.cs,Discover,The length of the statement  "            // This behavior only to support usage of glimpse[@discoverLocation] attribute. Remove "if" block in Glimpse 2.0 in favor of "else" if it is decided that discovery location is not required " is 188.
Long Statement,Glimpse.Core.Framework,GlimpseRuntime,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Framework\GlimpseRuntime.cs,BeginRequest,The length of the statement  "            Func<Guid?' string> generateClientScripts = (rId) => rId.HasValue ? GenerateScriptTags(rId.Value) : GenerateScriptTags(requestId); " is 130.
Long Statement,Glimpse.Core.Framework,GlimpseRuntime,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Framework\GlimpseRuntime.cs,BeginRequest,The length of the statement  "            Configuration.MessageBroker.Publish(new RuntimeMessage().AsSourceMessage(typeof(GlimpseRuntime)' MethodInfoBeginRequest).AsTimelineMessage("Start Request"' TimelineCategory.Request).AsTimedMessage(executionTimer.Point())); " is 222.
Long Statement,Glimpse.Core.Framework,GlimpseRuntime,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Framework\GlimpseRuntime.cs,EndRequest,The length of the statement  "                Configuration.MessageBroker.Publish(new RuntimeMessage().AsSourceMessage(typeof(GlimpseRuntime)' MethodInfoBeginRequest).AsTimelineMessage("End Request"' TimelineCategory.Request).AsTimedMessage(executionTimer.Point())); " is 220.
Long Statement,Glimpse.Core.Framework,GlimpseRuntime,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Framework\GlimpseRuntime.cs,ExecuteResource,The length of the statement  "            var context = new ResourceResultContext(logger' Configuration.FrameworkProvider' Configuration.Serializer' Configuration.HtmlEncoder); " is 134.
Long Statement,Glimpse.Core.Framework,GlimpseRuntime,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Framework\GlimpseRuntime.cs,ExecuteResource,The length of the statement  "            // It is possible that the policy now says Off' but if the requested resource is the default resource or one of it dependent resources'  " is 135.
Long Statement,Glimpse.Core.Framework,GlimpseRuntime,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Framework\GlimpseRuntime.cs,ExecuteResource,The length of the statement  "            // then we need to make sure there is a good reason for not executing that resource' since the default resource (or one of it dependencies) " is 139.
Long Statement,Glimpse.Core.Framework,GlimpseRuntime,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Framework\GlimpseRuntime.cs,ExecuteResource,The length of the statement  "            if (resourceName.Equals(Configuration.DefaultResource.Name) || (defaultResourceDependsOnResources != null && defaultResourceDependsOnResources.DependsOn(resourceName))) " is 168.
Long Statement,Glimpse.Core.Framework,GlimpseRuntime,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Framework\GlimpseRuntime.cs,ExecuteResource,The length of the statement  "                // To be clear we only do this for the default resource (or its dependencies)' and we do this because it allows us to secure the default resource  " is 145.
Long Statement,Glimpse.Core.Framework,GlimpseRuntime,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Framework\GlimpseRuntime.cs,ExecuteResource,The length of the statement  "                // the same way as any other resource' but for this we only rely on runtime policies that handle ExecuteResource runtime events and we ignore " is 141.
Long Statement,Glimpse.Core.Framework,GlimpseRuntime,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Framework\GlimpseRuntime.cs,ExecuteResource,The length of the statement  "                        var resourceContext = new ResourceContext(parameters.GetParametersFor(resource)' Configuration.PersistenceStore' logger); " is 121.
Long Statement,Glimpse.Core.Framework,GlimpseRuntime,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Framework\GlimpseRuntime.cs,Initialize,The length of the statement  "                            var displaysThatRequireSetup = Configuration.Displays.Where(display => display is ITabSetup).Select(display => display); " is 120.
Long Statement,Glimpse.Core.Framework,GlimpseRuntime,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Framework\GlimpseRuntime.cs,Initialize,The length of the statement  "                            var inspectorContext = new InspectorContext(logger' Configuration.ProxyFactory' messageBroker' Configuration.TimerStrategy' Configuration.RuntimePolicyStrategy); " is 161.
Long Statement,Glimpse.Core.Framework,GlimpseRuntime,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Framework\GlimpseRuntime.cs,ExecuteTabs,The length of the statement  "            // Only use tabs that either don't specify a specific context type' or have a context type that matches the current framework provider's. " is 137.
Long Statement,Glimpse.Core.Framework,GlimpseRuntime,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Framework\GlimpseRuntime.cs,ExecuteDisplays,The length of the statement  "                    var displayContext = new TabContext(runtimeContext' GetTabStore(key)' logger' messageBroker); // TODO: Do we need a DisplayContext? " is 131.
Long Statement,Glimpse.Core.Framework,GlimpseRuntime,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Framework\GlimpseRuntime.cs,DetermineRuntimePolicy,The length of the statement  "            var policyContext = new RuntimePolicyContext(frameworkProvider.RequestMetadata' Configuration.Logger' frameworkProvider.RuntimeContext); " is 136.
Long Statement,Glimpse.Core.Framework,GlimpseRuntime,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Framework\GlimpseRuntime.cs,DetermineRuntimePolicy,The length of the statement  "                        logger.Debug("RuntimePolicy set to '{0}' by IRuntimePolicy of type '{1}' during RuntimeEvent '{2}'."' policyResult' policy.GetType()' runtimeEvent); " is 148.
Long Statement,Glimpse.Core.Framework,GlimpseRuntime,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Framework\GlimpseRuntime.cs,DetermineRuntimePolicy,The length of the statement  "                    logger.Warn("Exception when executing IRuntimePolicy of type '{0}'. RuntimePolicy is now set to 'Off'."' exception' policy.GetType()); " is 134.
Long Statement,Glimpse.Core.Resource,ConfigurationScriptResource,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Resource\ConfigurationScriptResource.cs,GetEmbeddedResourceInfo,The length of the statement  "            return new EmbeddedResourceInfo(this.GetType().Assembly' "Glimpse.Core.EmbeddedResources.glimpse_config.js"' "text/javascript"); " is 128.
Long Statement,Glimpse.Core.Resource,ConfigurationStyleResource,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Resource\ConfigurationStyleResource.cs,GetEmbeddedResourceInfo,The length of the statement  "            return new EmbeddedResourceInfo(this.GetType().Assembly' "Glimpse.Core.EmbeddedResources.glimpse_config.css"' "text/css"); " is 122.
Long Statement,Glimpse.Core.Resource,PopupRedirectResource,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Resource\PopupRedirectResource.cs,Execute,The length of the statement  "                return new HtmlResourceResult("<html><body><h1>Sorry no requests are currently available</h1>This is a current limitation of this feature. For Glimpse client to work' Glimpse has to detect at least one requesting for which it is enabled.<br /><br />If you are using this feature and it is causing you issues' please let us know.</body></html>"); " is 345.
Long Statement,Glimpse.Core.Resource,PopupRedirectResource,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Resource\PopupRedirectResource.cs,Execute,The length of the statement  "            var popupResource = configuration.Resources.FirstOrDefault(r => r.Name.Equals("glimpse_popup"' StringComparison.InvariantCultureIgnoreCase)); " is 141.
Long Statement,Glimpse.Core.Resource,PopupRedirectResource,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Resource\PopupRedirectResource.cs,Execute,The length of the statement  "            var popupUriTemplate = configuration.ResourceEndpoint.GenerateUriTemplate(popupResource' configuration.EndpointBaseUri' configuration.Logger); " is 142.
Long Statement,Glimpse.Core.Resource,PopupRedirectResource,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Resource\PopupRedirectResource.cs,Execute,The length of the statement  "            return new CacheControlDecorator(0' CacheSetting.NoCache' new RedirectResourceResult(popupUriTemplate' new Dictionary<string' object> { { ResourceParameter.RequestId.Name' request.RequestId.ToString() } })); " is 207.
Long Statement,Glimpse.Core.Resource,ConfigurationResource,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Resource\ConfigurationResource.cs,Execute,The length of the statement  "            Stream glimpseConfigurationResourceStream = this.GetType().Assembly.GetManifestResourceStream(glimpseConfigurationResourceName); " is 128.
Long Statement,Glimpse.Core.Resource,ConfigurationResource,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Resource\ConfigurationResource.cs,Execute,The length of the statement  "            var logosResource = glimpseMetadata.Resources[LogosResource.InternalName].Replace("{&" + ResourceParameter.Hash.Name + "}"' string.Empty); " is 138.
Long Statement,Glimpse.Core.Resource,ConfigurationResource,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Resource\ConfigurationResource.cs,Execute,The length of the statement  "            glimpseConfigurationTemplate.Add("configurationStyleUri"' glimpseMetadata.Resources[ConfigurationStyleResource.InternalName].Replace("{&" + ResourceParameter.Hash.Name + "}"' string.Empty)); " is 190.
Long Statement,Glimpse.Core.Resource,ConfigurationResource,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Resource\ConfigurationResource.cs,Execute,The length of the statement  "            glimpseConfigurationTemplate.Add("configurationScriptUri"' glimpseMetadata.Resources[ConfigurationScriptResource.InternalName].Replace("{&" + ResourceParameter.Hash.Name + "}"' string.Empty)); " is 192.
Long Statement,Glimpse.Core.Resource,ConfigurationResource,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Resource\ConfigurationResource.cs,Execute,The length of the statement  "            glimpseConfigurationTemplate.Add("duplicateResources"' duplicateResources.Select((duplicateResource' index) => new { Name = duplicateResource' IsNotFirstDuplicate = index != 0 })); " is 180.
Long Statement,Glimpse.Core.Resource,ConfigurationResource,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Resource\ConfigurationResource.cs,Execute,The length of the statement  "                string warningMessage = registeredRuntimePolicy.GetType().FullName == "Glimpse.AspNet.Policy.LocalPolicy" ? "*This policy means that Glimpse won't run remotely.*" : string.Empty; " is 178.
Long Statement,Glimpse.Core.Resource,ConfigurationResource,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Resource\ConfigurationResource.cs,Execute,The length of the statement  "                GroupItemsByPackage(configuration.RuntimePolicies.OrderBy(x => x.GetType().FullName)' packages' createRuntimePolicyItemDisplay).ToArray()); " is 139.
Long Statement,Glimpse.Core.Resource,ConfigurationResource,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Resource\ConfigurationResource.cs,Execute,The length of the statement  "                GroupItemsByPackage(configuration.Inspectors.OrderBy(x => x.GetType().FullName)' packages' createInspectorItemDisplay).ToArray()); " is 130.
Long Statement,Glimpse.Core.Resource,ConfigurationResource,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Resource\ConfigurationResource.cs,Execute,The length of the statement  "                Parameters = resource.Parameters != null ? string.Join("' "' resource.Parameters.Select(parameter => string.Format("{0} ({1})"' parameter.Name' parameter.IsRequired)).ToArray()) : string.Empty' " is 193.
Long Statement,Glimpse.Core.Resource,ConfigurationResource,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Resource\ConfigurationResource.cs,Execute,The length of the statement  "                GroupItemsByPackage(configuration.ClientScripts.OrderBy(x => x.GetType().FullName)' packages' createClientScriptItemDisplay).ToArray()); " is 136.
Long Statement,Glimpse.Core.Resource,ConfigurationResource,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Resource\ConfigurationResource.cs,Execute,The length of the statement  "                glimpseConfigurationTemplate.Add("nonProcessableAssemblies"' nonProcessableAssemblies.Select(nonProcessableAssembly => nonProcessableAssembly.FullName).ToArray()); " is 163.
Long Statement,Glimpse.Core.Resource,ConfigurationResource,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Resource\ConfigurationResource.cs,GroupItemsByPackage,The length of the statement  "                    PackageVersion = !string.IsNullOrEmpty(package.Package.Version) ? string.Format("({0})"' package.Package.Version) : string.Empty' " is 129.
Long Statement,Glimpse.Core.Resource,FileResource,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Resource\FileResource.cs,Execute,The length of the statement  "                    return new CacheControlDecorator(CacheDuration' CacheSetting.Public' new FileResourceResult(content' embeddedResourceInfo.ContentType)); " is 136.
Long Statement,Glimpse.Core.Resource,FileResource,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Resource\FileResource.cs,Execute,The length of the statement  "            return new StatusCodeResourceResult(404' string.Format("Could not locate embedded resource with name '{0}' inside assembly '{1}'."' embeddedResourceInfo.Name' embeddedResourceInfo.Assembly.FullName)); " is 200.
Long Statement,Glimpse.Core.Resource,AjaxResource,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Resource\AjaxResource.cs,Execute,The length of the statement  "                return new StatusCodeResourceResult(404' string.Format("Could not parse ParentRequestKey '{0}' as GUID."' parentRequestKey)); " is 125.
Long Statement,Glimpse.Core.Resource,AjaxResource,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Resource\AjaxResource.cs,Execute,The length of the statement  "                return new StatusCodeResourceResult(404' string.Format("Could not parse ParentRequestKey '{0}' as GUID."' parentRequestKey)); " is 125.
Long Statement,Glimpse.Core.Resource,AjaxResource,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Resource\AjaxResource.cs,Execute,The length of the statement  "                return new StatusCodeResourceResult(404' string.Format("Could not find requests with ParentRequestKey '{0}'."' parentRequestKey)); " is 130.
Long Statement,Glimpse.Core.Resource,AjaxResource,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Resource\AjaxResource.cs,Execute,The length of the statement  "            return new CacheControlDecorator(0' CacheSetting.NoCache' new JsonResourceResult(data.Where(r => r.RequestIsAjax)' context.Parameters.GetValueOrDefault(ResourceParameter.Callback.Name))); " is 187.
Long Statement,Glimpse.Core.Resource,HistoryResource,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Resource\HistoryResource.cs,Execute,The length of the statement  "            var requests = data.GroupBy(d => d.ClientId).ToDictionary(group => group.Key' group => group.Select(g => new GlimpseRequestHeaders(g))); " is 136.
Long Statement,Glimpse.Core.Resource,HistoryResource,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Resource\HistoryResource.cs,Execute,The length of the statement  "            return new CacheControlDecorator(0' CacheSetting.NoCache' new JsonResourceResult(requests' context.Parameters.GetValueOrDefault(ResourceParameter.Callback.Name))); " is 163.
Long Statement,Glimpse.Core.Resource,PopupResource,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Resource\PopupResource.cs,Execute,The length of the statement  "            var html = string.Format("<!DOCTYPE html><html><head><meta charset='utf-8'><title>Glimpse Popup</title></head><body class='glimpse-popup'>{0}</body></html>"' scriptTags); " is 170.
Long Statement,Glimpse.Core.Resource,RequestResource,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Resource\RequestResource.cs,Execute,The length of the statement  "            return new CacheControlDecorator(CacheDuration' CacheSetting.Private' new JsonResourceResult(data' context.Parameters.GetValueOrDefault(ResourceParameter.Callback.Name))); " is 171.
Long Statement,Glimpse.Core.Resource,MetadataResource,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Resource\MetadataResource.cs,Execute,The length of the statement  "            return new CacheControlDecorator(CacheDuration' CacheSetting.Public' new JsonResourceResult(metadata' context.Parameters.GetValueOrDefault(ResourceParameter.Callback.Name))); " is 174.
Long Statement,Glimpse.Core.Resource,VersionCheckResource,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Resource\VersionCheckResource.cs,Execute,The length of the statement  "            return new CacheControlDecorator(OneDay' CacheSetting.Public' new RedirectResourceResult(@"//" + domain + "/Api/Version/Check{?packages*}{&stamp}{&callback}"' data)); " is 166.
Long Statement,Glimpse.Core.SerializationConverter,ListOfTraceMessageConverter,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\SerializationConverter\ListOfTraceMessageConverter.cs,Convert,The length of the statement  "                root.AddRow().Column(item.Category).Column(GenerateTabs(item)).Column(item.FromFirst).Column(item.FromLast).Style(item.Category); " is 129.
Long Statement,Glimpse.Core.SerializationConverter,TimelineEventModelConverter,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\SerializationConverter\TimelineEventModelConverter.cs,Convert,The length of the statement  "            return new { model.Title' model.Category' model.SubText' model.StartTime' model.Details' model.Duration' model.StartPoint }; " is 124.
Long Statement,Glimpse.Core.Support,NuGetPackageDiscoverer,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Support\NuGetPackageDiscoverer.cs,Discover,The length of the statement  "                    GlimpseConfiguration.GetLogger().Error(string.Format("Failed requesting custom attributes of assembly '{0}'"' assembly.FullName)' exception); " is 141.
Long Statement,Glimpse.Core.ResourceResult,CacheControlDecorator,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\ResourceResult\CacheControlDecorator.cs,Decorate,The length of the statement  "                frameworkProvider.SetHttpResponseHeader("Cache-Control"' string.Format("{0}' max-age={1}"' CacheSetting.Value.ToDescription()' CacheDuration)); " is 143.
Long Statement,Glimpse.Core.Tab,Timeline,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Tab\Timeline.cs,GetData,The length of the statement  "                        result.Category[viewRenderMessage.EventCategory.Name] = new TimelineCategoryModel { EventColor = viewRenderMessage.EventCategory.Color' EventColorHighlight = viewRenderMessage.EventCategory.ColorHighlight }; " is 207.
Magic Number,Glimpse.Core.Configuration,StatusCodeElementCollection,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Configuration\StatusCodeElementCollection.cs,StatusCodeElementCollection,The following statement contains a magic number: BaseAdd(new StatusCodeElement { StatusCode = 200 });
Magic Number,Glimpse.Core.Configuration,StatusCodeElementCollection,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Configuration\StatusCodeElementCollection.cs,StatusCodeElementCollection,The following statement contains a magic number: BaseAdd(new StatusCodeElement { StatusCode = 301 });
Magic Number,Glimpse.Core.Configuration,StatusCodeElementCollection,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Configuration\StatusCodeElementCollection.cs,StatusCodeElementCollection,The following statement contains a magic number: BaseAdd(new StatusCodeElement { StatusCode = 302 });
Magic Number,Glimpse.Core.Extensibility,AlternateTypeGenerationHook<T>,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Extensibility\AlternateTypeGenerationHook.cs,GetHashCode,The following statement contains a magic number: int hash = 17;
Magic Number,Glimpse.Core.Extensibility,AlternateTypeGenerationHook<T>,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Extensibility\AlternateTypeGenerationHook.cs,GetHashCode,The following statement contains a magic number: hash = (hash * 23) + implementation.GetType().GetHashCode();
Magic Number,Glimpse.Core.Framework,Crc32,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Framework\Crc32.cs,InitializeTable,The following statement contains a magic number: uint[] createTable = new uint[256];
Magic Number,Glimpse.Core.Framework,Crc32,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Framework\Crc32.cs,InitializeTable,The following statement contains a magic number: j < 8
Magic Number,Glimpse.Core.Framework,Crc32,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Framework\Crc32.cs,InitializeTable,The following statement contains a magic number: i < 256
Magic Number,Glimpse.Core.Framework,Crc32,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Framework\Crc32.cs,CalculateHash,The following statement contains a magic number: crc = (crc >> 8) ^ table[buffer[i] ^ crc & 0xff];
Magic Number,Glimpse.Core.Framework,Crc32,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Framework\Crc32.cs,UInt32ToBigEndianBytes,The following statement contains a magic number: return new[]                  {                      (byte)((x >> 24) & 0xff)'                       (byte)((x >> 16) & 0xff)'                       (byte)((x >> 8) & 0xff)'                       (byte)(x & 0xff)                  };
Magic Number,Glimpse.Core.Framework,Crc32,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Framework\Crc32.cs,UInt32ToBigEndianBytes,The following statement contains a magic number: return new[]                  {                      (byte)((x >> 24) & 0xff)'                       (byte)((x >> 16) & 0xff)'                       (byte)((x >> 8) & 0xff)'                       (byte)(x & 0xff)                  };
Magic Number,Glimpse.Core.Framework,Crc32,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Framework\Crc32.cs,UInt32ToBigEndianBytes,The following statement contains a magic number: return new[]                  {                      (byte)((x >> 24) & 0xff)'                       (byte)((x >> 16) & 0xff)'                       (byte)((x >> 8) & 0xff)'                       (byte)(x & 0xff)                  };
Magic Number,Glimpse.Core.Framework,GlimpseRuntime,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Framework\GlimpseRuntime.cs,GlimpseRuntime,The following statement contains a magic number: Version = Assembly.GetExecutingAssembly().GetName().Version.ToString(3);
Magic Number,Glimpse.Core.Framework,GlimpseRuntime,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Framework\GlimpseRuntime.cs,ExecuteResource,The following statement contains a magic number: new StatusCodeResourceResult(403' errorMessage).Execute(context);
Magic Number,Glimpse.Core.Framework,GlimpseRuntime,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Framework\GlimpseRuntime.cs,ExecuteResource,The following statement contains a magic number: switch (resources.Count())              {                  case 1: // 200 - OK                      try                      {                          var resource = resources.First();                          var resourceContext = new ResourceContext(parameters.GetParametersFor(resource)' Configuration.PersistenceStore' logger);                            var privilegedResource = resource as IPrivilegedResource;                            if (privilegedResource != null)                          {                              result = privilegedResource.Execute(resourceContext' Configuration);                          }                          else                          {                              result = resource.Execute(resourceContext);                          }                      }                      catch (Exception ex)                      {                          logger.Error(Resources.GlimpseRuntimeExecuteResourceError' ex' resourceName);                          result = new ExceptionResourceResult(ex);                      }                        break;                  case 0: // 404 - File Not Found                      message = string.Format(Resources.ExecuteResourceMissingError' resourceName);                      logger.Warn(message);                      result = new StatusCodeResourceResult(404' message);                      break;                  default: // 500 - Server Error                      message = string.Format(Resources.ExecuteResourceDuplicateError' resourceName);                      logger.Warn(message);                      result = new StatusCodeResourceResult(500' message);                      break;              }
Magic Number,Glimpse.Core.Framework,GlimpseRuntime,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Framework\GlimpseRuntime.cs,ExecuteResource,The following statement contains a magic number: switch (resources.Count())              {                  case 1: // 200 - OK                      try                      {                          var resource = resources.First();                          var resourceContext = new ResourceContext(parameters.GetParametersFor(resource)' Configuration.PersistenceStore' logger);                            var privilegedResource = resource as IPrivilegedResource;                            if (privilegedResource != null)                          {                              result = privilegedResource.Execute(resourceContext' Configuration);                          }                          else                          {                              result = resource.Execute(resourceContext);                          }                      }                      catch (Exception ex)                      {                          logger.Error(Resources.GlimpseRuntimeExecuteResourceError' ex' resourceName);                          result = new ExceptionResourceResult(ex);                      }                        break;                  case 0: // 404 - File Not Found                      message = string.Format(Resources.ExecuteResourceMissingError' resourceName);                      logger.Warn(message);                      result = new StatusCodeResourceResult(404' message);                      break;                  default: // 500 - Server Error                      message = string.Format(Resources.ExecuteResourceDuplicateError' resourceName);                      logger.Warn(message);                      result = new StatusCodeResourceResult(500' message);                      break;              }
Magic Number,Glimpse.Core.Resource,FileResource,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Resource\FileResource.cs,Execute,The following statement contains a magic number: return new StatusCodeResourceResult(404' string.Format("Could not get embedded resource information."));
Magic Number,Glimpse.Core.Resource,FileResource,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Resource\FileResource.cs,Execute,The following statement contains a magic number: return new StatusCodeResourceResult(404' string.Format("Could not locate embedded resource with name '{0}' inside assembly '{1}'."' embeddedResourceInfo.Name' embeddedResourceInfo.Assembly.FullName));
Magic Number,Glimpse.Core.Resource,AjaxResource,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Resource\AjaxResource.cs,Execute,The following statement contains a magic number: return new StatusCodeResourceResult(404' string.Format("Could not parse ParentRequestKey '{0}' as GUID."' parentRequestKey));
Magic Number,Glimpse.Core.Resource,AjaxResource,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Resource\AjaxResource.cs,Execute,The following statement contains a magic number: return new StatusCodeResourceResult(404' string.Format("Could not find requests with ParentRequestKey '{0}'."' parentRequestKey));
Magic Number,Glimpse.Core.Resource,HistoryResource,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Resource\HistoryResource.cs,Execute,The following statement contains a magic number: return new StatusCodeResourceResult(404' string.Format("No data found in top {0}."' top));
Magic Number,Glimpse.Core.Resource,PopupResource,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Resource\PopupResource.cs,Execute,The following statement contains a magic number: return new StatusCodeResourceResult(404' string.Format("Could not parse RequestId of '{0}' as GUID."' request));
Magic Number,Glimpse.Core.Resource,RequestResource,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Resource\RequestResource.cs,Execute,The following statement contains a magic number: return new StatusCodeResourceResult(404' string.Format("Could not parse RequestId '{0} as GUID.'"' request));
Magic Number,Glimpse.Core.Resource,RequestResource,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Resource\RequestResource.cs,Execute,The following statement contains a magic number: return new StatusCodeResourceResult(404' string.Format("No data found for RequestId '{0}'."' request));
Magic Number,Glimpse.Core.Resource,MetadataResource,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\Resource\MetadataResource.cs,Execute,The following statement contains a magic number: return new StatusCodeResourceResult(404' "Metadata not found.");
Magic Number,Glimpse.Core.SerializationConverter,TimeSpanConverter,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\SerializationConverter\TimeSpanConverter.cs,Convert,The following statement contains a magic number: return Math.Round(converted.Value.TotalMilliseconds' 2);
Magic Number,Glimpse.Core.ResourceResult,RedirectResourceResult,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\ResourceResult\RedirectResourceResult.cs,Execute,The following statement contains a magic number: frameworkProvider.SetHttpResponseStatusCode(301);
Missing Default,Glimpse.Core,TraceListener,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\TraceListener.cs,DeriveCategory,The following switch statement is missing a default case: switch (category.ToLower())                  {                      case "warning":                      case "warn":                          return FormattingKeywords.Warn;                      case "information":                      case "info":                          return FormattingKeywords.Info;                      case "error":                          return FormattingKeywords.Error;                      case "fail":                          return FormattingKeywords.Fail;                      case "quiet":                          return FormattingKeywords.Quiet;                      case "timing":                      case "loading":                          return FormattingKeywords.Loading;                      case "selected":                          return FormattingKeywords.Selected;                      case "aspx.page":                      case "system":                      case "ms":                          return FormattingKeywords.Ms;                  }
Missing Default,Glimpse.Core,TraceListener,D:\research\architectureSmells\repos\Glimpse_Glimpse\source\Glimpse.Core\TraceListener.cs,DeriveCategory,The following switch statement is missing a default case: switch (type)              {                  case TraceEventType.Error:                      return FormattingKeywords.Error;                  case TraceEventType.Critical:                      return FormattingKeywords.Fail;                  case TraceEventType.Warning:                      return FormattingKeywords.Warn;                  case TraceEventType.Information:                      return FormattingKeywords.Info;              }
