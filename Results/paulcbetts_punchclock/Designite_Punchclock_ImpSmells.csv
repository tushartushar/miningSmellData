Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Punchclock,OperationQueueExtensions,C:\repos\paulcbetts_punchclock\src\Punchclock\OperationQueueExtensions.cs,Enqueue,The method has 5 parameters. Parameters: This' priority' key' token' asyncOperation
Long Parameter List,Punchclock,OperationQueueExtensions,C:\repos\paulcbetts_punchclock\src\Punchclock\OperationQueueExtensions.cs,Enqueue,The method has 5 parameters. Parameters: This' priority' key' token' asyncOperation
Magic Number,Punchclock,PriorityQueue<T>,C:\repos\paulcbetts_punchclock\src\Punchclock\PriorityQueue.cs,Percolate,The following statement contains a magic number: var parent = (index - 1) / 2;
Magic Number,Punchclock,PriorityQueue<T>,C:\repos\paulcbetts_punchclock\src\Punchclock\PriorityQueue.cs,Heapify,The following statement contains a magic number: var left = 2 * index + 1;
Magic Number,Punchclock,PriorityQueue<T>,C:\repos\paulcbetts_punchclock\src\Punchclock\PriorityQueue.cs,Heapify,The following statement contains a magic number: var right = 2 * index + 2;
Magic Number,Punchclock,PriorityQueue<T>,C:\repos\paulcbetts_punchclock\src\Punchclock\PriorityQueue.cs,Heapify,The following statement contains a magic number: var right = 2 * index + 2;
Magic Number,Punchclock,PriorityQueue<T>,C:\repos\paulcbetts_punchclock\src\Punchclock\PriorityQueue.cs,RemoveAt,The following statement contains a magic number: if (_size < _items.Length / 4 && (single || _size < DEFAULT_CAPACITY))              {                  var temp = _items;                  _items = new IndexedItem[_items.Length / 2];                  Array.Copy(temp' 0' _items' 0' _size);              }
Magic Number,Punchclock,PriorityQueue<T>,C:\repos\paulcbetts_punchclock\src\Punchclock\PriorityQueue.cs,RemoveAt,The following statement contains a magic number: if (_size < _items.Length / 4 && (single || _size < DEFAULT_CAPACITY))              {                  var temp = _items;                  _items = new IndexedItem[_items.Length / 2];                  Array.Copy(temp' 0' _items' 0' _size);              }
Magic Number,Punchclock,PriorityQueue<T>,C:\repos\paulcbetts_punchclock\src\Punchclock\PriorityQueue.cs,Enqueue,The following statement contains a magic number: if (_size >= _items.Length)              {                  var temp = _items;                  _items = new IndexedItem[_items.Length * 2];                  Array.Copy(temp' _items' temp.Length);              }
