Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Punchclock.Tests,ApiApprovalBase,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\Utilities\ApiApprovalBase.cs,CheckApproval,The length of the statement  "            var approvedFileName = Path.Combine(sourceDirectory' $"ApiApprovalTests.{memberName}.{targetFrameworkName}.approved.txt"); " is 122.
Long Statement,Punchclock.Tests,ApiApprovalBase,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\Utilities\ApiApprovalBase.cs,CheckApproval,The length of the statement  "            var receivedFileName = Path.Combine(sourceDirectory' $"ApiApprovalTests.{memberName}.{targetFrameworkName}.received.txt"); " is 122.
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,ItemsShouldBeDispatchedByPriority,The following statement contains a magic number: var subjects = Enumerable.Range(0' 5).Select(x => new AsyncSubject<int>()).ToArray();
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,ItemsShouldBeDispatchedByPriority,The following statement contains a magic number: var priorities = new[] { 5' 5' 5' 10' 1' };
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,ItemsShouldBeDispatchedByPriority,The following statement contains a magic number: var priorities = new[] { 5' 5' 5' 10' 1' };
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,ItemsShouldBeDispatchedByPriority,The following statement contains a magic number: var priorities = new[] { 5' 5' 5' 10' 1' };
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,ItemsShouldBeDispatchedByPriority,The following statement contains a magic number: var priorities = new[] { 5' 5' 5' 10' 1' };
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,ItemsShouldBeDispatchedByPriority,The following statement contains a magic number: var fixture = new OperationQueue(2);
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,ItemsShouldBeDispatchedByPriority,The following statement contains a magic number: subjects[0].OnNext(42);
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,ItemsShouldBeDispatchedByPriority,The following statement contains a magic number: subjects[4].OnNext(42);
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,ItemsShouldBeDispatchedByPriority,The following statement contains a magic number: subjects[4].OnNext(42);
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,ItemsShouldBeDispatchedByPriority,The following statement contains a magic number: subjects[4].OnCompleted();
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,ItemsShouldBeDispatchedByPriority,The following statement contains a magic number: subjects[1].OnNext(42);
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,ItemsShouldBeDispatchedByPriority,The following statement contains a magic number: subjects[2].OnNext(42);
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,ItemsShouldBeDispatchedByPriority,The following statement contains a magic number: subjects[2].OnNext(42);
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,ItemsShouldBeDispatchedByPriority,The following statement contains a magic number: subjects[2].OnCompleted();
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,ItemsShouldBeDispatchedByPriority,The following statement contains a magic number: subjects[3].OnNext(42);
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,ItemsShouldBeDispatchedByPriority,The following statement contains a magic number: subjects[3].OnNext(42);
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,ItemsShouldBeDispatchedByPriority,The following statement contains a magic number: subjects[3].OnCompleted();
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,KeyedItemsShouldBeSerialized,The following statement contains a magic number: var fixture = new OperationQueue(2);
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,KeyedItemsShouldBeSerialized,The following statement contains a magic number: fixture.EnqueueObservableOperation(5' () => v);
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,KeyedItemsShouldBeSerialized,The following statement contains a magic number: fixture                  .EnqueueObservableOperation(5' "key"' Observable.Never<Unit>()' () => input1)                  .ToObservableChangeSet(scheduler: ImmediateScheduler.Instance)                  .Bind(out var out1).Subscribe();
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,KeyedItemsShouldBeSerialized,The following statement contains a magic number: fixture                  .EnqueueObservableOperation(5' "key"' Observable.Never<Unit>()' () => input2)                  .ToObservableChangeSet(scheduler: ImmediateScheduler.Instance)                  .Bind(out var out2).Subscribe();
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,KeyedItemsShouldBeSerialized,The following statement contains a magic number: subj1.OnNext(42);
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,KeyedItemsShouldBeSerialized,The following statement contains a magic number: subj2.OnNext(42);
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,KeyedItemsShouldBeSerialized,The following statement contains a magic number: input1Subj.OnNext(42);
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,KeyedItemsShouldBeSerialized,The following statement contains a magic number: input2Subj.OnNext(42);
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,NonkeyedItemsShouldRunInParallel,The following statement contains a magic number: var fixture = new OperationQueue(2);
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,NonkeyedItemsShouldRunInParallel,The following statement contains a magic number: fixture.EnqueueObservableOperation(5' () => unkeyed1);
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,NonkeyedItemsShouldRunInParallel,The following statement contains a magic number: fixture.EnqueueObservableOperation(5' () => unkeyed2);
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,ShutdownShouldSignalOnceEverythingCompletes,The following statement contains a magic number: var subjects = Enumerable.Range(0' 5).Select(x => new AsyncSubject<int>()).ToArray();
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,ShutdownShouldSignalOnceEverythingCompletes,The following statement contains a magic number: var priorities = new[] { 5' 5' 5' 10' 1' };
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,ShutdownShouldSignalOnceEverythingCompletes,The following statement contains a magic number: var priorities = new[] { 5' 5' 5' 10' 1' };
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,ShutdownShouldSignalOnceEverythingCompletes,The following statement contains a magic number: var priorities = new[] { 5' 5' 5' 10' 1' };
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,ShutdownShouldSignalOnceEverythingCompletes,The following statement contains a magic number: var priorities = new[] { 5' 5' 5' 10' 1' };
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,ShutdownShouldSignalOnceEverythingCompletes,The following statement contains a magic number: var fixture = new OperationQueue(2);
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,ShutdownShouldSignalOnceEverythingCompletes,The following statement contains a magic number: subjects[i].OnNext(42);
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,ShutdownShouldSignalOnceEverythingCompletes,The following statement contains a magic number: i < 4
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,ShutdownShouldSignalOnceEverythingCompletes,The following statement contains a magic number: subjects[4].OnNext(42);
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,ShutdownShouldSignalOnceEverythingCompletes,The following statement contains a magic number: subjects[4].OnNext(42);
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,ShutdownShouldSignalOnceEverythingCompletes,The following statement contains a magic number: subjects[4].OnCompleted();
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,PausingTheQueueShouldHoldItemsUntilUnpaused,The following statement contains a magic number: var item = Observable.Return(42);
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,PausingTheQueueShouldHoldItemsUntilUnpaused,The following statement contains a magic number: var fixture = new OperationQueue(2);
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,PausingTheQueueShouldHoldItemsUntilUnpaused,The following statement contains a magic number: new[]              {                  fixture.EnqueueObservableOperation(4' () => item)'                  fixture.EnqueueObservableOperation(4' () => item)'              }.Merge()               .ToObservableChangeSet(scheduler: ImmediateScheduler.Instance)               .Bind(out var prePauseOutput).Subscribe();
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,PausingTheQueueShouldHoldItemsUntilUnpaused,The following statement contains a magic number: new[]              {                  fixture.EnqueueObservableOperation(4' () => item)'                  fixture.EnqueueObservableOperation(4' () => item)'              }.Merge()               .ToObservableChangeSet(scheduler: ImmediateScheduler.Instance)               .Bind(out var prePauseOutput).Subscribe();
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,PausingTheQueueShouldHoldItemsUntilUnpaused,The following statement contains a magic number: Assert.Equal(2' prePauseOutput.Count);
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,PausingTheQueueShouldHoldItemsUntilUnpaused,The following statement contains a magic number: new[]              {                  fixture.EnqueueObservableOperation(4' () => item)'                  fixture.EnqueueObservableOperation(4' () => item)'              }.Merge()               .ToObservableChangeSet(scheduler: ImmediateScheduler.Instance)               .Bind(out var pauseOutput).Subscribe();
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,PausingTheQueueShouldHoldItemsUntilUnpaused,The following statement contains a magic number: new[]              {                  fixture.EnqueueObservableOperation(4' () => item)'                  fixture.EnqueueObservableOperation(4' () => item)'              }.Merge()               .ToObservableChangeSet(scheduler: ImmediateScheduler.Instance)               .Bind(out var pauseOutput).Subscribe();
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,PausingTheQueueShouldHoldItemsUntilUnpaused,The following statement contains a magic number: Assert.Equal(2' pauseOutput.Count);
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,CancellingItemsShouldNotResultInThemBeingReturned,The following statement contains a magic number: var fixture = new OperationQueue(2);
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,CancellingItemsShouldNotResultInThemBeingReturned,The following statement contains a magic number: fixture.EnqueueObservableOperation(5' () => v);
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,CancellingItemsShouldNotResultInThemBeingReturned,The following statement contains a magic number: new[]              {                  fixture.EnqueueObservableOperation(5' "foo"' cancel1' () => item1)'                  fixture.EnqueueObservableOperation(5' "baz"' () => Observable.Return(42))'              }.Merge()               .ToObservableChangeSet(scheduler: ImmediateScheduler.Instance)               .Bind(out var output).Subscribe();
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,CancellingItemsShouldNotResultInThemBeingReturned,The following statement contains a magic number: new[]              {                  fixture.EnqueueObservableOperation(5' "foo"' cancel1' () => item1)'                  fixture.EnqueueObservableOperation(5' "baz"' () => Observable.Return(42))'              }.Merge()               .ToObservableChangeSet(scheduler: ImmediateScheduler.Instance)               .Bind(out var output).Subscribe();
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,CancellingItemsShouldNotResultInThemBeingReturned,The following statement contains a magic number: new[]              {                  fixture.EnqueueObservableOperation(5' "foo"' cancel1' () => item1)'                  fixture.EnqueueObservableOperation(5' "baz"' () => Observable.Return(42))'              }.Merge()               .ToObservableChangeSet(scheduler: ImmediateScheduler.Instance)               .Bind(out var output).Subscribe();
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,CancellingItemsShouldNotResultInThemBeingReturned,The following statement contains a magic number: subj1.OnNext(42);
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,CancellingItemsShouldNotResultInThemBeingReturned,The following statement contains a magic number: item1.OnNext(42);
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,CancellingItemsShouldNotResultInThemBeingReturned,The following statement contains a magic number: subj2.OnNext(42);
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,CancellingItemsShouldntEvenBeEvaluated,The following statement contains a magic number: var fixture = new OperationQueue(2);
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,CancellingItemsShouldntEvenBeEvaluated,The following statement contains a magic number: fixture.EnqueueObservableOperation(5' () => v);
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,CancellingItemsShouldntEvenBeEvaluated,The following statement contains a magic number: fixture.EnqueueObservableOperation(5' "foo"' cancel1' () =>              {                  wasCalled = true;                  return item1;              }).ToObservableChangeSet(scheduler: ImmediateScheduler.Instance)                .Bind(out var output).Subscribe();
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,CancellingItemsShouldntEvenBeEvaluated,The following statement contains a magic number: subj1.OnNext(42);
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,CancellingItemsShouldntEvenBeEvaluated,The following statement contains a magic number: subj2.OnNext(42);
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,QueueShouldRespectMaximumConcurrent,The following statement contains a magic number: var fixture = new OperationQueue(2);
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,QueueShouldRespectMaximumConcurrent,The following statement contains a magic number: fixture.EnqueueObservableOperation(5' () => unkeyed1);
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,QueueShouldRespectMaximumConcurrent,The following statement contains a magic number: fixture.EnqueueObservableOperation(5' () => unkeyed2);
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,QueueShouldRespectMaximumConcurrent,The following statement contains a magic number: fixture.EnqueueObservableOperation(5' () => unkeyed3);
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,ShouldBeAbleToIncreaseTheMaximunConcurrentValueOfAnExistingQueue,The following statement contains a magic number: var fixture = new OperationQueue(2);
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,ShouldBeAbleToIncreaseTheMaximunConcurrentValueOfAnExistingQueue,The following statement contains a magic number: fixture.EnqueueObservableOperation(5' () => unkeyed1);
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,ShouldBeAbleToIncreaseTheMaximunConcurrentValueOfAnExistingQueue,The following statement contains a magic number: fixture.EnqueueObservableOperation(5' () => unkeyed2);
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,ShouldBeAbleToIncreaseTheMaximunConcurrentValueOfAnExistingQueue,The following statement contains a magic number: fixture.EnqueueObservableOperation(5' () => unkeyed3);
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,ShouldBeAbleToIncreaseTheMaximunConcurrentValueOfAnExistingQueue,The following statement contains a magic number: fixture.EnqueueObservableOperation(5' () => unkeyed4);
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,ShouldBeAbleToIncreaseTheMaximunConcurrentValueOfAnExistingQueue,The following statement contains a magic number: fixture.SetMaximumConcurrent(3);
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,ShouldBeAbleToDecreaseTheMaximunConcurrentValueOfAnExistingQueue,The following statement contains a magic number: var subjects = Enumerable.Range(0' 6).Select(x => new AsyncSubject<int>()).ToArray();
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,ShouldBeAbleToDecreaseTheMaximunConcurrentValueOfAnExistingQueue,The following statement contains a magic number: var fixture = new OperationQueue(3);
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,ShouldBeAbleToDecreaseTheMaximunConcurrentValueOfAnExistingQueue,The following statement contains a magic number: var outputs = subjects                  .Select(inp =>                  {                      fixture                          .EnqueueObservableOperation(5' () => inp)                          .ToObservableChangeSet(scheduler: ImmediateScheduler.Instance)                          .Bind(out var output).Subscribe();                      return output;                  }).ToArray();
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,ShouldBeAbleToDecreaseTheMaximunConcurrentValueOfAnExistingQueue,The following statement contains a magic number: fixture.SetMaximumConcurrent(2);
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,ShouldBeAbleToDecreaseTheMaximunConcurrentValueOfAnExistingQueue,The following statement contains a magic number: subjects[0].OnNext(42);
Magic Number,Punchclock.Tests,OperationQueueTests,C:\research\architectureSmells\repos\paulcbetts_punchclock\src\Punchclock.Tests\OperationQueueTests.cs,ShouldBeAbleToDecreaseTheMaximunConcurrentValueOfAnExistingQueue,The following statement contains a magic number: subjects[1].OnNext(42);
