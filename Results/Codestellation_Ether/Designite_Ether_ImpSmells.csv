Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Codestellation.Ether.Templating.Razor,RazorTemplatesCompiler,C:\repos\Codestellation_Ether\Ether\Templating\Razor\RazorTemplatesCompiler.cs,RazorTemplatesCompiler,The method has 5 parameters.
Long Parameter List,Codestellation.Ether,MailNotifier,C:\repos\Codestellation_Ether\Ether\MailNotifier.cs,MailNotifier,The method has 5 parameters.
Long Statement,Codestellation.Ether.Bootstrap,MailNotifierBuilder,C:\repos\Codestellation_Ether\Ether\Bootstrap\MailNotifierBuilder.cs,FromConfig,The length of the statement  "	Dictionary<string' MailingList> groups = config.MailingGroups.Cast<GroupConfigElement> ().ToDictionary (g => g.Name' g => MailingList.Parse (g.Participants)); " is 158.
Long Statement,Codestellation.Ether.Bootstrap,MailNotifierBuilder,C:\repos\Codestellation_Ether\Ether\Bootstrap\MailNotifierBuilder.cs,FromConfig,The length of the statement  "	_mailingListBroker = new MailingListBroker (config.MailingRules.Cast<MailingRuleConfigurationElement> ().Select (cfg => new MailingRule (cfg.Name' BuildMailingList (cfg.Recepients.SplitAndTrim ()' groups))).ToArray ()); " is 219.
Long Statement,Codestellation.Ether.Config,MailingRulesConfigElementCollection,C:\repos\Codestellation_Ether\Ether\Config\ConfigSectionDesigner.csd.cs,IsElementName,The length of the statement  "	return (elementName == global::Codestellation.Ether.Config.MailingRulesConfigElementCollection.MailingRuleConfigurationElementPropertyName); " is 140.
Long Statement,Codestellation.Ether.Config,GroupConfigElementCollection,C:\repos\Codestellation_Ether\Ether\Config\ConfigSectionDesigner.csd.cs,IsElementName,The length of the statement  "	return (elementName == global::Codestellation.Ether.Config.GroupConfigElementCollection.GroupConfigElementPropertyName); " is 120.
Long Statement,Codestellation.Ether.Mailing,MailingRule,C:\repos\Codestellation_Ether\Ether\Mailing\MailingRule.cs,Check,The length of the statement  "	if (hierarchyTokensCount > typeNameTokensCount && String.Equals (hierarchyTokens [typeNameTokensCount]' Any) == false) { " is 120.
Long Statement,Codestellation.Ether.Templating.Razor,RazorTemplatesCompiler,C:\repos\Codestellation_Ether\Ether\Templating\Razor\RazorTemplatesCompiler.cs,Compile,The length of the statement  "		CodeCompileUnit[] codes = templatesFilePath.Select (path => GenerateTemplateCode (Path.GetFileNameWithoutExtension (path)' File.ReadAllText (path)' codeProvider)).ToArray (); " is 174.
Long Statement,Codestellation.Ether.Templating.Razor,RazorTemplatesCompiler,C:\repos\Codestellation_Ether\Ether\Templating\Razor\RazorTemplatesCompiler.cs,ThrowExceptionIfErrors,The length of the statement  "	throw new AggregateException (results.ParserErrors.Select (e => new Exception (string.Format (LineX0TColX1TErrorX2Rn' e.Location.LineIndex' e.Location.CharacterIndex' e.Message)))); " is 181.
Long Statement,Codestellation.Ether.Templating.Razor,RazorTemplatesCompiler,C:\repos\Codestellation_Ether\Ether\Templating\Razor\RazorTemplatesCompiler.cs,ThrowExceptionIfErrors,The length of the statement  "	throw new AggregateException ("Razor template compilation errors"' errors.OfType<CompilerError> ().Where (e => !e.IsWarning).Select (e => new Exception (string.Format (LineX0TColX1TErrorX2Rn' e.Line' e.Column' e.ErrorText)))); " is 226.
Magic Number,Codestellation.Ether.Misc,PersistentQueue,C:\repos\Codestellation_Ether\Ether\Misc\PersistentQueue.cs,RecoveryFromJournal,The following statement contains a magic number: while (_journalFile.Position < _journalFile.Length) {  	var operation = (OperationType)_journalFile.ReadByte ();  	switch (operation) {  	case OperationType.Enqueue: {  		_journalFile.Read (_buffer' 0' 4);  		int payloadSize = _buffer [0] + (_buffer [1] >> 8) + (_buffer [2] >> 16) + (_buffer [3] >> 24);  		_journalFile.Read (_buffer' 0' payloadSize);  		object item;  		using (var memory = new MemoryStream (_buffer' 0' payloadSize)) {  			item = _formatter.Deserialize (memory);  		}  		_queue.Enqueue (item);  		break;  	}  	case OperationType.Dequeue: {  		_queue.Dequeue ();  		break;  	}  	}  }  
Magic Number,Codestellation.Ether.Misc,PersistentQueue,C:\repos\Codestellation_Ether\Ether\Misc\PersistentQueue.cs,RecoveryFromJournal,The following statement contains a magic number: while (_journalFile.Position < _journalFile.Length) {  	var operation = (OperationType)_journalFile.ReadByte ();  	switch (operation) {  	case OperationType.Enqueue: {  		_journalFile.Read (_buffer' 0' 4);  		int payloadSize = _buffer [0] + (_buffer [1] >> 8) + (_buffer [2] >> 16) + (_buffer [3] >> 24);  		_journalFile.Read (_buffer' 0' payloadSize);  		object item;  		using (var memory = new MemoryStream (_buffer' 0' payloadSize)) {  			item = _formatter.Deserialize (memory);  		}  		_queue.Enqueue (item);  		break;  	}  	case OperationType.Dequeue: {  		_queue.Dequeue ();  		break;  	}  	}  }  
Magic Number,Codestellation.Ether.Misc,PersistentQueue,C:\repos\Codestellation_Ether\Ether\Misc\PersistentQueue.cs,RecoveryFromJournal,The following statement contains a magic number: while (_journalFile.Position < _journalFile.Length) {  	var operation = (OperationType)_journalFile.ReadByte ();  	switch (operation) {  	case OperationType.Enqueue: {  		_journalFile.Read (_buffer' 0' 4);  		int payloadSize = _buffer [0] + (_buffer [1] >> 8) + (_buffer [2] >> 16) + (_buffer [3] >> 24);  		_journalFile.Read (_buffer' 0' payloadSize);  		object item;  		using (var memory = new MemoryStream (_buffer' 0' payloadSize)) {  			item = _formatter.Deserialize (memory);  		}  		_queue.Enqueue (item);  		break;  	}  	case OperationType.Dequeue: {  		_queue.Dequeue ();  		break;  	}  	}  }  
Magic Number,Codestellation.Ether.Misc,PersistentQueue,C:\repos\Codestellation_Ether\Ether\Misc\PersistentQueue.cs,RecoveryFromJournal,The following statement contains a magic number: while (_journalFile.Position < _journalFile.Length) {  	var operation = (OperationType)_journalFile.ReadByte ();  	switch (operation) {  	case OperationType.Enqueue: {  		_journalFile.Read (_buffer' 0' 4);  		int payloadSize = _buffer [0] + (_buffer [1] >> 8) + (_buffer [2] >> 16) + (_buffer [3] >> 24);  		_journalFile.Read (_buffer' 0' payloadSize);  		object item;  		using (var memory = new MemoryStream (_buffer' 0' payloadSize)) {  			item = _formatter.Deserialize (memory);  		}  		_queue.Enqueue (item);  		break;  	}  	case OperationType.Dequeue: {  		_queue.Dequeue ();  		break;  	}  	}  }  
Magic Number,Codestellation.Ether.Misc,PersistentQueue,C:\repos\Codestellation_Ether\Ether\Misc\PersistentQueue.cs,RecoveryFromJournal,The following statement contains a magic number: while (_journalFile.Position < _journalFile.Length) {  	var operation = (OperationType)_journalFile.ReadByte ();  	switch (operation) {  	case OperationType.Enqueue: {  		_journalFile.Read (_buffer' 0' 4);  		int payloadSize = _buffer [0] + (_buffer [1] >> 8) + (_buffer [2] >> 16) + (_buffer [3] >> 24);  		_journalFile.Read (_buffer' 0' payloadSize);  		object item;  		using (var memory = new MemoryStream (_buffer' 0' payloadSize)) {  			item = _formatter.Deserialize (memory);  		}  		_queue.Enqueue (item);  		break;  	}  	case OperationType.Dequeue: {  		_queue.Dequeue ();  		break;  	}  	}  }  
Magic Number,Codestellation.Ether.Misc,PersistentQueue,C:\repos\Codestellation_Ether\Ether\Misc\PersistentQueue.cs,RecoveryFromJournal,The following statement contains a magic number: while (_journalFile.Position < _journalFile.Length) {  	var operation = (OperationType)_journalFile.ReadByte ();  	switch (operation) {  	case OperationType.Enqueue: {  		_journalFile.Read (_buffer' 0' 4);  		int payloadSize = _buffer [0] + (_buffer [1] >> 8) + (_buffer [2] >> 16) + (_buffer [3] >> 24);  		_journalFile.Read (_buffer' 0' payloadSize);  		object item;  		using (var memory = new MemoryStream (_buffer' 0' payloadSize)) {  			item = _formatter.Deserialize (memory);  		}  		_queue.Enqueue (item);  		break;  	}  	case OperationType.Dequeue: {  		_queue.Dequeue ();  		break;  	}  	}  }  
Magic Number,Codestellation.Ether.Misc,PersistentQueue,C:\repos\Codestellation_Ether\Ether\Misc\PersistentQueue.cs,RecoveryFromJournal,The following statement contains a magic number: switch (operation) {  case OperationType.Enqueue: {  	_journalFile.Read (_buffer' 0' 4);  	int payloadSize = _buffer [0] + (_buffer [1] >> 8) + (_buffer [2] >> 16) + (_buffer [3] >> 24);  	_journalFile.Read (_buffer' 0' payloadSize);  	object item;  	using (var memory = new MemoryStream (_buffer' 0' payloadSize)) {  		item = _formatter.Deserialize (memory);  	}  	_queue.Enqueue (item);  	break;  }  case OperationType.Dequeue: {  	_queue.Dequeue ();  	break;  }  }  
Magic Number,Codestellation.Ether.Misc,PersistentQueue,C:\repos\Codestellation_Ether\Ether\Misc\PersistentQueue.cs,RecoveryFromJournal,The following statement contains a magic number: switch (operation) {  case OperationType.Enqueue: {  	_journalFile.Read (_buffer' 0' 4);  	int payloadSize = _buffer [0] + (_buffer [1] >> 8) + (_buffer [2] >> 16) + (_buffer [3] >> 24);  	_journalFile.Read (_buffer' 0' payloadSize);  	object item;  	using (var memory = new MemoryStream (_buffer' 0' payloadSize)) {  		item = _formatter.Deserialize (memory);  	}  	_queue.Enqueue (item);  	break;  }  case OperationType.Dequeue: {  	_queue.Dequeue ();  	break;  }  }  
Magic Number,Codestellation.Ether.Misc,PersistentQueue,C:\repos\Codestellation_Ether\Ether\Misc\PersistentQueue.cs,RecoveryFromJournal,The following statement contains a magic number: switch (operation) {  case OperationType.Enqueue: {  	_journalFile.Read (_buffer' 0' 4);  	int payloadSize = _buffer [0] + (_buffer [1] >> 8) + (_buffer [2] >> 16) + (_buffer [3] >> 24);  	_journalFile.Read (_buffer' 0' payloadSize);  	object item;  	using (var memory = new MemoryStream (_buffer' 0' payloadSize)) {  		item = _formatter.Deserialize (memory);  	}  	_queue.Enqueue (item);  	break;  }  case OperationType.Dequeue: {  	_queue.Dequeue ();  	break;  }  }  
Magic Number,Codestellation.Ether.Misc,PersistentQueue,C:\repos\Codestellation_Ether\Ether\Misc\PersistentQueue.cs,RecoveryFromJournal,The following statement contains a magic number: switch (operation) {  case OperationType.Enqueue: {  	_journalFile.Read (_buffer' 0' 4);  	int payloadSize = _buffer [0] + (_buffer [1] >> 8) + (_buffer [2] >> 16) + (_buffer [3] >> 24);  	_journalFile.Read (_buffer' 0' payloadSize);  	object item;  	using (var memory = new MemoryStream (_buffer' 0' payloadSize)) {  		item = _formatter.Deserialize (memory);  	}  	_queue.Enqueue (item);  	break;  }  case OperationType.Dequeue: {  	_queue.Dequeue ();  	break;  }  }  
Magic Number,Codestellation.Ether.Misc,PersistentQueue,C:\repos\Codestellation_Ether\Ether\Misc\PersistentQueue.cs,RecoveryFromJournal,The following statement contains a magic number: switch (operation) {  case OperationType.Enqueue: {  	_journalFile.Read (_buffer' 0' 4);  	int payloadSize = _buffer [0] + (_buffer [1] >> 8) + (_buffer [2] >> 16) + (_buffer [3] >> 24);  	_journalFile.Read (_buffer' 0' payloadSize);  	object item;  	using (var memory = new MemoryStream (_buffer' 0' payloadSize)) {  		item = _formatter.Deserialize (memory);  	}  	_queue.Enqueue (item);  	break;  }  case OperationType.Dequeue: {  	_queue.Dequeue ();  	break;  }  }  
Magic Number,Codestellation.Ether.Misc,PersistentQueue,C:\repos\Codestellation_Ether\Ether\Misc\PersistentQueue.cs,RecoveryFromJournal,The following statement contains a magic number: switch (operation) {  case OperationType.Enqueue: {  	_journalFile.Read (_buffer' 0' 4);  	int payloadSize = _buffer [0] + (_buffer [1] >> 8) + (_buffer [2] >> 16) + (_buffer [3] >> 24);  	_journalFile.Read (_buffer' 0' payloadSize);  	object item;  	using (var memory = new MemoryStream (_buffer' 0' payloadSize)) {  		item = _formatter.Deserialize (memory);  	}  	_queue.Enqueue (item);  	break;  }  case OperationType.Dequeue: {  	_queue.Dequeue ();  	break;  }  }  
Magic Number,Codestellation.Ether.Misc,PersistentQueue,C:\repos\Codestellation_Ether\Ether\Misc\PersistentQueue.cs,RecoveryFromJournal,The following statement contains a magic number: _journalFile.Read (_buffer' 0' 4);  
Magic Number,Codestellation.Ether.Misc,PersistentQueue,C:\repos\Codestellation_Ether\Ether\Misc\PersistentQueue.cs,AppendEnqueueOp,The following statement contains a magic number: _buffer [2] = (byte)(payloadSize >> 8);  
Magic Number,Codestellation.Ether.Misc,PersistentQueue,C:\repos\Codestellation_Ether\Ether\Misc\PersistentQueue.cs,AppendEnqueueOp,The following statement contains a magic number: _buffer [2] = (byte)(payloadSize >> 8);  
Magic Number,Codestellation.Ether.Misc,PersistentQueue,C:\repos\Codestellation_Ether\Ether\Misc\PersistentQueue.cs,AppendEnqueueOp,The following statement contains a magic number: _buffer [3] = (byte)(payloadSize >> 16);  
Magic Number,Codestellation.Ether.Misc,PersistentQueue,C:\repos\Codestellation_Ether\Ether\Misc\PersistentQueue.cs,AppendEnqueueOp,The following statement contains a magic number: _buffer [3] = (byte)(payloadSize >> 16);  
Magic Number,Codestellation.Ether.Misc,PersistentQueue,C:\repos\Codestellation_Ether\Ether\Misc\PersistentQueue.cs,AppendEnqueueOp,The following statement contains a magic number: _buffer [4] = (byte)(payloadSize >> 24);  
Magic Number,Codestellation.Ether.Misc,PersistentQueue,C:\repos\Codestellation_Ether\Ether\Misc\PersistentQueue.cs,AppendEnqueueOp,The following statement contains a magic number: _buffer [4] = (byte)(payloadSize >> 24);  
Magic Number,Codestellation.Ether.Transport,SmtpSender,C:\repos\Codestellation_Ether\Ether\Transport\SmtpSender.cs,Dispose,The following statement contains a magic number: _completed.WaitOne (TimeSpan.FromSeconds (10));  
Missing Default,Codestellation.Ether.Misc,PersistentQueue,C:\repos\Codestellation_Ether\Ether\Misc\PersistentQueue.cs,RecoveryFromJournal,The following switch statement is missing a default case: switch (operation) {  case OperationType.Enqueue: {  	_journalFile.Read (_buffer' 0' 4);  	int payloadSize = _buffer [0] + (_buffer [1] >> 8) + (_buffer [2] >> 16) + (_buffer [3] >> 24);  	_journalFile.Read (_buffer' 0' payloadSize);  	object item;  	using (var memory = new MemoryStream (_buffer' 0' payloadSize)) {  		item = _formatter.Deserialize (memory);  	}  	_queue.Enqueue (item);  	break;  }  case OperationType.Dequeue: {  	_queue.Dequeue ();  	break;  }  }  
