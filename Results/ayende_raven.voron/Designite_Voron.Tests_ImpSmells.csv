Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Voron.Tests.Bugs,FlushingToDataFile,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\FlushingToDataFile.cs,OldestActiveTransactionShouldBeCalculatedProperly,Cyclomatic complexity of the method is 8
Complex Method,Voron.Tests.Bugs,TreeRebalancer,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\TreeRebalancer.cs,TreeRabalancerShouldCopyNodeFlagsWhenMultiValuePageRefIsSet,Cyclomatic complexity of the method is 9
Long Parameter List,Voron.Tests.Bugs,MultiAdds,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\MultiAdds.cs,AddRecords,The method has 5 parameters. Parameters: env' trees' documentCount' testBuffer' sequential
Long Identifier,Voron.Tests.Bugs,PageTableIssue,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\PageTableIssue.cs,MissingScratchPagesInPageTable,The length of the parameter bytesToFillFirstJournalCompletely is 33.
Long Identifier,Voron.Tests.Journal,UncommittedTransactions,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Journal\UncommittedTransactions.cs,UncommittedTransactionMustNotModifyPageTranslationTableOfLogFile,The length of the parameter pageAllocatedInUncommittedTransaction is 37.
Long Identifier,Voron.Tests.Storage,Batches,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\Batches.cs,Read_Items_From_Both_WriteBatch_And_Snapshot,The length of the parameter foo2ReadResultThatShouldBeNull is 30.
Long Identifier,Voron.Tests.Storage,Batches,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\Batches.cs,Read_Items_From_Both_WriteBatch_And_Snapshot_Deleted_Key_Returns_Null,The length of the parameter foo1ReadResultWithoutWriteBatch is 31.
Long Identifier,Voron.Tests.Storage,Batches,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\Batches.cs,Read_The_Same_Item_Both_WriteBatch_And_Snapshot_WriteBatch_Takes_Precedence,The length of the parameter foo1ReadResultWithoutWriteBatch is 31.
Long Identifier,Voron.Tests.Storage,FreeScratchPages,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\FreeScratchPages.cs,UncommittedTransactionShouldFreeScratchPagesThatWillBeReusedByNextTransaction,The length of the parameter scratchPagesOfUncommittedTransaction is 36.
Long Identifier,Voron.Tests.Storage,FreeScratchPages,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\FreeScratchPages.cs,UncommittedTransactionShouldFreeScratchPagesThatWillBeReusedByNextTransaction,The length of the parameter scratchPagesOfCommittedTransaction is 34.
Long Statement,Voron.Tests.Bugs,FlushingToDataFile,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\FlushingToDataFile.cs,ReadTransactionShouldNotReadFromJournalSnapshotIfJournalWasFlushedInTheMeanwhile,The length of the statement  "                    // empty transaction is enough to expose the issue because it allocates 1 page in the scratch space for the transaction header " is 126.
Long Statement,Voron.Tests.Bugs,Isolation,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\Isolation.cs,ScratchPagesShouldNotBeReleasedUntilNotUsed,The length of the statement  "                        tx.Environment.State.GetTree(tx'"tree0").Add(tx' string.Format("key/{0}/{1}/1"' new string('0'' 1000)' a)' new MemoryStream()); " is 127.
Long Statement,Voron.Tests.Bugs,Isolation,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\Isolation.cs,ScratchPagesShouldNotBeReleasedUntilNotUsed,The length of the statement  "                        tx.Environment.State.GetTree(tx'"tree0").Add(tx' string.Format("key/{0}/{1}/2"' new string('0'' 1000)' a)' new MemoryStream()); " is 127.
Long Statement,Voron.Tests.Bugs,Isolation,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\Isolation.cs,ScratchPagesShouldNotBeReleasedUntilNotUsed,The length of the statement  "                            tree.Add(txw' string.Format("yek/{0}/0/0"' new string('0'' 1000))' new MemoryStream()); // allocates new page from scratch (position 11) " is 136.
Long Statement,Voron.Tests.Bugs,LargeValues,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\LargeValues.cs,ShouldProperlyRecover,The length of the statement  "                ValidateRecords(env' new List<string> { "Root" }' sequentialLargeIds.Select(x => x.Key.ToString("0000000000000000")).ToList()); " is 127.
Long Statement,Voron.Tests.Bugs,LargeValues,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\LargeValues.cs,ShouldProperlyRecover,The length of the statement  "                ValidateRecords(env' new List<string> { "Root" }' sequentialLargeIds.Select(x => x.Key.ToString("0000000000000000")).ToList()); " is 127.
Long Statement,Voron.Tests.Journal,LogShipping,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Journal\LogShipping.cs,ReadFromTransactionToShip,The length of the statement  "			var compressedPages = (tx.Header.CompressedSize / AbstractPager.PageSize) + (tx.Header.CompressedSize % AbstractPager.PageSize == 0 ? 0 : 1); " is 141.
Long Statement,Voron.Tests.Journal,LogShipping,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Journal\LogShipping.cs,SetPreviousCrc,The length of the statement  "			if (ReferenceEquals(transactionsToShip'null) || transactionsToShip.Any() == false) throw new ArgumentNullException("transactionsToShip"); " is 137.
Long Statement,Voron.Tests.Storage,Batches,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\Batches.cs,MultipleItemBatchTest,The length of the statement  "                batch.Add("key/" + i' new MemoryStream(Encoding.UTF8.GetBytes(i.ToString(CultureInfo.InvariantCulture)))' Constants.RootTreeName); " is 130.
Long Statement,Voron.Tests.Storage,Batches,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\Batches.cs,MultipleBatchesTest,The length of the statement  "                batch1.Add("key/" + i' new MemoryStream(Encoding.UTF8.GetBytes(i.ToString(CultureInfo.InvariantCulture)))' Constants.RootTreeName); " is 131.
Long Statement,Voron.Tests.Storage,Batches,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\Batches.cs,MultipleBatchesTest,The length of the statement  "                batch2.Add("yek/" + i' new MemoryStream(Encoding.UTF8.GetBytes(i.ToString(CultureInfo.InvariantCulture)))' Constants.RootTreeName); " is 131.
Long Statement,Voron.Tests.Storage,Batches,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\Batches.cs,BatchErrorHandling,The length of the statement  "                await Task.WhenAll(Task.Run(() => Env.Writer.Write(batch1))' Task.Run(() => Env.Writer.Write(batch2))' Task.Run(() => Env.Writer.Write(batch3))); " is 145.
Long Statement,Voron.Tests.Storage,Batches,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\Batches.cs,MergedBatchErrorHandling,The length of the statement  "            var disposable = Env.Writer.StopWrites(); // forcing to build one batch group from all batches that will be added between this line and _semaphore.Release " is 154.
Virtual Method Call from Constructor,Voron.Tests,StorageTest,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\StorageTest.cs,StorageTest,The constructor "StorageTest" calls a virtual method "Configure".
Empty Catch Block,Voron.Tests,DisposingStream,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\StreamExtensions.cs,Dispose,The method has an empty catch block.
Magic Number,Voron.Tests.Backups,Full,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Backups\Full.cs,Configure,The following statement contains a magic number: options.MaxLogFileSize = 1000 * AbstractPager.PageSize;
Magic Number,Voron.Tests.Backups,Full,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Backups\Full.cs,CanBackupAndRestore,The following statement contains a magic number: var buffer = new byte[8192];
Magic Number,Voron.Tests.Backups,Full,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Backups\Full.cs,CanBackupAndRestore,The following statement contains a magic number: i < 500
Magic Number,Voron.Tests.Backups,Full,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Backups\Full.cs,CanBackupAndRestore,The following statement contains a magic number: i < 1000
Magic Number,Voron.Tests.Backups,Full,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Backups\Full.cs,CanBackupAndRestore,The following statement contains a magic number: i < 1000
Magic Number,Voron.Tests.Backups,Incremental,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Backups\Incremental.cs,Configure,The following statement contains a magic number: options.MaxLogFileSize = 1000 * AbstractPager.PageSize;
Magic Number,Voron.Tests.Backups,Incremental,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Backups\Incremental.cs,CanBackupAndRestoreOnEmptyStorage,The following statement contains a magic number: var buffer = new byte[8192];
Magic Number,Voron.Tests.Backups,Incremental,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Backups\Incremental.cs,CanBackupAndRestoreOnEmptyStorage,The following statement contains a magic number: i < 500
Magic Number,Voron.Tests.Backups,Incremental,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Backups\Incremental.cs,CanBackupAndRestoreOnEmptyStorage,The following statement contains a magic number: i < 500
Magic Number,Voron.Tests.Backups,Incremental,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Backups\Incremental.cs,CanDoMultipleIncrementalBackupsAndRestoreOneByOne,The following statement contains a magic number: var buffer = new byte[1024];
Magic Number,Voron.Tests.Backups,Incremental,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Backups\Incremental.cs,CanDoMultipleIncrementalBackupsAndRestoreOneByOne,The following statement contains a magic number: i < 300
Magic Number,Voron.Tests.Backups,Incremental,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Backups\Incremental.cs,CanDoMultipleIncrementalBackupsAndRestoreOneByOne,The following statement contains a magic number: i < 600
Magic Number,Voron.Tests.Backups,Incremental,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Backups\Incremental.cs,CanDoMultipleIncrementalBackupsAndRestoreOneByOne,The following statement contains a magic number: i < 1000
Magic Number,Voron.Tests.Backups,Incremental,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Backups\Incremental.cs,CanDoMultipleIncrementalBackupsAndRestoreOneByOne,The following statement contains a magic number: BackupMethods.Incremental.ToFile(Env' _incrementalBackupFile(2));
Magic Number,Voron.Tests.Backups,Incremental,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Backups\Incremental.cs,CanDoMultipleIncrementalBackupsAndRestoreOneByOne,The following statement contains a magic number: BackupMethods.Incremental.Restore(options' new[]              {                  _incrementalBackupFile(0)'                  _incrementalBackupFile(1)'                  _incrementalBackupFile(2)              });
Magic Number,Voron.Tests.Backups,Incremental,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Backups\Incremental.cs,CanDoMultipleIncrementalBackupsAndRestoreOneByOne,The following statement contains a magic number: i < 1000
Magic Number,Voron.Tests.Backups,Incremental,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Backups\Incremental.cs,IncrementalBackupShouldCopyJustNewPagesSinceLastBackup,The following statement contains a magic number: var buffer = new byte[100];
Magic Number,Voron.Tests.Backups,Incremental,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Backups\Incremental.cs,IncrementalBackupShouldCopyJustNewPagesSinceLastBackup,The following statement contains a magic number: i < 5
Magic Number,Voron.Tests.Backups,Incremental,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Backups\Incremental.cs,IncrementalBackupShouldCopyJustNewPagesSinceLastBackup,The following statement contains a magic number: i < 10
Magic Number,Voron.Tests.Backups,Incremental,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Backups\Incremental.cs,IncrementalBackupShouldCopyJustNewPagesSinceLastBackup,The following statement contains a magic number: i < 10
Magic Number,Voron.Tests.Bugs,ChecksumMismatchAfterRecovery,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\ChecksumMismatchAfterRecovery.cs,ShouldNotThrowChecksumMismatch,The following statement contains a magic number: var buffer = new byte[100];
Magic Number,Voron.Tests.Bugs,ChecksumMismatchAfterRecovery,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\ChecksumMismatchAfterRecovery.cs,ShouldNotThrowChecksumMismatch,The following statement contains a magic number: buffer[i] = 13;
Magic Number,Voron.Tests.Bugs,ChecksumMismatchAfterRecovery,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\ChecksumMismatchAfterRecovery.cs,ShouldNotThrowChecksumMismatch,The following statement contains a magic number: i < 100
Magic Number,Voron.Tests.Bugs,ChecksumMismatchAfterRecovery,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\ChecksumMismatchAfterRecovery.cs,ShouldNotThrowChecksumMismatch,The following statement contains a magic number: i < 50
Magic Number,Voron.Tests.Bugs,ChecksumMismatchAfterRecovery,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\ChecksumMismatchAfterRecovery.cs,ShouldNotThrowChecksumMismatch,The following statement contains a magic number: i < 100
Magic Number,Voron.Tests.Bugs,ChecksumMismatchAfterRecovery,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\ChecksumMismatchAfterRecovery.cs,ShouldNotThrowChecksumMismatch,The following statement contains a magic number: i < 100
Magic Number,Voron.Tests.Bugs,MemoryAccess,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\MemoryAccess.cs,ShouldNotThrowAccessViolation,The following statement contains a magic number: tx.State.GetTree(tx' tree).Add(tx' string.Format("key/{0}/{1}/1"' new string('0'' 1000)' a)' new MemoryStream());
Magic Number,Voron.Tests.Bugs,MemoryAccess,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\MemoryAccess.cs,ShouldNotThrowAccessViolation,The following statement contains a magic number: tx.State.GetTree(tx' tree).Add(tx' string.Format("key/{0}/{1}/2"' new string('0'' 1000)' a)' new MemoryStream());
Magic Number,Voron.Tests.Bugs,MemoryAccess,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\MemoryAccess.cs,ShouldNotThrowAccessViolation,The following statement contains a magic number: a < 2
Magic Number,Voron.Tests.Bugs,MemoryAccess,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\MemoryAccess.cs,ShouldNotThrowAccessViolation,The following statement contains a magic number: txw.State.GetTree(txw' tree).Add(txw' string.Format("key/{0}/0/0"' new string('0'' 1000))' new MemoryStream());
Magic Number,Voron.Tests.Bugs,MemoryAccess,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\MemoryAccess.cs,ShouldNotThrowAccessViolation,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,Voron.Tests.Bugs,FlushingToDataFile,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\FlushingToDataFile.cs,Configure,The following statement contains a magic number: options.MaxLogFileSize = 2 * AbstractPager.PageSize;
Magic Number,Voron.Tests.Bugs,FlushingToDataFile,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\FlushingToDataFile.cs,ReadTransactionShouldNotReadFromJournalSnapshotIfJournalWasFlushedInTheMeanwhile,The following statement contains a magic number: var value1 = new byte[4000];
Magic Number,Voron.Tests.Bugs,FlushingToDataFile,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\FlushingToDataFile.cs,ReadTransactionShouldNotReadFromJournalSnapshotIfJournalWasFlushedInTheMeanwhile,The following statement contains a magic number: Assert.Equal(2 * AbstractPager.PageSize' Env.Options.MaxLogFileSize);
Magic Number,Voron.Tests.Bugs,FlushingToDataFile,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\FlushingToDataFile.cs,ReadTransactionShouldNotReadFromJournalSnapshotIfJournalWasFlushedInTheMeanwhile,The following statement contains a magic number: i < 2
Magic Number,Voron.Tests.Bugs,FlushingToDataFile,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\FlushingToDataFile.cs,FlushingOperationShouldHaveOwnScratchPagerStateReference,The following statement contains a magic number: var value1 = new byte[4000];
Magic Number,Voron.Tests.Bugs,FlushingToDataFile,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\FlushingToDataFile.cs,FlushingOperationShouldHaveOwnScratchPagerStateReference,The following statement contains a magic number: Assert.Equal(2 * AbstractPager.PageSize' Env.Options.MaxLogFileSize);
Magic Number,Voron.Tests.Bugs,FlushingToDataFile,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\FlushingToDataFile.cs,OldestActiveTransactionShouldBeCalculatedProperly,The following statement contains a magic number: var random = new Random(1337);
Magic Number,Voron.Tests.Bugs,FlushingToDataFile,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\FlushingToDataFile.cs,OldestActiveTransactionShouldBeCalculatedProperly,The following statement contains a magic number: var buffer = new byte[random.Next(100' 1000)];
Magic Number,Voron.Tests.Bugs,FlushingToDataFile,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\FlushingToDataFile.cs,OldestActiveTransactionShouldBeCalculatedProperly,The following statement contains a magic number: var buffer = new byte[random.Next(100' 1000)];
Magic Number,Voron.Tests.Bugs,FlushingToDataFile,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\FlushingToDataFile.cs,OldestActiveTransactionShouldBeCalculatedProperly,The following statement contains a magic number: i < 100
Magic Number,Voron.Tests.Bugs,FlushingToDataFile,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\FlushingToDataFile.cs,OldestActiveTransactionShouldBeCalculatedProperly,The following statement contains a magic number: a < 100
Magic Number,Voron.Tests.Bugs,PagesFilteredOutByJournalApplicator,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\PagesFilteredOutByJournalApplicator.cs,CouldNotReadPagesThatWereFilteredOutByJournalApplicator_1,The following statement contains a magic number: var bytes = new byte[1000];
Magic Number,Voron.Tests.Bugs,PagesFilteredOutByJournalApplicator,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\PagesFilteredOutByJournalApplicator.cs,CouldNotReadPagesThatWereFilteredOutByJournalApplicator_2,The following statement contains a magic number: var bytes = new byte[1000];
Magic Number,Voron.Tests.Bugs,IndexPointToNonLeafPageTests,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\IndexPointToNonLeafPageTests.cs,ShouldProperlyMovePositionForNextPageAllocationInScratchBufferPool,The following statement contains a magic number: i < 100
Magic Number,Voron.Tests.Bugs,IndexPointToNonLeafPageTests,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\IndexPointToNonLeafPageTests.cs,ShouldProperlyMovePositionForNextPageAllocationInScratchBufferPool,The following statement contains a magic number: transactions < 36
Magic Number,Voron.Tests.Bugs,Isolation,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\Isolation.cs,ScratchPagesShouldNotBeReleasedUntilNotUsed,The following statement contains a magic number: CreateTrees(env' 2' "tree");
Magic Number,Voron.Tests.Bugs,Isolation,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\Isolation.cs,ScratchPagesShouldNotBeReleasedUntilNotUsed,The following statement contains a magic number: tx.Environment.State.GetTree(tx'"tree0").Add(tx' string.Format("key/{0}/{1}/1"' new string('0'' 1000)' a)' new MemoryStream());
Magic Number,Voron.Tests.Bugs,Isolation,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\Isolation.cs,ScratchPagesShouldNotBeReleasedUntilNotUsed,The following statement contains a magic number: tx.Environment.State.GetTree(tx'"tree0").Add(tx' string.Format("key/{0}/{1}/2"' new string('0'' 1000)' a)' new MemoryStream());
Magic Number,Voron.Tests.Bugs,Isolation,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\Isolation.cs,ScratchPagesShouldNotBeReleasedUntilNotUsed,The following statement contains a magic number: a < 3
Magic Number,Voron.Tests.Bugs,Isolation,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\Isolation.cs,ScratchPagesShouldNotBeReleasedUntilNotUsed,The following statement contains a magic number: tree.Add(txw' string.Format("yek/{0}/0/0"' new string('0'' 1000))' new MemoryStream());
Magic Number,Voron.Tests.Bugs,Isolation,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\Isolation.cs,ScratchPagesShouldNotBeReleasedUntilNotUsed,The following statement contains a magic number: Assert.Equal(6' count);
Magic Number,Voron.Tests.Bugs,LargeValues,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\LargeValues.cs,ShouldProperlyRecover,The following statement contains a magic number: i < 100
Magic Number,Voron.Tests.Bugs,LargeValues,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\LargeValues.cs,ShouldProperlyRecover,The following statement contains a magic number: transactions == 50
Magic Number,Voron.Tests.Bugs,LargeValues,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\LargeValues.cs,ShouldProperlyRecover,The following statement contains a magic number: transactions < 100
Magic Number,Voron.Tests.Bugs,MultiAdds,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\MultiAdds.cs,RandomString,The following statement contains a magic number: builder.Append(Convert.ToChar(Convert.ToInt32(Math.Floor(26 * _random.NextDouble() + 65))));
Magic Number,Voron.Tests.Bugs,MultiAdds,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\MultiAdds.cs,RandomString,The following statement contains a magic number: builder.Append(Convert.ToChar(Convert.ToInt32(Math.Floor(26 * _random.NextDouble() + 65))));
Magic Number,Voron.Tests.Bugs,MultiAdds,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\MultiAdds.cs,MultiAdds_And_MultiDeletes_After_Causing_PageSplit_DoNot_Fail,The following statement contains a magic number: inputData.Add(Encoding.UTF8.GetBytes(RandomString(1024)));
Magic Number,Voron.Tests.Bugs,MultiAdds,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\MultiAdds.cs,SplitterIssue,The following statement contains a magic number: const int DocumentCount = 10;
Magic Number,Voron.Tests.Bugs,MultiAdds,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\MultiAdds.cs,SplitterIssue,The following statement contains a magic number: var testBuffer = new byte[168];
Magic Number,Voron.Tests.Bugs,MultiAdds,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\MultiAdds.cs,SplitterIssue,The following statement contains a magic number: i < 50
Magic Number,Voron.Tests.Bugs,MultiAdds,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\MultiAdds.cs,SplitterIssue2,The following statement contains a magic number: Assert.Equal(2' count);
Magic Number,Voron.Tests.Bugs,MultiAdds,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\MultiAdds.cs,CanAddMultiValuesUnderTheSameKeyToBatch,The following statement contains a magic number: var testBuffer = new byte[168];
Magic Number,Voron.Tests.Bugs,MultiAdds,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\MultiAdds.cs,ValidateMultiRecords,The following statement contains a magic number: Assert.Equal((i * documentCount) / 10' count);
Magic Number,Voron.Tests.Bugs,MultiAdds,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\MultiAdds.cs,ValidateMultiRecords,The following statement contains a magic number: j < 10
Magic Number,Voron.Tests.Bugs,MultiAdds,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\MultiAdds.cs,AddMultiRecords,The following statement contains a magic number: batch.MultiAdd((i % 10).ToString()' value' tree);
Magic Number,Voron.Tests.Bugs,PageTableIssue,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\PageTableIssue.cs,MissingScratchPagesInPageTable,The following statement contains a magic number: var bytes = new byte[1000];
Magic Number,Voron.Tests.Bugs,PageTableIssue,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\PageTableIssue.cs,MissingScratchPagesInPageTable,The following statement contains a magic number: var bytesToFillFirstJournalCompletely = new byte[8*AbstractPager.PageSize];
Magic Number,Voron.Tests.Bugs,RecoveryMultipleJournals,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\RecoveryMultipleJournals.cs,Configure,The following statement contains a magic number: options.MaxLogFileSize = 10 * AbstractPager.PageSize;
Magic Number,Voron.Tests.Bugs,RecoveryMultipleJournals,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\RecoveryMultipleJournals.cs,CanRecoverAfterRestartWithMultipleFilesInSingleTransaction,The following statement contains a magic number: tx.Environment.State.GetTree(tx'"tree").Add(tx' "a" + i' new MemoryStream(new byte[100]));
Magic Number,Voron.Tests.Bugs,RecoveryMultipleJournals,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\RecoveryMultipleJournals.cs,CanRecoverAfterRestartWithMultipleFilesInSingleTransaction,The following statement contains a magic number: i < 1000
Magic Number,Voron.Tests.Bugs,RecoveryMultipleJournals,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\RecoveryMultipleJournals.cs,CanRecoverAfterRestartWithMultipleFilesInSingleTransaction,The following statement contains a magic number: Assert.Equal(100' readResult.Reader.Length);
Magic Number,Voron.Tests.Bugs,RecoveryMultipleJournals,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\RecoveryMultipleJournals.cs,CanRecoverAfterRestartWithMultipleFilesInSingleTransaction,The following statement contains a magic number: i < 1000
Magic Number,Voron.Tests.Bugs,RecoveryMultipleJournals,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\RecoveryMultipleJournals.cs,CanResetLogInfoAfterBigUncommitedTransaction,The following statement contains a magic number: tx.Environment.State.GetTree(tx'"tree").Add(tx' "a" + i' new MemoryStream(new byte[100]));
Magic Number,Voron.Tests.Bugs,RecoveryMultipleJournals,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\RecoveryMultipleJournals.cs,CanResetLogInfoAfterBigUncommitedTransaction,The following statement contains a magic number: i < 1000
Magic Number,Voron.Tests.Bugs,RecoveryMultipleJournals,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\RecoveryMultipleJournals.cs,CanResetLogInfoAfterBigUncommitedTransaction,The following statement contains a magic number: tx.Environment.State.GetTree(tx'"tree").Add(tx' "a"' new MemoryStream(new byte[100]));
Magic Number,Voron.Tests.Bugs,RecoveryMultipleJournals,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\RecoveryMultipleJournals.cs,CanResetLogInfoAfterBigUncommitedTransaction2,The following statement contains a magic number: tx.Environment.State.GetTree(tx'"tree").Add(tx' "a" + i' new MemoryStream(new byte[100]));
Magic Number,Voron.Tests.Bugs,RecoveryMultipleJournals,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\RecoveryMultipleJournals.cs,CanResetLogInfoAfterBigUncommitedTransaction2,The following statement contains a magic number: i < 1000
Magic Number,Voron.Tests.Bugs,RecoveryMultipleJournals,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\RecoveryMultipleJournals.cs,CanResetLogInfoAfterBigUncommitedTransaction2,The following statement contains a magic number: var buffer = new byte[1000000];
Magic Number,Voron.Tests.Bugs,RecoveryMultipleJournals,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\RecoveryMultipleJournals.cs,CanResetLogInfoAfterBigUncommitedTransaction2,The following statement contains a magic number: i < 1000
Magic Number,Voron.Tests.Bugs,RecoveryMultipleJournals,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\RecoveryMultipleJournals.cs,CanResetLogInfoAfterBigUncommitedTransactionWithRestart,The following statement contains a magic number: Env.CreateTree(tx' "tree").Add(tx' "exists"' new MemoryStream(new byte[100]));
Magic Number,Voron.Tests.Bugs,RecoveryMultipleJournals,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\RecoveryMultipleJournals.cs,CanResetLogInfoAfterBigUncommitedTransactionWithRestart,The following statement contains a magic number: tx.Environment.State.GetTree(tx'"tree").Add(tx' "a" + i' new MemoryStream(new byte[100]));
Magic Number,Voron.Tests.Bugs,RecoveryMultipleJournals,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\RecoveryMultipleJournals.cs,CanResetLogInfoAfterBigUncommitedTransactionWithRestart,The following statement contains a magic number: i < 1000
Magic Number,Voron.Tests.Bugs,RecoveryMultipleJournals,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\RecoveryMultipleJournals.cs,CanResetLogInfoAfterBigUncommitedTransactionWithRestart,The following statement contains a magic number: CorruptPage(lastJournal' page: 4' pos: 3);
Magic Number,Voron.Tests.Bugs,RecoveryMultipleJournals,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\RecoveryMultipleJournals.cs,CanResetLogInfoAfterBigUncommitedTransactionWithRestart,The following statement contains a magic number: CorruptPage(lastJournal' page: 4' pos: 3);
Magic Number,Voron.Tests.Bugs,RecoveryMultipleJournals,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\RecoveryMultipleJournals.cs,CanResetLogInfoAfterBigUncommitedTransactionWithRestart2,The following statement contains a magic number: tx.Environment.State.GetTree(tx'"tree").Add(tx' "a" + i' new MemoryStream(new byte[100]));
Magic Number,Voron.Tests.Bugs,RecoveryMultipleJournals,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\RecoveryMultipleJournals.cs,CanResetLogInfoAfterBigUncommitedTransactionWithRestart2,The following statement contains a magic number: i < 1000
Magic Number,Voron.Tests.Bugs,RecoveryMultipleJournals,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\RecoveryMultipleJournals.cs,CanResetLogInfoAfterBigUncommitedTransactionWithRestart2,The following statement contains a magic number: tx.Environment.State.GetTree(tx'"tree").Add(tx' "b" + i' new MemoryStream(new byte[100]));
Magic Number,Voron.Tests.Bugs,RecoveryMultipleJournals,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\RecoveryMultipleJournals.cs,CanResetLogInfoAfterBigUncommitedTransactionWithRestart2,The following statement contains a magic number: i < 1000
Magic Number,Voron.Tests.Bugs,RecoveryMultipleJournals,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\RecoveryMultipleJournals.cs,CanResetLogInfoAfterBigUncommitedTransactionWithRestart2,The following statement contains a magic number: CorruptPage(lastJournal - 1' page: 2' pos: 3);
Magic Number,Voron.Tests.Bugs,RecoveryMultipleJournals,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\RecoveryMultipleJournals.cs,CanResetLogInfoAfterBigUncommitedTransactionWithRestart2,The following statement contains a magic number: CorruptPage(lastJournal - 1' page: 2' pos: 3);
Magic Number,Voron.Tests.Bugs,RecoveryMultipleJournals,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\RecoveryMultipleJournals.cs,CorruptingOneTransactionWillKillAllFutureTransactions,The following statement contains a magic number: tx.Environment.State.GetTree(tx'"tree").Add(tx' "a" + i' new MemoryStream(new byte[100]));
Magic Number,Voron.Tests.Bugs,RecoveryMultipleJournals,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\RecoveryMultipleJournals.cs,CorruptingOneTransactionWillKillAllFutureTransactions,The following statement contains a magic number: i < 1000
Magic Number,Voron.Tests.Bugs,RecoveryMultipleJournals,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\RecoveryMultipleJournals.cs,CorruptingOneTransactionWillKillAllFutureTransactions,The following statement contains a magic number: CorruptPage(lastJournal - 3' lastJournalPosition + 1' 5);
Magic Number,Voron.Tests.Bugs,RecoveryMultipleJournals,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\RecoveryMultipleJournals.cs,CorruptingOneTransactionWillKillAllFutureTransactions,The following statement contains a magic number: CorruptPage(lastJournal - 3' lastJournalPosition + 1' 5);
Magic Number,Voron.Tests.Bugs,RecoveryMultipleJournals,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\RecoveryMultipleJournals.cs,CorruptPage,The following statement contains a magic number: buffer[pos] = 42;
Magic Number,Voron.Tests.Bugs,RecoveryWithManualFlush,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\RecoveryWithManualFlush.cs,ShouldRecoverFromJournalsAfterFlushWhereLastPageOfFlushedTxHadTheSameNumberAsFirstPageOfNextTxNotFlushedJet,The following statement contains a magic number: tx1.State.Root.Add(tx1' "item/1"' new MemoryStream(new byte[4000]));
Magic Number,Voron.Tests.Bugs,RecoveryWithManualFlush,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\RecoveryWithManualFlush.cs,ShouldRecoverFromJournalsAfterFlushWhereLastPageOfFlushedTxHadTheSameNumberAsFirstPageOfNextTxNotFlushedJet,The following statement contains a magic number: tx1.State.Root.Add(tx1' "item/2"' new MemoryStream(new byte[4000]));
Magic Number,Voron.Tests.Bugs,RecoveryWithManualFlush,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\RecoveryWithManualFlush.cs,ShouldRecoverFromJournalsAfterFlushWhereLastPageOfFlushedTxHadTheSameNumberAsFirstPageOfNextTxNotFlushedJet,The following statement contains a magic number: tx2.State.Root.Add(tx2' "item/2"' new MemoryStream(new byte[3999]));
Magic Number,Voron.Tests.Bugs,RecoveryWithManualFlush,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\RecoveryWithManualFlush.cs,ShouldRecoverFromJournalsAfterFlushWhereLastPageOfFlushedTxHadTheSameNumberAsFirstPageOfNextTxNotFlushedJet,The following statement contains a magic number: Assert.Equal(4000' readResult.Reader.Length);
Magic Number,Voron.Tests.Bugs,RecoveryWithManualFlush,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\RecoveryWithManualFlush.cs,ShouldRecoverFromJournalsAfterFlushWhereLastPageOfFlushedTxHadTheSameNumberAsFirstPageOfNextTxNotFlushedJet,The following statement contains a magic number: Assert.Equal(3999' readResult.Reader.Length);
Magic Number,Voron.Tests.Bugs,RecoveryWithManualFlush,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\RecoveryWithManualFlush.cs,ShouldRecoverTransactionEndPositionsTableAfterRestart,The following statement contains a magic number: tx1.State.Root.Add(tx1' "item/1"' new MemoryStream(new byte[4000]));
Magic Number,Voron.Tests.Bugs,RecoveryWithManualFlush,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\RecoveryWithManualFlush.cs,ShouldRecoverTransactionEndPositionsTableAfterRestart,The following statement contains a magic number: tx1.State.Root.Add(tx1' "item/2"' new MemoryStream(new byte[4000]));
Magic Number,Voron.Tests.Bugs,RecoveryWithManualFlush,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\RecoveryWithManualFlush.cs,ShouldRecoverTransactionEndPositionsTableAfterRestart,The following statement contains a magic number: tx2.State.Root.Add(tx2' "item/2"' new MemoryStream(new byte[3999]));
Magic Number,Voron.Tests.Bugs,RecoveryWithManualFlush,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\RecoveryWithManualFlush.cs,ShouldRecoverTransactionEndPositionsTableAfterRestart,The following statement contains a magic number: Assert.Equal(4000' readResult.Reader.Length);
Magic Number,Voron.Tests.Bugs,RecoveryWithManualFlush,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\RecoveryWithManualFlush.cs,ShouldRecoverTransactionEndPositionsTableAfterRestart,The following statement contains a magic number: Assert.Equal(3999' readResult.Reader.Length);
Magic Number,Voron.Tests.Bugs,RecoveryWithManualFlush,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\RecoveryWithManualFlush.cs,StorageRecoveryAfterFlushingToDataFile,The following statement contains a magic number: tx.State.Root.Add(tx' "items/1"' new MemoryStream(new byte[] { 1' 2' 3 }));
Magic Number,Voron.Tests.Bugs,RecoveryWithManualFlush,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\RecoveryWithManualFlush.cs,StorageRecoveryAfterFlushingToDataFile,The following statement contains a magic number: tx.State.Root.Add(tx' "items/1"' new MemoryStream(new byte[] { 1' 2' 3 }));
Magic Number,Voron.Tests.Bugs,RecoveryWithManualFlush,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\RecoveryWithManualFlush.cs,StorageRecoveryAfterFlushingToDataFile,The following statement contains a magic number: Assert.Equal(3' readResult.Reader.Length);
Magic Number,Voron.Tests.Bugs,Snapshots,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\Snapshots.cs,SnapshotIssue,The following statement contains a magic number: const int DocumentCount = 50000;
Magic Number,Voron.Tests.Bugs,Snapshots,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\Snapshots.cs,SnapshotIssue,The following statement contains a magic number: var testBuffer = new byte[39];
Magic Number,Voron.Tests.Bugs,Snapshots,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\Snapshots.cs,SnapshotIssue_ExplicitFlushing,The following statement contains a magic number: const int DocumentCount = 50000;
Magic Number,Voron.Tests.Bugs,Snapshots,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\Snapshots.cs,SnapshotIssue_ExplicitFlushing,The following statement contains a magic number: var testBuffer = new byte[39];
Magic Number,Voron.Tests.Bugs,Deletes,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\Deletes.cs,RebalancerIssue,The following statement contains a magic number: const int DocumentCount = 750;
Magic Number,Voron.Tests.Bugs,Deletes,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\Deletes.cs,RebalancerIssue,The following statement contains a magic number: var testBuffer = new byte[757];
Magic Number,Voron.Tests.Bugs,Deletes,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\Deletes.cs,RebalancerIssue,The following statement contains a magic number: i >= 180
Magic Number,Voron.Tests.Bugs,PageSplitter,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\PageSplitter.cs,RandomString,The following statement contains a magic number: builder.Append(Convert.ToChar(Convert.ToInt32(Math.Floor(26 * _random.NextDouble() + 65))));
Magic Number,Voron.Tests.Bugs,PageSplitter,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\PageSplitter.cs,RandomString,The following statement contains a magic number: builder.Append(Convert.ToChar(Convert.ToInt32(Math.Floor(26 * _random.NextDouble() + 65))));
Magic Number,Voron.Tests.Bugs,PageSplitter,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\PageSplitter.cs,TreeAdds_WithVeryLargeKey,The following statement contains a magic number: inputData.Add(RandomString(1024));
Magic Number,Voron.Tests.Bugs,PageSplitter,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\PageSplitter.cs,TreeAdds_WithVeryLargeKey,The following statement contains a magic number: i < 1000
Magic Number,Voron.Tests.Bugs,PageSplitter,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\PageSplitter.cs,TreeAdds_WithVeryLargeKey,The following statement contains a magic number: Assert.DoesNotThrow(() => tree.Add(tx' keyString' new MemoryStream(new byte[] { 1' 2' 3' 4 })));
Magic Number,Voron.Tests.Bugs,PageSplitter,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\PageSplitter.cs,TreeAdds_WithVeryLargeKey,The following statement contains a magic number: Assert.DoesNotThrow(() => tree.Add(tx' keyString' new MemoryStream(new byte[] { 1' 2' 3' 4 })));
Magic Number,Voron.Tests.Bugs,PageSplitter,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\PageSplitter.cs,TreeAdds_WithVeryLargeKey,The following statement contains a magic number: Assert.DoesNotThrow(() => tree.Add(tx' keyString' new MemoryStream(new byte[] { 1' 2' 3' 4 })));
Magic Number,Voron.Tests.Bugs,PageSplitter,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\PageSplitter.cs,PageSplitterShouldCalculateSeparatorKeyCorrectly,The following statement contains a magic number: var testBuffer = new byte[79];
Magic Number,Voron.Tests.Bugs,PageSplitter,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\PageSplitter.cs,PageSplitter_SmallRun,The following statement contains a magic number: var ids = ReadIds("data.txt"' 35);
Magic Number,Voron.Tests.Bugs,PageSplitter,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\PageSplitter.cs,PageSplitter_SmallRun,The following statement contains a magic number: var testBuffer = new byte[79];
Magic Number,Voron.Tests.Bugs,PageSplitter,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\PageSplitter.cs,PageSplitterShouldCalculateSeparatorKeyCorrectly2,The following statement contains a magic number: var testBuffer = new byte[69];
Magic Number,Voron.Tests.Bugs,Recovery,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\Recovery.cs,StorageRecoveryShouldWorkWhenThereSingleTransactionToRecoverFromLog,The following statement contains a magic number: i < 100
Magic Number,Voron.Tests.Bugs,Recovery,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\Recovery.cs,StorageRecoveryShouldWorkWhenThereSingleTransactionToRecoverFromLog,The following statement contains a magic number: i < 100
Magic Number,Voron.Tests.Bugs,Recovery,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\Recovery.cs,StorageRecoveryShouldWorkWhenThereAreCommitedAndUncommitedTransactions,The following statement contains a magic number: i < 10000
Magic Number,Voron.Tests.Bugs,Recovery,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\Recovery.cs,StorageRecoveryShouldWorkWhenThereAreCommitedAndUncommitedTransactions2,The following statement contains a magic number: i < 10000
Magic Number,Voron.Tests.Bugs,Recovery,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\Recovery.cs,StorageRecoveryShouldWorkWhenThereAreMultipleCommitedTransactions,The following statement contains a magic number: i < 1000
Magic Number,Voron.Tests.Bugs,Recovery,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\Recovery.cs,StorageRecoveryShouldWorkWhenThereAreMultipleCommitedTransactions,The following statement contains a magic number: i < 1000
Magic Number,Voron.Tests.Bugs,Recovery,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\Recovery.cs,StorageRecoveryShouldWorkWhenThereAreMultipleCommitedTransactions2,The following statement contains a magic number: i < 1000
Magic Number,Voron.Tests.Bugs,Recovery,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\Recovery.cs,StorageRecoveryShouldWorkWhenThereAreMultipleCommitedTransactions2,The following statement contains a magic number: i < 5
Magic Number,Voron.Tests.Bugs,Recovery,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\Recovery.cs,StorageRecoveryShouldWorkWhenThereAreMultipleCommitedTransactions2,The following statement contains a magic number: i < 1000
Magic Number,Voron.Tests.Bugs,Recovery,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\Recovery.cs,StorageRecoveryShouldWorkWhenThereAreMultipleCommitedTransactions2,The following statement contains a magic number: i < 5
Magic Number,Voron.Tests.Bugs,Recovery,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\Recovery.cs,StorageRecoveryShouldWorkForSplitTransactions,The following statement contains a magic number: var random = new Random(1234);
Magic Number,Voron.Tests.Bugs,Recovery,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\Recovery.cs,StorageRecoveryShouldWorkForSplitTransactions,The following statement contains a magic number: var buffer = new byte[4096];
Magic Number,Voron.Tests.Bugs,Recovery,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\Recovery.cs,StorageRecoveryShouldWorkForSplitTransactions,The following statement contains a magic number: var count = 1000;
Magic Number,Voron.Tests.Bugs,Recovery,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\Recovery.cs,StorageRecoveryShouldWorkForSplitTransactions,The following statement contains a magic number: options.MaxLogFileSize = 10 * AbstractPager.PageSize;
Magic Number,Voron.Tests.Bugs,Recovery,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\Recovery.cs,StorageRecoveryShouldWorkForSplitTransactions,The following statement contains a magic number: options.MaxLogFileSize = 10 * AbstractPager.PageSize;
Magic Number,Voron.Tests.Bugs,InvalidReleasesOfScratchPages,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\InvalidReleasesOfScratchPages.cs,ParallelWritesInBatchesAndReadsByUsingTreeIterator,The following statement contains a magic number: const int numberOfWriteThreads = 10;
Magic Number,Voron.Tests.Bugs,InvalidReleasesOfScratchPages,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\InvalidReleasesOfScratchPages.cs,ParallelWritesInBatchesAndReadsByUsingTreeIterator,The following statement contains a magic number: const int numberOfReadThreads = 10;
Magic Number,Voron.Tests.Bugs,InvalidReleasesOfScratchPages,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\InvalidReleasesOfScratchPages.cs,ParallelWritesInBatchesAndReadsByUsingTreeIterator,The following statement contains a magic number: const int numberOfTrees = 2;
Magic Number,Voron.Tests.Bugs,InvalidReleasesOfScratchPages,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\InvalidReleasesOfScratchPages.cs,ParallelWritesInBatchesAndReadsByUsingTreeIterator,The following statement contains a magic number: var taskWorkTime = TimeSpan.FromSeconds(60);
Magic Number,Voron.Tests.Bugs,InvalidReleasesOfScratchPages,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\InvalidReleasesOfScratchPages.cs,ParallelWritesInBatchesAndReadsByUsingTreeIterator,The following statement contains a magic number: var writeParallelTask = Task.Factory.StartNew(  				() =>  				{  					Parallel.For(  						0'  						numberOfWriteThreads'  						i =>  						{  							var random = new Random(i ^ 1337);  							var dataSize = random.Next(100' 100);  							var buffer = new byte[dataSize];  							random.NextBytes(buffer);    							while (writeTime.Elapsed < taskWorkTime && (readParallelTask == null || readParallelTask.Exception == null))  							{  								var tIndex = random.Next(0' numberOfTrees - 1);  								var treeName = trees[tIndex];    								var batch = new WriteBatch();  								batch.Add("testdocuments/" + random.Next(0' 100000)' new MemoryStream(buffer)' treeName);    								Env.Writer.Write(batch);  							}  						});  				}'  				TaskCreationOptions.LongRunning);
Magic Number,Voron.Tests.Bugs,InvalidReleasesOfScratchPages,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\InvalidReleasesOfScratchPages.cs,ParallelWritesInBatchesAndReadsByUsingTreeIterator,The following statement contains a magic number: var writeParallelTask = Task.Factory.StartNew(  				() =>  				{  					Parallel.For(  						0'  						numberOfWriteThreads'  						i =>  						{  							var random = new Random(i ^ 1337);  							var dataSize = random.Next(100' 100);  							var buffer = new byte[dataSize];  							random.NextBytes(buffer);    							while (writeTime.Elapsed < taskWorkTime && (readParallelTask == null || readParallelTask.Exception == null))  							{  								var tIndex = random.Next(0' numberOfTrees - 1);  								var treeName = trees[tIndex];    								var batch = new WriteBatch();  								batch.Add("testdocuments/" + random.Next(0' 100000)' new MemoryStream(buffer)' treeName);    								Env.Writer.Write(batch);  							}  						});  				}'  				TaskCreationOptions.LongRunning);
Magic Number,Voron.Tests.Bugs,InvalidReleasesOfScratchPages,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\InvalidReleasesOfScratchPages.cs,ParallelWritesInBatchesAndReadsByUsingTreeIterator,The following statement contains a magic number: var writeParallelTask = Task.Factory.StartNew(  				() =>  				{  					Parallel.For(  						0'  						numberOfWriteThreads'  						i =>  						{  							var random = new Random(i ^ 1337);  							var dataSize = random.Next(100' 100);  							var buffer = new byte[dataSize];  							random.NextBytes(buffer);    							while (writeTime.Elapsed < taskWorkTime && (readParallelTask == null || readParallelTask.Exception == null))  							{  								var tIndex = random.Next(0' numberOfTrees - 1);  								var treeName = trees[tIndex];    								var batch = new WriteBatch();  								batch.Add("testdocuments/" + random.Next(0' 100000)' new MemoryStream(buffer)' treeName);    								Env.Writer.Write(batch);  							}  						});  				}'  				TaskCreationOptions.LongRunning);
Magic Number,Voron.Tests.Bugs,InvalidReleasesOfScratchPages,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\InvalidReleasesOfScratchPages.cs,ParallelWritesInBatchesAndReadsByUsingTreeIterator,The following statement contains a magic number: var writeParallelTask = Task.Factory.StartNew(  				() =>  				{  					Parallel.For(  						0'  						numberOfWriteThreads'  						i =>  						{  							var random = new Random(i ^ 1337);  							var dataSize = random.Next(100' 100);  							var buffer = new byte[dataSize];  							random.NextBytes(buffer);    							while (writeTime.Elapsed < taskWorkTime && (readParallelTask == null || readParallelTask.Exception == null))  							{  								var tIndex = random.Next(0' numberOfTrees - 1);  								var treeName = trees[tIndex];    								var batch = new WriteBatch();  								batch.Add("testdocuments/" + random.Next(0' 100000)' new MemoryStream(buffer)' treeName);    								Env.Writer.Write(batch);  							}  						});  				}'  				TaskCreationOptions.LongRunning);
Magic Number,Voron.Tests.Bugs,TreeRebalancer,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\TreeRebalancer.cs,TreeRabalancerShouldCopyNodeFlagsWhenMultiValuePageRefIsSet,The following statement contains a magic number: i < 120
Magic Number,Voron.Tests.Bugs,TreeRebalancer,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\TreeRebalancer.cs,TreeRabalancerShouldCopyNodeFlagsWhenMultiValuePageRefIsSet,The following statement contains a magic number: i > 99
Magic Number,Voron.Tests.Bugs,TreeRebalancer,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\TreeRebalancer.cs,TreeRabalancerShouldCopyNodeFlagsWhenMultiValuePageRefIsSet,The following statement contains a magic number: i == 29
Magic Number,Voron.Tests.Bugs,TreeRebalancer,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\TreeRebalancer.cs,TreeRabalancerShouldCopyNodeFlagsWhenMultiValuePageRefIsSet,The following statement contains a magic number: i < 50
Magic Number,Voron.Tests.Bugs,TreeRebalancer,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\TreeRebalancer.cs,ValidateMulti,The following statement contains a magic number: Assert.Equal(2' count);
Magic Number,Voron.Tests.Bugs,TreeRebalancer,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\TreeRebalancer.cs,ValidateMulti,The following statement contains a magic number: Assert.Equal(2' keys.Count);
Magic Number,Voron.Tests.Bugs,Versioning,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\Versioning.cs,SplittersAndRebalancersShouldNotChangeNodeVersion,The following statement contains a magic number: const int DocumentCount = 100000;
Magic Number,Voron.Tests.Bugs,Versioning,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Bugs\Versioning.cs,SplittersAndRebalancersShouldNotChangeNodeVersion,The following statement contains a magic number: var testBuffer = new byte[123];
Magic Number,Voron.Tests,MultiValueTree,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\MultiValueTree.cs,Single_MultiAdd_And_Read_DataStored,The following statement contains a magic number: var buffer = new byte[1000];
Magic Number,Voron.Tests,MultiValueTree,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\MultiValueTree.cs,MultiDelete_Remains_One_Entry_The_Data_Is_Retrieved_With_MultiRead,The following statement contains a magic number: const int INPUT_COUNT = 3;
Magic Number,Voron.Tests,MultiValueTree,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\MultiValueTree.cs,MultiDelete_Remains_One_Entry_The_Data_Is_Retrieved_With_MultiRead,The following statement contains a magic number: const int INPUT_DATA_SIZE = 1000;
Magic Number,Voron.Tests,MultiValueTree,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\MultiValueTree.cs,MultiDelete_Remains_No_Entries_ChildTreeKey_Doesnt_Exist,The following statement contains a magic number: const int INPUT_COUNT = 3;
Magic Number,Voron.Tests,MultiValueTree,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\MultiValueTree.cs,MultiDelete_Remains_No_Entries_ChildTreeKey_Doesnt_Exist,The following statement contains a magic number: const int INPUT_DATA_SIZE = 1000;
Magic Number,Voron.Tests,MultiValueTree,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\MultiValueTree.cs,Single_MultiAdd_And_Single_MultiDelete_DataDeleted,The following statement contains a magic number: var buffer = new byte[1000];
Magic Number,Voron.Tests,MultiValueTree,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\MultiValueTree.cs,Multiple_MultiAdd_And_MultiDelete_InTheSame_Transaction_EntryDeleted,The following statement contains a magic number: const int INPUT_COUNT = 25;
Magic Number,Voron.Tests,MultiValueTree,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\MultiValueTree.cs,Multiple_MultiAdd_And_MultiDelete_InTheSame_Transaction_EntryDeleted,The following statement contains a magic number: const int INPUT_DATA_SIZE = 1000;
Magic Number,Voron.Tests,MultiValueTree,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\MultiValueTree.cs,Multiple_MultiAdd_And_MultiDelete_InTheSame_Transaction_EntryDeleted,The following statement contains a magic number: var indexToDelete = new Random(1234).Next(0' INPUT_COUNT - 1);
Magic Number,Voron.Tests,MultiValueTree,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\MultiValueTree.cs,NamedTree_Multiple_MultiAdd_And_MultiDelete_InTheSame_Transaction_EntryDeleted,The following statement contains a magic number: const int INPUT_COUNT = 25;
Magic Number,Voron.Tests,MultiValueTree,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\MultiValueTree.cs,NamedTree_Multiple_MultiAdd_And_MultiDelete_InTheSame_Transaction_EntryDeleted,The following statement contains a magic number: const int INPUT_DATA_SIZE = 1000;
Magic Number,Voron.Tests,MultiValueTree,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\MultiValueTree.cs,NamedTree_Multiple_MultiAdd_And_MultiDelete_InTheSame_Transaction_EntryDeleted,The following statement contains a magic number: var indexToDelete = new Random(1234).Next(0' INPUT_COUNT - 1);
Magic Number,Voron.Tests,MultiValueTree,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\MultiValueTree.cs,NamedTree_Multiple_MultiAdd_MultiDelete_Once_And_Read_EntryDeleted,The following statement contains a magic number: const int INPUT_COUNT = 25;
Magic Number,Voron.Tests,MultiValueTree,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\MultiValueTree.cs,NamedTree_Multiple_MultiAdd_MultiDelete_Once_And_Read_EntryDeleted,The following statement contains a magic number: const int INPUT_DATA_SIZE = 1000;
Magic Number,Voron.Tests,MultiValueTree,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\MultiValueTree.cs,NamedTree_Multiple_MultiAdd_MultiDelete_Once_And_Read_EntryDeleted,The following statement contains a magic number: var indexToDelete = new Random(1234).Next(0' INPUT_COUNT - 1);
Magic Number,Voron.Tests,MultiValueTree,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\MultiValueTree.cs,Multiple_MultiAdd_MultiDelete_Once_And_Read_EntryDeleted,The following statement contains a magic number: const int INPUT_COUNT = 25;
Magic Number,Voron.Tests,MultiValueTree,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\MultiValueTree.cs,Multiple_MultiAdd_MultiDelete_Once_And_Read_EntryDeleted,The following statement contains a magic number: const int INPUT_DATA_SIZE = 1000;
Magic Number,Voron.Tests,MultiValueTree,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\MultiValueTree.cs,Multiple_MultiAdd_MultiDelete_Once_And_Read_EntryDeleted,The following statement contains a magic number: var indexToDelete = new Random(1234).Next(0' INPUT_COUNT - 1);
Magic Number,Voron.Tests,MultiValueTree,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\MultiValueTree.cs,Multiple_MultiAdd_And_Read_DataStored,The following statement contains a magic number: const int INPUT_COUNT = 3;
Magic Number,Voron.Tests,MultiValueTree,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\MultiValueTree.cs,Multiple_MultiAdd_And_Read_DataStored,The following statement contains a magic number: const int INPUT_DATA_SIZE = 1000;
Magic Number,Voron.Tests,StorageTest,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\StorageTest.cs,DeleteDirectory,The following statement contains a magic number: i < 10
Magic Number,Voron.Tests,StreamExtensions,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\StreamExtensions.cs,ReadData,The following statement contains a magic number: const int defaultBufferSize = 1024*16;
Magic Number,Voron.Tests,StreamExtensions,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\StreamExtensions.cs,ReadData,The following statement contains a magic number: const int defaultBufferSize = 1024*16;
Magic Number,Voron.Tests,StreamExtensions,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\StreamExtensions.cs,ReadDataAsync,The following statement contains a magic number: const int defaultBufferSize = 1024*16;
Magic Number,Voron.Tests,StreamExtensions,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\StreamExtensions.cs,ReadDataAsync,The following statement contains a magic number: const int defaultBufferSize = 1024*16;
Magic Number,Voron.Tests.Journal,BasicActions,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Journal\BasicActions.cs,Configure,The following statement contains a magic number: options.MaxLogFileSize = 10 * AbstractPager.PageSize;
Magic Number,Voron.Tests.Journal,BasicActions,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Journal\BasicActions.cs,CanUseMultipleLogFiles,The following statement contains a magic number: var bytes = new byte[1024];
Magic Number,Voron.Tests.Journal,BasicActions,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Journal\BasicActions.cs,CanUseMultipleLogFiles,The following statement contains a magic number: i < 15
Magic Number,Voron.Tests.Journal,BasicActions,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Journal\BasicActions.cs,CanUseMultipleLogFiles,The following statement contains a magic number: i < 15
Magic Number,Voron.Tests.Journal,BasicActions,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Journal\BasicActions.cs,CanFlushDataFromLogToDataFile,The following statement contains a magic number: i < 100
Magic Number,Voron.Tests.Journal,BasicActions,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Journal\BasicActions.cs,CanFlushDataFromLogToDataFile,The following statement contains a magic number: i < 100
Magic Number,Voron.Tests.Journal,EdgeCases,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Journal\EdgeCases.cs,Configure,The following statement contains a magic number: options.MaxLogFileSize = 10 * AbstractPager.PageSize;
Magic Number,Voron.Tests.Journal,EdgeCases,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Journal\EdgeCases.cs,TransactionCommitShouldSetCurrentLogFileToNullIfItIsFull,The following statement contains a magic number: var bytes = new byte[4 * AbstractPager.PageSize];
Magic Number,Voron.Tests.Journal,LogShipping,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Journal\LogShipping.cs,Committing_tx_should_fire_event_with_transactionsToShip_records,The following statement contains a magic number: Assert.Equal(3'transactionsToShip.Count);
Magic Number,Voron.Tests.Journal,LogShipping,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Journal\LogShipping.cs,ValidateLotsOfTestDataForTree,The following statement contains a magic number: j < 500
Magic Number,Voron.Tests.Journal,LogShipping,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Journal\LogShipping.cs,ValidateLotsOfTestDataForTree,The following statement contains a magic number: i < 50
Magic Number,Voron.Tests.Journal,LogShipping,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Journal\LogShipping.cs,WriteLotsOfTestDataForTree,The following statement contains a magic number: j < 500
Magic Number,Voron.Tests.Journal,LogShipping,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Journal\LogShipping.cs,WriteLotsOfTestDataForTree,The following statement contains a magic number: i < 50
Magic Number,Voron.Tests.Journal,LogShipping,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Journal\LogShipping.cs,Committed_tx_should_be_possible_to_read_from_journal_as_shipping_records,The following statement contains a magic number: Assert.Equal(4' transactionsToShip.Count);
Magic Number,Voron.Tests.Journal,LogShipping,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Journal\LogShipping.cs,Committed_tx_should_be_possible_to_read_from_journal_as_shipping_records,The following statement contains a magic number: Assert.Equal(transactionsToShip[1].Header.Crc' transactionsToShip[2].PreviousTransactionCrc);
Magic Number,Voron.Tests.Journal,LogShipping,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Journal\LogShipping.cs,Committed_tx_should_be_possible_to_read_from_journal_as_shipping_records,The following statement contains a magic number: Assert.Equal(transactionsToShip[2].Header.Crc' transactionsToShip[3].PreviousTransactionCrc);
Magic Number,Voron.Tests.Journal,LogShipping,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Journal\LogShipping.cs,Committed_tx_should_be_possible_to_read_from_journal_as_shipping_records,The following statement contains a magic number: Assert.Equal(transactionsToShip[2].Header.Crc' transactionsToShip[3].PreviousTransactionCrc);
Magic Number,Voron.Tests.Journal,Mvcc,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Journal\Mvcc.cs,Configure,The following statement contains a magic number: options.MaxLogFileSize = 3 * AbstractPager.PageSize;
Magic Number,Voron.Tests.Journal,Mvcc,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Journal\Mvcc.cs,ShouldNotFlushUntilThereAreActiveOlderTransactions,The following statement contains a magic number: var ones = new byte[3000];
Magic Number,Voron.Tests.Journal,Mvcc,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Journal\Mvcc.cs,ShouldNotFlushUntilThereAreActiveOlderTransactions,The following statement contains a magic number: var nines = new byte[3000];
Magic Number,Voron.Tests.Journal,Mvcc,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Journal\Mvcc.cs,ShouldNotFlushUntilThereAreActiveOlderTransactions,The following statement contains a magic number: nines[i] = 9;
Magic Number,Voron.Tests.Journal,Mvcc,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Journal\Mvcc.cs,ShouldNotFlushUntilThereAreActiveOlderTransactions,The following statement contains a magic number: i < 3000
Magic Number,Voron.Tests.Journal,Mvcc,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Journal\Mvcc.cs,ShouldNotFlushUntilThereAreActiveOlderTransactions,The following statement contains a magic number: i < 3000
Magic Number,Voron.Tests.Journal,UncommittedTransactions,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Journal\UncommittedTransactions.cs,Configure,The following statement contains a magic number: options.MaxLogFileSize = 10 * AbstractPager.PageSize;
Magic Number,Voron.Tests.Optimizations,Writes,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Optimizations\Writes.cs,SinglePageModificationDoNotCauseCopyingAllIntermediatePages,The following statement contains a magic number: var keySize = 1024;
Magic Number,Voron.Tests.Optimizations,Writes,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Optimizations\Writes.cs,SinglePageModificationDoNotCauseCopyingAllIntermediatePages,The following statement contains a magic number: tx.State.Root.Add(tx' new string('9'' keySize)' new MemoryStream(new byte[3]));
Magic Number,Voron.Tests.Optimizations,Writes,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Optimizations\Writes.cs,SinglePageModificationDoNotCauseCopyingAllIntermediatePages,The following statement contains a magic number: tx.State.Root.Add(tx' new string('1'' keySize)' new MemoryStream(new byte[3]));
Magic Number,Voron.Tests.Optimizations,Writes,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Optimizations\Writes.cs,SinglePageModificationDoNotCauseCopyingAllIntermediatePages,The following statement contains a magic number: tx.State.Root.Add(tx' new string('4'' 1000)' new MemoryStream(new byte[2]));
Magic Number,Voron.Tests.Optimizations,Writes,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Optimizations\Writes.cs,SinglePageModificationDoNotCauseCopyingAllIntermediatePages,The following statement contains a magic number: tx.State.Root.Add(tx' new string('4'' 1000)' new MemoryStream(new byte[2]));
Magic Number,Voron.Tests.Optimizations,Writes,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Optimizations\Writes.cs,SinglePageModificationDoNotCauseCopyingAllIntermediatePages,The following statement contains a magic number: tx.State.Root.Add(tx' new string('5'' keySize)' new MemoryStream(new byte[2]));
Magic Number,Voron.Tests.Optimizations,Writes,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Optimizations\Writes.cs,SinglePageModificationDoNotCauseCopyingAllIntermediatePages,The following statement contains a magic number: tx.State.Root.Add(tx' new string('8'' keySize)' new MemoryStream(new byte[3]));
Magic Number,Voron.Tests.Optimizations,Writes,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Optimizations\Writes.cs,SinglePageModificationDoNotCauseCopyingAllIntermediatePages,The following statement contains a magic number: tx.State.Root.Add(tx' new string('2'' keySize)' new MemoryStream(new byte[2]));
Magic Number,Voron.Tests.Optimizations,Writes,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Optimizations\Writes.cs,SinglePageModificationDoNotCauseCopyingAllIntermediatePages,The following statement contains a magic number: tx.State.Root.Add(tx' new string('6'' keySize)' new MemoryStream(new byte[2]));
Magic Number,Voron.Tests.Optimizations,Writes,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Optimizations\Writes.cs,SinglePageModificationDoNotCauseCopyingAllIntermediatePages,The following statement contains a magic number: tx.State.Root.Add(tx' new string('0'' keySize)' new MemoryStream(new byte[4]));
Magic Number,Voron.Tests.Optimizations,Writes,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Optimizations\Writes.cs,SinglePageModificationDoNotCauseCopyingAllIntermediatePages,The following statement contains a magic number: tx.State.Root.Add(tx' new string('3'' 1000)' new MemoryStream(new byte[1]));
Magic Number,Voron.Tests.Optimizations,Writes,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Optimizations\Writes.cs,SinglePageModificationDoNotCauseCopyingAllIntermediatePages,The following statement contains a magic number: tx.State.Root.Add(tx' new string('4'' 1000)' new MemoryStream(new byte[21]));
Magic Number,Voron.Tests.Optimizations,Writes,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Optimizations\Writes.cs,SinglePageModificationDoNotCauseCopyingAllIntermediatePages,The following statement contains a magic number: tx.State.Root.Add(tx' new string('4'' 1000)' new MemoryStream(new byte[21]));
Magic Number,Voron.Tests.Optimizations,Writes,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Optimizations\Writes.cs,SinglePageModificationDoNotCauseCopyingAllIntermediatePages,The following statement contains a magic number: var readResult = tx.State.Root.Read(tx' new string('4'' 1000));
Magic Number,Voron.Tests.Optimizations,Writes,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Optimizations\Writes.cs,SinglePageModificationDoNotCauseCopyingAllIntermediatePages,The following statement contains a magic number: Assert.Equal(21' readResult.Reader.Length);
Magic Number,Voron.Tests.Storage,Batches,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\Batches.cs,ReadVersion_Items_From_Both_WriteBatch_And_Snapshot,The following statement contains a magic number: Assert.Equal(2' foo2Version);
Magic Number,Voron.Tests.Storage,Batches,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\Batches.cs,ReadVersion_The_Same_Item_Both_WriteBatch_And_Snapshot_WriteBatch_Takes_Precedence,The following statement contains a magic number: writeBatch.Add("foo1"' StreamFor("updated foo1 2")' "tree"' 2);
Magic Number,Voron.Tests.Storage,Batches,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\Batches.cs,ReadVersion_The_Same_Item_Both_WriteBatch_And_Snapshot_WriteBatch_Takes_Precedence,The following statement contains a magic number: Assert.Equal(3' foo1Version);
Magic Number,Voron.Tests.Storage,Batches,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\Batches.cs,ReadVersion_The_Same_Item_Both_WriteBatch_And_Snapshot_WriteBatch_Takes_Precedence,The following statement contains a magic number: Assert.Equal(2' foo1VersionThatShouldBe2);
Magic Number,Voron.Tests.Storage,Batches,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\Batches.cs,MultipleItemBatchTest,The following statement contains a magic number: int numberOfItems = 10000;
Magic Number,Voron.Tests.Storage,Batches,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\Batches.cs,MultipleBatchesTest,The following statement contains a magic number: int numberOfItems = 10000;
Magic Number,Voron.Tests.Storage,Batches,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\Batches.cs,MultipleTreesTest,The following statement contains a magic number: int numberOfItems = 10000;
Magic Number,Voron.Tests.Storage,BigValues,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\BigValue.cs,CanReuseLargeSpace,The following statement contains a magic number: var random = new Random(43321);
Magic Number,Voron.Tests.Storage,BigValues,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\BigValue.cs,CanReuseLargeSpace,The following statement contains a magic number: var buffer = new byte[1024 * 1024 * 6 + 283];
Magic Number,Voron.Tests.Storage,BigValues,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\BigValue.cs,CanReuseLargeSpace,The following statement contains a magic number: var buffer = new byte[1024 * 1024 * 6 + 283];
Magic Number,Voron.Tests.Storage,BigValues,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\BigValue.cs,CanReuseLargeSpace,The following statement contains a magic number: var buffer = new byte[1024 * 1024 * 6 + 283];
Magic Number,Voron.Tests.Storage,BigValues,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\BigValue.cs,CanReuseLargeSpace,The following statement contains a magic number: var buffer = new byte[1024 * 1024 * 6 + 283];
Magic Number,Voron.Tests.Storage,BigValues,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\BigValue.cs,CanReuseLargeSpace,The following statement contains a magic number: tx.State.Root.Add(tx' new Slice(BitConverter.GetBytes(1203))' new MemoryStream(buffer));
Magic Number,Voron.Tests.Storage,BigValues,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\BigValue.cs,CanReuseLargeSpace,The following statement contains a magic number: tx.State.Root.Delete(tx' new Slice(BitConverter.GetBytes(1203)));
Magic Number,Voron.Tests.Storage,BigValues,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\BigValue.cs,CanReuseLargeSpace,The following statement contains a magic number: var readResult = tx.State.Root.Read(tx' new Slice(BitConverter.GetBytes(1203)));
Magic Number,Voron.Tests.Storage,BigValues,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\BigValue.cs,CanReuseLargeSpace,The following statement contains a magic number: restartCount >= 2
Magic Number,Voron.Tests.Storage,BigValues,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\BigValue.cs,CanReuseLargeSpace,The following statement contains a magic number: var readResult = tx.State.Root.Read(tx' new Slice(BitConverter.GetBytes(1203)));
Magic Number,Voron.Tests.Storage,BigValues,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\BigValue.cs,CanReuseLargeSpace,The following statement contains a magic number: buffer = new byte[1024 * 1024 * 3 + 1238];
Magic Number,Voron.Tests.Storage,BigValues,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\BigValue.cs,CanReuseLargeSpace,The following statement contains a magic number: buffer = new byte[1024 * 1024 * 3 + 1238];
Magic Number,Voron.Tests.Storage,BigValues,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\BigValue.cs,CanReuseLargeSpace,The following statement contains a magic number: buffer = new byte[1024 * 1024 * 3 + 1238];
Magic Number,Voron.Tests.Storage,BigValues,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\BigValue.cs,CanReuseLargeSpace,The following statement contains a magic number: buffer = new byte[1024 * 1024 * 3 + 1238];
Magic Number,Voron.Tests.Storage,BigValues,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\BigValue.cs,CanReuseLargeSpace,The following statement contains a magic number: tx.State.Root.Add(tx' new Slice(BitConverter.GetBytes(1203))' new MemoryStream(buffer));
Magic Number,Voron.Tests.Storage,BigValues,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\BigValue.cs,CanReuseLargeSpace,The following statement contains a magic number: var readResult = tx.State.Root.Read(tx' new Slice(BitConverter.GetBytes(1203)));
Magic Number,Voron.Tests.Storage,BigValues,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\BigValue.cs,CanReuseLargeSpace,The following statement contains a magic number: restartCount >= 3
Magic Number,Voron.Tests.Storage,BigValues,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\BigValue.cs,CanReuseLargeSpace,The following statement contains a magic number: var readResult = tx.State.Root.Read(tx' new Slice(BitConverter.GetBytes(1203)));
Magic Number,Voron.Tests.Storage,BigValues,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\BigValue.cs,CanReuseLargeSpace,The following statement contains a magic number: var readResult = tx.State.Root.Read(tx' new Slice(BitConverter.GetBytes(1203)));
Magic Number,Voron.Tests.Storage,BigValues,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\BigValue.cs,CanReuseLargeSpace,The following statement contains a magic number: restartCount >= 4
Magic Number,Voron.Tests.Storage,BigValues,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\BigValue.cs,CanReuseLargeSpace,The following statement contains a magic number: var readResult = tx.State.Root.Read(tx' new Slice(BitConverter.GetBytes(1203)));
Magic Number,Voron.Tests.Storage,BigValues,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\BigValue.cs,CanStoreInOneTransactionReallyBigValue,The following statement contains a magic number: var random = new Random(43321);
Magic Number,Voron.Tests.Storage,BigValues,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\BigValue.cs,CanStoreInOneTransactionReallyBigValue,The following statement contains a magic number: var buffer = new byte[1024 * 1024 * 15 + 283];
Magic Number,Voron.Tests.Storage,BigValues,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\BigValue.cs,CanStoreInOneTransactionReallyBigValue,The following statement contains a magic number: var buffer = new byte[1024 * 1024 * 15 + 283];
Magic Number,Voron.Tests.Storage,BigValues,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\BigValue.cs,CanStoreInOneTransactionReallyBigValue,The following statement contains a magic number: var buffer = new byte[1024 * 1024 * 15 + 283];
Magic Number,Voron.Tests.Storage,BigValues,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\BigValue.cs,CanStoreInOneTransactionReallyBigValue,The following statement contains a magic number: var buffer = new byte[1024 * 1024 * 15 + 283];
Magic Number,Voron.Tests.Storage,BigValues,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\BigValue.cs,CanStoreInOneTransactionReallyBigValue,The following statement contains a magic number: tx.State.Root.Add(tx' new Slice(BitConverter.GetBytes(1203))' new MemoryStream(buffer));
Magic Number,Voron.Tests.Storage,BigValues,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\BigValue.cs,CanStoreInOneTransactionReallyBigValue,The following statement contains a magic number: var readResult = tx.State.Root.Read(tx' new Slice(BitConverter.GetBytes(1203)));
Magic Number,Voron.Tests.Storage,BigValues,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\BigValue.cs,CanStoreInOneTransactionManySmallValues,The following statement contains a magic number: var random = new Random(43321);
Magic Number,Voron.Tests.Storage,BigValues,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\BigValue.cs,CanStoreInOneTransactionManySmallValues,The following statement contains a magic number: var buffer = new byte[912];
Magic Number,Voron.Tests.Storage,BigValues,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\BigValue.cs,CanStoreInOneTransactionManySmallValues,The following statement contains a magic number: i < 1500
Magic Number,Voron.Tests.Storage,BigValues,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\BigValue.cs,CanStoreInOneTransactionManySmallValues,The following statement contains a magic number: i < 1500
Magic Number,Voron.Tests.Storage,Concurrency,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\Concurrency.cs,SimpleVersion,The following statement contains a magic number: Assert.Equal(2' tx.State.Root.ReadVersion(tx' "key/1"));
Magic Number,Voron.Tests.Storage,Concurrency,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\Concurrency.cs,SimpleVersion,The following statement contains a magic number: Assert.Equal(2' tx.State.Root.ReadVersion(tx' "key/1"));
Magic Number,Voron.Tests.Storage,Concurrency,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\Concurrency.cs,NoCommit,The following statement contains a magic number: Assert.Equal(2' tx.State.Root.ReadVersion(tx' "key/1"));
Magic Number,Voron.Tests.Storage,Concurrency,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\Concurrency.cs,ConcurrencyExceptionShouldBeThrownWhenVersionMismatch,The following statement contains a magic number: var e = Assert.Throws<ConcurrencyException>(() => tx.State.Root.Add(tx' "key/1"' StreamFor("321")' 2));
Magic Number,Voron.Tests.Storage,Concurrency,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\Concurrency.cs,ConcurrencyExceptionShouldBeThrownWhenVersionMismatch,The following statement contains a magic number: var e = Assert.Throws<ConcurrencyException>(() => tx.State.Root.Delete(tx' "key/1"' 2));
Magic Number,Voron.Tests.Storage,Concurrency,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\Concurrency.cs,ConcurrencyExceptionShouldBeThrownWhenVersionMismatchMultiTree,The following statement contains a magic number: var e = Assert.Throws<ConcurrencyException>(() => tx.State.Root.MultiAdd(tx' "key/1"' "321"' 2));
Magic Number,Voron.Tests.Storage,Concurrency,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\Concurrency.cs,ConcurrencyExceptionShouldBeThrownWhenVersionMismatchMultiTree,The following statement contains a magic number: var e = Assert.Throws<ConcurrencyException>(() => tx.State.Root.MultiDelete(tx' "key/1"' "123"' 2));
Magic Number,Voron.Tests.Storage,Concurrency,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\Concurrency.cs,BatchSimpleVersion,The following statement contains a magic number: Assert.Equal(2' tx.State.Root.ReadVersion(tx' "key/1"));
Magic Number,Voron.Tests.Storage,Concurrency,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\Concurrency.cs,BatchConcurrencyExceptionShouldBeThrownWhenVersionMismatch,The following statement contains a magic number: batch2.Add("key/1"' StreamFor("123")' Constants.RootTreeName' 2);
Magic Number,Voron.Tests.Storage,Concurrency,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\Concurrency.cs,BatchConcurrencyExceptionShouldBeThrownWhenVersionMismatch,The following statement contains a magic number: batch3.Delete("key/1"' Constants.RootTreeName' 2);
Magic Number,Voron.Tests.Storage,FreeScratchPages,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\FreeScratchPages.cs,UncommittedTransactionShouldFreeScratchPagesThatWillBeReusedByNextTransaction,The following statement contains a magic number: var buffer = new byte[1024];
Magic Number,Voron.Tests.Storage,FreeScratchPages,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\FreeScratchPages.cs,UncommittedTransactionShouldFreeScratchPagesThatWillBeReusedByNextTransaction,The following statement contains a magic number: i < 10
Magic Number,Voron.Tests.Storage,FreeScratchPages,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\FreeScratchPages.cs,UncommittedTransactionShouldFreeScratchPagesThatWillBeReusedByNextTransaction,The following statement contains a magic number: i < 10
Magic Number,Voron.Tests.Storage,MemoryMapWithoutBackingPagerTest,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\MemoryMapWithoutBackingPagerTest.cs,MemoryMapWithoutBackingPagerTest,The following statement contains a magic number: dummyData = GenerateLoremIpsum(1024);
Magic Number,Voron.Tests.Storage,MemoryMapWithoutBackingPagerTest,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\MemoryMapWithoutBackingPagerTest.cs,GenerateTestData,The following statement contains a magic number: i < 1000
Magic Number,Voron.Tests.Storage,MemoryMapWithoutBackingPagerTest,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\MemoryMapWithoutBackingPagerTest.cs,Should_be_able_to_allocate_new_pages_multiple_times,The following statement contains a magic number: pagerSize *= 2;
Magic Number,Voron.Tests.Storage,MemoryMapWithoutBackingPagerTest,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\MemoryMapWithoutBackingPagerTest.cs,Should_be_able_to_allocate_new_pages_multiple_times,The following statement contains a magic number: Assert.Equal(numberOfPagesBeforeAllocation*2' Env.Options.DataPager.NumberOfAllocatedPages);
Magic Number,Voron.Tests.Storage,MemoryMapWithoutBackingPagerTest,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\MemoryMapWithoutBackingPagerTest.cs,Should_be_able_to_allocate_new_pages_multiple_times,The following statement contains a magic number: allocateMorePagesCount < 5
Magic Number,Voron.Tests.Storage,MemoryMapWithoutBackingPagerTest,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\MemoryMapWithoutBackingPagerTest.cs,Should_be_able_to_allocate_new_pages_with_remapping,The following statement contains a magic number: pagerSize *= 2;
Magic Number,Voron.Tests.Storage,MemoryMapWithoutBackingPagerTest,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\MemoryMapWithoutBackingPagerTest.cs,Should_be_able_to_allocate_new_pages_with_remapping,The following statement contains a magic number: allocateMorePagesCount < 2
Magic Number,Voron.Tests.Storage,MemoryMapWithoutBackingPagerTest,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\MemoryMapWithoutBackingPagerTest.cs,Should_be_able_to_allocate_new_pages_with_remapping,The following statement contains a magic number: adjacentBlockAddress = NativeMethods.VirtualAlloc(  					Env.Options.DataPager.PagerState.MapBase + totalAllocationSize' new UIntPtr(16)'  					NativeMethods.AllocationType.RESERVE' NativeMethods.MemoryProtection.EXECUTE_READWRITE);
Magic Number,Voron.Tests.Storage,MemoryMapWithoutBackingPagerTest,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\MemoryMapWithoutBackingPagerTest.cs,Should_be_able_to_allocate_new_pages_with_remapping,The following statement contains a magic number: pagerSize *= 2;
Magic Number,Voron.Tests.Storage,MemoryMapWithoutBackingPagerTest,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\MemoryMapWithoutBackingPagerTest.cs,Should_be_able_to_allocate_new_pages_with_remapping,The following statement contains a magic number: Assert.Equal(numberOfPagesBeforeAllocation*2' Env.Options.DataPager.NumberOfAllocatedPages);
Magic Number,Voron.Tests.Storage,MultiTransactions,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\MultiTransactions.cs,ShouldWork,The following statement contains a magic number: var value = new byte[100];
Magic Number,Voron.Tests.Storage,MultiTransactions,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\MultiTransactions.cs,ShouldWork,The following statement contains a magic number: i < 100
Magic Number,Voron.Tests.Storage,MultiTransactions,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\MultiTransactions.cs,ShouldWork,The following statement contains a magic number: x < 10
Magic Number,Voron.Tests.Storage,Quotas,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\Quotas.cs,Configure,The following statement contains a magic number: options.MaxStorageSize = 1024 * 1024 * 1;
Magic Number,Voron.Tests.Storage,Quotas,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\Quotas.cs,Configure,The following statement contains a magic number: options.MaxStorageSize = 1024 * 1024 * 1;
Magic Number,Voron.Tests.Storage,Quotas,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\Quotas.cs,ShouldThrowQuotaException,The following statement contains a magic number: var quotaEx = Assert.Throws<QuotaException>(() =>  			{  				// everything in one transaction  				using (var tx = Env.NewTransaction(TransactionFlags.ReadWrite))  				{  					for (int i = 0; i < 1024; i++)  					{  						tx.State.Root.Add(tx' "items/" + i' new MemoryStream(new byte[1024]));  					}    					tx.Commit();  				}  			});
Magic Number,Voron.Tests.Storage,Quotas,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\Quotas.cs,ShouldThrowQuotaException,The following statement contains a magic number: var quotaEx = Assert.Throws<QuotaException>(() =>  			{  				// everything in one transaction  				using (var tx = Env.NewTransaction(TransactionFlags.ReadWrite))  				{  					for (int i = 0; i < 1024; i++)  					{  						tx.State.Root.Add(tx' "items/" + i' new MemoryStream(new byte[1024]));  					}    					tx.Commit();  				}  			});
Magic Number,Voron.Tests.Storage,SplittingVeryBig,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\SplittingVeryBig.cs,Configure,The following statement contains a magic number: options.MaxLogFileSize = 10 * AbstractPager.PageSize;
Magic Number,Voron.Tests.Storage,SplittingVeryBig,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\SplittingVeryBig.cs,ShouldBeAbleToWriteValuesGreaterThanLogAndReadThem,The following statement contains a magic number: var random = new Random(1234);
Magic Number,Voron.Tests.Storage,SplittingVeryBig,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\SplittingVeryBig.cs,ShouldBeAbleToWriteValuesGreaterThanLogAndReadThem,The following statement contains a magic number: var buffer = new byte[1024 * 512];
Magic Number,Voron.Tests.Storage,SplittingVeryBig,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\SplittingVeryBig.cs,ShouldBeAbleToWriteValuesGreaterThanLogAndReadThem,The following statement contains a magic number: var buffer = new byte[1024 * 512];
Magic Number,Voron.Tests.Storage,SplittingVeryBig,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\SplittingVeryBig.cs,ShouldBeAbleToWriteValuesGreaterThanLogAndRecoverThem,The following statement contains a magic number: var random = new Random(1234);
Magic Number,Voron.Tests.Storage,SplittingVeryBig,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\SplittingVeryBig.cs,ShouldBeAbleToWriteValuesGreaterThanLogAndRecoverThem,The following statement contains a magic number: var buffer = new byte[1024 * 512];
Magic Number,Voron.Tests.Storage,SplittingVeryBig,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\SplittingVeryBig.cs,ShouldBeAbleToWriteValuesGreaterThanLogAndRecoverThem,The following statement contains a magic number: var buffer = new byte[1024 * 512];
Magic Number,Voron.Tests.Storage,SplittingVeryBig,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\SplittingVeryBig.cs,ShouldBeAbleToWriteValuesGreaterThanLogAndRecoverThem,The following statement contains a magic number: options.MaxLogFileSize = 10 * AbstractPager.PageSize;
Magic Number,Voron.Tests.Storage,SplittingVeryBig,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\SplittingVeryBig.cs,ShouldBeAbleToWriteValuesGreaterThanLogAndRecoverThem,The following statement contains a magic number: options.MaxLogFileSize = 10 * AbstractPager.PageSize;
Magic Number,Voron.Tests.Storage,VeryBig,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\VeryBig.cs,CanGrowBeyondInitialSize,The following statement contains a magic number: var buffer = new byte[1024 * 512];
Magic Number,Voron.Tests.Storage,VeryBig,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\VeryBig.cs,CanGrowBeyondInitialSize,The following statement contains a magic number: var buffer = new byte[1024 * 512];
Magic Number,Voron.Tests.Storage,VeryBig,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\VeryBig.cs,CanGrowBeyondInitialSize,The following statement contains a magic number: j < 12
Magic Number,Voron.Tests.Storage,VeryBig,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\VeryBig.cs,CanGrowBeyondInitialSize,The following statement contains a magic number: i < 20
Magic Number,Voron.Tests.Storage,VeryBig,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\VeryBig.cs,CanGrowBeyondInitialSize_Root,The following statement contains a magic number: var buffer = new byte[1024 * 512];
Magic Number,Voron.Tests.Storage,VeryBig,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\VeryBig.cs,CanGrowBeyondInitialSize_Root,The following statement contains a magic number: var buffer = new byte[1024 * 512];
Magic Number,Voron.Tests.Storage,VeryBig,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\VeryBig.cs,CanGrowBeyondInitialSize_Root,The following statement contains a magic number: j < 12
Magic Number,Voron.Tests.Storage,VeryBig,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\VeryBig.cs,CanGrowBeyondInitialSize_Root,The following statement contains a magic number: i < 20
Magic Number,Voron.Tests.Storage,VeryBig,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\VeryBig.cs,CanGrowBeyondInitialSize_WithAnotherTree,The following statement contains a magic number: var buffer = new byte[1024 * 512];
Magic Number,Voron.Tests.Storage,VeryBig,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\VeryBig.cs,CanGrowBeyondInitialSize_WithAnotherTree,The following statement contains a magic number: var buffer = new byte[1024 * 512];
Magic Number,Voron.Tests.Storage,VeryBig,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\VeryBig.cs,CanGrowBeyondInitialSize_WithAnotherTree,The following statement contains a magic number: j < 12
Magic Number,Voron.Tests.Storage,VeryBig,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Storage\VeryBig.cs,CanGrowBeyondInitialSize_WithAnotherTree,The following statement contains a magic number: i < 20
Magic Number,Voron.Tests.Trees,Basic,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\Basic.cs,CanAddVeryLargeValue,The following statement contains a magic number: var buffer = new byte[8192];
Magic Number,Voron.Tests.Trees,Basic,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\Basic.cs,CanAddVeryLargeValue,The following statement contains a magic number: Assert.Equal(4' tx.State.Root.State.PageCount);
Magic Number,Voron.Tests.Trees,Basic,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\Basic.cs,CanAddVeryLargeValue,The following statement contains a magic number: Assert.Equal(3' tx.State.Root.State.OverflowPages);
Magic Number,Voron.Tests.Trees,Basic,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\Basic.cs,CanAddEnoughToCausePageSplit,The following statement contains a magic number: i < 256
Magic Number,Voron.Tests.Trees,Basic,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\Basic.cs,CanAddEnoughToCausePageSplit,The following statement contains a magic number: AbstractPager.PageSize != 4096
Magic Number,Voron.Tests.Trees,Basic,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\Basic.cs,CanAddEnoughToCausePageSplit,The following statement contains a magic number: Assert.Equal(4' tx.State.Root.State.PageCount);
Magic Number,Voron.Tests.Trees,Basic,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\Basic.cs,CanAddEnoughToCausePageSplit,The following statement contains a magic number: Assert.Equal(3' tx.State.Root.State.LeafPages);
Magic Number,Voron.Tests.Trees,Basic,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\Basic.cs,CanAddEnoughToCausePageSplit,The following statement contains a magic number: Assert.Equal(2' tx.State.Root.State.Depth);
Magic Number,Voron.Tests.Trees,Basic,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\Basic.cs,AfterPageSplitAllDataIsValid,The following statement contains a magic number: const int count = 256;
Magic Number,Voron.Tests.Trees,Basic,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\Basic.cs,PageSplitsAllAround,The following statement contains a magic number: j == 2 && i == 205
Magic Number,Voron.Tests.Trees,Basic,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\Basic.cs,PageSplitsAllAround,The following statement contains a magic number: j == 2 && i == 205
Magic Number,Voron.Tests.Trees,Basic,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\Basic.cs,PageSplitsAllAround,The following statement contains a magic number: j < 5
Magic Number,Voron.Tests.Trees,Basic,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\Basic.cs,PageSplitsAllAround,The following statement contains a magic number: i < 256
Magic Number,Voron.Tests.Trees,Basic,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\Basic.cs,PageSplitsAllAround,The following statement contains a magic number: j < 5
Magic Number,Voron.Tests.Trees,Basic,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\Basic.cs,PageSplitsAllAround,The following statement contains a magic number: i < 256
Magic Number,Voron.Tests.Trees,CanDefrag,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\CanDefrag.cs,CanDeleteAtRoot,The following statement contains a magic number: var size = 250;
Magic Number,Voron.Tests.Trees,CanDefrag,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\CanDefrag.cs,CanDeleteAtRoot,The following statement contains a magic number: tx.State.Root.Add(tx' string.Format("{0'5}"' i*2)' StreamFor("abcdefg"));
Magic Number,Voron.Tests.Trees,CanDefrag,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\CanDefrag.cs,CanDeleteAtRoot,The following statement contains a magic number: tx.State.Root.Delete(tx' string.Format("{0'5}"' i*2));
Magic Number,Voron.Tests.Trees,CanDefrag,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\CanDefrag.cs,CanDeleteAtRoot,The following statement contains a magic number: i < size/2
Magic Number,Voron.Tests.Trees,CanDefrag,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\CanDefrag.cs,CanDeleteAtRoot,The following statement contains a magic number: tx.State.Root.Add(tx'  "  244"'new MemoryStream(new byte[512]));
Magic Number,Voron.Tests.Trees,Deletes,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\Deletes.cs,CanAddVeryLargeValueAndThenDeleteIt,The following statement contains a magic number: var buffer = new byte[8192];
Magic Number,Voron.Tests.Trees,Deletes,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\Deletes.cs,CanAddVeryLargeValueAndThenDeleteIt,The following statement contains a magic number: Assert.Equal(4' tx.State.Root.State.PageCount);
Magic Number,Voron.Tests.Trees,Deletes,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\Deletes.cs,CanAddVeryLargeValueAndThenDeleteIt,The following statement contains a magic number: Assert.Equal(3' tx.State.Root.State.OverflowPages);
Magic Number,Voron.Tests.Trees,Deletes,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\Deletes.cs,CanDeleteAtRoot,The following statement contains a magic number: i < 1000
Magic Number,Voron.Tests.Trees,Deletes,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\Deletes.cs,CanDeleteAtRoot,The following statement contains a magic number: i < 1000
Magic Number,Voron.Tests.Trees,Deletes,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\Deletes.cs,CanDeleteAtRoot,The following statement contains a magic number: i < 15
Magic Number,Voron.Tests.Trees,FreeSpaceTest,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\FreeSpaceTest.cs,WillBeReused,The following statement contains a magic number: var buffer = new byte[512];
Magic Number,Voron.Tests.Trees,FreeSpaceTest,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\FreeSpaceTest.cs,WillBeReused,The following statement contains a magic number: i < 25
Magic Number,Voron.Tests.Trees,FreeSpaceTest,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\FreeSpaceTest.cs,WillBeReused,The following statement contains a magic number: i < 25
Magic Number,Voron.Tests.Trees,FreeSpaceTest,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\FreeSpaceTest.cs,WillBeReused,The following statement contains a magic number: i < 25
Magic Number,Voron.Tests.Trees,FreeSpaceTest,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\FreeSpaceTest.cs,WillBeReused,The following statement contains a magic number: Assert.True(Env.NextPageNumber - old < 2' "This test will not pass until we finish merging the free space branch");
Magic Number,Voron.Tests.Trees,Iteration,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\Iteration.cs,CanIterateInOrder,The following statement contains a magic number: var buffer = new byte[512];
Magic Number,Voron.Tests.Trees,Iteration,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\Iteration.cs,CanIterateInOrder,The following statement contains a magic number: i < 25
Magic Number,Voron.Tests.Trees,Iteration,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\Iteration.cs,CanIterateInOrder,The following statement contains a magic number: i < 24
Magic Number,Voron.Tests.Trees,Iteration,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\Iteration.cs,CanIterateInOrder,The following statement contains a magic number: Assert.Equal(24.ToString("0000")' slice);
Magic Number,Voron.Tests.Trees,Rebalance,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\Rebalance.cs,CanMergeRight,The following statement contains a magic number: tx.State.Root.Add(tx' "1"' new MemoryStream(new byte[1472]));
Magic Number,Voron.Tests.Trees,Rebalance,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\Rebalance.cs,CanMergeRight,The following statement contains a magic number: tx.State.Root.Add(tx' "2"' new MemoryStream(new byte[992]));
Magic Number,Voron.Tests.Trees,Rebalance,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\Rebalance.cs,CanMergeRight,The following statement contains a magic number: tx.State.Root.Add(tx' "3"' new MemoryStream(new byte[1632]));
Magic Number,Voron.Tests.Trees,Rebalance,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\Rebalance.cs,CanMergeRight,The following statement contains a magic number: tx.State.Root.Add(tx' "4"' new MemoryStream(new byte[632]));
Magic Number,Voron.Tests.Trees,Rebalance,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\Rebalance.cs,CanMergeRight,The following statement contains a magic number: tx.State.Root.Add(tx' "5"' new MemoryStream(new byte[824]));
Magic Number,Voron.Tests.Trees,Rebalance,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\Rebalance.cs,CanMergeRight,The following statement contains a magic number: tx.State.Root.Add(tx' "6"' new MemoryStream(new byte[1096]));
Magic Number,Voron.Tests.Trees,Rebalance,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\Rebalance.cs,CanMergeLeft,The following statement contains a magic number: tx.State.Root.Add(tx' "1"' new MemoryStream(new byte[1524]));
Magic Number,Voron.Tests.Trees,Rebalance,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\Rebalance.cs,CanMergeLeft,The following statement contains a magic number: tx.State.Root.Add(tx' "2"' new MemoryStream(new byte[1524]));
Magic Number,Voron.Tests.Trees,Rebalance,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\Rebalance.cs,CanMergeLeft,The following statement contains a magic number: tx.State.Root.Add(tx' "3"' new MemoryStream(new byte[1024]));
Magic Number,Voron.Tests.Trees,Rebalance,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\Rebalance.cs,CanMergeLeft,The following statement contains a magic number: tx.State.Root.Add(tx' "4"' new MemoryStream(new byte[64]));
Magic Number,Voron.Tests.Trees,Rebalance,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\Rebalance.cs,StressTest,The following statement contains a magic number: tx.State.Root.Add(tx' string.Format("{0}1"' i)' new MemoryStream(new byte[1472]));
Magic Number,Voron.Tests.Trees,Rebalance,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\Rebalance.cs,StressTest,The following statement contains a magic number: tx.State.Root.Add(tx' string.Format("{0}2"' i)' new MemoryStream(new byte[992]));
Magic Number,Voron.Tests.Trees,Rebalance,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\Rebalance.cs,StressTest,The following statement contains a magic number: tx.State.Root.Add(tx' string.Format("{0}3"' i)' new MemoryStream(new byte[1632]));
Magic Number,Voron.Tests.Trees,Rebalance,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\Rebalance.cs,StressTest,The following statement contains a magic number: tx.State.Root.Add(tx' string.Format("{0}4"' i)' new MemoryStream(new byte[632]));
Magic Number,Voron.Tests.Trees,Rebalance,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\Rebalance.cs,StressTest,The following statement contains a magic number: tx.State.Root.Add(tx' string.Format("{0}5"' i)' new MemoryStream(new byte[824]));
Magic Number,Voron.Tests.Trees,Rebalance,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\Rebalance.cs,StressTest,The following statement contains a magic number: tx.State.Root.Add(tx' string.Format("{0}6"' i)' new MemoryStream(new byte[1096]));
Magic Number,Voron.Tests.Trees,Rebalance,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\Rebalance.cs,StressTest,The following statement contains a magic number: tx.State.Root.Add(tx' string.Format("{0}7"' i)' new MemoryStream(new byte[2048]));
Magic Number,Voron.Tests.Trees,Rebalance,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\Rebalance.cs,StressTest,The following statement contains a magic number: tx.State.Root.Add(tx' string.Format("{0}8"' i)' new MemoryStream(new byte[1228]));
Magic Number,Voron.Tests.Trees,Rebalance,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\Rebalance.cs,StressTest,The following statement contains a magic number: tx.State.Root.Add(tx' string.Format("{0}9"' i)' new MemoryStream(new byte[8192]));
Magic Number,Voron.Tests.Trees,Rebalance,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\Rebalance.cs,StressTest,The following statement contains a magic number: i < 80
Magic Number,Voron.Tests.Trees,Updates,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\Updates.cs,CanUpdateVeryLargeValueAndThenDeleteIt,The following statement contains a magic number: var buffer = new byte[8192];
Magic Number,Voron.Tests.Trees,Updates,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\Updates.cs,CanUpdateVeryLargeValueAndThenDeleteIt,The following statement contains a magic number: Assert.Equal(4' tx.State.Root.State.PageCount);
Magic Number,Voron.Tests.Trees,Updates,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\Updates.cs,CanUpdateVeryLargeValueAndThenDeleteIt,The following statement contains a magic number: Assert.Equal(3' tx.State.Root.State.OverflowPages);
Magic Number,Voron.Tests.Trees,Updates,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\Updates.cs,CanUpdateVeryLargeValueAndThenDeleteIt,The following statement contains a magic number: buffer = new byte[8192 * 2];
Magic Number,Voron.Tests.Trees,Updates,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\Updates.cs,CanUpdateVeryLargeValueAndThenDeleteIt,The following statement contains a magic number: buffer = new byte[8192 * 2];
Magic Number,Voron.Tests.Trees,Updates,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\Updates.cs,CanUpdateVeryLargeValueAndThenDeleteIt,The following statement contains a magic number: Assert.Equal(6' tx.State.Root.State.PageCount);
Magic Number,Voron.Tests.Trees,Updates,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Trees\Updates.cs,CanUpdateVeryLargeValueAndThenDeleteIt,The following statement contains a magic number: Assert.Equal(5' tx.State.Root.State.OverflowPages);
Magic Number,Voron.Tests.Util,StandardResults,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\CrcTests.cs,Zeros,The following statement contains a magic number: var data = new byte[32];
Magic Number,Voron.Tests.Util,StandardResults,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\CrcTests.cs,Zeros,The following statement contains a magic number: var crc = Crc.Value(dataPtr' 0' 32);
Magic Number,Voron.Tests.Util,StandardResults,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\CrcTests.cs,MaxByteValues,The following statement contains a magic number: var data = new byte[32];
Magic Number,Voron.Tests.Util,StandardResults,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\CrcTests.cs,MaxByteValues,The following statement contains a magic number: i < 32
Magic Number,Voron.Tests.Util,StandardResults,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\CrcTests.cs,MaxByteValues,The following statement contains a magic number: var crc = Crc.Value(dataPtr' 0' 32);
Magic Number,Voron.Tests.Util,StandardResults,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\CrcTests.cs,SequentialNumbers,The following statement contains a magic number: var data = new byte[32];
Magic Number,Voron.Tests.Util,StandardResults,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\CrcTests.cs,SequentialNumbers,The following statement contains a magic number: i < 32
Magic Number,Voron.Tests.Util,StandardResults,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\CrcTests.cs,SequentialNumbers,The following statement contains a magic number: var crc = Crc.Value(dataPtr' 0' 32);
Magic Number,Voron.Tests.Util,StandardResults,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\CrcTests.cs,SequentialNumbers_Reversed,The following statement contains a magic number: var data = new byte[32];
Magic Number,Voron.Tests.Util,StandardResults,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\CrcTests.cs,SequentialNumbers_Reversed,The following statement contains a magic number: data[i] = (byte)(31 - i);
Magic Number,Voron.Tests.Util,StandardResults,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\CrcTests.cs,SequentialNumbers_Reversed,The following statement contains a magic number: i < 32
Magic Number,Voron.Tests.Util,StandardResults,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\CrcTests.cs,SequentialNumbers_Reversed,The following statement contains a magic number: var crc = Crc.Value(dataPtr' 0' 32);
Magic Number,Voron.Tests.Util,StandardResults,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\CrcTests.cs,DefinedData,The following statement contains a magic number: var data = new byte[48]  					{  						0x01' 0xc0' 0x00' 0x00'  						0x00' 0x00' 0x00' 0x00'  						0x00' 0x00' 0x00' 0x00'  						0x00' 0x00' 0x00' 0x00'  						0x14' 0x00' 0x00' 0x00'  						0x00' 0x00' 0x04' 0x00'  						0x00' 0x00' 0x00' 0x14'  						0x00' 0x00' 0x00' 0x18'  						0x28' 0x00' 0x00' 0x00'  						0x00' 0x00' 0x00' 0x00'  						0x02' 0x00' 0x00' 0x00'  						0x00' 0x00' 0x00' 0x00'  					};
Magic Number,Voron.Tests.Util,StandardResults,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\CrcTests.cs,DefinedData,The following statement contains a magic number: var crc = Crc.Value(dataPtr' 0' 48);
Magic Number,Voron.Tests.Util,ImmutableAppendOnlyTests,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\ImmutableAppendOnlyTests.cs,CanAddAndRemove,The following statement contains a magic number: var list = ImmutableAppendOnlyList<long>.Empty  				.Append(1)  				.Append(2);
Magic Number,Voron.Tests.Util,UnmanagedVectorMemoryStreamTests,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\UnmanagedVectorMemoryStreamTests.cs,Read_should_work_correctly,The following statement contains a magic number: var arr1 = new byte[25];
Magic Number,Voron.Tests.Util,UnmanagedVectorMemoryStreamTests,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\UnmanagedVectorMemoryStreamTests.cs,Read_should_work_correctly,The following statement contains a magic number: var arr2 = new byte[25];
Magic Number,Voron.Tests.Util,UnmanagedVectorMemoryStreamTests,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\UnmanagedVectorMemoryStreamTests.cs,Read_should_work_correctly,The following statement contains a magic number: var arr3 = new byte[25];
Magic Number,Voron.Tests.Util,UnmanagedVectorMemoryStreamTests,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\UnmanagedVectorMemoryStreamTests.cs,Read_should_work_correctly,The following statement contains a magic number: fixed (byte* parr2 = arr2)  			fixed (byte* parr3 = arr3)  			{  				var array = new[] {parr1' parr2' parr3};  				  				var stream = new UnmanagedVectorMemoryStream(array' 1' 25);  				var expectedReadOutut = new byte[50];				  				fixed (byte* pExpectedReadOutut = expectedReadOutut)  				{  					NativeMethods.memcpy(pExpectedReadOutut' parr2' 25);  					NativeMethods.memcpy(pExpectedReadOutut + 25' parr3' 25);  				}    				var readOutput = new byte[50];  				var debugReadOutput = stream.DebugReadAllData(25);  				stream.Read(readOutput' 0' 50);    				Assert.Equal(debugReadOutput' readOutput);  				Assert.Equal(expectedReadOutut' debugReadOutput);  				Assert.Equal(expectedReadOutut' readOutput);  			}
Magic Number,Voron.Tests.Util,UnmanagedVectorMemoryStreamTests,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\UnmanagedVectorMemoryStreamTests.cs,Read_should_work_correctly,The following statement contains a magic number: fixed (byte* parr2 = arr2)  			fixed (byte* parr3 = arr3)  			{  				var array = new[] {parr1' parr2' parr3};  				  				var stream = new UnmanagedVectorMemoryStream(array' 1' 25);  				var expectedReadOutut = new byte[50];				  				fixed (byte* pExpectedReadOutut = expectedReadOutut)  				{  					NativeMethods.memcpy(pExpectedReadOutut' parr2' 25);  					NativeMethods.memcpy(pExpectedReadOutut + 25' parr3' 25);  				}    				var readOutput = new byte[50];  				var debugReadOutput = stream.DebugReadAllData(25);  				stream.Read(readOutput' 0' 50);    				Assert.Equal(debugReadOutput' readOutput);  				Assert.Equal(expectedReadOutut' debugReadOutput);  				Assert.Equal(expectedReadOutut' readOutput);  			}
Magic Number,Voron.Tests.Util,UnmanagedVectorMemoryStreamTests,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\UnmanagedVectorMemoryStreamTests.cs,Read_should_work_correctly,The following statement contains a magic number: fixed (byte* parr2 = arr2)  			fixed (byte* parr3 = arr3)  			{  				var array = new[] {parr1' parr2' parr3};  				  				var stream = new UnmanagedVectorMemoryStream(array' 1' 25);  				var expectedReadOutut = new byte[50];				  				fixed (byte* pExpectedReadOutut = expectedReadOutut)  				{  					NativeMethods.memcpy(pExpectedReadOutut' parr2' 25);  					NativeMethods.memcpy(pExpectedReadOutut + 25' parr3' 25);  				}    				var readOutput = new byte[50];  				var debugReadOutput = stream.DebugReadAllData(25);  				stream.Read(readOutput' 0' 50);    				Assert.Equal(debugReadOutput' readOutput);  				Assert.Equal(expectedReadOutut' debugReadOutput);  				Assert.Equal(expectedReadOutut' readOutput);  			}
Magic Number,Voron.Tests.Util,UnmanagedVectorMemoryStreamTests,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\UnmanagedVectorMemoryStreamTests.cs,Read_should_work_correctly,The following statement contains a magic number: fixed (byte* parr2 = arr2)  			fixed (byte* parr3 = arr3)  			{  				var array = new[] {parr1' parr2' parr3};  				  				var stream = new UnmanagedVectorMemoryStream(array' 1' 25);  				var expectedReadOutut = new byte[50];				  				fixed (byte* pExpectedReadOutut = expectedReadOutut)  				{  					NativeMethods.memcpy(pExpectedReadOutut' parr2' 25);  					NativeMethods.memcpy(pExpectedReadOutut + 25' parr3' 25);  				}    				var readOutput = new byte[50];  				var debugReadOutput = stream.DebugReadAllData(25);  				stream.Read(readOutput' 0' 50);    				Assert.Equal(debugReadOutput' readOutput);  				Assert.Equal(expectedReadOutut' debugReadOutput);  				Assert.Equal(expectedReadOutut' readOutput);  			}
Magic Number,Voron.Tests.Util,UnmanagedVectorMemoryStreamTests,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\UnmanagedVectorMemoryStreamTests.cs,Read_should_work_correctly,The following statement contains a magic number: fixed (byte* parr2 = arr2)  			fixed (byte* parr3 = arr3)  			{  				var array = new[] {parr1' parr2' parr3};  				  				var stream = new UnmanagedVectorMemoryStream(array' 1' 25);  				var expectedReadOutut = new byte[50];				  				fixed (byte* pExpectedReadOutut = expectedReadOutut)  				{  					NativeMethods.memcpy(pExpectedReadOutut' parr2' 25);  					NativeMethods.memcpy(pExpectedReadOutut + 25' parr3' 25);  				}    				var readOutput = new byte[50];  				var debugReadOutput = stream.DebugReadAllData(25);  				stream.Read(readOutput' 0' 50);    				Assert.Equal(debugReadOutput' readOutput);  				Assert.Equal(expectedReadOutut' debugReadOutput);  				Assert.Equal(expectedReadOutut' readOutput);  			}
Magic Number,Voron.Tests.Util,UnmanagedVectorMemoryStreamTests,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\UnmanagedVectorMemoryStreamTests.cs,Read_should_work_correctly,The following statement contains a magic number: fixed (byte* parr2 = arr2)  			fixed (byte* parr3 = arr3)  			{  				var array = new[] {parr1' parr2' parr3};  				  				var stream = new UnmanagedVectorMemoryStream(array' 1' 25);  				var expectedReadOutut = new byte[50];				  				fixed (byte* pExpectedReadOutut = expectedReadOutut)  				{  					NativeMethods.memcpy(pExpectedReadOutut' parr2' 25);  					NativeMethods.memcpy(pExpectedReadOutut + 25' parr3' 25);  				}    				var readOutput = new byte[50];  				var debugReadOutput = stream.DebugReadAllData(25);  				stream.Read(readOutput' 0' 50);    				Assert.Equal(debugReadOutput' readOutput);  				Assert.Equal(expectedReadOutut' debugReadOutput);  				Assert.Equal(expectedReadOutut' readOutput);  			}
Magic Number,Voron.Tests.Util,UnmanagedVectorMemoryStreamTests,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\UnmanagedVectorMemoryStreamTests.cs,Read_should_work_correctly,The following statement contains a magic number: fixed (byte* parr2 = arr2)  			fixed (byte* parr3 = arr3)  			{  				var array = new[] {parr1' parr2' parr3};  				  				var stream = new UnmanagedVectorMemoryStream(array' 1' 25);  				var expectedReadOutut = new byte[50];				  				fixed (byte* pExpectedReadOutut = expectedReadOutut)  				{  					NativeMethods.memcpy(pExpectedReadOutut' parr2' 25);  					NativeMethods.memcpy(pExpectedReadOutut + 25' parr3' 25);  				}    				var readOutput = new byte[50];  				var debugReadOutput = stream.DebugReadAllData(25);  				stream.Read(readOutput' 0' 50);    				Assert.Equal(debugReadOutput' readOutput);  				Assert.Equal(expectedReadOutut' debugReadOutput);  				Assert.Equal(expectedReadOutut' readOutput);  			}
Magic Number,Voron.Tests.Util,UnmanagedVectorMemoryStreamTests,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\UnmanagedVectorMemoryStreamTests.cs,Read_should_work_correctly,The following statement contains a magic number: fixed (byte* parr2 = arr2)  			fixed (byte* parr3 = arr3)  			{  				var array = new[] {parr1' parr2' parr3};  				  				var stream = new UnmanagedVectorMemoryStream(array' 1' 25);  				var expectedReadOutut = new byte[50];				  				fixed (byte* pExpectedReadOutut = expectedReadOutut)  				{  					NativeMethods.memcpy(pExpectedReadOutut' parr2' 25);  					NativeMethods.memcpy(pExpectedReadOutut + 25' parr3' 25);  				}    				var readOutput = new byte[50];  				var debugReadOutput = stream.DebugReadAllData(25);  				stream.Read(readOutput' 0' 50);    				Assert.Equal(debugReadOutput' readOutput);  				Assert.Equal(expectedReadOutut' debugReadOutput);  				Assert.Equal(expectedReadOutut' readOutput);  			}
Magic Number,Voron.Tests.Util,UnmanagedVectorMemoryStreamTests,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\UnmanagedVectorMemoryStreamTests.cs,TestReadFromMultiplePages_OffsetFromBegin,The following statement contains a magic number: var obj1 = new Dummy { Number1 = 123' Number2 = 456 };
Magic Number,Voron.Tests.Util,UnmanagedVectorMemoryStreamTests,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\UnmanagedVectorMemoryStreamTests.cs,TestReadFromMultiplePages_OffsetFromBegin,The following statement contains a magic number: var obj1 = new Dummy { Number1 = 123' Number2 = 456 };
Magic Number,Voron.Tests.Util,UnmanagedVectorMemoryStreamTests,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\UnmanagedVectorMemoryStreamTests.cs,TestReadFromMultiplePages_OffsetFromBegin,The following statement contains a magic number: var obj2 = new Dummy { Number1 = 789' Number2 = 123 };
Magic Number,Voron.Tests.Util,UnmanagedVectorMemoryStreamTests,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\UnmanagedVectorMemoryStreamTests.cs,TestReadFromMultiplePages_OffsetFromBegin,The following statement contains a magic number: var obj2 = new Dummy { Number1 = 789' Number2 = 123 };
Magic Number,Voron.Tests.Util,UnmanagedVectorMemoryStreamTests,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\UnmanagedVectorMemoryStreamTests.cs,TestReadFromMultiplePages_OffsetFromBegin,The following statement contains a magic number: var obj3 = new Dummy { Number1 = 901' Number2 = 234 };
Magic Number,Voron.Tests.Util,UnmanagedVectorMemoryStreamTests,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\UnmanagedVectorMemoryStreamTests.cs,TestReadFromMultiplePages_OffsetFromBegin,The following statement contains a magic number: var obj3 = new Dummy { Number1 = 901' Number2 = 234 };
Magic Number,Voron.Tests.Util,UnmanagedVectorMemoryStreamTests,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\UnmanagedVectorMemoryStreamTests.cs,TestReadFromMultiplePages_OffsetFromBegin,The following statement contains a magic number: var data = new byte*[3];
Magic Number,Voron.Tests.Util,UnmanagedVectorMemoryStreamTests,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\UnmanagedVectorMemoryStreamTests.cs,TestReadFromMultiplePages_OffsetFromBegin,The following statement contains a magic number: data[2] = (byte*)&obj3;
Magic Number,Voron.Tests.Util,UnmanagedVectorMemoryStreamTests,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\UnmanagedVectorMemoryStreamTests.cs,TestReadFromMultiplePages_OffsetFromBegin,The following statement contains a magic number: dataBufferPtr = Marshal.AllocHGlobal((dummySize * 3) - offset);
Magic Number,Voron.Tests.Util,UnmanagedVectorMemoryStreamTests,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\UnmanagedVectorMemoryStreamTests.cs,TestReadFromMultiplePages_OffsetFromBegin,The following statement contains a magic number: NativeMethods.memcpy(dataBuffer + (dummySize * 2) - offset' data[2]' dummySize);
Magic Number,Voron.Tests.Util,UnmanagedVectorMemoryStreamTests,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\UnmanagedVectorMemoryStreamTests.cs,TestReadFromMultiplePages_OffsetFromBegin,The following statement contains a magic number: NativeMethods.memcpy(dataBuffer + (dummySize * 2) - offset' data[2]' dummySize);
Magic Number,Voron.Tests.Util,UnmanagedVectorMemoryStreamTests,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\UnmanagedVectorMemoryStreamTests.cs,TestReadFromMultiplePages_OffsetFromBegin,The following statement contains a magic number: var readData = new byte[(dummySize * 3) - offset];
Magic Number,Voron.Tests.Util,UnmanagedVectorMemoryStreamTests,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\UnmanagedVectorMemoryStreamTests.cs,TestReadFromMultiplePages_OffsetFromBegin,The following statement contains a magic number: stream.Read(readData' 0' (dummySize * 3) - offset);
Magic Number,Voron.Tests.Util,UnmanagedVectorMemoryStreamTests,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\UnmanagedVectorMemoryStreamTests.cs,TestReadFromMultiplePages_OffsetFromBegin,The following statement contains a magic number: var fetchedObj3Ptr = (Dummy*)(readDataPtr + ((dummySize * 2) - offset));
Magic Number,Voron.Tests.Util,UnmanagedVectorMemoryStreamTests,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\UnmanagedVectorMemoryStreamTests.cs,TestReadFromMultiplePages,The following statement contains a magic number: var obj1 = new Dummy { Number1 = 123' Number2 = 456 };
Magic Number,Voron.Tests.Util,UnmanagedVectorMemoryStreamTests,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\UnmanagedVectorMemoryStreamTests.cs,TestReadFromMultiplePages,The following statement contains a magic number: var obj1 = new Dummy { Number1 = 123' Number2 = 456 };
Magic Number,Voron.Tests.Util,UnmanagedVectorMemoryStreamTests,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\UnmanagedVectorMemoryStreamTests.cs,TestReadFromMultiplePages,The following statement contains a magic number: var obj2 = new Dummy { Number1 = 789' Number2 = 123 };
Magic Number,Voron.Tests.Util,UnmanagedVectorMemoryStreamTests,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\UnmanagedVectorMemoryStreamTests.cs,TestReadFromMultiplePages,The following statement contains a magic number: var obj2 = new Dummy { Number1 = 789' Number2 = 123 };
Magic Number,Voron.Tests.Util,UnmanagedVectorMemoryStreamTests,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\UnmanagedVectorMemoryStreamTests.cs,TestReadFromMultiplePages,The following statement contains a magic number: var obj3 = new Dummy { Number1 = 901' Number2 = 234 };
Magic Number,Voron.Tests.Util,UnmanagedVectorMemoryStreamTests,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\UnmanagedVectorMemoryStreamTests.cs,TestReadFromMultiplePages,The following statement contains a magic number: var obj3 = new Dummy { Number1 = 901' Number2 = 234 };
Magic Number,Voron.Tests.Util,UnmanagedVectorMemoryStreamTests,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\UnmanagedVectorMemoryStreamTests.cs,TestReadFromMultiplePages,The following statement contains a magic number: var data = new byte*[3];
Magic Number,Voron.Tests.Util,UnmanagedVectorMemoryStreamTests,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\UnmanagedVectorMemoryStreamTests.cs,TestReadFromMultiplePages,The following statement contains a magic number: data[2] = (byte*)ptrObj3;
Magic Number,Voron.Tests.Util,UnmanagedVectorMemoryStreamTests,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\UnmanagedVectorMemoryStreamTests.cs,TestReadFromMultiplePages,The following statement contains a magic number: dataBufferPtr = Marshal.AllocHGlobal(dummySize*3 + 1);
Magic Number,Voron.Tests.Util,UnmanagedVectorMemoryStreamTests,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\UnmanagedVectorMemoryStreamTests.cs,TestReadFromMultiplePages,The following statement contains a magic number: NativeMethods.memcpy(dataBuffer + (dummySize*2)' data[2]' dummySize);
Magic Number,Voron.Tests.Util,UnmanagedVectorMemoryStreamTests,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\UnmanagedVectorMemoryStreamTests.cs,TestReadFromMultiplePages,The following statement contains a magic number: NativeMethods.memcpy(dataBuffer + (dummySize*2)' data[2]' dummySize);
Magic Number,Voron.Tests.Util,UnmanagedVectorMemoryStreamTests,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\UnmanagedVectorMemoryStreamTests.cs,TestReadFromMultiplePages,The following statement contains a magic number: var readData = new byte[dummySize*3];
Magic Number,Voron.Tests.Util,UnmanagedVectorMemoryStreamTests,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\UnmanagedVectorMemoryStreamTests.cs,TestReadFromMultiplePages,The following statement contains a magic number: stream.Read(readData' 0' dummySize*3);
Magic Number,Voron.Tests.Util,UnmanagedVectorMemoryStreamTests,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\UnmanagedVectorMemoryStreamTests.cs,TestReadFromMultiplePages,The following statement contains a magic number: fixed (byte* readDataPtr = readData)  						{  //						Assert.Equal(0' NativeMethods.memcmp(dataBuffer' readDataPtr' dummySize * 3));  							var fetchedObj1Ptr = (Dummy*) readDataPtr;  							Assert.Equal(obj1.Number1' fetchedObj1Ptr->Number1);  							Assert.Equal(obj1.Number2' fetchedObj1Ptr->Number2);    							var fetchedObj2Ptr = (Dummy*) (readDataPtr + dummySize);  							Assert.Equal(obj2.Number1' fetchedObj2Ptr->Number1);  							Assert.Equal(obj2.Number2' fetchedObj2Ptr->Number2);    							var fetchedObj3Ptr = (Dummy*) (readDataPtr + (dummySize*2));  							Assert.Equal(obj3.Number1' fetchedObj3Ptr->Number1);  							Assert.Equal(obj3.Number2' fetchedObj3Ptr->Number2);  						}
Magic Number,Voron.Tests.Util,UnmanagedVectorMemoryStreamTests,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\UnmanagedVectorMemoryStreamTests.cs,TestReadFromSinglePage_FullCopy,The following statement contains a magic number: var obj = new Dummy {Number1 = 123' Number2 = 456};
Magic Number,Voron.Tests.Util,UnmanagedVectorMemoryStreamTests,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\UnmanagedVectorMemoryStreamTests.cs,TestReadFromSinglePage_FullCopy,The following statement contains a magic number: var obj = new Dummy {Number1 = 123' Number2 = 456};
Magic Number,Voron.Tests.Util,UnmanagedVectorMemoryStreamTests,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\UnmanagedVectorMemoryStreamTests.cs,TestReadFromSinglePage_PartialCopy,The following statement contains a magic number: var obj = new Dummy { Number1 = 123' Number2 = 456 };
Magic Number,Voron.Tests.Util,UnmanagedVectorMemoryStreamTests,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\UnmanagedVectorMemoryStreamTests.cs,TestReadFromSinglePage_PartialCopy,The following statement contains a magic number: var obj = new Dummy { Number1 = 123' Number2 = 456 };
Magic Number,Voron.Tests.Util,UnmanagedVectorMemoryStreamTests,D:\research\architectureSmells\repos\ayende_raven.voron\Voron.Tests\Util\UnmanagedVectorMemoryStreamTests.cs,TestReadFromSinglePage_PartialCopy,The following statement contains a magic number: var offset = dummySize / 3;
