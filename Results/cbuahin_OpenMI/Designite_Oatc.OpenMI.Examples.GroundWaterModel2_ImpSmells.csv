Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Oatc.OpenMI.Examples.SimpleGroundModel2,Engine,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Examples\SimpleGroundWaterModel2\Engine.cs,Engine,The method has 5 parameters.
Long Parameter List,Oatc.OpenMI.Examples.SimpleGroundModel2,AquiferLevel,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Examples\SimpleGroundWaterModel2\ExchangeItems.cs,AquiferLevel,The method has 5 parameters.
Long Parameter List,Oatc.OpenMI.Examples.SimpleGroundModel2,Inflow,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Examples\SimpleGroundWaterModel2\ExchangeItems.cs,Inflow,The method has 5 parameters.
Long Parameter List,Oatc.OpenMI.Examples.SimpleGroundModel2,AquiferStorage,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Examples\SimpleGroundWaterModel2\ExchangeItems.cs,AquiferStorage,The method has 5 parameters.
Long Parameter List,Oatc.OpenMI.Examples.SimpleGroundModel2,GridInfo,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Examples\SimpleGroundWaterModel2\GridInfo.cs,GridInfo,The method has 6 parameters.
Long Statement,Oatc.OpenMI.Examples.SimpleGroundModel2,Engine,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Examples\SimpleGroundWaterModel2\Engine.cs,WriteOutput,The length of the statement  "		sw.WriteLine (string.Format ("Current Time: {0} {1}"' _currentTime.ToLongDateString ()' _currentTime.ToLongTimeString ())); " is 123.
Long Statement,Oatc.OpenMI.Examples.SimpleGroundModel2,Grid,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Examples\SimpleGroundWaterModel2\Grid.cs,GetElementId,The length of the statement  "	return (new Identifier (_gridInfo.CellCenterXCoords [elementIndex].ToString () + "_" + _gridInfo.CellCenterYCoords [elementIndex].ToString ())); " is 144.
Long Statement,Oatc.OpenMI.Examples.SimpleGroundModel2,Grid,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Examples\SimpleGroundWaterModel2\Grid.cs,GetElementIndex,The length of the statement  "		if ((Math.Abs (_gridInfo.CellCenterXCoords [iref] - x) < double.Epsilon) && (Math.Abs (_gridInfo.CellCenterYCoords [iref] - y) < double.Epsilon)) { " is 147.
Long Statement,Oatc.OpenMI.Examples.SimpleGroundModel2,LinkableComponent,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Examples\SimpleGroundWaterModel2\LinkableComponent.cs,EngineInitialize,The length of the statement  "	_gridInfo = new GridInfo ((double)base.GetArgumentValueFirstCaptionMatch (OmiArguments.OriginX.ToString ())' (double)base.GetArgumentValueFirstCaptionMatch (OmiArguments.OriginY.ToString ())' (double)base.GetArgumentValueFirstCaptionMatch (OmiArguments.CellSize.ToString ())' (int)base.GetArgumentValueFirstCaptionMatch (OmiArguments.NX.ToString ())' (int)base.GetArgumentValueFirstCaptionMatch (OmiArguments.NY.ToString ())' (double)base.GetArgumentValueFirstCaptionMatch (OmiArguments.GridAngle.ToString ())); " is 511.
Long Statement,Oatc.OpenMI.Examples.SimpleGroundModel2,LinkableComponent,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Examples\SimpleGroundWaterModel2\LinkableComponent.cs,EngineInitialize,The length of the statement  "	Targets.Add (new Inflow ((Targets.Count + Sources.Count).ToString ()' zeros' timeTolerance' new Grid (_gridInfo)' this)); " is 121.
Long Statement,Oatc.OpenMI.Examples.SimpleGroundModel2,LinkableComponent,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Examples\SimpleGroundWaterModel2\LinkableComponent.cs,EngineInitialize,The length of the statement  "	Sources.Add (new AquiferLevel ((Targets.Count + Sources.Count).ToString ()' zeros' relaxation' new Grid (_gridInfo)' this)); " is 124.
Long Statement,Oatc.OpenMI.Examples.SimpleGroundModel2,LinkableComponent,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Examples\SimpleGroundWaterModel2\LinkableComponent.cs,EngineInitialize,The length of the statement  "	Sources.Add (new AquiferStorage ((Targets.Count + Sources.Count).ToString ()' zeros' relaxation' new Grid (_gridInfo)' this)); " is 126.
Magic Number,Oatc.OpenMI.Examples.SimpleGroundModel2,AquiferStorage,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Examples\SimpleGroundWaterModel2\ExchangeItems.cs,AquiferStorage,The following statement contains a magic number: dimension.SetPower (DimensionBase.Length' 3);  
Magic Number,Oatc.OpenMI.Examples.SimpleGroundModel2,Grid,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Examples\SimpleGroundWaterModel2\Grid.cs,GetVertexXCoordinate,The following statement contains a magic number: if (_gridInfo.GridAngle > 0) {  	double x0 = this._gridInfo.CellCenterXCoords [0] - this._gridInfo.CellSize * 0.5;  	double y0 = this._gridInfo.CellCenterYCoords [0] - this._gridInfo.CellSize * 0.5;  	double y = GetNonRotatedYCoordinate (elementIndex' vertexIndex);  	double alpha;  	if ((x - x0) == 0) {  		alpha = Math.PI / 2.0;  	}  	else {  		alpha = Math.Atan ((y - y0) / (x - x0));  	}  	x = Math.Sqrt ((x - x0) * (x - x0) + (y - y0) * (y - y0)) * Math.Cos (angle + alpha) + x0;  }  
Magic Number,Oatc.OpenMI.Examples.SimpleGroundModel2,Grid,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Examples\SimpleGroundWaterModel2\Grid.cs,GetVertexXCoordinate,The following statement contains a magic number: if (_gridInfo.GridAngle > 0) {  	double x0 = this._gridInfo.CellCenterXCoords [0] - this._gridInfo.CellSize * 0.5;  	double y0 = this._gridInfo.CellCenterYCoords [0] - this._gridInfo.CellSize * 0.5;  	double y = GetNonRotatedYCoordinate (elementIndex' vertexIndex);  	double alpha;  	if ((x - x0) == 0) {  		alpha = Math.PI / 2.0;  	}  	else {  		alpha = Math.Atan ((y - y0) / (x - x0));  	}  	x = Math.Sqrt ((x - x0) * (x - x0) + (y - y0) * (y - y0)) * Math.Cos (angle + alpha) + x0;  }  
Magic Number,Oatc.OpenMI.Examples.SimpleGroundModel2,Grid,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Examples\SimpleGroundWaterModel2\Grid.cs,GetVertexXCoordinate,The following statement contains a magic number: if (_gridInfo.GridAngle > 0) {  	double x0 = this._gridInfo.CellCenterXCoords [0] - this._gridInfo.CellSize * 0.5;  	double y0 = this._gridInfo.CellCenterYCoords [0] - this._gridInfo.CellSize * 0.5;  	double y = GetNonRotatedYCoordinate (elementIndex' vertexIndex);  	double alpha;  	if ((x - x0) == 0) {  		alpha = Math.PI / 2.0;  	}  	else {  		alpha = Math.Atan ((y - y0) / (x - x0));  	}  	x = Math.Sqrt ((x - x0) * (x - x0) + (y - y0) * (y - y0)) * Math.Cos (angle + alpha) + x0;  }  
Magic Number,Oatc.OpenMI.Examples.SimpleGroundModel2,Grid,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Examples\SimpleGroundWaterModel2\Grid.cs,GetVertexXCoordinate,The following statement contains a magic number: if ((x - x0) == 0) {  	alpha = Math.PI / 2.0;  }  else {  	alpha = Math.Atan ((y - y0) / (x - x0));  }  
Magic Number,Oatc.OpenMI.Examples.SimpleGroundModel2,Grid,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Examples\SimpleGroundWaterModel2\Grid.cs,GetVertexXCoordinate,The following statement contains a magic number: alpha = Math.PI / 2.0;  
Magic Number,Oatc.OpenMI.Examples.SimpleGroundModel2,Grid,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Examples\SimpleGroundWaterModel2\Grid.cs,GetVertexYCoordinate,The following statement contains a magic number: if (_gridInfo.GridAngle > 0) {  	double y0 = this._gridInfo.CellCenterYCoords [0] - this._gridInfo.CellSize * 0.5;  	double x0 = this._gridInfo.CellCenterXCoords [0] - this._gridInfo.CellSize * 0.5;  	double x = GetNonRotatedXCoordinate (elementIndex' vertexIndex);  	double alpha;  	if ((x - x0) == 0) {  		alpha = Math.PI / 2.0;  	}  	else {  		alpha = Math.Atan ((y - y0) / (x - x0));  	}  	y = Math.Sqrt ((x - x0) * (x - x0) + (y - y0) * (y - y0)) * Math.Sin (angle + alpha) + y0;  }  
Magic Number,Oatc.OpenMI.Examples.SimpleGroundModel2,Grid,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Examples\SimpleGroundWaterModel2\Grid.cs,GetVertexYCoordinate,The following statement contains a magic number: if (_gridInfo.GridAngle > 0) {  	double y0 = this._gridInfo.CellCenterYCoords [0] - this._gridInfo.CellSize * 0.5;  	double x0 = this._gridInfo.CellCenterXCoords [0] - this._gridInfo.CellSize * 0.5;  	double x = GetNonRotatedXCoordinate (elementIndex' vertexIndex);  	double alpha;  	if ((x - x0) == 0) {  		alpha = Math.PI / 2.0;  	}  	else {  		alpha = Math.Atan ((y - y0) / (x - x0));  	}  	y = Math.Sqrt ((x - x0) * (x - x0) + (y - y0) * (y - y0)) * Math.Sin (angle + alpha) + y0;  }  
Magic Number,Oatc.OpenMI.Examples.SimpleGroundModel2,Grid,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Examples\SimpleGroundWaterModel2\Grid.cs,GetVertexYCoordinate,The following statement contains a magic number: if (_gridInfo.GridAngle > 0) {  	double y0 = this._gridInfo.CellCenterYCoords [0] - this._gridInfo.CellSize * 0.5;  	double x0 = this._gridInfo.CellCenterXCoords [0] - this._gridInfo.CellSize * 0.5;  	double x = GetNonRotatedXCoordinate (elementIndex' vertexIndex);  	double alpha;  	if ((x - x0) == 0) {  		alpha = Math.PI / 2.0;  	}  	else {  		alpha = Math.Atan ((y - y0) / (x - x0));  	}  	y = Math.Sqrt ((x - x0) * (x - x0) + (y - y0) * (y - y0)) * Math.Sin (angle + alpha) + y0;  }  
Magic Number,Oatc.OpenMI.Examples.SimpleGroundModel2,Grid,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Examples\SimpleGroundWaterModel2\Grid.cs,GetVertexYCoordinate,The following statement contains a magic number: if ((x - x0) == 0) {  	alpha = Math.PI / 2.0;  }  else {  	alpha = Math.Atan ((y - y0) / (x - x0));  }  
Magic Number,Oatc.OpenMI.Examples.SimpleGroundModel2,Grid,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Examples\SimpleGroundWaterModel2\Grid.cs,GetVertexYCoordinate,The following statement contains a magic number: alpha = Math.PI / 2.0;  
Magic Number,Oatc.OpenMI.Examples.SimpleGroundModel2,Grid,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Examples\SimpleGroundWaterModel2\Grid.cs,GetVertexCount,The following statement contains a magic number: return 4;  
Magic Number,Oatc.OpenMI.Examples.SimpleGroundModel2,Grid,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Examples\SimpleGroundWaterModel2\Grid.cs,GetElementIndex,The following statement contains a magic number: return -999;  
Magic Number,Oatc.OpenMI.Examples.SimpleGroundModel2,Grid,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Examples\SimpleGroundWaterModel2\Grid.cs,GetNonRotatedXCoordinate,The following statement contains a magic number: if (vertexIndex == 0 || vertexIndex == 3) {  	return (_gridInfo.CellCenterXCoords [elementIndex] - _gridInfo.CellSize / 2);  }  else if (vertexIndex == 1 || vertexIndex == 2) {  	return (_gridInfo.CellCenterXCoords [elementIndex] + _gridInfo.CellSize / 2);  }  else {  	throw new System.Exception ("Vertex index outside range [0;4]. Vertex index was:" + vertexIndex.ToString ());  }  
Magic Number,Oatc.OpenMI.Examples.SimpleGroundModel2,Grid,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Examples\SimpleGroundWaterModel2\Grid.cs,GetNonRotatedXCoordinate,The following statement contains a magic number: if (vertexIndex == 0 || vertexIndex == 3) {  	return (_gridInfo.CellCenterXCoords [elementIndex] - _gridInfo.CellSize / 2);  }  else if (vertexIndex == 1 || vertexIndex == 2) {  	return (_gridInfo.CellCenterXCoords [elementIndex] + _gridInfo.CellSize / 2);  }  else {  	throw new System.Exception ("Vertex index outside range [0;4]. Vertex index was:" + vertexIndex.ToString ());  }  
Magic Number,Oatc.OpenMI.Examples.SimpleGroundModel2,Grid,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Examples\SimpleGroundWaterModel2\Grid.cs,GetNonRotatedXCoordinate,The following statement contains a magic number: if (vertexIndex == 0 || vertexIndex == 3) {  	return (_gridInfo.CellCenterXCoords [elementIndex] - _gridInfo.CellSize / 2);  }  else if (vertexIndex == 1 || vertexIndex == 2) {  	return (_gridInfo.CellCenterXCoords [elementIndex] + _gridInfo.CellSize / 2);  }  else {  	throw new System.Exception ("Vertex index outside range [0;4]. Vertex index was:" + vertexIndex.ToString ());  }  
Magic Number,Oatc.OpenMI.Examples.SimpleGroundModel2,Grid,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Examples\SimpleGroundWaterModel2\Grid.cs,GetNonRotatedXCoordinate,The following statement contains a magic number: if (vertexIndex == 0 || vertexIndex == 3) {  	return (_gridInfo.CellCenterXCoords [elementIndex] - _gridInfo.CellSize / 2);  }  else if (vertexIndex == 1 || vertexIndex == 2) {  	return (_gridInfo.CellCenterXCoords [elementIndex] + _gridInfo.CellSize / 2);  }  else {  	throw new System.Exception ("Vertex index outside range [0;4]. Vertex index was:" + vertexIndex.ToString ());  }  
Magic Number,Oatc.OpenMI.Examples.SimpleGroundModel2,Grid,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Examples\SimpleGroundWaterModel2\Grid.cs,GetNonRotatedXCoordinate,The following statement contains a magic number: return (_gridInfo.CellCenterXCoords [elementIndex] - _gridInfo.CellSize / 2);  
Magic Number,Oatc.OpenMI.Examples.SimpleGroundModel2,Grid,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Examples\SimpleGroundWaterModel2\Grid.cs,GetNonRotatedXCoordinate,The following statement contains a magic number: if (vertexIndex == 1 || vertexIndex == 2) {  	return (_gridInfo.CellCenterXCoords [elementIndex] + _gridInfo.CellSize / 2);  }  else {  	throw new System.Exception ("Vertex index outside range [0;4]. Vertex index was:" + vertexIndex.ToString ());  }  
Magic Number,Oatc.OpenMI.Examples.SimpleGroundModel2,Grid,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Examples\SimpleGroundWaterModel2\Grid.cs,GetNonRotatedXCoordinate,The following statement contains a magic number: if (vertexIndex == 1 || vertexIndex == 2) {  	return (_gridInfo.CellCenterXCoords [elementIndex] + _gridInfo.CellSize / 2);  }  else {  	throw new System.Exception ("Vertex index outside range [0;4]. Vertex index was:" + vertexIndex.ToString ());  }  
Magic Number,Oatc.OpenMI.Examples.SimpleGroundModel2,Grid,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Examples\SimpleGroundWaterModel2\Grid.cs,GetNonRotatedXCoordinate,The following statement contains a magic number: return (_gridInfo.CellCenterXCoords [elementIndex] + _gridInfo.CellSize / 2);  
Magic Number,Oatc.OpenMI.Examples.SimpleGroundModel2,Grid,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Examples\SimpleGroundWaterModel2\Grid.cs,GetNonRotatedYCoordinate,The following statement contains a magic number: if (vertexIndex == 0 || vertexIndex == 1) {  	return (_gridInfo.CellCenterYCoords [elementIndex] - _gridInfo.CellSize / 2);  }  else if (vertexIndex == 2 || vertexIndex == 3) {  	return (_gridInfo.CellCenterYCoords [elementIndex] + _gridInfo.CellSize / 2);  }  else {  	throw new System.Exception ("Vertex index outside range [0;4]. Vertex index was:" + vertexIndex.ToString ());  }  
Magic Number,Oatc.OpenMI.Examples.SimpleGroundModel2,Grid,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Examples\SimpleGroundWaterModel2\Grid.cs,GetNonRotatedYCoordinate,The following statement contains a magic number: if (vertexIndex == 0 || vertexIndex == 1) {  	return (_gridInfo.CellCenterYCoords [elementIndex] - _gridInfo.CellSize / 2);  }  else if (vertexIndex == 2 || vertexIndex == 3) {  	return (_gridInfo.CellCenterYCoords [elementIndex] + _gridInfo.CellSize / 2);  }  else {  	throw new System.Exception ("Vertex index outside range [0;4]. Vertex index was:" + vertexIndex.ToString ());  }  
Magic Number,Oatc.OpenMI.Examples.SimpleGroundModel2,Grid,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Examples\SimpleGroundWaterModel2\Grid.cs,GetNonRotatedYCoordinate,The following statement contains a magic number: if (vertexIndex == 0 || vertexIndex == 1) {  	return (_gridInfo.CellCenterYCoords [elementIndex] - _gridInfo.CellSize / 2);  }  else if (vertexIndex == 2 || vertexIndex == 3) {  	return (_gridInfo.CellCenterYCoords [elementIndex] + _gridInfo.CellSize / 2);  }  else {  	throw new System.Exception ("Vertex index outside range [0;4]. Vertex index was:" + vertexIndex.ToString ());  }  
Magic Number,Oatc.OpenMI.Examples.SimpleGroundModel2,Grid,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Examples\SimpleGroundWaterModel2\Grid.cs,GetNonRotatedYCoordinate,The following statement contains a magic number: if (vertexIndex == 0 || vertexIndex == 1) {  	return (_gridInfo.CellCenterYCoords [elementIndex] - _gridInfo.CellSize / 2);  }  else if (vertexIndex == 2 || vertexIndex == 3) {  	return (_gridInfo.CellCenterYCoords [elementIndex] + _gridInfo.CellSize / 2);  }  else {  	throw new System.Exception ("Vertex index outside range [0;4]. Vertex index was:" + vertexIndex.ToString ());  }  
Magic Number,Oatc.OpenMI.Examples.SimpleGroundModel2,Grid,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Examples\SimpleGroundWaterModel2\Grid.cs,GetNonRotatedYCoordinate,The following statement contains a magic number: return (_gridInfo.CellCenterYCoords [elementIndex] - _gridInfo.CellSize / 2);  
Magic Number,Oatc.OpenMI.Examples.SimpleGroundModel2,Grid,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Examples\SimpleGroundWaterModel2\Grid.cs,GetNonRotatedYCoordinate,The following statement contains a magic number: if (vertexIndex == 2 || vertexIndex == 3) {  	return (_gridInfo.CellCenterYCoords [elementIndex] + _gridInfo.CellSize / 2);  }  else {  	throw new System.Exception ("Vertex index outside range [0;4]. Vertex index was:" + vertexIndex.ToString ());  }  
Magic Number,Oatc.OpenMI.Examples.SimpleGroundModel2,Grid,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Examples\SimpleGroundWaterModel2\Grid.cs,GetNonRotatedYCoordinate,The following statement contains a magic number: if (vertexIndex == 2 || vertexIndex == 3) {  	return (_gridInfo.CellCenterYCoords [elementIndex] + _gridInfo.CellSize / 2);  }  else {  	throw new System.Exception ("Vertex index outside range [0;4]. Vertex index was:" + vertexIndex.ToString ());  }  
Magic Number,Oatc.OpenMI.Examples.SimpleGroundModel2,Grid,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Examples\SimpleGroundWaterModel2\Grid.cs,GetNonRotatedYCoordinate,The following statement contains a magic number: if (vertexIndex == 2 || vertexIndex == 3) {  	return (_gridInfo.CellCenterYCoords [elementIndex] + _gridInfo.CellSize / 2);  }  else {  	throw new System.Exception ("Vertex index outside range [0;4]. Vertex index was:" + vertexIndex.ToString ());  }  
Magic Number,Oatc.OpenMI.Examples.SimpleGroundModel2,Grid,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Examples\SimpleGroundWaterModel2\Grid.cs,GetNonRotatedYCoordinate,The following statement contains a magic number: return (_gridInfo.CellCenterYCoords [elementIndex] + _gridInfo.CellSize / 2);  
Magic Number,Oatc.OpenMI.Examples.SimpleGroundModel2,GridInfo,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Examples\SimpleGroundWaterModel2\GridInfo.cs,GridInfo,The following statement contains a magic number: for (int i = 0; i < nx; i++) {  	for (int n = 0; n < ny; n++) {  		_cellCenterXCoords [index] = origX + i * cellSize + 0.5 * cellSize;  		index++;  	}  }  
Magic Number,Oatc.OpenMI.Examples.SimpleGroundModel2,GridInfo,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Examples\SimpleGroundWaterModel2\GridInfo.cs,GridInfo,The following statement contains a magic number: for (int n = 0; n < ny; n++) {  	_cellCenterXCoords [index] = origX + i * cellSize + 0.5 * cellSize;  	index++;  }  
Magic Number,Oatc.OpenMI.Examples.SimpleGroundModel2,GridInfo,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Examples\SimpleGroundWaterModel2\GridInfo.cs,GridInfo,The following statement contains a magic number: _cellCenterXCoords [index] = origX + i * cellSize + 0.5 * cellSize;  
Magic Number,Oatc.OpenMI.Examples.SimpleGroundModel2,GridInfo,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Examples\SimpleGroundWaterModel2\GridInfo.cs,GridInfo,The following statement contains a magic number: for (int i = 0; i < nx; i++) {  	for (int n = 0; n < ny; n++) {  		_cellCenterYCoords [index] = origY + n * cellSize + 0.5 * cellSize;  		index++;  	}  }  
Magic Number,Oatc.OpenMI.Examples.SimpleGroundModel2,GridInfo,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Examples\SimpleGroundWaterModel2\GridInfo.cs,GridInfo,The following statement contains a magic number: for (int n = 0; n < ny; n++) {  	_cellCenterYCoords [index] = origY + n * cellSize + 0.5 * cellSize;  	index++;  }  
Magic Number,Oatc.OpenMI.Examples.SimpleGroundModel2,GridInfo,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Examples\SimpleGroundWaterModel2\GridInfo.cs,GridInfo,The following statement contains a magic number: _cellCenterYCoords [index] = origY + n * cellSize + 0.5 * cellSize;  
