Implementation smell,Namespace,Class,File,Method,Description
Long Method,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The method has 216 lines of code.
Complex Method,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,GetNextPen,Cyclomatic complexity of the method is 14
Complex Method,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,PopulateDialog,Cyclomatic complexity of the method is 10
Complex Method,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,panelViewer_Paint,Cyclomatic complexity of the method is 26
Complex Method,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,panelViewer_MouseMove,Cyclomatic complexity of the method is 15
Complex Method,Oatc.OpenMI.Gui.Controls,ExchangeItemSelector,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ExchangeItemSelector.cs,TreeCreate,Cyclomatic complexity of the method is 13
Long Parameter List,Oatc.OpenMI.Gui.Controls,PropertyManager,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\PropertyManager.cs,SetProperty,The method has 5 parameters.
Long Statement,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The length of the statement  "	this.panelViewer.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom) | System.Windows.Forms.AnchorStyles.Left) | System.Windows.Forms.AnchorStyles.Right))); " is 235.
Long Statement,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The length of the statement  "	this.buttonClose.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 150.
Long Statement,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The length of the statement  "	this.numericMarginWidth.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left))); " is 156.
Long Statement,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The length of the statement  "	this.label1.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left))); " is 144.
Long Statement,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The length of the statement  "	this.label2.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left))); " is 144.
Long Statement,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The length of the statement  "	this.numericLineWidth.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left))); " is 154.
Long Statement,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The length of the statement  "	this.label3.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left) | System.Windows.Forms.AnchorStyles.Right))); " is 188.
Long Statement,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The length of the statement  "	this.label4.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left))); " is 144.
Long Statement,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The length of the statement  "	this.label7.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left))); " is 144.
Long Statement,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The length of the statement  "	this.label8.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left))); " is 144.
Long Statement,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The length of the statement  "	this.label9.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left))); " is 144.
Long Statement,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The length of the statement  "	this.label10.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left))); " is 145.
Long Statement,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The length of the statement  "	this.label11.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left))); " is 145.
Long Statement,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,panelViewer_MouseMove,The length of the statement  "					xyPolygon.Points.Add (new XYPoint (elementSet.GetVertexXCoordinate (index' i)' elementSet.GetVertexYCoordinate (index' i))); " is 124.
Long Statement,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,panelViewer_MouseMove,The length of the statement  "					xyPolyline.Points.Add (new XYPoint (elementSet.GetVertexXCoordinate (index' i)' elementSet.GetVertexYCoordinate (index' i))); " is 125.
Long Statement,Oatc.OpenMI.Gui.Controls,ExchangeItemSelector,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ExchangeItemSelector.cs,InitializeComponent,The length of the statement  "	System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager (typeof(ExchangeItemSelector)); " is 141.
Long Statement,Oatc.OpenMI.Gui.Controls,ExchangeItemSelector,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ExchangeItemSelector.cs,InitializeComponent,The length of the statement  "	this.treeView.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom) | System.Windows.Forms.AnchorStyles.Left) | System.Windows.Forms.AnchorStyles.Right))); " is 232.
Long Statement,Oatc.OpenMI.Gui.Controls,ExchangeItemSelector,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ExchangeItemSelector.cs,InitializeComponent,The length of the statement  "	this.imageList.ImageStream = ((System.Windows.Forms.ImageListStreamer)(resources.GetObject ("imageList1.ImageStream"))); " is 120.
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,ElementSetViewer,The following statement contains a magic number: try {  	_font = new Font ("Arial"' 11' FontStyle.Bold);  }  catch (ArithmeticException) {  	Utils.ResetFPU ();  	_font = new Font ("Arial"' 11' FontStyle.Bold);  }  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,ElementSetViewer,The following statement contains a magic number: try {  	_font = new Font ("Arial"' 11' FontStyle.Bold);  }  catch (ArithmeticException) {  	Utils.ResetFPU ();  	_font = new Font ("Arial"' 11' FontStyle.Bold);  }  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,ElementSetViewer,The following statement contains a magic number: _font = new Font ("Arial"' 11' FontStyle.Bold);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,ElementSetViewer,The following statement contains a magic number: _font = new Font ("Arial"' 11' FontStyle.Bold);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,GetNextPen,The following statement contains a magic number: switch (_penIndex) {  case 0:  	color = Color.Blue;  	break;  case 1:  	color = Color.Red;  	break;  case 2:  	color = Color.Green;  	break;  default:  	Random rand = new Random (12345);  	color = Color.FromArgb (rand.Next (255)' rand.Next (255)' rand.Next (255));  	break;  }  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,GetNextPen,The following statement contains a magic number: switch (_penIndex) {  case 0:  	color = Color.Blue;  	break;  case 1:  	color = Color.Red;  	break;  case 2:  	color = Color.Green;  	break;  default:  	Random rand = new Random (12345);  	color = Color.FromArgb (rand.Next (255)' rand.Next (255)' rand.Next (255));  	break;  }  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,GetNextPen,The following statement contains a magic number: switch (_penIndex) {  case 0:  	color = Color.Blue;  	break;  case 1:  	color = Color.Red;  	break;  case 2:  	color = Color.Green;  	break;  default:  	Random rand = new Random (12345);  	color = Color.FromArgb (rand.Next (255)' rand.Next (255)' rand.Next (255));  	break;  }  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,GetNextPen,The following statement contains a magic number: switch (_penIndex) {  case 0:  	color = Color.Blue;  	break;  case 1:  	color = Color.Red;  	break;  case 2:  	color = Color.Green;  	break;  default:  	Random rand = new Random (12345);  	color = Color.FromArgb (rand.Next (255)' rand.Next (255)' rand.Next (255));  	break;  }  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,GetNextPen,The following statement contains a magic number: switch (_penIndex) {  case 0:  	color = Color.Blue;  	break;  case 1:  	color = Color.Red;  	break;  case 2:  	color = Color.Green;  	break;  default:  	Random rand = new Random (12345);  	color = Color.FromArgb (rand.Next (255)' rand.Next (255)' rand.Next (255));  	break;  }  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,GetNextPen,The following statement contains a magic number: color = Color.FromArgb (rand.Next (255)' rand.Next (255)' rand.Next (255));  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,GetNextPen,The following statement contains a magic number: color = Color.FromArgb (rand.Next (255)' rand.Next (255)' rand.Next (255));  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,GetNextPen,The following statement contains a magic number: color = Color.FromArgb (rand.Next (255)' rand.Next (255)' rand.Next (255));  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,PopulateDialog,The following statement contains a magic number: _margin = 10;  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,PopulateDialog,The following statement contains a magic number: _lineWidth = 2;  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,panelViewer_Paint,The following statement contains a magic number: if (_maxY > _minY)  	a = (panelViewer.ClientSize.Height - 2 * _margin) / (_maxY - _minY);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,panelViewer_Paint,The following statement contains a magic number: a = (panelViewer.ClientSize.Height - 2 * _margin) / (_maxY - _minY);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,panelViewer_Paint,The following statement contains a magic number: if (_maxX > _minX)  	b = (panelViewer.ClientSize.Width - 2 * _margin) / (_maxX - _minX);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,panelViewer_Paint,The following statement contains a magic number: b = (panelViewer.ClientSize.Width - 2 * _margin) / (_maxX - _minX);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,panelViewer_Paint,The following statement contains a magic number: foreach (IElementSet elementSet in _elementSets) {  	switch (elementSet.ElementType) {  	case ElementType.IdBased:  		pen = GetNextPen ();  		e.Graphics.DrawString ("ID: " + elementSet.Caption' _font' pen.Brush' _margin' _margin + idBasedCount * 20);  		idBasedCount++;  		break;  	case ElementType.Point:  		pen = GetNextPen ();  		for (int i = 0; i < elementSet.ElementCount; i++) {  			x1 = TransX (elementSet.GetVertexXCoordinate (i' 0));  			y1 = TransY (elementSet.GetVertexYCoordinate (i' 0));  			e.Graphics.FillEllipse (pen.Brush' x1' y1' 5' 5);  		}  		break;  	case ElementType.Polygon:  		pen = GetNextPen (_lineWidth);  		for (int i = 0; i < elementSet.ElementCount; i++) {  			for (int n = 0; n < elementSet.GetVertexCount (i); n++) {  				if (n == 0) {  					x1 = TransX (elementSet.GetVertexXCoordinate (i' elementSet.GetVertexCount (i) - 1));  					y1 = TransY (elementSet.GetVertexYCoordinate (i' elementSet.GetVertexCount (i) - 1));  					x2 = TransX (elementSet.GetVertexXCoordinate (i' 0));  					y2 = TransY (elementSet.GetVertexYCoordinate (i' 0));  				}  				else {  					x1 = TransX (elementSet.GetVertexXCoordinate (i' n - 1));  					y1 = TransY (elementSet.GetVertexYCoordinate (i' n - 1));  					x2 = TransX (elementSet.GetVertexXCoordinate (i' n));  					y2 = TransY (elementSet.GetVertexYCoordinate (i' n));  				}  				e.Graphics.DrawLine (pen' x1' y1' x2' y2);  			}  		}  		break;  	case ElementType.PolyLine:  		pen = GetNextPen (_lineWidth);  		for (int i = 0; i < elementSet.ElementCount; i++) {  			for (int n = 1; n < elementSet.GetVertexCount (i); n++) {  				x1 = TransX (elementSet.GetVertexXCoordinate (i' n - 1));  				y1 = TransY (elementSet.GetVertexYCoordinate (i' n - 1));  				x2 = TransX (elementSet.GetVertexXCoordinate (i' n));  				y2 = TransY (elementSet.GetVertexYCoordinate (i' n));  				e.Graphics.DrawLine (pen' x1' y1' x2' y2);  			}  		}  		break;  	}  }  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,panelViewer_Paint,The following statement contains a magic number: foreach (IElementSet elementSet in _elementSets) {  	switch (elementSet.ElementType) {  	case ElementType.IdBased:  		pen = GetNextPen ();  		e.Graphics.DrawString ("ID: " + elementSet.Caption' _font' pen.Brush' _margin' _margin + idBasedCount * 20);  		idBasedCount++;  		break;  	case ElementType.Point:  		pen = GetNextPen ();  		for (int i = 0; i < elementSet.ElementCount; i++) {  			x1 = TransX (elementSet.GetVertexXCoordinate (i' 0));  			y1 = TransY (elementSet.GetVertexYCoordinate (i' 0));  			e.Graphics.FillEllipse (pen.Brush' x1' y1' 5' 5);  		}  		break;  	case ElementType.Polygon:  		pen = GetNextPen (_lineWidth);  		for (int i = 0; i < elementSet.ElementCount; i++) {  			for (int n = 0; n < elementSet.GetVertexCount (i); n++) {  				if (n == 0) {  					x1 = TransX (elementSet.GetVertexXCoordinate (i' elementSet.GetVertexCount (i) - 1));  					y1 = TransY (elementSet.GetVertexYCoordinate (i' elementSet.GetVertexCount (i) - 1));  					x2 = TransX (elementSet.GetVertexXCoordinate (i' 0));  					y2 = TransY (elementSet.GetVertexYCoordinate (i' 0));  				}  				else {  					x1 = TransX (elementSet.GetVertexXCoordinate (i' n - 1));  					y1 = TransY (elementSet.GetVertexYCoordinate (i' n - 1));  					x2 = TransX (elementSet.GetVertexXCoordinate (i' n));  					y2 = TransY (elementSet.GetVertexYCoordinate (i' n));  				}  				e.Graphics.DrawLine (pen' x1' y1' x2' y2);  			}  		}  		break;  	case ElementType.PolyLine:  		pen = GetNextPen (_lineWidth);  		for (int i = 0; i < elementSet.ElementCount; i++) {  			for (int n = 1; n < elementSet.GetVertexCount (i); n++) {  				x1 = TransX (elementSet.GetVertexXCoordinate (i' n - 1));  				y1 = TransY (elementSet.GetVertexYCoordinate (i' n - 1));  				x2 = TransX (elementSet.GetVertexXCoordinate (i' n));  				y2 = TransY (elementSet.GetVertexYCoordinate (i' n));  				e.Graphics.DrawLine (pen' x1' y1' x2' y2);  			}  		}  		break;  	}  }  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,panelViewer_Paint,The following statement contains a magic number: foreach (IElementSet elementSet in _elementSets) {  	switch (elementSet.ElementType) {  	case ElementType.IdBased:  		pen = GetNextPen ();  		e.Graphics.DrawString ("ID: " + elementSet.Caption' _font' pen.Brush' _margin' _margin + idBasedCount * 20);  		idBasedCount++;  		break;  	case ElementType.Point:  		pen = GetNextPen ();  		for (int i = 0; i < elementSet.ElementCount; i++) {  			x1 = TransX (elementSet.GetVertexXCoordinate (i' 0));  			y1 = TransY (elementSet.GetVertexYCoordinate (i' 0));  			e.Graphics.FillEllipse (pen.Brush' x1' y1' 5' 5);  		}  		break;  	case ElementType.Polygon:  		pen = GetNextPen (_lineWidth);  		for (int i = 0; i < elementSet.ElementCount; i++) {  			for (int n = 0; n < elementSet.GetVertexCount (i); n++) {  				if (n == 0) {  					x1 = TransX (elementSet.GetVertexXCoordinate (i' elementSet.GetVertexCount (i) - 1));  					y1 = TransY (elementSet.GetVertexYCoordinate (i' elementSet.GetVertexCount (i) - 1));  					x2 = TransX (elementSet.GetVertexXCoordinate (i' 0));  					y2 = TransY (elementSet.GetVertexYCoordinate (i' 0));  				}  				else {  					x1 = TransX (elementSet.GetVertexXCoordinate (i' n - 1));  					y1 = TransY (elementSet.GetVertexYCoordinate (i' n - 1));  					x2 = TransX (elementSet.GetVertexXCoordinate (i' n));  					y2 = TransY (elementSet.GetVertexYCoordinate (i' n));  				}  				e.Graphics.DrawLine (pen' x1' y1' x2' y2);  			}  		}  		break;  	case ElementType.PolyLine:  		pen = GetNextPen (_lineWidth);  		for (int i = 0; i < elementSet.ElementCount; i++) {  			for (int n = 1; n < elementSet.GetVertexCount (i); n++) {  				x1 = TransX (elementSet.GetVertexXCoordinate (i' n - 1));  				y1 = TransY (elementSet.GetVertexYCoordinate (i' n - 1));  				x2 = TransX (elementSet.GetVertexXCoordinate (i' n));  				y2 = TransY (elementSet.GetVertexYCoordinate (i' n));  				e.Graphics.DrawLine (pen' x1' y1' x2' y2);  			}  		}  		break;  	}  }  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,panelViewer_Paint,The following statement contains a magic number: switch (elementSet.ElementType) {  case ElementType.IdBased:  	pen = GetNextPen ();  	e.Graphics.DrawString ("ID: " + elementSet.Caption' _font' pen.Brush' _margin' _margin + idBasedCount * 20);  	idBasedCount++;  	break;  case ElementType.Point:  	pen = GetNextPen ();  	for (int i = 0; i < elementSet.ElementCount; i++) {  		x1 = TransX (elementSet.GetVertexXCoordinate (i' 0));  		y1 = TransY (elementSet.GetVertexYCoordinate (i' 0));  		e.Graphics.FillEllipse (pen.Brush' x1' y1' 5' 5);  	}  	break;  case ElementType.Polygon:  	pen = GetNextPen (_lineWidth);  	for (int i = 0; i < elementSet.ElementCount; i++) {  		for (int n = 0; n < elementSet.GetVertexCount (i); n++) {  			if (n == 0) {  				x1 = TransX (elementSet.GetVertexXCoordinate (i' elementSet.GetVertexCount (i) - 1));  				y1 = TransY (elementSet.GetVertexYCoordinate (i' elementSet.GetVertexCount (i) - 1));  				x2 = TransX (elementSet.GetVertexXCoordinate (i' 0));  				y2 = TransY (elementSet.GetVertexYCoordinate (i' 0));  			}  			else {  				x1 = TransX (elementSet.GetVertexXCoordinate (i' n - 1));  				y1 = TransY (elementSet.GetVertexYCoordinate (i' n - 1));  				x2 = TransX (elementSet.GetVertexXCoordinate (i' n));  				y2 = TransY (elementSet.GetVertexYCoordinate (i' n));  			}  			e.Graphics.DrawLine (pen' x1' y1' x2' y2);  		}  	}  	break;  case ElementType.PolyLine:  	pen = GetNextPen (_lineWidth);  	for (int i = 0; i < elementSet.ElementCount; i++) {  		for (int n = 1; n < elementSet.GetVertexCount (i); n++) {  			x1 = TransX (elementSet.GetVertexXCoordinate (i' n - 1));  			y1 = TransY (elementSet.GetVertexYCoordinate (i' n - 1));  			x2 = TransX (elementSet.GetVertexXCoordinate (i' n));  			y2 = TransY (elementSet.GetVertexYCoordinate (i' n));  			e.Graphics.DrawLine (pen' x1' y1' x2' y2);  		}  	}  	break;  }  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,panelViewer_Paint,The following statement contains a magic number: switch (elementSet.ElementType) {  case ElementType.IdBased:  	pen = GetNextPen ();  	e.Graphics.DrawString ("ID: " + elementSet.Caption' _font' pen.Brush' _margin' _margin + idBasedCount * 20);  	idBasedCount++;  	break;  case ElementType.Point:  	pen = GetNextPen ();  	for (int i = 0; i < elementSet.ElementCount; i++) {  		x1 = TransX (elementSet.GetVertexXCoordinate (i' 0));  		y1 = TransY (elementSet.GetVertexYCoordinate (i' 0));  		e.Graphics.FillEllipse (pen.Brush' x1' y1' 5' 5);  	}  	break;  case ElementType.Polygon:  	pen = GetNextPen (_lineWidth);  	for (int i = 0; i < elementSet.ElementCount; i++) {  		for (int n = 0; n < elementSet.GetVertexCount (i); n++) {  			if (n == 0) {  				x1 = TransX (elementSet.GetVertexXCoordinate (i' elementSet.GetVertexCount (i) - 1));  				y1 = TransY (elementSet.GetVertexYCoordinate (i' elementSet.GetVertexCount (i) - 1));  				x2 = TransX (elementSet.GetVertexXCoordinate (i' 0));  				y2 = TransY (elementSet.GetVertexYCoordinate (i' 0));  			}  			else {  				x1 = TransX (elementSet.GetVertexXCoordinate (i' n - 1));  				y1 = TransY (elementSet.GetVertexYCoordinate (i' n - 1));  				x2 = TransX (elementSet.GetVertexXCoordinate (i' n));  				y2 = TransY (elementSet.GetVertexYCoordinate (i' n));  			}  			e.Graphics.DrawLine (pen' x1' y1' x2' y2);  		}  	}  	break;  case ElementType.PolyLine:  	pen = GetNextPen (_lineWidth);  	for (int i = 0; i < elementSet.ElementCount; i++) {  		for (int n = 1; n < elementSet.GetVertexCount (i); n++) {  			x1 = TransX (elementSet.GetVertexXCoordinate (i' n - 1));  			y1 = TransY (elementSet.GetVertexYCoordinate (i' n - 1));  			x2 = TransX (elementSet.GetVertexXCoordinate (i' n));  			y2 = TransY (elementSet.GetVertexYCoordinate (i' n));  			e.Graphics.DrawLine (pen' x1' y1' x2' y2);  		}  	}  	break;  }  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,panelViewer_Paint,The following statement contains a magic number: switch (elementSet.ElementType) {  case ElementType.IdBased:  	pen = GetNextPen ();  	e.Graphics.DrawString ("ID: " + elementSet.Caption' _font' pen.Brush' _margin' _margin + idBasedCount * 20);  	idBasedCount++;  	break;  case ElementType.Point:  	pen = GetNextPen ();  	for (int i = 0; i < elementSet.ElementCount; i++) {  		x1 = TransX (elementSet.GetVertexXCoordinate (i' 0));  		y1 = TransY (elementSet.GetVertexYCoordinate (i' 0));  		e.Graphics.FillEllipse (pen.Brush' x1' y1' 5' 5);  	}  	break;  case ElementType.Polygon:  	pen = GetNextPen (_lineWidth);  	for (int i = 0; i < elementSet.ElementCount; i++) {  		for (int n = 0; n < elementSet.GetVertexCount (i); n++) {  			if (n == 0) {  				x1 = TransX (elementSet.GetVertexXCoordinate (i' elementSet.GetVertexCount (i) - 1));  				y1 = TransY (elementSet.GetVertexYCoordinate (i' elementSet.GetVertexCount (i) - 1));  				x2 = TransX (elementSet.GetVertexXCoordinate (i' 0));  				y2 = TransY (elementSet.GetVertexYCoordinate (i' 0));  			}  			else {  				x1 = TransX (elementSet.GetVertexXCoordinate (i' n - 1));  				y1 = TransY (elementSet.GetVertexYCoordinate (i' n - 1));  				x2 = TransX (elementSet.GetVertexXCoordinate (i' n));  				y2 = TransY (elementSet.GetVertexYCoordinate (i' n));  			}  			e.Graphics.DrawLine (pen' x1' y1' x2' y2);  		}  	}  	break;  case ElementType.PolyLine:  	pen = GetNextPen (_lineWidth);  	for (int i = 0; i < elementSet.ElementCount; i++) {  		for (int n = 1; n < elementSet.GetVertexCount (i); n++) {  			x1 = TransX (elementSet.GetVertexXCoordinate (i' n - 1));  			y1 = TransY (elementSet.GetVertexYCoordinate (i' n - 1));  			x2 = TransX (elementSet.GetVertexXCoordinate (i' n));  			y2 = TransY (elementSet.GetVertexYCoordinate (i' n));  			e.Graphics.DrawLine (pen' x1' y1' x2' y2);  		}  	}  	break;  }  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,panelViewer_Paint,The following statement contains a magic number: e.Graphics.DrawString ("ID: " + elementSet.Caption' _font' pen.Brush' _margin' _margin + idBasedCount * 20);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,panelViewer_Paint,The following statement contains a magic number: for (int i = 0; i < elementSet.ElementCount; i++) {  	x1 = TransX (elementSet.GetVertexXCoordinate (i' 0));  	y1 = TransY (elementSet.GetVertexYCoordinate (i' 0));  	e.Graphics.FillEllipse (pen.Brush' x1' y1' 5' 5);  }  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,panelViewer_Paint,The following statement contains a magic number: for (int i = 0; i < elementSet.ElementCount; i++) {  	x1 = TransX (elementSet.GetVertexXCoordinate (i' 0));  	y1 = TransY (elementSet.GetVertexYCoordinate (i' 0));  	e.Graphics.FillEllipse (pen.Brush' x1' y1' 5' 5);  }  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,panelViewer_Paint,The following statement contains a magic number: e.Graphics.FillEllipse (pen.Brush' x1' y1' 5' 5);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,panelViewer_Paint,The following statement contains a magic number: e.Graphics.FillEllipse (pen.Brush' x1' y1' 5' 5);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.panelViewer.Location = new System.Drawing.Point (4' 4);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.panelViewer.Location = new System.Drawing.Point (4' 4);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.panelViewer.Size = new System.Drawing.Size (648' 368);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.panelViewer.Size = new System.Drawing.Size (648' 368);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.buttonClose.Location = new System.Drawing.Point (544' 404);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.buttonClose.Location = new System.Drawing.Point (544' 404);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.buttonClose.Size = new System.Drawing.Size (92' 28);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.buttonClose.Size = new System.Drawing.Size (92' 28);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.numericMarginWidth.Increment = new System.Decimal (new int[] {  	2'  	0'  	0'  	0  });  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.numericMarginWidth.Location = new System.Drawing.Point (92' 416);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.numericMarginWidth.Location = new System.Drawing.Point (92' 416);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.numericMarginWidth.Size = new System.Drawing.Size (52' 20);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.numericMarginWidth.Size = new System.Drawing.Size (52' 20);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.numericMarginWidth.TabIndex = 2;  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.numericMarginWidth.Value = new System.Decimal (new int[] {  	10'  	0'  	0'  	0  });  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point (8' 416);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point (8' 416);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size (76' 20);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size (76' 20);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.label1.TabIndex = 3;  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point (8' 388);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point (8' 388);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size (76' 20);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size (76' 20);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.label2.TabIndex = 5;  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.numericLineWidth.Increment = new System.Decimal (new int[] {  	25'  	0'  	0'  	131072  });  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.numericLineWidth.Increment = new System.Decimal (new int[] {  	25'  	0'  	0'  	131072  });  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.numericLineWidth.Location = new System.Drawing.Point (92' 388);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.numericLineWidth.Location = new System.Drawing.Point (92' 388);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.numericLineWidth.Minimum = new System.Decimal (new int[] {  	25'  	0'  	0'  	131072  });  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.numericLineWidth.Minimum = new System.Decimal (new int[] {  	25'  	0'  	0'  	131072  });  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.numericLineWidth.Size = new System.Drawing.Size (52' 20);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.numericLineWidth.Size = new System.Drawing.Size (52' 20);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.numericLineWidth.TabIndex = 4;  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.numericLineWidth.Value = new System.Decimal (new int[] {  	2'  	0'  	0'  	0  });  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.label3.Location = new System.Drawing.Point (504' 380);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.label3.Location = new System.Drawing.Point (504' 380);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.label3.Size = new System.Drawing.Size (144' 16);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.label3.Size = new System.Drawing.Size (144' 16);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.label3.TabIndex = 6;  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.label4.Location = new System.Drawing.Point (160' 400);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.label4.Location = new System.Drawing.Point (160' 400);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.label4.Size = new System.Drawing.Size (160' 16);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.label4.Size = new System.Drawing.Size (160' 16);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.label4.TabIndex = 7;  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.label7.Location = new System.Drawing.Point (160' 380);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.label7.Location = new System.Drawing.Point (160' 380);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.label7.Size = new System.Drawing.Size (160' 16);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.label7.Size = new System.Drawing.Size (160' 16);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.label7.TabIndex = 8;  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.label8.Location = new System.Drawing.Point (160' 420);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.label8.Location = new System.Drawing.Point (160' 420);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.label8.Size = new System.Drawing.Size (160' 16);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.label8.Size = new System.Drawing.Size (160' 16);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.label8.TabIndex = 9;  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.label9.Location = new System.Drawing.Point (328' 380);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.label9.Location = new System.Drawing.Point (328' 380);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.label9.Size = new System.Drawing.Size (168' 16);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.label9.Size = new System.Drawing.Size (168' 16);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.label9.TabIndex = 10;  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.label10.Location = new System.Drawing.Point (328' 400);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.label10.Location = new System.Drawing.Point (328' 400);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.label10.Size = new System.Drawing.Size (168' 16);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.label10.Size = new System.Drawing.Size (168' 16);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.label10.TabIndex = 11;  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.label11.Location = new System.Drawing.Point (328' 420);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.label11.Location = new System.Drawing.Point (328' 420);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.label11.Size = new System.Drawing.Size (168' 16);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.label11.Size = new System.Drawing.Size (168' 16);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.label11.TabIndex = 12;  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleBaseSize = new System.Drawing.Size (5' 13);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleBaseSize = new System.Drawing.Size (5' 13);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size (656' 441);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size (656' 441);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.MinimumSize = new System.Drawing.Size (664' 468);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,InitializeComponent,The following statement contains a magic number: this.MinimumSize = new System.Drawing.Size (664' 468);  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,panelViewer_MouseMove,The following statement contains a magic number: for (int elementSetNumber = 0; elementSetNumber < this._elementSets.Count; elementSetNumber++) {  	string elementID = " ";  	int elementIndex = -9;  	double distance = 10e30;  	IElementSet elementSet = (IElementSet)_elementSets [elementSetNumber];  	if (elementSetNumber == 0) {  		this.label7.Text = elementSet.Caption.Substring (0' Math.Min (20' elementSet.Caption.Length));  	}  	if (elementSetNumber == 1) {  		this.label9.Text = elementSet.Caption.Substring (0' Math.Min (20' elementSet.Caption.Length));  	}  	for (int index = 0; index < elementSet.ElementCount; index++) {  		if (((IElementSet)_elementSets [elementSetNumber]).ElementType == ElementType.Polygon) {  			XYPolygon xyPolygon = new XYPolygon ();  			for (int i = 0; i < elementSet.GetVertexCount (index); i++) {  				xyPolygon.Points.Add (new XYPoint (elementSet.GetVertexXCoordinate (index' i)' elementSet.GetVertexYCoordinate (index' i)));  			}  			if (XYGeometryTools.IsPointInPolygon (x' y' xyPolygon)) {  				elementID = elementSet.GetElementId (index).Id;  				elementIndex = index;  			}  		}  		if (((IElementSet)_elementSets [elementSetNumber]).ElementType == ElementType.PolyLine) {  			XYPolyline xyPolyline = new XYPolyline ();  			for (int i = 0; i < elementSet.GetVertexCount (index); i++) {  				xyPolyline.Points.Add (new XYPoint (elementSet.GetVertexXCoordinate (index' i)' elementSet.GetVertexYCoordinate (index' i)));  			}  			double xx = XYGeometryTools.CalculatePolylineToPointDistance (xyPolyline' new XYPoint (x' y));  			if (xx < distance) {  				distance = xx;  				if (xx < 0.3 * xyPolyline.GetLength ()) {  					elementIndex = index;  					elementID = elementSet.GetElementId (index).Id;  				}  			}  		}  		if (elementSetNumber == 0 && elementIndex >= 0) {  			this.label4.Text = "Index: " + elementIndex.ToString ();  			this.label8.Text = "ID: " + elementID.Substring (0' Math.Min (17' elementID.Length));  		}  		if (elementSetNumber == 1 && elementIndex >= 0) {  			this.label10.Text = "Index: " + elementIndex.ToString ();  			this.label11.Text = "ID: " + elementID.Substring (0' Math.Min (17' elementID.Length));  		}  	}  }  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,panelViewer_MouseMove,The following statement contains a magic number: for (int elementSetNumber = 0; elementSetNumber < this._elementSets.Count; elementSetNumber++) {  	string elementID = " ";  	int elementIndex = -9;  	double distance = 10e30;  	IElementSet elementSet = (IElementSet)_elementSets [elementSetNumber];  	if (elementSetNumber == 0) {  		this.label7.Text = elementSet.Caption.Substring (0' Math.Min (20' elementSet.Caption.Length));  	}  	if (elementSetNumber == 1) {  		this.label9.Text = elementSet.Caption.Substring (0' Math.Min (20' elementSet.Caption.Length));  	}  	for (int index = 0; index < elementSet.ElementCount; index++) {  		if (((IElementSet)_elementSets [elementSetNumber]).ElementType == ElementType.Polygon) {  			XYPolygon xyPolygon = new XYPolygon ();  			for (int i = 0; i < elementSet.GetVertexCount (index); i++) {  				xyPolygon.Points.Add (new XYPoint (elementSet.GetVertexXCoordinate (index' i)' elementSet.GetVertexYCoordinate (index' i)));  			}  			if (XYGeometryTools.IsPointInPolygon (x' y' xyPolygon)) {  				elementID = elementSet.GetElementId (index).Id;  				elementIndex = index;  			}  		}  		if (((IElementSet)_elementSets [elementSetNumber]).ElementType == ElementType.PolyLine) {  			XYPolyline xyPolyline = new XYPolyline ();  			for (int i = 0; i < elementSet.GetVertexCount (index); i++) {  				xyPolyline.Points.Add (new XYPoint (elementSet.GetVertexXCoordinate (index' i)' elementSet.GetVertexYCoordinate (index' i)));  			}  			double xx = XYGeometryTools.CalculatePolylineToPointDistance (xyPolyline' new XYPoint (x' y));  			if (xx < distance) {  				distance = xx;  				if (xx < 0.3 * xyPolyline.GetLength ()) {  					elementIndex = index;  					elementID = elementSet.GetElementId (index).Id;  				}  			}  		}  		if (elementSetNumber == 0 && elementIndex >= 0) {  			this.label4.Text = "Index: " + elementIndex.ToString ();  			this.label8.Text = "ID: " + elementID.Substring (0' Math.Min (17' elementID.Length));  		}  		if (elementSetNumber == 1 && elementIndex >= 0) {  			this.label10.Text = "Index: " + elementIndex.ToString ();  			this.label11.Text = "ID: " + elementID.Substring (0' Math.Min (17' elementID.Length));  		}  	}  }  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,panelViewer_MouseMove,The following statement contains a magic number: for (int elementSetNumber = 0; elementSetNumber < this._elementSets.Count; elementSetNumber++) {  	string elementID = " ";  	int elementIndex = -9;  	double distance = 10e30;  	IElementSet elementSet = (IElementSet)_elementSets [elementSetNumber];  	if (elementSetNumber == 0) {  		this.label7.Text = elementSet.Caption.Substring (0' Math.Min (20' elementSet.Caption.Length));  	}  	if (elementSetNumber == 1) {  		this.label9.Text = elementSet.Caption.Substring (0' Math.Min (20' elementSet.Caption.Length));  	}  	for (int index = 0; index < elementSet.ElementCount; index++) {  		if (((IElementSet)_elementSets [elementSetNumber]).ElementType == ElementType.Polygon) {  			XYPolygon xyPolygon = new XYPolygon ();  			for (int i = 0; i < elementSet.GetVertexCount (index); i++) {  				xyPolygon.Points.Add (new XYPoint (elementSet.GetVertexXCoordinate (index' i)' elementSet.GetVertexYCoordinate (index' i)));  			}  			if (XYGeometryTools.IsPointInPolygon (x' y' xyPolygon)) {  				elementID = elementSet.GetElementId (index).Id;  				elementIndex = index;  			}  		}  		if (((IElementSet)_elementSets [elementSetNumber]).ElementType == ElementType.PolyLine) {  			XYPolyline xyPolyline = new XYPolyline ();  			for (int i = 0; i < elementSet.GetVertexCount (index); i++) {  				xyPolyline.Points.Add (new XYPoint (elementSet.GetVertexXCoordinate (index' i)' elementSet.GetVertexYCoordinate (index' i)));  			}  			double xx = XYGeometryTools.CalculatePolylineToPointDistance (xyPolyline' new XYPoint (x' y));  			if (xx < distance) {  				distance = xx;  				if (xx < 0.3 * xyPolyline.GetLength ()) {  					elementIndex = index;  					elementID = elementSet.GetElementId (index).Id;  				}  			}  		}  		if (elementSetNumber == 0 && elementIndex >= 0) {  			this.label4.Text = "Index: " + elementIndex.ToString ();  			this.label8.Text = "ID: " + elementID.Substring (0' Math.Min (17' elementID.Length));  		}  		if (elementSetNumber == 1 && elementIndex >= 0) {  			this.label10.Text = "Index: " + elementIndex.ToString ();  			this.label11.Text = "ID: " + elementID.Substring (0' Math.Min (17' elementID.Length));  		}  	}  }  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,panelViewer_MouseMove,The following statement contains a magic number: for (int elementSetNumber = 0; elementSetNumber < this._elementSets.Count; elementSetNumber++) {  	string elementID = " ";  	int elementIndex = -9;  	double distance = 10e30;  	IElementSet elementSet = (IElementSet)_elementSets [elementSetNumber];  	if (elementSetNumber == 0) {  		this.label7.Text = elementSet.Caption.Substring (0' Math.Min (20' elementSet.Caption.Length));  	}  	if (elementSetNumber == 1) {  		this.label9.Text = elementSet.Caption.Substring (0' Math.Min (20' elementSet.Caption.Length));  	}  	for (int index = 0; index < elementSet.ElementCount; index++) {  		if (((IElementSet)_elementSets [elementSetNumber]).ElementType == ElementType.Polygon) {  			XYPolygon xyPolygon = new XYPolygon ();  			for (int i = 0; i < elementSet.GetVertexCount (index); i++) {  				xyPolygon.Points.Add (new XYPoint (elementSet.GetVertexXCoordinate (index' i)' elementSet.GetVertexYCoordinate (index' i)));  			}  			if (XYGeometryTools.IsPointInPolygon (x' y' xyPolygon)) {  				elementID = elementSet.GetElementId (index).Id;  				elementIndex = index;  			}  		}  		if (((IElementSet)_elementSets [elementSetNumber]).ElementType == ElementType.PolyLine) {  			XYPolyline xyPolyline = new XYPolyline ();  			for (int i = 0; i < elementSet.GetVertexCount (index); i++) {  				xyPolyline.Points.Add (new XYPoint (elementSet.GetVertexXCoordinate (index' i)' elementSet.GetVertexYCoordinate (index' i)));  			}  			double xx = XYGeometryTools.CalculatePolylineToPointDistance (xyPolyline' new XYPoint (x' y));  			if (xx < distance) {  				distance = xx;  				if (xx < 0.3 * xyPolyline.GetLength ()) {  					elementIndex = index;  					elementID = elementSet.GetElementId (index).Id;  				}  			}  		}  		if (elementSetNumber == 0 && elementIndex >= 0) {  			this.label4.Text = "Index: " + elementIndex.ToString ();  			this.label8.Text = "ID: " + elementID.Substring (0' Math.Min (17' elementID.Length));  		}  		if (elementSetNumber == 1 && elementIndex >= 0) {  			this.label10.Text = "Index: " + elementIndex.ToString ();  			this.label11.Text = "ID: " + elementID.Substring (0' Math.Min (17' elementID.Length));  		}  	}  }  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,panelViewer_MouseMove,The following statement contains a magic number: for (int elementSetNumber = 0; elementSetNumber < this._elementSets.Count; elementSetNumber++) {  	string elementID = " ";  	int elementIndex = -9;  	double distance = 10e30;  	IElementSet elementSet = (IElementSet)_elementSets [elementSetNumber];  	if (elementSetNumber == 0) {  		this.label7.Text = elementSet.Caption.Substring (0' Math.Min (20' elementSet.Caption.Length));  	}  	if (elementSetNumber == 1) {  		this.label9.Text = elementSet.Caption.Substring (0' Math.Min (20' elementSet.Caption.Length));  	}  	for (int index = 0; index < elementSet.ElementCount; index++) {  		if (((IElementSet)_elementSets [elementSetNumber]).ElementType == ElementType.Polygon) {  			XYPolygon xyPolygon = new XYPolygon ();  			for (int i = 0; i < elementSet.GetVertexCount (index); i++) {  				xyPolygon.Points.Add (new XYPoint (elementSet.GetVertexXCoordinate (index' i)' elementSet.GetVertexYCoordinate (index' i)));  			}  			if (XYGeometryTools.IsPointInPolygon (x' y' xyPolygon)) {  				elementID = elementSet.GetElementId (index).Id;  				elementIndex = index;  			}  		}  		if (((IElementSet)_elementSets [elementSetNumber]).ElementType == ElementType.PolyLine) {  			XYPolyline xyPolyline = new XYPolyline ();  			for (int i = 0; i < elementSet.GetVertexCount (index); i++) {  				xyPolyline.Points.Add (new XYPoint (elementSet.GetVertexXCoordinate (index' i)' elementSet.GetVertexYCoordinate (index' i)));  			}  			double xx = XYGeometryTools.CalculatePolylineToPointDistance (xyPolyline' new XYPoint (x' y));  			if (xx < distance) {  				distance = xx;  				if (xx < 0.3 * xyPolyline.GetLength ()) {  					elementIndex = index;  					elementID = elementSet.GetElementId (index).Id;  				}  			}  		}  		if (elementSetNumber == 0 && elementIndex >= 0) {  			this.label4.Text = "Index: " + elementIndex.ToString ();  			this.label8.Text = "ID: " + elementID.Substring (0' Math.Min (17' elementID.Length));  		}  		if (elementSetNumber == 1 && elementIndex >= 0) {  			this.label10.Text = "Index: " + elementIndex.ToString ();  			this.label11.Text = "ID: " + elementID.Substring (0' Math.Min (17' elementID.Length));  		}  	}  }  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,panelViewer_MouseMove,The following statement contains a magic number: for (int elementSetNumber = 0; elementSetNumber < this._elementSets.Count; elementSetNumber++) {  	string elementID = " ";  	int elementIndex = -9;  	double distance = 10e30;  	IElementSet elementSet = (IElementSet)_elementSets [elementSetNumber];  	if (elementSetNumber == 0) {  		this.label7.Text = elementSet.Caption.Substring (0' Math.Min (20' elementSet.Caption.Length));  	}  	if (elementSetNumber == 1) {  		this.label9.Text = elementSet.Caption.Substring (0' Math.Min (20' elementSet.Caption.Length));  	}  	for (int index = 0; index < elementSet.ElementCount; index++) {  		if (((IElementSet)_elementSets [elementSetNumber]).ElementType == ElementType.Polygon) {  			XYPolygon xyPolygon = new XYPolygon ();  			for (int i = 0; i < elementSet.GetVertexCount (index); i++) {  				xyPolygon.Points.Add (new XYPoint (elementSet.GetVertexXCoordinate (index' i)' elementSet.GetVertexYCoordinate (index' i)));  			}  			if (XYGeometryTools.IsPointInPolygon (x' y' xyPolygon)) {  				elementID = elementSet.GetElementId (index).Id;  				elementIndex = index;  			}  		}  		if (((IElementSet)_elementSets [elementSetNumber]).ElementType == ElementType.PolyLine) {  			XYPolyline xyPolyline = new XYPolyline ();  			for (int i = 0; i < elementSet.GetVertexCount (index); i++) {  				xyPolyline.Points.Add (new XYPoint (elementSet.GetVertexXCoordinate (index' i)' elementSet.GetVertexYCoordinate (index' i)));  			}  			double xx = XYGeometryTools.CalculatePolylineToPointDistance (xyPolyline' new XYPoint (x' y));  			if (xx < distance) {  				distance = xx;  				if (xx < 0.3 * xyPolyline.GetLength ()) {  					elementIndex = index;  					elementID = elementSet.GetElementId (index).Id;  				}  			}  		}  		if (elementSetNumber == 0 && elementIndex >= 0) {  			this.label4.Text = "Index: " + elementIndex.ToString ();  			this.label8.Text = "ID: " + elementID.Substring (0' Math.Min (17' elementID.Length));  		}  		if (elementSetNumber == 1 && elementIndex >= 0) {  			this.label10.Text = "Index: " + elementIndex.ToString ();  			this.label11.Text = "ID: " + elementID.Substring (0' Math.Min (17' elementID.Length));  		}  	}  }  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,panelViewer_MouseMove,The following statement contains a magic number: for (int elementSetNumber = 0; elementSetNumber < this._elementSets.Count; elementSetNumber++) {  	string elementID = " ";  	int elementIndex = -9;  	double distance = 10e30;  	IElementSet elementSet = (IElementSet)_elementSets [elementSetNumber];  	if (elementSetNumber == 0) {  		this.label7.Text = elementSet.Caption.Substring (0' Math.Min (20' elementSet.Caption.Length));  	}  	if (elementSetNumber == 1) {  		this.label9.Text = elementSet.Caption.Substring (0' Math.Min (20' elementSet.Caption.Length));  	}  	for (int index = 0; index < elementSet.ElementCount; index++) {  		if (((IElementSet)_elementSets [elementSetNumber]).ElementType == ElementType.Polygon) {  			XYPolygon xyPolygon = new XYPolygon ();  			for (int i = 0; i < elementSet.GetVertexCount (index); i++) {  				xyPolygon.Points.Add (new XYPoint (elementSet.GetVertexXCoordinate (index' i)' elementSet.GetVertexYCoordinate (index' i)));  			}  			if (XYGeometryTools.IsPointInPolygon (x' y' xyPolygon)) {  				elementID = elementSet.GetElementId (index).Id;  				elementIndex = index;  			}  		}  		if (((IElementSet)_elementSets [elementSetNumber]).ElementType == ElementType.PolyLine) {  			XYPolyline xyPolyline = new XYPolyline ();  			for (int i = 0; i < elementSet.GetVertexCount (index); i++) {  				xyPolyline.Points.Add (new XYPoint (elementSet.GetVertexXCoordinate (index' i)' elementSet.GetVertexYCoordinate (index' i)));  			}  			double xx = XYGeometryTools.CalculatePolylineToPointDistance (xyPolyline' new XYPoint (x' y));  			if (xx < distance) {  				distance = xx;  				if (xx < 0.3 * xyPolyline.GetLength ()) {  					elementIndex = index;  					elementID = elementSet.GetElementId (index).Id;  				}  			}  		}  		if (elementSetNumber == 0 && elementIndex >= 0) {  			this.label4.Text = "Index: " + elementIndex.ToString ();  			this.label8.Text = "ID: " + elementID.Substring (0' Math.Min (17' elementID.Length));  		}  		if (elementSetNumber == 1 && elementIndex >= 0) {  			this.label10.Text = "Index: " + elementIndex.ToString ();  			this.label11.Text = "ID: " + elementID.Substring (0' Math.Min (17' elementID.Length));  		}  	}  }  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,panelViewer_MouseMove,The following statement contains a magic number: if (elementSetNumber == 0) {  	this.label7.Text = elementSet.Caption.Substring (0' Math.Min (20' elementSet.Caption.Length));  }  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,panelViewer_MouseMove,The following statement contains a magic number: this.label7.Text = elementSet.Caption.Substring (0' Math.Min (20' elementSet.Caption.Length));  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,panelViewer_MouseMove,The following statement contains a magic number: if (elementSetNumber == 1) {  	this.label9.Text = elementSet.Caption.Substring (0' Math.Min (20' elementSet.Caption.Length));  }  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,panelViewer_MouseMove,The following statement contains a magic number: this.label9.Text = elementSet.Caption.Substring (0' Math.Min (20' elementSet.Caption.Length));  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,panelViewer_MouseMove,The following statement contains a magic number: for (int index = 0; index < elementSet.ElementCount; index++) {  	if (((IElementSet)_elementSets [elementSetNumber]).ElementType == ElementType.Polygon) {  		XYPolygon xyPolygon = new XYPolygon ();  		for (int i = 0; i < elementSet.GetVertexCount (index); i++) {  			xyPolygon.Points.Add (new XYPoint (elementSet.GetVertexXCoordinate (index' i)' elementSet.GetVertexYCoordinate (index' i)));  		}  		if (XYGeometryTools.IsPointInPolygon (x' y' xyPolygon)) {  			elementID = elementSet.GetElementId (index).Id;  			elementIndex = index;  		}  	}  	if (((IElementSet)_elementSets [elementSetNumber]).ElementType == ElementType.PolyLine) {  		XYPolyline xyPolyline = new XYPolyline ();  		for (int i = 0; i < elementSet.GetVertexCount (index); i++) {  			xyPolyline.Points.Add (new XYPoint (elementSet.GetVertexXCoordinate (index' i)' elementSet.GetVertexYCoordinate (index' i)));  		}  		double xx = XYGeometryTools.CalculatePolylineToPointDistance (xyPolyline' new XYPoint (x' y));  		if (xx < distance) {  			distance = xx;  			if (xx < 0.3 * xyPolyline.GetLength ()) {  				elementIndex = index;  				elementID = elementSet.GetElementId (index).Id;  			}  		}  	}  	if (elementSetNumber == 0 && elementIndex >= 0) {  		this.label4.Text = "Index: " + elementIndex.ToString ();  		this.label8.Text = "ID: " + elementID.Substring (0' Math.Min (17' elementID.Length));  	}  	if (elementSetNumber == 1 && elementIndex >= 0) {  		this.label10.Text = "Index: " + elementIndex.ToString ();  		this.label11.Text = "ID: " + elementID.Substring (0' Math.Min (17' elementID.Length));  	}  }  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,panelViewer_MouseMove,The following statement contains a magic number: for (int index = 0; index < elementSet.ElementCount; index++) {  	if (((IElementSet)_elementSets [elementSetNumber]).ElementType == ElementType.Polygon) {  		XYPolygon xyPolygon = new XYPolygon ();  		for (int i = 0; i < elementSet.GetVertexCount (index); i++) {  			xyPolygon.Points.Add (new XYPoint (elementSet.GetVertexXCoordinate (index' i)' elementSet.GetVertexYCoordinate (index' i)));  		}  		if (XYGeometryTools.IsPointInPolygon (x' y' xyPolygon)) {  			elementID = elementSet.GetElementId (index).Id;  			elementIndex = index;  		}  	}  	if (((IElementSet)_elementSets [elementSetNumber]).ElementType == ElementType.PolyLine) {  		XYPolyline xyPolyline = new XYPolyline ();  		for (int i = 0; i < elementSet.GetVertexCount (index); i++) {  			xyPolyline.Points.Add (new XYPoint (elementSet.GetVertexXCoordinate (index' i)' elementSet.GetVertexYCoordinate (index' i)));  		}  		double xx = XYGeometryTools.CalculatePolylineToPointDistance (xyPolyline' new XYPoint (x' y));  		if (xx < distance) {  			distance = xx;  			if (xx < 0.3 * xyPolyline.GetLength ()) {  				elementIndex = index;  				elementID = elementSet.GetElementId (index).Id;  			}  		}  	}  	if (elementSetNumber == 0 && elementIndex >= 0) {  		this.label4.Text = "Index: " + elementIndex.ToString ();  		this.label8.Text = "ID: " + elementID.Substring (0' Math.Min (17' elementID.Length));  	}  	if (elementSetNumber == 1 && elementIndex >= 0) {  		this.label10.Text = "Index: " + elementIndex.ToString ();  		this.label11.Text = "ID: " + elementID.Substring (0' Math.Min (17' elementID.Length));  	}  }  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,panelViewer_MouseMove,The following statement contains a magic number: for (int index = 0; index < elementSet.ElementCount; index++) {  	if (((IElementSet)_elementSets [elementSetNumber]).ElementType == ElementType.Polygon) {  		XYPolygon xyPolygon = new XYPolygon ();  		for (int i = 0; i < elementSet.GetVertexCount (index); i++) {  			xyPolygon.Points.Add (new XYPoint (elementSet.GetVertexXCoordinate (index' i)' elementSet.GetVertexYCoordinate (index' i)));  		}  		if (XYGeometryTools.IsPointInPolygon (x' y' xyPolygon)) {  			elementID = elementSet.GetElementId (index).Id;  			elementIndex = index;  		}  	}  	if (((IElementSet)_elementSets [elementSetNumber]).ElementType == ElementType.PolyLine) {  		XYPolyline xyPolyline = new XYPolyline ();  		for (int i = 0; i < elementSet.GetVertexCount (index); i++) {  			xyPolyline.Points.Add (new XYPoint (elementSet.GetVertexXCoordinate (index' i)' elementSet.GetVertexYCoordinate (index' i)));  		}  		double xx = XYGeometryTools.CalculatePolylineToPointDistance (xyPolyline' new XYPoint (x' y));  		if (xx < distance) {  			distance = xx;  			if (xx < 0.3 * xyPolyline.GetLength ()) {  				elementIndex = index;  				elementID = elementSet.GetElementId (index).Id;  			}  		}  	}  	if (elementSetNumber == 0 && elementIndex >= 0) {  		this.label4.Text = "Index: " + elementIndex.ToString ();  		this.label8.Text = "ID: " + elementID.Substring (0' Math.Min (17' elementID.Length));  	}  	if (elementSetNumber == 1 && elementIndex >= 0) {  		this.label10.Text = "Index: " + elementIndex.ToString ();  		this.label11.Text = "ID: " + elementID.Substring (0' Math.Min (17' elementID.Length));  	}  }  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,panelViewer_MouseMove,The following statement contains a magic number: if (((IElementSet)_elementSets [elementSetNumber]).ElementType == ElementType.PolyLine) {  	XYPolyline xyPolyline = new XYPolyline ();  	for (int i = 0; i < elementSet.GetVertexCount (index); i++) {  		xyPolyline.Points.Add (new XYPoint (elementSet.GetVertexXCoordinate (index' i)' elementSet.GetVertexYCoordinate (index' i)));  	}  	double xx = XYGeometryTools.CalculatePolylineToPointDistance (xyPolyline' new XYPoint (x' y));  	if (xx < distance) {  		distance = xx;  		if (xx < 0.3 * xyPolyline.GetLength ()) {  			elementIndex = index;  			elementID = elementSet.GetElementId (index).Id;  		}  	}  }  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,panelViewer_MouseMove,The following statement contains a magic number: if (xx < distance) {  	distance = xx;  	if (xx < 0.3 * xyPolyline.GetLength ()) {  		elementIndex = index;  		elementID = elementSet.GetElementId (index).Id;  	}  }  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,panelViewer_MouseMove,The following statement contains a magic number: if (xx < 0.3 * xyPolyline.GetLength ()) {  	elementIndex = index;  	elementID = elementSet.GetElementId (index).Id;  }  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,panelViewer_MouseMove,The following statement contains a magic number: if (elementSetNumber == 0 && elementIndex >= 0) {  	this.label4.Text = "Index: " + elementIndex.ToString ();  	this.label8.Text = "ID: " + elementID.Substring (0' Math.Min (17' elementID.Length));  }  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,panelViewer_MouseMove,The following statement contains a magic number: this.label8.Text = "ID: " + elementID.Substring (0' Math.Min (17' elementID.Length));  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,panelViewer_MouseMove,The following statement contains a magic number: if (elementSetNumber == 1 && elementIndex >= 0) {  	this.label10.Text = "Index: " + elementIndex.ToString ();  	this.label11.Text = "ID: " + elementID.Substring (0' Math.Min (17' elementID.Length));  }  
Magic Number,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,panelViewer_MouseMove,The following statement contains a magic number: this.label11.Text = "ID: " + elementID.Substring (0' Math.Min (17' elementID.Length));  
Magic Number,Oatc.OpenMI.Gui.Controls,ExchangeItemSelector,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ExchangeItemSelector.cs,ImageIndex,The following statement contains a magic number: switch (type) {  case ElementType.IdBased:  	return 2;  case ElementType.Point:  	return 3;  case ElementType.PolyLine:  	return 5;  case ElementType.Polygon:  	return 6;  /*             case ElementType.Polyhedron:                 return 11;                  */default:  	break;  }  
Magic Number,Oatc.OpenMI.Gui.Controls,ExchangeItemSelector,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ExchangeItemSelector.cs,ImageIndex,The following statement contains a magic number: switch (type) {  case ElementType.IdBased:  	return 2;  case ElementType.Point:  	return 3;  case ElementType.PolyLine:  	return 5;  case ElementType.Polygon:  	return 6;  /*             case ElementType.Polyhedron:                 return 11;                  */default:  	break;  }  
Magic Number,Oatc.OpenMI.Gui.Controls,ExchangeItemSelector,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ExchangeItemSelector.cs,ImageIndex,The following statement contains a magic number: switch (type) {  case ElementType.IdBased:  	return 2;  case ElementType.Point:  	return 3;  case ElementType.PolyLine:  	return 5;  case ElementType.Polygon:  	return 6;  /*             case ElementType.Polyhedron:                 return 11;                  */default:  	break;  }  
Magic Number,Oatc.OpenMI.Gui.Controls,ExchangeItemSelector,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ExchangeItemSelector.cs,ImageIndex,The following statement contains a magic number: switch (type) {  case ElementType.IdBased:  	return 2;  case ElementType.Point:  	return 3;  case ElementType.PolyLine:  	return 5;  case ElementType.Polygon:  	return 6;  /*             case ElementType.Polyhedron:                 return 11;                  */default:  	break;  }  
Magic Number,Oatc.OpenMI.Gui.Controls,ExchangeItemSelector,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ExchangeItemSelector.cs,ImageIndex,The following statement contains a magic number: return 2;  
Magic Number,Oatc.OpenMI.Gui.Controls,ExchangeItemSelector,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ExchangeItemSelector.cs,ImageIndex,The following statement contains a magic number: return 3;  
Magic Number,Oatc.OpenMI.Gui.Controls,ExchangeItemSelector,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ExchangeItemSelector.cs,ImageIndex,The following statement contains a magic number: return 5;  
Magic Number,Oatc.OpenMI.Gui.Controls,ExchangeItemSelector,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ExchangeItemSelector.cs,ImageIndex,The following statement contains a magic number: return 6;  
Magic Number,Oatc.OpenMI.Gui.Controls,ExchangeItemSelector,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ExchangeItemSelector.cs,ImageIndex,The following statement contains a magic number: return 11;  
Magic Number,Oatc.OpenMI.Gui.Controls,ExchangeItemSelector,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ExchangeItemSelector.cs,InitializeComponent,The following statement contains a magic number: this.treeView.Size = new System.Drawing.Size (256' 328);  
Magic Number,Oatc.OpenMI.Gui.Controls,ExchangeItemSelector,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ExchangeItemSelector.cs,InitializeComponent,The following statement contains a magic number: this.treeView.Size = new System.Drawing.Size (256' 328);  
Magic Number,Oatc.OpenMI.Gui.Controls,ExchangeItemSelector,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ExchangeItemSelector.cs,InitializeComponent,The following statement contains a magic number: this.imageList.Images.SetKeyName (2' "");  
Magic Number,Oatc.OpenMI.Gui.Controls,ExchangeItemSelector,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ExchangeItemSelector.cs,InitializeComponent,The following statement contains a magic number: this.imageList.Images.SetKeyName (3' "");  
Magic Number,Oatc.OpenMI.Gui.Controls,ExchangeItemSelector,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ExchangeItemSelector.cs,InitializeComponent,The following statement contains a magic number: this.imageList.Images.SetKeyName (4' "");  
Magic Number,Oatc.OpenMI.Gui.Controls,ExchangeItemSelector,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ExchangeItemSelector.cs,InitializeComponent,The following statement contains a magic number: this.imageList.Images.SetKeyName (5' "");  
Magic Number,Oatc.OpenMI.Gui.Controls,ExchangeItemSelector,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ExchangeItemSelector.cs,InitializeComponent,The following statement contains a magic number: this.imageList.Images.SetKeyName (6' "");  
Magic Number,Oatc.OpenMI.Gui.Controls,ExchangeItemSelector,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ExchangeItemSelector.cs,InitializeComponent,The following statement contains a magic number: this.imageList.Images.SetKeyName (7' "");  
Magic Number,Oatc.OpenMI.Gui.Controls,ExchangeItemSelector,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ExchangeItemSelector.cs,InitializeComponent,The following statement contains a magic number: this.imageList.Images.SetKeyName (8' "");  
Magic Number,Oatc.OpenMI.Gui.Controls,ExchangeItemSelector,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ExchangeItemSelector.cs,InitializeComponent,The following statement contains a magic number: this.imageList.Images.SetKeyName (9' "");  
Magic Number,Oatc.OpenMI.Gui.Controls,ExchangeItemSelector,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ExchangeItemSelector.cs,InitializeComponent,The following statement contains a magic number: this.imageList.Images.SetKeyName (10' "");  
Magic Number,Oatc.OpenMI.Gui.Controls,ExchangeItemSelector,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ExchangeItemSelector.cs,InitializeComponent,The following statement contains a magic number: this.imageList.Images.SetKeyName (11' "");  
Magic Number,Oatc.OpenMI.Gui.Controls,ExchangeItemSelector,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ExchangeItemSelector.cs,InitializeComponent,The following statement contains a magic number: this.imageList.Images.SetKeyName (12' "");  
Magic Number,Oatc.OpenMI.Gui.Controls,ExchangeItemSelector,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ExchangeItemSelector.cs,InitializeComponent,The following statement contains a magic number: this.imageList.Images.SetKeyName (13' "RESOURCE.BMP");  
Magic Number,Oatc.OpenMI.Gui.Controls,ExchangeItemSelector,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ExchangeItemSelector.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size (256' 328);  
Magic Number,Oatc.OpenMI.Gui.Controls,ExchangeItemSelector,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ExchangeItemSelector.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size (256' 328);  
Missing Default,Oatc.OpenMI.Gui.ConfigurationEditor,ElementSetViewer,C:\repos\cbuahin_OpenMI\Source\csharp\Oatc.OpenMI\Gui\Controls\ElementSetViewer.cs,panelViewer_Paint,The following switch statement is missing a default case: switch (elementSet.ElementType) {  case ElementType.IdBased:  	pen = GetNextPen ();  	e.Graphics.DrawString ("ID: " + elementSet.Caption' _font' pen.Brush' _margin' _margin + idBasedCount * 20);  	idBasedCount++;  	break;  case ElementType.Point:  	pen = GetNextPen ();  	for (int i = 0; i < elementSet.ElementCount; i++) {  		x1 = TransX (elementSet.GetVertexXCoordinate (i' 0));  		y1 = TransY (elementSet.GetVertexYCoordinate (i' 0));  		e.Graphics.FillEllipse (pen.Brush' x1' y1' 5' 5);  	}  	break;  case ElementType.Polygon:  	pen = GetNextPen (_lineWidth);  	for (int i = 0; i < elementSet.ElementCount; i++) {  		for (int n = 0; n < elementSet.GetVertexCount (i); n++) {  			if (n == 0) {  				x1 = TransX (elementSet.GetVertexXCoordinate (i' elementSet.GetVertexCount (i) - 1));  				y1 = TransY (elementSet.GetVertexYCoordinate (i' elementSet.GetVertexCount (i) - 1));  				x2 = TransX (elementSet.GetVertexXCoordinate (i' 0));  				y2 = TransY (elementSet.GetVertexYCoordinate (i' 0));  			}  			else {  				x1 = TransX (elementSet.GetVertexXCoordinate (i' n - 1));  				y1 = TransY (elementSet.GetVertexYCoordinate (i' n - 1));  				x2 = TransX (elementSet.GetVertexXCoordinate (i' n));  				y2 = TransY (elementSet.GetVertexYCoordinate (i' n));  			}  			e.Graphics.DrawLine (pen' x1' y1' x2' y2);  		}  	}  	break;  case ElementType.PolyLine:  	pen = GetNextPen (_lineWidth);  	for (int i = 0; i < elementSet.ElementCount; i++) {  		for (int n = 1; n < elementSet.GetVertexCount (i); n++) {  			x1 = TransX (elementSet.GetVertexXCoordinate (i' n - 1));  			y1 = TransY (elementSet.GetVertexYCoordinate (i' n - 1));  			x2 = TransX (elementSet.GetVertexXCoordinate (i' n));  			y2 = TransY (elementSet.GetVertexYCoordinate (i' n));  			e.Graphics.DrawLine (pen' x1' y1' x2' y2);  		}  	}  	break;  }  
