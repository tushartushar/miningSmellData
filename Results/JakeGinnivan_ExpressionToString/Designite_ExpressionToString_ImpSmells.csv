Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ExpressionToString,ExpressionStringBuilder,C:\repos\JakeGinnivan_ExpressionToString\src\ExpressionToString\ExpressionStringBuilder.cs,ToString,Cyclomatic complexity of the method is 21
Long Statement,ExpressionToString.Tests,ExpressionStringBuilderTests,C:\repos\JakeGinnivan_ExpressionToString\src\ExpressionToString\Tests\ExpressionStringBuilderTests.cs,VerifyFormulas,The length of the statement  "	VerifyExpression (() => (int)(notifies.SubTotal * (1m + (notifies.TaxPercentage / 100m)))' "(notifies.SubTotal * (1 + (notifies.TaxPercentage / 100)))"); " is 153.
Long Statement,ExpressionToString.Tests,ExpressionStringBuilderTests,C:\repos\JakeGinnivan_ExpressionToString\src\ExpressionToString\Tests\ExpressionStringBuilderTests.cs,VerifyFormulas,The length of the statement  "	VerifyExpressionWithTruncate (() => StaticMethodLotsOfArguments (notifies.TaxPercentage' notifies.TaxPercentage' notifies.TaxPercentage' notifies.TaxPercentage)' "StaticMethodLotsOfArguments(...)"); " is 198.
Long Statement,ExpressionToString.Tests,ExpressionStringBuilderTests,C:\repos\JakeGinnivan_ExpressionToString\src\ExpressionToString\Tests\ExpressionStringBuilderTests.cs,VerifyFormulas,The length of the statement  "	VerifyExpression (() => StaticMethodLotsOfArguments (notifies.TaxPercentage' notifies.TaxPercentage' notifies.TaxPercentage' notifies.TaxPercentage)' "StaticMethodLotsOfArguments(notifies.TaxPercentage' notifies.TaxPercentage' notifies.TaxPercentage' notifies.TaxPercentage)"); " is 277.
Long Statement,ExpressionToString,ExpressionStringBuilder,C:\repos\JakeGinnivan_ExpressionToString\src\ExpressionToString\ExpressionStringBuilder.cs,VisitMember,The length of the statement  "		Out (node.Member.DeclaringType == null ? node.Member.Name : string.Format ("{0}.{1}"' SimplifyType (node.Member.DeclaringType)' node.Member.Name)); " is 147.
Long Statement,ExpressionToString,ExpressionStringBuilder,C:\repos\JakeGinnivan_ExpressionToString\src\ExpressionToString\ExpressionStringBuilder.cs,CheckIfAnonymousType,The length of the statement  "	return isDefined && (type.IsGenericType && type.Name.Contains ("AnonymousType") || type.Name.Contains ("DisplayClass")) && (type.Name.StartsWith ("<>") || type.Name.StartsWith ("VB$")); " is 185.
Magic Number,ExpressionToString.Tests,ExpressionStringBuilderTests,C:\repos\JakeGinnivan_ExpressionToString\src\ExpressionToString\Tests\ExpressionStringBuilderTests.cs,VerifyAction,The following statement contains a magic number: VerifyExpression (() => action2 (5)' "action2(5)");  
Magic Number,ExpressionToString,ExpressionStringBuilder,C:\repos\JakeGinnivan_ExpressionToString\src\ExpressionToString\ExpressionStringBuilder.cs,VisitMethodCall,The following statement contains a magic number: if (args.Length > 3 && trimLongArgumentList) {  	Out ("...");  }  else {  	VisitArguments (args);  }  
