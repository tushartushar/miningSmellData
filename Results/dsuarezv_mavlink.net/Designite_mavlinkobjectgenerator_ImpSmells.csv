Implementation smell,Namespace,Class,File,Method,Description
Complex Method,MavLinkObjectGenerator,CSharpGenerator,F:\newReposMay17\dsuarezv_mavlink.net\mavlinkobjectgenerator\CSharpGenerator.cs,GetBaseCSharpType,Cyclomatic complexity of the method is 12
Complex Method,MavLinkObjectGenerator,CSharpGenerator,F:\newReposMay17\dsuarezv_mavlink.net\mavlinkobjectgenerator\CSharpGenerator.cs,GetBaseReadOperation,Cyclomatic complexity of the method is 13
Complex Method,MavLinkObjectGenerator,XmlParser,F:\newReposMay17\dsuarezv_mavlink.net\mavlinkobjectgenerator\XmlParser.cs,Parse,Cyclomatic complexity of the method is 51
Complex Method,MavLinkObjectGenerator,XmlParser,F:\newReposMay17\dsuarezv_mavlink.net\mavlinkobjectgenerator\XmlParser.cs,GetFieldTypeFromString,Cyclomatic complexity of the method is 13
Complex Method,MavLinkObjectGenerator,XmlParser,F:\newReposMay17\dsuarezv_mavlink.net\mavlinkobjectgenerator\XmlParser.cs,SortFields,Cyclomatic complexity of the method is 18
Long Statement,MavLinkObjectGenerator,CSharpGenerator,F:\newReposMay17\dsuarezv_mavlink.net\mavlinkobjectgenerator\CSharpGenerator.cs,WriteToString,The length of the statement  "				WL ("            sb.AppendFormat(\"        [{1}]: {{0}}\\n\"' {2}[{1}]);"' GetFieldName (f)' i' GetPrivateFieldName (f)); " is 121.
Long Statement,MavLinkObjectGenerator,CSharpGenerator,F:\newReposMay17\dsuarezv_mavlink.net\mavlinkobjectgenerator\CSharpGenerator.cs,WritePrivateFields,The length of the statement  "		WL ("        private {0}{1} {2}{3};"' GetCSharpType (f)' GetArrayModifier (f' false)' GetPrivateFieldName (f)' GetDefaultValue (f)); " is 132.
Long Statement,MavLinkObjectGenerator,CSharpGenerator,F:\newReposMay17\dsuarezv_mavlink.net\mavlinkobjectgenerator\CSharpGenerator.cs,GetEnumItems,The length of the statement  "		escapedEnum.Add (string.Format ("\r\n\r\n        /// <summary> {0} </summary>\r\n        {1}{2}"' GetSanitizedComment (entry.Description)' GetEnumEntryName (en' entry)' val)); " is 175.
Long Statement,MavLinkObjectGenerator,XmlParser,F:\newReposMay17\dsuarezv_mavlink.net\mavlinkobjectgenerator\XmlParser.cs,ProcessInclude,The length of the statement  "	string targetFileName = (Path.IsPathRooted (includeFileName)) ? includeFileName : Path.Combine (basePath' includeFileName); " is 123.
Magic Number,MavLinkObjectGenerator,X25Crc,F:\newReposMay17\dsuarezv_mavlink.net\mavlinkobjectgenerator\X25Crc.cs,X25CrcAccumulate,The following statement contains a magic number: unchecked {  	byte ch = (byte)(b ^ (byte)(crc & 0x00ff));  	ch = (byte)(ch ^ (ch << 4));  	return (UInt16)((crc >> 8) ^ (ch << 8) ^ (ch << 3) ^ (ch >> 4));  }  
Magic Number,MavLinkObjectGenerator,X25Crc,F:\newReposMay17\dsuarezv_mavlink.net\mavlinkobjectgenerator\X25Crc.cs,X25CrcAccumulate,The following statement contains a magic number: unchecked {  	byte ch = (byte)(b ^ (byte)(crc & 0x00ff));  	ch = (byte)(ch ^ (ch << 4));  	return (UInt16)((crc >> 8) ^ (ch << 8) ^ (ch << 3) ^ (ch >> 4));  }  
Magic Number,MavLinkObjectGenerator,X25Crc,F:\newReposMay17\dsuarezv_mavlink.net\mavlinkobjectgenerator\X25Crc.cs,X25CrcAccumulate,The following statement contains a magic number: unchecked {  	byte ch = (byte)(b ^ (byte)(crc & 0x00ff));  	ch = (byte)(ch ^ (ch << 4));  	return (UInt16)((crc >> 8) ^ (ch << 8) ^ (ch << 3) ^ (ch >> 4));  }  
Magic Number,MavLinkObjectGenerator,X25Crc,F:\newReposMay17\dsuarezv_mavlink.net\mavlinkobjectgenerator\X25Crc.cs,X25CrcAccumulate,The following statement contains a magic number: unchecked {  	byte ch = (byte)(b ^ (byte)(crc & 0x00ff));  	ch = (byte)(ch ^ (ch << 4));  	return (UInt16)((crc >> 8) ^ (ch << 8) ^ (ch << 3) ^ (ch >> 4));  }  
Magic Number,MavLinkObjectGenerator,X25Crc,F:\newReposMay17\dsuarezv_mavlink.net\mavlinkobjectgenerator\X25Crc.cs,X25CrcAccumulate,The following statement contains a magic number: unchecked {  	byte ch = (byte)(b ^ (byte)(crc & 0x00ff));  	ch = (byte)(ch ^ (ch << 4));  	return (UInt16)((crc >> 8) ^ (ch << 8) ^ (ch << 3) ^ (ch >> 4));  }  
Magic Number,MavLinkObjectGenerator,X25Crc,F:\newReposMay17\dsuarezv_mavlink.net\mavlinkobjectgenerator\X25Crc.cs,X25CrcAccumulate,The following statement contains a magic number: ch = (byte)(ch ^ (ch << 4));  
Magic Number,MavLinkObjectGenerator,X25Crc,F:\newReposMay17\dsuarezv_mavlink.net\mavlinkobjectgenerator\X25Crc.cs,X25CrcAccumulate,The following statement contains a magic number: return (UInt16)((crc >> 8) ^ (ch << 8) ^ (ch << 3) ^ (ch >> 4));  
Magic Number,MavLinkObjectGenerator,X25Crc,F:\newReposMay17\dsuarezv_mavlink.net\mavlinkobjectgenerator\X25Crc.cs,X25CrcAccumulate,The following statement contains a magic number: return (UInt16)((crc >> 8) ^ (ch << 8) ^ (ch << 3) ^ (ch >> 4));  
Magic Number,MavLinkObjectGenerator,X25Crc,F:\newReposMay17\dsuarezv_mavlink.net\mavlinkobjectgenerator\X25Crc.cs,X25CrcAccumulate,The following statement contains a magic number: return (UInt16)((crc >> 8) ^ (ch << 8) ^ (ch << 3) ^ (ch >> 4));  
Magic Number,MavLinkObjectGenerator,X25Crc,F:\newReposMay17\dsuarezv_mavlink.net\mavlinkobjectgenerator\X25Crc.cs,X25CrcAccumulate,The following statement contains a magic number: return (UInt16)((crc >> 8) ^ (ch << 8) ^ (ch << 3) ^ (ch >> 4));  
Magic Number,MavLinkObjectGenerator,XmlParser,F:\newReposMay17\dsuarezv_mavlink.net\mavlinkobjectgenerator\XmlParser.cs,Parse,The following statement contains a magic number: while (reader.Read ()) {  	if (reader.IsStartElement ()) {  		switch (reader.Name) {  		case "include":  			ProcessInclude (reader.ReadElementContentAsString ()' result);  			break;  		case "version":  			result.Version = reader.ReadElementContentAsInt ();  			break;  		case "message":  			// if (currentMsg != null) SortFields(currentMsg);   //<--- if condition deleted   			currentMsg = new MessageData ();  			currentObject = currentMsg;  			currentMsg.Name = reader.GetAttribute ("name");  			currentMsg.Id = GetIntFromString (reader.GetAttribute ("id"));  			if (currentMsg.Id < 256)  				// Msg id field is a byte' discard anything beyond 255  				result.Messages.Add (currentMsg.Name' currentMsg);  			break;  		case "description":  			currentObject.Description = reader.ReadString ();  			break;  		case "field":  			currentField = new FieldData ();  			currentField.Name = reader.GetAttribute ("name");  			currentField.TypeString = reader.GetAttribute ("type");  			currentField.Type = GetFieldTypeFromString (currentField.TypeString);  			currentField.NumElements = GetFieldTypeNumElements (currentField.TypeString);  			currentField.Description = reader.ReadElementContentAsString ();  			UpdateEnumFields (result' currentField);  			currentMsg.Fields.Add (currentField);  			break;  		case "enum":  			currentEnum = GetEnumDataForName (result' reader.GetAttribute ("name"));  			currentObject = currentEnum;  			result.Enumerations [currentEnum.Name] = currentEnum;  			currentEnumValue = 0;  			break;  		case "entry":  			currentEntry = new EnumEntry ();  			currentObject = currentEntry;  			currentEntry.Name = reader.GetAttribute ("name");  			currentEntry.Value = GetIntFromString (reader.GetAttribute ("value")' ++currentEnumValue);  			currentEnumValue = currentEntry.Value;  			currentEnum.Entries.Add (currentEntry);  			break;  		case "param":  			currentParam = new EnumEntryParameter ();  			currentParam.Index = GetIntFromString (reader.GetAttribute ("index"));  			currentParam.Description = reader.ReadElementContentAsString ();  			currentEntry.Parameters.Add (currentParam);  			break;  		}  	} else//<----- Else condition added to control closing of the current node; *** BEGIN ****   	 {  		if (reader.Name == "message") {  			if (currentMsg != null) {  				SortFields (currentMsg);  			}  		}  	}  	//<----- *** END ***   }  
Magic Number,MavLinkObjectGenerator,XmlParser,F:\newReposMay17\dsuarezv_mavlink.net\mavlinkobjectgenerator\XmlParser.cs,Parse,The following statement contains a magic number: if (reader.IsStartElement ()) {  	switch (reader.Name) {  	case "include":  		ProcessInclude (reader.ReadElementContentAsString ()' result);  		break;  	case "version":  		result.Version = reader.ReadElementContentAsInt ();  		break;  	case "message":  		// if (currentMsg != null) SortFields(currentMsg);   //<--- if condition deleted   		currentMsg = new MessageData ();  		currentObject = currentMsg;  		currentMsg.Name = reader.GetAttribute ("name");  		currentMsg.Id = GetIntFromString (reader.GetAttribute ("id"));  		if (currentMsg.Id < 256)  			// Msg id field is a byte' discard anything beyond 255  			result.Messages.Add (currentMsg.Name' currentMsg);  		break;  	case "description":  		currentObject.Description = reader.ReadString ();  		break;  	case "field":  		currentField = new FieldData ();  		currentField.Name = reader.GetAttribute ("name");  		currentField.TypeString = reader.GetAttribute ("type");  		currentField.Type = GetFieldTypeFromString (currentField.TypeString);  		currentField.NumElements = GetFieldTypeNumElements (currentField.TypeString);  		currentField.Description = reader.ReadElementContentAsString ();  		UpdateEnumFields (result' currentField);  		currentMsg.Fields.Add (currentField);  		break;  	case "enum":  		currentEnum = GetEnumDataForName (result' reader.GetAttribute ("name"));  		currentObject = currentEnum;  		result.Enumerations [currentEnum.Name] = currentEnum;  		currentEnumValue = 0;  		break;  	case "entry":  		currentEntry = new EnumEntry ();  		currentObject = currentEntry;  		currentEntry.Name = reader.GetAttribute ("name");  		currentEntry.Value = GetIntFromString (reader.GetAttribute ("value")' ++currentEnumValue);  		currentEnumValue = currentEntry.Value;  		currentEnum.Entries.Add (currentEntry);  		break;  	case "param":  		currentParam = new EnumEntryParameter ();  		currentParam.Index = GetIntFromString (reader.GetAttribute ("index"));  		currentParam.Description = reader.ReadElementContentAsString ();  		currentEntry.Parameters.Add (currentParam);  		break;  	}  } else//<----- Else condition added to control closing of the current node; *** BEGIN ****    {  	if (reader.Name == "message") {  		if (currentMsg != null) {  			SortFields (currentMsg);  		}  	}  }  
Magic Number,MavLinkObjectGenerator,XmlParser,F:\newReposMay17\dsuarezv_mavlink.net\mavlinkobjectgenerator\XmlParser.cs,Parse,The following statement contains a magic number: switch (reader.Name) {  case "include":  	ProcessInclude (reader.ReadElementContentAsString ()' result);  	break;  case "version":  	result.Version = reader.ReadElementContentAsInt ();  	break;  case "message":  	// if (currentMsg != null) SortFields(currentMsg);   //<--- if condition deleted   	currentMsg = new MessageData ();  	currentObject = currentMsg;  	currentMsg.Name = reader.GetAttribute ("name");  	currentMsg.Id = GetIntFromString (reader.GetAttribute ("id"));  	if (currentMsg.Id < 256)  		// Msg id field is a byte' discard anything beyond 255  		result.Messages.Add (currentMsg.Name' currentMsg);  	break;  case "description":  	currentObject.Description = reader.ReadString ();  	break;  case "field":  	currentField = new FieldData ();  	currentField.Name = reader.GetAttribute ("name");  	currentField.TypeString = reader.GetAttribute ("type");  	currentField.Type = GetFieldTypeFromString (currentField.TypeString);  	currentField.NumElements = GetFieldTypeNumElements (currentField.TypeString);  	currentField.Description = reader.ReadElementContentAsString ();  	UpdateEnumFields (result' currentField);  	currentMsg.Fields.Add (currentField);  	break;  case "enum":  	currentEnum = GetEnumDataForName (result' reader.GetAttribute ("name"));  	currentObject = currentEnum;  	result.Enumerations [currentEnum.Name] = currentEnum;  	currentEnumValue = 0;  	break;  case "entry":  	currentEntry = new EnumEntry ();  	currentObject = currentEntry;  	currentEntry.Name = reader.GetAttribute ("name");  	currentEntry.Value = GetIntFromString (reader.GetAttribute ("value")' ++currentEnumValue);  	currentEnumValue = currentEntry.Value;  	currentEnum.Entries.Add (currentEntry);  	break;  case "param":  	currentParam = new EnumEntryParameter ();  	currentParam.Index = GetIntFromString (reader.GetAttribute ("index"));  	currentParam.Description = reader.ReadElementContentAsString ();  	currentEntry.Parameters.Add (currentParam);  	break;  }  
Magic Number,MavLinkObjectGenerator,XmlParser,F:\newReposMay17\dsuarezv_mavlink.net\mavlinkobjectgenerator\XmlParser.cs,Parse,The following statement contains a magic number: if (currentMsg.Id < 256)  	// Msg id field is a byte' discard anything beyond 255  	result.Messages.Add (currentMsg.Name' currentMsg);  
Missing Default,MavLinkObjectGenerator,XmlParser,F:\newReposMay17\dsuarezv_mavlink.net\mavlinkobjectgenerator\XmlParser.cs,Parse,The following switch statement is missing a default case: switch (reader.Name) {  case "include":  	ProcessInclude (reader.ReadElementContentAsString ()' result);  	break;  case "version":  	result.Version = reader.ReadElementContentAsInt ();  	break;  case "message":  	// if (currentMsg != null) SortFields(currentMsg);   //<--- if condition deleted   	currentMsg = new MessageData ();  	currentObject = currentMsg;  	currentMsg.Name = reader.GetAttribute ("name");  	currentMsg.Id = GetIntFromString (reader.GetAttribute ("id"));  	if (currentMsg.Id < 256)  		// Msg id field is a byte' discard anything beyond 255  		result.Messages.Add (currentMsg.Name' currentMsg);  	break;  case "description":  	currentObject.Description = reader.ReadString ();  	break;  case "field":  	currentField = new FieldData ();  	currentField.Name = reader.GetAttribute ("name");  	currentField.TypeString = reader.GetAttribute ("type");  	currentField.Type = GetFieldTypeFromString (currentField.TypeString);  	currentField.NumElements = GetFieldTypeNumElements (currentField.TypeString);  	currentField.Description = reader.ReadElementContentAsString ();  	UpdateEnumFields (result' currentField);  	currentMsg.Fields.Add (currentField);  	break;  case "enum":  	currentEnum = GetEnumDataForName (result' reader.GetAttribute ("name"));  	currentObject = currentEnum;  	result.Enumerations [currentEnum.Name] = currentEnum;  	currentEnumValue = 0;  	break;  case "entry":  	currentEntry = new EnumEntry ();  	currentObject = currentEntry;  	currentEntry.Name = reader.GetAttribute ("name");  	currentEntry.Value = GetIntFromString (reader.GetAttribute ("value")' ++currentEnumValue);  	currentEnumValue = currentEntry.Value;  	currentEnum.Entries.Add (currentEntry);  	break;  case "param":  	currentParam = new EnumEntryParameter ();  	currentParam.Index = GetIntFromString (reader.GetAttribute ("index"));  	currentParam.Description = reader.ReadElementContentAsString ();  	currentEntry.Parameters.Add (currentParam);  	break;  }  
