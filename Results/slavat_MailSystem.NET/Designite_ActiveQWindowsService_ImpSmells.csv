Implementation smell,Namespace,Class,File,Method,Description
Long Statement,ActiveQWindowsService,ActiveQ,C:\repos\slavat_MailSystem.NET\Queuing System\ActiveQWindowsService\ServiceMain.cs,OnStart,The length of the statement  "				EventLog.WriteEntry(string.Format("Initialization failed.\nSource : {0}\nMessage : {1}\nStack : {2}"'ex.Source'ex.Message'ex.StackTrace) " is 136.
Long Statement,ActiveQWindowsService,ActiveQ,C:\repos\slavat_MailSystem.NET\Queuing System\ActiveQWindowsService\ServiceMain.cs,OnCustomCommand,The length of the statement  "					Global.Log.WriteEvent(LogType.debug'string.Format("[CUSTOM COMMAND] Custom command received : '{0}' (show form)"'command)); " is 123.
Long Statement,ActiveQWindowsService,ActiveQ,C:\repos\slavat_MailSystem.NET\Queuing System\ActiveQWindowsService\ServiceMain.cs,OnCustomCommand,The length of the statement  "					Global.Log.WriteEvent(LogType.debug'string.Format("[CUSTOM COMMAND] Custom command received : '{0}' (reload config)"'command)); " is 127.
Magic Number,ActiveQWindowsService,ActiveQ,C:\repos\slavat_MailSystem.NET\Queuing System\ActiveQWindowsService\ServiceMain.cs,OnStart,The following statement contains a magic number: try  			{  				Global.InitializeLibrary("Config.xml"'LogType.normal);  				  				Thread.Sleep(1000);  				Global.StartActiveQ();  			}    			catch(Exception ex)  			{  				EventLog.WriteEntry(string.Format("Initialization failed.\nSource : {0}\nMessage : {1}\nStack : {2}"'ex.Source'ex.Message'ex.StackTrace)  					'EventLogEntryType.Error);      				Global.Log.WriteError("[SERVICE:START] " + ex.Message);  				Global.Log.WriteError("[SERVICE:START] " + ex.StackTrace);    				this.OnStop();  			}
Magic Number,ActiveQWindowsService,ActiveQ,C:\repos\slavat_MailSystem.NET\Queuing System\ActiveQWindowsService\ServiceMain.cs,OnCustomCommand,The following statement contains a magic number: switch(command)  			{  				case 200:  				{  					Global.Log.WriteEvent(LogType.debug'string.Format("[CUSTOM COMMAND] Custom command received : '{0}' (show form)"'command));  					  					if (ActiveQLibrary.Form.ManageForm.Form.Visible == false)  					{  						ActiveQLibrary.Form.ManageForm.Form.Visible = true;  					}  					ActiveQLibrary.Form.ManageForm.Form.WindowState = System.Windows.Forms.FormWindowState.Normal;  					    				} break;    				case 221:  				{  					Global.Log.WriteEvent(LogType.debug'string.Format("[CUSTOM COMMAND] Custom command received : '{0}' (stop)"'command));  					Global.StopActiveQ();    				} break;    				case 230:  				{  					Global.Log.WriteEvent(LogType.debug'string.Format("[CUSTOM COMMAND] Custom command received : '{0}' (reload config)"'command));    					Global.ReloadConfig();  				} break;    				default :   				{  					Global.Log.WriteError(string.Format("[CUSTOM COMMAND] Unkown command '{0}'"'command));  				} break;  			}
Magic Number,ActiveQWindowsService,ActiveQ,C:\repos\slavat_MailSystem.NET\Queuing System\ActiveQWindowsService\ServiceMain.cs,OnCustomCommand,The following statement contains a magic number: switch(command)  			{  				case 200:  				{  					Global.Log.WriteEvent(LogType.debug'string.Format("[CUSTOM COMMAND] Custom command received : '{0}' (show form)"'command));  					  					if (ActiveQLibrary.Form.ManageForm.Form.Visible == false)  					{  						ActiveQLibrary.Form.ManageForm.Form.Visible = true;  					}  					ActiveQLibrary.Form.ManageForm.Form.WindowState = System.Windows.Forms.FormWindowState.Normal;  					    				} break;    				case 221:  				{  					Global.Log.WriteEvent(LogType.debug'string.Format("[CUSTOM COMMAND] Custom command received : '{0}' (stop)"'command));  					Global.StopActiveQ();    				} break;    				case 230:  				{  					Global.Log.WriteEvent(LogType.debug'string.Format("[CUSTOM COMMAND] Custom command received : '{0}' (reload config)"'command));    					Global.ReloadConfig();  				} break;    				default :   				{  					Global.Log.WriteError(string.Format("[CUSTOM COMMAND] Unkown command '{0}'"'command));  				} break;  			}
Magic Number,ActiveQWindowsService,ActiveQ,C:\repos\slavat_MailSystem.NET\Queuing System\ActiveQWindowsService\ServiceMain.cs,OnCustomCommand,The following statement contains a magic number: switch(command)  			{  				case 200:  				{  					Global.Log.WriteEvent(LogType.debug'string.Format("[CUSTOM COMMAND] Custom command received : '{0}' (show form)"'command));  					  					if (ActiveQLibrary.Form.ManageForm.Form.Visible == false)  					{  						ActiveQLibrary.Form.ManageForm.Form.Visible = true;  					}  					ActiveQLibrary.Form.ManageForm.Form.WindowState = System.Windows.Forms.FormWindowState.Normal;  					    				} break;    				case 221:  				{  					Global.Log.WriteEvent(LogType.debug'string.Format("[CUSTOM COMMAND] Custom command received : '{0}' (stop)"'command));  					Global.StopActiveQ();    				} break;    				case 230:  				{  					Global.Log.WriteEvent(LogType.debug'string.Format("[CUSTOM COMMAND] Custom command received : '{0}' (reload config)"'command));    					Global.ReloadConfig();  				} break;    				default :   				{  					Global.Log.WriteError(string.Format("[CUSTOM COMMAND] Unkown command '{0}'"'command));  				} break;  			}
